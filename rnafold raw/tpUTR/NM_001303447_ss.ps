%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 16:51:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUUAAAUGAUAUGAAGAAAUCAGAGGUGAAAAUUGUACAUUGGGAAUAUAUUUAUGCAAAUUUUAUUGAAAUUUAUUGUAAAUAAAGAUUUUCUCAGUGGUCUAGAAAAUCA\
) } def
/len { sequence length } bind def

/coor [
[51.94738388 162.75999451]
[46.42853165 158.52919006]
[33.78980255 166.60771179]
[21.15107155 174.68623352]
[8.51234055 182.76475525]
[-4.12639093 190.84327698]
[-16.76512146 198.92179871]
[-20.02472305 217.47749329]
[-35.47229385 227.70077515]
[-53.21088028 223.59121704]
[-65.39371490 232.34213257]
[-77.57654572 241.09304810]
[-89.75937653 249.84396362]
[-89.70876312 265.36096191]
[-98.81575012 277.92449951]
[-113.57852173 282.70364380]
[-128.32049561 277.86068726]
[-137.37306213 265.25790405]
[-137.25535583 249.74127197]
[-128.01261902 237.27728271]
[-113.19886017 232.65856934]
[-98.51029968 237.66113281]
[-86.32746887 228.91021729]
[-74.14463043 220.15930176]
[-61.96179962 211.40837097]
[-62.58739090 199.86123657]
[-57.45325470 189.36479187]
[-47.75559235 182.63233948]
[-35.88634872 181.46763611]
[-24.84364128 186.28306580]
[-12.20491028 178.20454407]
[0.43382078 170.12602234]
[13.07255173 162.04750061]
[25.71128273 153.96897888]
[38.35001373 145.89045715]
[39.86277771 121.87956238]
[58.25232697 106.00999451]
[82.68810272 108.06564331]
[82.00848389 93.59207153]
[91.68441010 82.80677032]
[106.14661407 81.91754150]
[116.16343689 70.75226593]
[126.18025208 59.58698654]
[136.19706726 48.42171097]
[146.21388245 37.25643539]
[156.23069763 26.09115982]
[166.24751282 14.92588329]
[176.26432800 3.76060772]
[186.28114319 -7.40466833]
[181.62608337 -21.97441673]
[184.86735535 -36.81998825]
[195.03665161 -47.97577667]
[209.32887268 -52.51321411]
[223.87533569 -49.30914688]
[233.89215088 -60.47442245]
[243.90896606 -71.63970184]
[253.92578125 -82.80497742]
[263.94259644 -93.97025299]
[273.65338135 -105.40267944]
[283.05105591 -117.09387970]
[292.44869995 -128.78507996]
[301.84634399 -140.47628784]
[310.76141357 -152.53950500]
[319.17922974 -164.95483398]
[327.59704590 -177.37017822]
[336.01483154 -189.78550720]
[344.43264771 -202.20083618]
[348.31686401 -218.70384216]
[365.25021362 -219.53990173]
[370.74118042 -203.49978638]
[356.84799194 -193.78303528]
[348.43017578 -181.36770630]
[340.01235962 -168.95236206]
[331.59457397 -156.53703308]
[323.17675781 -144.12170410]
[323.54913330 -140.48796082]
[322.09286499 -136.49601746]
[318.66165161 -133.04899597]
[313.53753662 -131.07862854]
[304.13989258 -119.38743591]
[294.74224854 -107.69622803]
[285.34460449 -96.00502777]
[284.98577881 -91.12025452]
[281.46508789 -86.44574738]
[275.10787964 -83.95343018]
[265.09106445 -72.78815460]
[255.07424927 -61.62288284]
[245.05741882 -50.45760727]
[235.04060364 -39.29232788]
[239.79864502 -25.17756081]
[236.83306885 -10.47853661]
[226.84216309 0.83730423]
[212.43406677 5.66466475]
[197.44642639 2.61214805]
[187.42961121 13.77742386]
[177.41279602 24.94269943]
[167.39598083 36.10797501]
[157.37916565 47.27325058]
[147.36233521 58.43852997]
[137.34552002 69.60380554]
[127.32871246 80.76908112]
[117.31189728 91.93435669]
[117.99151611 106.40792847]
[108.31558990 117.19322968]
[93.85338593 118.08245850]
[97.14510345 124.41860199]
[98.93404388 131.31500244]
[99.13645172 138.42126465]
[97.74903107 145.37786865]
[94.84873199 151.83448792]
[90.58851624 157.46746826]
[85.18931580 161.99623108]
[78.92855835 165.19709778]
[72.12595367 166.91441345]
[65.12713623 167.06805420]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 35]
[3 34]
[4 33]
[5 32]
[6 31]
[7 30]
[10 25]
[11 24]
[12 23]
[13 22]
[38 105]
[41 102]
[42 101]
[43 100]
[44 99]
[45 98]
[46 97]
[47 96]
[48 95]
[49 94]
[54 89]
[55 88]
[56 87]
[57 86]
[58 85]
[59 82]
[60 81]
[61 80]
[62 79]
[63 75]
[64 74]
[65 73]
[66 72]
[67 71]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
