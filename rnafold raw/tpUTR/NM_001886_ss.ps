%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 20:00:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAGGGGUGCGGCACGGAGGAGCGCAUGCGUGCUUAUCUGCAAUGGAGGCGCUCUGGAGGCUGUGGUGUGUUCUCUCCUUCUGCCUCCCCCUGUAACCUGUGUGAACCCAGCACCCAUGUGAACUGGUCCGUGCACAGUCAGCACAAAAAACUCAAACGAAUAAAAAAGAGAAAGUCUGGUAUUA\
) } def
/len { sequence length } bind def

/coor [
[70.40551758 106.50418091]
[55.41407394 105.99757385]
[40.42263412 105.49095917]
[25.43119049 104.98434448]
[10.43974876 104.47773743]
[-4.55169344 103.97112274]
[-19.54313660 103.46450806]
[-28.24756622 106.30706024]
[-34.78289032 102.82061768]
[-48.95723724 109.84902191]
[-61.27628708 101.47702789]
[-76.25703430 100.71728516]
[-91.23778534 99.95755005]
[-106.21852875 99.19781494]
[-123.70832825 109.19248199]
[-139.49226379 98.04504395]
[-154.49012756 97.79170227]
[-169.48797607 97.53836060]
[-184.48583984 97.28501892]
[-199.31286621 99.55643463]
[-213.54707336 104.28796387]
[-227.78128052 109.01950073]
[-242.01548767 113.75102997]
[-256.24969482 118.48255920]
[-270.48388672 123.21408844]
[-281.13891602 134.90943909]
[-295.65704346 131.58178711]
[-306.31204224 143.27713013]
[-320.83016968 139.94947815]
[-335.06439209 144.68099976]
[-349.29858398 149.41253662]
[-363.49234009 154.26409912]
[-377.64459229 159.23536682]
[-384.25784302 173.58947754]
[-399.11270142 178.98466492]
[-413.39611816 172.22003174]
[-418.63394165 157.30892944]
[-411.71865845 143.09785461]
[-396.75302124 138.01797485]
[-382.61584473 145.08309937]
[-368.46359253 140.11184692]
[-363.18319702 134.91729736]
[-354.03012085 135.17832947]
[-339.79592896 130.44679260]
[-325.56170654 125.71527100]
[-315.92480469 114.35834503]
[-300.38858032 117.34757233]
[-290.75167847 105.99065399]
[-275.21542358 108.97988129]
[-260.98123169 104.24835205]
[-246.74700928 99.51682281]
[-232.51280212 94.78529358]
[-218.27859497 90.05376434]
[-204.04440308 85.32222748]
[-201.89819336 70.47589111]
[-199.75215149 55.63087463]
[-212.06359863 47.06185150]
[-224.37506104 38.49282837]
[-240.12181091 36.95972061]
[-246.14781189 23.33854294]
[-258.45925903 14.76951885]
[-273.96948242 17.80405998]
[-287.03579712 8.91321945]
[-289.90618896 -6.62822294]
[-280.87771606 -19.59980583]
[-265.30679321 -22.30571938]
[-252.43138123 -13.14059162]
[-249.89024353 2.45806742]
[-237.57879639 11.02709103]
[-222.71263123 11.94728374]
[-215.80603027 26.18137550]
[-203.49458313 34.75040054]
[-191.18313599 43.31942368]
[-180.03022766 64.14063263]
[-184.23249817 82.28716278]
[-169.23463440 82.54050446]
[-154.23678589 82.79384613]
[-139.23892212 83.04718781]
[-132.54087830 75.29505157]
[-122.46705627 72.46126556]
[-112.29088593 75.71819305]
[-105.45879364 84.21706390]
[-90.47804260 84.97679901]
[-75.49729919 85.73654175]
[-60.51654816 86.49627686]
[-47.41372681 79.41353607]
[-34.02315140 87.83986664]
[-19.03652382 88.47306824]
[-4.04508162 88.97968292]
[10.94636059 89.48628998]
[25.93780327 89.99290466]
[40.92924500 90.49951935]
[55.92068863 91.00612640]
[70.91213226 91.51274109]
[79.15569305 76.16730499]
[95.05461121 67.34918213]
[113.95679474 68.57553101]
[129.81066895 80.27500916]
[141.02539062 70.31358337]
[152.24012756 60.35216904]
[163.45484924 50.39074707]
[174.66958618 40.42932892]
[185.88430786 30.46791077]
[197.09902954 20.50649071]
[195.21253967 3.70814419]
[203.61985779 -10.76505852]
[218.84150696 -17.31691933]
[234.80914307 -13.55077648]
[245.85401917 -23.70018578]
[256.89889526 -33.84959412]
[267.94378662 -43.99900436]
[278.81567383 -54.33350754]
[289.51147461 -64.85015869]
[300.20727539 -75.36680603]
[304.06149292 -91.30661011]
[319.86712646 -95.67847443]
[331.36474609 -83.98501587]
[326.72656250 -68.25544739]
[310.72393799 -64.67101288]
[300.02813721 -54.15436172]
[289.33233643 -43.63771057]
[288.39843750 -38.93376160]
[284.48602295 -34.77399445]
[278.09320068 -32.95411682]
[267.04830933 -22.80471039]
[256.00344849 -12.65530014]
[244.95854187 -2.50589132]
[247.71267700 10.57002449]
[243.60784912 23.40052795]
[233.61595154 32.59636307]
[220.27844238 35.67300415]
[207.06045532 31.72122002]
[195.84573364 41.68264008]
[184.63099670 51.64405823]
[173.41627502 61.60547638]
[162.20153809 71.56689453]
[150.98681641 81.52831268]
[139.77207947 91.48973083]
[140.15208435 106.48491669]
[151.85694885 115.86553955]
[163.56181335 125.24615479]
[175.26669312 134.62677002]
[183.94067383 137.56091309]
[187.08827209 144.26600647]
[198.63304138 153.84297180]
[209.11241150 149.10479736]
[220.55203247 148.63211060]
[231.28974915 152.45513916]
[239.77978516 159.98271179]
[244.81524658 170.09339905]
[245.69960022 181.30239868]
[242.34275818 191.97958374]
[253.38764954 202.12899780]
[264.43252563 212.27841187]
[278.20349121 205.84188843]
[293.38958740 205.17024231]
[307.67501831 210.36589050]
[318.88137817 220.63652039]
[325.29977417 234.41595459]
[325.95144653 249.60290527]
[320.73703003 263.88150024]
[310.45166016 275.07434082]
[296.66378784 281.47460938]
[281.47598267 282.10629272]
[267.20428467 276.87307739]
[256.02496338 266.57299805]
[249.64285278 252.77673340]
[249.03114319 237.58811951]
[254.28312683 223.32328796]
[243.23823547 213.17387390]
[232.19334412 203.02447510]
[214.14443970 207.79026794]
[196.72135925 200.68220520]
[187.00346375 184.39392090]
[189.05607605 165.38774109]
[177.51130676 155.81077576]
[165.88607788 146.33164978]
[154.18119812 136.95101929]
[142.47633362 127.57041168]
[130.77145386 118.18978882]
[122.40096283 126.85041046]
[111.84159851 132.07383728]
[100.40253448 133.40971375]
[89.43808746 130.87788391]
[80.18750000 124.94591522]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 94]
[2 93]
[3 92]
[4 91]
[5 90]
[6 89]
[7 88]
[9 87]
[11 85]
[12 84]
[13 83]
[14 82]
[16 78]
[17 77]
[18 76]
[19 75]
[20 54]
[21 53]
[22 52]
[23 51]
[24 50]
[25 49]
[27 47]
[29 45]
[30 44]
[31 43]
[32 41]
[33 40]
[56 73]
[57 72]
[58 71]
[60 69]
[61 68]
[98 138]
[99 137]
[100 136]
[101 135]
[102 134]
[103 133]
[104 132]
[108 127]
[109 126]
[110 125]
[111 124]
[112 121]
[113 120]
[114 119]
[139 180]
[140 179]
[141 178]
[142 177]
[144 176]
[145 175]
[152 171]
[153 170]
[154 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
