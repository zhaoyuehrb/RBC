%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 00:24:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGUGCUGUCCUCAGGUGGCCAUGCCUCAGCCCUGACCCUGUGGAAGCAUUUCGCGAUGGACAGACUCACAACCUGAACCUAGGAGUGCCCCAUUCUUUUGUAAUUUAAAUGGCUGCAUCCCCCCCACCUCUCCCUGACCCUGUAUAUAGCCCAGCCAGGCCCCAGGCAGGGCCAACCCUUCUCCUCUUGUAAAUAAAGCCCUGGGAUCACUGUG\
) } def
/len { sequence length } bind def

/coor [
[161.64973450 564.30432129]
[161.43258667 549.30590820]
[161.21543884 534.30749512]
[160.99827576 519.30902100]
[160.78112793 504.31060791]
[160.56398010 489.31219482]
[157.82664490 485.40359497]
[157.51257324 479.73489380]
[160.56398010 473.87786865]
[160.78112793 458.87945557]
[160.99827576 443.88101196]
[161.21543884 428.88259888]
[158.17057800 422.15200806]
[161.54586792 413.66903687]
[161.98013306 398.67532349]
[162.41438293 383.68161011]
[162.84864807 368.68789673]
[160.57722473 353.86087036]
[155.67431641 339.68478394]
[150.77140808 325.50869751]
[145.86849976 311.33258057]
[140.96559143 297.15649414]
[129.49324036 287.65731812]
[132.29481506 272.08615112]
[127.39190674 257.91006470]
[122.48899078 243.73397827]
[117.58608246 229.55787659]
[112.68317413 215.38179016]
[97.25572205 208.68101501]
[91.33338928 192.57783508]
[99.04059601 176.87135315]
[93.93296814 162.76773071]
[88.82534790 148.66410828]
[75.98215485 140.91476440]
[61.12379837 142.97128296]
[46.26544571 145.02781677]
[33.65638733 154.58409119]
[19.98850060 148.66477966]
[5.13014746 150.72131348]
[-9.14061260 162.36190796]
[-25.12742805 155.11927795]
[-39.95445251 157.39068604]
[-54.78147888 159.66210938]
[-69.60850525 161.93351746]
[-84.43553162 164.20494080]
[-99.26255035 166.47634888]
[-114.08957672 168.74777222]
[-128.83047485 177.12286377]
[-140.95895386 165.27651978]
[-132.93305969 150.34262085]
[-116.36099243 153.92074585]
[-101.53396606 151.64932251]
[-86.70694733 149.37791443]
[-71.87992096 147.10649109]
[-57.05289459 144.83508301]
[-42.22586823 142.56365967]
[-27.39884567 140.29225159]
[-19.99118996 130.73269653]
[-7.66041613 128.71681213]
[3.07361770 135.86296082]
[17.93197250 133.80642700]
[29.47826004 124.39725494]
[44.20891571 130.16946411]
[59.06726837 128.11293030]
[73.92562103 126.05640411]
[75.43536377 118.70993042]
[78.45484161 104.01698303]
[79.96457672 96.67050934]
[67.12138367 88.92116547]
[54.27818680 81.17182159]
[38.42193222 83.61287689]
[26.72537231 72.63243866]
[28.16110229 56.65376282]
[41.62775803 47.93431473]
[56.79486847 53.16291046]
[62.02753067 68.32862091]
[74.87072754 76.07796478]
[87.71392059 83.82730865]
[98.51071930 73.41438293]
[91.23119354 60.29917908]
[76.30265045 55.85211945]
[69.10700226 42.44774246]
[73.43859863 28.24306297]
[66.15906525 15.12786388]
[58.87953568 2.01266479]
[51.60000610 -11.10253429]
[44.32047653 -24.21773338]
[37.04094696 -37.33293152]
[29.76141930 -50.44813156]
[16.78806114 -61.36272430]
[23.68472290 -76.85054016]
[40.47645187 -74.51085663]
[42.87661743 -57.72766113]
[50.15614700 -44.61246109]
[57.43567657 -31.49726295]
[64.71520996 -18.38206482]
[71.99473572 -5.26686478]
[79.27426910 7.84833431]
[86.55379486 20.96353340]
[100.89977264 24.80131531]
[108.46907806 37.99829102]
[104.34638977 53.01964951]
[111.62592316 66.13484955]
[119.05509949 67.16311646]
[118.95446777 52.16345215]
[114.85276031 37.73514938]
[124.69452667 26.41526604]
[139.55294800 28.47132301]
[145.95092773 42.03841019]
[138.08442688 54.81121063]
[133.91345215 69.21964264]
[141.34263611 70.24790955]
[151.91076660 59.60298920]
[162.47891235 48.95806885]
[173.04705811 38.31314468]
[183.61520386 27.66822433]
[194.18334961 17.02330399]
[185.66917419 4.07751417]
[180.02676392 -10.34720612]
[177.49920654 -25.62287140]
[178.19412231 -41.08497620]
[182.07891846 -56.06138611]
[188.98246765 -69.90158081]
[198.60250854 -82.00488281]
[210.51896667 -91.84654999]
[224.21226501 -99.00051117]
[239.08601379 -103.15781403]
[254.49288940 -104.13996887]
[269.76293945 -101.90662384]
[284.23263550 -96.55718994]
[297.27365112 -88.32643127]
[307.68658447 -99.12322998]
[308.83508301 -115.12512207]
[322.14294434 -124.08505249]
[337.40151978 -119.12973022]
[342.90573120 -104.06044769]
[334.43322754 -90.43708038]
[318.48336792 -88.71030426]
[308.07043457 -77.91350555]
[316.34149170 -65.95711517]
[322.11575317 -52.60916901]
[325.16830444 -38.38467026]
[325.37933350 -23.83288002]
[322.73867798 -9.51607323]
[317.34652710 4.01216507]
[309.40939331 16.22835922]
[299.23236084 26.65939522]
[287.20730591 34.90083694]
[273.79779053 40.63261414]
[259.52124023 43.63145447]
[244.92887878 43.77957535]
[230.58462524 41.06930161]
[217.04307556 35.60345840]
[204.82826233 27.59144783]
[194.26011658 38.23636627]
[183.69198608 48.88129044]
[173.12384033 59.52621078]
[162.55569458 70.17113495]
[151.98754883 80.81605530]
[102.92897034 143.55647278]
[108.03659821 157.66011047]
[113.14421844 171.76373291]
[125.91616058 176.03215027]
[133.78410339 186.72023010]
[134.05702209 199.79458618]
[126.85926056 210.47888184]
[131.76217651 224.65496826]
[136.66508484 238.83105469]
[141.56799316 253.00715637]
[146.47090149 267.18322754]
[158.29394531 277.69638062]
[155.14167786 292.25360107]
[160.04458618 306.42968750]
[164.94749451 320.60577393]
[169.85040283 334.78186035]
[174.75332642 348.95794678]
[177.24699402 334.16668701]
[177.60404968 319.17092896]
[184.17303467 305.68582153]
[195.76072693 296.16082764]
[210.26228333 292.32611084]
[225.04357910 294.87826538]
[237.41966248 303.35366821]
[245.14250183 316.21282959]
[246.80928040 331.11993408]
[242.11723328 345.36718750]
[231.91589355 356.36862183]
[218.12838745 350.46060181]
[227.39559937 362.25546265]
[236.66281128 374.05032349]
[252.29707336 374.37246704]
[264.03244019 384.70758057]
[266.32785034 400.17578125]
[258.09945679 413.47344971]
[243.23246765 418.32180786]
[228.74661255 412.43161011]
[221.48168945 398.58407593]
[224.86795044 383.31753540]
[215.60073853 371.52267456]
[206.33352661 359.72781372]
[199.21073914 362.07638550]
[177.84236145 369.12213135]
[177.40809631 384.11584473]
[176.97383118 399.10955811]
[176.53958130 414.10327148]
[176.21386719 429.09973145]
[175.99670410 444.09817505]
[175.77955627 459.09658813]
[175.56240845 474.09503174]
[175.56240845 489.09503174]
[175.77955627 504.09344482]
[175.99670410 519.09185791]
[176.21386719 534.09033203]
[176.43101501 549.08874512]
[176.64816284 564.08715820]
[179.11756897 583.31091309]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 215]
[2 214]
[3 213]
[4 212]
[5 211]
[6 210]
[9 209]
[10 208]
[11 207]
[12 206]
[14 205]
[15 204]
[16 203]
[17 202]
[18 176]
[19 175]
[20 174]
[21 173]
[22 172]
[24 170]
[25 169]
[26 168]
[27 167]
[28 166]
[31 162]
[32 161]
[33 160]
[34 65]
[35 64]
[36 63]
[38 61]
[39 60]
[41 57]
[42 56]
[43 55]
[44 54]
[45 53]
[46 52]
[47 51]
[68 78]
[69 77]
[70 76]
[79 103]
[80 102]
[83 99]
[84 98]
[85 97]
[86 96]
[87 95]
[88 94]
[89 93]
[112 159]
[113 158]
[114 157]
[115 156]
[116 155]
[117 154]
[131 139]
[132 138]
[188 200]
[189 199]
[190 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
