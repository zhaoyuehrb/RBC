%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 22:32:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACAUUUAAAACAAGAAGUUAUUGGCUGGGAAAAUCUAAGAAAAAAAGUAUGUAAGAUAAAAAGAAGAGAUUAAUGAAAGUGGGAAAAUACACAUGAAGAACCUCAACUUAAAAAACACAUGGUAUCUAUGCAGUGGGAAAUUACCUCCAUUUGUAAACUAUGUUGCUUAAUAAAAACAUUUCUCUAA\
) } def
/len { sequence length } bind def

/coor [
[-62.24927902 254.18280029]
[-69.63562012 266.73483276]
[-79.47338867 277.46575928]
[-91.32799530 285.90530396]
[-104.67655182 291.68432617]
[-118.93091583 294.55093384]
[-133.46360779 294.38156128]
[-147.63543701 291.18615723]
[-160.82360840 285.10775757]
[-172.44911194 276.41601562]
[-182.00209045 265.49526978]
[-195.11534119 272.77832031]
[-208.22859192 280.06137085]
[-210.61567688 290.69763184]
[-218.31158447 298.10415649]
[-228.59919739 300.00195312]
[-238.02645874 296.00036621]
[-246.77700806 309.18136597]
[-261.63247681 308.10247803]
[-274.98056030 314.94561768]
[-283.73110962 328.12661743]
[-298.58657837 327.04772949]
[-311.93466187 333.89089966]
[-316.87152100 348.66470337]
[-330.50585938 355.41448975]
[-344.55999756 350.61691284]
[-357.90805054 357.46008301]
[-366.65859985 370.64105225]
[-381.51409912 369.56216431]
[-394.86215210 376.40533447]
[-408.21023560 383.24850464]
[-419.54663086 395.85494995]
[-434.79864502 388.45138550]
[-431.90661621 371.74594116]
[-415.05340576 369.90042114]
[-401.70532227 363.05725098]
[-388.35723877 356.21411133]
[-380.56143188 343.52258301]
[-364.75122070 344.11199951]
[-351.40313721 337.26882935]
[-347.09445190 323.05718994]
[-333.65509033 315.92709351]
[-318.77783203 320.54281616]
[-305.42974854 313.69964600]
[-297.63394165 301.00811768]
[-281.82373047 301.59756470]
[-268.47564697 294.75439453]
[-260.67984009 282.06286621]
[-244.86962891 282.65228271]
[-235.61808777 265.68548584]
[-215.51164246 266.94812012]
[-202.39839172 259.66506958]
[-189.28514099 252.38203430]
[-193.67927551 237.57493591]
[-194.67930603 222.15501404]
[-192.23229980 206.89064026]
[-186.45719910 192.54309082]
[-177.63894653 179.82859802]
[-166.21452332 169.38264465]
[-152.75126648 161.72814941]
[-137.91864014 157.24929810]
[-122.45506287 156.17228699]
[-107.13101959 158.55387878]
[-92.71075439 164.27841187]
[-79.91413879 173.06344604]
[-69.38071442 184.47367859]
[-56.39033127 176.97367859]
[-43.39995193 169.47367859]
[-30.40957069 161.97367859]
[-17.41918945 154.47367859]
[-15.33653450 150.15670776]
[-10.51008511 147.11140442]
[-3.87002039 146.94853210]
[9.36246967 139.88444519]
[22.59495926 132.82037354]
[35.82744980 125.75629425]
[30.85723686 99.11612701]
[36.50681305 72.61170959]
[51.90845108 50.31392670]
[74.69657135 35.64753723]
[70.75411224 21.17490578]
[66.81165314 6.70227718]
[52.25503922 1.32782936]
[43.66553497 -11.59501839]
[44.34597397 -27.09716797]
[54.03471375 -39.21772385]
[69.00624084 -43.29608917]
[83.50369263 -37.76404572]
[91.95250702 -24.74877930]
[91.10393524 -9.25492382]
[81.28427887 2.75981617]
[85.22674561 17.23244476]
[89.16920471 31.70507431]
[97.70162964 30.88979530]
[106.26936340 31.13638115]
[109.24156189 16.43379402]
[112.21375275 1.73120654]
[103.26663208 -11.29663086]
[106.23423004 -26.81980324]
[119.35593414 -35.62868881]
[134.84686279 -32.49712753]
[143.51652527 -19.28302383]
[140.22135925 -3.82607007]
[126.91633606 4.70339870]
[123.94414520 19.40598679]
[120.97195435 34.10857391]
[127.06958008 36.37028503]
[132.92776489 39.19485474]
[138.49465942 42.55730057]
[143.72105408 46.42787170]
[148.56068420 50.77233505]
[152.97076416 55.55225754]
[156.91226196 60.72535706]
[160.35032654 66.24588013]
[163.25454712 72.06497955]
[165.59922791 78.13118744]
[167.36361694 84.39084625]
[168.53213501 90.78858185]
[183.52746582 90.41461945]
[198.52281189 90.04066467]
[213.51814270 89.66670227]
[228.51347351 89.29273987]
[243.50881958 88.91878510]
[258.50415039 88.54482269]
[265.55007935 80.22720337]
[275.80264282 77.23240662]
[285.79779053 80.32009888]
[292.29571533 88.23609924]
[307.29519653 88.36076355]
[322.29467773 88.48542786]
[337.29415894 88.61009216]
[345.92044067 85.54750824]
[352.54138184 88.86356354]
[367.53671265 89.23751831]
[382.53207397 89.61148071]
[397.52740479 89.98544312]
[412.52273560 90.35940552]
[427.51806641 90.73336029]
[436.84161377 78.32968903]
[451.68505859 73.80735016]
[466.34082031 78.90526581]
[475.17343140 91.66319275]
[474.78656006 107.17544556]
[465.32901001 119.47724915]
[450.43737793 123.83830261]
[435.83779907 118.58169556]
[427.14410400 105.72869873]
[412.14877319 105.35473633]
[397.15344238 104.98078156]
[382.15811157 104.60681915]
[367.16275024 104.23285675]
[352.16741943 103.85890198]
[337.16949463 103.60957336]
[322.17001343 103.48490906]
[307.17053223 103.36024475]
[292.17105103 103.23558044]
[276.10809326 113.98008728]
[258.87811279 103.54016113]
[243.88278198 103.91411591]
[228.88743591 104.28807831]
[213.89210510 104.66204071]
[198.89675903 105.03600311]
[183.90142822 105.40995789]
[168.90608215 105.78392029]
[166.83546448 117.73479462]
[162.70854187 129.14002991]
[156.65228271 139.64872742]
[148.85302734 148.93756104]
[139.55072021 156.72074890]
[129.03157043 162.75883484]
[117.61921692 166.86602783]
[105.66477203 168.91598511]
[93.53604889 168.84562683]
[81.60620117 166.65711975]
[70.24226379 162.41778564]
[59.79387665 156.25807190]
[50.58249664 148.36747742]
[42.89152908 138.98878479]
[29.65903854 146.05287170]
[16.42654800 153.11694336]
[3.19405794 160.18101501]
[-9.91918945 167.46406555]
[-22.90957069 174.96406555]
[-35.89995193 182.46406555]
[-48.89033127 189.96406555]
[-61.88071442 197.46406555]
[-57.45043182 211.36343384]
[-56.01716614 225.87509155]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 53]
[12 52]
[13 51]
[17 49]
[19 47]
[20 46]
[22 44]
[23 43]
[26 40]
[27 39]
[29 37]
[30 36]
[31 35]
[66 186]
[67 185]
[68 184]
[69 183]
[70 182]
[73 181]
[74 180]
[75 179]
[76 178]
[80 93]
[81 92]
[82 91]
[95 106]
[96 105]
[97 104]
[118 164]
[119 163]
[120 162]
[121 161]
[122 160]
[123 159]
[124 158]
[128 156]
[129 155]
[130 154]
[131 153]
[133 152]
[134 151]
[135 150]
[136 149]
[137 148]
[138 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
