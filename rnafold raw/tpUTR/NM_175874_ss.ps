%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 07:37:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGCAACAGAAAUGUUCAUUUCUGUCAGAAAACUACUUAAAAUCUUAUGGUUUUUCAUAGUAGUUUCUAAGAUCUUUUGGUGCCAAACAUGUGCUAUGUUAGAACAUAAGUACACAAAAGUCAUCUGGCAAAACAUUUACCUGUAGUUUUGCUUUAUUAAAAUAAAAAGAAAUAAUUAAGAA\
) } def
/len { sequence length } bind def

/coor [
[171.47026062 160.21867371]
[159.26057434 151.50524902]
[147.05090332 142.79182434]
[134.84123230 134.07841492]
[122.63154602 125.36498260]
[112.02939606 131.79406738]
[99.82682800 133.99322510]
[87.64730835 131.66986084]
[79.24768829 144.09750366]
[70.84806061 156.52514648]
[62.44844055 168.95280457]
[54.04882050 181.38044739]
[45.64919662 193.80809021]
[37.24957657 206.23573303]
[28.84995461 218.66337585]
[28.23093605 235.05084229]
[13.60509682 242.46817017]
[0.01824527 233.28506470]
[1.44736958 216.94830322]
[16.42230988 210.26374817]
[24.82193184 197.83610535]
[33.22155380 185.40846252]
[41.62117386 172.98081970]
[50.02079773 160.55317688]
[58.42041779 148.12553406]
[66.82003784 135.69789124]
[75.21966553 123.27024078]
[69.14400482 114.26453400]
[66.21961975 103.80201721]
[51.31090546 102.14967346]
[36.40219116 100.49732971]
[21.49347878 98.84498596]
[6.58476400 97.19264221]
[-2.31268525 99.36088562]
[-8.56230640 95.38356018]
[-23.44081306 93.47829437]
[-38.31932068 91.57302856]
[-53.19782639 89.66776276]
[-68.07633209 87.76249695]
[-87.27548981 97.24790955]
[-103.19480133 84.13151550]
[-118.15102386 82.98637390]
[-133.10725403 81.84123230]
[-148.06347656 80.69609070]
[-163.01969910 79.55094910]
[-177.97592163 78.40580750]
[-192.52050781 85.98124695]
[-206.20610046 76.94595337]
[-204.95414734 60.59466553]
[-190.05253601 53.74818420]
[-176.83078003 63.44958496]
[-161.87455750 64.59472656]
[-146.91833496 65.73986816]
[-131.96211243 66.88500977]
[-117.00588226 68.03015137]
[-102.04965973 69.17529297]
[-96.31439972 62.34543228]
[-87.94727325 58.88012314]
[-78.78790283 59.67877579]
[-70.91420746 64.68774414]
[-66.17106628 72.88398743]
[-51.29255676 74.78925323]
[-36.41405106 76.69451904]
[-21.53554535 78.59979248]
[-6.65703869 80.50505829]
[8.23710823 82.28392792]
[23.14582253 83.93627167]
[38.05453491 85.58861542]
[52.96324921 87.24095917]
[67.87196350 88.89330292]
[70.82382965 82.55521393]
[75.00995636 76.95510864]
[80.25325012 72.32988739]
[86.33190918 68.87520599]
[92.98877716 66.73722839]
[99.94223785 66.00638580]
[103.22682190 51.37041473]
[106.51139832 36.73444748]
[109.79597473 22.09848022]
[113.08055115 7.46251154]
[116.36512756 -7.17345619]
[119.52531433 -21.83678436]
[122.56089020 -36.52641678]
[125.59645844 -51.21604919]
[128.63203430 -65.90567780]
[120.70478058 -73.10530853]
[116.52445221 -82.87643433]
[116.78749084 -93.42007446]
[121.37889862 -102.82521820]
[129.40530396 -109.41522217]
[139.36790466 -112.04663086]
[143.14756775 -126.56262207]
[146.92724609 -141.07861328]
[150.70692444 -155.59460449]
[146.69662476 -170.89912415]
[157.39125061 -181.26609802]
[161.17092896 -195.78208923]
[164.95059204 -210.29808044]
[163.09046936 -227.14967346]
[178.76855469 -233.60209656]
[189.30894470 -220.32292175]
[179.46658325 -206.51841736]
[175.68692017 -192.00241089]
[171.90724182 -177.48641968]
[176.18789673 -163.22018433]
[165.22291565 -151.81494141]
[161.44323730 -137.29895020]
[157.66357422 -122.78295135]
[153.88389587 -108.26696014]
[164.96009827 -92.26440430]
[160.66558838 -72.97035980]
[143.32167053 -62.87010956]
[140.28608704 -48.18047714]
[137.25051880 -33.49084473]
[134.21495056 -18.80121231]
[135.94430542 -11.59800339]
[131.00109863 -3.88887954]
[127.71651459 10.74708843]
[124.43193817 25.38305664]
[121.14736176 40.01902390]
[117.86278534 54.65499115]
[114.57820892 69.29096222]
[131.75303650 87.86267853]
[131.34497070 113.15530396]
[143.55465698 121.86872864]
[155.76432800 130.58215332]
[167.97399902 139.29557800]
[180.18368530 148.00900269]
[194.19497681 153.36470032]
[209.10369873 155.01704407]
[224.01240540 156.66938782]
[238.92112732 158.32173157]
[253.82983398 159.97407532]
[268.73855591 161.62641907]
[283.64727783 163.27876282]
[298.55596924 164.93110657]
[313.47817993 166.45680237]
[328.41281128 167.85575867]
[340.42022705 157.57966614]
[356.17031860 158.88717651]
[366.31887817 171.00254822]
[364.84494019 186.73796082]
[352.62292480 196.75785828]
[336.90399170 195.11763000]
[327.01385498 182.79037476]
[312.07925415 181.39143372]
[305.11038208 183.90374756]
[296.90362549 179.83982849]
[281.99493408 178.18748474]
[267.08621216 176.53514099]
[252.17749023 174.88279724]
[237.26878357 173.23045349]
[222.36006165 171.57809448]
[207.45135498 169.92575073]
[192.54263306 168.27340698]
[204.85978699 176.83425903]
[215.30311584 187.60163879]
[223.48370361 200.17454529]
[229.09684753 214.08471680]
[231.93348694 228.81405640]
[231.88796997 243.81399536]
[228.96202087 258.52584839]
[223.26457214 272.40170288]
[215.00785828 284.92474365]
[204.49937439 295.62857056]
[192.13052368 304.11450195]
[178.36195374 310.06652832]
[163.70646667 313.26293945]
[148.70993042 313.58465576]
[133.93084717 311.01977539]
[119.91966248 305.66375732]
[107.19822693 297.71612549]
[96.24033356 287.47283936]
[87.45410919 275.31546021]
[81.16679382 261.69671631]
[77.61254120 247.12390137]
[76.92373657 232.13972473]
[79.12603760 217.30227661]
[84.13741302 203.16416931]
[91.77122498 190.25196838]
[101.74314880 179.04656982]
[113.68178558 169.96533203]
[127.14250183 163.34648132]
[141.62394714 159.43650818]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 128]
[2 127]
[3 126]
[4 125]
[5 124]
[8 27]
[9 26]
[10 25]
[11 24]
[12 23]
[13 22]
[14 21]
[15 20]
[29 70]
[30 69]
[31 68]
[32 67]
[33 66]
[35 65]
[36 64]
[37 63]
[38 62]
[39 61]
[41 56]
[42 55]
[43 54]
[44 53]
[45 52]
[46 51]
[76 122]
[77 121]
[78 120]
[79 119]
[80 118]
[81 117]
[82 115]
[83 114]
[84 113]
[85 112]
[91 109]
[92 108]
[93 107]
[94 106]
[96 104]
[97 103]
[98 102]
[129 155]
[130 154]
[131 153]
[132 152]
[133 151]
[134 150]
[135 149]
[136 148]
[137 146]
[138 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
