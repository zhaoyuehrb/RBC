%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 03:08:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUGUACAGUGUGACUUGUAAUGGACCCCUGAGCUCUUCUUGUAACUUACUGUGCUGUCUUCCUUUUUUGCAACUUGGCUCUGACCUGGCAUCGGAAAAUGGCUAGGC\
) } def
/len { sequence length } bind def

/coor [
[25.20815659 115.98014069]
[15.83394241 115.03242493]
[8.11388206 109.87755585]
[3.77778077 101.82728577]
[-11.09623241 99.88725281]
[-25.97024536 97.94722748]
[-40.84426117 96.00719452]
[-55.71827316 94.06716156]
[-70.59228516 92.12712860]
[-85.46630096 90.18709564]
[-100.34031677 88.24706268]
[-105.73546600 101.78874969]
[-114.22803497 113.62445831]
[-125.31420898 123.05992126]
[-138.33819580 129.54298401]
[-152.53103638 132.69601440]
[-167.05596924 132.33778381]
[-181.05780029 128.49397278]
[-193.71321106 121.39533997]
[-204.27923584 111.46389008]
[-212.13681030 99.28778839]
[-216.82707214 85.58650970]
[-218.07817078 71.16835022]
[-232.89009094 68.80048370]
[-247.70202637 66.43261719]
[-262.55056763 71.89444733]
[-273.89685059 62.24505615]
[-287.68072510 70.45385742]
[-302.64132690 64.66069794]
[-307.30212402 49.30959702]
[-298.08779907 36.17659760]
[-282.06677246 35.33622360]
[-271.52899170 47.43312836]
[-257.73989868 41.80193710]
[-245.33415222 51.62068939]
[-230.52223206 53.98855591]
[-215.71029663 56.35641861]
[-209.51521301 42.17969131]
[-199.87521362 30.06474113]
[-187.43450928 20.83034706]
[-173.02687073 15.10248184]
[-157.61970520 13.27187538]
[-142.24908447 15.46737194]
[-127.95013428 21.54687691]
[-115.68727875 31.10654068]
[-106.28919983 43.50757599]
[-100.39285278 57.91894531]
[-98.40028381 73.37305450]
[-83.52626801 75.31307983]
[-68.65225220 77.25311279]
[-53.77824020 79.19314575]
[-38.90422821 81.13317871]
[-24.03021431 83.07321167]
[-9.15620041 85.01324463]
[5.71781254 86.95327759]
[23.81468773 77.20956421]
[40.92632294 89.93746185]
[55.91230774 90.58575439]
[70.89829254 91.23404694]
[85.88427734 91.88233948]
[100.46925354 83.72333527]
[114.55995178 92.70906067]
[129.55839539 92.92521667]
[144.55839539 92.92521667]
[159.55683899 92.70906067]
[174.55528259 92.49290466]
[189.55372620 92.27674103]
[204.55216980 92.06058502]
[219.55061340 91.84442902]
[234.54905701 91.62827301]
[243.53033447 79.11257172]
[257.99011230 74.34095001]
[272.31747437 78.94427490]
[281.08200073 90.95764160]
[296.08044434 90.74148560]
[309.76770020 82.80612183]
[322.60513306 90.35921478]
[337.60357666 90.14305115]
[348.43554688 78.63462830]
[364.23492432 78.23981476]
[375.62817383 89.19285583]
[375.85592651 104.99550629]
[364.78302002 116.27233124]
[348.97885132 116.33299255]
[337.81973267 105.14149475]
[322.82128906 105.35765076]
[310.20684814 113.27755737]
[296.29660034 105.73992920]
[281.29815674 105.95608521]
[272.88345337 118.21703339]
[258.69470215 123.23133087]
[244.10343933 118.87839508]
[234.76521301 106.62671661]
[219.76676941 106.84287262]
[204.76832581 107.05902863]
[189.76988220 107.27518463]
[174.77143860 107.49134064]
[159.77299500 107.70750427]
[144.77455139 107.92366028]
[138.02958679 111.21685028]
[129.34223938 107.92366028]
[114.34379578 107.70750427]
[105.43072510 115.35113525]
[93.69388580 115.01275635]
[85.23598480 106.86832428]
[70.25000000 106.22003174]
[55.26401520 105.57173920]
[40.27803040 104.92344666]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 55]
[5 54]
[6 53]
[7 52]
[8 51]
[9 50]
[10 49]
[11 48]
[23 37]
[24 36]
[25 35]
[27 33]
[57 108]
[58 107]
[59 106]
[60 105]
[62 102]
[63 101]
[64 99]
[65 98]
[66 97]
[67 96]
[68 95]
[69 94]
[70 93]
[74 89]
[75 88]
[77 86]
[78 85]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
