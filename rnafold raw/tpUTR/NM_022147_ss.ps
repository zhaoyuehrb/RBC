%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 20:34:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAAAAUAGGCUUGCCACUUUCUCUUAUUUUAAUUCCAUGGUAGUCAAUGAACUGGCUGCCACUUUAAUAUAACUGAAAAUUCAUUUUGAGACCAAGCAGGAUCAAGUUUGUAGAAUAAACACUGGUUUCCUAGCCAUCCUCUGAAAACAGUAUGAAACAUGACCAAGUACAUAAUGGAUUUAGUAAUAAAUAUUGUCGAAUUGCUAA\
) } def
/len { sequence length } bind def

/coor [
[153.70532227 295.30813599]
[139.03887939 290.10372925]
[126.20633698 281.27969360]
[116.08274841 269.43075562]
[109.36021423 255.35810852]
[106.50061798 240.01528931]
[107.70388794 224.44355774]
[112.89401245 209.70117188]
[121.72384644 196.79159546]
[133.59828186 186.59503174]
[127.06101227 173.09451294]
[120.52375031 159.59397888]
[113.98648834 146.09346008]
[107.44923401 132.59292603]
[97.67449951 133.35240173]
[88.09974670 131.24378967]
[79.54833221 126.44843292]
[72.75561523 119.37869263]
[68.30572510 110.64252472]
[53.37726593 112.10576630]
[38.44880676 113.56901550]
[23.52034569 115.03225708]
[13.50307941 126.96088409]
[-1.65734625 128.23216248]
[-12.96773434 118.60871124]
[-27.89619446 120.07196045]
[-42.82465363 121.53520203]
[-57.75311279 122.99845123]
[-70.73269653 132.04504395]
[-84.15403748 125.58618927]
[-99.08249664 127.04943848]
[-114.01096344 128.51268005]
[-128.93942261 129.97592163]
[-133.44320679 139.65051270]
[-141.49562073 146.52969360]
[-151.59960938 149.42274475]
[-161.91288757 147.87188721]
[-170.58383179 142.22335815]
[-176.08383179 133.55296326]
[-191.06307983 134.34175110]
[-206.04232788 135.13055420]
[-221.02156067 135.91934204]
[-236.00080872 136.70812988]
[-250.98005676 137.49693298]
[-265.95932007 138.28572083]
[-280.93853760 139.07450867]
[-295.91778564 139.86329651]
[-306.30236816 151.77700806]
[-322.07510376 152.77491760]
[-333.87835693 142.26496887]
[-334.70944214 126.48254395]
[-324.07531738 114.79107666]
[-308.28497314 114.12689972]
[-296.70660400 124.88405609]
[-281.72735596 124.09526062]
[-266.74810791 123.30647278]
[-251.76884460 122.51767731]
[-236.78961182 121.72888947]
[-221.81036377 120.94009399]
[-206.83111572 120.15130615]
[-191.85186768 119.36251068]
[-176.87261963 118.57372284]
[-164.94084167 103.17579651]
[-145.22781372 101.48883057]
[-130.40266418 115.04747009]
[-115.47420502 113.58422089]
[-100.54574585 112.12097931]
[-85.61728668 110.65773010]
[-73.70548248 101.71578979]
[-59.21635818 108.06999207]
[-44.28789902 106.60674286]
[-29.35943985 105.14350128]
[-14.43097973 103.68025208]
[-5.20442200 92.04383850]
[9.91431522 90.34723663]
[22.05710220 100.10379791]
[36.98556137 98.64055634]
[51.91402054 97.17730713]
[66.84248352 95.71406555]
[80.67503357 72.71748352]
[106.95848846 67.29878235]
[113.29208374 53.70151901]
[119.62567902 40.10425568]
[125.95927429 26.50699234]
[132.29287720 12.90972996]
[131.10610962 -2.86690378]
[143.49382019 -11.13697815]
[149.82740784 -24.73424149]
[156.16101074 -38.33150482]
[146.79602051 -48.91765976]
[142.18739319 -62.23336792]
[142.99984741 -76.25721741]
[149.07769775 -88.87359619]
[159.47349548 -98.19183350]
[172.59548950 -102.82949066]
[186.45130920 -102.11745453]
[192.98857117 -115.61798096]
[193.91235352 -124.70718384]
[199.72689819 -129.27117920]
[206.46635437 -142.67192078]
[213.20579529 -156.07266235]
[219.94525146 -169.47340393]
[226.68469238 -182.87414551]
[216.69000244 -184.46298218]
[207.13697815 -191.26348877]
[200.23466492 -202.95063782]
[197.97947693 -218.36183167]
[202.20545959 -232.75422668]
[206.43145752 -247.14662170]
[210.65744019 -261.53903198]
[214.88343811 -275.93142700]
[219.10942078 -290.32382202]
[217.77040100 -307.22479248]
[233.64021301 -313.19015503]
[243.76564026 -299.59191895]
[233.50181580 -286.09780884]
[229.27581787 -271.70541382]
[225.04983521 -257.31301880]
[220.82385254 -242.92063904]
[216.59785461 -228.52824402]
[212.37187195 -214.13584900]
[218.82916260 -210.32095337]
[231.89389038 -217.69067383]
[231.74372864 -202.69114685]
[238.20101929 -198.87625122]
[248.76768494 -209.52262878]
[259.33435059 -220.16902161]
[269.90103149 -230.81539917]
[273.56042480 -246.80105591]
[289.31155396 -251.36546326]
[300.95098877 -239.81317139]
[296.50509644 -224.02818298]
[280.54739380 -220.24873352]
[269.98074341 -209.60235596]
[259.41406250 -198.95596313]
[248.84739685 -188.30958557]
[240.08543396 -176.13468933]
[233.34599304 -162.73394775]
[226.60653687 -149.33320618]
[219.86708069 -135.93247986]
[213.12763977 -122.53173065]
[206.48908997 -109.08071899]
[199.95182800 -95.58019257]
[210.12571716 -83.25867462]
[213.92192078 -67.67729187]
[210.53120422 -51.94314575]
[200.58271790 -39.21662140]
[186.02799988 -32.07658386]
[169.75827026 -31.99790573]
[163.42468262 -18.40064430]
[157.09107971 -4.80338097]
[158.73086548 10.00068569]
[145.89013672 19.24332619]
[139.55653381 32.84059143]
[133.22294617 46.43785095]
[126.88934326 60.03511429]
[120.55574799 73.63237762]
[125.92628479 78.89033508]
[129.98660278 85.21508789]
[132.53152466 92.28701019]
[133.43243408 99.74872589]
[132.64378357 107.22313690]
[130.20544434 114.33251190]
[126.24065399 120.71758270]
[120.94975281 126.05567169]
[127.48701477 139.55619812]
[134.02427673 153.05671692]
[140.56153870 166.55725098]
[147.09880066 180.05776978]
[161.30738831 177.14744568]
[175.78988647 177.72810364]
[189.70169067 181.76138306]
[202.23258972 189.00765991]
[212.65391541 199.04029846]
[220.36093140 211.27084351]
[224.90791321 224.98345947]
[226.03395081 239.37684631]
[223.67788696 253.61109924]
[217.98161316 266.85662842]
[209.28155518 278.34262085]
[198.08883667 287.40185547]
[204.42243958 300.99911499]
[210.75602722 314.59637451]
[217.08963013 328.19363403]
[223.42323303 341.79089355]
[229.75682068 355.38815308]
[236.09042358 368.98541260]
[242.42402649 382.58270264]
[257.68643188 382.72781372]
[271.37063599 389.48840332]
[280.75961304 401.52209473]
[283.98916626 416.43963623]
[280.41806030 431.27911377]
[270.75534058 443.09414673]
[256.91958618 449.53881836]
[241.65783691 449.33358765]
[228.00036621 442.51919556]
[218.65885925 430.44860840]
[215.48808289 415.51846313]
[219.11759949 400.69317627]
[228.82675171 388.91629028]
[222.49316406 375.31903076]
[216.15956116 361.72177124]
[209.82595825 348.12451172]
[203.49237061 334.52722168]
[197.15876770 320.92996216]
[190.82518005 307.33270264]
[184.49157715 293.73544312]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 169]
[11 168]
[12 167]
[13 166]
[14 165]
[19 79]
[20 78]
[21 77]
[22 76]
[25 73]
[26 72]
[27 71]
[28 70]
[30 68]
[31 67]
[32 66]
[33 65]
[39 62]
[40 61]
[41 60]
[42 59]
[43 58]
[44 57]
[45 56]
[46 55]
[47 54]
[81 157]
[82 156]
[83 155]
[84 154]
[85 153]
[87 151]
[88 150]
[89 149]
[96 143]
[97 142]
[99 141]
[100 140]
[101 139]
[102 138]
[103 137]
[107 121]
[108 120]
[109 119]
[110 118]
[111 117]
[112 116]
[125 136]
[126 135]
[127 134]
[128 133]
[181 208]
[182 207]
[183 206]
[184 205]
[185 204]
[186 203]
[187 202]
[188 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
