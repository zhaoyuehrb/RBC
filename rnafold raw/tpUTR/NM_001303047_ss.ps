%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 11:50:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUAACUUCAAAUUCCAGCCAAACGUUCCUUGUUGCCACUUUGGGUAUUCUGAGAUUUUCUCUUGCAUGCCCUUAGCUUUACAGCUUUUGCAUUUCCUGUUGUAUUUAUUCUCAGCCAUUUUGGGCAUAUGUAUCUUUAUAAUCAGACUGGAAACGGGACUUUCUAUUAAUAUCAUUUUCAGAAUAAAAAAUAGGAUAAUUUAACCUACCAGCCCUUCUCCCCCAAUAACUGUGGUCUAUACAGAGUCAAUAUAU\
UUUUUCAGAGAAAGUUAUUCGCUCGAUUUUUUCUGAAUCAUAAUUAAACUUUAUGAUAAAAUAC\
) } def
/len { sequence length } bind def

/coor [
[188.09915161 225.37889099]
[173.91990662 220.48510742]
[161.87188721 211.54948425]
[153.07307434 199.40119934]
[148.33995056 185.16752625]
[148.11169434 170.16926575]
[152.40951538 155.79815674]
[160.83459473 143.38775635]
[172.60513306 134.08966064]
[186.62889099 128.76667786]
[201.60351562 127.91265869]
[215.16778564 121.50870514]
[228.73205566 115.10475922]
[213.75807190 114.22169495]
[198.78408813 113.33863068]
[183.81008911 112.45557404]
[168.83610535 111.57250977]
[153.86212158 110.68944550]
[145.96910095 133.28355408]
[128.77557373 151.04173279]
[104.98532104 160.22918701]
[78.75209045 158.53912354]
[70.91461182 171.32872009]
[63.07713699 184.11831665]
[55.23965836 196.90792847]
[57.57161713 212.78059387]
[46.51100922 224.40136719]
[30.54257774 222.85578918]
[21.91594315 209.32948303]
[27.24871826 194.19868469]
[42.45005417 189.07044983]
[50.28753281 176.28083801]
[58.12501144 163.49124146]
[65.96248627 150.70164490]
[60.95313644 145.11984253]
[49.78940201 155.13838196]
[39.77104187 143.97448730]
[50.93442917 133.95626831]
[45.92507935 128.37448120]
[32.36523819 134.78779602]
[26.95903397 149.39639282]
[13.11606884 155.70724487]
[-0.77766645 150.46322632]
[-14.33750629 156.87655640]
[-27.89734459 163.28988647]
[-41.45718384 169.70321655]
[-55.01702499 176.11653137]
[-68.57686615 182.52986145]
[-77.74394989 195.42463684]
[-92.55738831 193.87181091]
[-102.71657562 209.26049805]
[-120.15318298 207.07981873]
[-133.64941406 213.62594604]
[-147.14562988 220.17208862]
[-160.64186096 226.71823120]
[-172.25440979 239.07075500]
[-187.33886719 231.33154297]
[-184.07791138 214.69416809]
[-167.18798828 213.22200012]
[-153.69177246 206.67585754]
[-140.19554138 200.12973022]
[-126.69932556 193.58358765]
[-122.46250916 182.29039001]
[-111.31869507 176.71249390]
[-98.97071838 180.31196594]
[-90.77352142 167.87591553]
[-74.99018860 168.97001648]
[-61.43035126 162.55670166]
[-47.87051010 156.14337158]
[-34.31067276 149.73004150]
[-20.75083160 143.31671143]
[-7.19099283 136.90339661]
[-2.43058062 122.83661652]
[11.22966480 116.13942719]
[25.95191193 121.22796631]
[39.51175308 114.81463623]
[35.77726364 112.06083679]
[32.17208862 108.94216919]
[28.72497940 105.46502686]
[25.46435738 101.63787079]
[10.87880802 98.13619232]
[-3.70674062 94.63451385]
[-18.29228973 91.13282776]
[-32.87783813 87.63114929]
[-47.46338654 84.12947083]
[-56.70064926 96.23702240]
[-70.06700897 103.53499603]
[-85.24665833 104.75896454]
[-99.60963440 99.69687653]
[-110.66746521 89.22576141]
[-116.50431824 75.15980530]
[-116.10891724 59.93602371]
[-109.54976654 46.19202423]
[-97.96328735 36.30904388]
[-83.35689545 31.99936104]
[-68.26125336 34.00965881]
[-55.29175568 41.99164200]
[-46.69545364 54.56238174]
[-43.96170807 69.54392242]
[-29.37615776 73.04560089]
[-14.79060936 76.54727936]
[-0.20506011 80.04896545]
[14.38048840 83.55064392]
[28.96603775 87.05232239]
[32.66277313 80.52667236]
[19.61146927 73.13319397]
[6.56016397 65.73972321]
[-6.49114084 58.34625244]
[-19.54232216 50.95256424]
[-12.14841652 37.90150452]
[0.90233225 45.29494858]
[13.95363712 52.68841934]
[27.00494194 60.08189392]
[40.05624771 67.47536469]
[43.75298309 60.94971466]
[33.25102234 50.23949432]
[22.74905968 39.52927399]
[6.94505835 39.62475967]
[-4.23869896 28.45788383]
[-4.16708899 12.65375805]
[7.11740398 1.58868802]
[22.91988945 1.82738507]
[33.86503601 13.22823429]
[33.45927811 29.02731323]
[43.96123886 39.73753357]
[54.46320343 50.44775009]
[60.53083038 46.03936005]
[58.96259308 31.12156677]
[72.66608429 37.22258377]
[78.73371124 32.81419373]
[71.79297638 19.51659393]
[64.85223389 6.21899509]
[57.91149521 -7.07860422]
[43.78829956 -15.41331482]
[44.21532059 -31.80690193]
[58.75327301 -39.39504623]
[72.44676208 -30.37171936]
[71.20909882 -14.01934242]
[78.14983368 -0.72174364]
[85.09057617 12.57585526]
[92.03131104 25.87345505]
[108.69239044 28.78072357]
[123.63942719 35.23763275]
[136.16284180 44.62648392]
[145.74116516 56.19979095]
[152.06147766 69.13259888]
[155.02600098 82.57703400]
[154.74519348 95.71546173]
[169.71917725 96.59852600]
[184.69316101 97.48158264]
[199.66714478 98.36464691]
[214.64112854 99.24771118]
[229.61511230 100.13077545]
[223.33627319 77.11521912]
[233.59197998 49.30853653]
[262.08883667 27.17201614]
[269.28930664 14.01325321]
[276.48980713 0.85448927]
[277.84973145 -8.12085247]
[283.82611084 -12.39760780]
[291.15542603 -25.48504829]
[297.56875610 -39.04488754]
[303.03579712 -53.01311111]
[308.50286865 -66.98133850]
[313.96994019 -80.94956207]
[319.43698120 -94.91778564]
[324.90405273 -108.88600922]
[330.37109375 -122.85423279]
[318.31155396 -131.93554688]
[309.15026855 -143.93441772]
[303.56701660 -157.96046448]
[301.97613525 -172.97285461]
[304.49566650 -187.85755920]
[310.93869019 -201.51004028]
[320.82702637 -212.91720581]
[333.42694092 -221.23254395]
[347.80340576 -225.83901978]
[362.88961792 -226.39479065]
[377.56607056 -222.85862732]
[390.74365234 -215.49293518]
[401.44454956 -204.84428406]
[408.87463379 -191.70288086]
[412.48257446 -177.04391479]
[412.00061035 -161.95516968]
[407.46453857 -147.55632019]
[399.21093750 -134.91587830]
[387.85229492 -124.97183990]
[374.23150635 -118.46211243]
[359.35931396 -115.86976624]
[344.33932495 -117.38717651]
[338.87225342 -103.41895294]
[333.40521240 -89.45072937]
[327.93814087 -75.48249817]
[322.47109985 -61.51427841]
[317.00402832 -47.54605484]
[311.53698730 -33.57783127]
[322.88742065 -43.38433075]
[337.11056519 -48.14901733]
[352.07785034 -47.15882874]
[365.54934692 -40.56195068]
[375.50897217 -29.34563828]
[380.46624756 -15.18846703]
[379.67926025 -0.20912574]
[373.26580811 13.35065556]
[362.18569946 23.46158981]
[348.09710693 28.61052895]
[333.10845947 28.02690697]
[319.46289062 21.79806709]
[309.20251465 10.85618496]
[303.86285400 -3.16123414]
[304.24285889 -18.15572929]
[296.91354370 -5.06828880]
[289.64855957 8.05497074]
[282.44808960 21.21373558]
[275.24758911 34.37249756]
[279.26007080 40.70890045]
[291.88775635 32.61309433]
[304.51541138 24.51728630]
[317.14306641 16.42148018]
[329.77075195 8.32567310]
[342.39840698 0.22986691]
[355.29107666 -7.43687630]
[363.31558228 5.23621035]
[350.87277222 13.61235237]
[338.15521240 21.56622314]
[325.43768311 29.52009201]
[312.72012329 37.47396469]
[300.00259399 45.42783356]
[287.28503418 53.38170242]
[291.29751587 59.71810532]
[306.27151489 58.83504486]
[321.24548340 57.95198059]
[336.21948242 57.06892014]
[351.19345093 56.18585587]
[362.88201904 45.19691467]
[378.74005127 47.62643433]
[386.60263062 61.61069870]
[380.43823242 76.42218018]
[364.97567749 80.69876862]
[352.07653809 71.15984344]
[337.10253906 72.04290009]
[322.12854004 72.92596436]
[307.15457153 73.80902863]
[292.18057251 74.69209290]
[289.82797241 81.81355286]
[304.07089233 86.51877594]
[318.31381226 91.22400665]
[332.55673218 95.92922974]
[346.79965210 100.63445282]
[361.04260254 105.33968353]
[376.04241943 105.41349792]
[380.60720825 119.70204163]
[368.42849731 128.45869446]
[356.33737183 119.58260345]
[342.09445190 114.87738037]
[327.85150146 110.17214966]
[313.60858154 105.46692657]
[299.36566162 100.76170349]
[285.12274170 96.05647278]
[282.77014160 103.17793274]
[294.27130127 112.80720520]
[305.77249146 122.43648529]
[317.27368164 132.06575012]
[328.77484131 141.69503784]
[340.27603149 151.32431030]
[351.77719116 160.95358276]
[363.27838135 170.58285522]
[374.77954102 180.21212769]
[386.28073120 189.84140015]
[397.78192139 199.47067261]
[409.28308105 209.09994507]
[424.30184937 205.19912720]
[438.73278809 210.90240479]
[447.02691650 224.01679993]
[445.99496460 239.49951172]
[436.03378296 251.39715576]
[420.97357178 255.13482666]
[406.60534668 249.27532959]
[398.45397949 236.07174683]
[399.65380859 220.60112000]
[388.15264893 210.97184753]
[376.65145874 201.34257507]
[365.15026855 191.71330261]
[353.64910889 182.08403015]
[342.14791870 172.45475769]
[330.64675903 162.82548523]
[319.14556885 153.19621277]
[307.64437866 143.56694031]
[296.14321899 133.93766785]
[284.64202881 124.30838776]
[273.14086914 114.67911530]
[260.87707520 123.31623840]
[266.06884766 137.38909912]
[271.26058960 151.46197510]
[276.45236206 165.53485107]
[281.64410400 179.60771179]
[286.83587646 193.68058777]
[292.02761841 207.75344849]
[306.80551147 212.86701965]
[314.79467773 226.30975342]
[312.22290039 241.73440552]
[300.30453491 251.85794067]
[284.66699219 251.90031433]
[272.69390869 241.84153748]
[270.03857422 226.43104553]
[277.95474243 212.94520569]
[272.76300049 198.87234497]
[267.57122803 184.79946899]
[262.37948608 170.72660828]
[257.18774414 156.65373230]
[251.99597168 142.58085632]
[246.80421448 128.50799561]
[244.61352539 143.34715271]
[242.42282104 158.18632507]
[245.95256042 172.76510620]
[244.92935181 187.73016357]
[239.44813538 201.69284058]
[230.01753235 213.35748291]
[217.51266479 221.64167786]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 153]
[14 152]
[15 151]
[16 150]
[17 149]
[18 148]
[22 34]
[23 33]
[24 32]
[25 31]
[39 76]
[40 75]
[43 72]
[44 71]
[45 70]
[46 69]
[47 68]
[48 67]
[50 65]
[52 62]
[53 61]
[54 60]
[55 59]
[80 104]
[81 103]
[82 102]
[83 101]
[84 100]
[85 99]
[115 126]
[116 125]
[117 124]
[130 141]
[131 140]
[132 139]
[133 138]
[156 215]
[157 214]
[158 213]
[160 212]
[161 211]
[162 196]
[163 195]
[164 194]
[165 193]
[166 192]
[167 191]
[168 190]
[230 244]
[231 243]
[232 242]
[233 241]
[234 240]
[260 291]
[261 290]
[262 289]
[263 288]
[264 287]
[265 286]
[266 285]
[267 284]
[268 283]
[269 282]
[270 281]
[271 280]
[292 312]
[293 311]
[294 310]
[295 309]
[296 308]
[297 307]
[298 306]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
