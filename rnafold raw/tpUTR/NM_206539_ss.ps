%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 04:48:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAGGUGGGGGCUUUCUGGCCCCCUUCCUCACCUCUUCCACCCCUCAGACUGGAGUGGUCCGUUCUCACCACCCUUCAGCUUGGGUACACACACAGAGGAGACCUCAGCCUCACACCAGAAAUAUUAUUUUUUUAAUACACAGAAUGUAAGAUGGAAUUUUAUCAAAUAAAACUAUGAAAAUGCAA\
) } def
/len { sequence length } bind def

/coor [
[59.03910446 112.06885529]
[72.97288513 106.51461029]
[87.97045898 106.90065002]
[73.50342560 102.93772125]
[59.03638458 98.97478485]
[44.56934738 95.01185608]
[30.10231018 91.04892731]
[16.15013504 96.55680847]
[8.29129410 109.33329773]
[0.43245485 122.10977936]
[-7.42638493 134.88627625]
[-15.28522491 147.66276550]
[-23.14406395 160.43923950]
[-31.00290489 173.21572876]
[-30.91845322 189.61466980]
[-45.21268463 197.65251160]
[-59.18091965 189.06062317]
[-58.45383453 172.67759705]
[-43.77939224 165.35688782]
[-35.92055130 152.58041382]
[-28.06171227 139.80392456]
[-20.20287323 127.02742767]
[-12.34403324 114.25094604]
[-4.48519325 101.47445679]
[3.37364650 88.69796753]
[0.01837962 74.07804108]
[-12.62500477 66.00680542]
[-25.26838875 57.93557358]
[-37.91177368 49.86433792]
[-50.55515671 41.79310226]
[-63.19853973 33.72186661]
[-74.60235596 43.61292267]
[-88.31739044 49.88349533]
[-103.22859192 52.03317642]
[-118.12629700 49.89620972]
[-131.80438232 43.65424728]
[-143.15786743 33.82091904]
[-151.27226257 21.19961166]
[-155.49713135 6.81780720]
[-155.49827576 -8.15654755]
[-151.28416443 -22.50989342]
[-163.92753601 -30.58112907]
[-176.57092285 -38.65236282]
[-189.21430969 -46.72359848]
[-199.70706177 -43.76445007]
[-209.88348389 -47.01254272]
[-216.44566345 -55.16112518]
[-217.40782166 -65.35840607]
[-229.77444458 -73.84761047]
[-238.63980103 -76.13146210]
[-242.27516174 -82.58342743]
[-254.49821472 -91.27809143]
[-266.72125244 -99.97275543]
[-278.94430542 -108.66741943]
[-291.16732788 -117.36209106]
[-303.53396606 -125.85129547]
[-316.04071045 -134.13267517]
[-328.54745483 -142.41404724]
[-341.05419922 -150.69541931]
[-353.56097412 -158.97680664]
[-368.04870605 -153.41937256]
[-383.02734375 -157.47149658]
[-392.73730469 -169.57505798]
[-393.44491577 -185.07598877]
[-384.87805176 -198.01387024]
[-370.33090210 -203.41380310]
[-355.39709473 -199.19943237]
[-345.81900024 -186.99125671]
[-345.27960205 -171.48355103]
[-332.77282715 -163.20217896]
[-320.26608276 -154.92079163]
[-307.75933838 -146.63941956]
[-295.25259399 -138.35804749]
[-290.45901489 -138.41979980]
[-285.57980347 -135.45739746]
[-282.47268677 -129.58512878]
[-270.24963379 -120.89046478]
[-258.02658081 -112.19580078]
[-245.80354309 -103.50113678]
[-233.58050537 -94.80647278]
[-221.28523254 -86.21423340]
[-208.91860962 -77.72502899]
[-189.59410095 -77.65409851]
[-181.14308167 -59.36698532]
[-168.49969482 -51.29574966]
[-155.85630798 -43.22451401]
[-143.21292114 -35.15327835]
[-131.96699524 -45.01768494]
[-118.38341522 -51.31987000]
[-103.55941772 -53.54133606]
[-88.69511414 -51.49359512]
[-74.99631500 -45.33413315]
[-63.57670975 -35.55433273]
[-55.36732483 -22.94028091]
[-51.04063797 -8.50958920]
[-50.95548248 6.57069683]
[-55.12730408 21.07848358]
[-42.48392105 29.14971924]
[-29.84053802 37.22095490]
[-17.19715309 45.29219055]
[-4.55376911 53.36342621]
[8.08961487 61.43465805]
[34.06524277 76.58188629]
[48.53227997 80.54482269]
[62.99931717 84.50775146]
[77.46635437 88.47068024]
[91.93339539 92.43360901]
[93.57173157 86.41482544]
[98.73668671 81.04331970]
[106.98207092 78.11878967]
[117.02803802 79.12704468]
[131.27832031 74.44413757]
[141.97319031 62.78523254]
[156.47987366 66.16242981]
[170.73014832 61.47952652]
[184.98043823 56.79661942]
[185.51261902 41.66578674]
[191.17880249 27.65627670]
[201.27722168 16.45171356]
[214.57472229 9.39149189]
[229.45732117 7.31068802]
[244.12611389 10.44132710]
[256.81469727 18.38668442]
[266.00189209 30.17144775]
[280.25219727 25.48854065]
[294.50247192 20.80563354]
[308.75274658 16.12272644]
[323.00302124 11.43981934]
[329.90631104 -2.77707005]
[344.86767578 -7.86953640]
[359.01077271 -0.81630927]
[363.94479370 14.19805622]
[356.74243164 28.26580429]
[341.67672729 33.04078674]
[327.68591309 25.69009590]
[313.43563843 30.37300301]
[299.18536377 35.05591202]
[284.93508911 39.73881912]
[270.68481445 44.42172623]
[270.27896118 59.35894394]
[264.77676392 73.28213501]
[254.82440186 84.50374603]
[241.60856628 91.65660858]
[226.71517944 93.86044312]
[211.93893433 90.83016205]
[199.06709290 82.91259003]
[189.66334534 71.04689789]
[175.41305542 75.72980499]
[161.16278076 80.41271210]
[151.48718262 91.73666382]
[135.96122742 88.69441223]
[121.71094513 93.37731934]
[118.11185455 107.93914032]
[128.53973389 118.72149658]
[138.96762085 129.50384521]
[149.39550781 140.28620911]
[155.66702271 142.47842407]
[159.32704163 146.85870361]
[159.98419189 151.60742188]
[170.04597473 162.73219299]
[180.10774231 173.85697937]
[190.16950989 184.98176575]
[200.23127747 196.10653687]
[210.29304504 207.23132324]
[225.40197754 214.92265320]
[222.19380188 231.57029724]
[205.30863953 233.09600830]
[199.16827393 217.29309082]
[189.10650635 206.16831970]
[179.04472351 195.04353333]
[168.98295593 183.91874695]
[158.92118835 172.79397583]
[148.85942078 161.66918945]
[138.61315918 150.71409607]
[128.18527222 139.93173218]
[117.75738525 129.14938354]
[107.32949829 118.36702728]
[114.87477112 131.33116150]
[116.70133209 146.21952820]
[112.51364136 160.62312317]
[102.98928070 172.21131897]
[89.66934967 179.10911560]
[74.70909882 180.20039368]
[60.52918243 175.30857849]
[49.42398834 165.22518921]
[43.19041061 151.58178711]
[42.83707047 136.58595276]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 107]
[4 106]
[5 105]
[6 104]
[7 103]
[8 25]
[9 24]
[10 23]
[11 22]
[12 21]
[13 20]
[14 19]
[26 102]
[27 101]
[28 100]
[29 99]
[30 98]
[31 97]
[41 87]
[42 86]
[43 85]
[44 84]
[48 82]
[49 81]
[51 80]
[52 79]
[53 78]
[54 77]
[55 76]
[56 73]
[57 72]
[58 71]
[59 70]
[60 69]
[111 152]
[112 151]
[114 149]
[115 148]
[116 147]
[124 139]
[125 138]
[126 137]
[127 136]
[128 135]
[153 177]
[154 176]
[155 175]
[156 174]
[159 173]
[160 172]
[161 171]
[162 170]
[163 169]
[164 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
