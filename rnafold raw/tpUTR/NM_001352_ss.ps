%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 04:02:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUGCCCCACAUCCCCACCUGGCGGAGCUCUCCUCCGCCUUGCUGAGACUUACGCCCUGUUCCCUUCCUGCCCUGUGGCCCACGGGCCGGCCAGCUGGGUGCCCCAGGGACGUGAUAAUGCAGAUAAAUACAUUUAUAUUUUUAAGAAAAAGCGAGCCUCCCCCCUCCCUUGCGGGGGCGGGGAGGGUUCUCUGUGUGUGUCCCCGGCACGUCAGGGACCCUAUCCUCCCACCGCCUCCGUUAACACGAUCCUG\
AAUAAAUCUUGAGAACCCCAGA\
) } def
/len { sequence length } bind def

/coor [
[209.98204041 125.36299133]
[199.49053955 111.23929596]
[192.98326111 94.88232422]
[178.12097168 96.91021729]
[163.25868225 98.93811798]
[148.39639282 100.96601105]
[147.32717896 110.16280365]
[144.52648926 118.98778534]
[140.09680176 127.11809540]
[134.20014954 134.25628662]
[127.05229950 140.14122009]
[118.91473389 144.55757141]
[110.08516693 147.34378052]
[100.88664246 148.39791870]
[91.65567017 147.68141174]
[82.72998047 145.22047424]
[74.43611145 141.10513306]
[64.63651276 152.46153259]
[54.90124130 163.87312317]
[56.05171204 179.40742493]
[46.08096313 190.89823914]
[31.26430130 191.89929199]
[21.59366226 203.36572266]
[11.92302227 214.83213806]
[2.25238276 226.29855347]
[-7.41825724 237.76496887]
[-17.08889771 249.23138428]
[-26.75953674 260.69781494]
[-26.83960724 276.74066162]
[-39.52110291 286.56710815]
[-55.07586670 282.63916016]
[-61.57161713 267.96997070]
[-54.02536392 253.81251526]
[-38.22595215 251.02716064]
[-28.55531502 239.56074524]
[-18.88467407 228.09432983]
[-9.21403408 216.62791443]
[0.45660529 205.16149902]
[10.12724495 193.69508362]
[19.79788399 182.22865295]
[18.28503418 167.45547485]
[27.92909431 155.68913269]
[43.43482208 154.20248413]
[45.33741760 147.09144592]
[53.28011322 142.66194153]
[63.07971191 131.30554199]
[58.24615860 124.49001312]
[54.65666962 116.94480896]
[52.41819763 108.89472961]
[51.59743500 100.57962799]
[52.21883774 92.24726105]
[37.96350479 87.57977295]
[23.70816994 82.91229248]
[9.45283413 78.24480438]
[-4.80250072 73.57731628]
[-19.08398056 68.99045563]
[-33.39115143 64.48435974]
[-47.69831848 59.97826004]
[-62.00548935 55.47216415]
[-76.31266022 50.96606827]
[-93.66708374 61.16142654]
[-112.61223602 55.33579636]
[-120.97641754 37.70568466]
[-135.42810059 33.68712616]
[-149.87979126 29.66856956]
[-163.52464294 37.18227386]
[-178.12345886 32.90101624]
[-185.20254517 19.84642982]
[-198.84739685 27.36013222]
[-213.44621277 23.07887459]
[-220.52528381 10.02428913]
[-234.97697449 6.00573206]
[-249.42866516 1.98717499]
[-253.50955200 3.18894172]
[-257.37805176 3.06522632]
[-260.64929199 1.84068942]
[-263.04864502 -0.15946370]
[-264.43475342 -2.55330586]
[-278.69009399 -7.22079182]
[-292.94543457 -11.88827801]
[-307.20077515 -16.55576324]
[-323.12918091 -12.65477467]
[-334.27478027 -24.68422508]
[-329.17193604 -40.26924896]
[-313.07000732 -43.37730789]
[-302.53329468 -30.81109810]
[-288.27795410 -26.14361191]
[-274.02261353 -21.47612762]
[-259.76727295 -16.80864143]
[-245.41011047 -12.46450996]
[-230.95841980 -8.44595337]
[-216.50672913 -4.42739630]
[-203.70475769 -11.95369053]
[-188.99145508 -8.08417225]
[-181.18399048 5.39474440]
[-168.38201904 -2.13155007]
[-153.66870117 1.73796844]
[-145.86123657 15.21688461]
[-131.40954590 19.23544121]
[-116.95786285 23.25399780]
[-109.76159668 16.02850151]
[-100.14716339 12.39452267]
[-89.81000519 13.06403065]
[-80.60256958 17.98373604]
[-74.20240021 26.33275414]
[-71.80656433 36.65890121]
[-57.49939346 41.16499710]
[-43.19222260 45.67109299]
[-28.88505363 50.17718887]
[-14.57788467 54.68328476]
[-7.28280497 53.69916153]
[-0.13501507 59.32198334]
[14.12032032 63.98946762]
[28.37565422 68.65695190]
[42.63098907 73.32444000]
[56.88632584 77.99192810]
[71.75144196 60.69143677]
[92.88895416 52.11913300]
[115.60542297 54.17844391]
[134.85681152 66.41210175]
[146.36849976 86.10372162]
[161.23078918 84.07582855]
[176.09307861 82.04792786]
[190.95536804 80.02003479]
[191.83917236 67.45220184]
[195.03059387 55.26923370]
[200.41780090 43.89091110]
[207.81338501 33.70895386]
[216.96078491 25.07352638]
[227.54322815 18.28120232]
[239.19474792 13.56477356]
[251.51277161 11.08527088]
[264.07202148 10.92647266]
[276.43927002 13.09207344]
[288.18823242 17.50561142]
[298.91430664 24.01317978]
[308.24835205 32.38877869]
[315.86965942 42.34217072]
[321.51675415 53.52894592]
[324.99639893 65.56241608]
[339.94949341 64.37708282]
[354.90258789 63.19174957]
[369.85568237 62.00641251]
[384.80877686 60.82107544]
[399.76187134 59.63574219]
[414.71496582 58.45040512]
[429.66806030 57.26506805]
[444.62115479 56.07973480]
[443.06225586 49.69247055]
[443.77233887 42.32484818]
[447.09317017 34.74270630]
[454.39660645 21.64079666]
[461.70001221 8.53888798]
[461.66101074 -7.28226995]
[474.61608887 -14.63178921]
[481.91952515 -27.73369789]
[489.22293091 -40.83560944]
[482.57678223 -54.85730743]
[485.47473145 -70.10137177]
[496.80252075 -80.70613861]
[512.20434570 -82.59386444]
[525.75787354 -75.03868103]
[532.25152588 -60.94570923]
[529.18841553 -45.73398209]
[517.74621582 -35.25272369]
[502.32485962 -33.53218460]
[495.02142334 -20.43027687]
[487.71801758 -7.32836723]
[488.27938843 7.55565500]
[474.80194092 15.84231091]
[467.49850464 28.94421959]
[460.19506836 42.04612732]
[467.93841553 54.89295578]
[482.93457031 54.55396271]
[497.93075562 54.21497345]
[512.92694092 53.87598038]
[527.92309570 53.53698730]
[542.91925049 53.19799423]
[557.91540527 52.85900497]
[572.91156006 52.52001190]
[587.90777588 52.18101883]
[602.90393066 51.84202957]
[617.89532471 51.33359528]
[632.88000488 50.65578461]
[647.86468506 49.97797394]
[662.84936523 49.30016327]
[677.83404541 48.62235260]
[692.81872559 47.94454193]
[707.80334473 47.26673126]
[722.76892090 46.25044632]
[737.70764160 44.89620972]
[752.64642334 43.54197311]
[767.58514404 42.18773651]
[782.52386475 40.83349991]
[797.46264648 39.47926331]
[806.28521729 30.10571480]
[818.72912598 29.26563454]
[828.10882568 36.86520004]
[843.06195068 35.67986298]
[858.01501465 34.49452972]
[872.96813965 33.30919266]
[887.92120361 32.12385941]
[902.87432861 30.93852234]
[918.18609619 23.65944481]
[929.41943359 36.35780716]
[920.32702637 50.66740036]
[904.05963135 45.89161301]
[889.10656738 47.07695007]
[874.15344238 48.26228714]
[859.20037842 49.44762039]
[844.24725342 50.63295746]
[829.29418945 51.81829453]
[815.36981201 62.52636719]
[798.81683350 54.41800690]
[783.87811279 55.77224350]
[768.93939209 57.12648010]
[754.00061035 58.48071671]
[739.06188965 59.83495331]
[724.12316895 61.18918991]
[722.23583984 63.21152878]
[719.44927979 64.62313080]
[715.98681641 65.08345795]
[712.18896484 64.33711243]
[708.48120117 62.25140762]
[693.49652100 62.92921829]
[678.51184082 63.60702896]
[663.52716064 64.28484344]
[648.54248047 64.96265411]
[633.55780029 65.64046478]
[618.57312012 66.31827545]
[614.77050781 69.14870453]
[609.15863037 69.64629364]
[603.24291992 66.83819580]
[588.24676514 67.17719269]
[573.25061035 67.51618195]
[558.25439453 67.85517120]
[543.25823975 68.19416809]
[528.26208496 68.53315735]
[513.26593018 68.87214661]
[498.26974487 69.21114349]
[483.27355957 69.55013275]
[468.27740479 69.88912201]
[482.53784180 74.54097748]
[494.85427856 83.10282898]
[504.18298340 94.84912109]
[509.73336792 108.78443909]
[511.03512573 123.72784424]
[507.97793579 138.41299438]
[500.82083130 151.59539795]
[490.17034912 162.15795898]
[476.92907715 169.20555115]
[462.21911621 172.14093018]
[447.28698730 170.71536255]
[433.39816284 165.04965210]
[421.72958374 155.62391663]
[413.27011108 143.23693848]
[408.73663330 128.93843079]
[408.51330566 113.94008636]
[412.61904907 99.51293182]
[420.70596313 86.87957764]
[432.08874512 77.11060333]
[445.80648804 71.03282928]
[430.85339355 72.21816254]
[415.90029907 73.40349579]
[400.94720459 74.58883667]
[385.99411011 75.77416992]
[371.04101562 76.95950317]
[356.08792114 78.14484406]
[341.13482666 79.33017731]
[326.18173218 80.51551056]
[323.38696289 97.79672241]
[316.23522949 113.78570557]
[305.20367432 127.40345764]
[291.03140259 137.72958374]
[274.67001343 144.06448364]
[257.21966553 145.97676086]
[239.85522461 143.33261108]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 124]
[4 123]
[5 122]
[6 121]
[17 46]
[18 45]
[19 43]
[22 40]
[23 39]
[24 38]
[25 37]
[26 36]
[27 35]
[28 34]
[51 116]
[52 115]
[53 114]
[54 113]
[55 112]
[56 110]
[57 109]
[58 108]
[59 107]
[60 106]
[63 100]
[64 99]
[65 98]
[68 95]
[71 92]
[72 91]
[73 90]
[78 89]
[79 88]
[80 87]
[81 86]
[140 270]
[141 269]
[142 268]
[143 267]
[144 266]
[145 265]
[146 264]
[147 263]
[148 262]
[151 172]
[152 171]
[153 170]
[155 168]
[156 167]
[157 166]
[173 242]
[174 241]
[175 240]
[176 239]
[177 238]
[178 237]
[179 236]
[180 235]
[181 234]
[182 233]
[183 230]
[184 229]
[185 228]
[186 227]
[187 226]
[188 225]
[189 224]
[190 219]
[191 218]
[192 217]
[193 216]
[194 215]
[195 214]
[198 212]
[199 211]
[200 210]
[201 209]
[202 208]
[203 207]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
