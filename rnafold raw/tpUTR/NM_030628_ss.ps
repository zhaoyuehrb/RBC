%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 21:22:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUUUUCUUGCUCUGGAAGCCCAGGGAGGUUGAGCAGUGAGAGAGGGAAGGGACUAACGUGCUCCGGAAGGGUGGAGGUUUCUCUUCUAAGUCCUUGGUCUAAAGAGCGCUGUCACUUUUUUCUCUCCCACUUUUUUUUUUCUAAAUAAAAUUUGCCAACUUGAGAAAACCA\
) } def
/len { sequence length } bind def

/coor [
[70.24724579 397.47567749]
[70.12734222 381.67184448]
[81.27693176 370.47082520]
[81.00454712 355.47329712]
[80.73217010 340.47576904]
[80.45979309 325.47827148]
[80.18741608 310.48074341]
[79.91503906 295.48321533]
[79.64266205 280.48568726]
[65.43625641 275.66925049]
[51.23111343 270.85324097]
[41.89398575 282.59283447]
[32.55685806 294.33242798]
[23.21973038 306.07202148]
[13.88260365 317.81161499]
[4.54547644 329.55120850]
[2.65881109 345.84146118]
[-12.49768353 352.10348511]
[-25.33230400 341.89541626]
[-22.64189529 325.71844482]
[-7.19411707 320.21408081]
[2.14301038 308.47448730]
[11.48013783 296.73489380]
[20.81726456 284.99530029]
[30.15439224 273.25570679]
[39.49151993 261.51611328]
[46.43452072 248.21969604]
[50.73173904 233.84840393]
[55.02895355 219.47711182]
[59.32616806 205.10583496]
[63.62338638 190.73454285]
[67.92060089 176.36325073]
[66.82028198 169.02770996]
[72.42852783 161.77131653]
[76.98599243 147.48043823]
[81.54346466 133.18954468]
[86.10092926 118.89865875]
[76.63723755 97.87287140]
[89.74254608 78.90194702]
[87.84092712 64.02297211]
[85.93931580 49.14399719]
[84.03769684 34.26502228]
[82.13607788 19.38604927]
[80.23446655 4.50707626]
[78.33284760 -10.37189674]
[76.43123627 -25.25087166]
[74.52961731 -40.12984467]
[72.62799835 -55.00881958]
[70.72638702 -69.88779449]
[68.82476807 -84.76676178]
[59.40038681 -97.47470093]
[65.46176910 -111.08017731]
[63.56015015 -125.95915222]
[61.65853500 -140.83811951]
[53.44382095 -145.59506226]
[48.43143463 -153.49357605]
[47.64870834 -162.67704773]
[51.14594269 -171.05526733]
[58.01367188 -176.78013611]
[56.92506027 -191.74058533]
[55.83644867 -206.70103455]
[54.74783325 -221.66148376]
[53.65922165 -236.62191772]
[52.57061005 -251.58236694]
[40.49497223 -267.69439697]
[49.58235931 -284.73861694]
[47.95123672 -299.64965820]
[46.32011414 -314.56072998]
[44.28348160 -329.42181396]
[41.84284973 -344.22192383]
[39.40221786 -359.02203369]
[36.96158600 -373.82214355]
[34.25260544 -388.57550049]
[31.27617645 -403.27722168]
[28.29974747 -417.97897339]
[25.32331657 -432.68069458]
[22.34688759 -447.38241577]
[19.37045670 -462.08413696]
[6.84944391 -472.11428833]
[7.02868748 -488.15634155]
[19.77068710 -497.90420532]
[35.30087280 -493.88018799]
[41.70581436 -479.17111206]
[34.07218552 -465.06057739]
[37.04861832 -450.35885620]
[40.02504730 -435.65713501]
[43.00147629 -420.95538330]
[45.97790527 -406.25366211]
[48.95433807 -391.55194092]
[52.39810181 -388.19616699]
[53.74794006 -382.62939453]
[51.76169586 -376.26278687]
[54.20232773 -361.46267700]
[56.64296341 -346.66256714]
[59.08359528 -331.86245728]
[61.75625992 -329.51123047]
[63.40592575 -325.73361206]
[63.36793137 -321.03262329]
[61.23116684 -316.19183350]
[62.86228943 -301.28079224]
[64.49341583 -286.36975098]
[73.03774261 -280.68634033]
[77.11096954 -271.02822876]
[75.13620758 -260.51004028]
[67.53105927 -252.67097473]
[68.61966705 -237.71054077]
[69.70828247 -222.75009155]
[70.79689026 -207.78964233]
[71.88550568 -192.82919312]
[72.97411346 -177.86875916]
[86.04313660 -161.91949463]
[76.53750610 -142.73973083]
[78.43912506 -127.86076355]
[80.34074402 -112.98178864]
[89.62910461 -101.33809662]
[83.70374298 -86.66838074]
[85.60535431 -71.78940582]
[87.50697327 -56.91043472]
[89.40859222 -42.03145981]
[91.31020355 -27.15248680]
[93.21182251 -12.27351284]
[95.11344147 2.60546041]
[97.01505280 17.48443413]
[98.91667175 32.36340714]
[100.81828308 47.24238205]
[102.71990204 62.12135315]
[104.62152100 77.00032806]
[111.10397339 79.33493042]
[116.62860107 83.45210266]
[120.71884918 88.99669647]
[123.02188110 95.49043274]
[123.33905029 102.37316895]
[136.99380493 108.58185577]
[150.64854431 114.79055023]
[164.30329895 120.99923706]
[180.06838989 119.66791534]
[188.45167542 131.97929382]
[202.10641479 138.18797302]
[215.76116943 144.39666748]
[232.02224731 142.27319336]
[241.77557373 155.45669556]
[234.98776245 170.38511658]
[218.64152527 171.70137024]
[209.55247498 158.05142212]
[195.89772034 151.84272766]
[182.24298096 145.63403320]
[167.45455933 147.40945435]
[158.09460449 134.65399170]
[144.43986511 128.44529724]
[130.78511047 122.23660278]
[117.13036346 116.02791595]
[109.51584625 121.44276428]
[100.39182281 123.45612335]
[95.83435059 137.74700928]
[91.27688599 152.03790283]
[86.71941376 166.32879639]
[82.29189301 180.66046143]
[77.99467468 195.03175354]
[73.69745636 209.40304565]
[69.40024567 223.77433777]
[65.10302734 238.14562988]
[60.80580902 252.51690674]
[94.64019012 280.21328735]
[94.91256714 295.21081543]
[95.18494415 310.20834351]
[95.45732117 325.20587158]
[95.72969818 340.20339966]
[96.00207520 355.20092773]
[96.27445221 370.19845581]
[107.82340240 380.98721313]
[108.27743530 396.78497314]
[97.36717987 408.21920776]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 169]
[4 168]
[5 167]
[6 166]
[7 165]
[8 164]
[9 163]
[11 26]
[12 25]
[13 24]
[14 23]
[15 22]
[16 21]
[27 162]
[28 161]
[29 160]
[30 159]
[31 158]
[32 157]
[34 156]
[35 155]
[36 154]
[37 153]
[39 127]
[40 126]
[41 125]
[42 124]
[43 123]
[44 122]
[45 121]
[46 120]
[47 119]
[48 118]
[49 117]
[50 116]
[52 114]
[53 113]
[54 112]
[59 110]
[60 109]
[61 108]
[62 107]
[63 106]
[64 105]
[66 101]
[67 100]
[68 99]
[69 95]
[70 94]
[71 93]
[72 92]
[73 89]
[74 88]
[75 87]
[76 86]
[77 85]
[78 84]
[132 151]
[133 150]
[134 149]
[135 148]
[137 146]
[138 145]
[139 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
