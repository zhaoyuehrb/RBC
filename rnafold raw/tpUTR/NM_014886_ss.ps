%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 01:26:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCAAUUUCAUAUAUAAUUAUUGAGGACUACACACCAAUUGAAGAAACUGCCAUUACUGUGAUGUUUCUGAAUACUACCAAACAGCCAUACAUGUCUGCAAUGAAGAGAUUUAUUAAAUUGUAAACAUUAAAGUGGUCCAGUUUUAUAAAUGGUCUUUAUUUUGAAAUACGCUUUGACCCCAUGUUCAUAAAACUGAAUGAUUGAAAAAAAGCAAAUAUACAAAUAUCCUACUUCAUCAA\
) } def
/len { sequence length } bind def

/coor [
[324.17501831 406.20254517]
[337.81182861 399.95455933]
[352.33563232 396.20498657]
[367.29269409 395.07092285]
[382.21582031 396.58786011]
[396.64523315 400.71087646]
[385.18243408 391.03594971]
[373.71963501 381.36102295]
[362.25683594 371.68609619]
[350.79400635 362.01116943]
[339.33120728 352.33624268]
[332.42404175 356.48995972]
[324.72622681 358.93127441]
[316.65625000 359.51974487]
[308.65469360 358.21600342]
[301.15994263 355.08407593]
[294.58444214 350.28836060]
[289.29187012 344.08508301]
[285.57699585 336.80853271]
[283.64935303 328.85302734]
[283.62139893 320.65164185]
[285.50195312 312.65255737]
[289.19534302 305.29464722]
[278.79730225 294.48352051]
[268.39923096 283.67239380]
[258.00115967 272.86129761]
[247.60310364 262.05017090]
[237.20503235 251.23905945]
[226.80696106 240.42794800]
[216.40890503 229.61682129]
[206.01083374 218.80570984]
[191.33567810 224.81143188]
[175.44085693 224.72129822]
[160.76371765 218.51948547]
[149.56622314 207.12966919]
[143.58645630 192.27748108]
[143.76876831 176.22917175]
[150.11480713 161.44577026]
[139.57727051 150.77053833]
[129.03973389 140.09532166]
[118.50220490 129.42008972]
[107.96467590 118.74487305]
[88.57687378 124.27648163]
[68.09176636 109.50098419]
[53.15365982 110.86219788]
[38.21554947 112.22341156]
[23.27744102 113.58462524]
[8.33933163 114.94583893]
[-6.59877729 116.30704498]
[-13.96177387 127.57047272]
[-26.28505135 132.47143555]
[-38.99413681 129.43144226]
[-47.50851822 119.77623749]
[-62.46303940 120.94342041]
[-77.41756439 122.11060333]
[-90.62500763 131.83146667]
[-105.53668213 125.00695801]
[-106.81273651 108.65753174]
[-93.14046478 99.60208130]
[-78.58473969 107.15608215]
[-63.63022232 105.98889923]
[-48.67570114 104.82171631]
[-38.29053879 91.58153534]
[-21.20525551 89.92646790]
[-7.95999002 101.36894226]
[6.97811890 100.00772858]
[21.91622734 98.64651489]
[36.85433578 97.28530121]
[51.79244614 95.92408752]
[66.73055267 94.56287384]
[71.10737610 88.47244263]
[57.34535217 82.50530243]
[43.58332825 76.53816986]
[29.82130623 70.57103729]
[14.88334942 69.20814514]
[3.33207393 59.63902664]
[-0.78640378 45.21549988]
[3.97051454 30.98975754]
[15.93660164 21.94471550]
[30.92044067 21.24862289]
[43.67357635 29.14530373]
[49.72895432 42.86914062]
[59.77297592 54.00994873]
[69.81700134 65.15075684]
[79.86102295 76.29156494]
[84.23784637 70.20112610]
[80.76457214 55.60878754]
[77.29130554 41.01644897]
[73.81803131 26.42410851]
[70.34475708 11.83176899]
[53.83633423 2.50448895]
[49.48405838 -15.62146854]
[59.60429001 -30.89382744]
[55.75336456 -45.39107895]
[51.90243530 -59.88833237]
[48.05150604 -74.38558960]
[37.03063583 -85.73683929]
[41.24115372 -100.02392578]
[37.39022827 -114.52117920]
[33.53929901 -129.01843262]
[29.68837166 -143.51568604]
[25.83744240 -158.01293945]
[21.98651505 -172.51019287]
[6.89723444 -174.14666748]
[-6.58013916 -181.12698364]
[-16.62290192 -192.50711060]
[-21.87285233 -206.74798584]
[-21.61997604 -221.92364502]
[-15.89847660 -235.98168945]
[-5.48213625 -247.02091980]
[8.22031879 -253.54832458]
[23.35574532 -254.68116760]
[37.87720108 -250.26622009]
[49.82077408 -240.90055847]
[57.57120132 -227.85083008]
[60.08029556 -212.88191223]
[57.00872803 -198.01818848]
[48.77189636 -185.26989746]
[36.48376846 -176.36111450]
[40.33469772 -161.86386108]
[44.18562317 -147.36660767]
[48.03655243 -132.86935425]
[51.88748169 -118.37210846]
[55.73840714 -103.87485504]
[66.48383331 -93.56053925]
[62.54875946 -78.23651886]
[66.39968872 -63.73926163]
[70.25061798 -49.24200821]
[74.10154724 -34.74475479]
[84.95397949 -31.30432129]
[92.88703156 -22.97250557]
[95.85266113 -11.73298645]
[93.00493622 -0.33956158]
[84.93709564 8.35849667]
[88.41036987 22.95083618]
[91.88364410 37.54317474]
[95.35691071 52.13551712]
[98.83018494 66.72785950]
[122.21018219 84.94865417]
[118.63990021 108.20733643]
[129.17742920 118.88256073]
[139.71496582 129.55778503]
[150.25250244 140.23301697]
[160.79002380 150.90823364]
[173.81066895 145.16297913]
[187.98034668 144.20585632]
[201.59797668 148.13131714]
[213.03567505 156.44895935]
[220.93339539 168.14453125]
[224.36064148 181.80371094]
[222.92604065 195.78302002]
[216.82196045 208.40763855]
[227.22001648 219.21876526]
[237.61808777 230.02987671]
[248.01614380 240.84098816]
[258.41421509 251.65211487]
[268.81228638 262.46322632]
[279.21035767 273.27435303]
[289.60839844 284.08544922]
[300.00646973 294.89657593]
[321.95736694 290.04443359]
[342.24194336 299.43255615]
[352.62832642 319.07870483]
[349.00613403 340.87344360]
[360.46893311 350.54837036]
[371.93176270 360.22329712]
[383.39456177 369.89822388]
[394.85736084 379.57312012]
[406.32015991 389.24804688]
[412.78295898 389.69082642]
[417.88705444 392.67459106]
[420.80548096 397.15765381]
[435.14181519 401.57009888]
[449.47811890 405.98257446]
[463.81445312 410.39505005]
[478.15075684 414.80749512]
[487.19799805 401.82006836]
[499.80227661 392.27847290]
[514.72094727 387.10839844]
[530.48767090 386.80523682]
[545.55682373 391.38668823]
[558.45483398 400.39215088]
[567.92425537 412.92907715]
[573.04663086 427.76135254]
[573.33111572 443.43118286]
[587.72351074 447.65716553]
[602.11590576 451.88314819]
[616.50830078 456.10913086]
[630.90069580 460.33511353]
[644.64990234 452.54190063]
[659.86029053 456.83392334]
[667.50769043 470.66479492]
[663.05511475 485.82888794]
[649.14416504 493.32965088]
[634.02795410 488.71697998]
[626.67468262 474.72750854]
[612.28228760 470.50152588]
[597.88989258 466.27554321]
[583.49749756 462.04956055]
[569.10510254 457.82357788]
[561.35919189 469.77731323]
[550.54785156 479.07568359]
[537.54064941 484.95889282]
[523.38720703 486.94241333]
[509.23242188 484.85671997]
[496.22375488 478.86184692]
[485.41833496 469.43508911]
[477.69711304 457.33306885]
[473.69281006 443.53094482]
[473.73831177 429.14382935]
[459.40197754 424.73135376]
[445.06564331 420.31890869]
[430.72933960 415.90643311]
[416.39300537 411.49395752]
[427.65783691 421.39868164]
[437.00296021 433.13192749]
[444.13644409 446.32711792]
[448.83541870 460.57211304]
[450.95309448 475.42187500]
[450.42333984 490.41250610]
[447.26269531 505.07574463]
[441.56991577 518.95349121]
[433.52279663 531.61224365]
[423.37274170 542.65655518]
[411.43685913 551.74139404]
[398.08795166 558.58294678]
[383.74307251 562.96752930]
[368.85034180 564.75817871]
[353.87496948 563.89886475]
[339.28479004 560.41656494]
[325.53558350 554.41992188]
[313.05685425 546.09637451]
[302.23843384 535.70593262]
[293.41827393 523.57312012]
[286.87191772 510.07702637]
[282.80383301 495.63919067]
[281.34115601 480.71069336]
[282.52954102 465.75784302]
[286.33187866 451.24777222]
[292.62939453 437.63375854]
[301.22534180 425.34106445]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 169]
[7 168]
[8 167]
[9 166]
[10 165]
[11 164]
[23 160]
[24 159]
[25 158]
[26 157]
[27 156]
[28 155]
[29 154]
[30 153]
[31 152]
[38 144]
[39 143]
[40 142]
[41 141]
[42 140]
[44 70]
[45 69]
[46 68]
[47 67]
[48 66]
[49 65]
[53 62]
[54 61]
[55 60]
[86 138]
[87 137]
[88 136]
[89 135]
[90 134]
[93 129]
[94 128]
[95 127]
[96 126]
[98 124]
[99 123]
[100 122]
[101 121]
[102 120]
[103 119]
[172 214]
[173 213]
[174 212]
[175 211]
[176 210]
[185 200]
[186 199]
[187 198]
[188 197]
[189 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
