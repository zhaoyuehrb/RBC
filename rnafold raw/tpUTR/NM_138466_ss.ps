%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 01:54:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCAGGGAGCCGAGAGUCGACGCGUCGCCCAAGCGAACCCUGCGUCGAGGAGGGGCCUUUGUCCCGGAAAACCCACCAACGUUUGUAACUUUGAUUAAACUUCACUUUGUACA\
) } def
/len { sequence length } bind def

/coor [
[89.10807800 133.51742554]
[73.53242493 119.54837036]
[69.43857574 100.47998047]
[54.84115601 97.02812195]
[40.24373627 93.57627106]
[25.64631271 90.12442017]
[11.04889202 86.67256165]
[-3.54852891 83.22071075]
[-12.75999928 84.29325104]
[-18.49487877 79.47006226]
[-32.99256516 75.62077332]
[-47.49025345 71.77147675]
[-57.45600510 83.27996063]
[-71.37351990 89.29576111]
[-86.46108246 88.67484283]
[-99.72837830 81.59388733]
[-108.56912231 69.50460815]
[-111.27303314 54.83646774]
[-125.77072144 50.98717499]
[-140.26841736 47.13788605]
[-154.76609802 43.28859329]
[-169.26377869 39.43930054]
[-183.76147461 35.59001160]
[-198.25915527 31.74071884]
[-212.75685120 27.89142799]
[-227.44311523 24.83958817]
[-242.27410889 22.59430695]
[-257.10513306 20.34902573]
[-271.93612671 18.10374451]
[-286.99987793 24.58564949]
[-299.98168945 14.56544113]
[-297.52697754 -1.64894819]
[-282.16094971 -7.37754536]
[-269.69085693 3.27273941]
[-254.85984802 5.51802063]
[-240.02883911 7.76330137]
[-225.19783020 10.00858212]
[-222.80206299 8.31569004]
[-219.54687500 7.53753567]
[-215.80366516 8.02404976]
[-212.06959534 9.97397804]
[-208.90756226 13.39373970]
[-194.40986633 17.24303055]
[-179.91218567 21.09232330]
[-165.41448975 24.94161415]
[-150.91680908 28.79090500]
[-136.41911316 32.64019775]
[-121.92143250 36.48949051]
[-107.42374420 40.33877945]
[-97.79979706 28.94382095]
[-84.12653351 22.83225060]
[-69.09411621 23.26516724]
[-55.68568039 30.21024513]
[-46.58535004 42.33752823]
[-43.64096451 57.27379227]
[-29.14327431 61.12308121]
[-14.64558697 64.97237396]
[-0.09667523 68.62329102]
[14.50074577 72.07514191]
[29.09816742 75.52699280]
[43.69558716 78.97885132]
[58.29301071 82.43070221]
[72.89043427 85.88255310]
[81.05189514 73.09942627]
[95.19974518 65.08568573]
[112.54699707 64.57480621]
[129.11727905 72.69038391]
[139.20489502 61.58902740]
[139.87753296 45.56008148]
[152.91336060 36.20878601]
[168.31240845 40.70865631]
[174.26184082 55.60777664]
[166.19776917 69.47681427]
[150.30624390 71.67663574]
[140.21864319 82.77799225]
[140.62820435 90.26679993]
[154.80319214 85.36070251]
[167.63903809 77.59918213]
[182.05429077 81.74652100]
[188.80297852 95.14260864]
[183.55647278 109.19516754]
[169.67990112 114.89083862]
[156.07283020 108.57540131]
[141.44735718 105.24441528]
[141.85691833 112.73323059]
[153.09503174 122.66826630]
[164.33312988 132.60330200]
[175.57124329 142.53834534]
[191.12623596 137.12525940]
[207.20419312 140.23820496]
[219.47395325 150.94302368]
[224.67828369 166.27342224]
[221.49829102 182.05244446]
[233.00358582 191.67681885]
[244.50886536 201.30117798]
[259.87203979 198.38441467]
[273.49041748 206.07035828]
[278.93383789 220.72993469]
[273.63208008 235.44134521]
[260.08847046 243.25830078]
[244.69790649 240.48988342]
[234.72731018 228.44325256]
[234.88450623 212.80645752]
[223.37922668 203.18209839]
[211.87393188 193.55773926]
[199.31314087 199.10057068]
[185.52435303 198.65950012]
[173.22558594 192.26397705]
[164.86601257 181.12277222]
[162.13832092 167.39602661]
[165.63619995 153.77644348]
[154.39808655 143.84141541]
[143.15998840 133.90637207]
[131.92187500 123.97133636]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 63]
[4 62]
[5 61]
[6 60]
[7 59]
[8 58]
[10 57]
[11 56]
[12 55]
[18 49]
[19 48]
[20 47]
[21 46]
[22 45]
[23 44]
[24 43]
[25 42]
[26 37]
[27 36]
[28 35]
[29 34]
[67 75]
[68 74]
[85 114]
[86 113]
[87 112]
[88 111]
[93 105]
[94 104]
[95 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
