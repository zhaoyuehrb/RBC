%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 22:07:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCAGGGCCUCCUUGCCCAGGCAGGAGGCUGGGGUGCUGUGUGGGGGCCAAUGCACUGAACCUGGACUUGGGGGAAAGAGCCGAGUAUCUUCCAGCCGCUGCCUCCUGACUGUAAUAAUAUUAAACUUUUUUAAAAAACCAUAUCAUCAUCUGUCAGGCACUUUGGGA\
) } def
/len { sequence length } bind def

/coor [
[102.56902313 114.13031006]
[104.79864502 129.79362488]
[92.98620605 138.86642456]
[87.56758118 152.85350037]
[82.14895630 166.84059143]
[76.73033142 180.82766724]
[71.31170654 194.81475830]
[65.89308167 208.80183411]
[65.80937195 225.75556946]
[49.49501419 230.36839294]
[40.54619598 215.96856689]
[51.90599442 203.38320923]
[57.32461929 189.39613342]
[62.74324417 175.40904236]
[68.16187286 161.42196655]
[73.58049774 147.43487549]
[78.99912262 133.44779968]
[76.38192749 118.78492737]
[88.58193970 108.71168518]
[85.14768219 94.11011505]
[74.06254578 84.00468445]
[62.97741318 73.89924622]
[51.89228058 63.79381561]
[40.80714417 53.68837738]
[29.72201157 43.58294296]
[16.79960823 43.39228439]
[7.77155828 34.71436691]
[7.11474466 22.61105156]
[-3.78175879 12.30250168]
[-14.67826271 1.99395144]
[-25.57476616 -8.31459904]
[-36.47127151 -18.62314987]
[-47.36777496 -28.93169975]
[-60.91648102 -35.36850739]
[-75.79115295 -37.30349731]
[-90.66582489 -39.23848343]
[-105.54048920 -41.17347336]
[-120.41516113 -43.10846329]
[-132.86065674 -33.74110031]
[-147.91812134 -35.91534805]
[-156.77177429 -47.83795166]
[-171.64643860 -49.77294159]
[-180.60017395 -47.77196503]
[-186.77713013 -51.88358307]
[-201.82522583 -45.36538696]
[-214.83116150 -55.35427475]
[-212.41554260 -71.57453156]
[-197.06335449 -77.34014893]
[-184.56761169 -66.71995544]
[-169.71145630 -64.64761353]
[-154.83677673 -62.71262360]
[-143.22749329 -71.97328186]
[-128.11488342 -70.22282410]
[-118.48017120 -57.98313141]
[-103.60550690 -56.04814529]
[-88.73083496 -54.11315536]
[-73.85616302 -52.17816544]
[-58.98149490 -50.24317932]
[-54.13703156 -55.96866608]
[-66.26309967 -64.79807281]
[-80.85337830 -68.28000641]
[-85.53124237 -82.53194427]
[-75.84235382 -93.98294830]
[-61.01263428 -91.72918701]
[-55.16320038 -77.91663361]
[-44.44811249 -67.41963959]
[-39.60365295 -73.14512634]
[-43.97449875 -87.49419403]
[-48.34534454 -101.84326172]
[-52.71619034 -116.19232941]
[-57.08703613 -130.54139709]
[-61.45788193 -144.89045715]
[-76.33103180 -148.98837280]
[-86.61058807 -160.49203491]
[-89.01638794 -175.73066711]
[-82.78074646 -189.84165955]
[-69.89343262 -198.32226562]
[-54.46673965 -198.46635437]
[-41.42327499 -190.22793579]
[-34.92515564 -176.23585510]
[-37.04591370 -160.95495605]
[-47.10881424 -149.26130676]
[-42.73796844 -134.91223145]
[-38.36712265 -120.56317139]
[-33.99627686 -106.21410370]
[-29.62543106 -91.86504364]
[-25.25458527 -77.51597595]
[-23.13468552 -68.95232391]
[-23.06338692 -60.79957962]
[-24.79028130 -53.50128174]
[-27.97581291 -47.41793823]
[-32.21419907 -42.81026077]
[-37.05922318 -39.82820129]
[-26.16271973 -29.51965332]
[-15.26621532 -19.21110153]
[-4.36971235 -8.90255260]
[6.52679157 1.40599811]
[17.42329597 11.71454811]
[34.67509079 14.83805847]
[39.82744598 32.49781036]
[50.91257858 42.60324478]
[61.99771500 52.70867920]
[73.08284760 62.81411362]
[84.16798401 72.91954803]
[95.25311279 83.02498627]
[124.98176575 88.43711853]
[139.72636414 91.19335938]
[154.47096252 93.94960022]
[169.21556091 96.70584106]
[183.96015930 99.46208954]
[198.70475769 102.21833038]
[203.53799438 87.99087524]
[210.34690857 74.59611511]
[218.99285889 62.30675507]
[229.29980469 51.37298584]
[241.05795288 42.01740646]
[254.02789307 34.43048096]
[267.94558716 28.76667786]
[282.52767944 25.14129639]
[297.47729492 23.62814903]
[312.49008179 24.25804138]
[327.26040649 27.01814651]
[341.48757935 31.85227776]
[354.88189697 38.66201401]
[367.17074585 47.30871582]
[378.10388184 57.61635590]
[387.45870972 69.37507629]
[395.04483032 82.34548187]
[400.70779419 96.26352692]
[404.33227539 110.84584045]
[405.84448242 125.79555511]
[405.21365356 140.80830383]
[402.45263672 155.57846069]
[397.61764526 169.80532837]
[390.80706787 183.19923401]
[382.15960693 195.48753357]
[371.85128784 206.42002869]
[360.09197998 215.77415466]
[347.12112427 223.35946655]
[333.20272827 229.02154541]
[318.62017822 232.64512634]
[303.67037964 234.15641785]
[288.65765381 233.52467346]
[273.88766479 230.76274109]
[259.66110229 225.92684937]
[246.26762390 219.11544800]
[233.97985840 210.46722412]
[223.04800415 200.15823364]
[213.69461060 188.39836121]
[206.11009216 175.42700195]
[200.44886780 161.50827026]
[196.82620239 146.92550659]
[195.31582642 131.97560120]
[195.94850159 116.96292877]
[181.20391846 114.20668030]
[166.45932007 111.45043945]
[151.71472168 108.69419861]
[136.97012329 105.93795776]
[122.22552490 103.18170929]
[133.84371948 112.66947937]
[147.96379089 117.73143768]
[157.83061218 129.02947998]
[160.94551086 143.70249939]
[156.51966858 158.03469849]
[145.67388916 168.39660645]
[131.15473938 172.16415405]
[116.63906860 168.38328552]
[105.80279541 158.01144409]
[101.39009857 143.67518616]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 19]
[3 17]
[4 16]
[5 15]
[6 14]
[7 13]
[8 12]
[20 105]
[21 104]
[22 103]
[23 102]
[24 101]
[25 100]
[28 98]
[29 97]
[30 96]
[31 95]
[32 94]
[33 93]
[34 58]
[35 57]
[36 56]
[37 55]
[38 54]
[41 51]
[42 50]
[44 49]
[67 87]
[68 86]
[69 85]
[70 84]
[71 83]
[72 82]
[106 159]
[107 158]
[108 157]
[109 156]
[110 155]
[111 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
