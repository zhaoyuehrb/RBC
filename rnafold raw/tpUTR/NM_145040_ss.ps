%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 22:14:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCUGGUGUUGCCUGCCUCCCCUGUGCUUGUGCCUUGUCCCAAAAUAAAUCCUUUCAGAAUGUAGCACUCACGCCCUAAUAAGGAGCGAAUCCUACAUCCACCAAGGCGGGCGCUCUGGCCCUCCCUUCCUUAAGCCCAGUCCUGUGUCCUCUGAAAGAGGUGCAGUCACUCACACCUGCUUGCGCUCACCAUCAAUAAAAGUAAUUUCACCCGAA\
) } def
/len { sequence length } bind def

/coor [
[219.79823303 695.90216064]
[219.14994812 680.91619873]
[218.50164795 665.93017578]
[213.08509827 657.96282959]
[215.39456177 647.35388184]
[211.13088989 632.97259521]
[206.86720276 618.59130859]
[202.60351562 604.21002197]
[198.33982849 589.82879639]
[184.97497559 578.45220947]
[189.42515564 560.58142090]
[184.95468140 546.26306152]
[180.48419189 531.94476318]
[167.21369934 525.27917480]
[162.47602844 510.82202148]
[169.55746460 496.94790649]
[165.08697510 482.62957764]
[149.34912109 482.09646606]
[134.72067261 476.19567871]
[122.97779846 465.62387085]
[115.55306244 451.64602661]
[113.36070251 435.94409180]
[116.68408203 420.41461182]
[125.13922882 406.93972778]
[137.71910095 397.15893555]
[133.04273987 382.90649414]
[128.36639404 368.65405273]
[117.04689026 358.97326660]
[120.09627533 343.44869995]
[115.41992188 329.19625854]
[110.74357605 314.94384766]
[106.06722260 300.69140625]
[101.39086914 286.43899536]
[96.71451569 272.18655396]
[92.03816223 257.93411255]
[87.36180878 243.68170166]
[84.63156128 258.43112183]
[77.07913971 271.39111328]
[65.59255981 281.03778076]
[51.52241135 286.23690796]
[36.52306747 286.37719727]
[22.35814857 281.44210815]
[10.69316292 272.01193237]
[2.89968228 259.19546509]
[-0.10593738 244.49967957]
[2.02970481 229.65249634]
[9.05550003 216.39964294]
[20.14535522 206.29939270]
[33.99532700 200.53932190]
[48.97693253 199.79672241]
[63.32863998 204.15888977]
[75.36296844 213.11294556]
[83.66445923 225.60496521]
[82.36908722 210.66099548]
[81.07371521 195.71704102]
[79.77834320 180.77307129]
[78.48297119 165.82911682]
[77.18759918 150.88514709]
[75.89222717 135.94119263]
[74.59685516 120.99723053]
[67.92216492 107.56411743]
[56.79430008 97.50576019]
[45.66643143 87.44739532]
[34.53856659 77.38903809]
[23.41069984 67.33068085]
[12.28283310 57.27231979]
[0.43096867 62.38737869]
[-12.42837143 62.64097214]
[-24.38553047 58.03075790]
[-33.67817688 49.27407455]
[-38.95103455 37.69654083]
[-39.45349121 25.03148270]
[-35.14624023 13.16042614]
[-45.97962189 2.78556228]
[-56.81300735 -7.58930206]
[-67.72086334 -17.88583755]
[-78.70262909 -28.10351181]
[-89.68439484 -38.32118225]
[-105.77977753 -41.46292496]
[-110.85001373 -57.05858994]
[-99.67927551 -69.06469727]
[-83.75905609 -65.13038635]
[-79.46672058 -49.30294800]
[-68.48495483 -39.08527756]
[-57.50318909 -28.86760330]
[-50.46869278 -26.61383057]
[-46.43814087 -18.42268562]
[-35.60475922 -8.04782104]
[-24.77137566 2.32704353]
[-8.42187595 -3.08402061]
[8.50257969 0.55267060]
[21.31736946 12.32283401]
[26.42870712 29.04821968]
[22.34119225 46.14445114]
[33.46905899 56.20281219]
[44.59692383 66.26116943]
[55.72479248 76.31953430]
[66.85266113 86.37789154]
[77.98052216 96.43624878]
[87.05151367 84.47016144]
[100.36876678 81.87020874]
[106.84918976 68.34230042]
[113.32961273 54.81439972]
[113.20367432 48.21255493]
[116.00685120 43.27650070]
[120.19667053 40.99413300]
[127.06424713 27.65859985]
[133.93182373 14.32306767]
[140.70312500 0.93839824]
[147.28085327 -12.54245949]
[153.76127625 -26.07036209]
[160.24169922 -39.59826660]
[166.72210693 -53.12616730]
[158.23173523 -64.23908234]
[155.37028503 -77.86073303]
[158.64018250 -91.32208252]
[167.34817505 -102.01050568]
[179.75129700 -107.87689209]
[193.40554810 -107.82831573]
[200.08024597 -121.26142883]
[192.08094788 -134.45289612]
[192.50619507 -149.87438965]
[201.22029114 -162.60498047]
[215.44261169 -168.58238220]
[230.63485718 -165.89921570]
[241.94923401 -155.41168213]
[245.77536011 -140.46630859]
[240.89236450 -125.83211517]
[228.85835266 -116.17881012]
[213.51335144 -114.58673859]
[206.83866882 -101.15362549]
[216.10281372 -87.91106415]
[217.43069458 -71.71009827]
[210.36534119 -56.96638107]
[196.75039673 -47.74633408]
[180.25001526 -46.64574814]
[173.76959229 -33.11784744]
[167.28918457 -19.58994293]
[160.80876160 -6.06203938]
[160.75390625 1.32447803]
[154.13624573 7.61308861]
[153.97496033 14.99804878]
[147.26734924 21.19064331]
[140.39978027 34.52617645]
[133.53219604 47.86170578]
[126.85751343 61.29481888]
[120.37709045 74.82272339]
[113.89667511 88.35062408]
[119.17596436 99.83640289]
[115.71482086 112.72334290]
[104.24684143 120.83445740]
[89.54081726 119.70185852]
[90.83618927 134.64581299]
[92.13156128 149.58978271]
[93.42693329 164.53373718]
[94.72230530 179.47770691]
[96.01767731 194.42166138]
[97.31304932 209.36563110]
[98.60842133 224.30958557]
[101.61424255 239.00534058]
[106.29058838 253.25776672]
[110.96694183 267.51019287]
[115.64329529 281.76263428]
[120.31964874 296.01504517]
[124.99600220 310.26748657]
[129.67234802 324.51992798]
[134.34870911 338.77233887]
[146.00268555 349.47259521]
[142.61882019 363.97772217]
[147.29516602 378.23013306]
[151.97152710 392.48257446]
[166.29666138 392.61047363]
[179.86192322 397.14868164]
[191.34570312 405.64111328]
[199.63348389 417.24710083]
[203.92605591 430.82461548]
[203.81648254 445.04266357]
[199.32873535 458.51171875]
[190.91398621 469.91955566]
[179.40531921 478.15908813]
[183.87579346 492.47744751]
[197.59329224 499.85769653]
[201.92301941 514.44219971]
[194.80253601 527.47424316]
[199.27301025 541.79260254]
[203.74349976 556.11096191]
[214.78178406 562.77661133]
[218.21231079 574.79040527]
[212.72109985 585.56506348]
[216.98478699 599.94635010]
[221.24847412 614.32763672]
[225.51216125 628.70892334]
[229.77583313 643.09014893]
[233.02590942 628.44653320]
[240.54133606 615.46502686]
[251.62216187 605.35485840]
[265.23629761 599.05767822]
[280.11578369 597.15991211]
[294.87469482 599.83837891]
[308.13845825 606.84356689]
[318.67166138 617.52307129]
[325.49325562 630.88214111]
[327.96789551 645.67663574]
[325.86511230 660.52850342]
[319.38070679 674.05450439]
[309.11868286 684.99481201]
[296.03479004 692.33050537]
[281.34768677 695.37829590]
[266.42532349 693.85430908]
[252.65750122 687.90057373]
[241.32659912 678.07147217]
[233.48764038 665.28192139]
[234.13592529 680.26788330]
[234.78422546 695.25384521]
[244.04161072 708.79022217]
[236.70448303 723.45648193]
[220.32066345 724.16522217]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 214]
[2 213]
[3 212]
[5 193]
[6 192]
[7 191]
[8 190]
[9 189]
[11 186]
[12 185]
[13 184]
[16 181]
[17 180]
[25 171]
[26 170]
[27 169]
[29 167]
[30 166]
[31 165]
[32 164]
[33 163]
[34 162]
[35 161]
[36 160]
[53 159]
[54 158]
[55 157]
[56 156]
[57 155]
[58 154]
[59 153]
[60 152]
[61 99]
[62 98]
[63 97]
[64 96]
[65 95]
[66 94]
[73 89]
[74 88]
[75 87]
[76 85]
[77 84]
[78 83]
[101 148]
[102 147]
[103 146]
[106 145]
[107 144]
[108 143]
[109 141]
[110 139]
[111 138]
[112 137]
[113 136]
[119 131]
[120 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
