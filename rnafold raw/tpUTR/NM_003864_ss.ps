%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 02:20:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGACGUGGAAUUGAGACUAAUAACUUGGAUGUUAACACUGUUUACUGUUUUUUCACAUGUAGAAAUGUUCUUUGUGUAUUUUUUCUACAGAGGAUUUUCUCUGAUUUUAUUUUCUUUGUUUCUGACUCUAAUAAUUAGUUGGAAACUCAUAUAAAAUGAGCUUUCCUAAAUUAAAUCUAUUUUAAAUAAAGGUUAUUACUAUUA\
) } def
/len { sequence length } bind def

/coor [
[66.16388702 155.50955200]
[73.24019623 142.28359985]
[80.31651306 129.05764771]
[87.39282227 115.83168793]
[74.84191895 124.04598999]
[62.29100800 132.26028442]
[49.74010086 140.47459412]
[37.18919373 148.68888855]
[24.70128441 156.99865723]
[12.27710342 165.40339661]
[-0.14707811 173.80813599]
[-3.37896347 179.58314514]
[-8.30386543 182.42898560]
[-13.08078480 182.27296448]
[-25.75550079 190.29490662]
[-38.43021774 198.31686401]
[-51.10493088 206.33880615]
[-63.77964783 214.36074829]
[-63.26039886 229.64726257]
[-70.41513062 243.05273438]
[-83.23400879 251.02409363]
[-98.22147369 251.50558472]
[-111.34921265 244.46795654]
[-124.02392578 252.48991394]
[-136.69863892 260.51184082]
[-144.86666870 277.01330566]
[-162.41394043 277.04666138]
[-174.96484375 285.26095581]
[-175.58726501 300.76553345]
[-185.23059082 312.92227173]
[-200.18673706 317.05664062]
[-214.70480347 311.57888794]
[-223.20225525 298.59530640]
[-222.41168213 283.09838867]
[-212.63705444 271.04699707]
[-197.63691711 267.07510376]
[-183.17915344 272.71005249]
[-170.62823486 264.49572754]
[-167.84799194 252.72048950]
[-157.45544434 245.77485657]
[-144.72058105 247.83714294]
[-132.04586792 239.81518555]
[-119.37115479 231.79324341]
[-120.11317444 216.91659546]
[-113.26358795 203.57720947]
[-100.57288361 195.40332031]
[-85.39508820 194.67433167]
[-71.80158997 201.68603516]
[-59.12687683 193.66409302]
[-46.45215988 185.64213562]
[-33.77744675 177.62019348]
[-21.10272980 169.59825134]
[-8.55182171 161.38395691]
[3.87235999 152.97921753]
[16.29654121 144.57446289]
[20.07683182 138.22032166]
[28.97489357 136.13798523]
[41.52580261 127.92368317]
[54.07670975 119.70938110]
[66.62761688 111.49507904]
[79.17852783 103.28078461]
[81.68306732 88.49134827]
[72.53652954 76.60266876]
[63.38998795 64.71398163]
[54.24345016 52.82529449]
[45.09691238 40.93660736]
[37.38059616 36.04067993]
[35.90319443 28.79615974]
[26.93902016 16.76937294]
[17.97484589 4.74258709]
[9.01067257 -7.28419924]
[0.04649953 -19.31098557]
[-8.91767406 -31.33777237]
[-17.88184738 -43.36455917]
[-26.84602165 -55.39134598]
[-35.81019592 -67.41812897]
[-44.77436829 -79.44491577]
[-60.15721512 -78.27378845]
[-73.72037506 -85.62526703]
[-81.13589478 -99.15351868]
[-80.03750610 -114.54173279]
[-70.77570343 -126.87957764]
[-56.30589294 -132.23010254]
[-41.24533844 -128.88597107]
[-30.39980888 -117.91427612]
[-27.23007202 -102.81605530]
[-32.74758148 -88.40909576]
[-23.78340721 -76.38230896]
[-14.81923389 -64.35552216]
[-5.85506058 -52.32873154]
[3.10911274 -40.30194473]
[12.07328606 -28.27515984]
[21.03746033 -16.24837303]
[30.00163269 -4.22158623]
[38.96580505 7.80520058]
[47.92998123 19.83198738]
[56.98559952 31.79007149]
[66.13213348 43.67875671]
[75.27867126 55.56744385]
[84.42520905 67.45613098]
[93.57174683 79.34481049]
[108.48635864 80.94306946]
[119.94428253 71.26236725]
[125.49221039 56.44578934]
[140.20758057 54.14208603]
[151.66551208 44.46138763]
[163.12342834 34.78068542]
[174.58135986 25.09998703]
[186.03927612 15.41928577]
[197.49720764 5.73858547]
[208.95512390 -3.94211507]
[205.32878113 -15.40751171]
[205.78131104 -27.38956451]
[210.23632812 -38.48452759]
[218.14993286 -47.40046692]
[228.57693481 -53.10768509]
[240.28379822 -54.95762253]
[251.89451599 -52.75648117]
[262.05230713 -46.78524017]
[273.94100952 -55.93177795]
[285.82968140 -65.07831573]
[297.71838379 -74.22485352]
[309.60705566 -83.37139130]
[321.49575806 -92.51792908]
[333.38442993 -101.66446686]
[345.27310181 -110.81100464]
[357.16180420 -119.95754242]
[369.05047607 -129.10408020]
[367.64489746 -144.46728516]
[374.78869629 -158.14097595]
[388.20230103 -165.76193237]
[403.60546875 -164.89834595]
[416.08312988 -155.82575989]
[421.65368652 -141.43922424]
[418.53961182 -126.32942963]
[407.73458862 -115.31784058]
[392.68646240 -111.91822815]
[378.19702148 -117.21539307]
[366.30834961 -108.06885529]
[354.41964722 -98.92231750]
[342.53097534 -89.77577972]
[330.64227295 -80.62924194]
[318.75360107 -71.48270416]
[306.86489868 -62.33616638]
[294.97622681 -53.18962860]
[283.08755493 -44.04309082]
[271.19885254 -34.89655304]
[274.41149902 -17.06697655]
[268.10253906 0.00645274]
[253.93632507 11.57054234]
[235.77726746 14.35927105]
[218.63583374 7.51580954]
[207.17790222 17.19651031]
[195.71998596 26.87721062]
[184.26205444 36.55791092]
[172.80413818 46.23861313]
[161.34620667 55.91931152]
[149.88827515 65.60001373]
[145.15991211 79.72416687]
[129.62498474 82.72029877]
[118.16706085 92.40099335]
[117.93833923 99.89750671]
[132.93135071 100.35517883]
[132.47344971 115.34819031]
[117.48089600 114.89053345]
[117.25217438 122.38703918]
[128.09861755 132.74826050]
[138.94505310 143.10946655]
[155.54156494 139.85548401]
[170.65789795 147.06211853]
[178.42352295 161.71121216]
[175.95376587 177.93830872]
[186.95693970 188.13290405]
[197.96012878 198.32751465]
[208.96331787 208.52210999]
[219.96649170 218.71672058]
[235.98817444 219.54449463]
[245.21284485 232.67024231]
[240.56410217 248.02500916]
[225.60809326 253.82992554]
[211.81776428 245.63197327]
[209.77189636 229.71989441]
[198.76870728 219.52529907]
[187.76551819 209.33068848]
[176.76234436 199.13609314]
[165.75915527 188.94148254]
[152.95655823 192.73541260]
[139.84617615 189.68240356]
[129.87768555 180.47593689]
[125.72822571 167.44285583]
[128.58383179 153.95591736]
[117.73739624 143.59469604]
[106.89096069 133.23347473]
[111.44217682 147.52636719]
[115.99338531 161.81924438]
[120.54460144 176.11212158]
[122.09709167 191.03157043]
[117.61206055 205.34535217]
[107.82343292 216.71121216]
[94.33300018 223.26927185]
[79.34828949 223.94638062]
[65.32136536 218.63172913]
[54.54755783 208.19500732]
[48.78986740 194.34405518]
[48.99046326 179.34539795]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 61]
[5 60]
[6 59]
[7 58]
[8 57]
[9 55]
[10 54]
[11 53]
[14 52]
[15 51]
[16 50]
[17 49]
[18 48]
[23 43]
[24 42]
[25 41]
[27 38]
[28 37]
[62 101]
[63 100]
[64 99]
[65 98]
[66 97]
[68 96]
[69 95]
[70 94]
[71 93]
[72 92]
[73 91]
[74 90]
[75 89]
[76 88]
[77 87]
[102 161]
[103 160]
[105 158]
[106 157]
[107 156]
[108 155]
[109 154]
[110 153]
[111 152]
[119 147]
[120 146]
[121 145]
[122 144]
[123 143]
[124 142]
[125 141]
[126 140]
[127 139]
[128 138]
[166 193]
[167 192]
[168 191]
[172 186]
[173 185]
[174 184]
[175 183]
[176 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
