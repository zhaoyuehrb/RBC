%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 06:59:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUGGUGCAAGGCCAGGAAUUUUGGGAGCAAAAACCAAGUAUCCUUGUGGUUCAAGCCUGUUUUCUUCCAUCUUCAGGACUCGUGCCUUCUGCUGUUCUCAUUGUGGCCAAGAAAUGUCCCAGCUGAGGGCCUUUGUCCCAUUGUCCCUCUGUGACCCCUUCAUCUUUGAUAAAGCACUGACAUCUCCUUCCUAAUAAAUAGACCCUGAGUUCUGUACA\
) } def
/len { sequence length } bind def

/coor [
[100.18510437 385.76156616]
[85.21784210 390.29092407]
[70.86125183 384.09234619]
[63.89406204 370.09262085]
[67.60597992 354.90197754]
[80.24433899 345.69299316]
[81.09680176 330.71722412]
[81.94926453 315.74145508]
[82.80172729 300.76571655]
[83.65419006 285.78994751]
[76.65269470 272.64352417]
[85.16175842 259.30538940]
[86.01422119 244.32962036]
[86.86668396 229.35386658]
[87.61268616 214.37243652]
[88.25218201 199.38606262]
[88.89167786 184.39970398]
[89.53117371 169.41334534]
[77.12141418 166.36549377]
[65.46977997 161.11851501]
[54.96236038 153.84626770]
[45.94734573 144.78971863]
[38.72345352 134.24899292]
[33.53007126 122.57337189]
[18.89271545 125.85176086]
[4.25536013 129.13015747]
[-10.38199425 132.40853882]
[-25.01934814 135.68693542]
[-39.65670395 138.96533203]
[-44.76275253 143.14659119]
[-50.37212372 143.99920654]
[-54.75659943 142.12260437]
[-69.48123169 144.98356628]
[-84.20587158 147.84454346]
[-98.93050385 150.70552063]
[-113.65513611 153.56648254]
[-128.08251953 157.67143250]
[-142.10775757 162.99050903]
[-156.13301086 168.30957031]
[-170.15824890 173.62864685]
[-180.10504150 186.66680908]
[-196.33302307 184.30363464]
[-202.14823914 168.97015381]
[-191.56849670 156.44015503]
[-175.47732544 159.60340881]
[-161.45208740 154.28433228]
[-147.42683411 148.96525574]
[-133.40159607 143.64619446]
[-134.83207703 136.28387451]
[-139.12353516 114.19692230]
[-154.12013245 114.51673889]
[-169.11671448 114.83656311]
[-182.85263062 123.79517365]
[-197.35461426 116.13850403]
[-197.70426941 99.74308014]
[-183.54190063 91.47511292]
[-169.43653870 99.83997345]
[-154.43994141 99.52014923]
[-139.44335938 99.20033264]
[-117.71363831 117.31684875]
[-116.51610565 138.84185791]
[-101.79147339 135.98088074]
[-87.06684113 133.11990356]
[-72.34220886 130.25894165]
[-57.61757278 127.39796448]
[-42.93509674 124.32797241]
[-28.29774094 121.04958344]
[-13.66038513 117.77118683]
[0.97696906 114.49279785]
[15.61432362 111.21440887]
[30.25167847 107.93601227]
[30.19495773 92.57943726]
[33.47886276 77.57798004]
[39.94623947 63.64955902]
[49.28757858 51.46074677]
[61.05583954 41.59485626]
[74.68782806 34.52402878]
[89.53117371 30.58665466]
[88.89167786 15.60029316]
[88.25218201 0.61393166]
[87.61268616 -14.37242985]
[74.10034180 -21.53928947]
[66.04273224 -34.42229080]
[65.51892090 -49.50844193]
[72.56951141 -62.74268341]
[85.21258545 -70.61785126]
[84.57308197 -85.60421753]
[83.93358612 -100.59057617]
[83.29409027 -115.57693481]
[82.65459442 -130.56329346]
[82.01509857 -145.54966736]
[73.69648743 -159.00741577]
[80.88414764 -172.05299377]
[80.24465179 -187.03935242]
[79.60515594 -202.02571106]
[78.96566010 -217.01206970]
[66.94733429 -223.75268555]
[59.88346481 -235.45768738]
[59.52662277 -249.01609802]
[65.86310577 -260.88549805]
[77.14438629 -268.01757812]
[76.71798706 -283.01150513]
[76.29158020 -298.00543213]
[75.86518097 -312.99938965]
[62.31311798 -320.22692871]
[54.20407867 -333.27066040]
[53.71935272 -348.62188721]
[60.98932648 -362.15124512]
[74.05841827 -370.21936035]
[89.41110229 -370.65594482]
[102.91758728 -363.34359741]
[110.94469452 -350.24929810]
[111.33317566 -334.89532471]
[103.97853088 -321.41180420]
[90.85911560 -313.42578125]
[91.28552246 -298.43185425]
[91.71192169 -283.43789673]
[92.13832855 -268.44396973]
[105.97975159 -259.61206055]
[111.88614655 -244.11399841]
[107.34343719 -227.99008179]
[93.95201874 -217.65156555]
[94.59151459 -202.66520691]
[95.23101807 -187.67884827]
[95.87051392 -172.69248962]
[104.14337921 -160.30665588]
[97.00145721 -146.18916321]
[97.64095306 -131.20280457]
[98.28045654 -116.21643829]
[98.91995239 -101.23007202]
[99.55944824 -86.24371338]
[100.19894409 -71.25734711]
[113.46693420 -64.48785400]
[121.61930084 -51.90235519]
[122.38256836 -36.82641983]
[115.45172882 -23.30383301]
[102.59904480 -15.01192760]
[103.23854065 -0.02556525]
[103.87803650 14.96079636]
[104.51753235 29.94715881]
[127.45275879 35.39229965]
[147.29232788 48.12279129]
[161.79907227 66.70310974]
[169.33718872 89.03807831]
[184.31861877 88.29207611]
[199.30006409 87.54608154]
[214.28149414 86.80007935]
[218.63111877 79.69424438]
[225.35568237 74.93640137]
[233.32041931 73.23872375]
[241.21646118 74.80448151]
[247.77587891 79.30677032]
[251.97529602 85.95332336]
[266.97491455 86.05993652]
[281.97454834 86.16654968]
[287.70587158 73.25188446]
[297.89477539 63.52556610]
[310.98092651 58.43147278]
[324.97756958 58.70757294]
[337.77322388 64.27920532]
[347.45013428 74.27532196]
[352.57174683 87.16451263]
[367.56832886 87.48433685]
[382.56491089 87.80415344]
[396.67028809 79.43930054]
[410.83264160 87.70726776]
[410.48300171 104.10268402]
[395.98101807 111.75935364]
[382.24508667 102.80074310]
[367.24850464 102.48092651]
[352.25192261 102.16110229]
[345.28497314 116.54582977]
[332.69549561 126.48704529]
[316.97366333 129.95367432]
[301.25762939 126.20178223]
[288.70703125 115.93347168]
[281.86791992 101.16617584]
[266.86831665 101.05956268]
[251.86868286 100.95294952]
[234.17744446 113.42522430]
[215.02749634 101.78151703]
[200.04605103 102.52751923]
[185.06462097 103.27351379]
[170.08317566 104.01951599]
[169.50260925 109.85880280]
[168.43637085 115.62920380]
[166.89190674 121.29039001]
[164.88003540 126.80280304]
[162.41477966 132.12792969]
[159.51339722 137.22854614]
[156.19613647 142.06903076]
[152.48619080 146.61552429]
[148.40950012 150.83630371]
[157.53387451 162.74200439]
[166.65823364 174.64770508]
[182.31027222 178.16816711]
[189.18684387 192.66271973]
[182.01284790 207.01240540]
[166.29154968 210.20936584]
[154.08299255 199.80116272]
[154.75253296 183.77207947]
[145.62815857 171.86637878]
[136.50378418 159.96067810]
[126.43132019 165.03225708]
[115.67671967 168.42550659]
[104.51753235 170.05284119]
[103.87803650 185.03919983]
[103.23854065 200.02555847]
[102.59904480 215.01193237]
[105.35820770 223.71177673]
[101.84244537 230.20632935]
[100.98998260 245.18208313]
[100.13751984 260.15783691]
[107.07804108 274.37542725]
[98.62994385 286.64242554]
[97.77748108 301.61816406]
[96.92501831 316.59393311]
[96.07256317 331.56970215]
[95.22010040 346.54544067]
[106.73180389 357.12915039]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 219]
[7 218]
[8 217]
[9 216]
[10 215]
[12 213]
[13 212]
[14 211]
[15 209]
[16 208]
[17 207]
[18 206]
[24 71]
[25 70]
[26 69]
[27 68]
[28 67]
[29 66]
[32 65]
[33 64]
[34 63]
[35 62]
[36 61]
[37 48]
[38 47]
[39 46]
[40 45]
[50 59]
[51 58]
[52 57]
[78 140]
[79 139]
[80 138]
[81 137]
[86 132]
[87 131]
[88 130]
[89 129]
[90 128]
[91 127]
[93 125]
[94 124]
[95 123]
[96 122]
[101 118]
[102 117]
[103 116]
[104 115]
[144 184]
[145 183]
[146 182]
[147 181]
[153 179]
[154 178]
[155 177]
[162 171]
[163 170]
[164 169]
[193 203]
[194 202]
[195 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
