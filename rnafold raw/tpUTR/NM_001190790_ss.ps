%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 23:56:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGGUGGGCAGGGGUUGAGGGGACCAGGAGGUGGCUCCAAAGGGUACAGCAAGGAAAGCUUUUAAAGACAGCUGUUGUGCUCCAGGCUCUCCAUGCCACCACCUGCCCUAGCAUUUAUUAAUAGUGUUAGAAUUACAAGUUUAUGAAAUGAAAUAUAAAUAAAGUUUGAUUUCUGAAACUUC\
) } def
/len { sequence length } bind def

/coor [
[86.75061798 122.09712219]
[83.89664459 115.46243286]
[83.42242432 109.04604340]
[84.97552490 103.58044434]
[88.00069427 99.62030792]
[91.81010437 97.49159241]
[77.91524506 91.84067535]
[64.02038574 86.18975830]
[50.12552643 80.53884125]
[36.23066711 74.88791656]
[22.33580780 69.23699951]
[8.44094849 63.58608246]
[-5.50190401 58.05463791]
[-19.49172211 52.64307785]
[-33.48154068 47.23151398]
[-49.14372253 49.46904373]
[-58.22248077 37.66118622]
[-77.95954132 41.68048096]
[-89.46505737 26.15782547]
[-103.63239288 21.22968864]
[-117.79973602 16.30155373]
[-131.96707153 11.37341785]
[-146.13441467 6.44528246]
[-160.34353638 1.63893318]
[-174.59338379 -3.04527521]
[-189.97210693 12.22172070]
[-216.36878967 9.94446182]
[-229.84317017 16.53545380]
[-243.31755066 23.12644768]
[-256.79193115 29.71743965]
[-265.49273682 43.61808395]
[-281.86956787 42.76295471]
[-289.07534790 28.03173828]
[-279.69738770 14.57864285]
[-263.38290405 16.24306297]
[-249.90853882 9.65207100]
[-236.43415833 3.06107831]
[-222.95977783 -3.52991438]
[-222.57369995 -11.01996994]
[-235.16093445 -19.17849350]
[-221.80151367 -26.00008202]
[-221.41542053 -33.49013901]
[-234.14068604 -41.43164444]
[-246.86595154 -49.37315369]
[-259.59121704 -57.31466293]
[-272.31649780 -65.25617218]
[-285.04174805 -73.19767761]
[-297.76702881 -81.13919067]
[-310.49230957 -89.08069611]
[-323.21755981 -97.02220154]
[-335.94284058 -104.96371460]
[-333.78765869 -90.11934662]
[-342.63238525 -78.00442505]
[-357.42770386 -75.53505707]
[-369.72741699 -84.12094116]
[-372.50988770 -98.86061096]
[-364.18667603 -111.33956146]
[-349.50875854 -114.43376923]
[-361.35000610 -123.64161682]
[-373.19128418 -132.84945679]
[-387.70788574 -127.62722778]
[-402.73825073 -131.10455322]
[-413.48623657 -142.17181396]
[-416.52218628 -157.29750061]
[-410.87738037 -171.65505981]
[-398.35299683 -180.66304016]
[-382.94558716 -181.44703674]
[-369.57153320 -173.75688171]
[-362.49850464 -160.04646301]
[-363.98342896 -144.69071960]
[-352.14218140 -135.48287964]
[-340.30090332 -126.27503967]
[-328.00131226 -117.68898010]
[-315.27606201 -109.74747467]
[-302.55078125 -101.80596161]
[-289.82553101 -93.86445618]
[-277.10025024 -85.92295074]
[-264.37500000 -77.98143768]
[-251.64971924 -70.03993225]
[-238.92445374 -62.09842300]
[-226.19918823 -54.15691376]
[-213.47390747 -46.21540451]
[-189.51399231 -48.28250885]
[-172.79855347 -35.32698059]
[-169.90916443 -17.29512405]
[-155.65931702 -12.61091614]
[-148.30480957 -13.51125908]
[-141.20628357 -7.72205639]
[-127.03894043 -2.79392052]
[-112.87159729 2.13421535]
[-98.70426178 7.06235123]
[-84.53691864 11.99048710]
[-75.74811554 6.71867895]
[-65.28964233 7.17770338]
[-56.64045334 13.45735550]
[-52.81091690 23.67136955]
[-38.14937973 21.04677010]
[-28.06997681 33.24169922]
[-14.08016014 38.65325928]
[-0.09034217 44.06482315]
[7.30077314 43.54427338]
[14.09186649 49.69122314]
[27.98672676 55.34214020]
[41.88158417 60.99306107]
[55.77644348 66.64398193]
[69.67130280 72.29489899]
[83.56616211 77.94581604]
[97.46102142 83.59673309]
[112.35284424 81.79851532]
[124.50321960 73.00258636]
[136.65359497 64.20664978]
[148.80397034 55.41071701]
[160.95434570 46.61478424]
[173.10470581 37.81885147]
[185.25508118 29.02291870]
[186.19213867 13.41343594]
[196.98103333 2.09381247]
[212.52757263 0.40882784]
[225.49114990 9.15408039]
[229.75077820 24.20032883]
[223.29518127 38.44319534]
[209.17250061 45.15763474]
[194.05102539 41.17329025]
[181.90065002 49.96922302]
[169.75027466 58.76515579]
[157.59989929 67.56108856]
[145.44952393 76.35702515]
[133.29914856 85.15295410]
[121.14878082 93.94889069]
[120.69841003 101.43535614]
[132.96621704 92.80396271]
[147.36341858 97.01357269]
[153.04887390 110.89433289]
[145.74143982 123.99400330]
[130.94361877 126.44850159]
[119.79767609 116.40828705]
[119.34731293 123.89475250]
[130.35559082 134.08384705]
[141.36387634 144.27294922]
[152.37214661 154.46205139]
[163.38043213 164.65115356]
[174.38871765 174.84025574]
[189.95953369 174.40733337]
[200.97834778 184.89735413]
[201.29510498 199.74441528]
[212.30339050 209.93351746]
[223.31167603 220.12260437]
[234.31994629 230.31170654]
[245.32823181 240.50080872]
[260.71173096 244.19660950]
[264.79632568 258.52020264]
[275.80462646 268.70928955]
[286.81289673 278.89840698]
[297.82116699 289.08749390]
[312.73205566 285.12899780]
[327.40896606 289.88208008]
[337.16857910 301.83004761]
[338.89660645 317.16030884]
[332.04168701 330.98107910]
[318.79119873 338.88217163]
[303.37326050 338.34240723]
[290.70773315 329.53399658]
[284.83615112 315.26766968]
[287.63208008 300.09576416]
[276.62380981 289.90667725]
[265.61550903 279.71759033]
[254.60723877 269.52847290]
[240.01113892 266.56146240]
[235.13912964 251.50909424]
[224.13084412 241.31999207]
[213.12257385 231.13088989]
[202.11428833 220.94178772]
[191.10600281 210.75268555]
[176.27877808 211.58270264]
[164.96966553 201.40632629]
[164.19961548 185.84852600]
[153.19132996 175.65943909]
[142.18305969 165.47033691]
[131.17477417 155.28123474]
[120.16648865 145.09213257]
[109.15821075 134.90303040]
[99.70715332 132.64334106]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 108]
[7 107]
[8 106]
[9 105]
[10 104]
[11 103]
[12 102]
[13 100]
[14 99]
[15 98]
[17 96]
[19 92]
[20 91]
[21 90]
[22 89]
[23 88]
[24 86]
[25 85]
[27 38]
[28 37]
[29 36]
[30 35]
[42 82]
[43 81]
[44 80]
[45 79]
[46 78]
[47 77]
[48 76]
[49 75]
[50 74]
[51 73]
[58 72]
[59 71]
[60 70]
[109 129]
[110 128]
[111 127]
[112 126]
[113 125]
[114 124]
[115 123]
[137 181]
[138 180]
[139 179]
[140 178]
[141 177]
[142 176]
[145 173]
[146 172]
[147 171]
[148 170]
[149 169]
[151 167]
[152 166]
[153 165]
[154 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
