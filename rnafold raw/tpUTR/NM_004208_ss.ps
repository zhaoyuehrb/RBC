%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 13:40:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCCCACAGUGGAAUUGGCAAACCCACUGCAGCCCCUGAGAGGAGGUCGAAUGGGUAAAGGAGCAUUUUUUUAUUCAGCAGACUUUCUCUGUGUAUGAGUGUGAAUGAUCAAGUCCUUUGUGAAUAUUUUCAACUAUGUAGGUAAAUUCUUAAUGUUCACAUAGUGAAAUAAAUUCUGAUUCUUCUAAAUUAA\
) } def
/len { sequence length } bind def

/coor [
[68.55181122 136.04356384]
[60.86666107 127.50833130]
[55.43756485 117.38723755]
[52.57751465 106.26376343]
[52.45139694 94.77917480]
[55.06647873 83.59557343]
[41.95695496 76.30581665]
[28.84743690 69.01606750]
[15.73791599 61.72631836]
[2.62839508 54.43656540]
[-13.19271374 54.49206543]
[-20.55574226 41.54466629]
[-33.66526413 34.25491714]
[-46.77478409 26.96516609]
[-62.59589386 27.02066422]
[-69.95892334 14.07326794]
[-83.06844330 6.78351641]
[-96.17796326 -0.50623477]
[-109.28748322 -7.79598618]
[-122.45529938 -14.97989941]
[-135.68055725 -22.05751038]
[-150.63694763 -17.70502090]
[-163.94841003 -25.07112312]
[-168.00567627 -39.35657501]
[-183.82383728 -39.04620743]
[-191.39450073 -51.87330627]
[-204.61975098 -58.95091629]
[-217.84501648 -66.02852631]
[-231.07026672 -73.10613251]
[-240.12648010 -74.39947510]
[-244.45022583 -80.40578461]
[-257.55975342 -87.69553375]
[-267.79467773 -79.31536865]
[-280.23956299 -74.92659760]
[-293.40325928 -75.03205872]
[-305.71630859 -79.59741974]
[-315.71804810 -88.05793762]
[-322.22991943 -99.38818359]
[-324.49432373 -112.22630310]
[-322.26260376 -125.03770447]
[-335.13049316 -132.74600220]
[-347.99835205 -140.45431519]
[-360.86624146 -148.16261292]
[-373.73410034 -155.87091064]
[-386.60195923 -163.57922363]
[-399.46984863 -171.28752136]
[-412.33770752 -178.99581909]
[-425.20556641 -186.70413208]
[-438.07345581 -194.41242981]
[-452.29650879 -188.49543762]
[-467.10336304 -192.04649353]
[-476.86459351 -203.50000000]
[-477.99624634 -218.32757568]
[-490.86413574 -226.03588867]
[-503.73199463 -233.74418640]
[-516.59985352 -241.45248413]
[-529.46771240 -249.16079712]
[-542.33563232 -256.86907959]
[-555.20349121 -264.57739258]
[-568.07135010 -272.28570557]
[-580.93920898 -279.99398804]
[-593.80706787 -287.70230103]
[-606.67498779 -295.41061401]
[-623.07177734 -295.13363647]
[-631.27685547 -309.33251953]
[-622.84954834 -323.40066528]
[-606.45916748 -322.86596680]
[-598.96667480 -308.27847290]
[-586.09881592 -300.57015991]
[-573.23089600 -292.86187744]
[-560.36303711 -285.15356445]
[-547.49517822 -277.44525146]
[-534.62731934 -269.73696899]
[-521.75946045 -262.02865601]
[-508.89157104 -254.32035828]
[-496.02371216 -246.61206055]
[-483.15582275 -238.90374756]
[-470.28796387 -231.19544983]
[-456.68075562 -237.19393921]
[-441.97665405 -233.99185181]
[-431.85925293 -222.61241150]
[-430.36514282 -207.28030396]
[-417.49728394 -199.57199097]
[-404.62939453 -191.86369324]
[-391.76153564 -184.15539551]
[-378.89367676 -176.44708252]
[-366.02578735 -168.73878479]
[-353.15792847 -161.03048706]
[-340.29006958 -153.32217407]
[-327.42218018 -145.61387634]
[-314.55432129 -137.90557861]
[-300.72952271 -147.59863281]
[-284.00488281 -150.28895569]
[-267.73178101 -145.38851929]
[-255.19252014 -133.83529663]
[-248.93821716 -117.91413879]
[-250.26998901 -100.80506134]
[-237.16047668 -93.51530457]
[-223.99266052 -86.33139038]
[-210.76739502 -79.25378418]
[-197.54214478 -72.17617035]
[-184.31687927 -65.09856415]
[-169.44468689 -65.91516876]
[-160.92807007 -52.58183289]
[-146.79145813 -57.13068390]
[-133.27835083 -50.14138031]
[-128.60295105 -35.28276825]
[-115.37769318 -28.20515633]
[-107.98697662 -27.82045364]
[-101.99773407 -20.90550613]
[-88.88821411 -13.61575508]
[-75.77869415 -6.32600403]
[-62.66917038 0.96374714]
[-47.78574371 0.38683707]
[-39.48503113 13.85564518]
[-26.37551308 21.14539719]
[-13.26599216 28.43514824]
[1.61743641 27.85823822]
[9.91814613 41.32704544]
[23.02766609 48.61679840]
[36.13718796 55.90654755]
[49.24670792 63.19630051]
[62.35622787 70.48605347]
[76.98822021 58.06451416]
[95.32512665 52.39461899]
[114.41469574 54.38921738]
[131.18348694 63.72718430]
[142.93171692 78.90509033]
[147.76789856 97.47929382]
[162.68572998 99.04722595]
[177.60356140 100.61515045]
[192.52139282 102.18307495]
[207.43922424 103.75100708]
[216.31455994 101.53381348]
[222.58406067 105.46623993]
[237.47468567 107.27429199]
[252.36532593 109.08234406]
[267.25595093 110.89039612]
[282.14657593 112.69844818]
[297.03723145 114.50649261]
[305.94714355 112.43257141]
[312.15246582 116.46549225]
[327.01202393 118.51319885]
[334.66168213 105.37731934]
[346.75894165 96.17271423]
[361.45907593 92.30302429]
[376.52041626 94.35834503]
[389.64620972 102.02526093]
[398.83489990 114.13462067]
[402.68524170 128.83982849]
[400.61010742 143.89845276]
[392.92593384 157.01417542]
[380.80450439 166.18692017]
[366.09423828 170.01791382]
[351.03836060 167.92297363]
[337.93276978 160.22155762]
[328.77597046 148.08805847]
[324.96432495 133.37277222]
[310.10476685 131.32507324]
[295.22918701 129.39712524]
[280.33853149 127.58908081]
[265.44790649 125.78102875]
[250.55726624 123.97297668]
[235.66664124 122.16492462]
[220.77600098 120.35688019]
[205.87129211 118.66883087]
[190.95346069 117.10090637]
[176.03562927 115.53298187]
[161.11781311 113.96504974]
[146.19998169 112.39712524]
[141.70892334 123.41992188]
[134.63542175 132.99264526]
[125.41742706 140.52259827]
[131.29692078 154.32229614]
[137.17642212 168.12199402]
[143.05592346 181.92167664]
[157.44250488 187.89361572]
[163.20857239 201.97222900]
[157.42657471 215.65083313]
[163.30607605 229.45051575]
[176.73416138 238.86425781]
[175.02633667 255.17422485]
[159.93946838 261.60214233]
[146.99362183 251.53550720]
[149.50637817 235.33001709]
[143.62687683 221.53033447]
[129.75650024 216.22482300]
[123.59727478 202.31372070]
[129.25622559 187.80117798]
[123.37673187 174.00148010]
[117.49723053 160.20179749]
[111.61772919 146.40209961]
[100.22204590 147.83384705]
[88.81355286 146.50796509]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 123]
[7 122]
[8 121]
[9 120]
[10 119]
[12 117]
[13 116]
[14 115]
[16 113]
[17 112]
[18 111]
[19 110]
[20 108]
[21 107]
[24 104]
[26 102]
[27 101]
[28 100]
[29 99]
[31 98]
[32 97]
[40 91]
[41 90]
[42 89]
[43 88]
[44 87]
[45 86]
[46 85]
[47 84]
[48 83]
[49 82]
[53 78]
[54 77]
[55 76]
[56 75]
[57 74]
[58 73]
[59 72]
[60 71]
[61 70]
[62 69]
[63 68]
[129 170]
[130 169]
[131 168]
[132 167]
[133 166]
[135 165]
[136 164]
[137 163]
[138 162]
[139 161]
[140 160]
[142 159]
[143 158]
[173 192]
[174 191]
[175 190]
[176 189]
[179 186]
[180 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
