%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 14:49:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAACCCACAUUUUUAUUACCUGUCAGUUACUUUCAGAAUAGUUAAGUAAAACAUUAGCUGUUUUAUACCUCCAAAAUAUCUUCUGCAUUAUAUAUCUGUUUUUCUCCUACUUUGGUAGGUGAAGAAACUAAUGCAAAUAAUUCUUAUGUGCACUAAACCUUGCUAUAUUGCCUCUCA\
) } def
/len { sequence length } bind def

/coor [
[116.64160919 350.35345459]
[114.21855164 336.92535400]
[114.48957062 323.27774048]
[117.44614410 309.94589233]
[122.97438812 297.45330811]
[130.85939026 286.29086304]
[140.79357910 276.89764404]
[152.38874817 269.64364624]
[147.25843811 255.54826355]
[142.12814331 241.45286560]
[136.99783325 227.35748291]
[131.86753845 213.26208496]
[117.17557526 210.81018066]
[105.60656738 201.27005005]
[100.33123779 187.12658691]
[102.86018372 172.14321899]
[112.61296082 160.36058044]
[107.48265839 146.26519775]
[102.35235596 132.16979980]
[97.22205353 118.07441711]
[94.96662903 132.90388489]
[97.85713959 147.62274170]
[95.44284058 162.42716980]
[88.02576447 175.46508789]
[76.53381348 185.10536194]
[62.40468216 190.14199829]
[47.40597916 189.94488525]
[33.41409683 184.53866577]
[22.17947197 174.59968567]
[15.10760403 161.37135315]
[13.08320904 146.50859070]
[16.35954666 131.87077332]
[24.52673340 119.28916168]
[36.56302643 110.33775330]
[50.96263123 106.13640594]
[65.92648315 107.21133423]
[80.37055206 103.16546631]
[65.75499725 99.79119873]
[51.13944626 96.41693115]
[36.52389526 93.04267120]
[21.90834427 89.66840363]
[7.29279375 86.29413605]
[-7.32275724 82.91986847]
[-21.93830872 79.54560089]
[-36.55385971 76.17134094]
[-51.16941071 72.79707336]
[-65.78495789 69.42280579]
[-77.40705872 79.70417023]
[-92.85595703 81.15716553]
[-106.19123840 73.22306824]
[-112.28521729 58.95271301]
[-108.79463959 43.83333969]
[-97.06169128 33.67865753]
[-81.59793854 32.39334488]
[-68.34951019 40.47163391]
[-62.41069412 54.80725479]
[-47.79514313 58.18152237]
[-33.17959213 61.55578613]
[-18.56404305 64.93005371]
[-3.94849110 68.30432129]
[10.66705990 71.67858124]
[25.28260994 75.05284882]
[39.89816284 78.42711639]
[54.51371384 81.80138397]
[69.12926483 85.17565155]
[83.74481201 88.54991150]
[72.53617096 78.58164978]
[58.01026535 74.84024811]
[45.27857971 66.90903473]
[35.51659775 55.52028275]
[29.62562370 41.72548676]
[28.14955902 26.79828835]
[31.22468758 12.11688519]
[38.56708527 -0.96322209]
[49.49884796 -11.23437500]
[63.01066589 -17.74826241]
[77.85502625 -19.90347099]
[92.66138458 -17.50101280]
[106.06269836 -10.76270485]
[116.82165527 -0.31067911]
[123.94490051 12.89005280]
[126.77477264 27.62069511]
[125.04998016 42.52120209]
[118.92978668 56.21584320]
[108.97987366 67.43968964]
[105.26167297 81.97154999]
[115.49164581 71.00124359]
[125.72161865 60.03094101]
[135.95159912 49.06063461]
[146.18157959 38.09032822]
[156.41154480 27.12002373]
[166.64152527 16.14971733]
[163.48898315 8.40837479]
[162.76368713 0.11520480]
[164.51034546 -7.98972893]
[168.55393982 -15.18906212]
[174.51710510 -20.85161781]
[181.85517883 -24.48773575]
[189.90600586 -25.79157448]
[197.94964600 -24.66674614]
[205.27273560 -21.23315811]
[216.59336853 -31.07404327]
[227.91401672 -40.91492844]
[239.23466492 -50.75581360]
[250.55531311 -60.59669876]
[261.87594604 -70.43758392]
[267.21493530 -85.33072662]
[281.89645386 -87.84115601]
[293.21710205 -97.68203735]
[304.53775024 -107.52292633]
[315.85839844 -117.36380768]
[327.17904663 -127.20469666]
[332.00357056 -142.87811279]
[348.04760742 -146.27239990]
[358.80639648 -133.89581299]
[353.21224976 -118.48030853]
[337.01992798 -115.88405609]
[325.69927979 -106.04316711]
[314.37863159 -96.20228577]
[303.05798340 -86.36139679]
[291.73736572 -76.52050781]
[287.20809937 -62.33125305]
[271.71682739 -59.11694336]
[260.39617920 -49.27605820]
[249.07554626 -39.43516922]
[237.75489807 -29.59428596]
[226.43426514 -19.75340080]
[215.11361694 -9.91251469]
[215.87229919 11.99116039]
[200.04591370 27.54584312]
[177.61183167 26.37969208]
[167.38185120 37.34999847]
[157.15188599 48.32030487]
[146.92190552 59.29061127]
[136.69192505 70.26091766]
[126.46195221 81.23122406]
[116.23197937 92.20152283]
[117.73491669 99.74337006]
[115.95501709 107.10475922]
[111.31744385 112.94411469]
[116.44774628 127.03950500]
[121.57804871 141.13488770]
[126.70835114 155.23028564]
[141.75314331 157.98735046]
[153.32154846 167.83969116]
[158.37165833 182.06512451]
[155.64155579 196.80970764]
[145.96292114 208.13179016]
[151.09323120 222.22717285]
[156.22352600 236.32257080]
[161.35383606 250.41795349]
[166.48413086 264.51333618]
[182.85021973 262.56329346]
[199.20417786 264.54614258]
[214.61482239 270.34509277]
[228.20561218 279.62622070]
[239.20445251 291.85760498]
[246.98764038 306.33990479]
[251.11515808 322.24621582]
[251.35560608 338.66943359]
[247.69914246 354.67395020]
[240.35781860 369.34881592]
[229.75328064 381.85977173]
[216.49261475 391.49661255]
[222.35357666 405.30416870]
[237.09910583 410.99145508]
[243.42779541 425.47326660]
[237.58494568 440.15783691]
[223.03703308 446.33306885]
[208.41505432 440.33529663]
[202.39396667 425.72290039]
[208.54600525 411.16516113]
[202.68504333 397.35757446]
[189.34043884 399.99020386]
[175.73333740 399.94119263]
[162.39749146 397.21035767]
[149.85643005 391.90270996]
[138.60293579 384.22448730]
[129.07963562 374.47512817]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 152]
[9 151]
[10 150]
[11 149]
[12 148]
[17 143]
[18 142]
[19 141]
[20 140]
[37 66]
[38 65]
[39 64]
[40 63]
[41 62]
[42 61]
[43 60]
[44 59]
[45 58]
[46 57]
[47 56]
[86 137]
[87 136]
[88 135]
[89 134]
[90 133]
[91 132]
[92 131]
[101 128]
[102 127]
[103 126]
[104 125]
[105 124]
[106 123]
[108 121]
[109 120]
[110 119]
[111 118]
[112 117]
[164 173]
[165 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
