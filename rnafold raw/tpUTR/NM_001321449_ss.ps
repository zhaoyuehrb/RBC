%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 05:17:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGACUACAGGGCUUGUACAUACAGACAAAACCGAAAACUCCUGCUGCAGUAGGACGGUGGUUUGGGGGUAAGGAGAAAGGAAAAUAAAUUUAAUAAAAUUGGUGACAAAUCCA\
) } def
/len { sequence length } bind def

/coor [
[68.33091736 115.99686432]
[63.20061493 130.09225464]
[58.07031250 144.18763733]
[64.97580719 158.40347290]
[59.72773743 173.31095886]
[45.43969727 180.06576538]
[30.58852196 174.66038513]
[23.98515511 160.30172729]
[29.54725266 145.50852966]
[43.97492599 139.05734253]
[49.10522461 124.96194458]
[54.23552704 110.86656189]
[65.16986847 104.22463226]
[76.86687469 100.19149780]
[88.87815094 98.83748627]
[79.86701965 86.84584045]
[70.85588837 74.85420227]
[53.78814316 68.10588837]
[52.21134186 50.68409729]
[42.88150787 38.93870926]
[33.55167007 27.19331932]
[18.15605164 27.72357178]
[5.54764366 19.18651009]
[0.44417763 5.02958155]
[4.60567045 -9.24697113]
[-4.72416687 -20.99235916]
[-14.05400372 -32.73774719]
[-23.38384056 -44.48313522]
[-32.71368027 -56.22852325]
[-43.73683167 -56.86341095]
[-52.36914062 -63.38719559]
[-55.84344864 -73.40055084]
[-53.21847916 -83.44081879]
[-61.90441513 -95.67007446]
[-70.59034729 -107.89932251]
[-79.27628326 -120.12857056]
[-85.01985168 -106.27175140]
[-99.35618591 -101.85932159]
[-111.89735413 -110.08847809]
[-113.55619049 -124.99647522]
[-103.13071442 -135.78115845]
[-88.17493439 -134.62799072]
[-95.14578247 -147.90983582]
[-102.11663055 -161.19168091]
[-109.08747864 -174.47351074]
[-116.05832672 -187.75535583]
[-123.02917480 -201.03720093]
[-137.17121887 -209.33988953]
[-136.78134155 -225.73440552]
[-122.26061249 -233.35546875]
[-108.54672241 -224.36318970]
[-109.74732971 -208.00804138]
[-102.77648163 -194.72621155]
[-95.80564117 -181.44436646]
[-88.83479309 -168.16252136]
[-81.86394501 -154.88069153]
[-74.89309692 -141.59884644]
[-67.04703522 -128.81449890]
[-58.36109924 -116.58525848]
[-49.67516327 -104.35600281]
[-40.98923111 -92.12675476]
[-22.89268112 -85.53731537]
[-20.96829033 -65.55835724]
[-11.63845348 -53.81297302]
[-2.30861616 -42.06758499]
[7.02122116 -30.32219696]
[16.35105896 -18.57680893]
[31.19895554 -19.40018272]
[43.83404922 -11.22593212]
[49.29695511 2.98709178]
[45.29705811 17.86348343]
[54.62689590 29.60887146]
[63.95672989 41.35425949]
[76.01255798 43.07705688]
[83.87290955 52.90015411]
[82.84752655 65.84307098]
[91.85865784 77.83470917]
[100.86979675 89.82634735]
[97.49771118 75.21029663]
[97.65249634 60.21109390]
[101.32547760 45.66773987]
[108.31121063 32.39372253]
[118.21894836 21.13154221]
[130.49449158 12.51115131]
[144.45118713 7.01474237]
[159.30836487 4.94975996]
[174.23498535 6.43171072]
[188.39610291 11.37770081]
[200.99960327 19.51107216]
[211.34049988 30.37687874]
[218.84037781 43.36733246]
[223.07972717 57.75579834]
[223.82138062 72.73744965]
[221.02389526 87.47428131]
[214.84373474 101.14196777]
[205.62660217 112.97599030]
[193.88803101 122.31442261]
[180.28466797 128.63490295]
[165.57740784 131.58387756]
[150.58891296 130.99639893]
[136.15759277 126.90534973]
[123.09065247 119.53954315]
[112.11979675 109.31192017]
[117.99929810 123.11161041]
[123.87879181 136.91130066]
[139.03239441 140.25019836]
[149.30413818 151.88079834]
[150.74435425 167.33088684]
[142.79922485 180.65960693]
[128.52383423 186.74177551]
[113.40735626 183.23869324]
[103.26238251 171.49736023]
[101.98986053 156.03254700]
[110.07910156 142.79080200]
[104.19960022 128.99111938]
[98.32010651 115.19142151]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[15 78]
[16 77]
[17 76]
[19 73]
[20 72]
[21 71]
[25 67]
[26 66]
[27 65]
[28 64]
[29 63]
[33 61]
[34 60]
[35 59]
[36 58]
[42 57]
[43 56]
[44 55]
[45 54]
[46 53]
[47 52]
[103 116]
[104 115]
[105 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
