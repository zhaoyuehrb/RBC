%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 11:18:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUGGCGCUUUCUCCGCCCCAGGGUUCCAGGACAUAGUCUGAGGCAAGAUGGAGGGUAUGAGGGGCCUUCACACUUCACUUCAUCCCUUCUACCCAUCACAACAUACAAAGCAACUACACCUGGAUUUUUCCAAACAACUUUUAUUUCCUCAGAGUCUUCCUUAAUCCUAUGGAACAAGAAGCUGCCACUGAAUAGGGCCCAGUAUAGGGGCUUGCUUUUCUACUCCCUCCCCCCAAUAUAAAAAUAUAGACUU\
UUUUUUGUGGUCCCAA\
) } def
/len { sequence length } bind def

/coor [
[641.59222412 550.76715088]
[644.67926025 535.85974121]
[632.81420898 526.68255615]
[620.94909668 517.50537109]
[609.08404541 508.32821655]
[597.21899414 499.15106201]
[585.35394287 489.97387695]
[573.43609619 480.86538696]
[561.46582031 471.82586670]
[549.49560547 462.78634644]
[537.52532959 453.74682617]
[525.55505371 444.70730591]
[512.34033203 451.62371826]
[497.37158203 452.11874390]
[483.61593628 446.04061890]
[473.82342529 434.54595947]
[469.97714233 419.87991333]
[472.89175415 404.93780518]
[460.92147827 395.89828491]
[446.25112915 398.20404053]
[433.98281860 389.20718384]
[431.66384888 373.80395508]
[419.69357300 364.76443481]
[407.72332764 355.72491455]
[395.75305176 346.68539429]
[383.78280640 337.64587402]
[371.81253052 328.60635376]
[359.81616211 329.97021484]
[349.77542114 322.56860352]
[347.37921143 309.91928101]
[335.51416016 300.74209595]
[323.64907837 291.56494141]
[311.78402710 282.38775635]
[299.37857056 285.79190063]
[287.09017944 281.37399292]
[279.46835327 270.53219604]
[279.47079468 257.08505249]
[264.68994141 255.24775696]
[258.67633057 240.61398315]
[246.91807556 231.30038452]
[235.15980530 221.98680115]
[223.40153503 212.67320251]
[211.64326477 203.35960388]
[199.88499451 194.04600525]
[188.12672424 184.73240662]
[183.39724731 184.37660217]
[178.83172607 181.06977844]
[176.20770264 175.06536865]
[164.66767883 165.48266602]
[153.12767029 155.89996338]
[141.58766174 146.31726074]
[130.04765320 136.73455811]
[118.50764465 127.15186310]
[106.96763611 117.56916046]
[66.68843842 125.13968658]
[51.91299057 122.55392456]
[37.13754272 119.96816254]
[22.36209679 117.38239288]
[7.58665037 114.79663086]
[-1.36858571 116.39707184]
[-7.34409714 112.09473419]
[-22.08869362 109.33849335]
[-36.83329010 106.58225250]
[-51.57788849 103.82600403]
[-66.32248688 101.06976318]
[-81.06707764 98.31352234]
[-88.08686066 111.70060730]
[-98.74186707 122.42265320]
[-112.08466339 129.52626038]
[-126.92881012 132.37979126]
[-141.95439148 130.72949219]
[-155.82531738 124.72211456]
[-167.30822754 114.89183807]
[-175.38204956 102.11275482]
[-179.32885742 87.52117920]
[-178.79771423 72.41458130]
[-173.83586121 58.13623428]
[-164.88447571 45.95574570]
[-152.73953247 36.95621109]
[-138.48094177 31.93785286]
[-123.37656403 31.34690475]
[-108.76947784 35.23591232]
[-95.95852661 43.25906754]
[-86.08286285 54.70296097]
[-80.02061462 68.55000305]
[-78.31083679 83.56892395]
[-63.56624222 86.32516479]
[-48.82164383 89.08141327]
[-34.07704926 91.83765411]
[-19.33245087 94.59389496]
[-4.58785439 97.35013580]
[10.17241383 100.02118683]
[24.94786072 102.60694885]
[39.72330856 105.19271088]
[54.49875259 107.77847290]
[69.27420044 110.36423492]
[74.57749939 105.06093597]
[62.85050964 95.70799255]
[51.12351608 86.35504150]
[39.39652252 77.00209808]
[27.66952705 67.64914703]
[15.94253349 58.29620361]
[4.21553946 48.94325638]
[-7.51145411 39.59030914]
[-19.23844719 30.23736000]
[-33.67380142 26.16052437]
[-44.17288208 15.44748211]
[-47.95771027 0.93283117]
[-44.02684402 -13.54295158]
[-33.42036438 -24.14967537]
[-18.94466972 -28.08087158]
[-4.42993307 -24.29637718]
[6.28334951 -13.79753971]
[10.36052704 0.63838643]
[19.71347427 12.36538029]
[29.06642151 24.09237289]
[38.41936874 35.81936646]
[47.77231598 47.54636002]
[57.12526321 59.27335358]
[66.47821045 71.00035095]
[75.83115387 82.72734070]
[85.18410492 94.45433807]
[90.48740387 89.15103149]
[87.90164185 74.37558746]
[85.31587982 59.60013962]
[82.73011780 44.82469559]
[71.79586792 32.60281754]
[77.16957092 17.10909843]
[93.32321930 14.28214455]
[103.63932037 27.03008461]
[97.50556183 42.23892975]
[100.09132385 57.01437759]
[102.67708588 71.78982544]
[105.26284790 86.56526947]
[109.84468842 72.28218079]
[122.21090698 63.79238129]
[137.18644714 64.64872742]
[148.50427246 74.49284363]
[151.42808533 89.20512390]
[144.73428345 102.62873077]
[131.22415161 109.14609528]
[116.55033875 106.02915192]
[128.09034729 115.61185455]
[139.63035583 125.19455719]
[151.17036438 134.77725220]
[162.71037292 144.35995483]
[174.25038147 153.94265747]
[185.79039001 163.52536011]
[197.44030762 172.97413635]
[209.19859314 182.28773499]
[220.95686340 191.60133362]
[232.71513367 200.91493225]
[244.47340393 210.22853088]
[256.23165894 219.54211426]
[267.98992920 228.85571289]
[283.61181641 231.35917664]
[288.78439331 245.32678223]
[306.14001465 243.00077820]
[319.53277588 253.74922180]
[320.96121216 270.52270508]
[332.82626343 279.69989014]
[344.69131470 288.87704468]
[356.55636597 298.05422974]
[374.87106323 300.12130737]
[380.85205078 316.63607788]
[392.82232666 325.67559814]
[404.79257202 334.71511841]
[416.76284790 343.75463867]
[428.73309326 352.79415894]
[440.70333862 361.83367920]
[456.15322876 359.84884644]
[468.16400146 369.18673706]
[469.96099854 383.92803955]
[481.93127441 392.96755981]
[495.50534058 386.07510376]
[510.66412354 385.76101685]
[524.39984131 392.03402710]
[534.01031494 403.60119629]
[537.63061523 418.13403320]
[534.59460449 432.73706055]
[546.56481934 441.77658081]
[558.53509521 450.81610107]
[570.50537109 459.85562134]
[582.47564697 468.89514160]
[591.17523193 471.55484009]
[594.53112793 478.10882568]
[606.39617920 487.28601074]
[618.26123047 496.46316528]
[630.12628174 505.64035034]
[641.99133301 514.81750488]
[653.85638428 523.99468994]
[667.50921631 517.25946045]
[682.67059326 517.12048340]
[696.33288574 523.55169678]
[705.80914307 535.22912598]
[709.26135254 549.80279541]
[706.05688477 564.36975098]
[717.92193604 573.54693604]
[729.78698730 582.72412109]
[741.65203857 591.90124512]
[753.51708984 601.07843018]
[765.43499756 610.18695068]
[777.40521240 619.22644043]
[790.29339600 626.90081787]
[803.94439697 633.11773682]
[817.59539795 639.33459473]
[831.24639893 645.55151367]
[847.01232910 644.22967529]
[855.38818359 656.54608154]
[869.03918457 662.76293945]
[882.69018555 668.97985840]
[896.34124756 675.19671631]
[906.21081543 663.76135254]
[918.90307617 655.57092285]
[933.38909912 651.28942871]
[948.49462891 651.26391602]
[962.99499512 655.49645996]
[975.71490479 663.64392090]
[985.62304688 675.04589844]
[991.91625977 688.77807617]
[994.08447266 703.72717285]
[991.95178223 718.68139648]
[985.69116211 732.42840576]
[975.81011963 743.85388184]
[963.10961914 752.03155518]
[948.61926270 756.29852295]
[933.51379395 756.30889893]
[919.01757812 752.06176758]
[906.30590820 743.90148926]
[896.40924072 732.48956299]
[890.12976074 718.75109863]
[887.97662354 703.79980469]
[890.12432861 688.84777832]
[876.47332764 682.63085938]
[862.82232666 676.41394043]
[849.17126465 670.19708252]
[834.38183594 671.96362305]
[825.02954102 659.20251465]
[811.37847900 652.98559570]
[797.72747803 646.76873779]
[784.07647705 640.55181885]
[773.84368896 651.51953125]
[780.99090576 664.70727539]
[788.13812256 677.89501953]
[795.28540039 691.08282471]
[802.43261719 704.27056885]
[817.83245850 706.17419434]
[829.14929199 716.79071045]
[832.03149414 732.03771973]
[825.37078857 746.05255127]
[811.72845459 753.44616699]
[796.35015869 751.37554932]
[785.14916992 740.63696289]
[782.43255615 725.35955811]
[789.24481201 711.41778564]
[782.09759521 698.23004150]
[774.95037842 685.04229736]
[767.80316162 671.85449219]
[760.65594482 658.66674805]
[760.29333496 641.77374268]
[768.36572266 631.19671631]
[756.39544678 622.15722656]
[749.19030762 620.63970947]
[744.33996582 612.94348145]
[732.47491455 603.76635742]
[720.60980225 594.58917236]
[708.74475098 585.41198730]
[696.87969971 576.23480225]
[683.58599854 582.99816895]
[668.61248779 583.32025146]
[654.92797852 577.08367920]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 191]
[3 190]
[4 189]
[5 188]
[6 187]
[7 186]
[8 184]
[9 183]
[10 182]
[11 181]
[12 180]
[18 174]
[19 173]
[22 170]
[23 169]
[24 168]
[25 167]
[26 166]
[27 165]
[30 163]
[31 162]
[32 161]
[33 160]
[37 157]
[39 155]
[40 154]
[41 153]
[42 152]
[43 151]
[44 150]
[45 149]
[48 148]
[49 147]
[50 146]
[51 145]
[52 144]
[53 143]
[54 142]
[55 96]
[56 95]
[57 94]
[58 93]
[59 92]
[61 91]
[62 90]
[63 89]
[64 88]
[65 87]
[66 86]
[123 134]
[124 133]
[125 132]
[126 131]
[197 268]
[198 267]
[199 266]
[200 265]
[201 264]
[202 262]
[203 261]
[204 241]
[205 240]
[206 239]
[207 238]
[209 236]
[210 235]
[211 234]
[212 233]
[242 259]
[243 258]
[244 257]
[245 256]
[246 255]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
