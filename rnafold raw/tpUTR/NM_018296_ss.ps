%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 23:44:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUAGCAUGGAACUCACACCACAGCUUCCCUGGUCCACAGAGGCUCUCACCGCCAUUGCCACCAGUAUGGUGGUAUGUACUCACAAAGAUUAAGAAAGAAAUGUAUUCUGAUUAGA\
) } def
/len { sequence length } bind def

/coor [
[15.74549389 190.97679138]
[7.50346375 185.30349731]
[-4.99624538 193.59550476]
[-17.49595451 201.88749695]
[-29.99566269 210.17950439]
[-42.49537277 218.47149658]
[-44.92087936 223.38499451]
[-48.65824509 226.48419189]
[-52.75862122 227.57376099]
[-56.33990860 226.87957764]
[-69.46135712 234.14784241]
[-82.58280182 241.41610718]
[-95.70424652 248.68437195]
[-108.72778320 256.12664795]
[-121.65109253 263.74163818]
[-123.00195312 279.19979858]
[-133.20628357 290.88958740]
[-148.34031677 294.31604004]
[-162.58471680 288.16162109]
[-170.46220398 274.79281616]
[-168.94372559 259.35021973]
[-158.61318970 247.77182007]
[-143.44287109 244.50975037]
[-129.26608276 250.81832886]
[-116.34276581 243.20333862]
[-112.12351227 237.01759338]
[-102.97251129 235.56292725]
[-89.85106659 228.29466248]
[-76.72962189 221.02639771]
[-63.60817337 213.75813293]
[-50.78737259 205.97178650]
[-38.28766251 197.67979431]
[-25.78795433 189.38778687]
[-13.28824615 181.09579468]
[-0.78853744 172.80378723]
[-1.64206243 152.66424561]
[9.70864201 135.84307861]
[28.95844078 129.00694275]
[48.63446426 134.97981262]
[59.92302704 125.10214996]
[71.21158600 115.22447968]
[82.50015259 105.34680939]
[84.88610077 90.53778076]
[77.27111816 77.61447144]
[69.65612793 64.69116211]
[54.20381927 62.29112244]
[43.94834900 50.48606491]
[43.73203659 34.84997940]
[53.65701675 22.76574326]
[69.03701782 19.93916321]
[82.61007690 27.70486641]
[87.96740723 42.39612198]
[82.57943726 57.07617188]
[90.19442749 69.99948120]
[97.80941010 82.92279816]
[105.29878235 82.52362823]
[120.27752686 81.72529602]
[127.76689148 81.32612610]
[133.96507263 67.66661072]
[140.16325378 54.00708771]
[146.36143494 40.34756470]
[152.55963135 26.68804359]
[158.75781250 13.02852154]
[164.95599365 -0.63100016]
[171.15417480 -14.29052162]
[172.19308472 -31.21260834]
[188.74145508 -34.89879227]
[196.86462402 -20.01758194]
[184.81369019 -8.09233856]
[178.61550903 5.56718254]
[172.41732788 19.22670364]
[166.21914673 32.88622665]
[160.02096558 46.54574585]
[153.82278442 60.20526886]
[147.62460327 73.86479187]
[141.42642212 87.52431488]
[126.01877594 93.80661011]
[110.07132721 98.22076416]
[124.73238373 101.39150238]
[139.39343262 104.56224060]
[154.05448914 107.73298645]
[160.94268799 94.30856323]
[171.07141113 83.12502289]
[183.75003052 74.94487762]
[198.11412048 70.32585144]
[213.18429565 69.58288574]
[227.93307495 72.76663208]
[241.35482788 79.66002655]
[252.53445435 89.79305267]
[260.70971680 102.47483826]
[265.32318115 116.84070587]
[266.06033325 131.91117859]
[262.87088013 146.65872192]
[255.97232056 160.07780457]
[245.83497620 171.25352478]
[233.15003967 179.42388916]
[218.78237915 184.03181458]
[203.71162415 184.76313782]
[188.96533203 181.56800842]
[175.54888916 174.66424561]
[164.37709045 164.52258301]
[156.21163940 151.83450317]
[151.60925293 137.46507263]
[150.88374329 122.39403534]
[136.22268677 119.22329712]
[121.56163788 116.05255890]
[106.90058899 112.88181305]
[92.37782288 116.63536835]
[81.08925629 126.51303864]
[69.80069733 136.39071655]
[58.51213455 146.26838684]
[61.77524567 155.97937012]
[61.89722824 166.19337463]
[58.88460922 175.92251587]
[53.04621506 184.23144531]
[44.96159363 190.32725525]
[35.42353058 193.63513184]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 35]
[3 34]
[4 33]
[5 32]
[6 31]
[10 30]
[11 29]
[12 28]
[13 27]
[14 25]
[15 24]
[39 111]
[40 110]
[41 109]
[42 108]
[43 55]
[44 54]
[45 53]
[58 76]
[59 75]
[60 74]
[61 73]
[62 72]
[63 71]
[64 70]
[65 69]
[78 107]
[79 106]
[80 105]
[81 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
