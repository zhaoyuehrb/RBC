%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 11:38:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGUCAGAUUCUCUGCAGCAGGAGUACAGGUUGCAGCCACUCUCCCGCCGAACAUUGAAUACGUCUUUCCACCAUCUUGUCUUUGCUGUGGCUCUGGGAAAAUCAGCAGAGUCAGCCAUCACUCUCCAAGGGGAGCUGUCAGUUCUAUCUGCCAGCUUUUGAGUGUUCAGUUUGAUUUUUACUUAUUCAACCUGGAAUUUGAAUGUC\
) } def
/len { sequence length } bind def

/coor [
[3.40117335 356.78488159]
[10.70599651 343.68383789]
[3.34738398 342.23443604]
[-7.33825731 352.76138306]
[-18.02389908 363.28836060]
[-18.30909729 378.86257935]
[-29.29581642 389.38619995]
[-44.14170074 389.01834106]
[-54.82734299 399.54531860]
[-65.51298523 410.07226562]
[-61.76434326 424.90112305]
[-65.91403961 439.51882935]
[-76.75128937 450.02691650]
[-91.29589844 453.67526245]
[-105.61734009 449.58111572]
[-116.30298615 460.10809326]
[-126.98862457 470.63504028]
[-137.67427063 481.16201782]
[-148.35990906 491.68899536]
[-159.04554749 502.21597290]
[-169.73118591 512.74291992]
[-170.01638794 528.31713867]
[-181.00311279 538.84075928]
[-195.84899902 538.47290039]
[-199.68780518 554.41644287]
[-215.48924255 558.80352783]
[-226.99812317 547.12115479]
[-222.37510681 531.38714600]
[-206.37596130 527.78723145]
[-206.52169800 512.93756104]
[-195.83489990 502.10946655]
[-180.25816345 502.05728149]
[-169.57250977 491.53030396]
[-158.88687134 481.00335693]
[-148.20123291 470.47637939]
[-137.51559448 459.94940186]
[-126.82994843 449.42245483]
[-116.14431000 438.89547729]
[-120.02375031 424.51440430]
[-116.15824890 410.02600098]
[-105.48919678 399.34713745]
[-90.81107330 395.41659546]
[-76.03995514 399.38662720]
[-65.35430908 388.85968018]
[-54.66867065 378.33270264]
[-54.81441498 363.48297119]
[-44.12761307 352.65490723]
[-28.55086708 352.60272217]
[-17.86522675 342.07574463]
[-7.17958450 331.54879761]
[30.37580299 315.92584229]
[34.14960480 301.40832520]
[37.92340469 286.89080811]
[41.69720840 272.37329102]
[45.47100830 257.85577393]
[43.86713791 253.35649109]
[45.07319260 247.80189514]
[49.58095551 242.96369934]
[53.78736496 228.56558228]
[57.99377823 214.16744995]
[62.20018768 199.76931763]
[66.40660095 185.37118530]
[70.61300659 170.97306824]
[74.81941986 156.57493591]
[73.67767334 149.27241516]
[79.19794464 141.99375916]
[83.61927032 127.66016388]
[73.82515717 119.97453308]
[67.49458313 108.91109467]
[65.75083923 95.98458099]
[69.07070923 83.06365204]
[77.18245697 72.10076904]
[89.07450867 64.83750916]
[103.11792755 62.52975082]
[102.89353943 47.53142929]
[99.63589478 38.99679184]
[102.77965546 32.30745697]
[102.77965546 17.30745888]
[102.77965546 2.30745864]
[102.77965546 -12.69254112]
[102.77965546 -27.69254112]
[88.37611389 -35.81150436]
[80.07971954 -50.00493622]
[80.07300568 -66.35134125]
[88.26310730 -80.38938141]
[102.33296967 -88.33544159]
[102.10857391 -103.33376312]
[94.16570282 -117.01664734]
[101.71173859 -129.85824585]
[101.48735046 -144.85656738]
[101.03862000 -159.84985352]
[100.36564636 -174.83474731]
[99.69267273 -189.81964111]
[99.01969910 -204.80453491]
[98.34672546 -219.78942871]
[97.67375946 -234.77432251]
[97.00078583 -249.75923157]
[96.32781219 -264.74411011]
[82.65869904 -271.74777222]
[74.33621216 -284.65634155]
[73.59904480 -299.99755859]
[80.64550018 -313.64462280]
[93.58011627 -321.92663574]
[108.92354584 -322.61569214]
[122.54847717 -315.52648926]
[130.78988647 -302.56597900]
[131.43086243 -287.22048950]
[124.29898834 -273.61782837]
[111.31270599 -265.41708374]
[111.98567963 -250.43218994]
[112.65865326 -235.44729614]
[113.33162689 -220.46240234]
[114.00460052 -205.47750854]
[114.67756653 -190.49261475]
[115.35054016 -175.50772095]
[116.02351379 -160.52282715]
[118.88231659 -156.69619751]
[119.36708832 -151.03288269]
[116.48567200 -145.08094788]
[116.71006012 -130.08262634]
[124.63688660 -117.47252655]
[117.10689545 -103.55815887]
[117.33129120 -88.55983734]
[129.67236328 -82.70949554]
[138.33021545 -72.06141663]
[141.57093811 -58.65774918]
[138.70664978 -45.10099411]
[130.24055481 -34.04870605]
[117.77965546 -27.69254112]
[117.77965546 -12.69254112]
[117.77965546 2.30745864]
[117.77965546 17.30745888]
[117.77965546 32.30745697]
[117.89186096 47.30703735]
[118.11624908 62.30535889]
[130.25151062 71.12213898]
[144.58509827 66.70081329]
[158.91868591 62.27948380]
[173.25227356 57.85815811]
[187.58587646 53.43682861]
[198.49232483 41.97560120]
[212.93478394 45.61772919]
[227.26837158 41.19639969]
[241.60195923 36.77507401]
[248.76429749 22.68690109]
[263.81634521 17.86909676]
[277.82800293 25.17997551]
[282.48638916 40.28212357]
[275.02780151 54.21570587]
[259.87722778 58.71417236]
[246.02328491 51.10866547]
[231.68969727 55.52999115]
[217.35610962 59.95132065]
[207.47488403 71.09630585]
[192.00720215 67.77042389]
[177.67361450 72.19174957]
[163.34001160 76.61307526]
[149.00642395 81.03440094]
[134.67283630 85.45573425]
[136.01451111 104.00485229]
[128.40948486 120.22483826]
[114.40045929 130.25799561]
[97.95286560 132.08149719]
[93.53153992 146.41508484]
[89.21755219 160.78134155]
[85.01113892 175.17947388]
[80.80472565 189.57760620]
[76.59831238 203.97573853]
[72.39190674 218.37385559]
[68.18549347 232.77198792]
[63.97908401 247.17012024]
[59.98852921 261.62954712]
[56.21472931 276.14709473]
[52.44092941 290.66461182]
[48.66712570 305.18212891]
[44.89332581 319.69964600]
[53.52939606 307.43511963]
[67.27359009 301.42703247]
[82.14096069 303.41735840]
[93.82090759 312.82897949]
[98.92699432 326.93316650]
[95.97876740 341.64056396]
[85.83103180 352.68698120]
[71.42598724 356.86965942]
[56.94018936 352.97586060]
[46.57475281 342.13671875]
[52.47012711 355.92965698]
[58.36550140 369.72256470]
[64.26087952 383.51547241]
[70.15625763 397.30841064]
[76.05162811 411.10131836]
[81.94700623 424.89422607]
[97.10443115 428.21569824]
[107.38955688 439.83444214]
[108.84754944 455.28286743]
[100.91777039 468.62072754]
[86.64939117 474.71932983]
[71.52888489 471.23364258]
[61.37040710 459.50399780]
[60.08008957 444.04064941]
[68.15409088 430.78961182]
[62.25871277 416.99670410]
[56.36333847 403.20376587]
[50.46796036 389.41085815]
[44.57258606 375.61795044]
[38.67721176 361.82501221]
[32.78183365 348.03210449]
[25.42322350 346.58267212]
[27.21411133 361.47540283]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 50]
[4 49]
[5 48]
[8 45]
[9 44]
[10 43]
[15 38]
[16 37]
[17 36]
[18 35]
[19 34]
[20 33]
[21 32]
[24 29]
[51 176]
[52 175]
[53 174]
[54 173]
[55 172]
[58 171]
[59 170]
[60 169]
[61 168]
[62 167]
[63 166]
[64 165]
[66 164]
[67 163]
[74 135]
[75 134]
[77 133]
[78 132]
[79 131]
[80 130]
[81 129]
[86 123]
[87 122]
[89 120]
[90 119]
[91 116]
[92 115]
[93 114]
[94 113]
[95 112]
[96 111]
[97 110]
[98 109]
[136 159]
[137 158]
[138 157]
[139 156]
[140 155]
[142 153]
[143 152]
[144 151]
[186 207]
[187 206]
[188 205]
[189 204]
[190 203]
[191 202]
[192 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
