%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 19:55:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUGUAGACUCAGCCUCACUCUGUACAAGAGCCAGGUGAGAAUUUCAAGGAUUAUCGACUUCAUAUUGCACAUUAAAGUUACAAAUUAAAGUGGCUUGGUCAAGAAUGAGAA\
) } def
/len { sequence length } bind def

/coor [
[146.21354675 167.45985413]
[130.93197632 175.69502258]
[114.25637817 180.51881409]
[96.93828583 181.71383667]
[79.75817108 179.22621155]
[63.49030685 173.16807556]
[48.86783981 163.81242371]
[36.54977036 151.58093262]
[27.09123611 137.02481079]
[20.91851616 120.80007172]
[6.12309694 123.26898956]
[-8.67232227 125.73790741]
[-23.46774292 128.20683289]
[-31.54805756 132.76313782]
[-38.70439148 130.53405762]
[-53.56222153 132.59436035]
[-68.42005157 134.65467834]
[-77.95125580 146.97514343]
[-93.04855347 148.85292053]
[-104.73550415 139.69046021]
[-119.59333801 141.75076294]
[-134.45117188 143.81106567]
[-149.30900574 145.87136841]
[-160.09526062 157.74722290]
[-176.09542847 156.57490540]
[-185.03553772 143.25372314]
[-180.05749512 128.00253296]
[-164.98004150 122.52075958]
[-151.36930847 131.01353455]
[-136.51147461 128.95323181]
[-121.65364075 126.89292908]
[-106.79580688 124.83262634]
[-98.04296875 112.83581543]
[-83.00437164 110.53472137]
[-70.48035431 119.79683685]
[-55.62252426 117.73653412]
[-40.76469421 115.67623138]
[-25.93666077 113.41140747]
[-11.14124107 110.94248962]
[3.65417814 108.47357178]
[18.44959831 106.00465393]
[18.51743507 93.13591766]
[20.60339928 80.43718719]
[24.65582275 68.22297668]
[30.57433891 56.79581451]
[38.21236038 46.43871307]
[47.38071060 37.40819168]
[57.85231400 29.92791748]
[69.36781311 24.18316078]
[81.64199829 20.31620216]
[94.37086487 18.42281723]
[107.23915100 18.54990005]
[119.92814636 20.69430542]
[132.12356567 24.80292130]
[143.52336121 30.77398491]
[153.84518433 38.45960999]
[162.83340454 47.66943741]
[170.26538086 58.17536926]
[175.95706177 69.71719360]
[179.76747131 82.00904846]
[181.60223389 94.74649811]
[196.59654236 95.15981293]
[211.59085083 95.57312775]
[226.58514404 95.98645020]
[241.57945251 96.39976501]
[257.48120117 87.24284363]
[272.09890747 96.84553528]
[287.09890747 96.84553528]
[302.09890747 96.84553528]
[313.23202515 85.95098114]
[328.44415283 86.16466522]
[338.76184082 96.84553528]
[353.76184082 96.84553528]
[357.70053101 94.34793091]
[361.81536865 93.42146301]
[365.56207275 93.91485596]
[368.50985718 95.50707245]
[370.38919067 97.76289368]
[385.29812622 99.41301727]
[400.20709229 101.06314087]
[415.11605835 102.71326447]
[430.02502441 104.36338043]
[444.93399048 106.01350403]
[455.28036499 94.44924927]
[470.45510864 91.20793152]
[484.62326050 97.53590393]
[492.33685303 110.99993896]
[490.62985229 126.42283630]
[480.15863037 137.87417603]
[464.94958496 140.95068359]
[450.85092163 134.46939087]
[443.28384399 120.92247009]
[428.37490845 119.27234650]
[413.46594238 117.62222290]
[398.55697632 115.97209930]
[383.64801025 114.32197571]
[368.73904419 112.67185211]
[353.76184082 111.84553528]
[338.76184082 111.84553528]
[328.44415283 122.52640533]
[313.23202515 122.74008942]
[302.09890747 111.84553528]
[287.09890747 111.84553528]
[272.09890747 111.84553528]
[263.24685669 120.21631622]
[250.66113281 120.25669098]
[241.16613770 111.39406586]
[226.17182922 110.98075104]
[211.17753601 110.56743622]
[196.18322754 110.15412140]
[181.18891907 109.74080658]
[177.30322266 126.65960693]
[169.93368530 142.37693787]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 41]
[11 40]
[12 39]
[13 38]
[15 37]
[16 36]
[17 35]
[20 32]
[21 31]
[22 30]
[23 29]
[61 111]
[62 110]
[63 109]
[64 108]
[65 107]
[67 104]
[68 103]
[69 102]
[72 99]
[73 98]
[78 97]
[79 96]
[80 95]
[81 94]
[82 93]
[83 92]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
