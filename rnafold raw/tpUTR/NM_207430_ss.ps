%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 05:38:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGCUUGACACAUGGCAGAGGAUGGCUCACUUAUACCUUCACUUUGGAAACAACCUUCUCUUAGAUCAGGAUCAUUGAGAUCACUGGCAACAUUAUAGUAGACAAAGAAAUACAAGUUAAAUACGCAGACUUCCAGGAAUUUUACCAGUUAGUGAGUACUUGUGUUAAAAUAAAGAAAUAAAGGUUAAAUAUGCAGGCUUCUA\
) } def
/len { sequence length } bind def

/coor [
[-32.38747406 470.03872681]
[-34.99365616 454.83309937]
[-28.94429970 440.64123535]
[-16.16973495 431.99172974]
[-16.62940788 416.99877930]
[-17.08908081 402.00582886]
[-17.54875374 387.01287842]
[-18.00842667 372.01989746]
[-21.35714912 365.42742920]
[-18.35848999 356.79406738]
[-18.58835411 341.79583740]
[-25.23132706 338.31430054]
[-27.74815178 353.10165405]
[-42.58952332 355.27737427]
[-49.24481583 341.83465576]
[-38.51727295 331.35128784]
[-45.16024780 327.86978149]
[-57.62430191 336.21527100]
[-70.08836365 344.56079102]
[-82.55241394 352.90628052]
[-95.01647186 361.25177002]
[-107.41621399 369.69253540]
[-119.75092316 378.22802734]
[-126.69620514 392.44329834]
[-141.56480408 393.32305908]
[-153.89950562 401.85858154]
[-152.56562805 417.15945435]
[-159.07542419 431.07052612]
[-171.67779541 439.84982300]
[-186.98277283 441.13571167]
[-200.87336731 434.58236694]
[-209.61311340 421.95251465]
[-210.85104370 406.64361572]
[-204.25416565 392.77362061]
[-191.59700012 384.07348633]
[-176.28427124 382.88357544]
[-162.43502808 389.52389526]
[-150.10032654 380.98837280]
[-144.03730774 367.38363647]
[-128.28643799 365.89334106]
[-115.95173645 357.35781860]
[-112.23848724 350.96356201]
[-103.36196899 348.78771973]
[-90.89791107 340.44223022]
[-78.43385315 332.09671021]
[-65.96979523 323.75122070]
[-53.50574112 315.40573120]
[-57.63283920 296.35946655]
[-54.05965805 277.74929810]
[-43.77177429 262.47961426]
[-28.76802063 252.76524353]
[-11.68511963 249.81286621]
[4.66136932 253.68283081]
[12.32664967 240.78929138]
[19.99193001 227.89575195]
[27.65720940 215.00219727]
[35.32249069 202.10865784]
[42.98777008 189.21511841]
[41.44452286 168.63648987]
[60.29309845 158.44760132]
[67.35771179 145.21540833]
[74.42232513 131.98320007]
[81.48693848 118.75099182]
[70.57440948 95.71700287]
[84.41420746 70.77515411]
[76.14387512 66.88561249]
[73.76954651 59.88294220]
[63.36806107 49.07511902]
[52.96657181 38.26729584]
[42.56508636 27.45947266]
[32.08108902 16.73166466]
[21.51520348 6.08450556]
[10.94931507 -4.56265450]
[0.38342708 -15.20981407]
[-15.58943462 -16.70889091]
[-24.25541878 -30.21001434]
[-18.96672058 -45.35627365]
[-3.78038025 -50.52875900]
[9.65394402 -41.75958252]
[11.03058720 -25.77570152]
[21.59647560 -15.12854195]
[32.16236115 -4.48138237]
[42.72825241 6.16577721]
[49.67449570 8.70043755]
[53.37290955 17.05798531]
[63.77439880 27.86580849]
[74.17588806 38.67363358]
[84.57736969 49.48145676]
[95.06137085 60.20926285]
[90.89344788 45.79994583]
[86.72553253 31.39062691]
[76.62544250 20.30061913]
[70.37351990 6.66560984]
[68.56120300 -8.22450447]
[71.35994720 -22.96109390]
[78.50496674 -36.15005112]
[89.32035065 -46.54367828]
[102.78293610 -53.15872192]
[117.61914062 -55.36938477]
[132.42543030 -52.96653366]
[145.80111694 -46.17748642]
[156.48081970 -35.64449310]
[163.45423889 -22.36400032]
[166.06166077 -7.59235954]
[164.05641174 7.27300406]
[157.62821960 20.82580185]
[147.38519287 31.78391457]
[134.29379272 39.11162949]
[125.78224945 51.46289062]
[117.27070618 63.81415176]
[130.66180420 57.05554962]
[144.05288696 50.29694748]
[157.44396973 43.53834534]
[170.83506775 36.77973938]
[184.22615051 30.02113724]
[197.61724854 23.26253510]
[211.00833130 16.50393105]
[224.39942932 9.74532795]
[224.23995972 -1.72526288]
[228.35606384 -12.37808323]
[236.11672974 -20.68634605]
[246.37162781 -25.47467613]
[257.62145996 -26.08531189]
[268.23721313 -22.46820450]
[276.69598389 -15.18273640]
[290.38354492 -21.31876564]
[304.07110596 -27.45479584]
[313.49871826 -40.16032791]
[328.27749634 -38.30633926]
[341.96505737 -44.44237137]
[355.65258789 -50.57839966]
[369.34014893 -56.71442795]
[371.76177979 -60.33153534]
[374.89456177 -62.74447632]
[378.27172852 -63.87755585]
[381.44992065 -63.81478119]
[384.05935669 -62.77831650]
[398.09710693 -68.06430817]
[403.11145020 -82.87612915]
[416.50033569 -90.95526123]
[431.94189453 -88.48696899]
[442.14508057 -76.63671875]
[442.29232788 -60.99982834]
[432.31405640 -48.95956039]
[416.92169189 -46.20096588]
[403.38308716 -54.02656174]
[389.34533691 -48.74057007]
[375.47619629 -43.02687454]
[361.78863525 -36.89084625]
[348.10107422 -30.75481606]
[334.41351318 -24.61878777]
[325.96493530 -12.35214424]
[310.20712280 -13.76724148]
[296.51956177 -7.63121176]
[282.83203125 -1.49518228]
[280.06256104 16.98306847]
[266.61233521 30.16780281]
[247.78488159 32.60692978]
[231.15803528 23.13641739]
[217.76693726 29.89502144]
[204.37585449 36.65362549]
[190.98475647 43.41222763]
[177.59367371 50.17082977]
[164.20257568 56.92943192]
[150.81149292 63.68803787]
[137.42039490 70.44664001]
[124.02931213 77.20524597]
[129.64836121 87.55635071]
[131.16667175 98.88622284]
[128.62828064 109.67613983]
[122.60519409 118.56572723]
[114.09193420 124.52436829]
[104.34899139 126.96907043]
[94.71914673 125.81561279]
[87.65453339 139.04780579]
[80.58991241 152.28001404]
[73.52529907 165.51222229]
[77.44651031 174.09657288]
[76.98220825 183.38487244]
[72.36312103 191.29763794]
[64.73593140 196.12161255]
[55.88131332 196.88040161]
[48.21603394 209.77394104]
[40.55075455 222.66748047]
[32.88547516 235.56103516]
[25.22019386 248.45457458]
[17.55491257 261.34811401]
[28.42493439 273.17578125]
[34.22445679 288.70617676]
[33.74097824 305.79138184]
[26.66113472 321.91137695]
[13.67181492 334.54580688]
[-3.59011459 341.56594849]
[-3.36025095 356.56420898]
[-3.01547241 371.56024170]
[-2.55579901 386.55319214]
[-2.09612584 401.54614258]
[-1.63645256 416.53909302]
[-1.17677927 431.53204346]
[12.10367012 439.38275146]
[19.01107216 453.17733765]
[17.34129715 468.51409912]
[7.62716722 480.49905396]
[-7.03157520 485.30786133]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 199]
[5 198]
[6 197]
[7 196]
[8 195]
[10 194]
[11 193]
[17 47]
[18 46]
[19 45]
[20 44]
[21 43]
[22 41]
[23 40]
[25 38]
[26 37]
[53 187]
[54 186]
[55 185]
[56 184]
[57 183]
[58 182]
[60 177]
[61 176]
[62 175]
[63 174]
[65 89]
[67 88]
[68 87]
[69 86]
[70 85]
[71 83]
[72 82]
[73 81]
[74 80]
[110 167]
[111 166]
[112 165]
[113 164]
[114 163]
[115 162]
[116 161]
[117 160]
[118 159]
[125 155]
[126 154]
[127 153]
[129 151]
[130 150]
[131 149]
[132 148]
[137 147]
[138 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
