%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 20:21:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACUGAGAAGGGGCCUUACAGAACCCUAAAGGGAGGGAAGGUCCUACAGGUCUCCGGCCACCCACACAAGGAGGAGGAAGAGGAAAUGGUGACCCAAGUGUGGGGGUUGUGGUUCAGGAAAGCAUCUUCCCAGGGGUCCACCUCCCUUUAUAAACCCCACCAGAACCACAUCAUUAAAAGGUUUGACUGCGCACCA\
) } def
/len { sequence length } bind def

/coor [
[86.11201477 121.44395447]
[74.62135315 131.08576965]
[63.13068390 140.72758484]
[51.64001846 150.36940002]
[40.14934921 160.01121521]
[42.65885544 172.26989746]
[39.73104095 184.36116028]
[31.98209763 194.00134277]
[20.93273354 199.39665222]
[8.71002674 199.57684326]
[-2.36197448 194.56910706]
[-14.15277100 203.84149170]
[-25.94356728 213.11387634]
[-37.73436356 222.38626099]
[-49.52516174 231.65864563]
[-61.31595612 240.93103027]
[-73.10675049 250.20341492]
[-75.12341309 265.64916992]
[-87.21305084 274.88470459]
[-101.92577362 272.86694336]
[-101.01279449 284.73312378]
[-105.89586639 295.45480347]
[-115.25447845 302.41207886]
[-126.69073486 303.96667480]
[-137.34318542 299.84646606]
[-149.42224121 308.74008179]
[-161.50129700 317.63369751]
[-167.57693481 332.86587524]
[-183.84283447 334.95217896]
[-193.56600952 321.74642944]
[-186.74411011 306.83355713]
[-170.39491272 305.55465698]
[-158.31585693 296.66104126]
[-146.23680115 287.76742554]
[-144.59017944 269.54318237]
[-129.90039062 258.10531616]
[-111.19815826 261.07614136]
[-109.69038391 246.30244446]
[-97.86492920 236.73095703]
[-82.37913513 238.41261292]
[-70.58834076 229.14022827]
[-58.79754639 219.86784363]
[-47.00674820 210.59545898]
[-35.21595383 201.32307434]
[-23.42515564 192.05068970]
[-11.63435936 182.77830505]
[-13.13091469 165.19038391]
[-3.69397831 150.08770752]
[13.06292534 143.60899353]
[30.50753593 148.52053833]
[41.99820328 138.87873840]
[53.48886871 129.23692322]
[64.97953796 119.59510040]
[76.47019958 109.95329285]
[73.61968994 91.97504425]
[83.77882385 75.24114990]
[103.64428711 68.58568573]
[124.39538574 76.82192993]
[117.10243225 63.71418762]
[109.80948639 50.60644913]
[102.89495850 44.62088776]
[102.50669098 37.23237991]
[95.42262268 24.01057816]
[88.33855438 10.78877735]
[81.25449371 -2.43302321]
[74.17042542 -15.65482330]
[67.08635712 -28.87662315]
[60.00229263 -42.09842300]
[45.14139938 -46.76657104]
[38.14550018 -60.27627182]
[42.68744659 -74.41509247]
[35.60338211 -87.63689423]
[28.78468895 -93.73140717]
[28.51369858 -101.12514496]
[13.72874069 -106.02848816]
[6.94806480 -119.64749146]
[11.71376801 -133.71246338]
[-3.48784423 -132.80093384]
[-17.74367714 -138.15734863]
[-28.58382225 -148.85366821]
[-34.13016129 -163.03668213]
[-33.42175293 -178.24911499]
[-26.58133507 -191.85531616]
[-14.79405117 -201.49790955]
[-0.10212164 -205.50628662]
[14.94898987 -203.18595886]
[27.75158691 -194.93893433]
[36.08754349 -182.19406128]
[38.51260376 -167.15946960]
[34.60660934 -152.44000244]
[25.04629898 -140.58586121]
[39.26767349 -136.30940247]
[46.42820358 -122.88623810]
[41.84622955 -107.99854279]
[48.82518387 -94.72096252]
[55.90924835 -81.49916077]
[70.19667816 -77.44887543]
[77.56928253 -64.14100647]
[73.22409058 -49.18249130]
[80.30815887 -35.96068954]
[87.39222717 -22.73888969]
[94.47629547 -9.51708889]
[101.56035614 3.70471120]
[108.64442444 16.92651176]
[115.72849274 30.14831161]
[122.91722870 43.31349564]
[130.21017456 56.42123795]
[137.50312805 69.52897644]
[151.33843994 75.32415771]
[165.79608154 71.32704926]
[180.25370789 67.32994080]
[194.71133423 63.33283234]
[209.16897583 59.33572769]
[223.62660217 55.33861923]
[238.08424377 51.34151077]
[252.54187012 47.34440613]
[258.78671265 23.37772179]
[286.86273193 12.30259800]
[297.71875000 1.95141268]
[308.57476807 -8.39977264]
[319.43075562 -18.75095749]
[319.55627441 -34.55474854]
[330.87841797 -45.58127594]
[346.67999268 -45.28870010]
[357.58621216 -33.85059738]
[357.12658691 -18.05299568]
[345.57382202 -7.26832676]
[329.78195190 -7.89494705]
[318.92593384 2.45623803]
[308.06994629 12.80742359]
[297.21392822 23.15860939]
[300.22091675 30.02942276]
[306.23486328 43.77104950]
[309.24185181 50.64186096]
[324.21163940 49.69050217]
[339.18142700 48.73914337]
[354.15124512 47.78778458]
[369.12103271 46.83642578]
[373.36779785 32.28511429]
[382.33782959 20.06566811]
[394.94787598 11.65365124]
[409.67529297 8.06485367]
[424.74160767 9.73263931]
[438.32754517 16.45561409]
[448.79251099 27.42194939]
[454.87280273 41.30740356]
[455.83419800 56.43524170]
[451.56060791 70.97870636]
[442.56811523 83.18160248]
[429.94256592 91.57036591]
[415.20855713 95.13201141]
[400.14532471 93.43647003]
[386.57180786 86.68846893]
[376.12710571 75.70286560]
[370.07238770 61.80622864]
[355.10260010 62.75758743]
[340.13281250 63.70894623]
[325.16299438 64.66030121]
[310.19320679 65.61166382]
[298.79296875 75.52244568]
[285.30191040 79.50548553]
[272.40570068 77.64291382]
[262.34771729 71.10438538]
[256.53897095 61.80203629]
[242.08134460 65.79914093]
[227.62371826 69.79624939]
[213.16607666 73.79335785]
[198.70845032 77.79046631]
[184.25080872 81.78757477]
[169.79318237 85.78468323]
[155.33555603 89.78178406]
[151.74118042 96.36437988]
[166.34526062 99.78794861]
[181.34507751 99.86153412]
[191.45513916 110.94245911]
[190.15686035 125.88616943]
[178.28733826 135.05755615]
[163.49955750 132.54327393]
[155.32809448 119.96437836]
[144.55244446 109.52956390]
[140.95808411 116.11215973]
[145.41188049 130.43568420]
[149.86569214 144.75923157]
[161.35160828 155.63967896]
[157.74223328 170.09034729]
[162.19602966 184.41387939]
[174.60328674 195.13731384]
[171.25480652 211.19096375]
[155.59521484 216.06021118]
[143.73377991 204.73597717]
[147.87249756 188.86767578]
[143.41870117 174.54414368]
[132.25134277 164.68820190]
[135.54216003 149.21302795]
[131.08834839 134.88949585]
[126.63454437 120.56596375]
[112.54299164 128.29423523]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 54]
[2 53]
[3 52]
[4 51]
[5 50]
[11 46]
[12 45]
[13 44]
[14 43]
[15 42]
[16 41]
[17 40]
[20 37]
[25 34]
[26 33]
[27 32]
[58 108]
[59 107]
[60 106]
[62 105]
[63 104]
[64 103]
[65 102]
[66 101]
[67 100]
[68 99]
[71 96]
[72 95]
[74 94]
[77 91]
[109 171]
[110 170]
[111 169]
[112 168]
[113 167]
[114 166]
[115 165]
[116 164]
[118 131]
[119 130]
[120 129]
[121 128]
[134 159]
[135 158]
[136 157]
[137 156]
[138 155]
[181 196]
[182 195]
[183 194]
[185 192]
[186 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
