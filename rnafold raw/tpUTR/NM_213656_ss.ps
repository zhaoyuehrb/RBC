%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 19:57:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCCCAAGGUGAUGAAAAUGACCCACAUUUAUGAAACAGAGGCCAAUACAUGCUCCUGCCAGAGAGGUUUAAGAAAACUCCCCAGUCCCUUAAGGUACUUAGUUUCUUACUACUACAGCGGGUCCCCAUUGCUAGGUAGAAUAUCUUUUAUUCUGCUCCUUCCCUAACUCACCACUGCUAACA\
) } def
/len { sequence length } bind def

/coor [
[208.13047791 455.81610107]
[196.70971680 445.91372681]
[188.71653748 433.08404541]
[184.86167908 418.46789551]
[185.48794556 403.36495972]
[190.53962708 389.11813354]
[199.56753540 376.99426270]
[211.76892090 368.07138062]
[226.05882263 363.14291382]
[225.54948425 348.15158081]
[225.04013062 333.16021729]
[224.53077698 318.16885376]
[224.02142334 303.17752075]
[205.77456665 302.84899902]
[188.75448608 296.95965576]
[174.58897400 286.22964478]
[164.58380127 271.83407593]
[159.60278320 255.27558899]
[159.99470520 238.22825623]
[165.57269287 222.36828613]
[175.64726257 209.20935059]
[166.42350769 197.38047791]
[157.19973755 185.55162048]
[147.97596741 173.72274780]
[138.75219727 161.89387512]
[124.82440948 156.61506653]
[122.44000244 140.97456360]
[114.71351624 144.33938599]
[106.50823212 146.26135254]
[98.09115601 146.67788696]
[89.73619843 145.57546997]
[81.71524048 142.98995972]
[74.28929138 139.00549316]
[67.70001221 133.75173950]
[62.16181564 127.39965057]
[57.85492706 120.15594482]
[54.91949844 112.25632477]
[53.45105362 103.95787811]
[38.49482727 102.81273651]
[23.53860474 101.66759491]
[9.18801880 108.32876587]
[-2.91142344 99.64241028]
[-17.86764717 98.49726868]
[-32.82387161 97.35212708]
[-42.77337265 109.25956726]
[-57.82987976 113.01205444]
[-72.20386505 107.16669464]
[-80.36822510 93.97113037]
[-79.18360901 78.49934387]
[-69.10552216 66.70053864]
[-54.00919342 63.11160278]
[-39.69946671 69.11255646]
[-31.67873001 82.39590454]
[-16.72250557 83.54104614]
[-1.76628184 84.68618774]
[11.51453400 77.94310760]
[24.68374634 86.71136475]
[39.63996887 87.85650635]
[54.59619522 89.00164795]
[56.57722855 82.76828003]
[59.40940857 76.87267303]
[63.03722000 71.43039703]
[67.38954926 66.54812622]
[72.38109589 62.32155228]
[77.91400909 58.83353043]
[83.87982941 56.15243149]
[90.16163635 54.33079910]
[89.39779663 39.35026169]
[88.63395691 24.36972237]
[78.26856995 9.16276932]
[86.83387756 -6.14282370]
[85.81576538 -21.10823250]
[84.79765320 -36.07363892]
[83.77954102 -51.03905106]
[82.76142883 -66.00445557]
[81.74331665 -80.96986389]
[80.72520447 -95.93527222]
[77.01325226 -104.30709076]
[79.81906891 -111.16305542]
[79.05522919 -126.14360046]
[71.24501038 -131.49862671]
[66.85175323 -139.73173523]
[66.75468445 -148.92535400]
[70.84864807 -157.00349426]
[78.09642792 -162.20062256]
[78.09642792 -177.20062256]
[78.09642792 -192.20062256]
[70.35912323 -206.00079346]
[78.09642792 -218.72805786]
[78.09642792 -233.72805786]
[69.43272400 -247.65187073]
[77.39685059 -261.98730469]
[93.79599762 -261.98730469]
[101.76012421 -247.65187073]
[93.09642792 -233.72805786]
[93.09642792 -218.72805786]
[100.83372498 -206.00079346]
[93.09642792 -192.20062256]
[93.09642792 -177.20062256]
[93.09642792 -162.20062256]
[104.95921326 -145.32641602]
[94.03576660 -126.90744019]
[94.79960632 -111.92690277]
[95.69061279 -96.95338440]
[96.70872498 -81.98797607]
[97.72683716 -67.02256775]
[98.74494934 -52.05715942]
[99.76306152 -37.09175110]
[100.78117371 -22.12634468]
[101.79928589 -7.16093540]
[110.71227264 1.03856802]
[111.67046356 13.51380825]
[103.61449432 23.60588074]
[104.37833405 38.58642197]
[105.14217377 53.56695938]
[128.72547913 63.15822601]
[143.77769470 83.69100952]
[145.82850647 109.06734467]
[134.26887512 131.75080872]
[148.85641479 137.87570190]
[150.58106995 152.67012024]
[159.80484009 164.49897766]
[169.02861023 176.32785034]
[178.25236511 188.15672302]
[187.47613525 199.98558044]
[198.32707214 194.73933411]
[210.21020508 192.06845093]
[222.51634216 192.16886902]
[234.60113525 195.09295654]
[245.81875610 200.74366760]
[255.55647278 208.87683105]
[263.26794434 219.11120605]
[268.50387573 230.94610596]
[270.93765259 243.78584290]
[270.38549805 256.96963501]
[266.81866455 269.80560303]
[281.23370361 273.95376587]
[295.64871216 278.10192871]
[310.06372070 282.25009155]
[324.47875977 286.39825439]
[338.89376831 290.54641724]
[353.30877686 294.69458008]
[367.72381592 298.84274292]
[382.13882446 302.99090576]
[396.81713867 296.51580811]
[410.96395874 304.08200073]
[413.72705078 319.88531494]
[402.98681641 331.80282593]
[386.98223877 330.69241333]
[377.99066162 317.40591431]
[363.57565308 313.25775146]
[349.16061401 309.10958862]
[334.74560547 304.96145630]
[320.33059692 300.81329346]
[305.91555786 296.66513062]
[291.50054932 292.51696777]
[277.08554077 288.36880493]
[262.67050171 284.22064209]
[256.75607300 288.83251953]
[267.41772461 299.38378906]
[278.07934570 309.93508911]
[291.85498047 315.87075806]
[296.78604126 330.03707886]
[289.67355347 343.24359131]
[275.13171387 346.92257690]
[262.59457397 338.68725586]
[260.19567871 323.88018799]
[252.56144714 310.96823120]
[244.92721558 298.05627441]
[239.01277161 302.66818237]
[239.52212524 317.65951538]
[240.03147888 332.65087891]
[240.54083252 347.64221191]
[241.05017090 362.63357544]
[255.64164734 366.58074951]
[268.42053223 374.65487671]
[278.25051880 386.13803101]
[284.25753784 400.00912476]
[285.90744019 415.03475952]
[283.05355835 429.87881470]
[275.94961548 443.22143555]
[265.22729492 453.87619019]
[251.84002686 460.89562988]
[236.97819519 463.65560913]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 174]
[10 173]
[11 172]
[12 171]
[13 170]
[21 125]
[22 124]
[23 123]
[24 122]
[25 121]
[27 119]
[38 59]
[39 58]
[40 57]
[42 55]
[43 54]
[44 53]
[67 115]
[68 114]
[69 113]
[71 110]
[72 109]
[73 108]
[74 107]
[75 106]
[76 105]
[77 104]
[79 103]
[80 102]
[85 100]
[86 99]
[87 98]
[89 96]
[90 95]
[136 158]
[137 157]
[138 156]
[139 155]
[140 154]
[141 153]
[142 152]
[143 151]
[144 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
