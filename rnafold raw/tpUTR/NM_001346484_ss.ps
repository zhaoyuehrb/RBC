%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 16:24:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACCUUCAAAUAGGAGUGAUUGAAAUAAAUAACUACUUGCAUGUUAUGCUUUCAUUUGGGUGGAAUACUUCAUUGGAAUAAACUACUGAUCUUGUGCUGUGUCAAAGUAACAGACUAGAACCUUCUUUCAAGUACCUGAAUUGAAAUGAAACUCAUUUUGAAUAAUAAAAACUCUAGAAACUCUUUAUCUUCUC\
) } def
/len { sequence length } bind def

/coor [
[143.23211670 334.73629761]
[148.42523193 320.63034058]
[155.76116943 307.51049805]
[165.05928040 295.69982910]
[176.09059143 285.48922729]
[188.58346558 277.13009644]
[182.29264832 263.51300049]
[176.00183105 249.89588928]
[169.71102905 236.27877808]
[163.42021179 222.66166687]
[157.12940979 209.04455566]
[144.52662659 206.32690430]
[135.66075134 196.70040894]
[133.93659973 183.53097534]
[140.20655823 171.60189819]
[134.13481140 157.88571167]
[128.06306458 144.16950989]
[121.99131012 130.45332336]
[107.55831909 138.76277161]
[90.14262390 140.23200989]
[72.97319794 133.89514160]
[59.52354050 120.29714966]
[52.81445694 101.50850677]
[38.65620804 106.46269226]
[24.49795723 111.41687775]
[10.33970833 116.37106323]
[5.92769480 129.10485840]
[-4.85763359 136.85618591]
[-17.94423485 136.97465515]
[-28.54781914 129.64117432]
[-42.78365707 134.36779785]
[-57.01949310 139.09442139]
[-71.25532532 143.82104492]
[-85.49116516 148.54766846]
[-89.21764374 163.51820374]
[-100.46189117 174.08090210]
[-115.63591766 176.86521912]
[-129.89775085 170.98271179]
[-138.69647217 158.31045532]
[-139.22445679 142.89213562]
[-131.31323242 129.64765930]
[-117.48722076 122.80331421]
[-102.15827179 124.54309082]
[-90.21778870 134.31184387]
[-75.98194885 129.58522034]
[-61.74611664 124.85858917]
[-47.51027679 120.13196564]
[-33.27444077 115.40534210]
[-26.39047432 100.06711578]
[-10.22697639 94.33492279]
[5.38552237 102.21281433]
[19.54377174 97.25862885]
[33.70202255 92.30444336]
[47.86027145 87.35025787]
[49.77843094 72.47340393]
[37.33987808 64.08994293]
[24.90132904 55.70648193]
[12.46277809 47.32301712]
[-3.30518961 46.02618790]
[-9.53475189 32.49689102]
[-21.97330284 24.11342812]
[-34.41185379 15.72996521]
[-46.85040283 7.34650183]
[-59.28895569 -1.03696191]
[-71.72750092 -9.42042542]
[-88.11575317 -10.01814556]
[-95.55209351 -24.63433266]
[-86.38665009 -38.23310852]
[-70.04804993 -36.82521439]
[-63.34403992 -21.85897636]
[-50.90549088 -13.47551250]
[-38.46694183 -5.09204865]
[-26.02838898 3.29141474]
[-13.58983898 11.67487812]
[-1.15128875 20.05834198]
[13.72699070 20.75552940]
[20.84624100 34.88446808]
[33.28479385 43.26792908]
[45.72334290 51.65139389]
[58.16189194 60.03485870]
[65.15798950 57.33213806]
[58.26137924 44.01160049]
[51.36476898 30.69105911]
[41.38441467 19.49317741]
[44.90747070 4.91277742]
[58.89966965 -0.49262610]
[71.31008911 7.93242502]
[71.45016479 22.93170738]
[75.30017090 37.42920685]
[79.15016937 51.92670441]
[86.14626312 49.22398758]
[89.71804047 34.65544510]
[93.28981781 20.08690262]
[89.06114197 4.84128380]
[99.60648346 -5.67750978]
[103.17826080 -20.24605179]
[102.18222809 -29.33883286]
[106.92579651 -35.01854324]
[110.73061371 -49.52796936]
[114.53543091 -64.03739166]
[118.34025574 -78.54681396]
[107.82654572 -89.83687592]
[105.10821533 -105.02286530]
[111.05267334 -119.25898743]
[123.76305389 -128.00253296]
[139.18353271 -128.46348572]
[152.39347839 -120.49475861]
[159.17765808 -106.63912201]
[157.37126160 -91.31788635]
[147.55068970 -79.41998291]
[132.84967041 -74.74199677]
[129.04486084 -60.23257065]
[125.24003601 -45.72314835]
[121.43521881 -31.21372604]
[117.74680328 -16.67427635]
[114.17502594 -2.10573459]
[118.65917969 12.09784508]
[107.85836029 23.65867805]
[104.28658295 38.22721863]
[100.71480560 52.79576111]
[116.62031555 58.39906693]
[128.73817444 68.84325409]
[135.80545044 82.22421265]
[137.39112854 96.40472412]
[151.70089722 91.90687561]
[166.01066589 87.40902710]
[180.28392029 82.79664612]
[194.51976013 78.07002258]
[208.75559998 73.34339905]
[222.99142456 68.61677551]
[237.22726440 63.89015198]
[251.46310425 59.16352844]
[255.18957520 44.19299316]
[266.43383789 33.63030624]
[281.60784912 30.84598351]
[295.86968994 36.72849274]
[304.66839600 49.40074158]
[305.19638062 64.81906891]
[297.28515625 78.06353760]
[283.45916748 84.90789032]
[268.13021851 83.16811371]
[256.18972778 73.39936829]
[241.95388794 78.12599182]
[227.71804810 82.85261536]
[213.48222351 87.57923889]
[199.24638367 92.30586243]
[185.01054382 97.03248596]
[179.64642334 102.13020325]
[170.50851440 101.71879578]
[156.19874573 106.21663666]
[141.88897705 110.71448517]
[135.70750427 124.38157654]
[141.77925110 138.09776306]
[147.85099792 151.81394958]
[153.92274475 165.53013611]
[170.34913635 171.52891541]
[177.22514343 187.23995972]
[170.74650574 202.75375366]
[177.03732300 216.37084961]
[183.32814026 229.98796082]
[189.61894226 243.60507202]
[195.90975952 257.22219849]
[202.20057678 270.83929443]
[216.66381836 266.74526978]
[231.58946228 264.96432495]
[246.60992432 265.54031372]
[261.35534668 268.45907593]
[275.46258545 273.64868164]
[288.58425903 280.98135376]
[300.39721680 290.27655029]
[310.61056519 301.30535889]
[318.97277832 313.79614258]
[325.27792358 327.44134521]
[329.37075806 341.90493774]
[331.15048218 356.83071899]
[330.57324219 371.85113525]
[327.65328979 386.59631348]
[322.46249390 400.70312500]
[315.12872314 413.82418823]
[305.83258057 425.63638306]
[294.80294800 435.84881592]
[282.31146240 444.20999146]
[268.66574097 450.51403809]
[254.20181274 454.60565186]
[239.27587891 456.38415527]
[224.25549316 455.80566406]
[209.51055908 452.88449097]
[195.40415955 447.69256592]
[182.28370667 440.35769653]
[170.47229004 431.06057739]
[160.26077271 420.03009033]
[151.90061951 407.53790283]
[145.59771729 393.89166260]
[141.50727844 379.42742920]
[139.73002625 364.50134277]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 163]
[7 162]
[8 161]
[9 160]
[10 159]
[11 158]
[15 155]
[16 154]
[17 153]
[18 152]
[23 54]
[24 53]
[25 52]
[26 51]
[30 48]
[31 47]
[32 46]
[33 45]
[34 44]
[55 80]
[56 79]
[57 78]
[58 77]
[60 75]
[61 74]
[62 73]
[63 72]
[64 71]
[65 70]
[91 120]
[92 119]
[93 118]
[95 116]
[96 115]
[98 114]
[99 113]
[100 112]
[101 111]
[124 151]
[125 150]
[126 149]
[127 147]
[128 146]
[129 145]
[130 144]
[131 143]
[132 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
