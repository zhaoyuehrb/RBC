%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 09:43:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUUUAGAAGCUGAAGAUCCCCAACUGCUCCAGCCUCUGCCGCUGCCAUGCUUUGAGUCCACGCCCACCAGCCUUGCUCUCUUCAAUAAACCACAAGCAUCUCACUUUUGUGCCC\
) } def
/len { sequence length } bind def

/coor [
[78.66408539 165.93766785]
[66.43944550 160.63568115]
[55.45544434 153.09217834]
[46.11812210 143.58601379]
[38.77265930 132.46859741]
[24.83800888 138.02067566]
[10.90335751 143.57275391]
[-3.03129363 149.12481689]
[-12.98746204 161.42056274]
[-27.67467117 158.94363403]
[-41.60932159 164.49571228]
[-55.54397202 170.04777527]
[-69.47862244 175.59985352]
[-79.43479156 187.89559937]
[-94.12200165 185.41867065]
[-108.05665588 190.97074890]
[-109.58460999 206.19979858]
[-118.02451324 218.96798706]
[-131.43693542 226.34126282]
[-146.73980713 226.62533569]
[-160.41664124 219.75488281]
[-169.32458496 207.30873108]
[-171.41668701 192.14688110]
[-166.21215820 177.75341797]
[-154.90699768 167.43586731]
[-140.09902954 163.56512451]
[-125.19102478 167.03065491]
[-113.60872650 177.03610229]
[-99.67407227 171.48402405]
[-90.71460724 159.58540344]
[-75.03069305 161.66520691]
[-61.09604645 156.11312866]
[-47.16139603 150.56106567]
[-33.22674561 145.00898743]
[-24.26727486 133.11036682]
[-8.58336544 135.19017029]
[5.35128498 129.63809204]
[19.28593636 124.08602142]
[33.22058487 118.53395081]
[31.03799629 93.12690735]
[38.19222260 68.65042114]
[53.71465683 48.41837311]
[44.96373749 36.23553848]
[29.32905960 33.92634201]
[19.97372627 21.18847275]
[22.44809341 5.57908344]
[35.28416061 -3.64105296]
[50.86651993 -1.00179243]
[59.95042801 11.93103886]
[57.14656830 27.48462105]
[65.89749146 39.66745377]
[80.11019135 33.61180115]
[95.31125641 30.85512924]
[110.74532318 31.53442192]
[125.64543152 35.61592102]
[132.67155457 22.36324310]
[139.69767761 9.11056137]
[146.72381592 -4.14211893]
[139.73568726 -16.11021423]
[139.60966492 -29.85985374]
[146.27111816 -41.76432419]
[157.86932373 -48.73710632]
[171.29023743 -49.03192139]
[178.67266846 -62.08947754]
[174.20361328 -77.24873352]
[181.83598328 -91.08789825]
[197.04164124 -95.39643860]
[210.79933167 -87.61817169]
[214.94686890 -72.36781311]
[207.02359009 -58.69311905]
[191.73022461 -54.70705414]
[184.34780884 -41.64949799]
[191.63308716 -27.00728989]
[188.77410889 -10.73671913]
[176.69425964 0.77296138]
[159.97648621 2.88400745]
[152.95036316 16.13668823]
[145.92424011 29.38936806]
[138.89810181 42.64204788]
[145.96125793 48.12939072]
[152.25888062 54.48069382]
[157.68606567 61.59016800]
[162.15243530 69.33940125]
[165.58358765 77.59931183]
[167.92237854 86.23233795]
[169.12983704 95.09467316]
[169.18588257 104.03871155]
[168.08955383 112.91548920]
[165.85913086 121.57713318]
[162.53173828 129.87939453]
[158.16282654 137.68399048]
[152.82514954 144.86090088]
[163.14064026 155.75083923]
[173.45613098 166.64077759]
[183.77162170 177.53070068]
[194.08711243 188.42063904]
[204.40260315 199.31056213]
[219.54121399 196.33969116]
[233.87435913 202.04621887]
[242.82839966 214.60922241]
[243.54611206 230.01988220]
[235.79849243 243.36071777]
[222.05776978 250.37472534]
[206.70855713 248.82374573]
[194.64875793 239.20269775]
[189.72657776 224.58161926]
[193.51268005 209.62605286]
[183.19718933 198.73612976]
[172.88169861 187.84619141]
[162.56620789 176.95626831]
[152.25071716 166.06632996]
[141.93521118 155.17639160]
[130.60057068 162.18200684]
[118.13471222 166.88893127]
[104.99846649 169.12316895]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 39]
[6 38]
[7 37]
[8 36]
[10 34]
[11 33]
[12 32]
[13 31]
[15 29]
[16 28]
[42 51]
[43 50]
[55 79]
[56 78]
[57 77]
[58 76]
[63 72]
[64 71]
[92 112]
[93 111]
[94 110]
[95 109]
[96 108]
[97 107]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
