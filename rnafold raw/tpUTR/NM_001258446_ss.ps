%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 06:41:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGACGAGCCGUGUUGAAACUUCUUUUGUAUGUGUGUGUGUUUUUUUCACUAUUAAAGCAGUACUGGGGAAUUUUGUACAAUAAAAUGUGUGCAAGUGCUUGUACAUCACUAGAA\
) } def
/len { sequence length } bind def

/coor [
[98.73371887 217.41319275]
[106.79711151 204.55448914]
[118.96343231 195.48008728]
[114.91648102 181.03631592]
[110.86952972 166.59255981]
[106.82257843 152.14880371]
[102.77562714 137.70504761]
[98.72867584 123.26128387]
[87.03614044 122.81711578]
[75.77832031 116.28918457]
[65.09952545 126.82310486]
[65.24223328 142.62675476]
[54.10882187 153.84382629]
[38.30455017 153.81942749]
[27.20581245 142.56805420]
[27.39729118 126.76492310]
[38.76538849 115.78576660]
[54.56560898 116.14431000]
[65.24440002 105.61039734]
[66.06353760 90.63278198]
[56.59721756 78.99710846]
[47.13090134 67.36144257]
[37.66458130 55.72576904]
[28.19826126 44.09010315]
[18.73194313 32.45443344]
[4.02090883 26.63239861]
[1.99079204 11.87679386]
[-7.47552729 0.24112454]
[-16.94184685 -11.39454460]
[-26.56620979 -22.89983177]
[-36.34682465 -34.27258682]
[-46.12743759 -45.64534760]
[-64.95539856 -46.25306702]
[-77.25744629 -60.09967804]
[-75.69824219 -78.23927307]
[-86.08531189 -89.06094360]
[-96.61923218 -99.73973846]
[-107.29801941 -110.27365112]
[-117.97681427 -120.80757141]
[-133.52717590 -119.15827179]
[-146.47065735 -127.93325806]
[-150.69573975 -142.98924255]
[-144.20745850 -157.21725464]
[-130.06939697 -163.89926147]
[-114.95710754 -159.88021851]
[-106.00615692 -147.05780029]
[-107.44290161 -131.48635864]
[-96.76410675 -120.95244598]
[-86.08531189 -110.41852570]
[-79.01789856 -107.92782593]
[-75.26364136 -99.44802094]
[-64.87656403 -88.62634277]
[-53.53118134 -90.88008881]
[-42.41139984 -87.28073883]
[-34.37422562 -78.62940216]
[-31.54463005 -67.04055786]
[-34.75468063 -55.42596054]
[-24.97406578 -44.05320358]
[-15.19345284 -32.68044281]
[-8.35365009 -29.61954308]
[-5.30617714 -20.86086464]
[4.16014242 -9.22519493]
[13.62646103 2.41047478]
[27.66040039 7.40024614]
[30.36761093 22.98811340]
[39.83393097 34.62378311]
[49.30025101 46.25945282]
[58.76657104 57.89512253]
[68.23288727 69.53079224]
[77.69921112 81.16645813]
[102.92358398 73.92060089]
[120.68457031 89.28308105]
[135.51557922 87.03780365]
[150.34657288 84.79251862]
[165.17758179 82.54724121]
[180.00859070 80.30195618]
[194.83959961 78.05667877]
[209.67059326 75.81139374]
[224.50160217 73.56611633]
[231.52062988 59.72729874]
[245.34870911 52.68712616]
[260.66864014 55.15268707]
[271.58963013 66.17592621]
[273.91229248 81.51818085]
[266.74356079 95.28004456]
[252.83993530 102.16979218]
[237.54763794 99.53818512]
[226.74688721 88.39711761]
[211.91587830 90.64240265]
[197.08486938 92.88768005]
[182.25387573 95.13296509]
[167.42286682 97.37824249]
[152.59185791 99.62352753]
[137.76084900 101.86880493]
[122.92984772 104.11408997]
[119.56650543 112.64340210]
[113.17243195 119.21433258]
[117.21938324 133.65809631]
[121.26633453 148.10185242]
[125.31328583 162.54560852]
[129.36024475 176.98936462]
[133.40719604 191.43313599]
[148.51725769 192.86505127]
[162.08795166 199.66217041]
[172.28393555 210.90522766]
[177.72631836 225.07366943]
[177.67903137 240.25135803]
[172.14848328 254.38563538]
[161.88262939 265.56494141]
[148.26985168 272.27734375]
[133.15115356 273.61511230]
[118.57123566 269.39727783]
[106.50188446 260.19427490]
[98.57540131 247.25071716]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 102]
[4 101]
[5 100]
[6 99]
[7 98]
[8 97]
[10 19]
[11 18]
[20 70]
[21 69]
[22 68]
[23 67]
[24 66]
[25 65]
[27 63]
[28 62]
[29 61]
[30 59]
[31 58]
[32 57]
[35 52]
[36 51]
[37 49]
[38 48]
[39 47]
[72 95]
[73 94]
[74 93]
[75 92]
[76 91]
[77 90]
[78 89]
[79 88]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
