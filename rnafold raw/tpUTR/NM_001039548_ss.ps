%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 19:50:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAGAUUUGGACAGCCUGAGCCAGGAGGCGGAGAGGCAGGCGGAGCUCAGAUGCACACUCUGCUCCCUCAUGGCACCUCCACGCAAACAGCCCUUAACUUAAUGGUCCCUUUUCUUGUAUAAAUAAAAUCUUGUUGGGUCUGUGUUCCAGCUGCAGUCUGCCCUGCCUGGAGAUGGAAUGUCUAA\
) } def
/len { sequence length } bind def

/coor [
[82.67006683 831.62213135]
[76.23786926 845.74322510]
[62.71736526 853.35742188]
[47.30746460 851.53680420]
[35.93358994 840.98150635]
[32.96922684 825.75024414]
[39.55423355 811.69970703]
[53.15654373 804.23266602]
[54.91647720 789.33624268]
[56.67641068 774.43988037]
[58.43634415 759.54345703]
[60.19627380 744.64703369]
[61.95620728 729.75067139]
[63.71614075 714.85424805]
[55.92183304 699.14111328]
[67.03204346 684.46832275]
[68.54148102 669.54449463]
[56.37749100 660.94781494]
[50.10800552 647.32611084]
[51.50775146 632.29589844]
[60.30051422 619.90301514]
[74.20655823 613.53363037]
[75.71599579 598.60974121]
[77.22543335 583.68591309]
[78.73487091 568.76202393]
[80.24430847 553.83819580]
[71.02796936 536.85351562]
[83.00963593 520.65930176]
[84.01687622 505.69317627]
[85.02411652 490.72702026]
[86.03135681 475.76089478]
[87.03858948 460.79473877]
[88.04582977 445.82861328]
[78.28557587 437.39773560]
[75.12238312 424.69354248]
[79.93064117 412.30728149]
[91.16134644 404.84921265]
[92.41986084 389.90209961]
[93.67837524 374.95498657]
[94.93689728 360.00787354]
[85.15934753 348.83044434]
[86.22273254 333.65402222]
[98.01295471 323.47421265]
[99.27146912 308.52709961]
[100.52998352 293.57998657]
[101.78849792 278.63287354]
[103.04701996 263.68576050]
[96.40483093 250.35420227]
[105.27269745 237.25186157]
[106.53121185 222.30474854]
[107.78972626 207.35763550]
[109.04824066 192.41052246]
[110.30676270 177.46342468]
[103.66457367 164.13185120]
[112.53244019 151.02951050]
[113.79095459 136.08239746]
[114.92387390 121.12523651]
[115.93111420 106.15909576]
[113.20681763 121.01622009]
[97.40454102 132.45893860]
[73.40525055 130.28375244]
[53.00392914 109.98372650]
[42.00407028 99.78553009]
[31.00421333 89.58734131]
[20.00435448 79.38914490]
[4.51251888 81.51917267]
[-8.69647503 73.14920044]
[-13.38574219 58.23126602]
[-7.34115601 43.80916214]
[6.58321619 36.69257355]
[21.81271172 40.24172592]
[31.15642738 52.78082657]
[30.20254707 68.38928986]
[41.20240402 78.58747864]
[52.20226288 88.78567505]
[63.20212173 98.98386383]
[69.76956177 95.36188507]
[62.52559662 82.22700500]
[51.57740402 71.97336578]
[57.94618225 58.39255142]
[72.83034515 60.25310135]
[75.66046906 74.98303986]
[82.90443420 88.11791992]
[89.47187042 84.49593353]
[86.71562958 69.75133514]
[74.34601593 59.53507233]
[74.76513672 43.49749374]
[87.65148163 33.94126129]
[103.11975098 38.19709778]
[109.30401611 53.00028992]
[101.46022797 66.99509430]
[104.21646881 81.73969269]
[119.21594238 81.86569214]
[122.21949005 67.16947937]
[110.67232513 57.04235840]
[105.75094604 42.49328232]
[108.77917480 27.43587875]
[118.94244385 15.92051411]
[133.50686646 11.04476261]
[148.55470276 14.12017727]
[160.03816223 24.31948662]
[164.86824036 38.89912796]
[161.74566650 53.93725204]
[151.51042175 65.38867950]
[136.91571045 70.17302704]
[133.91215515 84.86923981]
[139.89631653 71.11460876]
[148.74316406 59.00126266]
[160.02456665 49.11540604]
[173.19454956 41.93547440]
[187.61576843 37.80892563]
[202.59031677 36.93547058]
[217.39350891 39.35737610]
[231.30894470 44.95743561]
[243.66319275 53.46463776]
[253.85838318 64.46727753]
[261.40112305 77.43289185]
[265.92636108 91.73400879]
[267.21514893 106.67854309]
[265.20507812 121.54325104]
[259.99343872 135.60877991]
[251.83244324 148.19439697]
[241.11703491 158.69107056]
[228.36578369 166.59078979]
[214.19578552 171.51127625]
[199.29278564 173.21438599]
[184.37800598 171.61769104]
[170.17324829 166.79849243]
[157.36593628 158.98997498]
[146.57586670 148.57006836]
[138.32524109 136.04299927]
[133.01333618 122.01504517]
[130.89726257 107.16633606]
[129.89001465 122.13247681]
[132.43995667 130.92602539]
[128.73806763 137.34091187]
[127.47955322 152.28802490]
[134.03172302 166.68870544]
[125.25386810 178.72193909]
[123.99535370 193.66905212]
[122.73683929 208.61614990]
[121.47832489 223.56326294]
[120.21981049 238.51037598]
[126.77198029 252.91105652]
[117.99412537 264.94427490]
[116.73561096 279.89138794]
[115.47709656 294.83850098]
[114.21858215 309.78561401]
[112.96006775 324.73272705]
[122.88212585 336.74066162]
[121.39288330 351.88122559]
[109.88400269 361.26641846]
[108.62548828 376.21350098]
[107.36697388 391.16061401]
[106.10845947 406.10772705]
[117.63737488 419.25134277]
[116.13350677 436.33117676]
[103.01197815 446.83584595]
[102.00473785 461.80197144]
[100.99749756 476.76812744]
[99.99025726 491.73428345]
[98.98301697 506.70040894]
[97.97577667 521.66656494]
[105.61144257 529.44976807]
[107.64948273 539.93695068]
[103.65224457 549.60699463]
[95.16816711 555.34759521]
[93.65872955 570.27148438]
[92.14929199 585.19537354]
[90.63985443 600.11920166]
[89.13041687 615.04309082]
[101.47944641 624.06799316]
[107.61261749 637.97052002]
[105.97441864 652.97662354]
[97.10434723 665.06701660]
[83.46533966 671.05389404]
[81.95590210 685.97778320]
[89.49839020 696.45758057]
[87.92093658 708.86840820]
[78.61254120 716.61419678]
[76.85260773 731.51062012]
[75.09267426 746.40698242]
[73.33274078 761.30340576]
[71.57280731 776.19976807]
[69.81287384 791.09619141]
[68.05294037 805.99255371]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 186]
[9 185]
[10 184]
[11 183]
[12 182]
[13 181]
[14 180]
[16 177]
[17 176]
[22 171]
[23 170]
[24 169]
[25 168]
[26 167]
[28 163]
[29 162]
[30 161]
[31 160]
[32 159]
[33 158]
[37 155]
[38 154]
[39 153]
[40 152]
[43 149]
[44 148]
[45 147]
[46 146]
[47 145]
[49 143]
[50 142]
[51 141]
[52 140]
[53 139]
[55 137]
[56 136]
[57 134]
[58 133]
[62 76]
[63 75]
[64 74]
[65 73]
[84 92]
[85 91]
[93 106]
[94 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
