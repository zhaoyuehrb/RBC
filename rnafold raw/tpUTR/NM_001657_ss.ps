%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 12:15:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGAAGAUAAAAUUACAGGAUAUCACAUUGGAGUCACUGCCAAGUCAUAGCCAUAAAUGAUGAGUCGGUCCUCUUUCCAGUGGAUCAUAAGACAAUGGACCCUUUUUGUUAUGAUGGUUUUAAACUUUCAAUUGUCACUUUUUAUGCUAUUUCUGUAUAUAAAGGUGCACGAAGGUAAAAAGUAUUUUUUCAAGUUGUAAAUAAUUUAUUUAAUAUUUAAUGGAAGUGUAUUUAUUUUACAGCUCAUUAAACUUU\
UUUAACCAAACAGA\
) } def
/len { sequence length } bind def

/coor [
[99.32312775 181.69647217]
[99.14860535 166.69747925]
[98.97407532 151.69850159]
[91.84114838 149.38087463]
[87.20589447 163.64671326]
[82.57064056 177.91256714]
[77.93538666 192.17842102]
[73.30013275 206.44425964]
[68.66464996 220.71003723]
[54.39894867 216.07434082]
[59.03428268 201.80900574]
[63.66953659 187.54316711]
[68.30479431 173.27731323]
[72.94004822 159.01145935]
[77.57530212 144.74562073]
[70.44237518 142.42799377]
[61.48499680 154.45983887]
[52.52761841 166.49168396]
[43.64038849 178.57543945]
[34.82361221 190.71069336]
[26.00683212 202.84594727]
[24.15490150 218.55839539]
[10.41439247 224.30709839]
[1.59761322 236.44235229]
[-7.21916533 248.57762146]
[-11.63758278 264.94567871]
[-28.58912849 265.23107910]
[-33.55601883 249.02101135]
[-19.35441971 239.76083374]
[-10.53764153 227.62557983]
[-1.72086287 215.49032593]
[-0.49956760 200.64587402]
[13.87157726 194.02917480]
[22.68835640 181.89392090]
[31.50513458 169.75866699]
[32.88933563 162.52601624]
[40.49577332 157.53430176]
[49.45315170 145.50245667]
[58.41053009 133.47061157]
[53.04410553 118.54347229]
[52.54769897 103.54527283]
[56.46168900 89.94505310]
[42.62025452 84.16451263]
[28.77881813 78.38397980]
[14.93738079 72.60343933]
[0.59264630 81.59772491]
[-16.11951637 80.26953125]
[-28.61294556 69.34149170]
[-32.08298492 53.28006744]
[-45.99074173 47.66096878]
[-59.89849854 42.04187012]
[-73.80625916 36.42277145]
[-87.71401978 30.80367279]
[-101.62177277 25.18457413]
[-113.75428009 29.49337196]
[-125.20919800 24.55373573]
[-130.07962036 13.50535011]
[-143.92105103 7.72481155]
[-157.76248169 1.94427240]
[-171.60392761 -3.83626652]
[-185.44535828 -9.61680603]
[-199.28680420 -15.39734459]
[-213.12823486 -21.17788315]
[-226.96966553 -26.95842171]
[-243.04595947 -20.01829338]
[-258.84930420 -26.73649216]
[-264.76861572 -42.49523163]
[-278.67636108 -48.11433029]
[-292.58413696 -53.73342896]
[-306.49188232 -59.35252762]
[-320.39965820 -64.97162628]
[-334.43438721 -70.26558685]
[-348.58853149 -75.23153687]
[-362.74264526 -80.19748688]
[-376.89675903 -85.16343689]
[-391.16262817 -89.79869843]
[-405.53247070 -94.10074615]
[-419.90231323 -98.40279388]
[-436.81015015 -97.15317535]
[-442.69146729 -113.05431366]
[-429.03985596 -123.10768127]
[-415.60025024 -112.77263641]
[-401.23040771 -108.47058868]
[-386.86056519 -104.16854095]
[-384.35397339 -105.34659576]
[-381.23773193 -105.62062073]
[-377.84747314 -104.75650024]
[-374.59634399 -102.64355469]
[-371.93081665 -99.31756592]
[-357.77670288 -94.35161591]
[-343.62255859 -89.38566589]
[-329.46844482 -84.41971588]
[-326.90972900 -85.47987366]
[-323.78411865 -85.60861969]
[-320.43774414 -84.58770752]
[-317.28845215 -82.32579041]
[-314.78054810 -78.87938690]
[-300.87280273 -73.26028442]
[-286.96502686 -67.64118958]
[-273.05728149 -62.02209091]
[-259.14950562 -56.40299225]
[-248.12988281 -63.04116821]
[-235.10360718 -62.11757278]
[-224.82939148 -53.74550629]
[-221.18913269 -40.79985809]
[-207.34770203 -35.01932144]
[-193.50625610 -29.23878098]
[-179.66482544 -23.45824242]
[-165.82337952 -17.67770386]
[-151.98194885 -11.89716434]
[-138.14051819 -6.11662531]
[-124.29907990 -0.33608630]
[-107.02178192 -3.49694419]
[-96.00267792 11.27681637]
[-82.09491730 16.89591408]
[-68.18715668 22.51501465]
[-54.27939987 28.13411331]
[-40.37164307 33.75321198]
[-26.46388626 39.37231064]
[-15.86522865 31.28614616]
[-2.54937768 29.46947289]
[10.02880287 34.50132751]
[18.55260468 45.16980362]
[20.71792030 58.76200104]
[34.55935669 64.54254150]
[48.40079498 70.32308197]
[62.24222946 76.10361481]
[69.22109222 67.60639954]
[78.06374359 61.07074356]
[88.23472595 56.89240646]
[99.11813354 55.32440567]
[110.05494690 56.46168900]
[115.83548737 42.62025452]
[121.61602020 28.77881813]
[127.39656067 14.93738079]
[133.09648132 1.06254876]
[138.71557617 -12.84520912]
[144.33467102 -26.75296783]
[149.95378113 -40.66072464]
[155.57287598 -54.56848145]
[161.19197083 -68.47624207]
[166.81106567 -82.38399506]
[172.34916687 -96.32421112]
[177.80606079 -110.29640961]
[183.26295471 -124.26860046]
[188.71986389 -138.24079895]
[194.17675781 -152.21299744]
[186.51695251 -165.84609985]
[189.46316528 -181.20362854]
[201.62431335 -191.03424072]
[217.25823975 -190.69621277]
[228.98309326 -180.34915161]
[231.26277161 -164.87861633]
[223.02085876 -151.58934021]
[208.14895630 -146.75610352]
[202.69204712 -132.78390503]
[197.23515320 -118.81170654]
[191.77825928 -104.83950806]
[186.32136536 -90.86730957]
[186.81353760 -83.51986694]
[180.71882629 -76.76490021]
[175.09973145 -62.85713959]
[169.48063660 -48.94938278]
[163.86152649 -35.04162598]
[158.24243164 -21.13386726]
[152.62333679 -7.22610998]
[147.00424194 6.68164778]
[147.41088867 14.03432083]
[141.23800659 20.71792030]
[135.45745850 34.55935669]
[129.67692566 48.40079498]
[123.89638519 62.24222946]
[141.02984619 82.30145264]
[143.86270142 108.52935791]
[157.89744568 113.82331085]
[171.93218994 119.11727142]
[186.02757263 124.24757385]
[200.18170166 129.21353149]
[214.33583069 134.17947388]
[228.48995972 139.14543152]
[242.64408875 144.11137390]
[256.79821777 149.07733154]
[270.95233154 154.04328918]
[278.65283203 143.95886230]
[288.85491943 136.44499207]
[300.73623657 132.09494019]
[313.34255981 131.24742126]
[325.66436768 133.96028137]
[336.71777344 140.00666809]
[345.62301636 148.89395142]
[351.67449951 159.90382385]
[354.39675903 172.15042114]
[353.58166504 184.65155029]
[367.55386353 190.10844421]
[381.52606201 195.56533813]
[395.49826050 201.02223206]
[409.47045898 206.47914124]
[423.44265747 211.93603516]
[437.41485596 217.39292908]
[451.38705444 222.84983826]
[465.35922241 228.30673218]
[485.15960693 224.40342712]
[496.51455688 240.07952881]
[510.60992432 245.20982361]
[524.70532227 250.34013367]
[540.31958008 247.78938293]
[549.63299561 259.41305542]
[563.72833252 264.54333496]
[577.82373047 269.67364502]
[591.91912842 274.80395508]
[606.01452637 279.93426514]
[616.90484619 269.24017334]
[631.35943604 264.33837891]
[646.50836182 266.20217896]
[659.34368896 274.46148682]
[667.31707764 287.47637939]
[668.84533691 302.66281128]
[663.62506104 317.00543213]
[652.69268799 327.65655518]
[638.21893311 332.50137329]
[623.07745361 330.57794189]
[610.27471924 322.26818848]
[602.35266113 309.22195435]
[600.88421631 294.02963257]
[586.78881836 288.89935303]
[572.69342041 283.76904297]
[558.59808350 278.63873291]
[544.50268555 273.50842285]
[529.89660645 276.42614746]
[519.57501221 264.43551636]
[505.47964478 259.30520630]
[491.38424683 254.17491150]
[482.58987427 259.29217529]
[472.21105957 258.73117065]
[463.66653442 252.43606567]
[459.90234375 242.27893066]
[445.93014526 236.82202148]
[431.95794678 231.36512756]
[417.98574829 225.90823364]
[404.01354980 220.45133972]
[390.04135132 214.99443054]
[376.06915283 209.53753662]
[362.09695435 204.08064270]
[348.12475586 198.62374878]
[336.44818115 211.53289795]
[320.66732788 218.96177673]
[303.20715332 219.73867798]
[286.76235962 213.71636963]
[273.88134766 201.79908752]
[266.57156372 185.80680847]
[265.98638916 168.19740295]
[251.83226013 163.23146057]
[237.67813110 158.26550293]
[223.52400208 153.29956055]
[209.36987305 148.33360291]
[195.21574402 143.36766052]
[181.06163025 138.40170288]
[176.47425842 139.60940552]
[171.07846069 137.97306824]
[166.63822937 133.15200806]
[152.60348511 127.85805511]
[138.56874084 122.56409454]
[135.12084961 131.02156067]
[129.79751587 138.94236755]
[122.68782043 145.90985107]
[113.97306061 151.52397156]
[114.14758301 166.52294922]
[114.32211304 181.52194214]
[116.73687744 200.75260925]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 268]
[2 267]
[3 266]
[16 39]
[17 38]
[18 37]
[19 35]
[20 34]
[21 33]
[23 31]
[24 30]
[25 29]
[42 127]
[43 126]
[44 125]
[45 124]
[49 119]
[50 118]
[51 117]
[52 116]
[53 115]
[54 114]
[57 112]
[58 111]
[59 110]
[60 109]
[61 108]
[62 107]
[63 106]
[64 105]
[67 101]
[68 100]
[69 99]
[70 98]
[71 97]
[72 92]
[73 91]
[74 90]
[75 89]
[76 84]
[77 83]
[78 82]
[132 172]
[133 171]
[134 170]
[135 169]
[136 167]
[137 166]
[138 165]
[139 164]
[140 163]
[141 162]
[142 161]
[143 159]
[144 158]
[145 157]
[146 156]
[147 155]
[174 262]
[175 261]
[176 260]
[177 257]
[178 256]
[179 255]
[180 254]
[181 253]
[182 252]
[183 251]
[193 244]
[194 243]
[195 242]
[196 241]
[197 240]
[198 239]
[199 238]
[200 237]
[201 236]
[203 232]
[204 231]
[205 230]
[207 228]
[208 227]
[209 226]
[210 225]
[211 224]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
