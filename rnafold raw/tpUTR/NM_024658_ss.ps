%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 15:14:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGCAGGCUGCAGCCAGUCCAGAGAGAAUAGAGCCUGCCCAGGCCUUAAGACCACCUCUCAGCCCAGUUCAGUUCUGCCUUACCAAAGAUUCUGAGACUCAUACCCAUUUGGAGCCAGCCCCACUUGCUGCCUUACAGGGCUGUCCCUGAGGCUGGAUCUGUUACAAAUGAGUCAUGACAUCAUACUGUAAUAAAAGCAGCUUGUUUUCUGCUUGAACAAUA\
) } def
/len { sequence length } bind def

/coor [
[92.00572205 280.28302002]
[99.96774292 267.45693970]
[111.09573364 257.25543213]
[124.56391907 250.43556213]
[121.63756561 235.72378540]
[118.71120453 221.01200867]
[115.78485107 206.30023193]
[112.85849762 191.58845520]
[109.93214417 176.87667847]
[107.00579071 162.16488647]
[104.07943726 147.45310974]
[101.15307617 132.74133301]
[94.53867340 129.20585632]
[90.05358124 143.51962280]
[92.75715637 158.27397156]
[84.70818329 170.93153381]
[70.19993591 174.74084473]
[56.97104645 167.67004395]
[52.07772064 153.49064636]
[58.13004303 139.76586914]
[71.90016174 133.81642151]
[81.30985260 122.13491058]
[74.69544220 118.59943390]
[60.83724976 124.33968353]
[46.97905350 130.07994080]
[33.12086105 135.82019043]
[19.26266861 141.56044006]
[15.70629883 162.64851379]
[0.20717542 177.18658447]
[-20.79559898 179.35972595]
[-38.71159744 168.44398499]
[-52.03828430 175.32872009]
[-58.21899414 182.04141235]
[-65.60049438 182.21507263]
[-79.02242279 188.91221619]
[-92.44435120 195.60937500]
[-105.86627960 202.30651855]
[-114.45709229 216.27540588]
[-130.84016418 215.54959106]
[-138.16200256 200.87570190]
[-128.89053345 187.34899902]
[-112.56343079 188.88459778]
[-99.14150238 182.18743896]
[-85.71957397 175.49029541]
[-72.29764557 168.79313660]
[-58.92301178 162.00202942]
[-45.59632874 155.11730957]
[-46.64779282 146.13108826]
[-45.19837189 137.17669678]
[-41.34589386 128.93864441]
[-35.37237549 122.05020142]
[-27.72340775 117.04474640]
[-18.97494698 114.31449890]
[-9.78993511 114.07975769]
[-0.86807424 116.37121582]
[7.10747814 121.02662659]
[13.52241802 127.70224762]
[27.38061142 121.96199799]
[41.23880386 116.22174072]
[55.09699631 110.48149109]
[68.95519257 104.74124146]
[70.31506348 97.36555481]
[55.40132904 95.75912476]
[41.00230408 99.96247101]
[29.87026405 89.90872955]
[32.58993149 75.15734863]
[46.57535172 69.73442841]
[58.52877808 78.79642487]
[73.03480530 82.61418152]
[74.39467621 75.23849487]
[63.49476624 64.93354034]
[52.59486389 54.62858582]
[41.69495773 44.32363129]
[23.68400002 40.47041321]
[19.33764458 23.46403885]
[8.29429054 13.31296349]
[-2.74906397 3.16188908]
[-17.38007164 7.83406353]
[-32.38355637 4.54910421]
[-43.72366333 -5.80935192]
[-48.34995270 -20.45493126]
[-45.01797867 -35.44804764]
[-34.62403107 -46.75562668]
[-19.96401978 -51.33598709]
[-4.98142195 -47.95703888]
[6.29352236 -37.52769470]
[10.82790852 -22.85339928]
[7.40201044 -7.88146591]
[18.44536591 2.26960874]
[29.48871994 12.42068386]
[41.57775116 12.22376823]
[50.86051178 20.58218002]
[51.99991226 33.42372894]
[62.89981842 43.72867966]
[73.79972076 54.03363419]
[84.69962311 64.33859253]
[99.66275787 63.28757858]
[109.01510620 51.56010437]
[118.36745453 39.83263397]
[127.71980286 28.10516167]
[137.07214355 16.37768936]
[146.42449951 4.65021706]
[155.77684021 -7.07725477]
[148.52790833 -19.33144760]
[145.90118408 -33.29437256]
[148.19198608 -47.28607178]
[155.10519409 -59.63018799]
[165.79312134 -68.85482025]
[178.95941162 -73.86800385]
[193.01626587 -74.08697510]
[206.27586365 -69.50582886]
[215.79176331 -81.10098267]
[225.30766296 -92.69613647]
[234.82356262 -104.29129791]
[237.59729004 -119.86746216]
[251.65240479 -124.79728699]
[261.16830444 -136.39244080]
[270.68420410 -147.98759460]
[280.20010376 -159.58276367]
[289.71600342 -171.17791748]
[299.23190308 -182.77307129]
[302.00561523 -198.34924316]
[316.06072998 -203.27906799]
[325.57662964 -214.87422180]
[321.81439209 -229.81248474]
[327.50320435 -243.93661499]
[340.26699829 -251.90840149]
[355.09988403 -250.84841919]
[364.61578369 -262.44357300]
[367.38949585 -278.01974487]
[381.44461060 -282.94955444]
[390.96051025 -294.54470825]
[400.47640991 -306.13989258]
[409.99230957 -317.73504639]
[412.12835693 -333.99447632]
[427.37899780 -340.02352905]
[440.05572510 -329.62002563]
[437.11776733 -313.48617554]
[421.58746338 -308.21914673]
[412.07156372 -296.62399292]
[402.55566406 -285.02880859]
[393.03976440 -273.43365479]
[390.94668579 -258.68685913]
[376.21093750 -252.92767334]
[366.69503784 -241.33251953]
[370.62841797 -226.99143982]
[365.29989624 -212.91766357]
[352.55700684 -204.58270264]
[337.17178345 -205.35832214]
[327.65588379 -193.76316833]
[325.56280518 -179.01635742]
[310.82705688 -173.25717163]
[301.31115723 -161.66201782]
[291.79525757 -150.06686401]
[282.27935791 -138.47169495]
[272.76345825 -126.87654114]
[263.24755859 -115.28138733]
[261.15447998 -100.53458405]
[246.41873169 -94.77539825]
[236.90283203 -83.18023682]
[227.38693237 -71.58508301]
[217.87103271 -59.98992538]
[225.55636597 -46.12634659]
[227.33557129 -30.33643150]
[222.90660095 -15.03617096]
[212.91966248 -2.57807636]
[198.88180542 5.11053181]
[182.92970276 6.82565975]
[167.50431824 2.27509212]
[158.15196228 14.00256443]
[148.79962158 25.73003578]
[139.44728088 37.45750809]
[130.09492493 49.18498230]
[120.74257660 60.91245270]
[111.39023590 72.63992310]
[121.24501038 73.66334534]
[131.22839355 78.28101349]
[140.05014038 86.57730103]
[146.40522766 98.18589020]
[159.82716370 104.88304138]
[173.24908447 111.58019257]
[188.15689087 106.33301544]
[202.37231445 113.23935699]
[207.46157837 128.20179749]
[200.40533447 142.34339905]
[185.38992310 147.27420044]
[171.32371521 140.06883240]
[166.55194092 125.00212097]
[153.13000488 118.30496979]
[139.70808411 111.60781860]
[133.74728394 116.15961456]
[142.85086060 128.08122253]
[155.19284058 136.60621643]
[150.89895630 150.97850037]
[135.90321350 151.33602905]
[130.92924500 137.18479919]
[121.82566071 125.26319122]
[115.86486053 129.81498718]
[118.79121399 144.52676392]
[121.71756744 159.23854065]
[124.64392090 173.95031738]
[127.57027435 188.66209412]
[130.49662781 203.37387085]
[133.42298889 218.08566284]
[136.34933472 232.79743958]
[139.27569580 247.50921631]
[154.32852173 248.65589905]
[168.51339722 253.82235718]
[180.77767944 262.62518311]
[190.21128845 274.41116333]
[196.11421204 288.30569458]
[198.04837036 303.27774048]
[195.87028503 318.21621704]
[189.74154663 332.01263428]
[180.11695862 343.64318848]
[167.71072388 352.24484253]
[153.44349670 357.17926025]
[138.37396240 358.08029175]
[123.62039948 354.88107300]
[110.27761841 347.81900024]
[99.33573914 337.41812134]
[91.60672760 324.45028687]
[87.66412354 309.87777710]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 206]
[5 205]
[6 204]
[7 203]
[8 202]
[9 201]
[10 200]
[11 199]
[12 198]
[23 61]
[24 60]
[25 59]
[26 58]
[27 57]
[31 47]
[32 46]
[34 45]
[35 44]
[36 43]
[37 42]
[70 96]
[71 95]
[72 94]
[73 93]
[75 90]
[76 89]
[77 88]
[97 175]
[98 174]
[99 173]
[100 172]
[101 171]
[102 170]
[103 169]
[111 162]
[112 161]
[113 160]
[114 159]
[116 157]
[117 156]
[118 155]
[119 154]
[120 153]
[121 152]
[123 150]
[124 149]
[128 145]
[129 144]
[131 142]
[132 141]
[133 140]
[134 139]
[179 190]
[180 189]
[181 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
