%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 07:52:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCCUUUGGGGGACAGUGGCAAGGAGCUCCAUGCUGAGGAUCGCCACAUGGCUGCAAAGGACAGGGUUGGACCCAAUCCCAGAGCAGAGGUCUGAAGACAGGAGCAGGGGGGUGGCCAGUGUCCCUAGAGCACUCUUCCCAGUCACCAGUGGCUGCAGAAGGGCCACCCUAGCCUUUUAACUGCUUUGUCAAAAUUAAACAUUUUGUACACAGGA\
) } def
/len { sequence length } bind def

/coor [
[119.26395416 279.19253540]
[111.84241486 280.27456665]
[108.61054230 294.92227173]
[105.37866974 309.56994629]
[102.14680481 324.21765137]
[107.60702515 339.68109131]
[96.74127197 351.96389771]
[80.72728729 348.43057251]
[76.03889465 332.71588135]
[87.49910736 320.98577881]
[90.73097229 306.33807373]
[93.96284485 291.69039917]
[97.19471741 277.04269409]
[114.91050720 259.47036743]
[134.53558350 258.62222290]
[130.67077637 244.12864685]
[126.80597687 229.63508606]
[122.94117737 215.14152527]
[108.99920654 209.96856689]
[100.67825317 197.42959595]
[101.34400940 182.21742249]
[110.95054626 170.17497253]
[107.08574677 155.68141174]
[103.22094727 141.18786621]
[99.35614014 126.69429779]
[80.25162506 117.97225189]
[73.36331177 98.13270569]
[59.29702759 92.92312622]
[45.23074341 87.71354675]
[31.16446304 82.50396729]
[17.09818077 77.29438782]
[7.96846581 77.24903870]
[2.86688805 71.90623474]
[-11.12250137 66.49356079]
[-25.15070534 61.18230057]
[-39.21698761 55.97272110]
[-53.44083405 62.32251740]
[-67.63182831 56.83888626]
[-73.59773254 43.23949051]
[-87.66401672 38.02991104]
[-101.73030090 32.82033157]
[-115.79658508 27.61075401]
[-129.86286926 22.40117455]
[-144.79649353 20.99171257]
[-159.58908081 23.47753906]
[-174.38166809 25.96336746]
[-186.67718506 36.81475067]
[-202.13421631 31.33644104]
[-204.85191345 15.16405201]
[-192.03454590 4.93435192]
[-176.86750793 11.17077923]
[-162.07492065 8.68495178]
[-147.28231812 6.19912386]
[-145.01091003 -8.62790108]
[-158.38093567 -15.42808247]
[-171.75096130 -22.22826385]
[-186.71252441 -14.33396053]
[-203.26675415 -16.88928413]
[-214.91789246 -28.69105339]
[-217.21383667 -44.94754791]
[-230.68090820 -51.55345917]
[-244.14797974 -58.15937424]
[-258.94125366 -53.28115463]
[-272.50466919 -60.17233276]
[-277.06414795 -74.30551910]
[-290.53118896 -80.91143036]
[-303.99826050 -87.51734161]
[-317.46533203 -94.12325287]
[-334.34854126 -95.67028046]
[-337.53573608 -112.32196045]
[-322.41708374 -119.99421692]
[-310.85943604 -107.59032440]
[-297.39236450 -100.98441315]
[-283.92529297 -94.37849426]
[-270.45822144 -87.77258301]
[-256.49118042 -92.81807709]
[-242.73953247 -86.31058502]
[-237.54206848 -71.62644196]
[-224.07499695 -65.02053070]
[-210.60792542 -58.41461563]
[-199.43824768 -65.72310638]
[-186.00819397 -66.56592560]
[-173.81790161 -60.61629486]
[-166.09736633 -49.33167648]
[-164.95077515 -35.59828568]
[-151.58074951 -28.79810524]
[-138.21072388 -21.99792480]
[-127.17439270 -12.96108246]
[-122.83432007 -1.61109757]
[-124.65328217 8.33489227]
[-110.58700562 13.54447079]
[-96.52072144 18.75404930]
[-82.45443726 23.96362877]
[-68.38816071 29.17320824]
[-55.00320816 22.74058151]
[-40.66378403 27.82345581]
[-34.00740814 41.90644073]
[-19.94112587 47.11601639]
[-12.58029175 46.49164200]
[-5.70983267 52.50417328]
[8.27955723 57.91684341]
[22.30776024 63.22810364]
[36.37404251 68.43768311]
[50.44032288 73.64726257]
[64.50660706 78.85684204]
[78.57289124 84.06642151]
[86.31543732 77.07113647]
[96.14772797 73.57727814]
[106.56829834 74.11839294]
[115.98583221 78.61183929]
[127.97914886 69.60293579]
[139.97245789 60.59402466]
[151.96577454 51.58511734]
[163.95909119 42.57621002]
[175.95240784 33.56730270]
[187.94570923 24.55839348]
[199.93902588 15.54948616]
[211.93234253 6.54057789]
[221.94776917 -4.62594843]
[229.60394287 -17.52490234]
[237.26011658 -30.42385674]
[244.91627502 -43.32281113]
[252.57244873 -56.22176361]
[247.23133850 -70.91893005]
[252.63551331 -85.59301758]
[266.23327637 -93.31538391]
[281.60418701 -90.43975830]
[291.49057007 -78.32392120]
[291.22436523 -62.68860626]
[280.93130493 -50.91632462]
[265.47140503 -48.56559372]
[257.81524658 -35.66663742]
[250.15905762 -22.76768494]
[242.50288391 -9.86872959]
[234.84672546 3.03022432]
[244.69943237 14.34057236]
[258.52627563 8.52516937]
[272.35308838 2.70976639]
[286.17990112 -3.10563636]
[296.96960449 -18.03012085]
[314.28277588 -15.15108013]
[328.02395630 -21.16604233]
[341.76513672 -27.18100548]
[355.50631714 -33.19596863]
[369.24749756 -39.21092987]
[382.98870850 -45.22589493]
[392.26986694 -58.74594116]
[408.59585571 -57.19864273]
[415.17187500 -42.17572784]
[405.23309326 -29.13147926]
[389.00366211 -31.48470688]
[375.26248169 -25.46974373]
[361.52127075 -19.45478058]
[347.78009033 -13.43981838]
[334.03890991 -7.42485571]
[320.29772949 -1.40989292]
[315.60321045 9.73551083]
[304.20816040 14.86040401]
[291.99530029 10.72118855]
[278.16848755 16.53659058]
[264.34167480 22.35199356]
[250.51483154 28.16739655]
[220.94125366 18.53389168]
[208.94793701 27.54279900]
[196.95462036 36.55170822]
[184.96130371 45.56061554]
[172.96798706 54.56952286]
[160.97468567 63.57843018]
[148.98136902 72.58734131]
[136.98805237 81.59624481]
[124.99474335 90.60515594]
[126.56289673 102.72264099]
[122.56913757 114.27005005]
[113.84970093 122.82949829]
[117.71450806 137.32305908]
[121.57930756 151.81661987]
[125.44410706 166.31018066]
[139.77122498 171.97056580]
[147.92286682 184.83151245]
[146.94995117 199.84875488]
[137.43473816 211.27673340]
[141.29954529 225.77029419]
[145.16433716 240.26385498]
[149.02914429 254.75741577]
[154.64376831 268.66696167]
[161.92329407 281.78216553]
[175.38563538 290.09338379]
[174.79711914 304.97634888]
[182.07664490 318.09155273]
[189.35617065 331.20675659]
[196.73045349 344.26892090]
[204.19908142 357.27734375]
[211.66772461 370.28579712]
[219.13635254 383.29421997]
[226.60498047 396.30267334]
[234.07362366 409.31112671]
[249.12213135 414.87185669]
[254.02015686 430.14892578]
[245.01034546 443.42306519]
[229.00425720 444.51150513]
[218.28039551 432.57925415]
[221.06518555 416.77975464]
[213.59654236 403.77130127]
[206.12791443 390.76287842]
[198.65927124 377.75442505]
[191.19064331 364.74600220]
[183.72201538 351.73754883]
[177.66828918 347.50384521]
[176.24098206 338.48626709]
[168.96144104 325.37109375]
[161.68191528 312.25588989]
[148.74026489 304.88275146]
[148.80809021 289.06170654]
[141.52856445 275.94650269]
[134.10702515 277.02850342]
[136.27082825 291.87164307]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 13]
[3 12]
[4 11]
[5 10]
[15 184]
[16 183]
[17 182]
[18 181]
[22 177]
[23 176]
[24 175]
[25 174]
[27 106]
[28 105]
[29 104]
[30 103]
[31 102]
[33 101]
[34 100]
[35 98]
[36 97]
[39 94]
[40 93]
[41 92]
[42 91]
[43 90]
[44 53]
[45 52]
[46 51]
[54 87]
[55 86]
[56 85]
[60 80]
[61 79]
[62 78]
[65 75]
[66 74]
[67 73]
[68 72]
[110 171]
[111 170]
[112 169]
[113 168]
[114 167]
[115 166]
[116 165]
[117 164]
[118 163]
[119 135]
[120 134]
[121 133]
[122 132]
[123 131]
[136 162]
[137 161]
[138 160]
[139 159]
[141 156]
[142 155]
[143 154]
[144 153]
[145 152]
[146 151]
[185 214]
[186 213]
[188 211]
[189 210]
[190 209]
[191 207]
[192 206]
[193 205]
[194 204]
[195 203]
[196 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
