%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Sep  9 22:28:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGGAGGCACUGGGACACACGCCUCUCAAAGGGCUGGUGGAACAUUGCAGAGCAAAGCCAUGCAUGGCAACAAGAAAUCAGGGUAUCAAAGAGAUUUCAUAUCUACCCAA\
) } def
/len { sequence length } bind def

/coor [
[-15.48257351 243.51281738]
[-31.68169403 245.96875000]
[-47.72815323 242.78715515]
[-61.72120667 234.36245728]
[-73.18177032 244.04003906]
[-84.64232635 253.71762085]
[-96.10289001 263.39520264]
[-107.56345367 273.07278442]
[-119.02400970 282.75036621]
[-120.91665649 295.60375977]
[-130.78242493 303.42391968]
[-142.92575073 302.39920044]
[-154.65321350 311.75155640]
[-157.87106323 327.46859741]
[-172.23027039 334.62350464]
[-186.71568298 327.72766113]
[-190.21531677 312.07095337]
[-180.04457092 299.66387939]
[-164.00556946 300.02407837]
[-152.27809143 290.67175293]
[-146.83981323 274.05148315]
[-128.70158386 271.28979492]
[-117.24102783 261.61221313]
[-105.78047180 251.93464661]
[-94.31990814 242.25706482]
[-82.85935211 232.57948303]
[-71.39878845 222.90190125]
[-76.73181152 210.37498474]
[-78.28662109 196.83210754]
[-75.92540741 183.38914490]
[-69.83344269 171.15643311]
[-60.50451660 161.14712524]
[-48.70098495 154.19332886]
[-35.39144135 150.87681580]
[-21.67124176 151.48048401]
[-8.67236996 155.96414185]
[2.52997112 163.96711731]
[14.51512814 154.94735718]
[26.50028610 145.92759705]
[38.48544312 136.90783691]
[50.47060013 127.88808441]
[62.45575714 118.86833191]
[58.08868790 103.00433350]
[60.14837265 86.67964172]
[68.31897736 72.39752197]
[81.34761047 62.34801102]
[77.19507599 47.93424988]
[73.04254150 33.52049255]
[68.89000702 19.10673141]
[58.69514084 5.56047583]
[68.88978577 -7.98594809]
[84.72896576 -1.93973982]
[83.30377197 14.95419884]
[87.45629883 29.36795807]
[91.60883331 43.78171921]
[95.76136780 58.19547653]
[102.94415283 58.08441925]
[110.04088593 59.19847107]
[116.16754913 45.50672150]
[122.29421234 31.81497383]
[128.42086792 18.12322426]
[126.19989014 1.87517023]
[139.32464600 -7.95707178]
[154.29350281 -1.25893426]
[155.70780945 15.07911301]
[142.11262512 24.24988747]
[135.98596191 37.94163895]
[129.85929871 51.63338470]
[123.73263550 65.32513428]
[128.95100403 69.54637146]
[133.43066406 74.54465485]
[137.05732727 80.19245148]
[139.73843384 86.34564972]
[141.40557861 92.84725189]
[142.01623535 99.53135681]
[156.80430603 102.04395294]
[171.59237671 104.55654907]
[186.38043213 107.06913757]
[201.16850281 109.58173370]
[215.95657349 112.09432983]
[224.35844421 99.39281464]
[237.20359802 91.21223450]
[252.26652527 88.96991730]
[266.93750000 93.05435944]
[278.67465210 102.75790405]
[285.44448853 116.39936066]
[286.07406616 131.61524963]
[280.45431519 145.76934814]
[269.55889893 156.40936279]
[255.27551270 161.69183350]
[240.07882690 160.70155334]
[226.60177612 153.61010742]
[217.17932129 141.64610291]
[213.44396973 126.88239288]
[198.65591431 124.36979675]
[183.86784363 121.85720825]
[169.07977295 119.34461212]
[154.29171753 116.83201599]
[139.50364685 114.31942749]
[128.04408264 131.29080200]
[109.92367554 140.83020020]
[89.44626617 140.67189026]
[71.47551727 130.85348511]
[59.49035645 139.87324524]
[47.50519943 148.89300537]
[35.52004242 157.91276550]
[23.53488541 166.93251038]
[11.54972744 175.95227051]
[16.59698868 191.67315674]
[16.01121712 208.14859009]
[9.87914848 223.42417908]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 27]
[5 26]
[6 25]
[7 24]
[8 23]
[9 22]
[12 20]
[13 19]
[37 108]
[38 107]
[39 106]
[40 105]
[41 104]
[42 103]
[46 56]
[47 55]
[48 54]
[49 53]
[58 69]
[59 68]
[60 67]
[61 66]
[75 99]
[76 98]
[77 97]
[78 96]
[79 95]
[80 94]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
