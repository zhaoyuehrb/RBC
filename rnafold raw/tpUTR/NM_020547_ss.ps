%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 11:55:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAUGCAGUUUAUGUGUCAUCAAUGUACAUGCCAACAUAAAUAUGGCGAUUGUAUAGCUGUCUUGUCUGCCUCAUCACUGCAUUUCCCACCUGCCGAAUCCUUGGAUUCUUCUGCGGGCAUCCAGUCCACAUCAGUUCUGACCAGUGACUUGGGGUAGGUGUGCACAGGAAAGAGAAUAAAGUCAGCUUUCCUGAUGCA\
) } def
/len { sequence length } bind def

/coor [
[-6.35592937 245.21110535]
[-18.42247200 239.89076233]
[-26.16107178 229.99655151]
[-40.79982376 233.26869202]
[-55.43857574 236.54084778]
[-70.07732391 239.81300354]
[-84.71607971 243.08514404]
[-99.35482788 246.35729980]
[-113.99358368 249.62944031]
[-121.55544281 260.08563232]
[-133.82202148 262.50595093]
[-144.10676575 256.12738037]
[-158.79510498 259.16918945]
[-173.48344421 262.21099854]
[-185.42785645 272.58602905]
[-199.45971680 267.59042358]
[-211.40414429 277.96545410]
[-225.43600464 272.96984863]
[-240.12434387 276.01165771]
[-253.57945251 288.57705688]
[-270.01324463 282.43182373]
[-284.65200806 285.70397949]
[-299.29074097 288.97613525]
[-313.75912476 292.93423462]
[-328.02496338 297.56948853]
[-342.29080200 302.20474243]
[-356.55664062 306.83999634]
[-370.82250977 311.47525024]
[-385.08834839 316.11050415]
[-399.27963257 320.96926880]
[-413.39285278 326.05032349]
[-427.50604248 331.13140869]
[-441.61926270 336.21246338]
[-455.73248291 341.29354858]
[-459.08349609 356.35256958]
[-470.06015015 367.19308472]
[-485.15982056 370.35592651]
[-499.56423950 364.83181763]
[-508.67706299 352.38351440]
[-509.59036255 336.98321533]
[-502.01275635 323.54507446]
[-488.36218262 316.35720825]
[-472.99453735 317.71316528]
[-460.81353760 327.18032837]
[-446.70031738 322.09927368]
[-432.58712769 317.01818848]
[-418.47390747 311.93713379]
[-404.36068726 306.85604858]
[-401.54980469 302.98492432]
[-396.27346802 300.84359741]
[-389.72360229 301.84466553]
[-375.45776367 297.20941162]
[-361.19189453 292.57415771]
[-346.92605591 287.93890381]
[-332.66021729 283.30364990]
[-318.39437866 278.66839600]
[-331.20199585 270.86041260]
[-334.87850952 256.31796265]
[-327.32040405 243.36129761]
[-312.85198975 239.40344238]
[-299.75115967 246.70884705]
[-295.51345825 261.09780884]
[-302.56289673 274.33737183]
[-287.92413330 271.06524658]
[-273.28540039 267.79309082]
[-266.53674316 257.74731445]
[-254.36093140 254.90531921]
[-243.16615295 261.32330322]
[-228.47781372 258.28149414]
[-217.58399963 248.12402344]
[-202.50152588 252.90206909]
[-191.60772705 242.74459839]
[-176.52525330 247.52264404]
[-161.83691406 244.48083496]
[-147.14857483 241.43902588]
[-134.69960022 229.07550049]
[-117.26573181 234.99069214]
[-102.62697601 231.71853638]
[-87.98822784 228.44639587]
[-73.34947205 225.17424011]
[-58.71072388 221.90209961]
[-44.07197189 218.62994385]
[-29.43321991 215.35780334]
[-26.10711098 202.76673889]
[-16.67427444 193.04316711]
[-3.18568945 189.03503418]
[11.04979420 192.25865173]
[22.27623749 202.38754272]
[32.71493149 191.61564636]
[43.15362167 180.84375000]
[53.59231567 170.07185364]
[64.03100586 159.29995728]
[74.46969604 148.52806091]
[84.90839386 137.75616455]
[95.34708405 126.98427582]
[45.19404221 53.95784378]
[46.37092590 39.00408173]
[47.54781342 24.05032158]
[48.72470093 9.09656239]
[49.90158463 -5.85719776]
[42.35704041 -20.41782570]
[51.42136383 -34.08420944]
[67.76995850 -32.79754639]
[74.58479309 -17.88144684]
[64.85534668 -4.68031168]
[63.67845917 10.27344799]
[62.50157166 25.22720909]
[61.32468796 40.18096924]
[60.14780045 55.13472748]
[67.09922791 57.95034409]
[78.92742157 48.72571945]
[81.00207520 63.58157730]
[87.95349884 66.39719391]
[97.51485443 54.83949661]
[100.34972382 39.27434158]
[114.42408752 34.39974976]
[123.98545074 22.84205055]
[133.54681396 11.28435230]
[143.10816956 -0.27334604]
[143.03594971 -16.31623650]
[155.62359619 -26.26262665]
[171.21495056 -22.48249626]
[177.84963989 -7.87563801]
[170.43812561 6.35281563]
[154.66586304 9.28801346]
[145.10450745 20.84571266]
[135.54315186 32.40341187]
[125.98178864 43.96110916]
[123.83081055 58.69958115]
[109.07255554 64.40085602]
[99.51119995 75.95855713]
[108.61143494 87.88272095]
[122.28247833 81.71000671]
[135.95353699 75.53729248]
[145.07849121 61.91131973]
[161.42120361 63.27061462]
[168.16969299 78.21685028]
[158.38168335 91.37461853]
[142.12625122 89.20833588]
[128.45520020 95.38105774]
[114.78414917 101.55377197]
[118.51449585 116.08251953]
[133.46826172 114.90563202]
[148.42201233 113.72874451]
[163.37577820 112.55185699]
[176.57690430 102.82241058]
[191.49301147 109.63724518]
[192.77967834 125.98583984]
[179.11329651 135.05017090]
[164.55265808 127.50561523]
[149.59890747 128.68251038]
[134.64514160 129.85939026]
[119.69138336 131.03627014]
[106.11897278 137.42297363]
[95.68028259 148.19485474]
[85.24159241 158.96675110]
[74.80290222 169.73864746]
[64.36421204 180.51054382]
[53.92551804 191.28244019]
[43.48682404 202.05433655]
[33.04813385 212.82623291]
[31.87124634 227.77998352]
[40.49632645 240.05223083]
[49.12140274 252.32447815]
[57.74648285 264.59671021]
[66.46768188 276.80084229]
[75.28446198 288.93609619]
[84.10123444 301.07135010]
[92.91801453 313.20660400]
[101.73479462 325.34185791]
[110.55157471 337.47711182]
[119.36835480 349.61239624]
[128.18513489 361.74765015]
[145.17425537 368.83981323]
[146.33622742 386.34646606]
[155.34252930 398.34173584]
[171.02249146 400.32019043]
[180.64480591 412.85760498]
[178.50070190 428.51577759]
[165.86225891 438.00497437]
[150.22763062 435.69546509]
[140.87255859 422.95739746]
[143.34725952 407.34805298]
[134.34095764 395.35278320]
[122.40802002 393.33602905]
[114.80731201 383.40847778]
[116.04987335 370.56442261]
[107.23310089 358.42916870]
[98.41632080 346.29391479]
[89.59954071 334.15866089]
[80.78276062 322.02340698]
[71.96598053 309.88815308]
[63.14920425 297.75289917]
[54.33242416 285.61764526]
[47.85169220 282.05090332]
[45.47423553 273.22180176]
[36.84915924 260.94955444]
[28.22407913 248.67730713]
[19.59900093 236.40505981]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 83]
[4 82]
[5 81]
[6 80]
[7 79]
[8 78]
[9 77]
[12 75]
[13 74]
[14 73]
[16 71]
[18 69]
[19 68]
[21 65]
[22 64]
[23 63]
[24 56]
[25 55]
[26 54]
[27 53]
[28 52]
[29 51]
[30 48]
[31 47]
[32 46]
[33 45]
[34 44]
[88 161]
[89 160]
[90 159]
[91 158]
[92 157]
[93 156]
[94 155]
[95 154]
[96 109]
[97 108]
[98 107]
[99 106]
[100 105]
[113 131]
[114 130]
[116 128]
[117 127]
[118 126]
[119 125]
[132 141]
[133 140]
[134 139]
[142 153]
[143 152]
[144 151]
[145 150]
[162 199]
[163 198]
[164 197]
[165 196]
[166 194]
[167 193]
[168 192]
[169 191]
[170 190]
[171 189]
[172 188]
[173 187]
[175 184]
[176 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
