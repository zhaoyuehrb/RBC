%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 02:26:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGUUUGUUCUGGAAUACGUGUAUGUGGGAAGUUGAAUCAUCAGACACUAGCUACAUAGACUAUGUUUACAGGGAUCCAGAGAGUCUGAAGACAUUUCUUAUGCCUUUAUAUAUUGGAGAACCCUUCCCCAUUUUCAUAUCCUUUCUUCAAAAAUCUAAAUGAUGUGCCUAAAAAUAAGACAUGGCAUAAUAAGGUAUAAUUAAAGAGAUAAUAGAAUGA\
) } def
/len { sequence length } bind def

/coor [
[126.17790985 349.24856567]
[125.32928467 334.27258301]
[124.48065948 319.29660034]
[123.63203430 304.32061768]
[122.78340912 289.34463501]
[121.93478394 274.36868286]
[110.68729401 264.67178345]
[109.61332703 249.49610901]
[119.86057281 237.76445007]
[119.01194763 222.78848267]
[118.16332245 207.81250000]
[117.31469727 192.83653259]
[106.06720734 183.13964844]
[104.99324036 167.96395874]
[115.24049377 156.23231506]
[114.39186096 141.25633240]
[113.54323578 126.28036499]
[100.89891052 128.02259827]
[89.39167023 124.29409790]
[81.14180756 116.38420868]
[67.38731384 122.36869049]
[57.81994247 134.96932983]
[43.06255341 132.95222473]
[29.30806160 138.93670654]
[15.55357170 144.92118835]
[1.79908192 150.90567017]
[-11.95540810 156.89015198]
[-25.70989799 162.87461853]
[-39.46438980 168.85910034]
[-45.32653427 183.29077148]
[-59.36079407 189.16394043]
[-73.08305359 183.48634338]
[-86.83754730 189.47082520]
[-100.59203339 195.45530701]
[-114.21640778 201.73039246]
[-127.70451355 208.29322815]
[-141.19262695 214.85607910]
[-149.92243958 228.73852539]
[-166.29745483 227.84919739]
[-173.47245789 213.10296631]
[-164.06642151 199.66949463]
[-147.75546265 201.36796570]
[-134.26736450 194.80511475]
[-120.77925110 188.24227905]
[-119.28891754 185.05514526]
[-116.18509674 182.42886353]
[-111.74693298 181.11201477]
[-106.57651520 181.70082092]
[-92.82202911 175.71633911]
[-79.06753540 169.73185730]
[-73.86787415 155.82145691]
[-60.00411606 149.55641174]
[-45.44886780 155.10461426]
[-31.69437790 149.12013245]
[-17.93988800 143.13565063]
[-4.18539810 137.15116882]
[9.56909180 131.16668701]
[23.32358170 125.18221283]
[37.07807159 119.19773102]
[45.66163254 107.02515411]
[61.40283585 108.61420441]
[75.15732574 102.62972260]
[75.26824951 96.47657776]
[76.88008118 90.53726196]
[65.34406281 80.94976044]
[53.80804443 71.36225891]
[42.27202225 61.77475357]
[30.73600388 52.18724823]
[19.19998360 42.59974289]
[3.64128542 39.72964096]
[-1.20142543 25.64427757]
[-12.73744583 16.05677223]
[-24.27346611 6.46926880]
[-35.80948639 -3.11823559]
[-48.69598007 -2.71187735]
[-58.10598755 -10.92811298]
[-59.35690689 -22.95473099]
[-70.75610352 -32.70452118]
[-86.96872711 -35.17084885]
[-92.68631744 -50.54098892]
[-82.02709961 -63.00345993]
[-65.95636749 -59.73793793]
[-61.00631332 -44.10371399]
[-49.60712051 -34.35392380]
[-32.20343781 -32.07380295]
[-26.22198105 -14.65425587]
[-14.68596077 -5.06675148]
[-3.14994121 4.52075291]
[8.38607883 14.10825729]
[23.11964417 16.29259872]
[28.78748703 31.06372261]
[40.32350922 40.65122604]
[51.85952759 50.23873138]
[63.39554977 59.82623672]
[74.93156433 69.41374207]
[86.46759033 79.00124359]
[96.11634827 74.39471436]
[107.18859100 74.16673279]
[117.72327423 78.67115784]
[125.72675323 87.39646149]
[129.54809570 99.00663757]
[143.03620911 92.44379425]
[156.52430725 85.88095093]
[170.01242065 79.31809998]
[183.50053406 72.75525665]
[196.98863220 66.19241333]
[210.47674561 59.62956619]
[223.96485901 53.06672287]
[222.50175476 39.17169189]
[225.60249329 25.58014488]
[232.91442871 13.74737740]
[243.63516235 4.93369436]
[256.60046387 0.07018005]
[270.41076660 -0.33963165]
[283.58224487 3.72818136]
[292.50173950 -8.33177567]
[301.42123413 -20.39173317]
[310.34072876 -32.45169067]
[319.26022339 -44.51164627]
[328.17974854 -56.57160187]
[337.09924316 -68.63156128]
[346.01873779 -80.69152069]
[336.61477661 -92.49102020]
[330.58609009 -106.32276917]
[328.34371948 -121.24369812]
[330.04052734 -136.23648071]
[335.56085205 -150.27885437]
[344.52825928 -162.41342163]
[356.33139038 -171.81280518]
[370.16549683 -177.83615112]
[385.08728027 -180.07276917]
[400.07940674 -178.37017822]
[414.11965942 -172.84443665]
[426.25073242 -163.87232971]
[435.64556885 -152.06556702]
[441.66357422 -138.22915649]
[443.89443970 -123.30650330]
[442.18603516 -108.31504822]
[436.65490723 -94.27693176]
[427.67810059 -82.14929199]
[415.86770630 -72.75902557]
[402.02899170 -66.74636841]
[387.10546875 -64.52127075]
[372.11465454 -66.23544312]
[358.07867432 -71.77201843]
[349.15917969 -59.71206284]
[340.23968506 -47.65210724]
[331.32019043 -35.59214783]
[322.40069580 -23.53219223]
[313.48120117 -11.47223473]
[304.56170654 0.58772200]
[295.64221191 12.64767933]
[300.10812378 15.15398121]
[304.37878418 18.31069374]
[308.36346436 22.10342407]
[323.11035156 19.35945702]
[337.85723877 16.61548805]
[348.08380127 4.25437784]
[364.12103271 4.68684912]
[373.66653442 17.58114815]
[369.39782715 33.04587173]
[354.58947754 39.21780777]
[340.60119629 31.36237335]
[325.85433960 34.10634232]
[311.10745239 36.85031128]
[310.15286255 51.81990433]
[324.43179321 56.41476440]
[338.71069336 61.00962448]
[352.98959351 65.60448456]
[367.26852417 70.19934845]
[377.08126831 58.58995056]
[390.59210205 51.62388992]
[405.74069214 50.36344147]
[420.21697998 55.00081635]
[431.81347656 64.82884216]
[438.76174927 78.34882355]
[440.00225830 93.49905396]
[435.34585571 107.96923828]
[425.50259399 119.55278015]
[411.97348022 126.48326874]
[396.82162476 127.70385742]
[382.35757446 123.02841949]
[370.78698730 113.16991425]
[363.87429810 99.63169861]
[362.67364502 84.47825623]
[348.39474487 79.88339996]
[334.11584473 75.28853607]
[319.83691406 70.69367218]
[305.55801392 66.09881592]
[288.51867676 81.27536011]
[266.89065552 86.45352173]
[245.94557190 80.93279266]
[230.52769470 66.55483246]
[217.03959656 73.11767578]
[203.55148315 79.68051910]
[190.06336975 86.24337006]
[176.57527161 92.80621338]
[163.08715820 99.36905670]
[149.59904480 105.93190002]
[136.11094666 112.49475098]
[128.51921082 125.43173981]
[129.36784363 140.40771484]
[130.21646118 155.38368225]
[141.72341919 165.88261414]
[142.37071228 181.08247375]
[132.29067993 191.98789978]
[133.13929749 206.96388245]
[133.98793030 221.93984985]
[134.83654785 236.91583252]
[146.34350586 247.41476440]
[146.99079895 262.61462402]
[136.91075134 273.52005005]
[137.75938416 288.49603271]
[138.60800171 303.47198486]
[139.45663452 318.44796753]
[140.30526733 333.42395020]
[141.15388489 348.39993286]
[152.11592102 360.11373901]
[149.64993286 375.96612549]
[135.64762878 383.79650879]
[120.85036469 377.59808350]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 217]
[2 216]
[3 215]
[4 214]
[5 213]
[6 212]
[9 209]
[10 208]
[11 207]
[12 206]
[15 203]
[16 202]
[17 201]
[20 62]
[21 61]
[23 59]
[24 58]
[25 57]
[26 56]
[27 55]
[28 54]
[29 53]
[32 50]
[33 49]
[34 48]
[35 44]
[36 43]
[37 42]
[64 96]
[65 95]
[66 94]
[67 93]
[68 92]
[69 91]
[71 89]
[72 88]
[73 87]
[74 86]
[77 84]
[78 83]
[101 200]
[102 199]
[103 198]
[104 197]
[105 196]
[106 195]
[107 194]
[108 193]
[115 152]
[116 151]
[117 150]
[118 149]
[119 148]
[120 147]
[121 146]
[122 145]
[155 165]
[156 164]
[157 163]
[166 189]
[167 188]
[168 187]
[169 186]
[170 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
