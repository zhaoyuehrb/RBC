%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 00:12:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAAAAGUUCCUGAUACUUUCUGUUCUCCAGUGUUUUCCAUUUCUCUCCUUCUUCUUGGUCACAUAUAUGCCUAAAUGCACAGUCAUGUGCCUACGUCCUGCCUCGCAAUGAGGGAGCAUGUACCCCAGGUACAUCCAUGAACUGCGGCAGCAGUUUGACUUAUUGCUGUUUCAGCUUUAAGGUUGUUGUGUUUUUGUUUUUGAUUAUGUUGCUUGUUAAUAAAAAAAAAUAGAAAAGAGAA\
) } def
/len { sequence length } bind def

/coor [
[37.88766861 414.48394775]
[21.48776817 418.25305176]
[14.07189751 431.29165649]
[6.65602589 444.33026123]
[-0.75984597 457.36883545]
[-8.17571735 470.40744019]
[-2.86277795 481.01416016]
[-3.31486154 492.74865723]
[-9.30475235 502.70993042]
[-19.25044632 508.49093628]
[-30.63131142 508.75994873]
[-38.38180161 521.60247803]
[-46.13229370 534.44494629]
[-40.89532852 552.66906738]
[-50.49665451 568.64788818]
[-68.42015076 572.44622803]
[-75.83602905 585.48486328]
[-72.98725128 601.27294922]
[-83.66268158 613.24853516]
[-99.67304993 612.22497559]
[-108.73656464 598.98742676]
[-103.90047455 583.69061279]
[-88.87461853 578.06896973]
[-81.45874786 565.03039551]
[-86.78658295 554.97003174]
[-86.60422516 543.46771240]
[-80.84147644 533.37335205]
[-70.82504272 527.24353027]
[-58.97479630 526.69445801]
[-51.22430420 513.85198975]
[-43.47381592 501.00946045]
[-48.92039490 483.51620483]
[-39.67294693 467.32998657]
[-21.21430779 462.99154663]
[-13.79843712 449.95297241]
[-6.38256502 436.91436768]
[1.03330672 423.87579346]
[8.44917870 410.83718872]
[3.33135104 399.02548218]
[5.98422194 386.23031616]
[15.65992165 377.16091919]
[28.98486519 375.28610229]
[36.56867981 362.34448242]
[44.15249634 349.40283203]
[51.73630905 336.46121216]
[59.32012558 323.51959229]
[66.90393829 310.57794189]
[58.26062393 298.31854248]
[43.52341461 301.11401367]
[37.02408981 315.20437622]
[23.46750069 322.75411987]
[8.06643867 320.86019897]
[-3.25707555 310.25088501]
[-6.14891958 295.00567627]
[0.50287998 280.98663330]
[14.14056969 273.58441162]
[29.52017975 275.64529419]
[40.72793579 286.37683105]
[55.46514511 283.58132935]
[66.43490601 267.73687744]
[83.97297668 262.74658203]
[99.73610687 269.62255859]
[101.86210632 254.77398682]
[103.98809814 239.92541504]
[106.11409760 225.07684326]
[108.24009705 210.22825623]
[97.44177246 200.00405884]
[94.70206451 185.20683289]
[101.27771759 171.47314453]
[114.83604431 164.16027832]
[116.96203613 149.31170654]
[119.08803558 134.46313477]
[121.21403503 119.61455536]
[114.97645569 136.71685791]
[97.48160553 150.35229492]
[71.35788727 154.05754089]
[42.57029724 143.32351685]
[19.10055923 117.16120148]
[6.84115124 108.51788330]
[-5.41825771 99.87457275]
[-17.67766571 91.23125458]
[-29.93707466 82.58793640]
[-46.30912399 81.64554596]
[-53.43628693 66.87612915]
[-43.98675537 53.47320557]
[-27.68139267 55.22455215]
[-21.29376030 70.32852936]
[-9.03435135 78.97184753]
[3.22505760 87.61515808]
[15.48446655 96.25847626]
[27.74387550 104.90179443]
[33.70139694 100.34570312]
[24.58921814 88.43066406]
[15.47703934 76.51561737]
[13.54287434 61.64084244]
[27.39208031 67.40344238]
[36.50425720 79.31848145]
[45.61643600 91.23352051]
[51.57395935 86.67743683]
[46.44365692 72.58204651]
[34.45303345 62.26043701]
[37.37073517 47.65440369]
[32.24043274 33.55901337]
[27.11013031 19.46362305]
[21.97982979 5.36823416]
[8.10607147 -2.68772030]
[5.89694929 -18.57794762]
[17.04711151 -30.11282539]
[33.00310898 -28.44378281]
[41.52486420 -14.85116673]
[36.07521820 0.23793200]
[41.20552063 14.33332157]
[46.33582306 28.42871094]
[51.46612549 42.52410126]
[63.08979034 51.83750916]
[60.53904343 67.45174408]
[65.66934967 81.54713440]
[73.12926483 80.77281189]
[95.50903320 78.44985199]
[97.63503265 63.60128021]
[99.76102448 48.75270844]
[101.88702393 33.90413284]
[104.01302338 19.05555916]
[106.13901520 4.20698643]
[108.26501465 -10.64158726]
[104.52464294 -27.17778778]
[119.37916565 -35.34965897]
[131.34382629 -23.33785820]
[123.11358643 -8.51558971]
[120.98759460 6.33298349]
[118.86159515 21.18155670]
[116.73559570 36.03013229]
[114.60960388 50.87870407]
[112.48360443 65.72727966]
[110.35760498 80.57585144]
[116.70250702 84.57488251]
[129.97378540 77.58395386]
[129.39230347 92.57295227]
[135.73719788 96.57198334]
[148.21597290 88.24851227]
[160.69474792 79.92504120]
[173.17352295 71.60156250]
[185.59823608 63.19760132]
[197.96835327 54.71349716]
[210.33848572 46.22939682]
[217.34286499 32.04316330]
[232.21499634 31.22529030]
[244.58512878 22.74118805]
[256.95526123 14.25708389]
[269.32537842 5.77298069]
[281.69549561 -2.71112227]
[294.06561279 -11.19522572]
[306.43576050 -19.67932892]
[318.80587769 -28.16343117]
[331.17599487 -36.64753342]
[332.50970459 -52.22813797]
[343.58297729 -63.26974106]
[359.16732788 -64.55883026]
[371.90432739 -55.48674011]
[375.77993774 -40.33703232]
[368.96423340 -26.26293945]
[354.67535400 -19.90981483]
[339.66009521 -24.27741051]
[327.28997803 -15.79330635]
[314.91986084 -7.30920362]
[302.54974365 1.17489970]
[290.17959595 9.65900326]
[277.80947876 18.14310646]
[265.43936157 26.62720871]
[253.06922913 35.11131287]
[240.69909668 43.59541702]
[234.57951355 57.17480469]
[218.82258606 58.59952164]
[206.45245361 67.08362579]
[194.08233643 75.56772614]
[190.35195923 81.92917633]
[181.49699402 84.08033752]
[169.01821899 92.40380859]
[156.53944397 100.72728729]
[144.06066895 109.05075836]
[136.06260681 121.74055481]
[133.93661499 136.58912659]
[131.81060791 151.43769836]
[129.68461609 166.28627014]
[140.64619446 177.10986328]
[143.10391235 192.13693237]
[136.32211304 205.57089233]
[123.08866882 212.35426331]
[120.96266937 227.20283508]
[118.83666992 242.05140686]
[116.71067810 256.89999390]
[114.58467865 271.74856567]
[119.07214355 286.06158447]
[129.29502869 297.03848267]
[139.51789856 308.01541138]
[149.74078369 318.99234009]
[159.96366882 329.96923828]
[170.18655396 340.94616699]
[180.40943909 351.92306519]
[190.63230896 362.89999390]
[200.85519409 373.87689209]
[211.07807922 384.85382080]
[226.63815308 385.57608032]
[236.84924316 396.85385132]
[236.06480408 411.68356323]
[246.28768921 422.66046143]
[256.51055908 433.63739014]
[266.73345947 444.61431885]
[281.48162842 440.52166748]
[296.44000244 443.76296997]
[308.17120361 453.59338379]
[313.97955322 467.75396729]
[312.53027344 482.99069214]
[304.15643311 495.80230713]
[290.78225708 503.24478149]
[275.48104858 503.60787964]
[261.76892090 496.80816650]
[252.79681396 484.40817261]
[250.62643433 469.25732422]
[255.75653076 454.83718872]
[245.53364563 443.86026001]
[235.31077576 432.88336182]
[225.08789062 421.90643311]
[210.23992920 421.63531494]
[199.71609497 410.64877319]
[200.10116577 395.07669067]
[189.87828064 384.09979248]
[179.65539551 373.12286377]
[169.43251038 362.14596558]
[159.20964050 351.16903687]
[148.98675537 340.19213867]
[138.76387024 329.21520996]
[128.54098511 318.23828125]
[118.31810760 307.26138306]
[108.09522247 296.28445435]
[98.79477692 312.03918457]
[79.84556580 318.16177368]
[72.26175690 331.10339355]
[64.67794037 344.04501343]
[57.09412384 356.98666382]
[49.51030731 369.92828369]
[41.92649460 382.86990356]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 38]
[3 37]
[4 36]
[5 35]
[6 34]
[11 31]
[12 30]
[13 29]
[16 24]
[17 23]
[42 242]
[43 241]
[44 240]
[45 239]
[46 238]
[47 237]
[48 59]
[49 58]
[62 192]
[63 191]
[64 190]
[65 189]
[66 188]
[70 184]
[71 183]
[72 182]
[73 181]
[78 91]
[79 90]
[80 89]
[81 88]
[82 87]
[99 117]
[100 116]
[102 114]
[103 113]
[104 112]
[105 111]
[119 135]
[120 134]
[121 133]
[122 132]
[123 131]
[124 130]
[125 129]
[139 180]
[140 179]
[141 178]
[142 177]
[143 175]
[144 174]
[145 173]
[147 171]
[148 170]
[149 169]
[150 168]
[151 167]
[152 166]
[153 165]
[154 164]
[155 163]
[193 235]
[194 234]
[195 233]
[196 232]
[197 231]
[198 230]
[199 229]
[200 228]
[201 227]
[202 226]
[205 223]
[206 222]
[207 221]
[208 220]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
