%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 21:02:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUGGAGGGCUUUGCCUGAUGUCUACCAGAAGCCCUGUGUGUGGAUGGUGACGCAGAGGACGUCUCUAUGCCGGUGACUGGACAUAUCACCUCUACUUAAAUCCGUCCUGUUUAGCGACUUCAGUCAACUACAGCUGAGUCCAUAGGCCAGAAAGACAAUAAAUUUUUAUCAUUUUGAAAUAA\
) } def
/len { sequence length } bind def

/coor [
[97.79003906 146.97778320]
[87.93198395 158.28347778]
[78.07392883 169.58917236]
[68.21587372 180.89488220]
[64.97805023 196.38122559]
[50.78193665 200.88896179]
[40.92388153 212.19465637]
[31.06582642 223.50035095]
[21.20777130 234.80604553]
[11.34971619 246.11174011]
[1.49166095 257.41741943]
[-8.36639404 268.72311401]
[-9.37515736 273.89321899]
[-12.01370621 277.76049805]
[-15.50651646 279.92062378]
[-19.03028488 280.33859253]
[-29.45425415 291.12472534]
[-39.87822342 301.91085815]
[-37.05698395 317.16931152]
[-43.77360535 331.15740967]
[-57.44541550 338.49642944]
[-72.81532288 336.36437988]
[-83.97328186 325.58108521]
[-86.62882996 310.29293823]
[-79.76085663 296.37850952]
[-66.01023865 289.18823242]
[-50.66436768 291.48690796]
[-40.24039841 280.70074463]
[-29.81642914 269.91461182]
[-19.67209053 258.86508179]
[-9.81403446 247.55937195]
[0.04402072 236.25367737]
[9.90207577 224.94798279]
[19.76013184 213.64228821]
[29.61818695 202.33659363]
[39.47624207 191.03089905]
[42.00894547 176.35321045]
[56.91017532 171.03681946]
[66.76823425 159.73112488]
[76.62628937 148.42543030]
[86.48434448 137.11973572]
[68.30558014 108.21311951]
[80.37495422 82.97780609]
[72.36351776 70.29644012]
[64.35208130 57.61508560]
[56.34064865 44.93372345]
[48.32921219 32.25236511]
[40.31777573 19.57100487]
[23.75890732 22.69414139]
[7.30441284 19.23523903]
[-6.53494596 9.75085163]
[-15.65848732 -4.28525114]
[-18.69445992 -20.71103859]
[-15.20622253 -37.00922775]
[-5.75479984 -50.69305801]
[-14.19452190 -63.09350586]
[-22.63424301 -75.49394989]
[-31.07396507 -87.89440155]
[-39.51368713 -100.29484558]
[-50.00998306 -98.41867065]
[-60.49271393 -100.14765930]
[-69.76345825 -105.25824738]
[-76.77101135 -113.14174652]
[-80.73056793 -122.87677002]
[-81.21157837 -133.33688354]
[-78.18438721 -143.32092285]
[-72.02074432 -151.69091797]
[-79.59455872 -164.63839722]
[-87.16836548 -177.58587646]
[-94.74217987 -190.53337097]
[-102.42623901 -203.41572571]
[-110.22000122 -216.23202515]
[-118.01375580 -229.04830933]
[-125.80751801 -241.86459351]
[-139.20338440 -252.25628662]
[-132.92616272 -268.00534058]
[-116.05487823 -266.33319092]
[-112.99122620 -249.65835571]
[-105.19747162 -236.84207153]
[-97.40370941 -224.02577209]
[-89.60994720 -211.20948792]
[-83.43338013 -207.11825562]
[-81.79469299 -198.10717773]
[-74.22087860 -185.15969849]
[-66.64707184 -172.21220398]
[-59.07325745 -159.26472473]
[-39.54823685 -158.67292786]
[-24.20846558 -146.34808350]
[-19.35439682 -127.13028717]
[-27.11323929 -108.73457336]
[-18.67351723 -96.33412170]
[-10.23379612 -83.93367767]
[-1.79407406 -71.53322601]
[6.64564753 -59.13277817]
[19.45269203 -62.65882492]
[32.74556732 -62.05935287]
[45.22595215 -57.37882614]
[55.67053986 -49.06098938]
[63.05093765 -37.90683365]
[66.63491058 -24.99748611]
[66.05902863 -11.58942413]
[61.36542892 1.00782299]
[52.99913406 11.55956841]
[61.01057053 24.24092865]
[69.02200317 36.92228699]
[77.03343964 49.60364914]
[85.04487610 62.28500748]
[93.05631256 74.96636963]
[122.48426056 76.19980621]
[138.60496521 108.37879944]
[152.90213013 103.84108734]
[167.19931030 99.30336761]
[181.49647522 94.76564789]
[195.79365540 90.22792816]
[203.10937500 76.47591400]
[217.67337036 72.07769012]
[230.73873901 79.13685608]
[245.03590393 74.59913635]
[259.33306885 70.06142426]
[273.63024902 65.52370453]
[280.88400269 59.93191910]
[288.21038818 61.03281403]
[302.58294678 56.73985291]
[316.95553589 52.44689178]
[331.32809448 48.15393066]
[336.34722900 33.47102737]
[349.05755615 24.57004929]
[364.57165527 24.87360764]
[376.92407227 34.26497650]
[381.36502075 49.13298416]
[376.18685913 63.76057434]
[363.38073730 72.52314758]
[347.87084961 72.05130768]
[335.62103271 62.52649307]
[321.24847412 66.81945038]
[306.87591553 71.11241150]
[292.50335693 75.40537262]
[278.16796875 79.82087708]
[263.87078857 84.35858917]
[249.57362366 88.89630890]
[235.27645874 93.43402863]
[228.67333984 106.73569489]
[214.23861694 111.54125214]
[200.33137512 104.52510071]
[186.03419495 109.06282043]
[171.73703003 113.60054016]
[157.43984985 118.13825226]
[143.14268494 122.67597198]
[139.09573364 137.11973572]
[148.95378113 148.42543030]
[158.81184387 159.73112488]
[168.66989136 171.03681946]
[178.52795410 182.34251404]
[193.42918396 187.65890503]
[195.96188354 202.33659363]
[205.81994629 213.64228821]
[220.72117615 218.95867920]
[223.25387573 233.63636780]
[233.11192322 244.94206238]
[248.74221802 244.46453857]
[260.99060059 254.18624878]
[264.07373047 269.51687622]
[256.53588867 283.21777344]
[241.93618774 288.81982422]
[227.16816711 283.67785645]
[219.20483398 270.21981812]
[221.80622864 254.80012512]
[211.94818115 243.49443054]
[197.75205994 238.98669434]
[194.51425171 223.50035095]
[184.65618896 212.19465637]
[170.46008301 207.68692017]
[167.22225952 192.20057678]
[157.36419678 180.89488220]
[147.50614929 169.58917236]
[137.64808655 158.28347778]
[127.79003906 146.97778320]
[120.29003906 146.97778320]
[129.64250183 158.70516968]
[126.30498505 173.32914734]
[112.79064941 179.83781433]
[99.27585602 173.33010864]
[95.93729401 158.70635986]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 41]
[2 40]
[3 39]
[4 38]
[6 36]
[7 35]
[8 34]
[9 33]
[10 32]
[11 31]
[12 30]
[16 29]
[17 28]
[18 27]
[43 108]
[44 107]
[45 106]
[46 105]
[47 104]
[48 103]
[55 94]
[56 93]
[57 92]
[58 91]
[59 90]
[67 86]
[68 85]
[69 84]
[70 83]
[71 81]
[72 80]
[73 79]
[74 78]
[110 148]
[111 147]
[112 146]
[113 145]
[114 144]
[117 141]
[118 140]
[119 139]
[120 138]
[122 137]
[123 136]
[124 135]
[125 134]
[149 177]
[150 176]
[151 175]
[152 174]
[153 173]
[155 171]
[156 170]
[158 168]
[159 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
