%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 05:42:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGCGUCGGCUCAGAGCCCUGGUACCUUGGACCCAAGAGGAGGCCCAUCAUCUUCCUGGAGUAACAUCACCAGUGACCAGCAGACAGUGAGCUUCUAUCCCAGGCCCUGCAGCCAGUACACCAAGGCUGUAGGGAUCAAGCAUGUAAACACCAACUGGUCCAUACCCAUUCAUUAAUAAACUUCUUAAGUGCAAGAA\
) } def
/len { sequence length } bind def

/coor [
[47.49483490 337.34054565]
[38.54655457 342.56973267]
[28.31483841 343.59906006]
[22.30087852 357.34069824]
[29.97405434 370.69842529]
[28.32969856 385.83609009]
[18.20676231 396.97119141]
[3.64245939 399.97436523]
[-2.37149882 413.71597290]
[-8.38545704 427.45761108]
[-14.39941502 441.19924927]
[-15.21070385 458.13375854]
[-31.70800781 462.04211426]
[-40.03053665 447.27148438]
[-28.14104080 435.18527222]
[-22.12708282 421.44366455]
[-16.11312485 407.70202637]
[-10.09916782 393.96038818]
[-17.77507782 381.22390747]
[-16.46384239 366.23242188]
[-6.45953608 354.75341797]
[8.55925274 351.32675171]
[14.57321072 337.58511353]
[6.15732145 320.02557373]
[13.46564102 301.64843750]
[32.21129227 294.44546509]
[37.56458664 280.43325806]
[42.91788101 266.42102051]
[48.27117157 252.40881348]
[45.58557892 237.75831604]
[57.73845291 227.62825012]
[63.09174728 213.61604309]
[56.79647064 200.16593933]
[62.02585983 185.87930298]
[76.17624664 179.36743164]
[81.52953339 165.35520935]
[86.88282776 151.34300232]
[92.23612213 137.33078003]
[76.17591095 95.98481750]
[63.55710983 87.87520599]
[50.93830872 79.76559448]
[38.31950378 71.65598297]
[25.70070267 63.54636765]
[13.08189869 55.43675613]
[-2.71064496 54.48485184]
[-9.23440742 41.09493637]
[-21.85321045 32.98532486]
[-34.47201157 24.87571335]
[-49.72783279 28.02177238]
[-62.40956879 19.61771202]
[-65.31484222 5.05423069]
[-77.93364716 -3.05538130]
[-90.55244446 -11.16499329]
[-103.48291779 -18.76781273]
[-116.70471954 -25.85187912]
[-129.98229980 -32.83082962]
[-143.31483459 -39.70422745]
[-156.64736938 -46.57762527]
[-169.97990417 -53.45102310]
[-185.79141235 -52.89744186]
[-193.55842590 -65.60660553]
[-208.53407288 -60.55628204]
[-222.65727234 -67.64930725]
[-227.54896545 -82.67750549]
[-220.30702209 -96.72491455]
[-205.22795105 -101.45745850]
[-191.25788879 -94.06740570]
[-186.68502808 -78.93913269]
[-171.82714844 -79.98434448]
[-163.10650635 -66.78355408]
[-149.77397156 -59.91016006]
[-136.44143677 -53.03676224]
[-123.10890961 -46.16336441]
[-115.71516418 -45.89237213]
[-109.62065125 -39.07368088]
[-96.39885712 -31.98961449]
[-98.11286926 -46.89136505]
[-87.64704895 -57.63690567]
[-72.70528412 -56.31645584]
[-64.28618622 -43.90199661]
[-68.58705139 -29.53179932]
[-82.44283295 -23.78379631]
[-69.82402802 -15.67418480]
[-57.20522690 -7.56457233]
[-42.75092697 -10.97173405]
[-29.83814049 -2.92719364]
[-26.36240005 12.25690937]
[-13.74359798 20.36652184]
[-1.12479496 28.47613335]
[13.76516819 28.84798622]
[21.19151115 42.81795120]
[33.81031418 50.92756653]
[46.42911911 59.03717804]
[59.04792023 67.14678955]
[71.66672516 75.25640106]
[84.28552246 83.36601257]
[73.51712799 72.92371368]
[72.53086853 57.95617676]
[81.83594513 46.19116592]
[96.62814331 43.70298767]
[109.27020264 51.77629471]
[113.23500824 66.24282074]
[106.47399902 79.63484192]
[115.74638367 67.84403992]
[124.92493439 55.98005676]
[134.00907898 44.04362869]
[143.09323120 32.10720062]
[152.17736816 20.17077446]
[161.26152039 8.23434734]
[170.34565735 -3.70208049]
[179.42980957 -15.63850784]
[188.51396179 -27.57493591]
[197.59809875 -39.51136398]
[206.68225098 -51.44779205]
[200.67448425 -65.58293915]
[202.55511475 -80.82625580]
[211.81825256 -93.07737732]
[225.97216797 -99.04079437]
[241.20951843 -97.11239624]
[253.43153381 -87.81090546]
[259.35055542 -73.63837433]
[257.37442017 -58.40713882]
[248.03465271 -46.21433640]
[233.84362793 -40.33975983]
[218.61866760 -42.36364746]
[209.53453064 -30.42721748]
[200.45037842 -18.49079132]
[191.36624146 -6.55436277]
[182.28208923 5.38206482]
[173.19795227 17.31849289]
[164.11380005 29.25491905]
[155.02966309 41.19134903]
[145.94551086 53.12777710]
[136.86135864 65.06420135]
[135.31057739 72.29856110]
[127.53717804 77.11642456]
[118.26479340 88.90722656]
[120.88578033 95.93434906]
[130.43606567 84.36749268]
[145.22840881 86.85475922]
[150.47062683 100.90891266]
[140.92056274 112.47593689]
[126.12773895 109.98859406]
[128.74871826 117.01571655]
[143.47764587 119.85448456]
[158.20658875 122.69325256]
[169.54560852 112.26576233]
[184.67362976 110.53472900]
[197.76531982 117.95576477]
[203.90336609 131.50057983]
[218.63230896 134.33935547]
[233.36123657 137.17813110]
[248.67303467 131.30607605]
[261.24218750 141.83929443]
[258.13861084 157.94207764]
[242.55502319 163.04928589]
[230.52246094 151.90705872]
[215.79353333 149.06828308]
[201.06460571 146.22952271]
[190.33212280 156.52281189]
[175.42010498 158.54658508]
[162.01910400 151.31701660]
[155.36781311 137.42218018]
[140.63888550 134.58341980]
[125.90995026 131.74464417]
[137.47482300 141.29733276]
[149.03970337 150.85000610]
[163.58708191 154.50698853]
[175.85075378 163.14425659]
[184.19453430 175.60946655]
[187.50523376 190.23954773]
[185.34117126 205.08261108]
[177.99102783 218.15837097]
[166.43545532 227.72232056]
[152.21615601 232.49844360]
[137.23019409 231.84954834]
[123.47695160 225.86221313]
[112.79132080 215.33525085]
[106.59893036 201.67309570]
[105.72595215 186.69851685]
[110.28805542 172.41084290]
[108.26819611 157.54745483]
[106.24834442 142.68406677]
[100.89505005 156.69628906]
[95.54175568 170.70851135]
[90.18846130 184.72073364]
[96.39232635 199.00881958]
[90.76371765 213.14294434]
[77.10396576 218.96932983]
[71.75067139 232.98155212]
[74.05335999 248.63429260]
[62.28339005 257.76211548]
[56.93009567 271.77432251]
[51.57680511 285.78652954]
[46.22351074 299.79876709]
[52.88034821 308.15985107]
[55.44087982 318.45278931]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 23]
[4 22]
[8 18]
[9 17]
[10 16]
[11 15]
[26 195]
[27 194]
[28 193]
[29 192]
[31 190]
[32 189]
[35 186]
[36 185]
[37 184]
[38 183]
[39 96]
[40 95]
[41 94]
[42 93]
[43 92]
[44 91]
[46 89]
[47 88]
[48 87]
[51 84]
[52 83]
[53 82]
[54 76]
[55 75]
[56 73]
[57 72]
[58 71]
[59 70]
[61 68]
[103 137]
[104 136]
[105 134]
[106 133]
[107 132]
[108 131]
[109 130]
[110 129]
[111 128]
[112 127]
[113 126]
[114 125]
[144 165]
[145 164]
[146 163]
[150 159]
[151 158]
[152 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
