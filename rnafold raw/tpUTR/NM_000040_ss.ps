%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 21:58:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACCUCAAUACCCCAAGUCCACCUGCCUAUCCAUCCUGCGAGCUCCUUGGGUCCUGCAAUCUCCAGGGCUGCCCCUGUAGGUUGCUUAAAAGGGACAGUAUUCUCAGUGCUCUCCUACCCCACCUCAUGCCUGGCCCCCCUCCAGGCAUGCUGGCCUCCCAAUAAAGCUGGACAAGAAGCUGCUAUGAGU\
) } def
/len { sequence length } bind def

/coor [
[94.32095337 272.57284546]
[80.13694000 265.07662964]
[77.29584503 249.28713989]
[87.97710419 237.31675720]
[88.47045898 222.32487488]
[88.96381378 207.33297729]
[89.45716858 192.34109497]
[74.13360596 189.26902771]
[59.54144669 183.67279053]
[46.09329224 175.71061707]
[34.16940308 165.60763550]
[24.10694313 153.64955139]
[11.19958210 161.29153442]
[-1.70777881 168.93353271]
[-14.61513996 176.57551575]
[-27.52250099 184.21751404]
[-40.42986298 191.85949707]
[-40.69747925 205.65025330]
[-47.69272614 217.41236877]
[-59.49419785 224.12454224]
[-72.96264648 224.12448120]
[-84.57576752 217.51927185]
[-92.73286438 231.07554626]
[-107.62158966 230.65684509]
[-120.65289307 238.08551025]
[-133.68420410 245.51417542]
[-133.08802795 260.80807495]
[-139.67803955 274.62219238]
[-151.93989563 283.78219604]
[-167.05590820 286.18313599]
[-181.55253601 281.27331543]
[-192.09857178 270.18096924]
[-196.27058411 255.45506287]
[-193.10989380 240.47946167]
[-183.34280396 228.69546509]
[-169.21371460 222.81095886]
[-153.96939087 224.17814636]
[-141.11286926 232.48286438]
[-128.08155823 225.05419922]
[-115.05025482 217.62553406]
[-107.82524109 204.60061646]
[-92.00443268 204.48796082]
[-90.72683716 188.12980652]
[-79.84633636 175.62722778]
[-63.49684525 172.03181458]
[-48.07185364 178.95214844]
[-35.16449356 171.31015015]
[-22.25713158 163.66815186]
[-9.34976959 156.02616882]
[3.55759096 148.38417053]
[16.46495247 140.74218750]
[9.49594688 121.14347076]
[7.06026649 100.48567963]
[9.27991390 79.80356598]
[16.04370689 60.13308716]
[27.01284981 42.45952988]
[16.02106857 32.25263214]
[5.02928591 22.04573631]
[-5.96249580 11.83883953]
[-16.95427704 1.63194346]
[-27.94605827 -8.57495308]
[-38.93783951 -18.78184891]
[-54.31532669 -22.50253105]
[-58.37676620 -36.83270645]
[-69.36854553 -47.03960419]
[-80.36032867 -57.24650192]
[-91.35211182 -67.45339966]
[-102.34389496 -77.66029358]
[-118.44235229 -80.78624725]
[-123.52788544 -96.37693024]
[-112.36891937 -108.39398956]
[-96.44485474 -104.47529602]
[-92.13699341 -88.65207672]
[-81.14521790 -78.44518280]
[-70.15343475 -68.23828125]
[-59.16165161 -58.03138733]
[-48.16986847 -47.82448959]
[-33.57858658 -44.83387375]
[-28.73094368 -29.77363205]
[-17.73916245 -19.56673431]
[-6.74738073 -9.35983849]
[4.24440098 0.84705830]
[15.23618221 11.05395508]
[26.22796440 21.26085091]
[37.21974564 31.46774864]
[46.96518707 23.67609596]
[57.66647339 17.26003075]
[69.13074493 12.33519077]
[81.15136719 8.99033642]
[93.51169586 7.28575134]
[105.98897552 7.25215816]
[118.35830688 8.89016247]
[122.49813843 -5.52725124]
[126.63796234 -19.94466400]
[130.77780151 -34.36207581]
[127.14969635 -49.76166916]
[138.09907532 -59.85921860]
[142.23890686 -74.27663422]
[146.37873840 -88.69404602]
[150.51855469 -103.11145782]
[154.65838623 -117.52886963]
[158.79821777 -131.94628906]
[157.35813904 -148.83895874]
[173.19198608 -154.89912415]
[183.39855957 -141.36169434]
[173.21563721 -127.80645752]
[169.07580566 -113.38903809]
[164.93597412 -98.97162628]
[160.79614258 -84.55421448]
[156.65631104 -70.13680267]
[152.51647949 -55.71938705]
[156.44068909 -41.35102463]
[145.19520569 -30.22224808]
[141.05537415 -15.80483437]
[136.91554260 -1.38742065]
[132.77571106 13.02999306]
[151.81715393 22.84423828]
[168.10581970 36.75738907]
[180.77633667 54.03030396]
[189.15562439 73.74536896]
[203.83969116 70.68302155]
[218.52377319 67.62068176]
[223.95909119 58.17436218]
[233.50398254 53.38599396]
[243.88919067 54.62489700]
[251.70407104 61.24049377]
[266.48092651 58.66277313]
[281.25778198 56.08505249]
[296.03463745 53.50732803]
[310.81149292 50.92960739]
[325.58834839 48.35188675]
[340.36517334 45.77416611]
[355.14202881 43.19644547]
[369.91888428 40.61872482]
[377.60537720 27.00064468]
[392.26516724 21.55779648]
[406.97634888 26.86012840]
[414.79278564 40.40403748]
[412.02377319 55.79450607]
[399.97674561 65.76462555]
[384.33996582 65.60681152]
[372.49661255 55.39557648]
[357.71975708 57.97329712]
[342.94290161 60.55101776]
[328.16604614 63.12873840]
[313.38919067 65.70645905]
[298.61236572 68.28417969]
[283.83551025 70.86190033]
[269.05865479 73.43962097]
[254.28179932 76.01734161]
[240.41340637 89.47742462]
[221.58610535 82.30475616]
[206.90203857 85.36710358]
[192.21795654 88.42944336]
[192.87312317 96.44847107]
[192.83229065 104.49411774]
[192.09574890 112.50608826]
[190.66905212 120.42433167]
[188.56286621 128.18951416]
[185.79298401 135.74345398]
[182.38015747 143.02951050]
[178.34997559 149.99311829]
[173.73263550 156.58206177]
[168.56272888 162.74697876]
[162.87899780 168.44166565]
[156.72406006 173.62344360]
[164.89019775 186.20573425]
[173.05633545 198.78804016]
[181.22247314 211.37033081]
[196.72456360 212.05216980]
[208.84423828 221.74200439]
[212.92124939 236.71389771]
[207.38790894 251.21084595]
[194.37187195 259.65847778]
[178.87809753 258.80853271]
[166.86424255 248.98777771]
[162.94989014 233.97253418]
[168.64018250 219.53646851]
[160.47404480 206.95416260]
[152.30790710 194.37187195]
[144.14176941 181.78958130]
[136.66302490 185.40405273]
[128.89143372 188.33638000]
[120.88906860 190.56311035]
[112.71986389 192.06646729]
[104.44905090 192.83445740]
[103.95569611 207.82633972]
[103.46234131 222.81822205]
[102.96898651 237.81010437]
[112.84014130 250.45684814]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 189]
[5 188]
[6 187]
[7 186]
[12 51]
[13 50]
[14 49]
[15 48]
[16 47]
[17 46]
[22 42]
[24 40]
[25 39]
[26 38]
[56 85]
[57 84]
[58 83]
[59 82]
[60 81]
[61 80]
[62 79]
[64 77]
[65 76]
[66 75]
[67 74]
[68 73]
[92 116]
[93 115]
[94 114]
[95 113]
[97 111]
[98 110]
[99 109]
[100 108]
[101 107]
[102 106]
[120 154]
[121 153]
[122 152]
[126 150]
[127 149]
[128 148]
[129 147]
[130 146]
[131 145]
[132 144]
[133 143]
[134 142]
[166 181]
[167 180]
[168 179]
[169 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
