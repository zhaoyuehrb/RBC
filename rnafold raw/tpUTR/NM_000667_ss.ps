%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 21:16:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACAAUACAGAUGUUUUCCCUUGUGGCAGUCUUCAGCCUCCUCUACCCUACAUGAUCUGGAGCAACAGCUGGGAAAUAUCAUUAAUUCUGCUCAUCACAGAUUUUAUCAAUAAAUUACAUUUGGGGGCUUUCCAAAGAAAUGGAAAUUGAUGUAAAAUUAUUUUUCAAGCAAAUGUUUAAAAUCCAAAUGAGAACUAAAUAAAGUGUUGAACAUCAGCUGGGGAAUUGAAGCCAAUAAACCUUCCUUCUUAACCA\
UUC\
) } def
/len { sequence length } bind def

/coor [
[86.03508759 603.27539062]
[73.69170380 594.52917480]
[64.65679169 582.39556885]
[59.81550980 568.06317139]
[59.64215469 552.93621826]
[64.15370941 538.49664307]
[72.90817261 526.15911865]
[85.04788208 517.13232422]
[99.38349915 512.30065918]
[99.20156097 497.30175781]
[99.01962280 482.30285645]
[84.37636566 479.17602539]
[70.78960419 472.86587524]
[58.94208527 463.68594360]
[49.42997742 452.09405518]
[42.73281479 438.66961670]
[39.18935394 424.08438110]
[38.98043823 409.06909180]
[42.11975861 394.37680054]
[48.45301056 380.74499512]
[57.66548920 368.85870361]
[69.29770660 359.31604004]
[82.76831055 352.59808350]
[97.40316010 349.04458618]
[97.22121429 334.04568481]
[97.03927612 319.04678345]
[96.85733032 304.04791260]
[81.09368896 290.99783325]
[80.14006042 270.25949097]
[95.05847931 255.40032959]
[94.14930725 240.42790222]
[93.24014282 225.45549011]
[92.33097076 210.48306274]
[91.42179871 195.51065063]
[90.51262665 180.53822327]
[89.60346222 165.56579590]
[88.69429016 150.59338379]
[85.75899506 165.30337524]
[75.06552124 175.82238770]
[60.30923080 178.51531982]
[46.58949661 172.45158386]
[38.64747620 159.72663879]
[39.22771835 144.73786926]
[48.12970352 132.66497803]
[62.27715302 127.68003082]
[76.78139496 131.50587463]
[63.73078918 124.11116028]
[50.68018723 116.71645355]
[37.62958145 109.32173920]
[24.57897758 101.92703247]
[8.75793266 101.85557556]
[1.49903274 88.84951782]
[-11.55157185 81.45480347]
[-24.60217476 74.06009674]
[-38.27060318 67.88157654]
[-52.44380951 62.97034836]
[-66.61701965 58.05912018]
[-80.79022980 53.14789200]
[-94.96343231 48.23666000]
[-109.25160217 43.67067719]
[-123.64632416 39.45262527]
[-138.04104614 35.23456955]
[-152.43577576 31.01651955]
[-166.83049011 26.79846573]
[-175.39262390 39.25428391]
[-187.36927795 48.44134521]
[-201.57991028 53.46991348]
[-216.62861633 53.85939026]
[-231.04129028 49.58421326]
[-243.41006470 41.07512283]
[-252.53073120 29.17581749]
[-257.52008057 15.05928135]
[-257.90133667 0.11218761]
[-272.29605103 -4.10586500]
[-288.09426880 0.29281932]
[-299.61169434 -11.38111687]
[-295.00021362 -27.11852837]
[-279.00369263 -30.73011589]
[-268.07800293 -18.50058746]
[-253.68327332 -14.28253460]
[-245.29518127 -26.65996170]
[-233.47602844 -35.85114288]
[-219.37559509 -40.94602203]
[-204.37048340 -41.43380737]
[-189.92980957 -37.25415421]
[-177.47128296 -28.80429649]
[-168.22206116 -16.90134430]
[-163.09790039 -2.70326710]
[-162.61244202 12.40374374]
[-148.21771240 16.62179565]
[-133.82299805 20.83984947]
[-119.42827606 25.05790138]
[-105.03355408 29.27595329]
[-102.53054047 28.07843399]
[-99.40929413 27.78506851]
[-96.00639343 28.63365746]
[-92.73741150 30.73782349]
[-90.05220795 34.06345367]
[-75.87899780 38.97468185]
[-61.70579147 43.88591003]
[-47.53258133 48.79714203]
[-33.35937500 53.70837021]
[-43.55014038 42.70163345]
[-49.13196182 28.77887154]
[-49.36689758 13.78071213]
[-44.22389221 -0.31004766]
[-34.38286591 -11.63056946]
[-21.14483070 -18.68424988]
[-6.25988960 -20.53857040]
[8.30412674 -16.94838715]
[20.62181473 -8.38833141]
[29.06474304 4.00993395]
[32.51673126 18.60732269]
[30.52141571 33.47402191]
[23.34258652 46.64461136]
[11.92930222 56.37789917]
[-2.20956874 61.38712311]
[-17.20746613 61.00949097]
[-4.15686178 68.40420532]
[8.89374256 75.79891205]
[23.78132057 75.34144592]
[31.97368813 88.87642670]
[45.02429199 96.27114105]
[58.07489395 103.66584778]
[71.12550354 111.06055450]
[84.17610168 118.45526886]
[76.88761902 102.49198151]
[82.30348969 86.62505341]
[96.44816589 79.18251038]
[99.34104919 64.46411133]
[102.23394012 49.74571609]
[105.12683105 35.02732086]
[108.01971436 20.30892372]
[110.91260529 5.59052658]
[101.89537811 -7.38888836]
[104.77925873 -22.92783356]
[117.85327911 -31.80732727]
[133.36087036 -28.75932503]
[142.10163879 -15.59215164]
[138.88984680 -0.11765728]
[125.63100433 8.48341465]
[122.73811340 23.20181084]
[119.84522247 37.92020798]
[116.95233917 52.63860321]
[114.05944824 67.35700226]
[111.16655731 82.07540131]
[122.56499481 102.60036469]
[107.82411194 123.01686096]
[122.16661072 118.62451935]
[136.50910950 114.23217773]
[150.85162354 109.83983612]
[165.19412231 105.44749451]
[179.53662109 101.05515289]
[165.12277222 96.90292358]
[154.23760986 86.58238983]
[149.32423401 72.40992737]
[151.48539734 57.56643295]
[160.23605347 45.38341522]
[173.61219788 38.59525681]
[188.61163330 38.72550964]
[201.86785889 45.74494171]
[210.40562439 58.07809448]
[212.30868530 72.95687866]
[207.14991760 87.04187775]
[196.08706665 97.17186737]
[210.88639832 94.72656250]
[225.68574524 92.28126526]
[240.48509216 89.83596039]
[244.84426880 75.24970245]
[255.06257629 64.04821777]
[269.07369995 58.41716003]
[284.07861328 59.42370987]
[297.10479736 66.81478119]
[305.59500122 79.07781982]
[320.39434814 76.63252258]
[335.19366455 74.18721771]
[349.99301147 71.74191284]
[364.79235840 69.29661560]
[379.59170532 66.85131073]
[386.97537231 51.61768723]
[401.84164429 43.87368774]
[418.22824097 46.50131607]
[429.69555664 58.26693726]
[444.46414185 55.64230728]
[454.79034424 43.36429596]
[470.82354736 43.92643738]
[480.26446533 56.89750290]
[475.87084961 72.32720184]
[461.01306152 78.37918854]
[447.08877563 70.41090393]
[432.32019043 73.03553009]
[427.63223267 85.51832581]
[417.31045532 94.12958527]
[403.97671509 96.54291534]
[391.08734131 92.02427673]
[382.03701782 81.65065002]
[367.23767090 84.09595490]
[352.43832397 86.54125977]
[337.63897705 88.98655701]
[322.83963013 91.43186188]
[308.04028320 93.87715912]
[303.94613647 108.21952057]
[293.98983765 119.40799713]
[280.10623169 125.18781281]
[265.02844238 124.36312866]
[251.74996948 117.04402924]
[242.93038940 104.63529968]
[228.13104248 107.08060455]
[213.33171082 109.52590942]
[198.53236389 111.97120667]
[183.92895508 115.39765167]
[169.58645630 119.78999329]
[155.24395752 124.18233490]
[140.90145874 128.57467651]
[126.55895233 132.96702576]
[112.21645355 137.35935974]
[103.66670990 149.68420410]
[104.57588196 164.65663147]
[105.48505402 179.62905884]
[106.39421844 194.60147095]
[107.30339050 209.57389832]
[108.21256256 224.54631042]
[109.12173462 239.51873779]
[110.03089905 254.49116516]
[118.78370667 258.51721191]
[125.44117737 265.40118408]
[129.12748718 274.17724609]
[129.37963867 283.63494873]
[126.20516968 292.48623657]
[120.07545471 299.54074097]
[111.85623169 303.86596680]
[112.03816986 318.86486816]
[112.22011566 333.86373901]
[112.40205383 348.86264038]
[127.11878967 352.06008911]
[140.74839783 358.44931030]
[152.60865784 367.70703125]
[162.10675049 379.36633301]
[168.76881409 392.84051514]
[172.26359558 407.45233154]
[172.41897583 422.46826172]
[169.23034668 437.13516235]
[162.86079407 450.71810913]
[153.63265991 462.53729248]
[142.01132202 472.00192261]
[128.58161926 478.63980103]
[114.01851654 482.12091064]
[114.20045471 497.11981201]
[114.38240051 512.11871338]
[128.83100891 516.60125732]
[141.18609619 525.33087158]
[150.23725891 537.45239258]
[155.09774780 551.77832031]
[155.29138184 566.90502930]
[150.79917908 581.35058594]
[142.06126404 593.69982910]
[129.93365479 602.74291992]
[115.60452271 607.59381104]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 249]
[10 248]
[11 247]
[24 234]
[25 233]
[26 232]
[27 231]
[30 224]
[31 223]
[32 222]
[33 221]
[34 220]
[35 219]
[36 218]
[37 217]
[46 126]
[47 125]
[48 124]
[49 123]
[50 122]
[52 120]
[53 119]
[54 118]
[55 102]
[56 101]
[57 100]
[58 99]
[59 98]
[60 93]
[61 92]
[62 91]
[63 90]
[64 89]
[73 80]
[74 79]
[129 146]
[130 145]
[131 144]
[132 143]
[133 142]
[134 141]
[148 216]
[149 215]
[150 214]
[151 213]
[152 212]
[153 211]
[165 210]
[166 209]
[167 208]
[168 207]
[174 201]
[175 200]
[176 199]
[177 198]
[178 197]
[179 196]
[183 191]
[184 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
