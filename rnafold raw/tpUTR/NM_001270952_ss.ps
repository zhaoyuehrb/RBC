%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 07:04:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUGUCAAUAAUGGAAACACCAAAAACUGUAUUAUUUGCAACUAAAUUUUCUCUGCCAUACACUAACUCAAAAAUUUUGAUAUUUUCAUUAACUUGAUGAUUAAACUUUAUGUGAGUUAAACUUUGCCUUAACCUGUGUUUUAUGUUAUUUUUGCUCCAGGUUAAAGGUGCAAUGCUUUCCUCCUCUUUUCUUGUGAAGGAUUUAUCU\
) } def
/len { sequence length } bind def

/coor [
[70.43272400 163.08129883]
[64.27188873 159.80783081]
[55.23766327 171.78207397]
[46.20343781 183.75633240]
[37.16921234 195.73059082]
[35.03417969 211.40707397]
[21.19221497 216.90701294]
[12.15798950 228.88125610]
[3.12376261 240.85551453]
[-5.91046381 252.82977295]
[-14.94469070 264.80401611]
[-23.97891617 276.77828979]
[-33.01314545 288.75253296]
[-35.14817429 304.42901611]
[-48.99013901 309.92895508]
[-41.95526886 323.47418213]
[-41.50270844 338.73059082]
[-47.72231674 352.66900635]
[-59.37918091 362.52194214]
[-74.15882874 366.33306885]
[-89.12674713 363.34573364]
[-101.31104279 354.15304565]
[-108.29251862 340.58020020]
[-108.68498993 325.32214355]
[-102.41054535 311.40832520]
[-90.71496582 301.60137939]
[-75.92043304 297.84844971]
[-60.96439362 300.89471436]
[-59.47554779 286.07470703]
[-44.98739624 279.71829224]
[-35.95317078 267.74404907]
[-26.91894341 255.76979065]
[-17.88471794 243.79554749]
[-8.85049057 231.82128906]
[0.18373561 219.84703064]
[9.21796227 207.87278748]
[10.70680618 193.05278015]
[25.19495773 186.69636536]
[34.22918320 174.72210693]
[43.26341248 162.74784851]
[52.29763794 150.77359009]
[43.36334610 140.56800842]
[36.57592392 128.82464600]
[32.19265366 115.98865509]
[30.37968445 102.54660034]
[31.20574188 89.00801849]
[34.63951492 75.88609314]
[40.55083847 63.67823410]
[48.71564102 52.84718323]
[58.82442474 43.80350876]
[70.49401093 36.89001465]
[83.28205109 32.36876678]
[96.70380402 30.41114616]
[110.25049591 31.09135818]
[114.04196167 16.57843971]
[117.83342743 2.06552196]
[111.10028076 15.46942997]
[97.77979279 22.36613846]
[82.94776154 20.12763977]
[72.25596619 9.60692215]
[69.77853394 -5.18707514]
[76.45950317 -18.61706734]
[89.75307465 -25.56552505]
[104.59525299 -23.38395309]
[98.88105011 -37.25290680]
[93.16684723 -51.12186050]
[87.45265198 -64.99081421]
[81.73844910 -78.85977173]
[76.02424622 -92.72872162]
[70.31004333 -106.59767914]
[53.80134964 -118.16420746]
[57.18711090 -137.20072937]
[51.05860901 -150.89164734]
[44.93010712 -164.58258057]
[32.22976303 -174.01718140]
[34.09187698 -188.79493713]
[27.96337509 -202.48585510]
[21.83487320 -216.17678833]
[15.70637226 -229.86770630]
[9.57787132 -243.55863953]
[3.44936943 -257.24957275]
[-8.27232456 -259.24520874]
[-17.48050880 -266.57690430]
[-21.95915413 -277.33230591]
[-20.70217133 -288.79431152]
[-14.13692093 -298.12731934]
[-19.85112381 -311.99627686]
[-25.56532669 -325.86523438]
[-40.24971008 -331.70855713]
[-46.42446136 -346.25668335]
[-40.42620850 -360.87847900]
[-25.81361008 -366.89907837]
[-11.25606251 -360.74655151]
[-5.39029837 -346.07113647]
[-11.69637203 -331.57943726]
[-5.98216963 -317.71047974]
[-0.26796696 -303.84152222]
[17.02375984 -297.83563232]
[24.56498909 -280.80627441]
[17.14029694 -263.37805176]
[23.26879692 -249.68713379]
[29.39729881 -235.99621582]
[35.52579880 -222.30528259]
[41.65430069 -208.61436462]
[47.78280258 -194.92343140]
[60.04479599 -186.46809387]
[58.62103653 -170.71107483]
[64.74953461 -157.02015686]
[70.87803650 -143.32922363]
[80.71565247 -140.55917358]
[87.54743195 -132.66517639]
[88.93436432 -122.09645081]
[84.17899323 -112.31188202]
[89.89319611 -98.44292450]
[95.60739899 -84.57397461]
[101.32160187 -70.70501709]
[107.03580475 -56.83606339]
[112.75000763 -42.96710968]
[118.46421051 -29.09815598]
[115.73118591 -43.84707260]
[123.59382629 -56.62121964]
[137.99264526 -60.82527542]
[151.49348450 -54.28867722]
[157.12585449 -40.38628387]
[151.98171997 -26.29593468]
[138.71499634 -19.29226303]
[153.13874817 -23.40996361]
[167.56250000 -27.52766418]
[181.98625183 -31.64536285]
[196.41000366 -35.76306534]
[210.80239868 -39.98905182]
[225.16261292 -44.32308960]
[239.52284241 -48.65712738]
[253.88307190 -52.99116516]
[268.24328613 -57.32520294]
[282.60351562 -61.65924072]
[294.89437866 -75.37018585]
[311.80972290 -70.69954681]
[326.10317993 -75.24893951]
[327.35205078 -90.39849091]
[334.30780029 -103.91463470]
[345.90969849 -113.73626709]
[360.38854980 -118.36565399]
[375.53643799 -117.09685516]
[389.04342651 -110.12334442]
[398.84976196 -98.50853729]
[403.46011353 -84.02361298]
[402.17138672 -68.87740326]
[395.18011475 -55.37960052]
[383.55242920 -45.58852768]
[369.06143188 -40.99724960]
[353.91693115 -42.30589676]
[340.42834473 -49.31491852]
[330.65258789 -60.95548248]
[316.35913086 -56.40608597]
[310.52532959 -45.80811310]
[298.65319824 -41.90153122]
[286.93756104 -47.29901505]
[272.57733154 -42.96497726]
[258.21710205 -38.63093948]
[243.85688782 -34.29690170]
[229.49665833 -29.96286392]
[215.13642883 -25.62882614]
[209.64033508 -20.68595314]
[200.52769470 -21.33931351]
[186.10394287 -17.22161484]
[171.68019104 -13.10391426]
[157.25645447 -8.98621464]
[142.83270264 -4.86851406]
[132.34634399 5.85698605]
[128.55488586 20.36990547]
[124.76342010 34.88282394]
[142.89401245 45.10393906]
[157.19616699 60.22472000]
[166.39335632 78.89558411]
[169.66470337 99.45009613]
[166.71823120 120.05368805]
[157.81692505 138.86741638]
[143.75526428 154.21208191]
[151.86486816 166.83088684]
[159.97448730 179.44969177]
[168.08409119 192.06849670]
[182.05406189 199.49484253]
[182.42591858 214.38481140]
[196.39588928 221.81114197]
[196.76773071 236.70111084]
[212.30137634 238.50109863]
[223.00619507 249.90025330]
[223.82771301 265.51623535]
[214.37802124 277.97567749]
[199.11898804 281.39559937]
[185.25544739 274.16119385]
[179.33335876 259.68835449]
[184.14894104 244.81072998]
[170.75901794 238.28695679]
[169.80711365 222.49441528]
[156.41720581 215.97065735]
[155.46530151 200.17811584]
[147.35568237 187.55931091]
[139.24606323 174.94050598]
[131.13645935 162.32170105]
[124.74722290 165.12333679]
[118.10981750 167.27189636]
[111.29080200 168.74584961]
[104.35856628 169.53039551]
[97.38261414 169.61769104]
[90.43291473 169.00683594]
[83.57915497 167.70397949]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 41]
[3 40]
[4 39]
[5 38]
[7 36]
[8 35]
[9 34]
[10 33]
[11 32]
[12 31]
[13 30]
[15 28]
[54 172]
[55 171]
[56 170]
[64 119]
[65 118]
[66 117]
[67 116]
[68 115]
[69 114]
[70 113]
[72 109]
[73 108]
[74 107]
[76 105]
[77 104]
[78 103]
[79 102]
[80 101]
[81 100]
[86 97]
[87 96]
[88 95]
[126 169]
[127 168]
[128 167]
[129 166]
[130 165]
[131 163]
[132 162]
[133 161]
[134 160]
[135 159]
[136 158]
[138 155]
[139 154]
[179 201]
[180 200]
[181 199]
[182 198]
[184 196]
[186 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
