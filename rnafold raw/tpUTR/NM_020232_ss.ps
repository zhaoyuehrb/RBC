%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 22:41:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUAAUUUCUGUUUUAUACCUUAUACCCAAAACACUUACUACCAACACAGCUGUUAAACAUUCUAUACAAAAAAAUUGUAUGAUCUGGUAUUAGGAAAUUACUUUCACAGUAAAUAUCAAAGAAAAAAGAUUAAGGGUCUCUUUGCCAUGCUUUUCAUCAUAUGCACCAAAUGUAAAUUUUGUACAAUAAAAUUUUAUUUCCUAAGUAA\
) } def
/len { sequence length } bind def

/coor [
[19.74056053 160.80976868]
[18.99685669 175.79132080]
[12.84759426 189.47294617]
[2.13754487 199.97508240]
[-11.66197586 205.85498047]
[-26.65522766 206.30488586]
[-40.78247833 201.26296997]
[-52.10296249 191.42190552]
[-59.06233978 178.13088989]
[-56.69865799 163.31829834]
[-65.87451935 175.18435669]
[-75.05038452 187.05043030]
[-84.22624969 198.91648865]
[-93.40211487 210.78256226]
[-102.57798004 222.64862061]
[-95.32434082 236.03909302]
[-94.15067291 251.22271729]
[-99.26033020 265.56884766]
[-109.76803589 276.59191895]
[-123.85324860 282.38211060]
[-139.07563782 281.93627930]
[-152.79782104 275.33160400]
[-162.64236450 263.71246338]
[-166.90362549 249.09185791]
[-164.84330750 234.00296021]
[-156.81838989 221.05998230]
[-144.21923828 212.50538635]
[-129.22872925 209.82130432]
[-114.44404602 213.47276306]
[-105.26818085 201.60668945]
[-96.09231567 189.74063110]
[-86.91645050 177.87455750]
[-77.74058533 166.00849915]
[-68.56472015 154.14242554]
[-70.55999756 146.91270447]
[-83.07869720 155.17601013]
[-94.80593872 145.82336426]
[-89.53479004 131.78004456]
[-74.55055237 132.45326233]
[-76.54582977 125.22354126]
[-90.50893402 119.74343109]
[-104.47203827 114.26331329]
[-118.43514252 108.78319550]
[-132.39825439 103.30308533]
[-147.24702454 101.17845917]
[-162.18663025 102.52304840]
[-177.12625122 103.86763763]
[-190.21739197 113.74458313]
[-205.20901489 107.09753418]
[-206.67903137 90.76440430]
[-193.11520386 81.54731750]
[-178.47084045 88.92802429]
[-163.53121948 87.58343506]
[-148.59161377 86.23883820]
[-146.65046692 78.99440002]
[-161.13935852 75.11211395]
[-175.62825012 71.22982788]
[-190.60768127 72.01483917]
[-195.98315430 58.01111603]
[-184.32592773 48.57136917]
[-171.74595642 56.74094009]
[-157.25706482 60.62322617]
[-142.76818848 64.50550842]
[-140.82704163 57.26106644]
[-153.09283447 48.62681198]
[-165.35862732 39.99255371]
[-177.62440491 31.35829926]
[-189.89019775 22.72404289]
[-202.15599060 14.08978748]
[-214.42178345 5.45553112]
[-230.41053772 6.77427912]
[-241.30508423 -5.00233316]
[-238.74804688 -20.84029770]
[-224.70095825 -28.59008217]
[-209.93955994 -22.30671501]
[-205.78752136 -6.81025982]
[-193.52174377 1.82399631]
[-181.25595093 10.45825195]
[-168.99015808 19.09250832]
[-156.72436523 27.72676468]
[-144.45857239 36.36101913]
[-132.19277954 44.99527740]
[-122.88241577 57.12139511]
[-119.42844391 69.98930359]
[-121.23202515 81.32656860]
[-126.91813660 89.33997345]
[-112.95503235 94.82009125]
[-98.99192047 100.30020905]
[-85.02881622 105.78031921]
[-71.06571198 111.26043701]
[-56.08081436 111.93341064]
[-41.68268585 107.72699738]
[-27.28455925 103.52059174]
[-12.88642979 99.31417847]
[1.51169884 95.10776520]
[15.90982723 90.90135193]
[30.30795670 86.69494629]
[44.70608521 82.48853302]
[59.10421371 78.28211975]
[68.28007507 66.41606140]
[68.72881317 51.42277145]
[69.17754364 36.42948532]
[69.62627411 21.43619728]
[59.71752167 8.81890106]
[63.54420090 -6.76108932]
[78.17080688 -13.35213757]
[92.37705994 -5.89815474]
[95.26514435 9.88280010]
[84.61956024 21.88492966]
[84.17082977 36.87821579]
[83.72209930 51.87150192]
[83.27336121 66.86479187]
[90.14758301 69.86398315]
[91.60406494 54.93486023]
[106.25262451 51.70689011]
[113.84909821 64.64109039]
[103.89601135 75.86235809]
[110.77023315 78.86154938]
[121.45587158 68.33457947]
[132.14151001 57.80761337]
[142.82716370 47.28064346]
[153.51280212 36.75367737]
[164.19844055 26.22670746]
[149.44808960 23.50142860]
[142.24703979 10.34297276]
[147.90306091 -3.54981422]
[162.24719238 -7.93682766]
[174.70664978 0.41551548]
[176.09820557 15.34984779]
[187.54064941 5.65085316]
[198.98309326 -4.04814053]
[210.42553711 -13.74713516]
[218.59852600 -28.60103798]
[235.13444519 -24.85941315]
[236.11663818 -7.93394136]
[220.12452698 -2.30469108]
[208.68208313 7.39430285]
[197.23963928 17.09329605]
[185.79719543 26.79229164]
[174.72540283 36.91234970]
[164.03976440 47.43931580]
[153.35412598 57.96628571]
[142.66848755 68.49325562]
[131.98284912 79.02022552]
[121.29720306 89.54719543]
[124.14138794 96.48697662]
[139.00567627 98.50016785]
[129.82977295 110.36653900]
[132.67396545 117.30632019]
[147.67396545 117.30632019]
[162.67396545 117.30632019]
[169.24992371 103.53245544]
[181.15629578 93.98252869]
[196.02905273 90.55268860]
[210.91520691 93.92392731]
[222.85910034 103.42689514]
[229.48924255 117.17475891]
[229.48924255 132.43788147]
[222.85910034 146.18574524]
[210.91520691 155.68870544]
[196.02905273 159.05995178]
[181.15629578 155.63011169]
[169.24992371 146.08018494]
[162.67396545 132.30632019]
[147.67396545 132.30632019]
[132.67396545 132.30632019]
[129.67477417 139.18054199]
[143.42320251 145.17892456]
[157.17164612 151.17729187]
[170.91998291 157.17590332]
[164.92114258 170.92414856]
[151.17326355 164.92573547]
[137.42483521 158.92735291]
[123.67639160 152.92897034]
[120.67720032 159.80319214]
[130.87979126 170.79896545]
[141.08238220 181.79473877]
[151.28497314 192.79052734]
[161.48756409 203.78630066]
[171.69015503 214.78207397]
[181.89274597 225.77786255]
[192.09533691 236.77363586]
[202.29792786 247.76940918]
[217.50355530 255.26776123]
[214.50758362 271.95489502]
[197.64321899 273.69546509]
[191.30215454 257.97201538]
[181.09956360 246.97622681]
[170.89697266 235.98045349]
[160.69438171 224.98466492]
[150.49179077 213.98889160]
[140.28919983 202.99311829]
[130.08660889 191.99732971]
[119.88401794 181.00155640]
[109.68142700 170.00578308]
[60.66663742 137.06008911]
[63.31062317 92.68025208]
[48.91249466 96.88666534]
[34.51436615 101.09307098]
[20.11623764 105.29948425]
[5.71810961 109.50589752]
[-8.68001938 113.71230316]
[-23.07814789 117.91871643]
[-37.47627640 122.12512970]
[-51.87440491 126.33153534]
[-37.22219849 129.54289246]
[-22.66506004 125.92492676]
[-7.79007816 127.85752106]
[5.35926104 135.07519531]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 34]
[11 33]
[12 32]
[13 31]
[14 30]
[15 29]
[40 90]
[41 89]
[42 88]
[43 87]
[44 86]
[45 54]
[46 53]
[47 52]
[64 82]
[65 81]
[66 80]
[67 79]
[68 78]
[69 77]
[70 76]
[91 205]
[92 204]
[93 203]
[94 202]
[95 201]
[96 200]
[97 199]
[98 198]
[99 197]
[100 112]
[101 111]
[102 110]
[103 109]
[118 145]
[119 144]
[120 143]
[121 142]
[122 141]
[123 140]
[129 139]
[130 138]
[131 137]
[132 136]
[149 166]
[150 165]
[151 164]
[175 195]
[176 194]
[177 193]
[178 192]
[179 191]
[180 190]
[181 189]
[182 188]
[183 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
