%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 12:41:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCCGGCUCUCCCGCCCUGCACGAGCCCAGGGGCUGAGCGUUCCUAGGCGGUUUCGGGGCUCCCCCUUCCUCUCCCUCCCUCCCGCAGAAGGGGGUUUUAGGGGCCUGGGCUGGGGGGAUGGGGAGGGCACAUCGUGACUGUGUUUUUCAUAACUUAUGUUUUUAUAUGGUUGCAUUUACGCCAAUAAAUCCUCAGCUGGGGUC\
) } def
/len { sequence length } bind def

/coor [
[153.77000427 273.49459839]
[153.69609070 257.69049072]
[164.87820435 246.52197266]
[164.64945984 231.52371216]
[164.42071533 216.52546692]
[164.19195557 201.52720642]
[163.96321106 186.52894592]
[163.73446655 171.53070068]
[163.50572205 156.53244019]
[155.87403870 143.61897278]
[142.84568787 136.18510437]
[129.81735229 128.75125122]
[116.78901672 121.31737518]
[103.76068115 113.88351440]
[88.78204346 113.08324432]
[75.03578949 119.08661652]
[61.28953171 125.08998871]
[47.54327774 131.09335327]
[33.79701996 137.09672546]
[20.05076599 143.10009766]
[19.40554428 158.31013489]
[12.24959564 171.67723083]
[0.04947935 180.57539368]
[-14.74342060 183.28300476]
[-29.18536949 179.31570435]
[-40.42607498 169.51202393]
[-54.17232895 175.51539612]
[-67.91858673 181.51876831]
[-77.46863556 194.13253784]
[-92.22878265 192.13571167]
[-105.97503662 198.13908386]
[-119.72129059 204.14245605]
[-133.46754456 210.14582825]
[-147.21380615 216.14920044]
[-160.96005249 222.15257263]
[-168.13092041 236.50381470]
[-183.85151672 239.70420837]
[-196.06234741 229.29866028]
[-195.39631653 213.26943970]
[-182.36433411 203.91278076]
[-166.96342468 208.40631104]
[-153.21717834 202.40293884]
[-139.47091675 196.39956665]
[-125.72466278 190.39619446]
[-111.97840881 184.39282227]
[-98.23215485 178.38945007]
[-89.66532898 166.20509338]
[-73.92195892 167.77250671]
[-60.17570114 161.76913452]
[-46.42944717 155.76576233]
[-45.98125458 140.85722351]
[-39.07612610 127.56705475]
[-27.03612518 118.55598450]
[-12.21722507 115.65419769]
[2.45162344 119.48979950]
[14.04739380 129.35385132]
[27.79364967 123.35047913]
[41.53990555 117.34710693]
[55.28615952 111.34373474]
[69.03241730 105.34036255]
[82.77867126 99.33699036]
[88.57171631 85.50077820]
[83.20331573 71.49434662]
[77.83491516 57.48790741]
[72.46651459 43.48146820]
[67.09811401 29.47503090]
[61.72971344 15.46859455]
[56.36131668 1.46215713]
[41.79187393 -9.79598522]
[45.21528625 -27.00610733]
[39.63391495 -40.92904663]
[34.05253983 -54.85198975]
[17.65503502 -66.57292938]
[21.21654129 -85.57595062]
[15.21317005 -99.32220459]
[9.20979786 -113.06845856]
[3.20642591 -126.81471252]
[-2.79694629 -140.56097412]
[-20.68383217 -146.79454041]
[-28.20899963 -163.82904053]
[-21.02222443 -180.66239929]
[-27.44201279 -194.21917725]
[-33.86180115 -207.77595520]
[-40.28158951 -221.33274841]
[-46.70137787 -234.88952637]
[-61.66679764 -239.97004700]
[-68.58145142 -254.18142700]
[-63.34298706 -269.09228516]
[-49.05929947 -275.85629272]
[-34.20464706 -270.46047974]
[-27.59202957 -256.10607910]
[-33.14459610 -241.30931091]
[-26.72480774 -227.75253296]
[-20.30501938 -214.19575500]
[-13.88523102 -200.63896179]
[-7.46544313 -187.08218384]
[3.85955906 -185.66244507]
[13.18839169 -178.88044739]
[18.13398743 -168.32850647]
[17.36216927 -156.58052063]
[10.94930840 -146.56434631]
[16.95268059 -132.81808472]
[22.95605278 -119.07183075]
[28.95942497 -105.32557678]
[34.96279526 -91.57932281]
[44.77742767 -88.71845245]
[51.53752136 -80.75910187]
[52.82529068 -70.17482758]
[47.97548294 -60.43336105]
[53.55685425 -46.51041794]
[59.13822556 -32.58747864]
[70.13522339 -27.54244041]
[74.89788818 -15.98545074]
[70.36775208 -3.90624261]
[75.73615265 10.10019493]
[81.10455322 24.10663223]
[86.47295380 38.11306763]
[91.84135437 52.11950684]
[97.20975494 66.12594604]
[102.57814789 80.13237762]
[110.14305878 86.23490906]
[112.87498474 94.09908295]
[111.19454193 100.85517120]
[124.22288513 108.28903961]
[137.25122070 115.72290802]
[150.27955627 123.15677643]
[163.30790710 130.59063721]
[200.72424316 120.43214417]
[215.70854187 121.11817932]
[230.69284058 121.80420685]
[238.29882812 107.42288208]
[251.36763000 97.83173370]
[267.25354004 94.90954590]
[282.76776123 99.19129181]
[294.81863403 109.77106476]
[301.02764893 124.49318695]
[316.02066040 124.95063019]
[331.01370239 125.40807343]
[346.00671387 125.86551666]
[360.99972534 126.32295990]
[375.99276733 126.78040314]
[390.98577881 127.23784637]
[405.97879028 127.69528961]
[420.97183228 128.15272522]
[435.96484375 128.61016846]
[444.51806641 114.46194458]
[458.95593262 106.60170746]
[475.29351807 107.09109497]
[489.07574463 115.70195007]
[496.59204102 130.00436401]
[511.59030151 130.23310852]
[526.58856201 130.46185303]
[541.58679199 130.69061279]
[557.51629639 124.88651276]
[567.50329590 138.58674622]
[557.10314941 151.97604370]
[541.35803223 145.68885803]
[526.35980225 145.46011353]
[511.36154175 145.23136902]
[496.36328125 145.00262451]
[490.14181519 157.16270447]
[479.23510742 165.49522400]
[465.73767090 168.32830811]
[452.27249146 165.05311584]
[441.48159790 156.25357056]
[435.50741577 143.60319519]
[420.51437378 143.14575195]
[405.52136230 142.68830872]
[390.52835083 142.23086548]
[375.53530884 141.77342224]
[360.54229736 141.31597900]
[345.54925537 140.85853577]
[330.55624390 140.40109253]
[315.56323242 139.94364929]
[300.57019043 139.48622131]
[294.78448486 152.09774780]
[284.59634399 161.58094788]
[271.52191162 166.47950745]
[257.52404785 166.02272034]
[244.71781921 160.24655151]
[235.05075073 149.99322510]
[230.00682068 136.78851318]
[215.02250671 136.10247803]
[200.03820801 135.41645813]
[194.65464783 140.63825989]
[207.47570801 148.42416382]
[222.44210815 149.42768860]
[233.66587830 159.37890625]
[236.45457458 174.11740112]
[229.64227295 187.48124695]
[216.07708740 193.88327026]
[201.43038940 190.64686584]
[191.82571411 179.12513733]
[191.27882385 164.13441467]
[183.88752747 151.08187866]
[178.50396729 156.30369568]
[178.73272705 171.30194092]
[178.96147156 186.30020142]
[179.19021606 201.29846191]
[179.41896057 216.29670715]
[179.64770508 231.29496765]
[179.87646484 246.29322815]
[191.39398193 257.11553955]
[191.80204773 272.91455078]
[180.85858154 284.31701660]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 202]
[4 201]
[5 200]
[6 199]
[7 198]
[8 197]
[9 196]
[10 127]
[11 126]
[12 125]
[13 124]
[14 123]
[15 61]
[16 60]
[17 59]
[18 58]
[19 57]
[20 56]
[26 50]
[27 49]
[28 48]
[30 46]
[31 45]
[32 44]
[33 43]
[34 42]
[35 41]
[62 120]
[63 119]
[64 118]
[65 117]
[66 116]
[67 115]
[68 114]
[70 111]
[71 110]
[72 109]
[74 105]
[75 104]
[76 103]
[77 102]
[78 101]
[81 96]
[82 95]
[83 94]
[84 93]
[85 92]
[128 184]
[129 183]
[130 182]
[136 175]
[137 174]
[138 173]
[139 172]
[140 171]
[141 170]
[142 169]
[143 168]
[144 167]
[145 166]
[150 160]
[151 159]
[152 158]
[153 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
