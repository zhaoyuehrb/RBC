%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 13:19:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCCGCCCACCCCACGGAGGCCACAGCCACACAGCCACGCCCCCUGAUUCUGGAACUCGCCCAACUUCCCUACUGGCUGCUCCCCUUGGGUCCCGCCCACCAGCGGACUCGGCCCCCAAGGCUCCGCCCACACUGACCACGCCCCUCGGCGGGGCCGCCCUCUGCUCCAGCCCUCCCGAUUAAAGCGUGCCCCGGUCCAA\
) } def
/len { sequence length } bind def

/coor [
[194.61967468 226.47456360]
[186.77172852 226.90802002]
[178.94148254 226.18449402]
[171.29867554 224.31860352]
[164.00910950 221.34968567]
[157.23112488 217.34106445]
[151.11207581 212.37864685]
[145.78523254 206.56910706]
[141.36674500 200.03753662]
[137.95324707 192.92483521]
[135.61965942 185.38461304]
[134.41757202 177.57987976]
[134.37406921 169.67956543]
[135.49119568 161.85478210]
[137.74583435 154.27519226]
[141.09014893 147.10530090]
[129.17802429 137.98931885]
[117.26589203 128.87332153]
[105.35376740 119.75733185]
[90.39910126 120.92259216]
[80.04280090 131.77372742]
[69.68650055 142.62484741]
[66.34062195 158.67904663]
[50.68183136 163.55082703]
[38.81854630 152.22853088]
[42.95469666 136.35955811]
[58.83536530 132.26855469]
[69.19166565 121.41741943]
[79.54796600 110.56629181]
[77.25254059 103.42619324]
[62.59008789 100.26192474]
[72.66168213 89.14599609]
[70.36624908 82.00589752]
[55.62672043 79.22267914]
[40.88719177 76.43946838]
[26.14766312 73.65625000]
[11.40813446 70.87303162]
[-3.33139420 68.08981323]
[-9.69740486 78.77843475]
[-19.01906967 86.98035431]
[-30.38615990 91.91467285]
[-42.69483566 93.11860657]
[-54.75482559 90.49080658]
[-65.40454102 84.29974365]
[-73.62294769 75.15634155]
[-78.62745667 63.95374680]
[-79.94841766 51.78004456]
[-94.54209137 48.31240082]
[-106.31776428 58.24415588]
[-121.50608826 59.32500458]
[-134.26756287 51.34949875]
[-139.81925964 37.55396652]
[-154.41293335 34.08632278]
[-169.00662231 30.61867714]
[-181.44645691 40.09413528]
[-197.06411743 39.30494308]
[-208.48541260 28.62373734]
[-210.31755066 13.09385395]
[-201.69544983 0.04802969]
[-186.69021606 -4.35389614]
[-172.38685608 1.96653092]
[-165.53897095 16.02499962]
[-150.94529724 19.49264336]
[-136.35160828 22.96028900]
[-125.18769073 13.13659954]
[-110.20262146 11.75403309]
[-97.12389374 19.55149460]
[-91.07444763 33.71872330]
[-76.48077393 37.18636703]
[-65.85124969 23.05006409]
[-50.06369400 14.95990372]
[-32.27496338 14.58561134]
[-16.06488991 22.04881859]
[-4.71585512 35.88926697]
[-0.54817796 53.35028839]
[14.19135094 56.13350296]
[28.93087959 58.91672134]
[43.67040634 61.69993591]
[58.40993881 64.48315430]
[73.14946747 67.26637268]
[79.10552979 62.70837402]
[69.98973846 50.79609680]
[81.90216064 41.68050385]
[91.01765442 53.59238434]
[96.97371674 49.03438950]
[98.13896942 34.07971954]
[99.30422974 19.12504768]
[100.46949005 4.17037678]
[101.63474274 -10.78429413]
[102.80000305 -25.73896408]
[103.96526337 -40.69363403]
[93.96849823 -52.63944626]
[95.36326599 -67.78900909]
[106.81337738 -77.24578094]
[107.97863770 -92.20045471]
[109.14389801 -107.15512085]
[99.63508606 -124.92460632]
[111.23998260 -140.38591003]
[111.93959045 -155.36958313]
[101.11369324 -166.88372803]
[101.68386078 -182.67771912]
[113.31182098 -193.38128662]
[129.09890747 -192.64416504]
[139.67892456 -180.90368652]
[138.77493286 -165.12527466]
[126.92326355 -154.66996765]
[126.22365570 -139.68629456]
[133.76152039 -132.77438354]
[136.30007935 -122.64073944]
[132.76564026 -112.57691193]
[124.09856415 -105.98986816]
[122.93331146 -91.03519440]
[121.76805115 -76.08052063]
[131.61512756 -64.96428680]
[130.64642334 -49.78152847]
[118.91992950 -39.52837753]
[117.75467682 -24.57370758]
[116.58941650 -9.61903667]
[115.42415619 5.33563423]
[114.25890350 20.29030418]
[113.09364319 35.24497604]
[111.92838287 50.19964600]
[130.90147400 86.22096252]
[114.46975708 107.84520721]
[126.38188171 116.96119690]
[138.29400635 126.07719421]
[150.20613098 135.19317627]
[170.03712463 122.89617920]
[193.17340088 120.17166901]
[215.24623108 127.50163269]
[232.10148621 143.47254944]
[240.58140564 165.04788208]
[239.11618042 188.14538574]
[252.81301880 194.26063538]
[266.50985718 200.37590027]
[280.20672607 206.49114990]
[296.42352295 199.94027710]
[312.05447388 207.00236511]
[317.63278198 222.86462402]
[331.42309570 228.76612854]
[345.21337891 234.66763306]
[359.00366211 240.56913757]
[372.79397583 246.47064209]
[388.07232666 236.71806335]
[405.98980713 238.07154846]
[419.39312744 249.80163574]
[423.04483032 267.07403564]
[437.01199341 272.54379272]
[450.97915649 278.01358032]
[464.94631958 283.48333740]
[480.61767578 281.31106567]
[489.64718628 293.15661621]
[503.61434937 298.62640381]
[517.58148193 304.09616089]
[531.54864502 309.56594849]
[545.51580811 315.03570557]
[566.46185303 310.53253174]
[578.66491699 327.17260742]
[592.87200928 331.98498535]
[607.83489990 326.19778442]
[621.61547852 334.41204834]
[623.64251709 350.32653809]
[612.36102295 361.73300171]
[596.42517090 359.88137817]
[588.05963135 346.19207764]
[573.85253906 341.37966919]
[566.62799072 346.56259155]
[557.69195557 347.85540771]
[549.03472900 344.84222412]
[542.64331055 338.08056641]
[540.04608154 329.00286865]
[526.07891846 323.53311157]
[512.11175537 318.06332397]
[498.14456177 312.59356689]
[484.17739868 307.12377930]
[469.50506592 309.68728638]
[459.47653198 297.45050049]
[445.50936890 291.98074341]
[431.54220581 286.51095581]
[417.57504272 281.04119873]
[408.42562866 289.03250122]
[396.67648315 292.39257812]
[384.54275513 290.42407227]
[374.33935547 283.44027710]
[368.03933716 272.71725464]
[366.89245605 260.26095581]
[353.10217285 254.35943604]
[339.31185913 248.45793152]
[325.52157593 242.55642700]
[311.73129272 236.65492249]
[300.55410767 243.07432556]
[287.52615356 241.86363220]
[277.42712402 233.24192810]
[274.09146118 220.18800354]
[260.39462280 214.07273865]
[246.69776917 207.95748901]
[233.00091553 201.84223938]
[228.37237549 208.16740417]
[222.86294556 213.74729919]
[216.59121704 218.46028137]
[209.69238281 222.20338440]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 127]
[17 126]
[18 125]
[19 124]
[20 29]
[21 28]
[22 27]
[33 80]
[34 79]
[35 78]
[36 77]
[37 76]
[38 75]
[47 69]
[48 68]
[52 64]
[53 63]
[54 62]
[85 122]
[86 121]
[87 120]
[88 119]
[89 118]
[90 117]
[91 116]
[94 113]
[95 112]
[96 111]
[98 107]
[99 106]
[133 197]
[134 196]
[135 195]
[136 194]
[139 190]
[140 189]
[141 188]
[142 187]
[143 186]
[147 180]
[148 179]
[149 178]
[150 177]
[152 175]
[153 174]
[154 173]
[155 172]
[156 171]
[158 166]
[159 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
