%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 12:30:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGCCCUACUCCCUUCACCUGGCCCUCUGUUCCUGCCCCAGCCCCUUCCCCAGACCCCUCUCCAGUCUCCUGCACCCCUUAGCCCUCCCUGCUUUGCCUGGCCCGUUGAAGUUCCAGGGAGCUUGCCCGGGUCUCCUCGGGGGAGCAGAUGAGGGCCCUGCCCCCGCCCCACUGACUUCCUCCAAUAAAGUCAUGUCUGCCCCCAACCUAA\
) } def
/len { sequence length } bind def

/coor [
[212.71315002 503.75686646]
[205.84169006 499.48703003]
[199.41972351 494.56539917]
[193.50888062 489.03890991]
[188.16587830 482.96041870]
[183.44204712 476.38796997]
[179.38278198 469.38439941]
[176.02713013 462.01669312]
[173.40739441 454.35534668]
[171.54885864 446.47366333]
[170.46949768 438.44708252]
[170.17982483 430.35244751]
[170.68284607 422.26730347]
[171.97389221 414.26907349]
[174.04081726 406.43438721]
[176.86399841 398.83834839]
[180.41658020 391.55374146]
[184.66470337 384.65045166]
[189.56785583 378.19467163]
[195.07922363 372.24838257]
[201.14616394 366.86859131]
[207.71069336 362.10705566]
[200.69467163 348.84899902]
[193.67866516 335.59097290]
[186.66264343 322.33294678]
[179.64663696 309.07489014]
[172.63061523 295.81686401]
[165.61460876 282.55883789]
[155.35563660 282.29290771]
[146.05970764 277.75787354]
[139.43296814 269.71148682]
[136.72247314 259.56253052]
[138.48185730 249.12435913]
[144.45983887 240.29086304]
[138.03713989 226.73545837]
[131.61444092 213.18005371]
[125.19173431 199.62464905]
[121.81982422 214.24075317]
[111.15502167 224.78883362]
[96.50270844 227.99969482]
[82.40412140 222.87817383]
[73.22888947 211.01162720]
[71.82072449 196.07786560]
[78.61606598 182.70538330]
[91.50880432 175.03874207]
[106.50305176 175.45411682]
[118.95139313 183.82250977]
[114.37931061 169.53630066]
[109.80722046 155.25007629]
[105.23513794 140.96385193]
[100.66304779 126.67764282]
[96.09096527 112.39141846]
[91.09950256 98.24626923]
[85.69301605 84.25449371]
[80.28652954 70.26271057]
[74.88004303 56.27093124]
[69.47355652 42.27915192]
[64.06707001 28.28737259]
[51.66933441 26.69979668]
[41.18352509 20.03098297]
[34.56618881 9.59797955]
[33.02102661 -2.58689046]
[36.78033829 -14.20405293]
[45.07248306 -23.06824684]
[40.08102417 -37.21339798]
[35.08956909 -51.35855103]
[23.20101547 -61.79756165]
[26.26219177 -76.37419891]
[21.27073288 -90.51935577]
[16.27927399 -104.66450500]
[11.28781509 -118.80966187]
[6.29635668 -132.95481873]
[-8.84246826 -133.15808105]
[-22.97179413 -138.51850891]
[-34.39315033 -148.37106323]
[-41.74065781 -161.51200867]
[-44.14436722 -176.34587097]
[-41.33322144 -191.07923889]
[-33.66546249 -203.93748474]
[-22.08311653 -213.37860107]
[-27.07457542 -227.52374268]
[-32.06603241 -241.66889954]
[-37.05749130 -255.81405640]
[-42.04895020 -269.95919800]
[-56.77646255 -274.47656250]
[-65.91325378 -286.65737915]
[-66.12308502 -301.70465088]
[-57.53504944 -313.84481812]
[-62.52650452 -327.98995972]
[-76.50488281 -334.86331177]
[-81.36542511 -349.27960205]
[-74.72660828 -362.56347656]
[-79.71807098 -376.70864868]
[-90.69052124 -389.63308716]
[-81.30863190 -403.75457764]
[-65.14184570 -398.64855957]
[-65.57291412 -381.70010376]
[-60.58145523 -367.55493164]
[-47.07593536 -361.37948608]
[-41.81238174 -347.10537720]
[-48.38135529 -332.98141479]
[-43.38989639 -318.83627319]
[-29.08463287 -314.77456665]
[-19.80434418 -302.92803955]
[-19.27299118 -287.71057129]
[-27.90379906 -274.95065308]
[-22.91234016 -260.80551147]
[-17.92088127 -246.66035461]
[-12.92942333 -232.51519775]
[-7.93796444 -218.37005615]
[7.00454903 -218.28887939]
[21.04400826 -213.09054565]
[32.47924042 -203.38435364]
[39.91759491 -190.32708740]
[42.44453430 -175.48509216]
[39.73605347 -160.64648438]
[32.10005951 -147.60565186]
[20.44150925 -137.94627380]
[25.43296814 -123.80111694]
[30.42442703 -109.65596771]
[35.41588593 -95.51081085]
[40.40734482 -81.36566162]
[51.93887329 -71.93840790]
[49.23471832 -56.35000992]
[54.22617722 -42.20485687]
[59.21763611 -28.05970573]
[76.36147308 -23.81673050]
[87.62466431 -10.00967407]
[88.35019684 7.95133257]
[78.05884552 22.88088417]
[83.46533203 36.87266541]
[88.87181854 50.86444473]
[94.27831268 64.85622406]
[99.68479919 78.84799957]
[105.09128571 92.83978271]
[107.76204681 94.30477905]
[109.95915985 96.77334595]
[111.31011200 100.07205200]
[111.51160431 103.89237213]
[110.37718201 107.81933594]
[114.94926453 122.10555267]
[119.52135468 136.39176941]
[124.09344482 150.67799377]
[128.66552734 164.96420288]
[133.23760986 179.25042725]
[138.74713135 193.20195007]
[145.16984558 206.75735474]
[151.59254456 220.31275940]
[158.01524353 233.86816406]
[177.26954651 239.61337280]
[185.95478821 257.39324951]
[178.87263489 275.54281616]
[185.88865662 288.80084229]
[192.90466309 302.05889893]
[199.92068481 315.31692505]
[206.93669128 328.57495117]
[213.95271301 341.83300781]
[220.96871948 355.09103394]
[243.99845886 349.19662476]
[267.74316406 350.08380127]
[290.24826050 357.67343140]
[309.66305542 371.33483887]
[324.39273071 389.93832397]
[333.22955322 411.94854736]
[335.45169067 435.55120850]
[330.88235474 458.80270386]
[319.90380859 479.79003906]
[331.22686768 489.62814331]
[344.46405029 487.14486694]
[356.53851318 492.65795898]
[363.13571167 503.95111084]
[362.04083252 516.78887939]
[373.21755981 526.79290771]
[384.46777344 536.71423340]
[395.79083252 546.55236816]
[407.11389160 556.39044189]
[418.43695068 566.22857666]
[429.76000977 576.06665039]
[441.08306885 585.90478516]
[455.86218262 581.47961426]
[470.68121338 585.76910400]
[480.81149292 597.40441895]
[483.02047729 612.67279053]
[476.60330200 626.70214844]
[463.60766602 635.01580811]
[448.18038940 634.96081543]
[435.24429321 626.55480957]
[428.92724609 612.48010254]
[431.24496460 597.22784424]
[419.92190552 587.38970947]
[408.59884644 577.55163574]
[397.27578735 567.71350098]
[385.95272827 557.87542725]
[374.62966919 548.03729248]
[367.51983643 546.02349854]
[363.21353149 537.96966553]
[352.03680420 527.96563721]
[335.29904175 529.61157227]
[322.29403687 518.42187500]
[321.38876343 500.95120239]
[310.06570435 491.11309814]
[303.97583008 496.41931152]
[297.39566040 501.10543823]
[290.38809204 505.12643433]
[283.02014160 508.44357300]
[275.36230469 511.02499390]
[267.48788452 512.84570312]
[259.47222900 513.88812256]
[251.39207458 514.14208984]
[243.32481384 513.60498047]
[235.34771729 512.28173828]
[227.53721619 510.18481445]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 158]
[23 157]
[24 156]
[25 155]
[26 154]
[27 153]
[28 152]
[34 149]
[35 148]
[36 147]
[37 146]
[47 145]
[48 144]
[49 143]
[50 142]
[51 141]
[52 140]
[53 135]
[54 134]
[55 133]
[56 132]
[57 131]
[58 130]
[64 126]
[65 125]
[66 124]
[68 122]
[69 121]
[70 120]
[71 119]
[72 118]
[80 110]
[81 109]
[82 108]
[83 107]
[84 106]
[88 102]
[89 101]
[92 98]
[93 97]
[167 201]
[168 200]
[172 197]
[173 196]
[174 194]
[175 193]
[176 192]
[177 191]
[178 190]
[179 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
