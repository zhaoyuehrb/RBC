%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 14:51:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCUUCAUAGGUUUGAACACUGUGUGUUUUUACCAAAGUGGCCAUUGGCACUGUUUGCUUUUUUACAAUCAUGUGGACACAAGCAUAAGUAAAGAAAAUUUGUCAACCAGGCAA\
) } def
/len { sequence length } bind def

/coor [
[81.87453461 173.08123779]
[68.19916534 179.24436951]
[53.47166443 176.39817810]
[43.07739639 165.58341980]
[40.81719208 150.75466919]
[47.51693726 137.33496094]
[33.25109100 141.97021484]
[18.98524284 146.60546875]
[6.34906721 162.19552612]
[-12.37525463 157.70259094]
[-26.36668777 163.10997009]
[-40.35811996 168.51736450]
[-46.81527328 182.69279480]
[-61.08160782 187.97734070]
[-74.55592346 181.73406982]
[-88.54735565 187.14144897]
[-102.53878784 192.54884338]
[-116.53022003 197.95622253]
[-130.52165222 203.36360168]
[-144.51309204 208.77099609]
[-157.10757446 220.12068176]
[-171.50019836 211.16029358]
[-166.87426758 194.84965515]
[-149.92047119 194.77955627]
[-135.92903137 189.37217712]
[-121.93760681 183.96479797]
[-107.94617462 178.55740356]
[-93.95474243 173.15002441]
[-79.96331024 167.74263000]
[-74.18973541 154.06047058]
[-60.07746506 148.37730408]
[-45.76550293 154.52592468]
[-31.77407265 149.11854553]
[-17.78263855 143.71115112]
[-14.42970181 133.88342285]
[-6.00022030 127.44795990]
[4.80543327 126.77579498]
[14.34998703 132.33961487]
[28.61583519 127.70436859]
[42.88168335 123.06911469]
[56.55694580 116.90573883]
[69.47849274 109.28775787]
[82.40003967 101.66977692]
[90.60881805 85.02159882]
[109.17026520 84.88533783]
[121.65651703 76.57308960]
[134.14277649 68.26084900]
[146.62902832 59.94859695]
[159.11528015 51.63635254]
[170.21664429 41.54874420]
[179.68296814 29.91307449]
[189.14927673 18.27740479]
[186.23661804 5.04399872]
[191.44241333 -7.25431538]
[202.63832092 -14.16943550]
[215.57582092 -13.34297276]
[225.35644531 -24.71573067]
[235.13705444 -36.08848572]
[244.91766357 -47.46124649]
[254.69827271 -58.83400345]
[257.39453125 -78.72000122]
[275.72741699 -84.61000824]
[284.87237549 -96.49990845]
[294.01733398 -108.38980103]
[303.16229248 -120.27970123]
[312.30725098 -132.16960144]
[321.45220947 -144.05949402]
[323.07369995 -160.37829590]
[338.12634277 -166.88597107]
[351.12527466 -156.88800049]
[348.69833374 -140.66943359]
[333.34210205 -134.91453552]
[324.19714355 -123.02464294]
[315.05218506 -111.13474274]
[305.90722656 -99.24484253]
[296.76226807 -87.35494232]
[287.61730957 -75.46504974]
[289.85882568 -65.32589722]
[286.00027466 -55.44749451]
[277.11697388 -49.25874710]
[266.07104492 -49.05339050]
[256.29043579 -37.68063354]
[246.50981140 -26.30787468]
[236.72920227 -14.93511677]
[226.94857788 -3.56235981]
[228.95906067 13.07286739]
[218.15463257 26.31703949]
[200.78494263 27.74372482]
[191.31863403 39.37939453]
[181.85231018 51.01506424]
[196.57456970 48.14188004]
[210.99287415 52.27861404]
[221.95240784 62.52012253]
[227.05517578 76.62550354]
[225.18466187 91.50841522]
[216.75013733 103.91239929]
[203.59712219 111.12339020]
[188.60359192 111.56357574]
[175.05018616 105.13665009]
[165.90249634 93.24885559]
[163.16207886 78.50131226]
[167.42753601 64.12260437]
[154.94126892 72.43485260]
[142.45501709 80.74710083]
[129.96876526 89.05934906]
[117.48251343 97.37159729]
[116.06389618 107.38227844]
[109.39118195 114.97840118]
[99.64684296 117.67546082]
[90.01802063 114.59132385]
[77.09647369 122.20930481]
[64.17492676 129.82728577]
[78.66727448 133.69660950]
[88.27966309 145.21191406]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 40]
[7 39]
[8 38]
[10 34]
[11 33]
[12 32]
[15 29]
[16 28]
[17 27]
[18 26]
[19 25]
[20 24]
[41 112]
[42 111]
[43 110]
[45 106]
[46 105]
[47 104]
[48 103]
[49 102]
[50 90]
[51 89]
[52 88]
[56 85]
[57 84]
[58 83]
[59 82]
[60 81]
[62 77]
[63 76]
[64 75]
[65 74]
[66 73]
[67 72]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
