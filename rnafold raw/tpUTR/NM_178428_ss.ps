%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 18:45:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGACCUCGAACAUCACAGAGCAACCCUUAUGGAGAAACUUGCAACCAGGACCUGUCCCAGAGUGAUGCUUCUCCUGCCCCUUUUUCUCCUUUCCUUGGGCUGACACACCUUGUGAGGUGUUUUGUCUGUUGUCAUGGCCCAAGAGCCCAUCCUGGAUCCUGAUCUUACCUUCCCACUUUACCUCAUACAACAAUAAAGCUCUUUUGCCUCUUCGUGAA\
) } def
/len { sequence length } bind def

/coor [
[104.83026886 324.90243530]
[104.69017029 340.06015015]
[99.37136841 354.25473022]
[89.51613617 365.77212524]
[76.31453705 373.22152710]
[61.36074448 375.70343018]
[46.46048737 372.91809082]
[33.41304398 365.20184326]
[23.79396629 353.48651123]
[18.76479530 339.18676758]
[18.93283272 324.02932739]
[24.27778625 309.84457397]
[34.15422821 298.34536743]
[47.36952591 290.92028809]
[62.32786942 288.46597290]
[65.08411407 273.72137451]
[67.84035492 258.97677612]
[70.59659576 244.23217773]
[73.14296722 229.44989014]
[75.47895813 214.63290405]
[77.81494141 199.81591797]
[80.15093231 184.99893188]
[82.38154602 170.16571045]
[84.50666809 155.31701660]
[86.63179779 140.46830750]
[80.41786194 137.85409546]
[74.69387817 134.29275513]
[69.60307312 129.87339783]
[65.27280426 124.70658112]
[61.81143951 118.92160034]
[59.30556870 112.66318512]
[57.81789398 106.08793640]
[57.38563538 99.36035919]
[42.66100311 96.49938202]
[27.93636894 93.63841248]
[13.21173477 90.77744293]
[-1.51289856 87.91646576]
[-16.23753166 85.05549622]
[-30.96216583 82.19452667]
[-37.73729706 93.79402924]
[-47.73864365 102.72782898]
[-59.98451233 108.13782501]
[-73.27868652 109.51089478]
[-86.32723999 106.72747803]
[-97.86450958 100.07192230]
[-106.77583313 90.20341492]
[-112.20525360 78.09079742]
[-113.63771057 64.91740417]
[-128.27507019 61.63901520]
[-142.91241455 58.36062622]
[-157.54977417 55.08223343]
[-172.18713379 51.80384445]
[-183.83320618 61.88723755]
[-199.00627136 63.16465759]
[-211.86994934 55.35506058]
[-217.59980774 41.63257217]
[-232.23715210 38.35417938]
[-245.48222351 46.55209351]
[-260.27987671 43.01882553]
[-268.01373291 30.34115028]
[-282.65106201 27.06275940]
[-299.42877197 29.50112915]
[-306.41635132 14.05413055]
[-293.50738525 3.06345129]
[-279.37268066 12.42540359]
[-264.73532104 15.70379543]
[-252.33268738 7.53617382]
[-237.44161987 10.65241337]
[-228.95877075 23.71682549]
[-214.32141113 26.99521637]
[-203.28562927 17.02779770]
[-188.31970215 15.45131588]
[-175.14111328 23.07877541]
[-168.90873718 37.16648865]
[-154.27137756 40.44487762]
[-139.63403320 43.72327042]
[-124.99667358 47.00166321]
[-110.35931396 50.28005219]
[-101.09783936 36.43484116]
[-87.19658661 27.19108009]
[-70.77447510 23.99171638]
[-54.34774780 27.35577202]
[-40.44444275 36.79438782]
[-31.21532440 50.88164139]
[-28.10119438 67.46989441]
[-13.37656021 70.33086395]
[1.34807360 73.19183350]
[16.07270813 76.05281067]
[30.79734039 78.91378021]
[45.52197647 81.77474976]
[60.24660873 84.63572693]
[65.83757019 74.51821136]
[73.94168854 66.27526855]
[83.96279144 60.51327896]
[95.16366577 57.65613174]
[106.72032928 57.91401291]
[117.78260803 61.26794815]
[127.53671265 67.47120667]
[135.26507568 76.06744385]
[148.96536255 69.95989990]
[162.66566467 63.85235977]
[176.36595154 57.74481583]
[190.06623840 51.63727570]
[188.09143066 36.67131042]
[190.41142273 21.77030754]
[196.82977295 8.14056492]
[206.81858826 -3.11696839]
[219.56193542 -11.09562874]
[234.02253723 -15.15605068]
[249.02616882 -14.97739697]
[263.35699463 -10.58269215]
[275.85607910 -2.33626699]
[285.51525879 9.08643341]
[299.21554565 2.97889090]
[312.91583252 -3.12865138]
[326.61611938 -9.23619366]
[340.31640625 -15.34373569]
[354.01669312 -21.45127869]
[367.71697998 -27.55882072]
[381.41726685 -33.66636276]
[395.11755371 -39.77390289]
[398.44174194 -54.81571579]
[409.85223389 -64.89807892]
[424.83441162 -66.31153107]
[437.62295532 -58.72267151]
[451.32327271 -64.83021545]
[454.55862427 -82.67707062]
[467.74761963 -94.89772797]
[485.47592163 -96.73299408]
[500.61880493 -87.63527679]
[514.13995361 -94.12980652]
[524.75848389 -111.27044678]
[543.95935059 -108.95146942]
[557.29040527 -115.82773590]
[570.62145996 -122.70401001]
[583.95251465 -129.58027649]
[590.13909912 -136.29046631]
[597.52233887 -136.45802307]
[610.94976807 -143.14408875]
[620.76660156 -158.72729492]
[638.22912598 -156.95581055]
[651.56018066 -163.83207703]
[664.89117432 -170.70835876]
[673.60900879 -183.91102600]
[688.46710205 -182.86900330]
[701.79815674 -189.74528503]
[708.02978516 -204.52857971]
[723.51165771 -208.73484802]
[736.36730957 -199.13739014]
[736.73504639 -183.09855652]
[724.33276367 -172.92196655]
[708.67443848 -176.41423035]
[695.34338379 -169.53796387]
[687.57910156 -156.82713318]
[671.76745605 -157.37730408]
[658.43640137 -150.50103760]
[645.10534668 -143.62477112]
[641.12988281 -132.20501709]
[630.08605957 -126.36550140]
[617.63586426 -129.71664429]
[604.20837402 -123.03057098]
[590.82879639 -116.24922180]
[577.49774170 -109.37295532]
[564.16668701 -102.49668884]
[550.83563232 -95.62041473]
[548.61773682 -85.65496826]
[541.12597656 -78.40013123]
[530.66320801 -76.42156982]
[520.63446045 -80.60867310]
[507.11334229 -74.11414337]
[506.72952271 -61.98866272]
[501.19659424 -51.11130524]
[491.50875854 -43.57191086]
[479.46490479 -40.84812546]
[467.33468628 -43.51609039]
[457.43081665 -51.12992477]
[443.73049927 -45.02238083]
[440.82675171 -30.43793297]
[429.76095581 -20.23928642]
[414.63482666 -18.49172401]
[401.22509766 -26.07361412]
[387.52481079 -19.96607208]
[373.82452393 -13.85853004]
[360.12423706 -7.75098848]
[346.42395020 -1.64344621]
[332.72366333 4.46409607]
[319.02337646 10.57163811]
[305.32308960 16.67918015]
[291.62277222 22.78672218]
[293.66232300 37.60622406]
[291.44110107 52.41492081]
[285.13070679 66.01141357]
[275.23477173 77.29020691]
[262.54885864 85.33160400]
[248.09651184 89.47669220]
[233.04663086 89.38131714]
[218.61892700 85.04467773]
[205.98512268 76.81002808]
[196.17378235 65.33756256]
[182.47349548 71.44510651]
[168.77319336 77.55265045]
[155.07290649 83.66018677]
[141.37261963 89.76773071]
[140.02970886 114.62926483]
[125.02545166 134.49810791]
[101.48049927 142.59344482]
[99.35536957 157.44213867]
[97.23023987 172.29083252]
[99.11148071 181.22175598]
[94.96791840 187.33491516]
[92.63193512 202.15190125]
[90.29594421 216.96888733]
[87.95996094 231.78587341]
[89.96972656 238.07202148]
[88.69908905 243.60171509]
[85.34119415 246.98841858]
[82.58495331 261.73303223]
[79.82871246 276.47763062]
[77.07246399 291.22219849]
[90.13410187 298.91436768]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 219]
[16 218]
[17 217]
[18 216]
[19 213]
[20 212]
[21 211]
[22 210]
[23 208]
[24 207]
[25 206]
[33 91]
[34 90]
[35 89]
[36 88]
[37 87]
[38 86]
[39 85]
[48 78]
[49 77]
[50 76]
[51 75]
[52 74]
[56 70]
[57 69]
[60 66]
[61 65]
[99 203]
[100 202]
[101 201]
[102 200]
[103 199]
[113 189]
[114 188]
[115 187]
[116 186]
[117 185]
[118 184]
[119 183]
[120 182]
[121 181]
[125 177]
[126 176]
[130 170]
[131 169]
[133 165]
[134 164]
[135 163]
[136 162]
[138 161]
[139 160]
[141 157]
[142 156]
[143 155]
[145 153]
[146 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
