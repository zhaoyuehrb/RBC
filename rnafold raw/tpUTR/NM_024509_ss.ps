%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 06:21:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGGCGCCCCCCCCUCUAAGGGUCCUCUGGCCCCACGGACAGCAGGACCCGGACACCCUGUGGGACCUGGCCUCAAACUCACCAAAUCGCUCAUGGUUUUUAAAACUCUGAUGGGGAGGGUGUCGGGGACACCGGGGCAAAACAAGAAAGUCCUAUUUUUCCAAGCUUGGGCGAA\
) } def
/len { sequence length } bind def

/coor [
[180.28045654 304.32388306]
[178.95101929 289.38290405]
[177.62158203 274.44192505]
[176.29214478 259.50097656]
[174.96270752 244.55999756]
[173.63327026 229.61901855]
[168.92211914 215.37806702]
[161.07896423 202.59193420]
[153.23582458 189.80581665]
[145.39266968 177.01968384]
[137.54951477 164.23356628]
[129.14691162 151.80793762]
[120.20140076 139.76725769]
[111.25588989 127.72658539]
[102.31037903 115.68591309]
[105.08539581 130.42698669]
[96.07373047 142.41822815]
[81.14247894 143.85269165]
[70.01269531 133.79646301]
[69.93047333 118.79668427]
[80.94892883 108.61918640]
[66.58760071 112.94956970]
[52.22626877 117.27994537]
[37.86494064 121.61032867]
[23.50360870 125.94070435]
[9.14227867 130.27108765]
[-5.21905184 134.60147095]
[-19.54138756 139.05912781]
[-33.82360077 143.64370728]
[-48.10581207 148.22828674]
[-58.88079071 159.81321716]
[-73.36385345 156.33610535]
[-87.64606476 160.92070007]
[-98.25561523 173.42547607]
[-114.33921051 170.22392273]
[-119.35142517 154.60951233]
[-108.13612366 142.64501953]
[-92.23064423 146.63848877]
[-77.94843292 142.05389404]
[-68.19501495 130.79689026]
[-52.69039536 133.94607544]
[-38.40818405 129.36149597]
[-24.12597084 124.77690887]
[-18.70124817 119.72289276]
[-9.54943085 120.24013519]
[4.81189966 115.90975189]
[19.17323112 111.57937622]
[33.53456116 107.24899292]
[47.89589310 102.91861725]
[62.25722122 98.58823395]
[76.61855316 94.25785828]
[86.28765106 90.40262604]
[94.76882935 92.19197083]
[95.03505707 77.19432831]
[95.30127716 62.19669342]
[95.56749725 47.19905853]
[95.83372498 32.20141983]
[96.09994507 17.20378304]
[96.36616516 2.20614505]
[96.63239288 -12.79149246]
[92.42962646 -27.19068718]
[84.13762665 -39.69039536]
[75.84562683 -52.19010544]
[67.55362701 -64.68981171]
[59.26162720 -77.18952179]
[45.82210922 -78.32889557]
[35.64764404 -86.88357544]
[32.31700516 -99.55119324]
[36.83191299 -111.63890076]
[28.76306725 -124.28380585]
[13.96968174 -131.36108398]
[12.97203064 -147.72985840]
[26.79641151 -156.55133057]
[41.22148514 -148.75074768]
[41.40797424 -132.35266113]
[49.47682190 -119.70774841]
[66.02643585 -116.79647064]
[75.54993439 -102.54444885]
[71.76133728 -85.48152161]
[80.05333710 -72.98181152]
[88.34533691 -60.48210526]
[96.63733673 -47.98239517]
[104.92933655 -35.48268890]
[112.42195892 -35.81537628]
[107.15863037 -49.86163330]
[118.89107513 -59.20774078]
[131.40518188 -50.93746948]
[127.40718842 -36.48074722]
[134.89981079 -36.81343460]
[134.67799377 -52.63308716]
[147.54727173 -60.13182068]
[154.58149719 -73.38019562]
[161.49789429 -86.69048309]
[168.41427612 -100.00076294]
[167.91172791 -115.81398010]
[180.64588928 -123.53993988]
[187.56227112 -136.85021973]
[194.47865295 -150.16050720]
[201.39505005 -163.47077942]
[208.31143188 -176.78106689]
[210.24951172 -193.62387085]
[226.97059631 -196.42410278]
[234.29025269 -181.13165283]
[221.62171936 -169.86468506]
[214.70532227 -156.55439758]
[207.78894043 -143.24412537]
[200.87255859 -129.93383789]
[193.95616150 -116.62355804]
[194.95343018 -101.76237488]
[181.72456360 -93.08437347]
[174.80816650 -79.77409363]
[167.89178467 -66.46381378]
[167.59677124 -59.05545807]
[160.73269653 -52.98028946]
[161.46603394 -38.10374832]
[148.08523560 -29.66190338]
[130.35099792 -12.14020920]
[111.63002777 -12.52526951]
[111.36380768 2.47236776]
[111.09757996 17.47000504]
[110.83135986 32.46764374]
[110.56513977 47.46527863]
[110.29891205 62.46291733]
[110.03269196 77.46055603]
[109.76646423 92.45819092]
[114.35105133 106.74040222]
[123.29656219 118.78108215]
[132.24208069 130.82174683]
[141.18757629 142.86242676]
[146.09584045 128.68818665]
[160.17616272 123.51669312]
[173.09196472 131.14442444]
[175.36151123 145.97174072]
[165.31871033 157.11364746]
[150.33563232 156.39041138]
[158.17878723 169.17654419]
[166.02194214 181.96266174]
[173.86509705 194.74877930]
[181.70825195 207.53491211]
[175.57637024 193.84548950]
[177.51425171 178.97120667]
[186.94892883 167.30986023]
[201.09088135 162.30935669]
[215.75880432 165.44815063]
[226.61587524 175.79823303]
[230.45201111 190.29940796]
[226.13343811 204.66346741]
[236.88029480 215.12792969]
[247.62715149 225.59240723]
[258.37399292 236.05688477]
[269.12084961 246.52134705]
[284.91842651 246.06039429]
[296.35745239 256.96563721]
[296.65136719 272.76718140]
[285.62579346 284.09027100]
[269.82199097 284.21710205]
[258.61611938 273.07244873]
[258.65637207 257.26821899]
[247.90953064 246.80372620]
[237.16267395 236.33926392]
[226.41581726 225.87478638]
[215.66897583 215.41030884]
[208.89529419 218.63012695]
[207.69853210 233.58232117]
[195.34793091 225.06976318]
[188.57424927 228.28959656]
[189.90368652 243.23056030]
[191.23312378 258.17153931]
[192.56256104 273.11248779]
[193.89198303 288.05346680]
[195.22142029 302.99444580]
[207.50251770 312.94180298]
[209.06959534 328.66821289]
[198.99293518 340.84344482]
[183.25083923 342.24417114]
[171.18281555 332.03936768]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 171]
[2 170]
[3 169]
[4 168]
[5 167]
[6 166]
[7 139]
[8 138]
[9 137]
[10 136]
[11 135]
[12 129]
[13 128]
[14 127]
[15 126]
[21 51]
[22 50]
[23 49]
[24 48]
[25 47]
[26 46]
[27 45]
[28 43]
[29 42]
[30 41]
[32 39]
[33 38]
[53 125]
[54 124]
[55 123]
[56 122]
[57 121]
[58 120]
[59 119]
[60 118]
[61 83]
[62 82]
[63 81]
[64 80]
[65 79]
[69 76]
[70 75]
[89 116]
[91 114]
[92 112]
[93 111]
[94 110]
[96 108]
[97 107]
[98 106]
[99 105]
[100 104]
[147 162]
[148 161]
[149 160]
[150 159]
[151 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
