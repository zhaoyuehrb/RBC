%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 07:11:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAGAUGUUUUGCGGCGAUGUCGUGUUGGAGGGAUGAAGAUGGAGUUAUCCUCUGCAGAAAUUCCUAGACGCCUUCACUUCUCUGUAUUCUUCCUCAUACUUGCCUACCCCCAAAUUAAUAUCAGUCCUAAAGAA\
) } def
/len { sequence length } bind def

/coor [
[172.05961609 394.87911987]
[169.32325745 380.13082886]
[156.93942261 371.93469238]
[153.95428467 357.01681519]
[162.63508606 344.08306885]
[159.89872742 329.33477783]
[157.16238403 314.58648682]
[154.42602539 299.83816528]
[151.68968201 285.08987427]
[148.95332336 270.34158325]
[128.48960876 265.04727173]
[113.29531860 250.25288391]
[107.41877747 229.80383301]
[112.47343445 209.06465149]
[127.19562531 193.51162720]
[121.81475830 179.50997925]
[116.43388367 165.50831604]
[111.05301666 151.50666809]
[105.67214203 137.50502014]
[100.28913116 132.34449768]
[100.33246613 123.12013245]
[95.27405548 108.99877930]
[89.76072693 103.01403046]
[90.26560974 94.49523926]
[85.53232574 80.26161957]
[80.79904175 66.02799988]
[69.59362793 59.52530289]
[65.97404480 47.50490570]
[71.36968231 36.61697006]
[66.96401215 22.27855873]
[62.55833817 7.94014740]
[58.15266418 -6.39826441]
[53.74699020 -20.73667526]
[49.34131622 -35.07508850]
[44.93564606 -49.41349792]
[40.52997208 -63.75191116]
[36.12429810 -78.09032440]
[24.67498779 -89.00929260]
[28.33288193 -103.44774628]
[23.92720795 -117.78616333]
[19.52153587 -132.12457275]
[13.96271896 -139.48599243]
[15.18329811 -146.84248352]
[11.10755348 -161.27813721]
[7.03180838 -175.71380615]
[2.95606351 -190.14945984]
[-1.11968112 -204.58512878]
[-18.01508522 -207.19644165]
[-32.04943466 -216.86256409]
[-40.45809174 -231.62132263]
[-41.60992432 -248.51316833]
[-35.32349777 -264.17471313]
[-22.89369392 -275.50827026]
[-27.62697792 -289.74191284]
[-32.36026382 -303.97552490]
[-37.09354782 -318.20913696]
[-52.15436172 -321.22036743]
[-63.68119431 -331.37063599]
[-68.57338715 -345.92953491]
[-65.51496887 -360.98083496]
[-55.32862854 -372.47579956]
[-40.75445175 -377.32235718]
[-25.71281052 -374.21676636]
[-14.24983597 -363.99444580]
[-9.44900894 -349.40515137]
[-12.60172749 -334.37332153]
[-22.85992622 -322.94244385]
[-18.12664032 -308.70880127]
[-13.39335537 -294.47518921]
[-8.66007042 -280.24157715]
[4.40883970 -279.62792969]
[16.51063156 -274.57223511]
[26.17933273 -265.66311646]
[32.23560333 -253.95744324]
[33.93055725 -240.85498047]
[31.03831100 -227.93092346]
[23.88579941 -216.74661255]
[13.31597996 -208.66087341]
[17.39172363 -194.22520447]
[21.46747017 -179.78955078]
[25.54321480 -165.35388184]
[29.61895943 -150.91822815]
[33.85994720 -136.53024292]
[38.26562119 -122.19183350]
[42.67129135 -107.85342407]
[53.80548096 -97.96002960]
[50.46271133 -82.49599457]
[54.86838150 -68.15758514]
[59.27405548 -53.81917191]
[63.67972946 -39.48075867]
[68.08540344 -25.14234924]
[72.49107361 -10.80393791]
[76.89675140 3.53447390]
[81.30242157 17.87288475]
[85.70809174 32.21129608]
[99.18225098 43.39601517]
[95.03266907 61.29471207]
[99.76595306 75.52833557]
[104.49923706 89.76195526]
[109.39540100 103.94037628]
[114.45381165 118.06172180]
[119.67379761 132.12414551]
[125.05466461 146.12579346]
[130.43553162 160.12745667]
[135.81640625 174.12910461]
[141.19728088 188.13075256]
[150.67280579 187.49327087]
[160.03581238 189.01023865]
[168.80335999 192.59802246]
[176.52450562 198.06626892]
[182.80337524 205.12806702]
[187.31958008 213.41500854]
[189.84445190 222.49635315]
[190.25273132 231.90142822]
[188.52864075 241.14408875]
[184.76654053 249.74774170]
[179.16572571 257.27001953]
[172.01985168 263.32543945]
[163.70162964 267.60522461]
[166.43797302 282.35351562]
[169.17433167 297.10183716]
[171.91067505 311.85012817]
[174.64703369 326.59841919]
[177.38337708 341.34671021]
[190.12606812 350.30560303]
[192.69102478 365.30148315]
[184.07156372 377.39447021]
[186.80790710 392.14276123]
[201.12855530 397.88058472]
[210.05511475 410.46313477]
[210.73915100 425.87530518]
[202.96240234 439.19918823]
[189.20639038 446.18316650]
[173.86061096 444.59863281]
[161.82185364 434.95126343]
[156.93162537 420.31948853]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 128]
[2 127]
[5 124]
[6 123]
[7 122]
[8 121]
[9 120]
[10 119]
[15 106]
[16 105]
[17 104]
[18 103]
[19 102]
[21 101]
[22 100]
[24 99]
[25 98]
[26 97]
[29 95]
[30 94]
[31 93]
[32 92]
[33 91]
[34 90]
[35 89]
[36 88]
[37 87]
[39 85]
[40 84]
[41 83]
[43 82]
[44 81]
[45 80]
[46 79]
[47 78]
[53 70]
[54 69]
[55 68]
[56 67]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
