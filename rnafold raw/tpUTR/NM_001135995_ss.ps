%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 10:18:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCCUUUAAAAAUAAUUUAGAUAGUCAUACUUUCCAACAUUAUCCUGUGUGAUUAUACUGUAGGAUCCAUUUUGGUCAUCUGUCAAAGAGAUGAGGAAAUAAGGCUUUUAGACAGUUUGCAAACAAAAUGACGAGAGAGAUGUGGGACUAAAUAAUGAUCGUUCAACUACUAGCCAAGGAGACAUUCAGCAAUUAAUUAAAUUUAAAUUAGCUUUCAA\
) } def
/len { sequence length } bind def

/coor [
[73.55622864 422.56216431]
[58.51093292 425.37243652]
[43.88640594 420.85781860]
[33.04325485 410.05575562]
[28.47315788 395.44848633]
[31.22629166 380.39260864]
[40.67000580 368.34793091]
[54.63420105 362.08215332]
[55.49443817 347.10684204]
[56.35467911 332.13153076]
[46.28309631 321.21829224]
[46.94216919 306.01895142]
[58.45726776 295.52893066]
[59.31750488 280.55361938]
[60.17774582 265.57830811]
[61.03798294 250.60299683]
[61.89822006 235.62768555]
[62.75845718 220.65235901]
[63.61869812 205.67704773]
[64.47893524 190.70173645]
[65.33917236 175.72642517]
[66.19940948 160.75111389]
[55.58623505 131.13381958]
[61.53837967 106.19575500]
[77.32625580 93.18546295]
[93.82201385 94.31762695]
[84.12536621 82.87319946]
[74.42871857 71.42876434]
[64.73207092 59.98433685]
[54.95358276 48.60974884]
[45.09376526 37.30559158]
[35.23394775 26.00143242]
[25.37413025 14.69727421]
[15.51431274 3.39311647]
[5.57366896 -7.84003115]
[-1.92018270 -5.14190960]
[-9.81974030 -4.42999649]
[-17.60974121 -5.73386669]
[-24.78632545 -8.95215702]
[-30.88962364 -13.86023903]
[-35.53322220 -20.12581825]
[-38.42860413 -27.33140182]
[-53.42513275 -27.00865936]
[-68.42166138 -26.68591881]
[-83.41819000 -26.36317825]
[-98.41471863 -26.04043579]
[-113.41124725 -25.71769524]
[-128.93444824 -15.80746651]
[-143.97508240 -24.85371971]
[-158.96543884 -24.31589127]
[-173.95579529 -23.77806282]
[-187.56001282 -14.62069035]
[-202.17178345 -22.06569672]
[-202.75978088 -38.45429993]
[-188.71911621 -46.92730713]
[-174.49362183 -38.76841736]
[-159.50326538 -39.30624771]
[-144.51290894 -39.84407425]
[-136.04814148 -48.48028183]
[-123.56779480 -49.05441284]
[-113.73398590 -40.71422195]
[-98.73745728 -41.03696442]
[-83.74092865 -41.35970306]
[-68.74440002 -41.68244553]
[-53.74787521 -42.00518799]
[-38.75134659 -42.32793045]
[-33.80963135 -53.21970367]
[-25.04776001 -61.36101532]
[-29.49845123 -75.68551636]
[-33.94914246 -90.01001740]
[-38.39983749 -104.33451843]
[-42.85052872 -118.65901947]
[-47.30121994 -132.98352051]
[-51.75191116 -147.30802917]
[-68.84631348 -155.48545837]
[-74.43321228 -173.25805664]
[-65.40724182 -189.18928528]
[-70.26702118 -203.38021851]
[-84.42176819 -215.16265869]
[-80.36802673 -232.23960876]
[-85.43087006 -246.35937500]
[-90.49371338 -260.47912598]
[-95.55655670 -274.59890747]
[-100.61940002 -288.71865845]
[-112.56053162 -299.09747314]
[-109.57302094 -313.68939209]
[-114.63586426 -327.80914307]
[-119.69870758 -341.92892456]
[-124.76155090 -356.04867554]
[-129.82438660 -370.16842651]
[-145.00917053 -370.86914062]
[-158.76779175 -377.33200073]
[-169.00219727 -388.57147217]
[-174.15167236 -402.87362671]
[-173.43098450 -418.05746460]
[-166.95002747 -431.80758667]
[-155.69711304 -442.02716064]
[-141.38821411 -447.15783691]
[-126.20532990 -446.41717529]
[-112.46374512 -439.91815186]
[-102.25896454 -428.65179443]
[-97.14712524 -414.33615112]
[-97.90775299 -399.15426636]
[-104.42486572 -385.42123413]
[-115.70463562 -375.23129272]
[-110.64179230 -361.11151123]
[-105.57894897 -346.99176025]
[-100.51610565 -332.87200928]
[-95.45326233 -318.75222778]
[-83.87425995 -309.38336182]
[-86.49964142 -293.78149414]
[-81.43679810 -279.66174316]
[-76.37395477 -265.54199219]
[-71.31111145 -251.42221069]
[-66.24826813 -237.30245972]
[-55.45004272 -231.85867310]
[-51.11454010 -220.14149475]
[-56.07608795 -208.24000549]
[-51.21630859 -194.04907227]
[-40.13265991 -191.37310791]
[-31.62722778 -183.60054016]
[-27.88908386 -172.57525635]
[-29.95550728 -160.99661255]
[-37.42741013 -151.75871277]
[-32.97671890 -137.43421936]
[-28.52602768 -123.10971069]
[-24.07533455 -108.78520966]
[-19.62464333 -94.46070862]
[-15.17395020 -80.13620758]
[-10.72325802 -65.81170654]
[10.34465408 -59.17255020]
[21.53439713 -39.87272263]
[16.73522758 -17.86098862]
[23.53869820 -14.98549652]
[26.81847000 -6.46670151]
[36.67828751 4.83745670]
[46.53810501 16.14161491]
[56.39792633 27.44577217]
[66.25774384 38.74993134]
[73.01926422 41.72272110]
[76.17649841 50.28768539]
[85.87314606 61.73211670]
[95.56980133 73.17655182]
[105.26644897 84.62097931]
[119.23516083 90.08678436]
[134.12379456 88.26230621]
[142.25538635 84.11453247]
[149.23887634 86.52001953]
[164.15214539 84.90930176]
[179.06541443 83.29857635]
[184.23649597 68.98001099]
[195.06745911 58.36977005]
[209.37257385 53.53406906]
[224.29733276 55.38129807]
[236.88810730 63.49191666]
[244.67655945 76.21219635]
[259.58981323 74.60147095]
[274.50308228 72.99075317]
[287.41607666 62.88198853]
[302.52380371 69.26071167]
[304.28475952 85.56503296]
[290.88742065 95.02247620]
[276.11380005 87.90402222]
[261.20053101 89.51473999]
[246.28727722 91.12546539]
[241.39448547 105.21539307]
[230.82586670 115.82735443]
[216.63970947 120.81873322]
[201.63197327 119.14899445]
[188.78527832 111.09607697]
[180.67614746 98.21184540]
[165.76287842 99.82257080]
[150.84960938 101.43328857]
[135.94827271 103.15093231]
[121.05963898 104.97541046]
[119.56350708 112.32466888]
[116.57122803 127.02318573]
[115.07508850 134.37243652]
[128.06547546 141.87243652]
[141.05584717 149.37243652]
[157.44607544 148.83135986]
[165.87886047 162.89620972]
[157.67927551 177.09828186]
[141.28236389 176.82771301]
[133.55584717 162.36282349]
[120.56546783 154.86282349]
[107.57508850 147.36282349]
[100.97499847 150.92495728]
[108.77944183 163.73474121]
[116.58387756 176.54454041]
[124.38832092 189.35432434]
[132.19276428 202.16410828]
[141.01849365 214.29284668]
[133.72761536 227.40174866]
[118.76801300 226.30158997]
[113.47328186 212.26719666]
[107.04866791 198.71270752]
[100.62404633 185.15820312]
[94.19943237 171.60371399]
[87.77481842 158.04922485]
[81.17472076 161.61135864]
[80.31448364 176.58666992]
[79.45424652 191.56198120]
[78.59400940 206.53729248]
[77.73377228 221.51260376]
[76.87353516 236.48791504]
[76.01329803 251.46322632]
[75.15305328 266.43853760]
[74.29281616 281.41384888]
[73.43257904 296.38916016]
[83.67073059 308.12875366]
[82.58499146 323.30361938]
[71.32998657 332.99176025]
[70.46974945 347.96707153]
[69.60951233 362.94238281]
[82.76436615 370.76596069]
[90.76672363 383.81283569]
[91.77770996 399.08493042]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 215]
[9 214]
[10 213]
[13 210]
[14 209]
[15 208]
[16 207]
[17 206]
[18 205]
[19 204]
[20 203]
[21 202]
[22 201]
[26 144]
[27 143]
[28 142]
[29 141]
[30 139]
[31 138]
[32 137]
[33 136]
[34 135]
[35 133]
[42 66]
[43 65]
[44 64]
[45 63]
[46 62]
[47 61]
[49 58]
[50 57]
[51 56]
[68 130]
[69 129]
[70 128]
[71 127]
[72 126]
[73 125]
[74 124]
[77 119]
[78 118]
[80 115]
[81 114]
[82 113]
[83 112]
[84 111]
[86 109]
[87 108]
[88 107]
[89 106]
[90 105]
[145 175]
[146 174]
[148 173]
[149 172]
[150 171]
[156 165]
[157 164]
[158 163]
[178 187]
[179 186]
[180 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
