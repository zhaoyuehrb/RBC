%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 04:12:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACUCAGUUUGCAUCAAACUAGAUGUAUUUAAUAUAAUCCUUACUUAAAAUUCUUCCGUUACCACCCUUGAAACAAUUAGCUUUUUCUUUAGGACUGACCUGUUAGGGGAUAAACAUCACAAUAAUCUGAAUUCCAAGUUAUUUUGUAUUUUGUUUUUAAUAAAUACAACCUGAUUUAAGAAGC\
) } def
/len { sequence length } bind def

/coor [
[53.51792908 215.77151489]
[57.65260696 201.14370728]
[67.07429504 189.21473694]
[80.34626007 181.80369568]
[78.56739044 166.90954590]
[76.78852081 152.01541138]
[75.00965118 137.12126160]
[67.75164795 135.23141479]
[53.23565674 131.45175171]
[45.97765732 129.56192017]
[37.16088104 141.69717407]
[28.34410095 153.83242798]
[19.52732277 165.96768188]
[10.71054363 178.10293579]
[1.89376533 190.23818970]
[4.61333704 205.80673218]
[-4.54049110 218.69017029]
[-20.13691521 221.24499512]
[-32.92285156 211.95545959]
[-35.31263733 196.33290100]
[-25.88844681 183.64588928]
[-10.24148941 181.42141724]
[-1.42471087 169.28616333]
[7.39206791 157.15089417]
[16.20884705 145.01564026]
[25.02562523 132.88038635]
[33.84240341 120.74513245]
[20.28700256 127.16783905]
[6.73159933 133.59053040]
[-7.92336655 136.78927612]
[-22.91446495 137.30596924]
[-37.75489044 135.12384033]
[-51.96273422 130.31372070]
[-65.07662964 123.03184509]
[-76.67072296 113.51464844]
[-86.36852264 102.07119751]
[-93.85512543 89.07308197]
[-98.88740540 74.94240570]
[-101.30194855 60.13801193]
[-101.02036285 45.14065552]
[-98.05178070 30.43733978]
[-92.49259949 16.50552368]
[-84.52334595 3.79761052]
[-74.40280914 -7.27373457]
[-62.45962524 -16.34899330]
[-49.08162308 -23.13346672]
[-34.70322800 -27.40684509]
[-19.79134560 -29.03035545]
[-4.83020973 -27.95128250]
[9.69435024 -24.20466232]
[23.31068039 -17.91216278]
[35.57661819 -9.27811623]
[46.09385681 1.41710413]
[54.52086639 13.82619381]
[60.58399963 27.54619408]
[64.08627319 42.13091278]
[73.79282379 53.56694794]
[83.49937439 65.00298309]
[80.46380615 50.31335068]
[77.42823029 35.62371826]
[64.46912384 30.88988876]
[55.61610413 20.44985771]
[53.10366821 7.10428905]
[57.48389053 -5.63541079]
[67.50948334 -14.47096443]
[64.72378540 -29.21002388]
[61.93809128 -43.94908524]
[59.15239716 -58.68814468]
[56.36670303 -73.42720795]
[53.58100891 -88.16626740]
[50.79531479 -102.90532684]
[37.35979843 -106.84201050]
[26.98401451 -116.14276886]
[21.65790367 -128.94717407]
[22.36979675 -142.73054504]
[28.92352867 -154.80172729]
[39.98793411 -162.82852173]
[37.45291901 -177.61276245]
[34.91790771 -192.39700317]
[32.38289642 -207.18124390]
[29.72244644 -221.94342041]
[26.93675232 -236.68247986]
[24.15105820 -251.42153931]
[10.42601585 -258.91534424]
[4.77712965 -273.49697876]
[9.87162971 -288.28143311]
[23.30404854 -296.28796387]
[38.73200989 -293.73608398]
[48.87089920 -281.83074951]
[48.93344879 -266.19329834]
[38.89011765 -254.20722961]
[41.67581177 -239.46817017]
[44.46150589 -224.72911072]
[48.80303955 -218.72679138]
[47.16713333 -209.71624756]
[49.70214844 -194.93200684]
[52.23715973 -180.14778137]
[54.77217102 -165.36354065]
[70.05401611 -160.14451599]
[80.68482971 -147.86454773]
[83.69594574 -131.80834961]
[78.17384338 -116.33422089]
[65.53437042 -105.69102478]
[68.32006836 -90.95195770]
[71.10576630 -76.21289825]
[73.89145660 -61.47383881]
[76.67715454 -46.73477936]
[79.46284485 -31.99571991]
[82.24854279 -17.25665855]
[97.29950714 -10.72960663]
[105.58439636 3.62206936]
[103.67181396 20.24984932]
[92.11785889 32.58814240]
[95.15343475 47.27777481]
[98.18901062 61.96740723]
[104.50778198 66.00759125]
[108.28747559 51.49160385]
[123.26099396 50.60064316]
[128.73539734 64.56599426]
[117.14533234 74.08795929]
[123.46410370 78.12814331]
[138.07165527 74.71942139]
[152.67921448 71.31069183]
[167.28675842 67.90196228]
[181.89431763 64.49323273]
[196.50186157 61.08450699]
[208.18269348 50.41357040]
[222.33526611 55.05618286]
[236.94282532 51.64745712]
[246.59931946 38.83607483]
[262.63967896 38.54211807]
[272.75909424 50.99108505]
[269.19485474 66.63319397]
[254.68107605 73.46915436]
[240.35154724 66.25500488]
[225.74398804 69.66373444]
[215.10800171 80.09085846]
[199.91059875 75.69206238]
[185.30303955 79.10078430]
[170.69549561 82.50951385]
[156.08793640 85.91824341]
[141.48037720 89.32697296]
[126.87283325 92.73570251]
[124.08713531 107.47476196]
[136.44302368 115.97959900]
[148.79888916 124.48443604]
[161.15476990 132.98927307]
[173.51065063 141.49411011]
[185.86653137 149.99894714]
[198.22241211 158.50378418]
[210.57829285 167.00862122]
[224.41099548 160.33390808]
[239.72662354 161.48579407]
[252.40536499 170.15441895]
[259.03668213 184.00798035]
[257.83682251 199.31993103]
[249.12849426 211.97143555]
[235.25421143 218.55929565]
[219.94609070 217.31143188]
[207.32194519 208.56349182]
[200.77760315 194.66864014]
[202.07344055 179.36450195]
[189.71757507 170.85966492]
[177.36169434 162.35482788]
[165.00581360 153.84999084]
[152.64993286 145.34515381]
[140.29405212 136.84031677]
[127.93817902 128.33547974]
[115.58229828 119.83063507]
[109.16267395 123.70857239]
[89.90379333 135.34239197]
[91.68266296 150.23654175]
[93.46153259 165.13067627]
[95.24040222 180.02482605]
[109.88442230 184.10174561]
[121.85047150 193.47628784]
[129.31382751 206.71890259]
[131.13638306 221.81018066]
[127.04020691 236.44882202]
[117.64993286 248.40252686]
[104.39751434 255.84846497]
[89.30385590 257.65115356]
[74.67061615 253.53572083]
[62.72926331 244.12974548]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 174]
[5 173]
[6 172]
[7 171]
[10 27]
[11 26]
[12 25]
[13 24]
[14 23]
[15 22]
[58 115]
[59 114]
[60 113]
[65 109]
[66 108]
[67 107]
[68 106]
[69 105]
[70 104]
[71 103]
[77 98]
[78 97]
[79 96]
[80 95]
[81 93]
[82 92]
[83 91]
[121 143]
[122 142]
[123 141]
[124 140]
[125 139]
[126 138]
[128 136]
[129 135]
[144 169]
[145 168]
[146 167]
[147 166]
[148 165]
[149 164]
[150 163]
[151 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
