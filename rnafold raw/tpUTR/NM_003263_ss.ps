%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 15:05:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUACACAUCAAGUGAAAAAUAUUCCUCCUGUUGAUAUUGCUGCUUUUGGAAGUUCCAACAAUGACUUUAUUUUGCAUCAGCAUAGAUGUAAACACAAUUGUGAGUGUAUGAUGUAGGUAAAAAUAUAUACCUUCGGGUCGCAGUUCACCAUUUAUAUGUGGUAUUAAAAAUUAAUGAAAUGAUAUAACUUUGAUUUAAACAGUUCUGACACAUAA\
) } def
/len { sequence length } bind def

/coor [
[179.37754822 450.28869629]
[167.09118652 454.89746094]
[154.23144531 457.49493408]
[141.12519836 458.01599121]
[128.10549927 456.44833374]
[123.82272339 470.82391357]
[119.53993988 485.19952393]
[125.87748718 499.93774414]
[118.17934418 514.01318359]
[102.35088348 516.62835693]
[90.53433228 505.77719116]
[91.79434967 489.78369141]
[105.16434479 480.91674805]
[109.44712830 466.54113770]
[113.72991180 452.16555786]
[98.72756958 444.30700684]
[85.64829254 433.53997803]
[75.04758453 420.31909180]
[67.37625122 405.20330811]
[62.96118164 388.83215332]
[61.99143982 371.89886475]
[64.51016998 355.12081909]
[70.41268158 339.20925903]
[79.45077515 324.83914185]
[91.24323273 312.62045288]
[105.29183197 303.07238770]
[121.00243378 296.60125732]
[137.71011353 293.48312378]
[154.70729065 293.85214233]
[157.93914795 279.20443726]
[161.17102051 264.55673218]
[164.40289307 249.90904236]
[167.63476562 235.26133728]
[157.14131165 228.92947388]
[148.96400452 219.76170349]
[143.84371948 208.56295776]
[142.25195312 196.32325745]
[144.34738159 184.13024902]
[149.96026611 173.07250977]
[158.60610962 164.14237976]
[151.90287781 150.72348022]
[145.19966125 137.30459595]
[138.49644470 123.88568878]
[131.79321289 110.46679688]
[122.63268280 136.81571960]
[92.06686401 152.36296082]
[52.81181335 141.29371643]
[37.82164001 141.83650208]
[22.83146286 142.37927246]
[7.84128571 142.92205811]
[-7.14889050 143.46484375]
[-22.75885963 150.08036804]
[-33.43711853 136.91180420]
[-23.73922348 123.00543976]
[-7.69167423 128.47467041]
[7.29850245 127.93188477]
[22.28867912 127.38909912]
[37.27885437 126.84632111]
[52.26903152 126.30353546]
[55.12661362 119.36925507]
[41.25805283 113.65409088]
[27.38949585 107.93892670]
[13.52093792 102.22377014]
[-0.34762019 96.50860596]
[-15.30347157 95.35859680]
[-18.83117676 80.77931976]
[-6.05548477 72.91918182]
[5.36754322 82.64004517]
[19.23610115 88.35520935]
[33.10466003 94.07037354]
[46.97321701 99.78553772]
[60.84177780 105.50070190]
[63.69935608 98.56642151]
[53.44382095 87.62000275]
[43.18828583 76.67359161]
[32.93275070 65.72717285]
[22.67721558 54.78076172]
[12.42168045 43.83434677]
[2.16614532 32.88793182]
[-13.63593578 32.62377548]
[-24.56269836 21.20530891]
[-24.13149071 5.40690422]
[-12.59813690 -5.39852524]
[3.19482660 -4.80030966]
[13.87771511 6.84664059]
[13.11256027 22.63239670]
[23.36809540 33.57881165]
[33.62363052 44.52522659]
[43.87916565 55.47164154]
[54.13470078 66.41805267]
[64.39023590 77.36447144]
[74.64577484 88.31088257]
[87.86498260 81.22198486]
[84.42140198 66.62261200]
[80.97781372 52.02323532]
[77.53423309 37.42386246]
[63.17058945 31.55314064]
[55.02952194 18.34319496]
[56.24143982 2.87351799]
[66.34033203 -8.90748215]
[81.44297028 -12.46977234]
[95.74208069 -6.44357824]
[103.73936462 6.85390520]
[102.35970306 22.30952454]
[92.13360596 33.98027802]
[95.57718658 48.57965088]
[99.02077484 63.17902756]
[102.46435547 77.77840424]
[109.90077972 78.75286102]
[124.77363586 80.70178223]
[132.21005249 81.67624664]
[139.29896545 68.45703125]
[146.38786316 55.23782349]
[140.22669983 37.31893158]
[148.97384644 20.87126350]
[166.65812683 16.12782097]
[173.36135864 2.70892334]
[180.06457520 -10.70997429]
[186.76779175 -24.12887192]
[193.47102356 -37.54776764]
[186.19732666 -51.25444412]
[188.40269470 -66.61399841]
[199.23912048 -77.72037506]
[214.53976440 -80.30294037]
[228.42123413 -73.36864471]
[235.54580688 -59.58387375]
[233.17395020 -44.24914169]
[222.21768188 -33.26097870]
[206.88992310 -30.84454727]
[200.18669128 -17.42564964]
[193.48347473 -4.00675201]
[186.78024292 9.41214561]
[180.07702637 22.83104324]
[185.94659424 32.60829926]
[186.37399292 44.12400055]
[181.13758850 54.52354050]
[171.43408203 61.17316437]
[159.60707092 62.32672501]
[152.51817322 75.54593658]
[145.42927551 88.76514435]
[145.21211243 103.76357269]
[151.91534424 117.18247223]
[158.61856079 130.60136414]
[165.32177734 144.02026367]
[172.02500916 157.43916321]
[192.22467041 153.80865479]
[213.04530334 160.39942932]
[229.34246826 176.84904480]
[244.01318359 173.72328186]
[258.68389893 170.59753418]
[273.35458374 167.47177124]
[288.02529907 164.34602356]
[296.41519165 150.95254517]
[311.83685303 147.49594116]
[325.14086914 156.02697754]
[328.43423462 171.48431396]
[319.76303101 184.69740295]
[304.27172852 187.82714844]
[291.15106201 179.01672363]
[276.48034668 182.14248657]
[261.80963135 185.26823425]
[247.13893127 188.39399719]
[232.46823120 191.51974487]
[231.06500244 198.88731384]
[245.94619751 197.00318909]
[252.33647156 210.57389832]
[241.40454102 220.84486389]
[228.25854492 213.62243652]
[226.85531616 220.98999023]
[239.34994507 229.28965759]
[251.84455872 237.58932495]
[264.33917236 245.88899231]
[276.83380127 254.18865967]
[289.32843018 262.48834229]
[301.82302856 270.78799438]
[314.20407104 262.00881958]
[328.92141724 258.29879761]
[343.98468018 260.15972900]
[357.35662842 267.33990479]
[367.22888184 278.86828613]
[372.26623535 293.18572998]
[371.78747559 308.35592651]
[365.85733032 322.32727051]
[355.27783203 333.21017456]
[341.47970581 339.53289795]
[326.32910156 340.44027710]
[311.87496948 335.80966187]
[300.07214355 326.26724243]
[292.51684570 313.10357666]
[290.23086548 298.09896851]
[293.52337646 283.28262329]
[281.02874756 274.98294067]
[268.53411865 266.68328857]
[256.03952026 258.38360596]
[243.54489136 250.08395386]
[231.05027771 241.78428650]
[218.55564880 233.48461914]
[200.06327820 240.01550293]
[182.28245544 238.49320984]
[179.05059814 253.14091492]
[175.81872559 267.78860474]
[172.58685303 282.43630981]
[169.35498047 297.08401489]
[181.53552246 302.07983398]
[192.76509094 308.94607544]
[202.75885010 317.50750732]
[211.26347351 327.54589844]
[218.06358337 338.80560303]
[222.98715210 351.00009155]
[225.90997314 363.81918335]
[226.75863647 376.93698120]
[225.51249695 390.02014160]
[222.20413208 402.73629761]
[216.91847229 414.76263428]
[209.79063416 425.79394531]
[201.00250244 435.55044556]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 15]
[6 14]
[7 13]
[29 203]
[30 202]
[31 201]
[32 200]
[33 199]
[40 145]
[41 144]
[42 143]
[43 142]
[44 141]
[47 59]
[48 58]
[49 57]
[50 56]
[51 55]
[73 92]
[74 91]
[75 90]
[76 89]
[77 88]
[78 87]
[79 86]
[93 108]
[94 107]
[95 106]
[96 105]
[111 140]
[112 139]
[113 138]
[116 133]
[117 132]
[118 131]
[119 130]
[120 129]
[148 163]
[149 162]
[150 161]
[151 160]
[152 159]
[169 197]
[170 196]
[171 195]
[172 194]
[173 193]
[174 192]
[175 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
