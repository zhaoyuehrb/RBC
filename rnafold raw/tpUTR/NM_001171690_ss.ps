%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 09:52:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCUGGGCCCAGUCCUGUGGCCGGUUGAAGAAUCAGGCAGGAGCCAGGGCUCUGAGGGGAGGCGCCUGAGGACUGCAGAUCUCCACUGACCUCUUUCCCUAGAUUAAGAUGGGACCCAGUGGCCGGGCACGGUGGCUCAGGCCUGUAAUCCCAGCACUUUGGGAGGCCAAGGUAGGCGGAUCACCUGAGGUCGGGAGUUUGAGACCAGCCUGACCAACAUGGAGAAACCCCGUCUCUACUAAAAAUACGAAAUU\
) } def
/len { sequence length } bind def

/coor [
[-64.23384857 594.02612305]
[-60.55995560 579.47900391]
[-70.49619293 590.71606445]
[-80.43242645 601.95312500]
[-83.77758789 617.41662598]
[-98.00462341 621.82574463]
[-107.94086456 633.06280518]
[-117.87709808 644.29986572]
[-127.81333923 655.53692627]
[-137.74957275 666.77392578]
[-147.68580627 678.01098633]
[-145.82002258 696.88616943]
[-158.15417480 710.87103271]
[-176.47430420 711.36096191]
[-186.13177490 722.83850098]
[-195.78924561 734.31597900]
[-205.44673157 745.79351807]
[-215.10420227 757.27099609]
[-224.76167297 768.74853516]
[-221.46194458 780.13439941]
[-224.02865601 791.58496094]
[-231.71452332 800.29339600]
[-242.53216553 804.18206787]
[-253.76699829 802.39764404]
[-263.70324707 813.63470459]
[-273.63946533 824.87176514]
[-283.57571411 836.10876465]
[-286.30877686 852.27856445]
[-301.77099609 857.74224854]
[-314.05621338 846.87915039]
[-310.52639771 830.86437988]
[-294.81277466 826.17254639]
[-284.87652588 814.93548584]
[-274.94027710 803.69848633]
[-265.00405884 792.46142578]
[-267.20755005 774.26770020]
[-255.18382263 760.01501465]
[-236.23918152 759.09106445]
[-226.58171082 747.61352539]
[-216.92424011 736.13604736]
[-207.26675415 724.65850830]
[-197.60928345 713.18103027]
[-187.95181274 701.70349121]
[-191.36541748 690.85211182]
[-189.10610962 679.58093262]
[-181.61970520 670.70050049]
[-170.66967773 666.48138428]
[-158.92285156 668.07476807]
[-148.98661804 656.83770752]
[-139.05038452 645.60064697]
[-129.11415100 634.36364746]
[-119.17790985 623.12658691]
[-109.24166870 611.88952637]
[-106.60721588 597.22973633]
[-91.66947174 592.01684570]
[-81.73323822 580.77978516]
[-71.79700470 569.54278564]
[-70.09973907 559.83496094]
[-60.74532318 553.85058594]
[-53.51256561 540.70953369]
[-46.27980804 527.56848145]
[-39.04705429 514.42742920]
[-31.81429672 501.28637695]
[-24.58153915 488.14532471]
[-17.34878349 475.00427246]
[-11.93785286 456.07119751]
[1.46268189 445.60348511]
[15.81064224 445.31936646]
[12.45617104 430.80740356]
[24.13181686 420.13079834]
[28.83704376 405.88787842]
[33.54227066 391.64495850]
[32.65880585 384.32897949]
[38.39361191 377.25674438]
[43.27326584 363.07263184]
[48.15292358 348.88854980]
[52.68301010 334.58895874]
[56.86080551 320.18249512]
[61.03860092 305.77603149]
[65.21640015 291.36956787]
[64.06425476 284.09106445]
[69.53486633 276.81253052]
[73.88912964 262.45843506]
[78.24340057 248.10433960]
[82.59767151 233.75022888]
[81.53493500 226.45812988]
[87.09445190 219.24729919]
[86.12127686 211.94270325]
[91.76885986 204.80062866]
[96.47409058 190.55770874]
[101.17931366 176.31478882]
[105.88454437 162.07186890]
[110.58976746 147.82893372]
[115.29499054 133.58601379]
[84.78136444 149.02545166]
[43.64564133 133.89389038]
[21.20541382 85.10380554]
[13.49387264 72.23787689]
[5.78233147 59.37194443]
[-1.92920983 46.50601578]
[-17.20643044 47.43611908]
[-31.16121864 41.14942932]
[-40.58686447 29.09058189]
[-43.31742859 14.03061390]
[-38.72543716 -0.56980491]
[-27.86610603 -11.35560513]
[-13.23482609 -15.84829044]
[1.80624187 -13.01547241]
[13.80076981 -3.50811338]
[19.99250412 10.48906612]
[18.95862770 25.75961494]
[10.93671894 38.79447556]
[18.64826012 51.66040421]
[26.35980225 64.52633667]
[34.07134247 77.39226532]
[41.31180191 75.43630981]
[45.16441345 60.93950272]
[55.79271698 71.52439117]
[63.03317642 69.56843567]
[63.21725082 54.56956863]
[63.40132141 39.57069778]
[55.83395386 25.67661667]
[63.72685623 13.04525089]
[63.91092682 -1.95361936]
[64.09500122 -16.95248985]
[64.27907562 -31.95136070]
[55.78689194 -45.98043060]
[63.92633820 -60.21705627]
[80.32424927 -60.01581192]
[88.11186218 -45.58372498]
[79.27794647 -31.76728821]
[79.09387207 -16.76841736]
[78.90979767 -1.76954627]
[78.72572327 13.22932434]
[86.30625916 26.05058670]
[78.40019226 39.75477219]
[78.21611786 54.75364304]
[78.03204346 69.75251007]
[85.10900116 72.23580933]
[99.26290131 77.20240021]
[106.33985138 79.68569946]
[115.56832123 67.86050415]
[124.79679871 56.03530884]
[134.02526855 44.21011353]
[119.03798676 43.59255600]
[110.07485199 31.56499672]
[113.76772308 17.02667809]
[127.38423157 10.73456192]
[140.84945679 17.34421158]
[144.20028687 31.96579933]
[154.13652039 20.72875404]
[164.07276917 9.49170685]
[174.00900269 -1.74533868]
[183.94523621 -12.98238468]
[193.88146973 -24.21943092]
[196.61451721 -40.38923264]
[212.07676697 -45.85286331]
[224.36195374 -34.98980713]
[220.83215332 -18.97504807]
[205.11851501 -14.28319359]
[195.18228149 -3.04614782]
[185.24604797 8.19089794]
[175.30981445 19.42794418]
[165.37356567 30.66498947]
[155.43733215 41.90203476]
[145.85046387 53.43858719]
[136.62199402 65.26377869]
[127.39352417 77.08898163]
[118.16504669 88.91417694]
[122.48360443 95.04605865]
[135.43928528 113.44171906]
[149.68222046 108.73649597]
[163.92514038 104.03126526]
[178.16806030 99.32604218]
[185.31013489 93.67845154]
[192.61471558 94.65162659]
[199.66981506 80.50945282]
[214.68484497 75.57743835]
[228.75163269 82.78166962]
[233.52462769 97.84799194]
[226.17207336 111.83782959]
[211.05613708 116.45126343]
[197.14480591 108.95121765]
[182.87329102 113.56896210]
[168.63037109 118.27419281]
[154.38743591 122.97941589]
[140.14451599 127.68463898]
[129.53791809 138.29124451]
[124.83268738 152.53416443]
[120.12746429 166.77708435]
[115.42224121 181.02001953]
[110.71701050 195.26293945]
[106.01178741 209.50585938]
[101.39404297 223.77738953]
[96.95177460 238.10450745]
[92.59751129 252.45860291]
[88.24324036 266.81271362]
[83.88896942 281.16680908]
[79.62285614 295.54736328]
[75.44506073 309.95382690]
[71.26726532 324.36029053]
[67.08946991 338.76675415]
[68.25433350 342.88290405]
[68.08298492 346.76974487]
[66.80796051 350.03948975]
[64.76283264 352.41812134]
[62.33703232 353.76818848]
[57.45737839 367.95230103]
[52.57772446 382.13641357]
[47.78519058 396.35018921]
[43.07996750 410.59310913]
[38.37474060 424.83602905]
[41.39266205 440.36672974]
[30.05356598 450.02459717]
[34.40783691 464.37869263]
[46.23303223 473.60717773]
[58.05822754 482.83566284]
[74.26485443 487.81378174]
[73.96771240 504.76510620]
[57.59658051 509.17218018]
[48.82975388 494.66085815]
[37.00455856 485.43237305]
[25.17936134 476.20388794]
[17.83258820 477.71218872]
[23.78580856 491.48022461]
[31.90381241 504.09362793]
[26.08700752 517.91986084]
[11.39342403 520.93627930]
[0.59994447 510.51989746]
[3.09185648 495.72866821]
[3.13904190 480.72875977]
[-4.20773125 482.23703003]
[-11.44048786 495.37808228]
[-18.67324448 508.51913452]
[-25.90600014 521.66021729]
[-33.13875580 534.80126953]
[-40.37151337 547.94232178]
[-47.60427094 561.08337402]
[-35.14874649 552.72509766]
[-20.81375694 548.30834961]
[-5.81409740 548.20727539]
[8.57910824 552.43048096]
[21.14612961 560.62011719]
[30.82199478 572.08209229]
[36.78673553 585.84515381]
[38.53488159 600.74298096]
[35.91828537 615.51300049]
[29.15869141 628.90356445]
[18.82892609 639.77996826]
[5.80437183 647.22045898]
[-8.81122494 650.59454346]
[-23.77928925 649.61621094]
[-37.83137512 644.36846924]
[-49.77665710 635.29595947]
[-58.60285568 623.16760254]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 57]
[3 56]
[4 55]
[6 53]
[7 52]
[8 51]
[9 50]
[10 49]
[11 48]
[14 43]
[15 42]
[16 41]
[17 40]
[18 39]
[19 38]
[24 35]
[25 34]
[26 33]
[27 32]
[59 238]
[60 237]
[61 236]
[62 235]
[63 234]
[64 233]
[65 232]
[68 214]
[70 212]
[71 211]
[72 210]
[74 209]
[75 208]
[76 207]
[77 202]
[78 201]
[79 200]
[80 199]
[82 198]
[83 197]
[84 196]
[85 195]
[87 194]
[89 193]
[90 192]
[91 191]
[92 190]
[93 189]
[94 188]
[97 115]
[98 114]
[99 113]
[100 112]
[119 138]
[120 137]
[121 136]
[123 134]
[124 133]
[125 132]
[126 131]
[141 169]
[142 168]
[143 167]
[144 166]
[150 165]
[151 164]
[152 163]
[153 162]
[154 161]
[155 160]
[171 187]
[172 186]
[173 185]
[174 184]
[176 183]
[215 223]
[216 222]
[217 221]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
