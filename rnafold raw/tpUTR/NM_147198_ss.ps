%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 10:01:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCUAUUGGCCGAUCACUACUGUGGGCUGAAGGAUGACCAUCUGGUCUAAGAAGAGUGCUGCCUACUUCCUUCUUGGGACACCCACUGGCUCUAGCUGGUAACCUUUCUGCUAUUUCCUUGACCUCUUUACCCUGAAGCUUUUGUCAAAUAAACUGCUACAUCAACCUGA\
) } def
/len { sequence length } bind def

/coor [
[100.54649353 210.35858154]
[95.67692566 224.54615784]
[83.99125671 233.95069885]
[69.09058380 235.67405701]
[55.56673813 229.18519592]
[47.58725357 216.48370361]
[47.61104202 201.48396301]
[38.01594543 213.01367188]
[28.42085075 224.54338074]
[18.82575607 236.07308960]
[9.23066044 247.60278320]
[-0.36443457 259.13250732]
[-1.25693405 264.35043335]
[-3.82314992 268.29165649]
[-7.28664589 270.52954102]
[-10.81458282 271.01208496]
[-21.02673340 281.99899292]
[-31.23888397 292.98587036]
[-34.37253571 309.08285522]
[-49.96564865 314.16091919]
[-61.97736740 302.99621582]
[-58.05106735 287.07403564]
[-42.22578430 282.77374268]
[-32.01363373 271.78683472]
[-21.80148315 260.79992676]
[-11.89414120 249.53739929]
[-2.29904628 238.00769043]
[7.29604912 226.47798157]
[16.89114380 214.94827271]
[26.48624039 203.41857910]
[36.08133316 191.88887024]
[44.69744492 179.61032104]
[52.27639771 166.66584778]
[59.85534668 153.72135925]
[47.13552094 141.26651001]
[38.14073944 125.90386963]
[33.50480270 108.71592712]
[18.50730705 108.98988342]
[3.50980854 109.26384735]
[-11.48768902 109.53781128]
[-25.25093651 118.45436859]
[-39.72943497 110.75339508]
[-40.02894974 94.35697937]
[-25.84136581 86.13235474]
[-11.76165009 94.54031372]
[3.23584771 94.26634979]
[18.23334503 93.99238586]
[33.23084259 93.71842957]
[36.57870483 67.48509979]
[50.39543915 43.11277008]
[39.22385406 33.10298920]
[28.05227280 23.09320450]
[16.88068962 13.08342266]
[5.70910740 3.07364082]
[-5.46247530 -6.93614149]
[-16.81501389 -16.74021530]
[-28.34472084 -26.33530998]
[-39.87442780 -35.93040466]
[-51.40413666 -45.52550125]
[-67.44716644 -45.50016785]
[-77.35672760 -58.11682892]
[-73.53105164 -73.69706726]
[-58.90486526 -80.28904724]
[-44.69813156 -72.83597565]
[-41.80904007 -57.05521011]
[-30.27933311 -47.46011353]
[-18.74962616 -37.86501694]
[-7.21991825 -28.26992226]
[-2.43234682 -27.81166077]
[2.10790229 -24.31685448]
[4.54730701 -18.10772324]
[15.71889019 -8.09794140]
[26.89047241 1.91184032]
[38.06205368 11.92162228]
[49.23363876 21.93140411]
[60.40522003 31.94118690]
[73.48596191 24.59991837]
[70.76140594 9.84943390]
[68.03685760 -4.90105104]
[59.21412277 -19.37847137]
[70.68338776 -31.86415863]
[85.85613251 -24.29950142]
[82.78733826 -7.62560415]
[85.51189423 7.12488127]
[88.23645020 21.87536621]
[103.22080994 22.56006813]
[107.27923584 8.11952782]
[111.33765411 -6.32101345]
[115.39607239 -20.76155472]
[119.45449066 -35.20209503]
[123.51291656 -49.64263535]
[118.93959045 -65.39118195]
[130.48529053 -77.03716278]
[146.27279663 -72.60018158]
[150.06126404 -56.64463425]
[137.95346069 -45.58421707]
[133.89503479 -31.14367485]
[129.83660889 -16.70313454]
[125.77819061 -2.26259279]
[121.71977234 12.17794800]
[117.66135406 26.61848831]
[127.58212280 30.64795113]
[136.72315979 35.99206161]
[144.91430664 42.51214600]
[152.00881958 50.04814148]
[157.88595581 58.42240906]
[162.45289612 67.44384766]
[165.64620972 76.91216278]
[167.43240356 86.62231445]
[167.80813599 96.36894226]
[166.79946899 105.95066071]
[181.49772644 108.94416046]
[194.58108521 100.49056244]
[209.44458008 103.73577881]
[217.42315674 116.26086426]
[232.12142944 119.25436401]
[246.81968689 122.24787140]
[259.90304565 113.79427338]
[274.76654053 117.03948975]
[282.74511719 129.56457520]
[297.44338989 132.55807495]
[312.14166260 135.55157471]
[326.83990479 138.54507446]
[341.53817749 141.53858948]
[357.63180542 129.56802368]
[377.05285645 133.17788696]
[387.44543457 149.61849976]
[402.28558350 151.80252075]
[417.12573242 153.98654175]
[431.96588135 156.17054749]
[446.80603027 158.35456848]
[463.35671997 154.67886353]
[471.47045898 169.56521606]
[459.41198730 181.48281860]
[444.62200928 173.19471741]
[429.78186035 171.01071167]
[414.94171143 168.82669067]
[400.10156250 166.64266968]
[385.26141357 164.45864868]
[378.93499756 172.62265015]
[369.70980835 177.44435120]
[359.23358154 177.98641968]
[349.40951538 174.08279419]
[342.05050659 166.38125610]
[338.54467773 156.23684692]
[323.84640503 153.24334717]
[309.14816284 150.24984741]
[294.44989014 147.25633240]
[279.75161743 144.26283264]
[267.50994873 152.66978455]
[252.56117249 149.84333801]
[243.82618713 136.94613647]
[229.12792969 133.95263672]
[214.42965698 130.95912170]
[202.18797302 139.36607361]
[187.23921204 136.53962708]
[178.50422668 123.64242554]
[163.80595398 120.64891815]
[158.88172913 132.10173035]
[151.92282104 142.44525146]
[143.16970825 151.32206726]
[132.92485046 158.42544556]
[121.54227448 163.50991821]
[109.41529846 166.39978027]
[96.96297455 166.99517822]
[84.61559296 165.27555847]
[72.79982758 161.30032349]
[65.22087097 174.24479675]
[57.64192200 187.18927002]
[71.73960876 182.06529236]
[86.39778900 185.24928284]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 31]
[8 30]
[9 29]
[10 28]
[11 27]
[12 26]
[16 25]
[17 24]
[18 23]
[32 169]
[33 168]
[34 167]
[37 48]
[38 47]
[39 46]
[40 45]
[50 76]
[51 75]
[52 74]
[53 73]
[54 72]
[55 71]
[56 68]
[57 67]
[58 66]
[59 65]
[77 85]
[78 84]
[79 83]
[86 101]
[87 100]
[88 99]
[89 98]
[90 97]
[91 96]
[111 158]
[112 157]
[115 154]
[116 153]
[117 152]
[120 149]
[121 148]
[122 147]
[123 146]
[124 145]
[127 139]
[128 138]
[129 137]
[130 136]
[131 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
