%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 08:39:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACCCCGCGCCUCUGAAGGGGCUUGGAACCAGUCCGCCGCUGCACAUCCUUCUUGGCUUCCUGGCGCCCCCUAUCGGGGGUGAGCGAAGCCCCCACUACUAAAUGGCCUCUCUCCACUACCCCGACUAUCCCUGCACAUAAACUCCGUUUUUUUUUUUUC\
) } def
/len { sequence length } bind def

/coor [
[156.28092957 438.33392334]
[157.65441895 423.35299683]
[161.75747681 408.87957764]
[168.45037842 395.40664673]
[177.50514221 383.39309692]
[188.61338806 373.24807739]
[201.39675903 365.31710815]
[195.96208191 351.33624268]
[190.52740479 337.35540771]
[174.59823608 336.42300415]
[160.61360168 328.61947632]
[151.38868713 315.45779419]
[148.80567932 299.53524780]
[153.42991638 284.02096558]
[164.38714600 272.02514648]
[150.58421326 266.54656982]
[144.59947205 252.55950928]
[150.43949890 238.11888123]
[144.73307800 224.24671936]
[139.02664185 210.37457275]
[133.32020569 196.50242615]
[117.55208588 190.71978760]
[110.68750000 175.02305603]
[117.40576172 158.89733887]
[111.42974854 145.13916016]
[105.45372772 131.38099670]
[99.47771454 117.62282562]
[89.97121429 114.50035095]
[83.69507599 106.70717621]
[82.67091370 96.75355530]
[87.22860718 87.84564972]
[81.79393005 73.86479187]
[68.89646912 69.87916565]
[60.78076935 59.33682251]
[60.24291992 46.23841476]
[67.25543213 35.39359283]
[62.09458160 21.30936050]
[56.93373108 7.22512722]
[51.77288055 -6.85910606]
[38.12092972 -4.73694038]
[24.31702232 -5.19337463]
[10.84378242 -8.21078968]
[-1.82804036 -13.68205643]
[-13.25601387 -21.41433907]
[-23.04147148 -31.13588905]
[-30.84341812 -42.50559998]
[-36.39041519 -55.12497330]
[-39.49002838 -68.55207825]
[-40.03548431 -82.31704712]
[-38.00937271 -95.93849945]
[-33.48418808 -108.94038391]
[-26.61971855 -120.86861420]
[-17.65743828 -131.30691528]
[-6.91198635 -139.89140320]
[5.23987007 -146.32318115]
[0.91186601 -160.68522644]
[-3.41613841 -175.04727173]
[-7.74414253 -189.40931702]
[-12.07214737 -203.77136230]
[-16.40015030 -218.13340759]
[-20.86807060 -232.45254517]
[-25.47547913 -246.72741699]
[-30.17349243 -251.49484253]
[-31.51744843 -257.08227539]
[-29.97237778 -261.64993286]
[-34.01932907 -276.09368896]
[-38.06628036 -290.53744507]
[-42.11323166 -304.98120117]
[-46.16018295 -319.42495728]
[-50.20713425 -333.86871338]
[-54.25408554 -348.31246948]
[-66.35311127 -359.38250732]
[-62.55197144 -375.33505249]
[-46.76094818 -379.75949097]
[-35.22449493 -368.10433960]
[-39.81032944 -352.35943604]
[-35.76337814 -337.91567993]
[-31.71642494 -323.47192383]
[-27.66947365 -309.02813721]
[-23.62252235 -294.58438110]
[-19.57557106 -280.14062500]
[-15.52861881 -265.69686890]
[-11.20061398 -251.33482361]
[-6.59320545 -237.05996704]
[-1.52026498 -231.63298035]
[-2.03810477 -222.46142578]
[2.28989959 -208.09936523]
[6.61790371 -193.73731995]
[10.94590855 -179.37527466]
[15.27391243 -165.01322937]
[19.60191727 -150.65118408]
[35.79968262 -151.97511292]
[51.89905548 -149.70762634]
[67.11315918 -143.95668030]
[80.69774628 -135.00054932]
[91.98761749 -123.27436829]
[100.42919922 -109.34900665]
[105.60765076 -93.90327454]
[107.26731110 -77.69080353]
[105.32425690 -61.50331879]
[99.87058258 -46.13194656]
[91.17002106 -32.32855606]
[79.64520264 -20.76898766]
[65.85710907 -12.01995659]
[71.01795959 2.06427670]
[76.17881012 16.14850998]
[81.33966064 30.23274231]
[96.87016296 36.62619019]
[103.11709595 52.57878876]
[95.77478790 68.43011475]
[101.20946503 82.41097260]
[116.30492401 93.29282379]
[113.23588562 111.64680481]
[119.21189880 125.40497589]
[125.18791199 139.16314697]
[131.16392517 152.92131042]
[144.20707703 156.40069580]
[152.72792053 166.61837769]
[153.77641296 179.68582153]
[147.19235229 190.79598999]
[152.89878845 204.66813660]
[158.60522461 218.54029846]
[164.31166077 232.41244507]
[178.62240601 238.56387329]
[184.21192932 252.71350098]
[178.25929260 266.31869507]
[192.41610718 266.61074829]
[205.34934998 272.26803589]
[215.11302185 282.40319824]
[220.25187683 295.45785522]
[220.01823425 309.44219971]
[214.48059082 322.23828125]
[204.50827026 331.92071533]
[209.94294739 345.90158081]
[215.37760925 359.88244629]
[230.16133118 357.09744263]
[245.20507812 357.07659912]
[259.99645996 359.82061768]
[274.03170776 365.23605347]
[286.83273315 373.13842773]
[297.96359253 383.25863647]
[307.04516602 395.25198364]
[313.76812744 408.70993042]
[317.90347290 423.17413330]
[319.31039429 438.15194702]
[317.94094849 453.13327026]
[313.84179688 467.60775757]
[307.15252686 481.08248901]
[298.10101318 493.09851074]
[286.99548340 503.24652100]
[274.21426392 511.18093872]
[260.19262695 516.63146973]
[245.40814209 519.41247559]
[230.36439514 519.42926025]
[215.57376099 516.68127441]
[201.53997803 511.26202393]
[188.74107361 503.35620117]
[177.61293030 493.23300171]
[168.53460693 481.23721313]
[161.81527710 467.77743530]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 135]
[8 134]
[9 133]
[15 126]
[18 123]
[19 122]
[20 121]
[21 120]
[24 116]
[25 115]
[26 114]
[27 113]
[31 111]
[32 110]
[36 107]
[37 106]
[38 105]
[39 104]
[55 91]
[56 90]
[57 89]
[58 88]
[59 87]
[60 86]
[61 84]
[62 83]
[65 82]
[66 81]
[67 80]
[68 79]
[69 78]
[70 77]
[71 76]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
