%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 20:13:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCUGCGCCGCGCGGACUCCUGCCCCGAGGGUCCGGACGCGCCCCAGCUCGCGCCCCUUCCCAUAUUUAUUCGGACCCCAAGCAUCGCCCCAAUAAAGACCAGCAAGCAACCGGC\
) } def
/len { sequence length } bind def

/coor [
[102.54454803 220.54090881]
[95.13553619 234.17491150]
[81.11319733 240.81974792]
[65.86941528 237.92031860]
[55.26572418 226.59153748]
[53.37947083 211.18952942]
[60.93594742 197.63670349]
[75.02954102 191.14437866]
[77.83235168 176.40856934]
[80.63515472 161.67274475]
[83.43796539 146.93693542]
[72.27805328 141.33848572]
[62.86251068 133.13885498]
[50.29343033 141.32531738]
[37.72435379 149.51179504]
[25.15527344 157.69825745]
[18.21632385 172.55702209]
[1.85757029 173.70735168]
[-7.09250259 159.96586609]
[0.57317275 145.46864319]
[16.96880722 145.12918091]
[29.53788567 136.94270325]
[42.10696411 128.75624084]
[54.67604446 120.56977081]
[50.81768036 107.64696503]
[50.57022476 94.16272736]
[53.95183945 81.10704803]
[60.71425629 69.43847656]
[70.36098480 60.01368713]
[82.18376923 53.52464676]
[78.98634338 38.86939240]
[75.78892517 24.21413612]
[72.59149933 9.55888176]
[69.39407349 -5.09637213]
[66.19665527 -19.75162697]
[62.99922943 -34.40687943]
[59.80180740 -49.06213760]
[56.60438156 -63.71739197]
[50.16517258 -70.76194763]
[49.98234558 -79.25988007]
[41.62787628 -91.71791840]
[33.27340317 -104.17596436]
[24.91893005 -116.63400269]
[9.40834045 -117.08258820]
[-2.85572243 -126.58902740]
[-7.15747595 -141.49789429]
[-1.84280849 -156.07644653]
[11.04468250 -164.71890259]
[26.54949379 -164.10209656]
[38.70970917 -154.46316528]
[42.84947586 -139.50849915]
[37.37697220 -124.98847198]
[45.73144531 -112.53043365]
[54.08591461 -100.07239532]
[62.44038773 -87.61434937]
[63.15459061 -102.59733582]
[69.08500671 -116.37522888]
[79.47620392 -127.19293976]
[93.00451660 -133.67250061]
[107.94667816 -134.98851013]
[122.39930725 -130.97334290]
[134.52137756 -122.13844299]
[142.76875305 -109.60924530]
[146.09085083 -94.98175049]
[144.06451416 -80.11924744]
[136.94783020 -66.91497040]
[125.64736938 -57.05092239]
[111.60260010 -51.78360748]
[96.60260010 -51.78399277]
[82.55811310 -57.05203247]
[71.25963593 -66.91481018]
[74.45706177 -52.25955963]
[77.65448761 -37.60430527]
[80.85190582 -22.94905090]
[84.04933167 -8.29379559]
[87.24675751 6.36145878]
[90.44417572 21.01671410]
[93.64160156 35.67196655]
[96.83902740 50.32722092]
[118.97529602 53.98571014]
[137.25581360 66.99423218]
[147.96601868 86.70946503]
[148.92959595 109.12532043]
[163.09259033 114.06592560]
[182.59056091 109.30239105]
[194.77282715 124.21875763]
[209.18060303 128.39201355]
[219.73701477 117.30956268]
[234.23823547 112.41333008]
[249.35198975 114.82843018]
[261.60525513 123.99990082]
[268.18234253 137.82020569]
[267.57183838 153.11354065]
[259.91406250 166.36558533]
[246.96870422 174.53115845]
[231.71052551 175.73384094]
[217.64573669 169.69726562]
[208.00631714 157.80860901]
[205.00733948 142.79978943]
[190.59956360 138.62652588]
[181.98414612 144.41203308]
[171.38519287 144.42971802]
[162.38218689 138.42785645]
[158.15197754 128.22892761]
[143.98898315 123.28831482]
[140.30670166 129.20182800]
[135.83485413 134.54330444]
[130.66104126 139.20811462]
[124.88662720 143.10490417]
[118.62470245 146.15730286]
[111.99794769 148.30554199]
[105.13616943 149.50753784]
[98.17377472 149.73973083]
[95.37097168 164.47555542]
[92.56816864 179.21136475]
[89.76535797 193.94718933]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 116]
[9 115]
[10 114]
[11 113]
[13 24]
[14 23]
[15 22]
[16 21]
[30 79]
[31 78]
[32 77]
[33 76]
[34 75]
[35 74]
[36 73]
[37 72]
[38 71]
[40 55]
[41 54]
[42 53]
[43 52]
[83 105]
[84 104]
[86 100]
[87 99]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
