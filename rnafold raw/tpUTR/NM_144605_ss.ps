%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 19:18:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACCGGCGGAUCCCGGGGCUGCUGGGCUUCCUGAGUCCCCAGCGGCUCUCAACACACACCUAUGUACCAGAGCAUCUAUUAAAUGUGAGCCUUGCUUUUUAUGAAAAGCUGUGCUUUGAAAACAAAAGGCAUUUUGUAAAUGACUUCUUUGAGCUAUCCACAAAUAAAAAGGCUGGGUGUCA\
) } def
/len { sequence length } bind def

/coor [
[-95.71443176 229.24543762]
[-109.84203339 238.29624939]
[-126.36747742 242.17683411]
[-143.43830872 240.31784058]
[-148.70208740 254.36392212]
[-153.96585083 268.41000366]
[-159.22962952 282.45611572]
[-152.45928955 296.73678589]
[-157.84852600 311.59384155]
[-172.19999695 318.21282959]
[-186.99922180 312.66680908]
[-193.46609497 298.24615479]
[-187.76393127 283.50637817]
[-173.27572632 277.19235229]
[-168.01194763 263.14624023]
[-162.74818420 249.10015869]
[-157.48440552 235.05406189]
[-168.53395081 224.90972900]
[-182.08006287 231.35197449]
[-195.62619019 237.79421997]
[-209.17231750 244.23648071]
[-222.71842957 250.67872620]
[-236.26455688 257.12097168]
[-249.81066895 263.56323242]
[-263.35678101 270.00549316]
[-276.90292358 276.44772339]
[-290.44903564 282.88998413]
[-303.88320923 289.56256104]
[-317.20147705 296.46356201]
[-330.51974487 303.36453247]
[-341.80136108 316.02001953]
[-357.08535767 308.68267822]
[-354.26577759 291.96481323]
[-337.42071533 290.04623413]
[-324.10244751 283.14526367]
[-310.78417969 276.24429321]
[-308.50613403 272.02203369]
[-303.53973389 269.19815063]
[-296.89129639 269.34387207]
[-283.34515381 262.90161133]
[-269.79904175 256.45935059]
[-256.25292969 250.01710510]
[-242.70680237 243.57485962]
[-229.16069031 237.13261414]
[-215.61456299 230.69035339]
[-202.06843567 224.24810791]
[-188.52232361 217.80584717]
[-174.97619629 211.36360168]
[-178.27754211 196.31388855]
[-176.94134521 181.10211182]
[-171.17144775 167.11212158]
[-161.57122803 155.59196472]
[-149.08158875 147.54270935]
[-134.88911438 143.63154602]
[-120.31356049 144.13717651]
[-106.68512726 148.93145752]
[-95.22309875 157.49858093]
[-83.27101898 148.43504333]
[-71.31893921 139.37149048]
[-59.36686707 130.30795288]
[-47.41478729 121.24440765]
[-35.46271133 112.18086243]
[-34.31135941 97.22511292]
[-44.73532867 86.43897247]
[-55.15929794 75.65282440]
[-65.58326721 64.86668396]
[-81.38754272 64.84748840]
[-92.48997498 53.59975052]
[-92.30368805 37.79656219]
[-80.93920135 26.81366539]
[-65.13886261 27.16702461]
[-54.27673340 38.64699554]
[-54.79712296 54.44271469]
[-44.37315369 65.22885895]
[-33.94918442 76.01499939]
[-23.52521706 86.80113983]
[-33.50135040 75.59950256]
[-37.85847855 61.24626541]
[-35.79285049 46.38917160]
[-27.68550491 33.76891327]
[-15.03200722 25.71354294]
[-0.16654529 23.70903587]
[14.16864967 28.12516403]
[25.32916641 38.14728546]
[31.25622368 51.92661667]
[30.85645866 66.92128754]
[24.20361519 80.36523438]
[12.52494526 89.77845001]
[-2.02213407 93.42439270]
[12.66412735 90.37255096]
[27.35038948 87.32070923]
[42.03665161 84.26887512]
[56.72291183 81.21703339]
[71.40917206 78.16519165]
[82.79861450 68.40401459]
[88.06238556 54.35791779]
[93.32615662 40.31182480]
[98.58992767 26.26573372]
[103.85369873 12.21964073]
[109.11746979 -1.82645154]
[105.89083862 -17.90503693]
[118.37905884 -28.53406906]
[133.73532104 -22.77931213]
[136.16241455 -6.56076574]
[123.16355896 3.43731928]
[117.89978790 17.48341179]
[112.63601685 31.52950478]
[107.37224579 45.57559586]
[102.10847473 59.62168884]
[96.84470367 73.66778564]
[108.73307800 72.91132355]
[120.56724548 77.61008453]
[133.51473999 70.03627777]
[146.46221924 62.46246719]
[159.40969849 54.88865662]
[172.35719299 47.31484604]
[185.30467224 39.74103546]
[198.25216675 32.16722488]
[199.65222168 16.71344185]
[209.89372253 5.05619431]
[225.03858948 1.67793322]
[239.26330566 7.87766933]
[247.09820557 21.27147675]
[245.53057861 36.70916367]
[235.16323853 48.25462723]
[219.98260498 51.46839523]
[205.82597351 45.11471176]
[192.87849426 52.68852234]
[179.93099976 60.26233292]
[166.98352051 67.83614349]
[154.03602600 75.40995026]
[141.08854675 82.98376465]
[128.14105225 90.55757141]
[129.16468811 105.52260590]
[143.02288818 111.26285553]
[156.88107300 117.00310516]
[170.73927307 122.74336243]
[184.59745789 128.48361206]
[199.05229187 122.67881775]
[213.02470398 128.69766235]
[218.46960449 142.51391602]
[232.32780457 148.25416565]
[246.18598938 153.99441528]
[261.89663696 152.12718201]
[270.69415283 164.14602661]
[284.55233765 169.88627625]
[298.41055298 175.62652588]
[314.58990479 172.95071411]
[324.78637695 185.79455566]
[318.51071167 200.94538879]
[302.21875000 202.81735229]
[292.67028809 189.48472595]
[278.81210327 183.74447632]
[264.95388794 178.00422668]
[250.23449707 180.28204346]
[240.44573975 167.85260010]
[226.58753967 162.11235046]
[212.72935486 156.37210083]
[199.10966492 162.29153442]
[184.97370911 156.66752625]
[178.85720825 142.34179688]
[164.99902344 136.60154724]
[151.14082336 130.86129761]
[137.28263855 125.12104797]
[123.42443848 119.38079834]
[109.73806000 127.98004913]
[93.99340057 128.21759033]
[80.77393341 120.45664978]
[73.70464325 107.32668304]
[74.46101379 92.85145569]
[59.77474976 95.90329742]
[45.08848953 98.95513153]
[30.40222931 102.00697327]
[15.71596718 105.05881500]
[1.02970612 108.11065674]
[-26.39916611 124.13293457]
[-38.35124207 133.19648743]
[-50.30331802 142.26002502]
[-62.25539780 151.32357788]
[-74.20747375 160.38711548]
[-86.15954590 169.45066833]
[-80.59250641 184.44129944]
[-80.32678223 200.62687683]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 17]
[5 16]
[6 15]
[7 14]
[18 48]
[19 47]
[20 46]
[21 45]
[22 44]
[23 43]
[24 42]
[25 41]
[26 40]
[27 39]
[28 36]
[29 35]
[30 34]
[57 181]
[58 180]
[59 179]
[60 178]
[61 177]
[62 176]
[63 76]
[64 75]
[65 74]
[66 73]
[89 175]
[90 174]
[91 173]
[92 172]
[93 171]
[94 170]
[95 110]
[96 109]
[97 108]
[98 107]
[99 106]
[100 105]
[112 133]
[113 132]
[114 131]
[115 130]
[116 129]
[117 128]
[118 127]
[134 165]
[135 164]
[136 163]
[137 162]
[138 161]
[141 158]
[142 157]
[143 156]
[145 154]
[146 153]
[147 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
