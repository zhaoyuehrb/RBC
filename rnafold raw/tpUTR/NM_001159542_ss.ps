%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 02:13:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGCCUGCCCUUCUAGGAAUGGGGAACAGGGGAGGGGAGGAGCUAGGGAAAGAGAACCUGGAGUUUGUGGCAGGGCUUUUGGGAUUAAGUUCUUCAUUCACUAAGGAAGGAAUUGGGAACACUAAGGGUGGGGGCAGGGGAGUUUGGGGCAACUGGUUGGAGGGAAGGUGAAGUUCAAUGAUGCUCUUGAUUUUAAUCCCACAUCAUGUAUCACUUUUUUCUUAAAUAAAGAAGCCUGGGACACAGUAA\
) } def
/len { sequence length } bind def

/coor [
[127.22517395 129.07487488]
[117.96227264 135.55158997]
[107.25305176 139.16569519]
[95.95982361 139.62619019]
[84.99190521 136.89601135]
[76.82494354 149.47776794]
[68.65798187 162.05953979]
[67.63420868 177.84757996]
[54.21474457 184.31033325]
[46.04778290 196.89210510]
[37.88082123 209.47386169]
[29.71385956 222.05561829]
[21.54689789 234.63739014]
[13.37993717 247.21914673]
[5.21297646 259.80090332]
[4.66863823 278.21899414]
[-11.28730106 285.55117798]
[-4.07001448 299.10867310]
[-4.61445951 314.45791626]
[-12.77418232 327.47003174]
[-26.35425758 334.64477539]
[-41.70171738 334.05221558]
[-54.68816376 325.85174561]
[-61.82031631 312.24923706]
[-61.17966080 296.90371704]
[-52.93852615 283.94305420]
[-39.31373596 276.85357666]
[-23.97029495 277.54232788]
[-26.33020020 265.69476318]
[-19.78359032 255.06881714]
[-7.36878586 251.63394165]
[0.79817504 239.05218506]
[8.96513653 226.47042847]
[17.13209724 213.88865662]
[25.29905891 201.30690002]
[33.46601868 188.72514343]
[41.63298035 176.14337158]
[42.07259750 161.25526428]
[56.07622147 153.89257812]
[64.24317932 141.31080627]
[72.41014099 128.72904968]
[69.06760406 125.09472656]
[66.20040131 121.07476807]
[63.85260773 116.73094177]
[49.29716492 120.35572815]
[34.74171829 123.98050690]
[20.18627357 127.60528564]
[5.63082933 131.23007202]
[0.77108240 145.87200928]
[-11.24756718 155.54441833]
[-26.59001160 157.16087341]
[-40.36053467 150.20556641]
[-48.16500854 136.89791870]
[-47.51305771 121.48433685]
[-38.61271667 108.88324738]
[-24.30405045 103.11560822]
[-9.15290260 106.02185822]
[2.00604916 116.67462158]
[16.56149292 113.04984283]
[31.11693764 109.42506409]
[45.67238235 105.80027771]
[60.22782898 102.17549896]
[65.01323700 80.96096802]
[80.22827911 65.42201233]
[101.33731079 60.19083023]
[122.04769135 66.82685089]
[132.55426025 56.12115097]
[143.06083679 45.41545486]
[153.56739807 34.70975494]
[164.07397461 24.00405502]
[161.04763794 7.35007620]
[168.47906494 -7.67267418]
[183.25660706 -15.22147560]
[199.45602417 -12.49288940]
[209.82777405 -23.32925034]
[220.19952393 -34.16561127]
[230.57128906 -45.00197220]
[240.94303894 -55.83833313]
[251.31478882 -66.67469025]
[261.68655396 -77.51105499]
[272.05828857 -88.34741211]
[270.83929443 -103.29780579]
[258.84912109 -112.31085968]
[246.85891724 -121.32392120]
[234.86872864 -130.33697510]
[219.25799561 -127.87107086]
[206.52519226 -137.23330688]
[204.22447205 -152.86923218]
[213.72080994 -165.50233459]
[229.38018799 -167.63761902]
[241.91218567 -158.00825500]
[243.88177490 -142.32717896]
[255.87197876 -133.31411743]
[267.86218262 -124.30105591]
[279.85235596 -115.28799438]
[268.50964355 -125.10343170]
[263.90130615 -139.37799072]
[267.36349487 -153.97297668]
[277.89236450 -164.65673828]
[292.43521118 -168.33168030]
[306.77554321 -163.93229675]
[316.75558472 -152.73413086]
[319.48171997 -137.98394775]
[314.16357422 -123.95835114]
[302.34530640 -114.72482300]
[314.77154541 -123.12654877]
[327.19775391 -131.52827454]
[339.62399292 -139.92999268]
[352.05020142 -148.33171082]
[364.47644043 -156.73344421]
[376.90264893 -165.13516235]
[389.32888794 -173.53689575]
[401.75509644 -181.93861389]
[408.85360718 -196.07798767]
[423.73083496 -196.79702759]
[436.15707397 -205.19874573]
[448.58328247 -213.60047913]
[451.78448486 -226.07757568]
[462.28564453 -232.82252502]
[474.17541504 -230.68544006]
[486.70584106 -238.93098450]
[499.23623657 -247.17652893]
[497.26235962 -259.91009521]
[500.23135376 -272.40109253]
[507.66949463 -282.80871582]
[518.44708252 -289.61285400]
[530.95001221 -291.83612061]
[543.32135010 -289.18411255]
[553.73724365 -282.08383179]
[566.47009277 -290.01315308]
[579.20294189 -297.94247437]
[591.93579102 -305.87179565]
[604.66870117 -313.80111694]
[617.40155029 -321.73043823]
[617.14898682 -332.35104370]
[621.28314209 -342.04968262]
[629.00128174 -349.11306763]
[638.87414551 -352.32369995]
[649.11035156 -351.16912842]
[657.88165283 -345.92276001]
[670.90319824 -353.36849976]
[683.92474365 -360.81423950]
[696.94635010 -368.25997925]
[709.96789551 -375.70571899]
[722.98944092 -383.15145874]
[731.12878418 -396.71838379]
[746.01800537 -396.31921387]
[759.03955078 -403.76495361]
[772.06115723 -411.21069336]
[785.08270264 -418.65643311]
[798.10424805 -426.10217285]
[811.12579346 -433.54788208]
[814.75671387 -439.02307129]
[819.83959961 -441.49136353]
[824.56781006 -441.01235962]
[833.04412842 -454.37133789]
[847.91876221 -453.59957886]
[861.12261963 -460.71707153]
[874.32647705 -467.83453369]
[887.53027344 -474.95202637]
[900.73413086 -482.06948853]
[913.93798828 -489.18698120]
[913.19085693 -504.43179321]
[919.14007568 -518.48773193]
[930.60449219 -528.56396484]
[945.30773926 -532.65985107]
[960.33056641 -529.96215820]
[972.69012451 -521.00653076]
[979.93243408 -507.57104492]
[980.61956787 -492.32342529]
[974.61505127 -478.29101562]
[963.11102295 -468.26000977]
[948.39178467 -464.22204590]
[933.37969971 -466.97888184]
[921.05548096 -475.98312378]
[907.85162354 -468.86563110]
[894.64776611 -461.74816895]
[881.44390869 -454.63070679]
[868.24005127 -447.51321411]
[855.03625488 -440.39575195]
[847.50433350 -427.54586792]
[831.68530273 -427.80850220]
[818.57153320 -420.52633667]
[805.54998779 -413.08059692]
[792.52844238 -405.63485718]
[779.50689697 -398.18911743]
[766.48529053 -390.74337769]
[753.46374512 -383.29763794]
[746.25579834 -370.26327515]
[730.43518066 -370.12988281]
[717.41363525 -362.68414307]
[704.39208984 -355.23840332]
[691.37048340 -347.79266357]
[678.34893799 -340.34695435]
[665.32739258 -332.90121460]
[661.56744385 -313.76440430]
[644.66284180 -303.43789673]
[625.33087158 -308.99755859]
[612.59802246 -301.06826782]
[599.86511230 -293.13894653]
[587.13226318 -285.20962524]
[574.39941406 -277.28030396]
[561.66656494 -269.35098267]
[562.85717773 -252.15354919]
[555.11987305 -236.64910889]
[540.51226807 -227.16365051]
[523.02282715 -226.39501953]
[507.48178101 -234.64611816]
[494.95135498 -226.40057373]
[482.42095947 -218.15504456]
[475.38961792 -202.06427002]
[456.98501587 -201.17425537]
[444.55877686 -192.77252197]
[432.13256836 -184.37080383]
[425.92288208 -170.83238220]
[410.15682983 -169.51239014]
[397.73062134 -161.11067200]
[385.30438232 -152.70893860]
[372.87817383 -144.30722046]
[360.45193481 -135.90548706]
[348.02572632 -127.50376892]
[335.59948730 -119.10204315]
[323.17327881 -110.70032501]
[310.74703979 -102.29859924]
[311.72341919 -97.08836365]
[310.95291138 -91.44664764]
[308.28027344 -85.97573853]
[303.76031494 -81.32566833]
[297.67001343 -78.12116241]
[290.49560547 -76.88631439]
[282.89465332 -77.97566223]
[272.52291870 -67.13929749]
[262.15115356 -56.30294037]
[251.77940369 -45.46657944]
[241.40765381 -34.63021851]
[231.03588867 -23.79385757]
[220.66413879 -12.95749569]
[210.29238892 -2.12113500]
[213.87696838 10.72449875]
[210.62641907 23.77019119]
[201.28460693 33.58887863]
[188.20973206 37.54707336]
[174.77966309 34.51062393]
[164.27310181 45.21632385]
[153.76652527 55.92202377]
[143.25996399 66.62772369]
[132.75338745 77.33341980]
[137.80154419 87.44605255]
[139.80593872 98.56951904]
[138.60516357 109.80816650]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 41]
[6 40]
[7 39]
[9 37]
[10 36]
[11 35]
[12 34]
[13 33]
[14 32]
[15 31]
[17 28]
[44 62]
[45 61]
[46 60]
[47 59]
[48 58]
[66 247]
[67 246]
[68 245]
[69 244]
[70 243]
[74 238]
[75 237]
[76 236]
[77 235]
[78 234]
[79 233]
[80 232]
[81 231]
[82 95]
[83 94]
[84 93]
[85 92]
[105 224]
[106 223]
[107 222]
[108 221]
[109 220]
[110 219]
[111 218]
[112 217]
[113 216]
[115 214]
[116 213]
[117 212]
[120 210]
[121 209]
[122 208]
[129 203]
[130 202]
[131 201]
[132 200]
[133 199]
[134 198]
[140 195]
[141 194]
[142 193]
[143 192]
[144 191]
[145 190]
[147 188]
[148 187]
[149 186]
[150 185]
[151 184]
[152 183]
[155 182]
[157 180]
[158 179]
[159 178]
[160 177]
[161 176]
[162 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
