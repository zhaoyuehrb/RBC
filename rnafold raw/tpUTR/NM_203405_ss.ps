%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 05:17:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCAGCAGCUUCUUUGUUCCAGUGAAUAAUCACUCUGAGCAUCCACAACAAAAAUUCAAACUCCAUGGACUUUUGCUUCUUUGCUAGUAGCAACUGAUGUUUCUUAGUUUUACUGUGCCUGAUCUAAUGCAAGCUGCUUCUCUCGCAUGUUUUAUCUUGUUUUCAUCUUUCCUUGACAUCAAAAAAAUUAGUUUACAAUGCUAUUCAAUGUUGCUCUGGUCUGGGAAGAAUGUAUUUGUUUUGCACUAUAAUAA\
AUGCGAUUAAGUCCAA\
) } def
/len { sequence length } bind def

/coor [
[267.23760986 149.63500977]
[262.00720215 143.72853088]
[257.93139648 136.96475220]
[255.14776611 129.56680298]
[253.75125122 121.77928162]
[238.81523132 120.39525604]
[223.87922668 119.01123047]
[208.94320679 117.62720490]
[194.00720215 116.24317932]
[179.07118225 114.85915375]
[164.13517761 113.47512817]
[149.19915771 112.09110260]
[139.71153259 137.94935608]
[116.71990967 156.78382874]
[85.20081329 161.71003723]
[53.48501205 149.22477722]
[44.17141724 160.98304749]
[34.85782242 172.74131775]
[25.54422569 184.49958801]
[16.23063087 196.25787354]
[13.95213509 214.54745483]
[-2.63060689 220.33732605]
[-11.80777645 232.20237732]
[-20.98494720 244.06742859]
[-30.16211700 255.93247986]
[-39.33928680 267.79754639]
[-41.00500488 284.11187744]
[-56.07524109 290.57870483]
[-69.04702759 280.54553223]
[-66.57610321 264.33358765]
[-51.20434189 258.62036133]
[-42.02717209 246.75531006]
[-32.85000229 234.89025879]
[-23.67283249 223.02520752]
[-14.49566269 211.16015625]
[-15.72089195 199.14880371]
[-8.20381546 189.19421387]
[4.47236013 186.94427490]
[13.78595543 175.18600464]
[23.09955025 163.42773438]
[32.41314697 151.66946411]
[41.72674179 139.91119385]
[38.07720947 133.35902405]
[24.97287369 140.65808105]
[14.76530743 151.64924622]
[1.15786028 145.33755493]
[2.95588350 130.44570923]
[17.67380524 127.55374908]
[30.77814102 120.25468445]
[27.12860870 113.70251465]
[12.22854805 115.43115997]
[-2.67151165 117.15980530]
[-17.57157135 118.88845825]
[-32.47163010 120.61710358]
[-45.28818512 129.89321899]
[-58.82233047 123.67420959]
[-73.72238922 125.40285492]
[-88.62245178 127.13150024]
[-103.52251434 128.86015320]
[-111.97502136 142.01647949]
[-126.92201996 146.61225891]
[-141.30599976 140.47749329]
[-148.33526611 126.50884247]
[-144.69084167 111.30186462]
[-132.09349060 102.03683472]
[-116.49130249 103.08841705]
[-105.25115967 113.96008301]
[-90.35109711 112.23143768]
[-75.45103455 110.50279236]
[-60.55097961 108.77414703]
[-48.80017471 99.62166595]
[-34.20027924 105.71704102]
[-19.30021858 103.98839569]
[-4.40015793 102.25975037]
[10.49990177 100.53110504]
[25.39996147 98.80245209]
[27.82442474 91.70513153]
[13.62977982 86.85620880]
[-1.36852872 86.63096619]
[-5.78902149 72.29711914]
[6.47728634 63.66359711]
[18.47870636 72.66156006]
[32.67335129 77.51049042]
[35.09781265 70.41316986]
[24.36941528 59.92977524]
[13.58065510 49.50851440]
[2.73189330 39.14973450]
[-8.11686897 28.79095268]
[-18.96563148 18.43217087]
[-29.81439209 8.07338905]
[-40.66315460 -2.28539324]
[-48.99831772 -5.92994070]
[-51.57652283 -12.82701778]
[-62.30492020 -23.31040955]
[-73.03331757 -33.79380035]
[-83.76171875 -44.27719116]
[-94.49011230 -54.76058197]
[-105.21851349 -65.24397278]
[-121.01686096 -64.81084442]
[-132.43666077 -75.73622131]
[-132.70272827 -91.53826904]
[-121.65722656 -102.84191895]
[-105.85324860 -102.94091034]
[-94.66701508 -91.77651215]
[-94.73512268 -75.97237396]
[-84.00672150 -65.48898315]
[-73.27832794 -55.00558853]
[-62.54992676 -44.52219772]
[-51.82152939 -34.03880692]
[-41.09313202 -23.55541611]
[-30.30437279 -13.13415527]
[-19.45561028 -2.77537346]
[-8.60684872 7.58340836]
[2.24191308 17.94219017]
[13.09067535 28.30097198]
[23.93943787 38.65975571]
[30.92169189 40.99747849]
[34.85280609 49.20137787]
[45.58120346 59.68476868]
[54.97903824 51.17600250]
[65.60712433 44.72621536]
[77.03379822 40.48990631]
[88.81391907 38.53414154]
[100.50605774 38.83913803]
[111.68898010 41.30206680]
[121.97682190 45.74397278]
[131.03239441 51.91933060]
[138.57815552 59.52786636]
[144.40455627 68.22805786]
[148.37536621 77.65177155]
[150.43008423 87.41944122]
[150.58319092 97.15509033]
[165.51919556 98.53911591]
[180.45521545 99.92314148]
[195.39122009 101.30716705]
[210.32723999 102.69119263]
[225.26324463 104.07521820]
[240.19926453 105.45924377]
[255.13526917 106.84326935]
[266.84146118 87.22055054]
[286.83416748 76.30072021]
[309.53353882 77.05188751]
[328.64462280 89.19588470]
[338.90301514 109.30479431]
[353.89401245 108.78514862]
[368.88500977 108.26550293]
[383.87600708 107.74585724]
[398.86700439 107.22621155]
[413.85800171 106.70656586]
[422.58413696 94.01167297]
[436.94439697 88.94840240]
[451.36199951 93.26083374]
[460.36785889 105.09436035]
[475.35885620 104.57471466]
[490.34985352 104.05506897]
[505.34085083 103.53543091]
[516.08984375 92.26172638]
[531.30029297 91.94828796]
[541.98175049 102.26531219]
[556.97277832 101.74566650]
[571.96374512 101.22602081]
[581.24993896 87.06796265]
[596.99353027 81.30472565]
[612.90655518 86.02664948]
[622.75897217 99.17789459]
[637.74291992 98.48514557]
[652.68670654 97.18740082]
[667.56579590 95.28677368]
[682.44488525 93.38615417]
[697.32397461 91.48553467]
[712.20312500 89.58490753]
[727.08221436 87.68428802]
[741.96130371 85.78366089]
[750.43603516 76.09207916]
[762.84271240 74.79796600]
[772.49438477 82.05184174]
[787.39440918 80.32319641]
[802.29449463 78.59455109]
[813.96936035 62.20187759]
[833.63867188 59.77694702]
[848.47845459 72.44483185]
[863.30969238 70.20104218]
[878.14086914 67.95725250]
[881.90997314 52.30956650]
[891.37860107 39.34190369]
[905.06951904 31.02713776]
[920.86602783 28.61612129]
[936.33905029 32.44960403]
[949.12091064 41.91041946]
[957.26727295 55.52262878]
[972.07159424 53.10768890]
[986.87591553 50.69275284]
[1001.68023682 48.27781296]
[1009.51617432 34.74515152]
[1024.23498535 29.46397400]
[1038.88684082 34.92788696]
[1046.55383301 48.55699921]
[1043.61560059 63.91606140]
[1031.45959473 73.75299835]
[1015.82543945 73.42309570]
[1004.09521484 63.08213806]
[989.29089355 65.49707794]
[974.48657227 67.91201782]
[959.68218994 70.32695770]
[956.99792480 84.08238983]
[949.76934814 96.12404633]
[938.84515381 104.99848175]
[925.52166748 109.62645721]
[911.38873291 109.43417358]
[898.14019775 104.42433929]
[887.37097168 95.17826080]
[880.38470459 82.78848267]
[865.55346680 85.03227234]
[850.72222900 87.27606201]
[847.10870361 96.81712341]
[839.81695557 104.06766510]
[830.10461426 107.68330383]
[819.68597412 106.95480347]
[810.42962646 101.94607544]
[804.02313232 93.49461365]
[789.12304688 95.22325897]
[774.22302246 96.95190430]
[760.69921875 108.15980530]
[743.86193848 100.66276550]
[728.98284912 102.56338501]
[714.10369873 104.46401215]
[699.22460938 106.36463165]
[684.34552002 108.26525116]
[669.46643066 110.16587830]
[654.58734131 112.06649780]
[666.66967773 120.95560455]
[670.30615234 135.50814819]
[663.82531738 149.03587341]
[650.20587158 155.32154846]
[635.70709229 151.47631836]
[626.99255371 139.26742554]
[628.06744385 124.30598450]
[638.43566895 113.46913910]
[623.45172119 114.16189575]
[617.19110107 125.93088531]
[605.84667969 133.13513184]
[592.31658936 133.80772400]
[580.12036133 127.66684723]
[572.48339844 116.21701813]
[557.49243164 116.73666382]
[542.50140381 117.25630951]
[532.55993652 128.28820801]
[517.36431885 129.02874756]
[505.86047363 118.52642059]
[490.86947632 119.04606628]
[475.87847900 119.56571198]
[460.88748169 120.08535767]
[452.72265625 132.51408386]
[438.63827515 137.81451416]
[423.96191406 133.75775146]
[414.37762451 121.69756317]
[399.38665771 122.21720886]
[384.39566040 122.73685455]
[369.40466309 123.25650024]
[354.41366577 123.77614594]
[339.42266846 124.29579163]
[337.66311646 131.89509583]
[334.55108643 139.05586243]
[330.18737793 145.53932190]
[324.71456909 151.12878418]
[318.31243896 155.63681030]
[311.19189453 158.91157532]
[303.58819580 160.84193420]
[295.75305176 161.36120605]
[287.94635010 160.44944763]
[280.42755127 158.13427734]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 139]
[6 138]
[7 137]
[8 136]
[9 135]
[10 134]
[11 133]
[12 132]
[16 42]
[17 41]
[18 40]
[19 39]
[20 38]
[22 35]
[23 34]
[24 33]
[25 32]
[26 31]
[50 76]
[51 75]
[52 74]
[53 73]
[54 72]
[56 70]
[57 69]
[58 68]
[59 67]
[84 119]
[85 118]
[86 116]
[87 115]
[88 114]
[89 113]
[90 112]
[91 111]
[93 110]
[94 109]
[95 108]
[96 107]
[97 106]
[98 105]
[144 261]
[145 260]
[146 259]
[147 258]
[148 257]
[149 256]
[153 252]
[154 251]
[155 250]
[156 249]
[159 246]
[160 245]
[161 244]
[165 239]
[166 238]
[167 230]
[168 229]
[169 228]
[170 227]
[171 226]
[172 225]
[173 224]
[176 222]
[177 221]
[178 220]
[181 214]
[182 213]
[183 212]
[190 204]
[191 203]
[192 202]
[193 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
