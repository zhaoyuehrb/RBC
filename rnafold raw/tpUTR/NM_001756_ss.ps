%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 01:17:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGACCACCCACCCAGAGCCUCAGCACUGUCUGACUUUGGGAACCAGGGAUCCCACAGAAAUGUUUUGGAGAGCGGGAGGUUUCCCCCAAUCUCCUCCAAGUUCUUCUCCCUCCAACCAGAGUUGUGUCUAACUUUAGGCAUCUUUUAAUAAAUGUCAUUGCGACUCUGA\
) } def
/len { sequence length } bind def

/coor [
[126.76709747 148.16304016]
[120.69554138 151.06710815]
[114.31523132 153.20930481]
[107.72134399 154.55764771]
[101.01226044 155.09202576]
[94.28807068 154.80445862]
[87.64910126 153.69926453]
[81.19439697 151.79290771]
[75.02026367 149.11383057]
[69.21881104 145.70201111]
[63.87659073 141.60835266]
[59.07330704 136.89392090]
[46.66864777 145.32745361]
[34.26398849 153.76097107]
[21.85932922 162.19450378]
[9.45466995 170.62803650]
[-2.94998932 179.06156921]
[-15.35464859 187.49510193]
[-18.59981918 193.32588196]
[-23.56655121 196.18525696]
[-28.37352943 196.00074768]
[-41.07962799 203.97290039]
[-53.78572464 211.94505310]
[-66.49182129 219.91719055]
[-69.77395630 235.37692261]
[-83.07179260 243.91760254]
[-98.49594879 240.47218323]
[-106.89556122 227.08480835]
[-103.28727722 211.69793701]
[-89.81182861 203.44033813]
[-74.46396637 207.21109009]
[-61.75786972 199.23895264]
[-49.05177307 191.26679993]
[-36.34567642 183.29466248]
[-23.78817749 175.09043884]
[-11.38351917 166.65690613]
[1.02114046 158.22337341]
[13.42580032 149.78984070]
[25.83045959 141.35632324]
[38.23511887 132.92279053]
[50.63977814 124.48925781]
[45.35903549 107.10774994]
[46.01727676 88.95369720]
[52.54296112 72.00027466]
[64.22679901 58.09017563]
[79.79886627 48.73529816]
[76.25031281 34.16108322]
[72.70175171 19.58687019]
[69.15319824 5.01265430]
[65.60464478 -9.56156158]
[60.56254196 -4.97106791]
[53.90389633 -1.76969087]
[45.98260880 -0.36242256]
[37.24087524 -1.06962633]
[28.18994713 -4.10927773]
[15.94231319 -12.76926899]
[3.69467783 -21.42926025]
[-12.67607117 -22.39393616]
[-19.78313065 -37.17303467]
[-10.31536674 -50.56308365]
[5.98759699 -48.78955078]
[12.35466862 -33.67689514]
[24.60230255 -25.01690292]
[36.84993744 -16.35691261]
[43.63261795 -19.55773544]
[44.87127686 -34.50650406]
[57.19797516 -25.95938301]
[63.98065186 -29.16020584]
[65.08197784 -44.11972046]
[66.18329620 -59.07923508]
[67.28461456 -74.03874969]
[68.38594055 -88.99826813]
[69.48725891 -103.95777893]
[70.58858490 -118.91729736]
[62.18812180 -135.28390503]
[72.56908417 -149.41310120]
[73.39540100 -164.39031982]
[74.22171783 -179.36753845]
[75.04803467 -194.34477234]
[75.87435150 -209.32199097]
[62.30517960 -216.23556519]
[52.72617722 -228.07460022]
[48.79696274 -242.78790283]
[51.19829559 -257.82629395]
[59.51413345 -270.58428955]
[72.30370331 -278.85153198]
[87.35113525 -281.19558716]
[102.04936981 -277.21041870]
[113.85185242 -267.58639526]
[120.71372986 -253.99102783]
[121.44613647 -238.77972412]
[115.92218781 -224.58798218]
[105.09893799 -213.87457275]
[90.85157013 -208.49568176]
[90.02525330 -193.51844788]
[89.19893646 -178.54122925]
[88.37261963 -163.56401062]
[87.54630280 -148.58677673]
[95.38969421 -139.34638977]
[94.79999542 -126.83857727]
[85.54809570 -117.81597137]
[84.44677734 -102.85646057]
[83.34545135 -87.89694214]
[82.24413300 -72.93743134]
[81.14281464 -57.97791290]
[80.04148865 -43.01839828]
[78.94017029 -28.05888367]
[80.17885590 -13.11011696]
[83.72741699 1.46409810]
[87.27597046 16.03831291]
[90.82452393 30.61252785]
[94.37308502 45.18674469]
[113.48197174 46.57349396]
[130.96087646 54.41953278]
[144.69660950 67.77627563]
[153.02848816 85.02887726]
[154.94920349 104.09149933]
[150.22653198 122.65945435]
[162.93263245 130.63160706]
[175.63871765 138.60374451]
[188.34481812 146.57589722]
[201.05091858 154.54803467]
[213.75701904 162.52018738]
[226.46310425 170.49232483]
[239.16920471 178.46447754]
[251.87530518 186.43661499]
[265.82397461 191.95336914]
[280.54574585 194.82902527]
[295.26751709 197.70468140]
[309.98928833 200.58033752]
[324.71105957 203.45600891]
[340.03753662 197.62234497]
[352.58026123 208.18699646]
[349.43637085 224.28196716]
[333.84002686 229.35012817]
[321.83541870 218.17778015]
[307.11364746 215.30212402]
[292.39187622 212.42645264]
[277.67010498 209.55079651]
[262.94830322 206.67514038]
[274.32983398 216.44557190]
[282.55685425 228.98814392]
[286.98455811 243.31976318]
[287.26589966 258.31713867]
[283.37884521 272.80471802]
[275.62802124 285.64703369]
[264.62097168 295.83749390]
[251.22042847 302.57730103]
[236.47671509 305.33828735]
[221.54545593 303.90396118]
[207.59693909 298.38681030]
[195.72447205 289.21920776]
[186.85862732 277.11978149]
[181.69427490 263.03680420]
[180.63623047 248.07417297]
[183.76741028 233.40463257]
[190.84239197 220.17796326]
[201.30664062 209.43089294]
[214.33996582 202.00576782]
[228.92082214 198.48458862]
[243.90315247 199.14271545]
[231.19706726 191.17057800]
[218.49096680 183.19842529]
[205.78486633 175.22628784]
[193.07876587 167.25413513]
[180.37268066 159.28198242]
[167.66658020 151.30984497]
[154.96047974 143.33769226]
[142.25437927 135.36555481]
[137.62753296 140.25325012]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 41]
[13 40]
[14 39]
[15 38]
[16 37]
[17 36]
[18 35]
[21 34]
[22 33]
[23 32]
[24 31]
[46 112]
[47 111]
[48 110]
[49 109]
[50 108]
[55 64]
[56 63]
[57 62]
[68 107]
[69 106]
[70 105]
[71 104]
[72 103]
[73 102]
[74 101]
[76 98]
[77 97]
[78 96]
[79 95]
[80 94]
[118 169]
[119 168]
[120 167]
[121 166]
[122 165]
[123 164]
[124 163]
[125 162]
[126 161]
[127 140]
[128 139]
[129 138]
[130 137]
[131 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
