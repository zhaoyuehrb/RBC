%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 17:47:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGGAGAGACAUUGUGGGUGUGUAUCUUCUUAUCUCAUUUCACAAGACUGGCUUCAGGCAUAGCUGGAUCCAGGAGCUCAAUGAUGUCUUCAUUUUAUUCCUUCCUUCAUUCAACAGAUAUCCAUCAUGCACUUGCUAUGUGCAAGGCCUUUUUAGGCACUAGAGAUAUAGCAGUGACCAAAACAGACACAAAUCCUGCCC\
) } def
/len { sequence length } bind def

/coor [
[94.34839630 607.49298096]
[93.88420105 592.50018311]
[85.75673676 580.01843262]
[93.06326294 565.98541260]
[92.59906006 550.99261475]
[92.13485718 535.99981689]
[85.89270020 532.57531738]
[81.18258667 527.14569092]
[78.62585449 520.35504150]
[78.58461761 513.03100586]
[81.11123657 506.08395386]
[85.93601227 500.39373779]
[92.49512482 496.69833374]
[93.19128418 481.71450806]
[93.88745117 466.73068237]
[94.58361053 451.74682617]
[95.27976990 436.76300049]
[85.08926392 425.96072388]
[85.58181763 410.75506592]
[96.98133087 400.13955688]
[97.67749023 385.15573120]
[98.37365723 370.17187500]
[98.60578156 355.17367554]
[98.37365723 340.17547607]
[87.53439331 330.02432251]
[87.08532715 314.81732178]
[97.80628967 303.51693726]
[97.57415771 288.51873779]
[89.64083099 275.91271973]
[97.16364288 261.99447632]
[96.93151093 246.99626160]
[96.58333588 232.00030518]
[96.11914062 217.00747681]
[95.65493774 202.01466370]
[95.19073486 187.02185059]
[94.72653961 172.02903748]
[94.26233673 157.03622437]
[86.39632416 155.68653870]
[78.79399872 153.25746155]
[71.60272980 149.79605103]
[64.96189880 145.36940002]
[59.00023651 140.06333923]
[53.83330154 133.98069763]
[49.56124878 127.23937988]
[46.26688385 119.97006226]
[44.01406097 112.31365204]
[42.84645462 104.41856384]
[42.78669357 96.43782043]
[43.83594131 88.52613068]
[29.65862846 83.62676239]
[15.48131657 78.72738647]
[1.30400503 73.82801819]
[-14.26647854 76.63348389]
[-23.76851845 65.16349792]
[-37.94582748 60.26412582]
[-52.12314224 55.36475754]
[-66.30045319 50.46538544]
[-80.47776031 45.56601334]
[-94.57889557 52.70279694]
[-109.57012177 47.69894028]
[-116.55742645 33.52314758]
[-111.39534760 18.58565712]
[-97.14647675 11.74862385]
[-82.26439667 17.06833458]
[-75.57839203 31.38870239]
[-61.40108109 36.28807449]
[-47.22377014 41.18744659]
[-33.04645920 46.08681488]
[-18.86914635 50.98618698]
[-4.31271935 47.83028793]
[6.20337629 59.65070724]
[20.38068771 64.55007935]
[34.55799866 69.44944763]
[48.73530960 74.34882355]
[60.68109512 58.28579330]
[77.42167664 47.30966949]
[96.91561127 42.75894928]
[98.07514191 27.80383301]
[83.94237518 19.74773979]
[74.76918793 6.38364077]
[72.34948730 -9.58535576]
[77.11734772 -24.95595932]
[88.07016754 -36.66725540]
[102.97904968 -42.41024399]
[103.90700531 -57.38151169]
[104.83496094 -72.35278320]
[105.76291656 -87.32405090]
[106.69087219 -102.29531860]
[107.61882782 -117.26658630]
[108.54678345 -132.23785400]
[94.09330750 -136.48576355]
[80.94770813 -143.84381104]
[69.76937103 -153.94294739]
[61.11899185 -166.27659607]
[55.43046951 -180.22608948]
[52.98914337 -195.09173584]
[53.91746521 -210.12789917]
[58.16886902 -224.58035278]
[65.53011322 -237.72416687]
[75.63195038 -248.90005493]
[87.96768951 -257.54745483]
[101.91856384 -263.23257446]
[116.78480530 -265.67031860]
[131.82073975 -264.73834229]
[146.27215576 -260.48342896]
[159.41418457 -253.11900330]
[170.58763123 -243.01446533]
[179.23202515 -230.67663574]
[184.91378784 -216.72438049]
[187.34791565 -201.85754395]
[186.41230774 -186.82183838]
[182.15390015 -172.37145996]
[174.78628540 -159.23120117]
[164.67903137 -148.06021118]
[152.33911133 -139.41880798]
[138.38548279 -133.74041748]
[123.51805878 -131.30990601]
[122.59009552 -116.33863068]
[121.66213989 -101.36736298]
[120.73418427 -86.39609528]
[119.80622864 -71.42482758]
[118.87827301 -56.45355606]
[117.95031738 -41.48228836]
[130.37503052 -35.30270004]
[139.53401184 -24.82043648]
[144.01901245 -11.59705544]
[143.12127686 2.38073897]
[136.94346619 14.99956512]
[126.38903046 24.33890152]
[113.03025818 28.96336174]
[111.87072754 43.91847992]
[134.51135254 51.66188049]
[152.73893738 68.43524933]
[166.67359924 62.88317871]
[180.60824585 57.33110428]
[194.54289246 51.77903366]
[208.47755432 46.22695923]
[216.11242676 32.11709976]
[231.92900085 29.43088531]
[243.79412842 40.22894669]
[242.60591125 56.22793579]
[229.27584839 65.15480042]
[214.02961731 60.16160965]
[200.09497070 65.71368408]
[186.16032410 71.26575470]
[172.22566223 76.81782532]
[158.29101562 82.36990356]
[160.83221436 97.15307617]
[175.82098389 97.73327637]
[190.80976868 98.31347656]
[205.79853821 98.89367676]
[220.04702759 90.77502441]
[234.06369019 99.28768921]
[233.42936707 115.67456055]
[218.79661560 123.07823944]
[205.21833801 113.88244629]
[190.22956848 113.30224609]
[175.24078369 112.72205353]
[160.25201416 112.14185333]
[154.83903503 125.87145996]
[146.40054321 137.73507690]
[135.50915527 147.09257507]
[122.86582947 153.46774292]
[109.25514984 156.57202148]
[109.71935272 171.56483459]
[110.18355560 186.55764771]
[110.64775085 201.55046082]
[111.11195374 216.54328918]
[111.57615662 231.53610229]
[114.97145081 240.02313232]
[111.92971802 246.76412964]
[112.16184235 261.76232910]
[120.11177826 275.44113159]
[112.57236481 288.28659058]
[112.80448914 303.28479004]
[123.87002563 314.24798584]
[123.89178467 329.46160889]
[113.37185669 339.94335938]
[113.60398865 354.94155884]
[115.97309875 358.59771729]
[116.95294189 362.43200684]
[116.65863800 365.98464966]
[115.34314728 368.88073730]
[113.35749054 370.86804199]
[112.66133118 385.85189819]
[111.96516418 400.83572388]
[122.33128357 412.46246338]
[121.41182709 427.64831543]
[110.26361084 437.45916748]
[109.56745148 452.44299316]
[108.87128448 467.42681885]
[108.17512512 482.41067505]
[107.47896576 497.39450073]
[119.83235168 517.02496338]
[107.12767792 535.53558350]
[107.59188080 550.52844238]
[108.05607605 565.52124023]
[116.21674347 579.07537842]
[108.87701416 592.03594971]
[109.34121704 607.02880859]
[115.87482452 622.67321777]
[102.65047455 633.28228760]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 200]
[2 199]
[4 197]
[5 196]
[6 195]
[13 193]
[14 192]
[15 191]
[16 190]
[17 189]
[20 186]
[21 185]
[22 184]
[23 179]
[24 178]
[27 175]
[28 174]
[30 172]
[31 171]
[32 169]
[33 168]
[34 167]
[35 166]
[36 165]
[37 164]
[49 74]
[50 73]
[51 72]
[52 71]
[54 69]
[55 68]
[56 67]
[57 66]
[58 65]
[77 131]
[78 130]
[84 123]
[85 122]
[86 121]
[87 120]
[88 119]
[89 118]
[90 117]
[133 147]
[134 146]
[135 145]
[136 144]
[137 143]
[148 159]
[149 158]
[150 157]
[151 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
