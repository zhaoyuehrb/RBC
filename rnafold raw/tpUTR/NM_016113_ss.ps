%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 14:18:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGCCCAGAUGCAGCAGGAGGCCAGAGGACAGAGCAGAGGAUCUUUCCAACCACAUCUGCUGGCUCUGGGGUCCCAGUGAAUUCUGGUGGCAAAUAUAUAUUUUCACUAACUAA\
) } def
/len { sequence length } bind def

/coor [
[139.52627563 165.05967712]
[151.65507507 156.23402405]
[165.36549377 150.14926147]
[180.05175781 147.07572937]
[166.54995728 140.54110718]
[153.04814148 134.00650024]
[139.54634094 127.47188568]
[126.04452515 120.93727112]
[112.54272461 114.40265656]
[98.82287598 119.06228638]
[85.78056335 112.75005341]
[80.92266083 99.09915161]
[67.42086029 92.56453705]
[53.91904831 86.02992249]
[40.41724014 79.49530792]
[26.91543388 72.96069336]
[13.41362572 66.42607880]
[-0.08818219 59.89146805]
[-15.88068581 60.84405136]
[-23.96607971 48.33502579]
[-34.75050735 57.57991791]
[-48.21123123 61.97848129]
[-62.28704453 60.89219666]
[-74.83593750 54.51977539]
[-83.96104431 43.86179733]
[-88.29737854 30.56375313]
[-87.21590424 16.66204834]
[-100.53417969 9.76107311]
[-113.85245514 2.86009741]
[-129.66508484 3.38095522]
[-137.40577698 -9.34425259]
[-150.72406006 -16.24522781]
[-164.04234314 -23.14620399]
[-177.85510254 -16.07604599]
[-193.18035889 -18.50836372]
[-204.12522888 -29.50788307]
[-206.48120117 -44.84506226]
[-199.34233093 -58.62244415]
[-185.45367432 -65.54234314]
[-170.15571594 -62.94392014]
[-159.33081055 -51.82631683]
[-157.14137268 -36.46448135]
[-143.82308960 -29.56350517]
[-130.50480652 -22.66253090]
[-115.64479065 -23.67699242]
[-106.95148468 -10.45818043]
[-93.63320160 -3.55720520]
[-80.31492615 3.34377027]
[-67.78211212 -6.46842527]
[-52.17506790 -9.87687492]
[-36.57998657 -6.15610790]
[-24.10308075 4.00447702]
[-17.25189972 18.62770462]
[-17.43146515 34.83321762]
[-2.60470080 33.41323471]
[6.44643259 46.38965988]
[19.94824028 52.92427444]
[33.45004654 59.45888901]
[46.95185471 65.99349976]
[60.45366287 72.52811432]
[73.95547485 79.06272888]
[87.45727539 85.59734344]
[101.17712402 80.93771362]
[114.21943665 87.24994659]
[119.07733917 100.90084839]
[132.57914734 107.43546295]
[146.08094788 113.97007751]
[159.58276367 120.50469208]
[173.08456421 127.03930664]
[186.58638000 133.57391357]
[201.53602600 134.80186462]
[215.92317200 130.55799866]
[230.31030273 126.31414795]
[244.63812256 121.87417603]
[258.90399170 117.23892212]
[273.16983032 112.60366821]
[287.43566895 107.96841431]
[294.38644409 93.77467346]
[309.36474609 88.73223877]
[323.48419189 95.83269501]
[328.36801147 110.86346436]
[321.11865234 124.90706635]
[306.03710938 129.63166809]
[292.07092285 122.23426056]
[277.80508423 126.86951447]
[263.53924561 131.50477600]
[249.27337646 136.14002991]
[243.81045532 141.26919556]
[234.55415344 140.70127869]
[220.16702271 144.94514465]
[205.77989197 149.18899536]
[219.76382446 154.61573792]
[232.29811096 162.85539246]
[242.82487488 173.54121399]
[250.87564087 186.19764709]
[256.09207153 200.26138306]
[258.24203491 215.10650635]
[257.22979736 230.07231140]
[253.10046387 244.49273682]
[246.03778076 257.72598267]
[236.35607910 269.18304443]
[224.48628235 278.35406494]
[210.95663452 284.83087158]
[196.36932373 288.32519531]
[181.37355042 288.68148804]
[166.63673401 285.88394165]
[152.81475830 280.05700684]
[140.52278137 271.46008301]
[130.30787659 260.47576904]
[122.62465668 247.59289551]
[117.81508636 233.38485718]
[116.09322357 218.48402405]
[117.53569794 203.55352783]
[122.07830811 189.25791931]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 70]
[5 69]
[6 68]
[7 67]
[8 66]
[9 65]
[12 62]
[13 61]
[14 60]
[15 59]
[16 58]
[17 57]
[18 56]
[20 54]
[27 48]
[28 47]
[29 46]
[31 44]
[32 43]
[33 42]
[71 91]
[72 90]
[73 89]
[74 87]
[75 86]
[76 85]
[77 84]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
