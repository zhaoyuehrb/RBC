%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Sep  9 23:56:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCAGCCGCGGGCCCAGGGUGCUGUUGGUGUCCUCAGAAGUGCCGGGGAUUCUGGACUGGCUCCCUCCCCUCCUGUUGCAGCACAAGGCCGGGGUCUCUGGGGGGCUGGAGAAGCCUCCCUCAUUCCUCCCAGGAAUUAAUAAAUGUGAAGAGAGGCUCUGUUUAAAAUGUCUUUGGACUCCCAGGGCUGAGUGGGCUGGGAUCUCGUGUCCUCAA\
) } def
/len { sequence length } bind def

/coor [
[125.45707703 345.24633789]
[140.36039734 343.54605103]
[152.93577576 351.71969604]
[149.70391846 337.07202148]
[146.47204590 322.42431641]
[143.24017334 307.77661133]
[140.00830078 293.12890625]
[136.67048645 278.50500488]
[133.22689819 263.90560913]
[120.52678680 251.79196167]
[125.97949219 234.20144653]
[122.32491302 219.65345764]
[118.67034149 205.10546875]
[115.01576233 190.55747986]
[111.36118317 176.00947571]
[100.75618744 165.55084229]
[104.89807892 150.28141785]
[101.24350739 135.73341370]
[97.58892822 121.18542480]
[74.39704132 99.66204834]
[97.40530396 70.22465515]
[82.40884399 69.89894104]
[67.41238403 69.57321930]
[54.99823380 81.90137482]
[37.84664536 81.44367981]
[26.56127548 68.97182465]
[11.56166744 68.86324310]
[-2.29415059 76.50045013]
[-14.96508121 68.67121887]
[-29.96468925 68.56264496]
[-44.96429443 68.45406342]
[-53.40277863 78.94853973]
[-66.15813446 82.61469269]
[-78.51342010 78.32983398]
[-86.03282166 67.86940002]
[-101.02928925 67.54367828]
[-116.02574921 67.21796417]
[-129.99067688 74.65377808]
[-142.54693604 66.64193726]
[-157.54341125 66.31622314]
[-166.18646240 69.25751495]
[-172.75418091 65.87567902]
[-184.27424622 76.36023712]
[-199.46868896 75.59623718]
[-209.39311218 64.54900360]
[-224.38328552 64.00622559]
[-239.37345886 63.46343994]
[-254.36364746 62.92065811]
[-269.35382080 62.37787247]
[-283.42492676 69.61074066]
[-295.86389160 61.41796112]
[-310.85406494 60.87517929]
[-322.25430298 71.82096100]
[-338.05340576 71.41609192]
[-348.87805176 59.90076447]
[-348.30615234 44.10682678]
[-336.67703247 33.40453720]
[-320.89001465 34.14337540]
[-310.31127930 45.88500214]
[-295.32110596 46.42778778]
[-282.32220459 39.15609741]
[-268.81103516 47.38769531]
[-253.82086182 47.93048096]
[-238.83068848 48.47326279]
[-223.84049988 49.01604843]
[-208.85032654 49.55883026]
[-198.15290833 39.25830460]
[-182.94300842 39.59522247]
[-172.21139526 50.88549805]
[-157.21768188 51.31975937]
[-142.22122192 51.64547729]
[-129.32894897 44.18636322]
[-115.70003510 52.22150421]
[-100.70357513 52.54721832]
[-85.70710754 52.87293243]
[-74.06539917 40.73302460]
[-56.90774918 40.77206802]
[-44.85571671 53.45445633]
[-29.85610962 53.56303406]
[-14.85650253 53.67161560]
[-2.07355618 46.02664566]
[11.67024708 53.86363602]
[26.66985512 53.97221756]
[34.48894882 43.73386002]
[46.96310425 39.80849075]
[59.60697174 43.84238434]
[67.73809814 54.57675934]
[82.73455811 54.90247345]
[97.73102570 55.22819138]
[110.68505859 47.66558838]
[117.77395630 34.44638062]
[124.86286163 21.22716904]
[131.95175171 8.00796032]
[139.04064941 -5.21124935]
[146.12956238 -18.43045998]
[153.21846008 -31.64966965]
[160.30735779 -44.86887741]
[167.39625549 -58.08808899]
[174.48515320 -71.30729675]
[178.45477295 -85.77250671]
[179.10604858 -100.75835419]
[179.75732422 -115.74420929]
[180.40859985 -130.73007202]
[181.05987549 -145.71592712]
[181.71115112 -160.70178223]
[182.36242676 -175.68763733]
[183.01371765 -190.67349243]
[173.27635193 -203.42352295]
[177.31318665 -218.95037842]
[192.02751160 -225.34318542]
[206.13175964 -217.69793701]
[208.80635071 -201.87939453]
[197.99957275 -190.02220154]
[197.34828186 -175.03634644]
[196.69700623 -160.05049133]
[196.04573059 -145.06463623]
[195.39445496 -130.07879639]
[194.74317932 -115.09293365]
[194.09190369 -100.10707855]
[193.44062805 -85.12122345]
[200.52867126 -82.66976929]
[214.70475769 -77.76686096]
[221.79280090 -75.31540680]
[230.53915405 -87.50151062]
[239.28550720 -99.68762207]
[248.03187561 -111.87373352]
[256.77822876 -124.05983734]
[265.52459717 -136.24595642]
[269.84814453 -152.63934326]
[286.79776001 -153.02288818]
[291.85842896 -136.84185791]
[277.71069336 -127.49959564]
[268.96432495 -115.31348419]
[260.21798706 -103.12737274]
[251.47161865 -90.94126892]
[242.72526550 -78.75515747]
[233.97891235 -66.56904602]
[247.49688721 -73.07013702]
[259.47341919 -64.03890991]
[267.59494019 -51.42777252]
[270.86245728 -36.78798676]
[268.87402344 -21.92036438]
[261.87426758 -8.65373802]
[250.72419739 1.37999201]
[236.79534912 6.94659948]
[221.80108643 7.36134768]
[207.58581543 2.57321978]
[195.89813232 -6.82880735]
[188.17572021 -19.68821144]
[185.36846924 -34.42318344]
[187.82089233 -49.21885300]
[187.70436096 -64.21839905]
[180.61546326 -50.99918747]
[173.52656555 -37.77997971]
[166.43766785 -24.56077003]
[159.34877014 -11.34155941]
[152.25987244 1.87764990]
[145.17097473 15.09685993]
[138.08206177 28.31606865]
[130.99316406 41.53527832]
[123.90426636 54.75448990]
[126.61060333 61.74918365]
[139.16932678 53.54683685]
[150.28855896 43.47892761]
[164.88354492 46.94102478]
[170.29611206 60.93045807]
[161.83192444 73.31422424]
[146.83219910 73.35203552]
[132.02326965 75.73857117]
[134.72959900 82.73326874]
[148.86982727 87.73866272]
[163.01005554 92.74406433]
[179.02679443 89.22322083]
[189.88296509 101.51450348]
[184.41069031 116.97367859]
[168.23936462 119.69767761]
[158.00466919 106.88428497]
[143.86444092 101.87889099]
[129.72421265 96.87349701]
[123.27185822 110.67924500]
[112.13692474 117.53085327]
[115.79149628 132.07884216]
[119.44607544 146.62683105]
[130.31246948 158.12605286]
[125.90917969 172.35490417]
[129.56375122 186.90289307]
[133.21833801 201.45089722]
[136.87290955 215.99888611]
[140.52748108 230.54687500]
[151.17198181 237.82572937]
[153.91815186 250.01466370]
[147.82627869 260.46203613]
[151.26986694 275.06140137]
[156.28366089 282.69131470]
[154.65600586 289.89703369]
[157.88786316 304.54473877]
[161.11973572 319.19244385]
[164.35160828 333.84014893]
[167.58348083 348.48782349]
[171.55308533 362.95303345]
[176.25025940 377.19860840]
[180.94743347 391.44421387]
[185.64460754 405.68978882]
[199.26570129 414.16592407]
[200.98820496 430.11624146]
[189.49076843 441.30502319]
[173.59323120 439.14913940]
[165.49081421 425.30245972]
[171.39901733 410.38696289]
[166.70185852 396.14138794]
[162.00468445 381.89578247]
[157.30751038 367.65020752]
[150.66419983 381.09887695]
[136.98002625 387.24243164]
[122.51553345 383.27020264]
[113.88826752 370.99951172]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 199]
[4 198]
[5 197]
[6 196]
[7 195]
[8 193]
[9 192]
[11 189]
[12 188]
[13 187]
[14 186]
[15 185]
[17 183]
[18 182]
[19 181]
[21 89]
[22 88]
[23 87]
[26 83]
[27 82]
[29 80]
[30 79]
[31 78]
[35 75]
[36 74]
[37 73]
[39 71]
[40 70]
[42 69]
[45 66]
[46 65]
[47 64]
[48 63]
[49 62]
[51 60]
[52 59]
[90 161]
[91 160]
[92 159]
[93 158]
[94 157]
[95 156]
[96 155]
[97 154]
[98 153]
[99 152]
[100 120]
[101 119]
[102 118]
[103 117]
[104 116]
[105 115]
[106 114]
[107 113]
[123 137]
[124 136]
[125 135]
[126 134]
[127 133]
[128 132]
[170 179]
[171 178]
[172 177]
[200 212]
[201 211]
[202 210]
[203 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
