%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 03:43:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCUGGGAGACCAGAGUCCCCUUUAGGGUUCCCGGAGCUCCGGGAAGACCCGCCCAUCCCAGGACUCCAGAUGCCAGGAGCCCUGCUGCCCACAUGCAAGGACCAGCAUCUCCUGAGAGGACGCCUGGGCUUACCUGGGGGGCAGGAUGCCUGGGGACAGUUCAGGACACACACACAGUAGGCCCGCAAUAAAAGCAACACCCCUUCA\
) } def
/len { sequence length } bind def

/coor [
[99.20790863 176.40788269]
[97.30564880 161.52899170]
[95.40338898 146.65010071]
[87.96394348 147.60122681]
[83.75753021 161.99935913]
[79.55111694 176.39749146]
[75.34471130 190.79562378]
[79.75616455 206.59027100]
[68.09154510 218.11714172]
[52.35041428 213.51837158]
[48.72589111 197.52478027]
[60.94658279 186.58920288]
[65.15299225 172.19107056]
[69.35940552 157.79295349]
[73.56581116 143.39482117]
[59.66186905 104.28160095]
[79.14416504 77.99609375]
[71.83933258 64.89497375]
[64.53450012 51.79384995]
[57.22967148 38.69272614]
[49.92483902 25.59160423]
[42.62000656 12.49048042]
[42.60218048 27.49046898]
[30.36362267 36.16328430]
[16.20536041 31.20913315]
[12.04421043 16.79785919]
[21.38262939 5.05920172]
[7.50306559 10.74758339]
[-6.37649870 16.43596458]
[-20.25606346 22.12434769]
[-34.04898071 28.01972198]
[-47.75216293 34.12077332]
[-61.45534515 40.22182083]
[-75.15852356 46.32287216]
[-88.86170959 52.42391968]
[-102.56488800 58.52497101]
[-111.76107025 72.10298157]
[-128.09645081 70.65813446]
[-134.76658630 55.67676544]
[-124.90981293 42.57042313]
[-108.66593933 44.82178879]
[-94.96275330 38.72074127]
[-81.25957489 32.61968994]
[-67.55639648 26.51864052]
[-53.85321045 20.41759109]
[-40.15002823 14.31654072]
[-37.63236237 10.25733852]
[-32.53764343 7.73703766]
[-25.94444466 8.24478245]
[-12.06488037 2.55640101]
[1.81468379 -3.13198090]
[15.69424820 -8.82036304]
[30.42461395 -28.20643234]
[27.52577400 -42.92365646]
[24.62693596 -57.64088440]
[21.72809792 -72.35810852]
[17.67217445 -77.58090210]
[16.96888351 -83.22124481]
[18.96961021 -87.55862427]
[16.51234245 -102.35597992]
[14.05507278 -117.15334320]
[11.59780502 -131.95069885]
[9.14053631 -146.74806213]
[6.68326712 -161.54542542]
[-9.13547611 -171.96937561]
[-12.25880241 -190.33064270]
[-1.16337407 -204.89041138]
[-4.06221294 -219.60763550]
[-6.96105146 -234.32485962]
[-9.85988998 -249.04208374]
[-12.75872898 -263.75930786]
[-23.01713371 -275.80404663]
[-17.88531494 -289.78668213]
[-20.78415298 -304.50390625]
[-23.79299545 -319.19903564]
[-26.91167068 -333.87124634]
[-30.46787643 -348.44360352]
[-34.45842743 -362.90304565]
[-38.44898224 -377.36248779]
[-42.43953323 -391.82192993]
[-46.43008804 -406.28137207]
[-56.18550873 -411.09402466]
[-61.57057190 -420.29193115]
[-61.01548386 -430.71597290]
[-54.94466400 -438.93652344]
[-58.50086975 -453.50888062]
[-62.05707550 -468.08120728]
[-65.61328125 -482.65356445]
[-69.16948700 -497.22592163]
[-82.20025635 -510.23620605]
[-76.62656403 -526.87615967]
[-80.40036011 -541.39373779]
[-94.89345551 -546.93713379]
[-103.33202362 -559.95910645]
[-102.47125244 -575.45227051]
[-92.64214325 -587.45928955]
[-77.62418365 -591.36315918]
[-63.19207764 -585.66278076]
[-54.89527130 -572.55010986]
[-55.92405701 -557.06719971]
[-65.88284302 -545.16748047]
[-62.10903931 -530.64996338]
[-51.84062576 -524.25482178]
[-48.57811356 -512.19030762]
[-54.59713745 -500.78213501]
[-51.04093170 -486.20977783]
[-47.48472595 -471.63742065]
[-43.92852020 -457.06506348]
[-40.37231445 -442.49273682]
[-26.02305794 -429.53244019]
[-31.97064400 -410.27191162]
[-27.98009109 -395.81246948]
[-23.98953819 -381.35302734]
[-19.99898529 -366.89358521]
[-16.00843239 -352.43414307]
[-13.63886833 -350.93499756]
[-11.72060108 -348.40655518]
[-10.64878464 -345.01608276]
[-10.75075245 -341.07070923]
[-12.23945618 -336.98989868]
[-9.12078094 -322.31768799]
[-4.65492487 -316.42816162]
[-6.06692791 -307.40274048]
[-3.16808891 -292.68551636]
[6.88297129 -281.69345093]
[1.95849669 -266.65814209]
[4.85733557 -251.94091797]
[7.75617409 -237.22369385]
[10.65501308 -222.50646973]
[13.55385208 -207.78924561]
[24.18150520 -203.63716125]
[31.56122589 -194.77847290]
[33.77053452 -183.34019470]
[30.14692307 -172.14233398]
[21.48062706 -164.00268555]
[23.93789482 -149.20532227]
[26.39516258 -134.40797424]
[28.85243225 -119.61061096]
[31.30970001 -104.81324768]
[33.76696777 -90.01589203]
[36.44532394 -75.25695038]
[39.34416199 -60.53972244]
[42.24300003 -45.82249832]
[45.14183807 -31.10527039]
[57.84270096 -23.12479019]
[72.36022186 -26.89859200]
[86.87774658 -30.67239189]
[100.68622589 -40.50916672]
[113.96114349 -29.96341324]
[107.50238800 -14.28792953]
[90.65154266 -16.15487099]
[76.13402557 -12.38107014]
[61.61650467 -8.60726833]
[55.72112656 5.18564796]
[63.02595901 18.28677177]
[70.33079529 31.38789368]
[77.63562775 44.48901749]
[84.94046021 57.59014130]
[92.24529266 70.69126129]
[101.30010223 66.78031158]
[111.95719910 65.86045074]
[123.18330383 68.51337433]
[133.75234985 74.95631409]
[142.37431335 84.98323822]
[147.84048462 97.95125580]
[149.16935730 112.81605530]
[161.92955017 120.70130920]
[177.73646545 121.37387085]
[184.49592590 134.64636230]
[199.69374084 131.23107910]
[212.52206421 139.40962219]
[215.68435669 153.91946411]
[228.44454956 161.80473328]
[244.32583618 159.53215027]
[255.90516663 170.63613892]
[254.29986572 186.59867859]
[240.74140930 195.17466736]
[225.63066101 189.78533936]
[220.55929565 174.56492615]
[207.79910278 166.67967224]
[193.40728760 170.34184265]
[180.35430908 162.52684021]
[176.61067200 147.40655518]
[161.71646118 147.29800415]
[154.04429626 133.46151733]
[141.28410339 125.57625580]
[130.59844971 136.10322571]
[138.29194641 148.97994995]
[153.75857544 151.28591919]
[164.08569336 163.02835083]
[164.39715576 178.66282654]
[154.54589844 190.80723572]
[139.18338013 193.72735596]
[125.56331635 186.04438782]
[120.11668396 171.38601685]
[125.41521454 156.67344666]
[117.72172546 143.79670715]
[110.28227997 144.74784851]
[112.18453979 159.62673950]
[114.08679962 174.50563049]
[115.98905945 189.38452148]
[117.89131927 204.26341248]
[119.79357910 219.14230347]
[121.69583893 234.02119446]
[123.59784698 248.90011597]
[108.71889496 250.80187988]
[106.81694031 235.92344666]
[104.91468811 221.04455566]
[103.01242828 206.16566467]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 15]
[5 14]
[6 13]
[7 12]
[17 159]
[18 158]
[19 157]
[20 156]
[21 155]
[22 154]
[27 52]
[28 51]
[29 50]
[30 49]
[31 46]
[32 45]
[33 44]
[34 43]
[35 42]
[36 41]
[53 144]
[54 143]
[55 142]
[56 141]
[59 140]
[60 139]
[61 138]
[62 137]
[63 136]
[64 135]
[67 130]
[68 129]
[69 128]
[70 127]
[71 126]
[73 124]
[74 123]
[75 121]
[76 120]
[77 115]
[78 114]
[79 113]
[80 112]
[81 111]
[85 109]
[86 108]
[87 107]
[88 106]
[89 105]
[91 102]
[92 101]
[145 153]
[146 152]
[147 151]
[166 186]
[167 185]
[169 183]
[172 180]
[173 179]
[187 197]
[188 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
