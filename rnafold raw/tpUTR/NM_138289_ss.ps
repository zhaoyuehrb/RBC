%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 03:57:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUCCUUGAGCAGAGGAGACAUCUUGAAGUGUCAGAUUACAGGAGUACCAGUGGGAGAUGGCAUUUUCUUCUGGGCUUCAGCAUGAUGUUCAAUAAAAGUUUUGCCAUUUCAA\
) } def
/len { sequence length } bind def

/coor [
[124.61955261 115.32073975]
[118.28528595 123.60766602]
[109.19453430 129.31642151]
[98.38345337 131.54660034]
[89.90143585 143.91815186]
[81.41941833 156.28970337]
[72.93740082 168.66125488]
[64.45538330 181.03282166]
[65.97161865 197.00405884]
[54.33053970 208.04330444]
[38.46218491 205.68217468]
[30.53940010 191.73194885]
[36.63986588 176.89402771]
[52.08382797 172.55079651]
[60.56584549 160.17924500]
[69.04785919 147.80769348]
[77.52987671 135.43612671]
[86.01189423 123.06457520]
[78.21813965 110.24828339]
[63.33133698 112.08762360]
[48.44453430 113.92696381]
[33.55773544 115.76629639]
[18.67093277 117.60563660]
[9.14913559 130.21955872]
[-6.51451826 132.32324219]
[-19.02706146 122.66860962]
[-20.96502113 106.98358917]
[-11.17864418 94.57382202]
[4.52598858 92.80180359]
[16.83159637 102.71883392]
[31.71839714 100.87949371]
[46.60519791 99.04016113]
[61.49199677 97.20082092]
[76.37879944 95.36148834]
[79.46048737 88.52385712]
[70.69902802 76.34860229]
[85.62386322 74.84859467]
[88.70555115 68.01096344]
[80.22353363 55.63940811]
[71.74151611 43.26785278]
[63.25950241 30.89629555]
[49.07445526 23.88951683]
[48.25908661 9.01724529]
[39.77706909 -3.35431027]
[24.75804329 -9.93920517]
[23.22039413 -26.26610565]
[36.74592590 -35.53929520]
[51.42072678 -28.21931267]
[52.14862442 -11.83632755]
[60.63064194 0.53522831]
[74.20899963 6.65711117]
[75.63105774 22.41427803]
[84.11307526 34.78583527]
[92.59509277 47.15739059]
[101.07711029 59.52894592]
[114.75237274 65.69232178]
[129.63917542 63.85298538]
[144.52597046 62.01364899]
[159.41278076 60.17430878]
[174.29957581 58.33497238]
[189.18637085 56.49563599]
[204.07318115 54.65629959]
[218.95997620 52.81695938]
[233.84677124 50.97762299]
[239.64868164 38.39004517]
[250.84471130 30.40524292]
[264.41934204 29.04133606]
[276.78149414 34.55071640]
[284.71463013 45.38175964]
[299.64611816 43.94973755]
[314.57760620 42.51771545]
[331.02569580 28.92487526]
[349.58914185 37.77014542]
[364.35327148 35.12059784]
[379.11743164 32.47104645]
[393.88156128 29.82149696]
[408.64569092 27.17194939]
[420.86218262 17.11869240]
[434.75604248 22.48623085]
[449.52017212 19.83668137]
[464.28430176 17.18713188]
[478.80639648 8.43809414]
[491.23361206 19.97066498]
[483.59194946 35.10477066]
[466.93386841 31.95127487]
[452.16973877 34.60082245]
[437.40557861 37.25037384]
[426.24511719 47.11411667]
[411.29525757 41.93609238]
[396.53109741 44.58563995]
[381.76696777 47.23518753]
[367.00283813 49.88473892]
[352.23867798 52.53428650]
[348.30688477 60.75783539]
[340.87252808 66.26856232]
[331.58633423 67.68113708]
[322.58721924 64.53878784]
[316.00961304 57.44920349]
[301.07812500 58.88122559]
[286.14663696 60.31324768]
[278.32241821 74.67332458]
[263.35147095 81.65446472]
[246.99752808 78.35243988]
[235.68611145 65.86442566]
[220.79931641 67.70375824]
[205.91250610 69.54309845]
[191.02571106 71.38243866]
[176.13891602 73.22177124]
[161.25210571 75.06111145]
[146.36531067 76.90045166]
[131.47851562 78.73978424]
[116.59170532 80.57912445]
[123.06327820 87.13916016]
[126.94934082 95.82850647]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 18]
[5 17]
[6 16]
[7 15]
[8 14]
[19 34]
[20 33]
[21 32]
[22 31]
[23 30]
[38 55]
[39 54]
[40 53]
[41 52]
[43 50]
[44 49]
[56 112]
[57 111]
[58 110]
[59 109]
[60 108]
[61 107]
[62 106]
[63 105]
[64 104]
[69 100]
[70 99]
[71 98]
[73 93]
[74 92]
[75 91]
[76 90]
[77 89]
[79 87]
[80 86]
[81 85]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
