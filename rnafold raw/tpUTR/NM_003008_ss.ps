%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 01:21:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUGUUGCUUAGCAACCACUUGAAAAGCUGGACCAAUAGCAAGGUGUCACCCGACCUCAGUGAAGUCUUUGAUGUUUCUGAGAGGCAGACUCCCAUGUGGUCCCAGAUCCUUGGUCCAUGGAUGACACCACCUUCCCAUGCUUCCUUGCAUUAGGCUUUCUAAACCCGGAGCCCCUUCAAACUUCCAAUAAAGGGAUCAUUUUCUGCUUUA\
) } def
/len { sequence length } bind def

/coor [
[124.35871124 234.46018982]
[120.85165405 219.87593079]
[117.34459686 205.29167175]
[113.83753204 190.70741272]
[98.85221863 190.04391479]
[94.06992340 204.26115417]
[89.28762817 218.47837830]
[84.50534058 232.69560242]
[79.72304535 246.91284180]
[80.40403748 263.85311890]
[64.31431580 269.19702148]
[54.72517395 255.21543884]
[65.50581360 242.13055420]
[70.28810883 227.91331482]
[75.07039642 213.69609070]
[79.85269165 199.47885132]
[84.63498688 185.26162720]
[78.76140594 180.59780884]
[69.43379211 192.34497070]
[60.10617828 204.09211731]
[50.77856064 215.83926392]
[41.45076370 227.58627319]
[29.70389938 218.25830078]
[39.03141022 206.51165771]
[48.35902405 194.76449585]
[57.68664169 183.01734924]
[67.01425934 171.27020264]
[61.14068222 166.60638428]
[48.37715912 174.48626709]
[35.61363602 182.36614990]
[22.85011292 190.24603271]
[19.45605278 205.68156433]
[6.09668827 214.12567139]
[-9.30210495 210.56860352]
[-17.60449600 197.12071228]
[-13.88482571 181.76039124]
[-0.34990579 173.60064697]
[14.97023392 177.48249817]
[27.73375702 169.60263062]
[40.49728012 161.72274780]
[53.26080322 153.84286499]
[37.77666855 118.36264038]
[43.85541534 83.73494720]
[65.69721985 60.87921524]
[57.53691101 48.29313660]
[49.37660599 35.70705795]
[41.21630096 23.12097740]
[33.05599213 10.53489685]
[24.89568710 -2.05118299]
[16.73538208 -14.63726330]
[2.73565412 -22.00735092]
[2.30391049 -36.89569855]
[-5.85639572 -49.48177719]
[-37.79295731 -64.37032318]
[-48.82092667 -74.53810883]
[-59.84889603 -84.70590210]
[-70.87686157 -94.87368774]
[-86.26747131 -98.53971863]
[-90.37978363 -112.85537720]
[-101.40775299 -123.02317047]
[-116.97770691 -122.56013489]
[-128.01678467 -133.02880859]
[-128.36227417 -147.87522888]
[-143.75288391 -151.54125977]
[-147.86518860 -165.85693359]
[-158.89315796 -176.02471924]
[-169.92112732 -186.19250488]
[-180.94909668 -196.36029053]
[-191.97706604 -206.52807617]
[-193.97756958 -191.66207886]
[-206.76907349 -183.82771301]
[-220.92056274 -188.80119324]
[-225.99826050 -202.91561890]
[-218.25845337 -215.76455688]
[-203.40760803 -217.87463379]
[-213.65644836 -228.82731628]
[-223.90528870 -239.77999878]
[-234.15412903 -250.73268127]
[-244.40295410 -261.68536377]
[-259.64004517 -269.11956787]
[-256.71441650 -285.81918335]
[-239.85754395 -287.63079834]
[-233.45027161 -271.93420410]
[-223.20143127 -260.98153687]
[-212.95259094 -250.02883911]
[-202.70376587 -239.07615662]
[-192.45492554 -228.12345886]
[-181.80928040 -217.55604553]
[-170.78131104 -207.38825989]
[-159.75334167 -197.22047424]
[-148.72537231 -187.05268860]
[-137.69740295 -176.88490295]
[-123.09559631 -173.94613647]
[-118.19448853 -158.90319824]
[-103.36888885 -159.76188660]
[-92.04011536 -149.60740662]
[-91.23996735 -134.05113220]
[-80.21199799 -123.88334656]
[-65.61018372 -120.94458771]
[-60.70907593 -105.90165710]
[-49.68111038 -95.73387146]
[-38.65314102 -85.56607819]
[-27.62516975 -75.39829254]
[-13.63339138 -80.80477905]
[-12.30768967 -95.74608612]
[-10.98198795 -110.68738556]
[-9.65628624 -125.62868500]
[-17.05550003 -140.26370239]
[-7.85556841 -153.83917236]
[8.47940636 -152.38981628]
[15.14540291 -137.40660095]
[5.28501558 -124.30298615]
[3.95931411 -109.36168671]
[2.63361263 -94.42037964]
[1.30791104 -79.47908020]
[12.29428291 -89.69179535]
[27.24433899 -88.46876526]
[36.42477798 -76.60623169]
[33.85862732 -61.82736588]
[21.21659851 -53.75401306]
[6.72968435 -57.64208603]
[14.88999081 -45.05600357]
[28.30603790 -38.58615494]
[29.32146072 -22.79756927]
[37.48176575 -10.21148872]
[45.64207458 2.37459087]
[53.80237961 14.96067047]
[61.96268463 27.54675102]
[70.12299347 40.13283157]
[78.28329468 52.71891022]
[86.07314301 49.86857986]
[94.21696472 48.29242706]
[102.50776672 48.03050995]
[110.73483276 49.08948898]
[118.68905640 51.44244766]
[126.16826630 55.02958298]
[132.98236084 59.75971603]
[138.95814514 65.51262665]
[143.94375610 72.14208984]
[157.63792419 66.02083588]
[171.33209229 59.89958191]
[185.02626038 53.77832794]
[190.43341064 38.92779922]
[204.79286194 32.32614136]
[219.58538818 37.89000320]
[226.03486633 52.31844330]
[220.31491089 67.05132294]
[205.81909180 73.34788513]
[191.14750671 67.47249603]
[177.45333862 73.59375000]
[163.75917053 79.71500397]
[150.06500244 85.83625793]
[158.28353882 104.44921112]
[159.02207947 126.93183136]
[150.68905640 150.14205933]
[165.54205322 152.23695374]
[180.39505005 154.33186340]
[195.24803162 156.42675781]
[210.10102844 158.52165222]
[224.95402527 160.61656189]
[235.64134216 149.36663818]
[250.90618896 146.58021545]
[264.87890625 153.32873535]
[272.18673706 167.01725769]
[270.01962280 182.38226318]
[259.21087646 193.51559448]
[243.91670227 196.13624573]
[230.01800537 189.23654175]
[222.85913086 175.46954346]
[208.00613403 173.37464905]
[193.15313721 171.27975464]
[178.30014038 169.18484497]
[163.44715881 167.08995056]
[148.59416199 164.99505615]
[143.55107117 170.54637146]
[155.58145142 179.50573730]
[167.61183167 188.46508789]
[179.64221191 197.42443848]
[191.67259216 206.38378906]
[203.70297241 215.34313965]
[218.27142334 218.91522217]
[227.24215698 230.93713379]
[226.51913452 245.91969299]
[216.43251038 257.02194214]
[201.58779907 259.17465210]
[188.76300049 251.39488220]
[183.81387329 237.23661804]
[173.74407959 226.11909485]
[163.67428589 215.00157166]
[153.60447693 203.88406372]
[143.53468323 192.76654053]
[133.46488953 181.64903259]
[128.42179871 187.20036316]
[131.92884827 201.78460693]
[135.43591309 216.36886597]
[138.94296265 230.95312500]
[154.01905823 232.36390686]
[167.81916809 238.59571838]
[178.84638977 248.97257996]
[185.90455627 262.36889648]
[188.22804260 277.33151245]
[185.56483459 292.23742676]
[178.20379639 305.46972656]
[166.94342041 315.59307861]
[153.00512695 321.50939941]
[137.90084839 322.57690430]
[123.26898956 318.67984009]
[110.69669342 310.24087524]
[101.54771423 298.17541504]
[96.81446075 283.79226685]
[97.01036835 268.65158081]
[102.11418152 254.39572144]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 196]
[2 195]
[3 194]
[4 193]
[5 17]
[6 16]
[7 15]
[8 14]
[9 13]
[28 41]
[29 40]
[30 39]
[31 38]
[44 130]
[45 129]
[46 128]
[47 127]
[48 126]
[49 125]
[50 124]
[52 122]
[53 121]
[54 103]
[55 102]
[56 101]
[57 100]
[59 98]
[60 97]
[63 94]
[65 92]
[66 91]
[67 90]
[68 89]
[69 88]
[75 87]
[76 86]
[77 85]
[78 84]
[79 83]
[104 115]
[105 114]
[106 113]
[107 112]
[139 152]
[140 151]
[141 150]
[142 149]
[155 174]
[156 173]
[157 172]
[158 171]
[159 170]
[160 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
