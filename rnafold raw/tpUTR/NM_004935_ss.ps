%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 00:06:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCCGGGACCCCCGGCCUCCAGGCUGGGGCCUGGCCUAUUUAAGCCCCCUCUUGAGAGGGGUGAGACAGUGGGGGUGCCUGGUGCGCUGUGCUCCAGCAGUGCUGGGCCCAGCCGGGGUGGGGUGCCUGAGCCCGAAUUUCUCACUCCCUUUGUGGACUUUAUUUAAUUUCAUAAAUUGGCUCCUUUCCCACAGUC\
) } def
/len { sequence length } bind def

/coor [
[-11.09590435 202.73825073]
[-23.79623222 215.88342285]
[-41.93602371 221.98448181]
[-61.70015717 218.93016052]
[-70.40100861 231.14880371]
[-79.10186768 243.36744690]
[-87.80271912 255.58607483]
[-96.50357056 267.80471802]
[-97.51364136 274.35601807]
[-101.14128113 278.74807739]
[-105.67940521 280.26705933]
[-114.76354980 292.20349121]
[-123.84769440 304.13992310]
[-132.93183899 316.07635498]
[-142.01597595 328.01278687]
[-151.10012817 339.94921875]
[-160.18428040 351.88562012]
[-169.26841736 363.82205200]
[-170.80656433 380.14892578]
[-185.82579041 386.73333740]
[-198.87561035 376.80187988]
[-196.53147888 360.57113647]
[-181.20484924 354.73791504]
[-172.12069702 342.80148315]
[-163.03656006 330.86505127]
[-153.95240784 318.92861938]
[-144.86827087 306.99221802]
[-135.78411865 295.05578613]
[-126.69997406 283.11935425]
[-117.61582947 271.18292236]
[-108.72221375 259.10385132]
[-100.02135468 246.88522339]
[-91.32050323 234.66659546]
[-82.61965179 222.44795227]
[-73.91879272 210.22930908]
[-76.81638336 203.31164551]
[-90.31002808 209.86309814]
[-103.80367279 216.41456604]
[-117.29731750 222.96601868]
[-129.94424438 231.03169250]
[-142.37905884 222.64268494]
[-139.63566589 207.89569092]
[-125.01547241 204.53982544]
[-110.88083649 199.51866150]
[-96.74620056 194.49749756]
[-82.61156464 189.47633362]
[-85.50914764 182.55868530]
[-100.32073212 180.18865967]
[-115.13231659 177.81863403]
[-129.94389343 175.44862366]
[-144.75547791 173.07859802]
[-159.56706238 170.70857239]
[-174.68484497 177.06347656]
[-187.58186340 166.93435669]
[-184.99078369 150.74121094]
[-169.57707214 145.14213562]
[-157.19705200 155.89698792]
[-142.38546753 158.26701355]
[-127.57387543 160.63703918]
[-112.76229858 163.00704956]
[-97.95071411 165.37707520]
[-83.13912964 167.74710083]
[-69.74349213 150.48722839]
[-50.58045197 142.74014282]
[-31.28766441 145.52047729]
[-16.94625092 156.91241455]
[-4.07650042 149.20726013]
[8.79325104 141.50209045]
[15.73856258 128.32591248]
[31.55335808 127.87554932]
[44.42311096 120.17038727]
[57.29286194 112.46522522]
[70.16261292 104.76006317]
[83.03236389 97.05490112]
[89.15514374 83.36141968]
[86.31637573 68.63248444]
[81.61477661 60.78821564]
[83.55136108 53.64745331]
[80.94664001 38.87533951]
[78.34191895 24.10322189]
[75.73719025 9.33110523]
[73.13246918 -5.44101095]
[70.52774811 -20.21312714]
[67.92302704 -34.98524475]
[65.31830597 -49.75735855]
[62.71358109 -64.52947235]
[59.99174881 -79.28046417]
[57.15298080 -94.00939178]
[54.31421280 -108.73832703]
[51.47544098 -123.46725464]
[39.04880524 -133.61408997]
[39.37811279 -149.65376282]
[52.21074295 -159.28201294]
[67.70260620 -155.11286926]
[73.96966553 -140.34452820]
[66.20437622 -126.30602264]
[69.04314423 -111.57709503]
[71.88191223 -96.84815979]
[74.72068024 -82.11923218]
[79.07817078 -76.13984680]
[77.48569489 -67.13420105]
[80.09041595 -52.36208344]
[82.69514465 -37.58996582]
[85.29986572 -22.81785011]
[87.90458679 -8.04573345]
[90.50930786 6.72638273]
[93.11402893 21.49849892]
[95.71875763 36.27061462]
[98.32347870 51.04273224]
[101.04531097 65.79371643]
[103.88407898 80.52265167]
[115.60094452 89.88828278]
[130.59338379 89.41236115]
[145.58584595 88.93644714]
[160.57829285 88.46052551]
[175.03591919 84.46341705]
[188.14366150 77.17046356]
[201.25140381 69.87751770]
[214.35914612 62.58456421]
[227.46688843 55.29161453]
[240.57461548 47.99866104]
[253.19342041 39.88904953]
[265.27249146 30.99543190]
[277.35153198 22.10181236]
[289.43057251 13.20819283]
[291.55572510 -2.45256615]
[304.18264771 -11.95708466]
[319.82006836 -9.66650105]
[329.19055176 3.06022239]
[326.73477173 18.67254639]
[313.90969849 27.90795708]
[298.32421875 25.28724670]
[286.24514771 34.18086624]
[274.16610718 43.07448578]
[262.08703613 51.96810532]
[277.02651978 53.31415558]
[288.40203857 63.09156799]
[291.97732544 77.65924835]
[286.42098999 91.59219360]
[273.80218506 99.70179749]
[258.82012939 98.96804047]
[247.05416870 89.66417694]
[242.88589478 75.25495911]
[247.86756897 61.10640335]
[234.75982666 68.39935303]
[221.65209961 75.69230652]
[208.54435730 82.98525238]
[195.43661499 90.27820587]
[182.32887268 97.57115936]
[190.05723572 105.52922058]
[191.51728821 115.47932434]
[204.73908997 122.56339264]
[217.96089172 129.64746094]
[231.18269348 136.73152161]
[244.40449524 143.81558228]
[257.62628174 150.89965820]
[270.84808350 157.98371887]
[284.06988525 165.06777954]
[299.88821411 164.76513672]
[307.45260620 177.59593201]
[320.67440796 184.67999268]
[336.38546753 181.43322754]
[348.62695312 191.80267334]
[348.00823975 207.83378601]
[335.00393677 217.22886658]
[319.58984375 212.78082275]
[313.59033203 197.90179443]
[300.36853027 190.81773376]
[285.49594116 191.62707520]
[276.98583984 178.28958130]
[263.76403809 171.20552063]
[250.54222107 164.12145996]
[237.32041931 157.03738403]
[224.09861755 149.95332336]
[210.87681580 142.86926270]
[197.65502930 135.78518677]
[184.43322754 128.70112610]
[169.83700562 131.30528259]
[158.47422791 120.20240784]
[161.05419922 103.45297241]
[146.06175232 103.92889404]
[131.06930542 104.40480804]
[116.07685852 104.88072968]
[113.11688232 109.61543274]
[108.88481140 112.97573090]
[103.94243622 114.66782379]
[98.89857483 114.60929108]
[94.33461761 112.92604828]
[90.73752594 109.92465210]
[77.86777496 117.62981415]
[64.99802399 125.33497620]
[52.12826920 133.04013062]
[39.25851822 140.74530029]
[31.39267540 154.47261047]
[16.49841118 154.37184143]
[3.62866044 162.07701111]
[-9.24109077 169.78216553]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 35]
[5 34]
[6 33]
[7 32]
[8 31]
[11 30]
[12 29]
[13 28]
[14 27]
[15 26]
[16 25]
[17 24]
[18 23]
[47 62]
[48 61]
[49 60]
[50 59]
[51 58]
[52 57]
[66 197]
[67 196]
[68 195]
[70 193]
[71 192]
[72 191]
[73 190]
[74 189]
[75 111]
[76 110]
[78 109]
[79 108]
[80 107]
[81 106]
[82 105]
[83 104]
[84 103]
[85 102]
[86 101]
[87 99]
[88 98]
[89 97]
[90 96]
[112 183]
[113 182]
[114 181]
[115 180]
[116 149]
[117 148]
[118 147]
[119 146]
[120 145]
[121 144]
[122 135]
[123 134]
[124 133]
[125 132]
[151 177]
[152 176]
[153 175]
[154 174]
[155 173]
[156 172]
[157 171]
[158 170]
[160 168]
[161 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
