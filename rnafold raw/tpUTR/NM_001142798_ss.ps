%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 20:53:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUUCCACCUCUGACCUCUCACUGUUCAUGCCGGACCUGUGGAUCUCCUGGGACUCCGAGCAAGGCCUGCACGAGAGAGGGCUGAAAGGCUGCUGGGGCUGCCACCUCGCUAUUCCCGCAUAAGCAUCUGCCCCCAACCCCUUUGACCUUCAUCUGAUGGACAUUUUUAUACAGAAAACAAUAAAGAUUUCCCUCUCAGCUU\
) } def
/len { sequence length } bind def

/coor [
[73.35848236 111.72534943]
[58.53599930 114.02622223]
[43.71351624 116.32710266]
[28.89103317 118.62797546]
[14.06855202 120.92884827]
[1.61853516 130.69142151]
[-12.14495277 124.99794006]
[-26.96743584 127.29881287]
[-39.41744995 137.06137085]
[-53.18093872 131.36790466]
[-68.00341797 133.66877747]
[-82.82590485 135.96965027]
[-97.64838409 138.27052307]
[-101.72229004 141.55178833]
[-106.19990540 142.81236267]
[-110.24254608 142.23747253]
[-113.20706940 140.31886292]
[-128.11999512 141.93273926]
[-143.03292847 143.54660034]
[-157.94584656 145.16046143]
[-172.85877991 146.77433777]
[-181.54116821 156.31755066]
[-193.99922180 157.35198975]
[-203.50605774 149.86659241]
[-218.44206238 151.25061035]
[-233.37808228 152.63464355]
[-248.27813721 154.36328125]
[-263.13430786 156.43562317]
[-275.73318481 166.00531006]
[-289.40734863 160.10057068]
[-304.26351929 162.17291260]
[-319.11965942 164.24525452]
[-333.95941162 166.43193054]
[-348.78189087 168.73280334]
[-363.60440063 171.03367615]
[-378.42687988 173.33454895]
[-393.21215820 175.86341858]
[-407.95675659 178.61965942]
[-422.70135498 181.37590027]
[-437.44595337 184.13214111]
[-445.31167603 188.78755188]
[-452.43872070 186.81546021]
[-467.22399902 189.34432983]
[-479.48788452 200.23144531]
[-494.96081543 194.79812622]
[-497.72555542 178.63371277]
[-484.93798828 168.36676025]
[-469.75286865 174.55903625]
[-454.96759033 172.03018188]
[-440.20217896 169.38754272]
[-425.45761108 166.63130188]
[-410.71301270 163.87506104]
[-395.96841431 161.11882019]
[-392.57562256 157.75035095]
[-387.02896118 156.48095703]
[-380.72775269 158.51206970]
[-365.90527344 156.21119690]
[-351.08279419 153.91032410]
[-336.26028442 151.60945129]
[-330.12942505 147.47468567]
[-321.19201660 149.38909912]
[-306.33584595 147.31675720]
[-291.47970581 145.24441528]
[-279.94342041 135.82295227]
[-265.20663452 141.57946777]
[-250.35047913 139.50712585]
[-247.94346619 136.92338562]
[-244.16316223 135.37980652]
[-239.51330566 135.51014709]
[-234.76210022 137.69862366]
[-219.82609558 136.31460571]
[-204.89007568 134.93057251]
[-191.13731384 124.03354645]
[-174.47264099 131.86140442]
[-159.55972290 130.24754333]
[-144.64678955 128.63366699]
[-129.73385620 127.01980591]
[-114.82093048 125.40593719]
[-99.94925690 123.44804382]
[-85.12677765 121.14717102]
[-70.30429840 118.84629822]
[-55.48181534 116.54541779]
[-44.09199905 106.94743347]
[-29.26831055 112.47633362]
[-14.44582748 110.17545319]
[-3.05601430 100.57746887]
[11.76767731 106.10636902]
[26.59015846 103.80549622]
[41.41263962 101.50461578]
[56.23512268 99.20374298]
[71.05760193 96.90287018]
[74.19085693 84.05001068]
[82.95447540 73.42443085]
[95.96344757 67.44464111]
[110.82258606 67.72945404]
[124.56555176 74.69270325]
[130.62437439 60.97079468]
[136.68318176 47.24888611]
[142.74200439 33.52697754]
[148.80081177 19.80507088]
[154.54106140 5.94687700]
[159.95968628 -8.04020596]
[165.37831116 -22.02729034]
[156.35893250 -31.27875137]
[151.52780151 -43.21163177]
[151.57041931 -56.03858185]
[156.44508362 -67.85269928]
[165.39437866 -76.91104126]
[177.06262207 -81.89173889]
[189.70121765 -82.08680725]
[195.54800415 -95.90039062]
[188.27374268 -109.74304199]
[191.64970398 -125.01186371]
[204.08189392 -134.49737549]
[219.70018005 -133.72080994]
[231.13009644 -123.04885101]
[232.97479248 -107.52045441]
[224.36325073 -94.46765900]
[209.36158752 -90.05359650]
[203.51480103 -76.24001312]
[214.38131714 -62.89088058]
[217.00686646 -45.78942108]
[210.57955933 -29.62985039]
[196.78503418 -18.89406586]
[179.36540222 -16.60866547]
[173.94677734 -2.62158155]
[168.52815247 11.36550236]
[169.61410522 14.72558308]
[169.12309265 18.77926445]
[166.74658203 22.77804947]
[162.52272034 25.86388588]
[156.46391296 39.58579254]
[150.40509033 53.30770111]
[144.34628296 67.02960968]
[138.28746033 80.75151825]
[150.18319702 71.61415863]
[162.07894897 62.47680283]
[169.45474243 49.41550064]
[180.60134888 39.37791824]
[194.36141968 33.40627670]
[209.30622864 32.12061310]
[223.88401794 35.65442657]
[236.58117676 43.64078903]
[246.07936096 55.25047302]
[251.39233398 69.27803040]
[251.96844482 84.26696014]
[247.74789429 98.66094971]
[239.16889954 110.96545410]
[227.12222290 119.90287781]
[212.85868835 124.54524994]
[197.85929871 124.41053009]
[183.68144226 119.51272583]
[171.79486084 110.35781860]
[157.27838135 106.57997131]
[142.76191711 102.80212402]
[153.69012451 113.07706451]
[164.61833191 123.35200500]
[175.54652405 133.62693787]
[195.35528564 137.34567261]
[200.13601685 156.07818604]
[211.37545776 166.01171875]
[222.61489868 175.94525146]
[238.07922363 179.28669739]
[242.49179077 193.51266479]
[253.73123169 203.44619751]
[264.97067261 213.37973022]
[276.21011353 223.31326294]
[287.44955444 233.24679565]
[298.68899536 243.18032837]
[309.92840576 253.11386108]
[321.16784668 263.04739380]
[335.70486450 258.09045410]
[350.76962280 261.08187866]
[362.30978394 271.21694946]
[367.22113037 285.76940918]
[364.18252563 300.82473755]
[354.01132202 312.33306885]
[339.44354248 317.19879150]
[324.39782715 314.11300659]
[312.92141724 303.90576172]
[308.10137939 289.32278442]
[311.23431396 274.28683472]
[299.99487305 264.35330200]
[288.75546265 254.41976929]
[277.51602173 244.48623657]
[266.27658081 234.55270386]
[255.03713989 224.61917114]
[243.79769897 214.68563843]
[232.55827332 204.75210571]
[217.89785767 202.12118530]
[212.68136597 187.18469238]
[201.44192505 177.25115967]
[190.20248413 167.31762695]
[180.09465027 168.86158752]
[170.60760498 164.49258423]
[164.97801208 155.43519592]
[165.27159119 144.55514526]
[154.34338379 134.28021240]
[143.41517639 124.00526428]
[132.48698425 113.73032379]
[122.07012939 125.91188812]
[107.80024719 131.86380005]
[92.94538879 130.77407837]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 91]
[2 90]
[3 89]
[4 88]
[5 87]
[7 85]
[8 84]
[10 82]
[11 81]
[12 80]
[13 79]
[17 78]
[18 77]
[19 76]
[20 75]
[21 74]
[24 72]
[25 71]
[26 70]
[27 66]
[28 65]
[30 63]
[31 62]
[32 61]
[33 59]
[34 58]
[35 57]
[36 56]
[37 53]
[38 52]
[39 51]
[40 50]
[42 49]
[43 48]
[96 135]
[97 134]
[98 133]
[99 132]
[100 131]
[101 127]
[102 126]
[103 125]
[110 120]
[111 119]
[155 200]
[156 199]
[157 198]
[158 197]
[160 193]
[161 192]
[162 191]
[164 189]
[165 188]
[166 187]
[167 186]
[168 185]
[169 184]
[170 183]
[171 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
