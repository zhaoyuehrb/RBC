%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 11:03:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCAUGCUUACCAAUCAAAUCUCAAAGCACAGAAUUAUUGACUUGAAUCAUGGUUUUUACAGUUUUUUAAAUGCUCAAGAUUUUGAUAUUAUAGAUUUUAUUUUAAAAUAUUAAAAUGCAAGAUAGUUUUGAGCUAUUUUAAAAUAAAAUUUAUAACAUUCAACACAAAAUCAUGGAGGUGCUCUAAAUAACUUUUAGAUUUCCUCUCUCUGUGUGCAUUACCAAUAUCUAAGUGUAAAAUUAAUAAAUUGUUU\
UGAAUUCCUGGAAGCAA\
) } def
/len { sequence length } bind def

/coor [
[66.45706940 945.61016846]
[51.53974152 950.30139160]
[37.11685562 944.25866699]
[29.99845314 930.33520508]
[33.54562759 915.10522461]
[46.08351135 905.75988770]
[46.77372742 890.77581787]
[47.46394348 875.79168701]
[48.15415955 860.80755615]
[48.84437561 845.82348633]
[46.02340698 839.02246094]
[49.62973022 830.67120361]
[50.49232864 815.69598389]
[51.35492706 800.72082520]
[42.13059998 794.08038330]
[37.19094849 783.71130371]
[37.86008453 772.12542725]
[44.08766937 762.19122314]
[54.43300629 756.42370605]
[55.64000320 741.47235107]
[56.84700394 726.52093506]
[54.26246262 719.62664795]
[58.15488815 711.40484619]
[59.53385925 696.46832275]
[60.91283035 681.53186035]
[62.29179764 666.59539795]
[63.67076874 651.65887451]
[65.04973602 636.72241211]
[66.42871094 621.78594971]
[67.80767822 606.84948730]
[55.56903458 598.35937500]
[49.18075943 584.79302979]
[50.44911194 569.75115967]
[59.13324738 557.28192139]
[72.98310089 550.79125977]
[74.36206818 535.85479736]
[75.74104309 520.91827393]
[77.12001038 505.98181152]
[61.57851410 494.03817749]
[56.42683029 474.97598267]
[63.94618988 456.56057739]
[81.21851349 446.40484619]
[81.90872955 431.42074585]
[82.59894562 416.43664551]
[83.28916168 401.45251465]
[83.97937775 386.46841431]
[76.83590698 373.39859009]
[85.20001984 359.96905518]
[85.89023590 344.98495483]
[75.69544220 334.18673706]
[76.18196106 318.98086548]
[87.57726288 308.36083984]
[88.26747894 293.37673950]
[88.95769501 278.39263916]
[89.64791107 263.40850830]
[74.38590240 252.55819702]
[68.74383545 234.54431152]
[75.19165802 216.64237976]
[91.27735138 206.19869995]
[91.44995880 191.19969177]
[91.62257385 176.20068359]
[91.79518127 161.20167542]
[91.96779633 146.20266724]
[85.07848358 144.45843506]
[78.53185272 141.69319153]
[72.47824097 137.97045898]
[67.05666351 133.37573242]
[62.39163589 128.01454163]
[58.59028625 122.00997925]
[55.73991776 115.49996185]
[53.90599060 108.63397980]
[53.13061142 101.56972504]
[53.43159866 94.46941376]
[54.80203247 87.49611664]
[57.21044159 80.80997467]
[60.60151672 74.56452942]
[64.89738464 68.90321350]
[69.99938965 63.95604324]
[75.79035950 59.83662415]
[82.13730621 56.63956070]
[78.71540833 42.03508759]
[75.29350281 27.43061829]
[71.87160492 12.82614613]
[68.44969940 -1.77832544]
[65.02780151 -16.38279724]
[61.60589600 -30.98726845]
[57.68194580 -45.46492767]
[53.26061630 -59.79851913]
[41.79938889 -70.70497894]
[45.44151688 -85.14742279]
[41.02018738 -99.48101807]
[36.59886169 -113.81460571]
[32.17753220 -128.14819336]
[27.75620461 -142.48179626]
[23.33487701 -156.81538391]
[18.91354942 -171.14897156]
[14.49222183 -185.48257446]
[10.07089424 -199.81616211]
[5.64956665 -214.14974976]
[1.22823918 -228.48333740]
[-3.19308853 -242.81694031]
[-7.61441612 -257.15054321]
[-12.03574371 -271.48413086]
[-16.45707130 -285.81771851]
[-20.87839890 -300.15130615]
[-25.29972649 -314.48489380]
[-29.72105408 -328.81848145]
[-34.14238358 -343.15206909]
[-38.56370926 -357.48568726]
[-42.98503876 -371.81927490]
[-47.40636444 -386.15286255]
[-51.99234390 -400.43463135]
[-56.74236298 -414.66265869]
[-61.49238205 -428.89071655]
[-66.24240112 -443.11877441]
[-70.99242401 -457.34680176]
[-75.74243927 -471.57485962]
[-80.49246216 -485.80288696]
[-95.32824707 -490.35034180]
[-104.63081360 -502.76974487]
[-104.82314301 -518.28564453]
[-95.83126831 -530.93182373]
[-81.11275482 -535.84558105]
[-66.32717133 -531.13745117]
[-57.15988159 -518.61785889]
[-57.13588333 -503.10079956]
[-66.26441193 -490.55291748]
[-61.51439667 -476.32489014]
[-56.76437378 -462.09683228]
[-52.01435471 -447.86877441]
[-47.26433563 -433.64074707]
[-42.51431656 -419.41268921]
[-37.76429367 -405.18463135]
[-33.99986267 -402.30029297]
[-31.98629379 -397.03549194]
[-33.07277298 -390.57418823]
[-28.65144539 -376.24060059]
[-24.23011780 -361.90701294]
[-19.80879021 -347.57339478]
[-15.38746166 -333.23980713]
[-10.96613407 -318.90621948]
[-6.54480696 -304.57263184]
[-2.12347937 -290.23904419]
[2.29784846 -275.90545654]
[6.71917582 -261.57186890]
[11.14050388 -247.23826599]
[15.56183147 -232.90467834]
[19.98315811 -218.57107544]
[24.40448570 -204.23748779]
[28.82581329 -189.90390015]
[33.24714279 -175.57029724]
[37.66846848 -161.23670959]
[42.08979797 -146.90312195]
[46.51112366 -132.56953430]
[50.93245316 -118.23593140]
[55.35377884 -103.90234375]
[59.77510834 -89.56874847]
[70.92008972 -79.68752289]
[67.59420776 -64.21984863]
[72.01553345 -49.88625336]
[79.75421143 -62.73588181]
[94.28620911 -66.45353699]
[107.24483490 -58.89880753]
[111.16924286 -44.42127228]
[103.79998779 -31.35627937]
[89.37985992 -27.22591209]
[76.21036530 -34.40917206]
[79.63227081 -19.80469894]
[83.05416870 -5.20022726]
[86.47607422 9.40424442]
[89.89797974 24.00871658]
[93.31987762 38.61318588]
[96.74178314 53.21765900]
[115.01364899 55.57260132]
[130.96842957 64.78410339]
[142.14379883 79.43053436]
[156.50259399 75.09175110]
[170.86138916 70.75296783]
[185.22018433 66.41418457]
[199.57897949 62.07540512]
[204.76571655 47.57009506]
[217.35197449 39.00041199]
[232.39306641 39.47953415]
[244.12741089 48.61425018]
[258.48620605 44.27546692]
[272.84500122 39.93668747]
[287.20379639 35.59790421]
[301.56259155 31.25912285]
[315.92138672 26.92034149]
[324.73614502 13.51588154]
[340.72460938 12.19354153]
[351.62179565 23.96770477]
[349.06832886 39.80624390]
[335.02297974 47.55918503]
[320.26016235 41.27913666]
[305.90136719 45.61791611]
[291.54257202 49.95669937]
[277.18377686 54.29547882]
[262.82498169 58.63426208]
[248.46620178 62.97304535]
[243.75396729 77.07740021]
[231.49508667 85.80573273]
[216.26925659 85.63999939]
[203.91777039 76.43419647]
[189.55897522 80.77297974]
[175.20018005 85.11176300]
[160.84138489 89.45054626]
[146.48258972 93.78932190]
[143.45677185 117.62705231]
[129.02153015 136.83685303]
[106.96680450 146.37528992]
[106.79418945 161.37429810]
[106.62158203 176.37330627]
[106.44896698 191.37229919]
[106.27635956 206.37130737]
[116.46840668 211.48007202]
[123.99720764 219.97300720]
[127.81231689 230.60778809]
[127.40280151 241.84754944]
[122.86536407 252.08293152]
[114.88504028 259.86251831]
[104.63201904 264.09872437]
[103.94180298 279.08285522]
[103.25158691 294.06695557]
[102.56137085 309.05105591]
[112.93210602 320.67370605]
[112.01866913 335.85989380]
[100.87435150 345.67517090]
[100.18413544 360.65927124]
[107.27822876 374.80087280]
[98.96348572 387.15863037]
[98.27326965 402.14273071]
[97.58305359 417.12686157]
[96.89283752 432.11096191]
[96.20262146 447.09506226]
[105.60555267 451.82846069]
[112.88563538 459.37957764]
[117.24053955 468.87988281]
[118.20238495 479.24813843]
[115.68787384 489.31347656]
[110.00488281 497.94757080]
[101.81497955 504.19122314]
[92.05649567 507.36077881]
[90.67752075 522.29724121]
[89.29855347 537.23376465]
[87.91957855 552.17022705]
[100.34700012 561.08685303]
[106.60142517 574.93530273]
[105.09441376 589.95513916]
[96.33032990 602.12255859]
[82.74415588 608.22845459]
[81.36518860 623.16491699]
[79.98622131 638.10137939]
[78.60724640 653.03790283]
[77.22827911 667.97436523]
[75.84931183 682.91082764]
[74.47033691 697.84729004]
[73.09136963 712.78381348]
[71.79836273 727.72796631]
[70.59136200 742.67932129]
[69.38436890 757.63067627]
[82.20216370 771.61999512]
[80.71096802 790.21343994]
[66.33010864 801.58343506]
[65.46750641 816.55859375]
[64.60490417 831.53375244]
[63.82848740 846.51367188]
[63.13827133 861.49780273]
[62.44805527 876.48187256]
[61.75783920 891.46600342]
[61.06762314 906.45013428]
[72.69328308 916.90850830]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 271]
[7 270]
[8 269]
[9 268]
[10 267]
[12 266]
[13 265]
[14 264]
[19 261]
[20 260]
[21 259]
[23 258]
[24 257]
[25 256]
[26 255]
[27 254]
[28 253]
[29 252]
[30 251]
[35 246]
[36 245]
[37 244]
[38 243]
[42 235]
[43 234]
[44 233]
[45 232]
[46 231]
[48 229]
[49 228]
[52 225]
[53 224]
[54 223]
[55 222]
[59 215]
[60 214]
[61 213]
[62 212]
[63 211]
[80 173]
[81 172]
[82 171]
[83 170]
[84 169]
[85 168]
[86 167]
[87 160]
[88 159]
[90 157]
[91 156]
[92 155]
[93 154]
[94 153]
[95 152]
[96 151]
[97 150]
[98 149]
[99 148]
[100 147]
[101 146]
[102 145]
[103 144]
[104 143]
[105 142]
[106 141]
[107 140]
[108 139]
[109 138]
[110 137]
[111 136]
[112 133]
[113 132]
[114 131]
[115 130]
[116 129]
[117 128]
[118 127]
[176 208]
[177 207]
[178 206]
[179 205]
[180 204]
[184 200]
[185 199]
[186 198]
[187 197]
[188 196]
[189 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
