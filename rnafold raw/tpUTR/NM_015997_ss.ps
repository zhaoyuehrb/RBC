%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 03:00:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCAGCCUGAGGAAACAUCUCAGACCCCAUCAUCUGAAAGUGCCCAGAGAGCACAGUGGCAGAGUACAUCUCAUCCAGAGAAACAGCAUCCUGCAUCCUCCAGAGUCCUGGUUCCUUCAGUUUCAUCCCCUUUCUCUCCUUCCAUGGAUUAUGUAAUACAUUGUAAAGUUUUAAUUAAUUAAAAAUUGGAUAUCUGUUUCCUUCCCA\
) } def
/len { sequence length } bind def

/coor [
[101.74411774 317.86761475]
[86.68447113 320.13189697]
[72.00756073 316.06887817]
[60.25624847 306.38247681]
[53.46651459 292.75091553]
[52.81472778 277.53594971]
[58.41381073 263.37365723]
[69.29369354 252.71777344]
[83.56935883 247.41445923]
[84.47503662 232.44183350]
[85.38071442 217.46919250]
[86.28639221 202.49656677]
[87.19207001 187.52392578]
[88.09774780 172.55130005]
[89.00342560 157.57865906]
[89.90910339 142.60603333]
[90.81478119 127.63339233]
[82.49314880 131.10865784]
[72.62904358 132.21545410]
[61.85792160 130.51971436]
[50.48131180 140.29585266]
[39.10470200 150.07197571]
[27.72809029 159.84811401]
[16.35148048 169.62423706]
[17.74983025 185.07818604]
[9.76863003 198.38533020]
[-4.52318573 204.42880249]
[-19.63012123 200.88478088]
[-29.74325180 189.11599731]
[-30.97387314 173.64779663]
[-22.84878540 160.42800903]
[-8.49225140 154.53993225]
[6.57534933 158.24763489]
[17.95195961 148.47149658]
[29.32856941 138.69537354]
[40.70518112 128.91923523]
[52.08179092 119.14310455]
[48.95213318 112.32729340]
[42.69281769 98.69567871]
[39.56315994 91.87986755]
[24.73393059 94.13684082]
[9.90469933 96.39380646]
[-4.92453241 98.65077209]
[-12.90424919 112.09912109]
[-27.67852020 117.22308350]
[-42.27138519 111.60327148]
[-49.79254150 97.89318848]
[-46.69072723 82.56632996]
[-34.43052673 72.85955048]
[-18.80082703 73.35610962]
[-7.18149996 83.82154083]
[7.64773130 81.56457520]
[22.47696304 79.30760956]
[37.30619431 77.05063629]
[38.43467712 69.63602448]
[40.69164658 54.80679321]
[41.82012939 47.39217758]
[28.33380699 40.82566071]
[14.84748554 34.25914383]
[0.06854168 39.18058777]
[-13.51496410 32.32908630]
[-18.11572838 18.20929527]
[-31.60204887 11.64277935]
[-45.08837128 5.07626343]
[-60.66186905 8.92927170]
[-73.29589844 -0.95813739]
[-73.29871368 -17.00119019]
[-60.66815186 -26.89303017]
[-45.09330368 -23.04548264]
[-38.52185440 -8.41005802]
[-25.03553391 -1.84354258]
[-11.54921246 4.72297287]
[2.40303373 -0.36332461]
[16.17362404 6.10393810]
[21.41400146 20.77282333]
[34.90032196 27.33934021]
[48.38664246 33.90585327]
[61.45188522 26.53703499]
[62.80936813 11.59858704]
[64.16684723 -3.33986092]
[65.52433777 -18.27830887]
[66.88182068 -33.21675873]
[68.23930359 -48.15520477]
[52.47232437 -55.20444489]
[40.08420563 -67.20329285]
[32.55689240 -82.69287109]
[30.78281403 -99.79817200]
[34.95909882 -116.45498657]
[44.56583405 -130.65904236]
[58.43071747 -140.70712280]
[74.87209320 -145.40136719]
[75.55153656 -160.38597107]
[76.23097229 -175.37057495]
[62.51682281 -181.86656189]
[52.36190033 -193.08799744]
[47.29056168 -207.30401611]
[48.04626846 -222.33786011]
[54.48276520 -235.90017700]
[65.59109497 -245.93762207]
[79.65764618 -250.94375610]
[80.33708954 -265.92837524]
[81.01652527 -280.91296387]
[81.69596863 -295.89758301]
[73.67184448 -310.19952393]
[82.27713776 -324.15948486]
[98.65945435 -323.41668701]
[105.96607208 -308.73519897]
[96.68057251 -295.21813965]
[96.00112915 -280.23352051]
[95.32169342 -265.24893188]
[94.64225006 -250.26431274]
[108.19802856 -244.00572205]
[118.35240173 -233.00416565]
[123.53511810 -218.91500854]
[122.92717743 -203.87446594]
[116.59011078 -190.17573547]
[105.46133423 -179.91935730]
[91.21557617 -174.69114685]
[90.53614044 -159.70654297]
[89.85669708 -144.72193909]
[102.04647064 -140.60951233]
[112.76587677 -133.47200012]
[121.27908325 -123.79093170]
[126.99952698 -112.22275543]
[129.53030396 -99.55429840]
[128.69175720 -86.64923859]
[124.53417206 -74.38924408]
[117.33480072 -63.61371994]
[107.57944489 -55.06235504]
[95.92962646 -49.32432556]
[83.17774963 -46.79772186]
[81.82026672 -31.85927391]
[80.46278381 -16.92082596]
[79.10530090 -1.98237777]
[77.74781799 12.95607090]
[76.39033508 27.89451981]
[85.18877411 40.04307556]
[99.80545807 43.41243744]
[114.42214203 46.78179550]
[122.70940399 34.11109924]
[134.80897522 25.05724335]
[149.24896240 20.69752121]
[164.28096008 21.53964233]
[178.09178162 27.46269798]
[189.02215576 37.73407745]
[195.76609802 51.10002136]
[197.52685547 65.93865204]
[212.14353943 69.30801392]
[226.76022339 72.67737579]
[241.37690735 76.04673767]
[255.99359131 79.41609192]
[269.28939819 71.30071259]
[284.06478882 74.92594147]
[291.71963501 87.65147400]
[306.33630371 91.02082825]
[320.95300293 94.39019012]
[336.13848877 89.95046234]
[346.80255127 100.34889221]
[361.41921997 103.71825409]
[373.03787231 93.43298340]
[388.48626709 91.97480774]
[401.82421875 99.90442657]
[407.92300415 114.17273712]
[404.43746948 129.29327393]
[392.70794678 139.45190430]
[377.24462891 140.74240112]
[363.99349976 132.66856384]
[358.04986572 118.33493805]
[343.43316650 114.96557617]
[329.29315186 119.64630127]
[317.58361816 109.00687408]
[302.96694946 105.63751221]
[288.35025024 102.26815033]
[275.89706421 110.35848236]
[261.02566528 107.14969635]
[252.62422180 94.03277588]
[238.00753784 90.66341400]
[223.39085388 87.29405975]
[208.77418518 83.92469788]
[194.15750122 80.55533600]
[186.07853699 93.12577057]
[174.16397095 102.19065857]
[159.84011841 106.64056396]
[144.83004761 105.91998291]
[130.94630432 100.09659576]
[119.87203217 89.85546875]
[112.95693970 76.41844940]
[111.05278015 61.39847946]
[96.43609619 58.02912140]
[81.81941223 54.65975952]
[112.54832458 56.88537979]
[133.26300049 76.10222626]
[136.97979736 101.53824615]
[125.15876007 121.45666504]
[105.78741455 128.53907776]
[104.88173676 143.51170349]
[103.97605896 158.48434448]
[103.07038116 173.45697021]
[102.16470337 188.42959595]
[101.25902557 203.40223694]
[100.35334778 218.37486267]
[99.44766998 233.34750366]
[98.54199219 248.32012939]
[112.07433319 255.30552673]
[121.59046173 267.19515991]
[125.44164276 281.92907715]
[122.96064758 296.95452881]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 203]
[10 202]
[11 201]
[12 200]
[13 199]
[14 198]
[15 197]
[16 196]
[17 195]
[20 37]
[21 36]
[22 35]
[23 34]
[24 33]
[40 54]
[41 53]
[42 52]
[43 51]
[57 77]
[58 76]
[59 75]
[62 72]
[63 71]
[64 70]
[78 136]
[79 135]
[80 134]
[81 133]
[82 132]
[83 131]
[91 120]
[92 119]
[93 118]
[100 111]
[101 110]
[102 109]
[103 108]
[137 190]
[138 189]
[139 188]
[147 180]
[148 179]
[149 178]
[150 177]
[151 176]
[154 173]
[155 172]
[156 171]
[158 169]
[159 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
