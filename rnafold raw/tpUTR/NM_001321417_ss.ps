%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 13:45:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCCUUACCCAGCCAUGUCUGGACAUGCCAGACAGCUGUGGCAUGUCAUAAACUGUCCUGGAGUGACAUCAUGUCAUGUUGCAUGAUUUGGCAUGUUGGGGCACAUUUGGCGUGAGGGAAGCUGGUGCACAUGGGUGUCCAGGGCCUGAUGGGGUGUGGCCAGGCAAUGAAGAAAGACUCAGGUGUCUUUGGCCUGGCACCAA\
) } def
/len { sequence length } bind def

/coor [
[54.56250381 117.93557739]
[51.47694397 105.63597107]
[51.66118240 92.95657349]
[37.32597733 88.54048157]
[22.99077415 84.12438202]
[8.65557003 79.70828247]
[-5.67963505 75.29219055]
[-20.01483917 70.87609100]
[-34.35004425 66.45999146]
[-48.71866608 62.15386581]
[-63.11985779 57.95796204]
[-77.52105713 53.76206207]
[-91.92224884 49.56615829]
[-104.18166351 58.89422607]
[-119.40509796 59.21123123]
[-131.75010681 50.60513306]
[-136.60223389 36.54829025]
[-151.00341797 32.35238647]
[-165.40461731 28.15648460]
[-179.80581665 23.96058083]
[-194.20700073 19.76467896]
[-209.62060547 23.33282471]
[-219.67546082 12.34424114]
[-234.07666016 8.14833832]
[-248.47785950 3.95243549]
[-262.87905884 -0.24346705]
[-277.28024292 -4.43936968]
[-291.68142700 -8.63527203]
[-306.08264160 -12.83117485]
[-320.48382568 -17.02707672]
[-334.88500977 -21.22298050]
[-349.28622437 -25.41888237]
[-363.68740845 -29.61478615]
[-378.12033081 -33.70021820]
[-392.58413696 -37.67494202]
[-399.07443237 -36.37525558]
[-404.43954468 -38.26750946]
[-407.42669678 -41.99943924]
[-421.76190186 -46.41553879]
[-436.09710693 -50.83163452]
[-450.43231201 -55.24773407]
[-464.76751709 -59.66382980]
[-479.10272217 -64.07992554]
[-493.43792725 -68.49602509]
[-507.77313232 -72.91212463]
[-522.10833740 -77.32821655]
[-537.57482910 -73.99669647]
[-547.46008301 -85.13806915]
[-561.79528809 -89.55416870]
[-576.13049316 -93.97026825]
[-585.36102295 -86.46901703]
[-596.94824219 -84.37855530]
[-607.99096680 -88.10468292]
[-615.78076172 -96.61136627]
[-618.46630859 -107.70553589]
[-632.65948486 -112.55886078]
[-646.85260010 -117.41218567]
[-661.04571533 -122.26551056]
[-675.27563477 -127.00994110]
[-691.19519043 -123.07295990]
[-702.36798096 -135.07719421]
[-697.30035400 -150.67370605]
[-681.20550537 -153.81814575]
[-670.64038086 -141.27578735]
[-663.30401611 -142.19903564]
[-656.19244385 -136.45864868]
[-641.99926758 -131.60533142]
[-627.80615234 -126.75200653]
[-613.61297607 -121.89868164]
[-597.69616699 -130.93441772]
[-579.92315674 -125.37564087]
[-571.71441650 -108.30547333]
[-557.37921143 -103.88937378]
[-543.04400635 -99.47327423]
[-528.60290527 -103.12066650]
[-517.69226074 -91.66342163]
[-503.35702515 -87.24732971]
[-489.02182007 -82.83123016]
[-474.68661499 -78.41513062]
[-460.35140991 -73.99903107]
[-446.01623535 -69.58293915]
[-431.68103027 -65.16683960]
[-417.34582520 -60.75074387]
[-403.01062012 -56.33464432]
[-388.60940552 -52.13874435]
[-374.14559937 -48.16402054]
[-366.85940552 -49.42345810]
[-359.49151611 -44.01597977]
[-345.09030151 -39.82007599]
[-330.68911743 -35.62417603]
[-316.28793335 -31.42827225]
[-301.88671875 -27.23236847]
[-287.48553467 -23.03646660]
[-273.08435059 -18.84056473]
[-258.68313599 -14.64466190]
[-244.28195190 -10.44875908]
[-229.88075256 -6.25285625]
[-215.47956848 -2.05695367]
[-201.09603882 -5.92521858]
[-190.01110840 5.36348438]
[-175.60990906 9.55938721]
[-161.20870972 13.75529003]
[-146.80752563 17.95119286]
[-132.40632629 22.14709473]
[-120.76331329 12.89624310]
[-105.72772980 12.26769829]
[-93.05693817 20.71190453]
[-87.72634888 35.16496277]
[-73.32514954 39.36086655]
[-58.92395782 43.55677032]
[-44.52276230 47.75267029]
[-37.21812057 46.60503769]
[-29.93394661 52.12478638]
[-15.59874153 56.54088593]
[-1.26353753 60.95698166]
[13.07166672 65.37307739]
[27.40687180 69.78917694]
[41.74207687 74.20527649]
[56.07727814 78.62136841]
[70.70236206 60.91164398]
[91.80426788 51.84316254]
[114.71799469 53.42069244]
[134.37802124 65.29549408]
[146.44535828 56.38599014]
[158.51271057 47.47648621]
[170.58004761 38.56697845]
[175.62823486 30.94840622]
[182.90127563 29.61508751]
[195.10372925 20.89155197]
[207.30618286 12.16801643]
[219.50863647 3.44448066]
[225.79707336 -11.70106888]
[242.09059143 -13.55931759]
[251.62782288 -0.21865985]
[244.59768677 14.59718037]
[228.23217773 15.64693642]
[216.02970886 24.37047195]
[203.82725525 33.09400558]
[191.62480164 41.81754303]
[179.48954773 50.63432312]
[167.42221069 59.54382706]
[155.35487366 68.45333099]
[143.28752136 77.36283875]
[145.58232117 82.43576050]
[147.28495789 87.73686981]
[162.21060181 86.24517059]
[177.13624573 84.75346375]
[192.06188965 83.26176453]
[205.05508423 73.25633240]
[220.11146545 79.75537109]
[221.74230957 96.07321930]
[208.26994324 105.42348480]
[193.55358887 98.18740845]
[178.62794495 99.67910767]
[163.70230103 101.17081451]
[148.77665710 102.66251373]
[147.87873840 109.68907166]
[145.97399902 116.51187897]
[143.10252380 122.98747253]
[139.32466125 128.97967529]
[149.89054871 139.62683105]
[160.45643616 150.27400208]
[171.02232361 160.92115784]
[181.58821106 171.56831360]
[192.15409851 182.21546936]
[202.72000122 192.86264038]
[209.36326599 191.14685059]
[216.15998840 191.56697083]
[222.44548035 194.04995728]
[227.61488342 198.32261658]
[231.18142700 203.94125366]
[232.82218933 210.33764648]
[232.40708923 216.87640381]
[230.00865173 222.91810608]
[239.55229187 234.49043274]
[249.09593201 246.06277466]
[258.63955688 257.63510132]
[268.18319702 269.20745850]
[277.72683716 280.77978516]
[293.48068237 282.04153442]
[303.66439819 294.12738037]
[302.23614502 309.86700439]
[290.04330444 319.92236328]
[274.31967163 318.32778931]
[264.39376831 306.02932739]
[266.15451050 290.32342529]
[256.61087036 278.75109863]
[247.06723022 267.17874146]
[237.52359009 255.60641479]
[227.97994995 244.03407288]
[218.43632507 232.46173096]
[195.97666931 226.95645142]
[192.07283020 203.42852783]
[181.50694275 192.78135681]
[170.94105530 182.13420105]
[160.37516785 171.48704529]
[149.80928040 160.83988953]
[139.24339294 150.19271851]
[128.67750549 139.54556274]
[117.53250885 145.59454346]
[105.20606232 148.57106018]
[92.52879333 148.27455139]
[80.35498810 144.72499084]
[69.50498199 138.16156006]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 119]
[4 118]
[5 117]
[6 116]
[7 115]
[8 114]
[9 113]
[10 111]
[11 110]
[12 109]
[13 108]
[17 104]
[18 103]
[19 102]
[20 101]
[21 100]
[23 98]
[24 97]
[25 96]
[26 95]
[27 94]
[28 93]
[29 92]
[30 91]
[31 90]
[32 89]
[33 88]
[34 86]
[35 85]
[38 84]
[39 83]
[40 82]
[41 81]
[42 80]
[43 79]
[44 78]
[45 77]
[46 76]
[48 74]
[49 73]
[50 72]
[55 69]
[56 68]
[57 67]
[58 66]
[59 64]
[123 143]
[124 142]
[125 141]
[126 140]
[128 139]
[129 138]
[130 137]
[131 136]
[145 156]
[146 155]
[147 154]
[148 153]
[160 199]
[161 198]
[162 197]
[163 196]
[164 195]
[165 194]
[166 193]
[174 191]
[175 190]
[176 189]
[177 188]
[178 187]
[179 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
