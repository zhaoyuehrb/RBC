%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 22:28:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCGUGCCCCAGCCCAGCCAGCUACCCAGCCCCUCUCUGUGUGCAGCCGGAGGGUCCUAAGAAUGGCUCCCGGAGCUAACUGAGGGCCCAGCCUUUUUUCUGCAUGAUCCAGGAGCACAUACCACAAACUACCACAAUAAAAAAGCUGUUUUUGCUAAUUGCGAUGUUCA\
) } def
/len { sequence length } bind def

/coor [
[99.53980255 507.39459229]
[99.41823578 491.59075928]
[110.56663513 480.38858032]
[110.29267883 465.39108276]
[110.01871490 450.39358521]
[109.74475098 435.39608765]
[109.33383942 420.40173340]
[108.78601074 405.41171265]
[94.88561249 396.71102905]
[88.83732605 381.28985596]
[93.20287323 365.13864136]
[106.45677185 354.65844727]
[105.63525391 339.68093872]
[104.81374359 324.70346069]
[91.00163269 319.07397461]
[80.96215057 307.96011353]
[76.72631073 293.53030396]
[79.18567657 278.63159180]
[87.90528107 266.22775269]
[101.19946289 258.80981445]
[100.37794495 243.83232117]
[99.55642700 228.85482788]
[98.73491669 213.87733459]
[97.91339874 198.89985657]
[79.61057281 196.79776001]
[62.01496124 191.33822632]
[45.73686600 182.71061707]
[31.34088707 171.21418762]
[19.32635689 157.24769592]
[10.10999775 141.29554749]
[4.01148129 123.91107178]
[1.24233365 105.69723511]
[-13.75516415 105.42327118]
[-28.75266266 105.14931488]
[-43.75016022 104.87535095]
[-58.74765778 104.60139465]
[-73.74515533 104.32743073]
[-88.74515533 104.32743073]
[-103.74265289 104.60139465]
[-118.74015045 104.87535095]
[-132.50340271 113.79191589]
[-146.98190308 106.09093475]
[-147.28141785 89.69452667]
[-133.09382629 81.46990204]
[-119.01411438 89.87785339]
[-104.01661682 89.60388947]
[-89.01911926 89.32993317]
[-85.09619141 86.54757690]
[-79.37574005 86.22504425]
[-73.47119904 89.32993317]
[-58.47369766 89.60388947]
[-43.47620010 89.87785339]
[-28.47870064 90.15181732]
[-13.48120308 90.42577362]
[1.51629448 90.69973755]
[4.82679272 73.02601624]
[11.28186893 56.24353409]
[20.66824341 40.90678787]
[32.67578506 27.52251816]
[46.90776062 16.53294563]
[62.89393234 8.30117321]
[80.10610962 3.09918356]
[97.97559357 1.09885275]
[115.91196442 2.36627340]
[119.44027710 -12.21285534]
[122.96859741 -26.79198456]
[126.36361694 -41.40272522]
[129.62507629 -56.04386520]
[132.88652039 -70.68500519]
[136.14797974 -85.32614136]
[139.40942383 -99.96727753]
[134.85781860 -115.11961365]
[145.17729187 -125.86007690]
[148.43875122 -140.50122070]
[151.70019531 -155.14234924]
[154.42475891 -169.89283752]
[156.60877991 -184.73298645]
[144.04649353 -193.33244324]
[136.49443054 -206.47981262]
[135.40406799 -221.54072571]
[140.93821716 -235.52407837]
[151.94943237 -245.67605591]
[166.21739197 -250.02244568]
[168.40141296 -264.86257935]
[170.58541870 -279.70272827]
[172.76943970 -294.54287720]
[174.95346069 -309.38302612]
[177.13748169 -324.22320557]
[173.46176147 -340.77389526]
[188.34811401 -348.88763428]
[200.26573181 -336.82916260]
[191.97763062 -322.03918457]
[189.79360962 -307.19903564]
[187.60958862 -292.35888672]
[185.42556763 -277.51870728]
[183.24156189 -262.67855835]
[181.05754089 -247.83842468]
[193.46835327 -239.56573486]
[201.08792114 -226.67187500]
[202.35884094 -211.68702698]
[196.97566223 -197.57881165]
[185.95606995 -187.16462708]
[171.44892883 -182.54896545]
[169.26490784 -167.70881653]
[170.86424255 -165.36401367]
[171.61346436 -162.23297119]
[171.20405579 -158.64282227]
[169.45393372 -155.02770996]
[166.34133911 -151.88090515]
[163.07989502 -137.23976135]
[159.81843567 -122.59862518]
[164.60333252 -108.49352264]
[154.05056763 -96.70582581]
[150.78910828 -82.06468964]
[147.52766418 -67.42355347]
[144.26620483 -52.78241348]
[141.00476074 -38.14127350]
[142.62559509 -30.90202332]
[137.54772949 -23.26366806]
[134.01940918 -8.68453979]
[130.49108887 5.89458847]
[140.85377502 9.90835285]
[150.70086670 15.05909157]
[159.90809631 21.28180122]
[168.35928345 28.49794960]
[175.94776917 36.61646652]
[182.57777405 45.53489685]
[188.16561890 55.14068604]
[192.64080811 65.31261444]
[195.94685364 75.92229462]
[198.04203796 86.83584595]
[198.89990234 97.91553497]
[198.50962830 109.02152252]
[196.87614441 120.01366425]
[194.02008057 130.75321960]
[189.97744751 141.10467529]
[184.79928589 150.93737793]
[178.55094910 160.12722778]
[171.31127930 168.55827332]
[163.17164612 176.12409973]
[154.23477173 182.72923279]
[144.61344910 188.29029846]
[134.42909241 192.73712158]
[123.81022644 196.01358032]
[112.89088440 198.07833862]
[113.71240234 213.05581665]
[114.53392029 228.03330994]
[115.35543060 243.01080322]
[116.17694855 257.98828125]
[130.20269775 263.90774536]
[140.22660828 275.28350830]
[144.30072021 289.82385254]
[141.66848755 304.63034058]
[132.90476990 316.77557373]
[119.79122925 323.88195801]
[120.61274719 338.85943604]
[121.43425751 353.83691406]
[133.55343628 360.44689941]
[140.75860596 372.09469604]
[141.25398254 385.67352295]
[135.01696777 397.62322998]
[123.77600098 404.86389160]
[124.32383728 419.85388184]
[127.77519226 428.35195923]
[124.74225616 435.12213135]
[125.01621246 450.11962891]
[125.29017639 465.11712646]
[125.56413269 480.11462402]
[137.11422729 490.90216064]
[137.56993103 506.69989014]
[126.66087341 518.13525391]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 168]
[4 167]
[5 166]
[6 165]
[7 163]
[8 162]
[12 157]
[13 156]
[14 155]
[20 149]
[21 148]
[22 147]
[23 146]
[24 145]
[32 55]
[33 54]
[34 53]
[35 52]
[36 51]
[37 50]
[38 47]
[39 46]
[40 45]
[64 121]
[65 120]
[66 119]
[67 117]
[68 116]
[69 115]
[70 114]
[71 113]
[73 111]
[74 110]
[75 109]
[76 104]
[77 103]
[83 97]
[84 96]
[85 95]
[86 94]
[87 93]
[88 92]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
