%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 21:38:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCAGAAAAGGAAAUCCUCGCUUCCAUGGCUGCCAAAAGGACAGUGUUUCUGGCUCUCAGCCCUAAGGCCCUGCAAACUCUAACUUAUUUCCCAAUUAGUCUGUAUCUAUACUUGGGCUCUGUAUGUGAAUGAAGGUUGGUCACCCAUCCAGCCUAUUACCUUUUGCUUUGUGUAUUAAAAGUGCUGCAAAAUCUGC\
) } def
/len { sequence length } bind def

/coor [
[112.53709412 211.83648682]
[98.34318542 204.35902405]
[95.48120880 188.57331848]
[106.14662933 176.58880615]
[106.62015533 161.59628296]
[107.09368134 146.60375977]
[107.56721497 131.61123657]
[100.29063416 129.79426575]
[85.73746490 126.16033173]
[78.46088409 124.34336853]
[71.83097839 137.79864502]
[65.20108032 151.25390625]
[66.81834412 167.57312012]
[53.33820343 176.91217041]
[38.62786865 169.66384888]
[37.82007217 153.28460693]
[51.74580383 144.62400818]
[58.37570953 131.16873169]
[65.00561523 117.71346283]
[70.78225708 114.10186768]
[76.68078613 110.71612549]
[61.81563568 112.72292328]
[46.95048523 114.72971344]
[32.08533096 116.73651123]
[26.46606064 129.32887268]
[15.44439411 137.43394470]
[1.96460474 139.01942444]
[-10.43739414 133.77716064]
[-18.56155014 123.17597961]
[-33.45653152 124.94786072]
[-48.35150909 126.71973419]
[-63.24649048 128.49162292]
[-78.14147186 130.26348877]
[-83.29344940 145.69207764]
[-94.61573792 157.28952026]
[-109.80675507 162.77090454]
[-125.80995941 161.08726501]
[-139.42883301 152.62588501]
[-147.96533203 139.12275696]
[-162.83049011 141.12954712]
[-177.69564819 143.13633728]
[-192.56079102 145.14314270]
[-201.94000244 157.86343384]
[-217.57897949 160.14331055]
[-230.19941711 150.63014221]
[-232.31381226 134.96792603]
[-222.66773987 122.44878387]
[-206.98405457 120.50009155]
[-194.56759644 130.27798462]
[-179.70243835 128.27119446]
[-164.83728027 126.26439667]
[-149.97213745 124.25759888]
[-146.33102417 110.86535645]
[-137.83236694 99.83871460]
[-125.73393250 92.86372375]
[-111.84704590 91.02278900]
[-98.26538849 94.62677765]
[-87.04931641 103.16314697]
[-79.91335297 115.36851501]
[-65.01837158 113.59663391]
[-50.12339020 111.82476044]
[-35.22840881 110.05287933]
[-20.33342934 108.28099823]
[-12.78777409 93.70728302]
[2.10534692 86.42676544]
[18.56729889 89.48469543]
[30.07853699 101.87135315]
[44.94369125 99.86456299]
[59.80884171 97.85776520]
[74.67399597 95.85097504]
[80.85469818 81.16686249]
[95.01114655 72.39942932]
[112.34786987 73.49521637]
[126.40913391 84.87828064]
[135.82745361 73.20372772]
[145.24577332 61.52916718]
[154.66409302 49.85461426]
[164.08241272 38.18005753]
[153.55139160 20.77729797]
[150.55218506 0.69478083]
[155.52156067 -18.95604706]
[167.66380310 -35.14138031]
[185.07804871 -45.37343597]
[205.05580139 -48.09282684]
[208.11268616 -62.77804184]
[203.35012817 -77.86540985]
[213.51876831 -88.74878693]
[216.57563782 -103.43399811]
[219.63252258 -118.11920929]
[208.64971924 -133.54656982]
[212.35739136 -151.79190063]
[227.94680786 -161.37454224]
[230.53857422 -176.14894104]
[233.13034058 -190.92333984]
[235.72210693 -205.69772339]
[238.31387329 -220.47212219]
[230.54838562 -239.06787109]
[243.57466125 -253.35017395]
[245.69873047 -268.19903564]
[247.82279968 -283.04788208]
[237.25372314 -294.57299805]
[236.61720276 -310.19763184]
[246.21379089 -322.54428101]
[261.51226807 -325.78323364]
[275.28915405 -318.38516235]
[281.03942871 -303.84320068]
[276.04797363 -289.02365112]
[262.67163086 -280.92379761]
[260.54757690 -266.07495117]
[258.42349243 -251.22610474]
[265.27029419 -243.62481689]
[266.83041382 -233.29200745]
[262.34881592 -223.60922241]
[253.08825684 -217.88035583]
[250.49649048 -203.10595703]
[247.90473938 -188.33157349]
[245.31297302 -173.55717468]
[242.72120667 -158.78277588]
[251.14936829 -151.07606506]
[254.84471130 -140.14329529]
[252.77806091 -128.66755676]
[245.34962463 -119.52463531]
[234.31773376 -115.06233215]
[231.26086426 -100.37712097]
[228.20397949 -85.69190979]
[233.18518066 -71.65492249]
[222.79789734 -59.72116089]
[219.74101257 -45.03594971]
[226.10269165 -42.19273758]
[232.01950073 -38.51223755]
[237.38189697 -34.06259537]
[242.09062195 -28.92619133]
[246.05847168 -23.19812012]
[249.21200562 -16.98443222]
[251.49282837 -10.40016651]
[266.38781738 -12.17204666]
[281.28280640 -13.94392586]
[296.17776489 -15.71580505]
[311.07275391 -17.48768425]
[325.96774292 -19.25956345]
[340.86273193 -21.03144264]
[348.31884766 -34.63973618]
[362.36410522 -41.23601151]
[377.59774780 -38.28386688]
[388.16220093 -26.91846085]
[389.99514771 -11.51002407]
[382.39181519 2.01658320]
[368.27584839 8.46010685]
[353.07510376 5.34287882]
[342.63461304 -6.13646173]
[327.73962402 -4.36458254]
[312.84463501 -2.59270334]
[297.94964600 -0.82082415]
[283.05468750 0.95105505]
[268.15969849 2.72293425]
[253.26470947 4.49481344]
[251.24142456 17.59823799]
[245.91694641 29.76015663]
[237.63945007 40.16277695]
[226.95591736 48.10406876]
[214.57617188 53.04514313]
[201.32557678 54.64680862]
[188.09007263 52.79283905]
[175.75695801 47.59837723]
[166.33863831 59.27293396]
[156.92031860 70.94748688]
[147.50199890 82.62204742]
[138.08369446 94.29660034]
[137.37353516 109.27977753]
[145.64546204 121.79278564]
[153.91738892 134.30578613]
[162.18931580 146.81880188]
[170.46122742 159.33180237]
[178.83166504 171.77912903]
[187.30009460 184.15998840]
[195.76852417 196.54084778]
[204.23693848 208.92170715]
[212.70536804 221.30258179]
[226.63812256 230.96252441]
[221.21267700 247.02491760]
[204.27607727 246.25801086]
[200.32450867 229.77099609]
[191.85607910 217.39013672]
[183.38764954 205.00927734]
[174.91923523 192.62841797]
[166.45080566 180.24754333]
[160.07345581 176.49780273]
[157.94822693 167.60372925]
[149.67630005 155.09071350]
[141.40438843 142.57771301]
[133.13246155 130.06471252]
[124.86053467 117.55170441]
[124.60276794 124.65012360]
[122.55973816 132.08476257]
[122.08620453 147.07728577]
[121.61267853 162.06980896]
[121.13915253 177.06233215]
[131.02702332 189.69599915]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 197]
[5 196]
[6 195]
[7 194]
[10 19]
[11 18]
[12 17]
[21 70]
[22 69]
[23 68]
[24 67]
[29 63]
[30 62]
[31 61]
[32 60]
[33 59]
[39 52]
[40 51]
[41 50]
[42 49]
[74 168]
[75 167]
[76 166]
[77 165]
[78 164]
[84 128]
[85 127]
[87 125]
[88 124]
[89 123]
[92 118]
[93 117]
[94 116]
[95 115]
[96 114]
[98 110]
[99 109]
[100 108]
[135 156]
[136 155]
[137 154]
[138 153]
[139 152]
[140 151]
[141 150]
[169 192]
[170 191]
[171 190]
[172 189]
[173 188]
[174 186]
[175 185]
[176 184]
[177 183]
[178 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
