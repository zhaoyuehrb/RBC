%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 21:44:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGAGACAAAUCAGAUAUGUGUUCAUCUGCUGUGGGAACCCCUUUAUCCCAGAAAGCCCUCUUCCUUGUGCCUUAUCAAACAGGACAAAUACGUUCUGUUUUAUGUCUUGAAUU\
) } def
/len { sequence length } bind def

/coor [
[84.03147888 264.96395874]
[81.06848145 249.82382202]
[86.78246307 235.49365234]
[99.35012054 226.54615784]
[98.53803253 211.56814575]
[97.72595215 196.59014893]
[96.91386414 181.61215210]
[96.10178375 166.63414001]
[95.28969574 151.65614319]
[83.53246307 149.18704224]
[72.65859985 144.07939148]
[63.25141525 136.60717773]
[55.81553268 127.17125702]
[42.03633881 133.09863281]
[28.25714493 139.02601624]
[14.47795105 144.95339966]
[0.69875711 150.88076782]
[-2.58750296 166.04586792]
[-14.18236351 176.35794067]
[-29.62736511 177.85179138]
[-42.98358536 169.95298767]
[-49.11529160 155.69880676]
[-45.66471481 140.57025146]
[-33.95866776 130.38456726]
[-18.49837112 129.05836487]
[-5.22862101 137.10157776]
[8.55057335 131.17419434]
[22.32976723 125.24681854]
[36.10896301 119.31944275]
[49.88815689 113.39206696]
[48.93118286 90.91593933]
[57.58026123 70.14852905]
[42.24046326 66.27540588]
[38.32145691 51.90562439]
[27.43152428 41.59012985]
[16.54159164 31.27463913]
[5.65165949 20.95914650]
[-5.23827314 10.64365578]
[-20.19384003 14.42975903]
[-34.81491089 9.50757980]
[-44.43595505 -2.55223179]
[-45.98693085 -17.90143394]
[-38.97293091 -31.64215279]
[-25.63209534 -39.38977432]
[-10.22143459 -38.67206192]
[2.34156275 -29.71803093]
[8.04809189 -15.38488483]
[5.07721901 -0.24627700]
[15.96715164 10.06921482]
[26.85708427 20.38470650]
[37.74701691 30.70019913]
[48.63694763 41.01568985]
[63.19782639 44.15098190]
[67.89575195 59.25859833]
[80.95644379 51.75181580]
[95.62335968 48.31451416]
[110.65942383 49.23661804]
[115.83211517 35.15673065]
[113.32836914 19.53489113]
[124.98001099 10.25650120]
[116.23017883 -2.55833721]
[116.71743774 -18.06776047]
[126.25443268 -30.30807877]
[141.17398071 -34.57263947]
[155.73922729 -29.22163391]
[164.34953308 -16.31263161]
[163.69404602 -0.80940694]
[154.02484131 11.32673359]
[139.05989075 15.42919540]
[141.93362427 30.04394531]
[129.91200256 40.32942581]
[124.73931122 54.40931320]
[131.67561340 58.92445755]
[137.80546570 64.48534393]
[142.97283936 70.95040894]
[147.04617310 78.15503693]
[149.92173767 85.91582489]
[151.52635193 94.03518677]
[151.81915283 102.30639648]
[166.55041504 105.13307953]
[181.28166199 107.95976257]
[196.01292419 110.78643799]
[210.74417114 113.61312103]
[225.47543335 116.43979645]
[240.20668030 119.26647949]
[254.93794250 122.09316254]
[269.66918945 124.91983795]
[282.60794067 115.84434509]
[298.15969849 118.65832520]
[307.09786987 131.69229126]
[304.11962891 147.21342468]
[290.99191284 156.01332092]
[275.50311279 152.87113953]
[266.84252930 139.65109253]
[252.11126709 136.82441711]
[237.38000488 133.99774170]
[222.64875793 131.17105103]
[207.91749573 128.34437561]
[193.18624878 125.51769257]
[178.45498657 122.69101715]
[163.72372437 119.86433411]
[148.99247742 117.03765869]
[140.32339478 132.62771606]
[126.88537598 144.35899353]
[110.26770020 150.84405518]
[111.07978058 165.82206726]
[111.89186859 180.80006409]
[112.70394897 195.77806091]
[113.51603699 210.75607300]
[114.32811737 225.73406982]
[127.78949738 233.27030945]
[135.01934814 246.89869690]
[133.71064758 262.27044678]
[124.28102112 274.48049927]
[109.73940277 279.63269043]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 110]
[5 109]
[6 108]
[7 107]
[8 106]
[9 105]
[13 30]
[14 29]
[15 28]
[16 27]
[17 26]
[32 54]
[34 52]
[35 51]
[36 50]
[37 49]
[38 48]
[57 72]
[58 71]
[60 69]
[79 102]
[80 101]
[81 100]
[82 99]
[83 98]
[84 97]
[85 96]
[86 95]
[87 94]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
