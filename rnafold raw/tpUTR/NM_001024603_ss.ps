%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 12:22:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAUUCUUCACCCCAGAGGCUUUAUCUCUCCUGCAGGGAAGGCUCAUGAGCAAAUGCUGUCAUUAGCAACCAUGCAUUGUUGAAGACAUAUAGUGAGAAAAUAUGUCAGGUAUUGUUUCAAUGUACCAAUGUUAGUAGAAAAUCCUGAAGAAUUUUCGAGAUAUUAACUGUAGAUUAAAACAACCUUUAACCUAAAUCCUGAGAAUUUC\
) } def
/len { sequence length } bind def

/coor [
[120.46649170 273.74090576]
[126.51283264 257.90176392]
[126.51283264 242.90176392]
[126.51283264 227.90176392]
[126.51283264 212.90176392]
[126.51283264 197.90176392]
[126.51283264 182.90176392]
[126.51283264 167.90176392]
[126.51283264 152.90176392]
[119.44831848 150.38330078]
[114.41139984 164.51232910]
[109.37426758 178.64128113]
[95.24539185 173.60392761]
[100.28237152 159.47541809]
[105.31928253 145.34638977]
[98.25476837 142.82792664]
[88.76587677 154.44519043]
[79.27697754 166.06245422]
[69.78807831 177.67971802]
[60.29917908 189.29698181]
[60.47171783 205.33911133]
[47.94651413 215.36401367]
[32.33183289 211.68145752]
[25.60591698 197.11637878]
[32.92831802 182.84185791]
[48.68191528 179.80809021]
[58.17081451 168.19082642]
[67.65971375 156.57356262]
[77.14861298 144.95629883]
[86.63750458 133.33903503]
[83.65172577 126.45898438]
[77.68016052 112.69887543]
[74.69438171 105.81882477]
[59.72803879 104.81456757]
[44.76169205 103.81031036]
[29.79534912 102.80604553]
[14.82194424 101.91323090]
[-0.15769351 101.13191223]
[-7.27285480 110.65614319]
[-17.99235535 115.51342773]
[-29.60545349 114.60245514]
[-39.23615646 108.26484680]
[-44.55546570 98.17172241]
[-59.50519943 96.94474792]
[-74.45493317 95.71777344]
[-88.84175873 102.30030823]
[-100.89347839 93.54786682]
[-115.84321594 92.32089233]
[-130.79295349 91.09391785]
[-145.74267578 89.86694336]
[-160.70903015 88.86267853]
[-175.68865967 88.08135986]
[-190.04484558 96.00803375]
[-203.94598389 87.30801392]
[-203.09178162 70.93112946]
[-188.36096191 63.72451782]
[-174.90733337 73.10172272]
[-159.92770386 73.88304138]
[-155.84272766 71.40878296]
[-150.16004944 71.47441101]
[-144.51570129 74.91720581]
[-129.56596375 76.14418793]
[-114.61623383 77.37116241]
[-99.66650391 78.59813690]
[-86.34898376 71.92783356]
[-73.22795868 80.76803589]
[-58.27822113 81.99501038]
[-43.32848740 83.22198486]
[-30.10673714 70.56098938]
[-11.51030827 71.60298157]
[0.62362862 86.15227509]
[15.60326576 86.93359375]
[22.44673729 84.14276886]
[30.79961014 87.83970642]
[45.76595306 88.84396362]
[60.73229980 89.84822083]
[75.69863892 90.85248566]
[80.48620605 85.07933044]
[67.83346558 77.02276611]
[53.35234070 73.11163330]
[48.81475449 58.81441498]
[58.39014053 47.26833725]
[73.28000641 49.08267975]
[79.80261230 62.58959198]
[90.06132507 73.53302765]
[94.84888458 67.75988007]
[91.09258270 53.23781967]
[87.33628082 38.71576309]
[83.57997894 24.19370270]
[79.82367706 9.67164326]
[76.06737518 -4.85041618]
[72.31108093 -19.37247467]
[57.62577438 -24.09957314]
[47.84503555 -36.03023148]
[46.08985519 -51.35742569]
[52.92030716 -65.19029999]
[66.15682220 -73.11483765]
[81.57566833 -72.60234833]
[94.25675964 -63.81636047]
[100.15359497 -49.56045532]
[97.38452148 -34.38363647]
[86.83313751 -23.12877655]
[90.58943939 -8.60671711]
[94.34574127 5.91534233]
[98.10203552 20.43740082]
[101.85833740 34.95946121]
[105.61463928 49.48152161]
[109.37094116 64.00357819]
[122.48963165 71.27680969]
[136.79632568 66.76918030]
[151.10301208 62.26155090]
[165.40969849 57.75392151]
[170.15133667 53.14649582]
[175.67832947 51.82387924]
[180.20986938 53.33193207]
[194.64442444 49.25226593]
[209.07897949 45.17259979]
[223.51353455 41.09293365]
[237.94807434 37.01326752]
[249.12365723 25.81429482]
[263.47552490 29.79839134]
[277.91009521 25.71872330]
[292.34463501 21.63905716]
[303.52023315 10.44008541]
[317.87210083 14.42418194]
[332.30664062 10.34451485]
[346.74121094 6.26484823]
[350.20758057 -2.50391626]
[357.21609497 -8.60412312]
[366.11181641 -10.76300812]
[374.86959839 -8.61925793]
[381.55514526 -2.77658582]
[396.15744019 -6.20764685]
[410.75976562 -9.63870811]
[425.36209106 -13.06976891]
[439.96441650 -16.50082970]
[454.56674194 -19.93189049]
[469.16906738 -23.36295128]
[483.66275024 -27.22725677]
[498.03497314 -31.52138138]
[512.40716553 -35.81550598]
[526.77941895 -40.10962677]
[541.15161133 -44.40375137]
[555.52380371 -48.69787598]
[560.54180908 -63.38118744]
[573.25140381 -72.28319550]
[588.76550293 -71.98088837]
[601.11871338 -62.59051895]
[605.56085205 -47.72287369]
[600.38385010 -33.09486008]
[587.57843018 -24.33125496]
[572.06854248 -24.80183792]
[559.81793213 -34.32566452]
[545.44573975 -30.03153992]
[531.07354736 -25.73741531]
[516.70129395 -21.44329262]
[502.32910156 -17.14916801]
[487.95687866 -12.85504436]
[486.50796509 -10.45529366]
[484.02117920 -8.48488140]
[480.65530396 -7.34199333]
[476.71014404 -7.36004305]
[472.60012817 -8.76062965]
[457.99780273 -5.32956886]
[443.39547729 -1.89850760]
[428.79315186 1.53255343]
[414.19082642 4.96361446]
[399.58850098 8.39467525]
[384.98620605 11.82573700]
[371.23510742 27.21640587]
[350.82086182 20.69940186]
[336.38632202 24.77906799]
[321.95175171 28.85873413]
[311.80862427 39.76589966]
[296.42431641 36.07360840]
[281.98974609 40.15327835]
[267.55520630 44.23294449]
[257.41207886 55.14011002]
[242.02775574 51.44781876]
[227.59320068 55.52748489]
[213.15864563 59.60715103]
[198.72409058 63.68682098]
[184.28953552 67.76648712]
[169.91732788 72.06060791]
[155.61064148 76.56823730]
[141.30395508 81.07586670]
[126.99726105 85.58349609]
[141.71363831 88.48667145]
[156.43000793 91.38984680]
[171.37828064 90.14528656]
[185.91595459 93.84073639]
[198.45533752 102.07260895]
[207.62701416 113.94190979]
[212.42935181 128.15238953]
[212.33786011 143.15211487]
[207.36256409 157.30294800]
[198.04679871 169.05950928]
[185.40794373 177.13783264]
[170.82629395 180.65568542]
[155.89559937 179.22924805]
[148.70420837 166.06550598]
[141.51283264 152.90176392]
[141.51283264 167.90176392]
[141.51283264 182.90176392]
[141.51283264 197.90176392]
[141.51283264 212.90176392]
[141.51283264 227.90176392]
[141.51283264 242.90176392]
[141.51283264 257.90176392]
[147.55917358 273.74090576]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 209]
[3 208]
[4 207]
[5 206]
[6 205]
[7 204]
[8 203]
[9 202]
[16 30]
[17 29]
[18 28]
[19 27]
[20 26]
[33 77]
[34 76]
[35 75]
[36 74]
[37 72]
[38 71]
[43 68]
[44 67]
[45 66]
[47 64]
[48 63]
[49 62]
[50 61]
[51 58]
[52 57]
[86 108]
[87 107]
[88 106]
[89 105]
[90 104]
[91 103]
[92 102]
[109 187]
[110 186]
[111 185]
[112 184]
[115 183]
[116 182]
[117 181]
[118 180]
[119 179]
[121 177]
[122 176]
[123 175]
[125 173]
[126 172]
[127 171]
[132 169]
[133 168]
[134 167]
[135 166]
[136 165]
[137 164]
[138 163]
[139 158]
[140 157]
[141 156]
[142 155]
[143 154]
[144 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
