%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 12:20:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGGGCAGCGGGCAUGCCACAACUCCUCAGGACACAUGUGGGCCAAGUAGAGAGCGCCGGCCCCUCAAGGACCAUGGCCUGAGCCUGGUGGACGCCCUUCCCUCUGGUCGGUUGUGGGGCUCAAUAAAUGGCUCUGUGAACUUCCCCUGCACUGCCAGGGCCGUUCCCAUGAGCUGCUUCCCUGA\
) } def
/len { sequence length } bind def

/coor [
[337.10079956 452.73770142]
[343.14715576 436.89855957]
[343.14715576 421.89855957]
[343.14715576 406.89855957]
[343.14715576 391.89855957]
[343.14715576 376.89855957]
[335.40985107 364.17129517]
[343.14715576 350.37112427]
[343.14715576 335.37112427]
[343.14715576 320.37112427]
[336.68759155 306.83325195]
[325.02774048 297.39669800]
[313.36791992 287.96017456]
[301.70809937 278.52362061]
[291.65792847 280.50576782]
[281.97695923 276.53512573]
[275.96533203 267.70358276]
[275.81524658 256.80136108]
[264.47900391 246.97845459]
[253.14274597 237.15553284]
[241.80650330 227.33262634]
[230.47026062 217.50971985]
[219.13401794 207.68679810]
[207.79777527 197.86389160]
[196.46153259 188.04098511]
[184.96186829 178.40989685]
[173.30204773 168.97335815]
[158.56251526 170.78495789]
[146.60336304 161.38105774]
[144.80313110 145.90859985]
[133.14329529 136.47206116]
[121.48345947 127.03551483]
[103.89834595 134.31123352]
[85.12923431 131.16598511]
[70.87665558 118.55502319]
[65.46939087 100.30854797]
[50.35948181 104.99909210]
[39.52472687 94.77864838]
[24.85426140 91.65176392]
[7.48676968 97.74246216]
[-5.08993006 85.51618195]
[-19.81085396 82.63618469]
[-34.53177643 79.75617981]
[-49.25270081 76.87618256]
[-63.97362518 73.99618530]
[-78.29540253 84.02400970]
[-95.10960388 80.66768646]
[-104.12167358 66.47948456]
[-118.88890076 63.84719086]
[-132.81732178 71.80825806]
[-147.67193604 65.74855804]
[-152.05755615 50.31658173]
[-142.60990906 37.35041428]
[-126.57641602 36.79659653]
[-116.25660706 49.07996368]
[-101.48937988 51.71225357]
[-92.04504395 42.92895126]
[-79.07178497 41.16913986]
[-67.28330994 47.29864883]
[-61.09362793 59.27526093]
[-46.37270355 62.15525818]
[-31.65177917 65.03525543]
[-16.93085480 67.91526031]
[-2.20993161 70.79525757]
[8.01142502 64.30163574]
[20.31009674 66.59525299]
[27.98115349 76.98129272]
[42.65161896 80.10818481]
[56.71219635 75.19398499]
[68.59628296 85.63808441]
[69.22628021 78.10225677]
[71.66546631 70.35672760]
[65.54907227 56.66038513]
[59.43267441 42.96404648]
[53.31628418 29.26770401]
[46.94631195 22.69106483]
[47.21433640 15.28952026]
[41.32889175 1.49236274]
[35.44345093 -12.30479527]
[22.01130104 -21.71273994]
[23.71209908 -38.02345276]
[38.79620743 -44.45787048]
[51.74638748 -34.39681244]
[49.24060822 -18.19023705]
[55.12604904 -4.39308023]
[61.01149368 9.40407753]
[67.01262665 23.15131187]
[73.12901306 36.84765244]
[79.24540710 50.54399109]
[85.36180115 64.24033356]
[100.08272552 61.36033249]
[100.58663177 46.36880112]
[92.39556885 32.16181183]
[100.83678436 18.10201073]
[117.22667694 18.65291786]
[124.70472717 33.24780273]
[115.57816315 46.87270355]
[115.07426453 61.86423874]
[127.99028015 72.28763580]
[135.26174927 86.46701813]
[136.10993958 101.71673584]
[130.91999817 115.37568665]
[142.57983398 124.81222534]
[154.23966980 134.24876404]
[169.74748230 132.78407288]
[181.43778992 142.52015686]
[182.73858643 157.31352234]
[194.39840698 166.75006104]
[200.89123535 168.16497803]
[205.05644226 172.06979370]
[206.28443909 176.70474243]
[217.62068176 186.52764893]
[228.95692444 196.35055542]
[240.29318237 206.17347717]
[251.62942505 215.99638367]
[262.96566772 225.81929016]
[274.30191040 235.64221191]
[285.63815308 245.46511841]
[305.57382202 248.36012268]
[311.14462280 266.86380005]
[322.80447388 276.30035400]
[334.46429443 285.73687744]
[346.12411499 295.17343140]
[339.43591309 281.74703979]
[341.70803833 266.92013550]
[352.10992432 256.11270142]
[366.83917236 253.27546692]
[380.51138306 259.44555664]
[388.12869263 272.36752319]
[386.90652466 287.31762695]
[377.29318237 298.82992554]
[390.83105469 305.28948975]
[404.36892700 311.74905396]
[417.90679932 318.20861816]
[431.44470215 324.66818237]
[445.03634644 331.01379395]
[458.68081665 337.24502563]
[474.44808960 335.93972778]
[482.81103516 348.26492310]
[496.45550537 354.49612427]
[510.10000610 360.72735596]
[523.74450684 366.95858765]
[535.75079346 360.82669067]
[548.90362549 362.70855713]
[558.42541504 371.69400024]
[560.98834229 384.33413696]
[574.52624512 390.79370117]
[588.06408691 397.25326538]
[601.60198975 403.71282959]
[615.13983154 410.17236328]
[629.95288086 404.66326904]
[644.28778076 411.31802368]
[649.63995361 426.18844604]
[642.83404541 440.45220947]
[627.90783691 445.64688110]
[613.71685791 438.69052124]
[608.68029785 423.71026611]
[595.14239502 417.25070190]
[581.60455322 410.79113770]
[568.06665039 404.33157349]
[554.52880859 397.87200928]
[538.94012451 404.15823364]
[523.31658936 397.09524536]
[517.51324463 380.60305786]
[503.86877441 374.37185669]
[490.22430420 368.14062500]
[476.57980347 361.90939331]
[461.78848267 363.66040039]
[452.44958496 350.88949585]
[438.80511475 344.65826416]
[431.39916992 344.73971558]
[424.98513794 338.20605469]
[411.44726562 331.74649048]
[397.90936279 325.28692627]
[384.37149048 318.82736206]
[370.83361816 312.36779785]
[358.14715576 320.37112427]
[358.14715576 335.37112427]
[358.14715576 350.37112427]
[365.88446045 364.17129517]
[358.14715576 376.89855957]
[358.14715576 391.89855957]
[358.14715576 406.89855957]
[358.14715576 421.89855957]
[358.14715576 436.89855957]
[364.19348145 452.73770142]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 185]
[3 184]
[4 183]
[5 182]
[6 181]
[8 179]
[9 178]
[10 177]
[11 123]
[12 122]
[13 121]
[14 120]
[18 118]
[19 117]
[20 116]
[21 115]
[22 114]
[23 113]
[24 112]
[25 111]
[26 108]
[27 107]
[30 104]
[31 103]
[32 102]
[36 70]
[38 68]
[39 67]
[41 64]
[42 63]
[43 62]
[44 61]
[45 60]
[48 56]
[49 55]
[72 90]
[73 89]
[74 88]
[75 87]
[77 86]
[78 85]
[79 84]
[91 98]
[92 97]
[131 176]
[132 175]
[133 174]
[134 173]
[135 172]
[136 170]
[137 169]
[139 167]
[140 166]
[141 165]
[142 164]
[146 161]
[147 160]
[148 159]
[149 158]
[150 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
