%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 06:14:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAAGCUGAAAAAUGGAUGUCUAGAACUGGUCCUGCAAUUACUAUGAAGUCAAAAAUUAAACUAGACUAUGUCUCCAACUCAGUUCAGACCAUCUCCUCCCUAAUGAGUUUGCAUCGCUGAUCUUCAGUACCUUCACCUGUCUCAGUCUCUAGAGCCCUGAAAAAUAAAAACAAACUUAUUUUUAUCCAGUG\
) } def
/len { sequence length } bind def

/coor [
[105.51591492 241.84056091]
[90.51328278 246.25135803]
[76.20619202 239.93936157]
[69.35001373 225.88494873]
[73.18202209 210.72415161]
[85.89286804 201.61544800]
[86.86381531 186.64691162]
[87.83476257 171.67835999]
[88.80570984 156.70982361]
[77.08808136 153.06938171]
[66.40283966 147.03771973]
[57.23144150 138.88658142]
[49.98714066 128.98326111]
[44.99635696 117.77400208]
[42.48397064 105.76386261]
[42.56318283 93.49401855]
[28.00353813 89.88613892]
[13.44389439 86.27826691]
[-1.11575007 82.67039490]
[-15.67539406 79.06251526]
[-30.26377296 75.57264709]
[-44.87993240 72.20101166]
[-59.49608994 68.82937622]
[-68.57621002 69.95005798]
[-74.32070923 65.28299713]
[-88.88034821 61.67511749]
[-103.43999481 58.06724548]
[-117.99964142 54.45936966]
[-132.55928040 50.85149765]
[-147.11892700 47.24362183]
[-161.70730591 43.75375366]
[-176.32347107 40.38211823]
[-189.63139343 52.67966843]
[-207.49949646 54.52190781]
[-222.76721191 45.35995483]
[-229.42948914 29.01707458]
[-244.14717102 26.12050438]
[-258.86483765 23.22393608]
[-249.53747559 34.97129440]
[-247.01080322 49.75695801]
[-251.90780640 63.93508530]
[-263.02102661 74.00963593]
[-277.61013794 77.49642944]
[-292.07778931 73.53569794]
[-302.85650635 63.10407639]
[-307.28854370 48.77378845]
[-304.28100586 34.07839203]
[-294.57550049 22.64147186]
[-280.56640625 17.28327751]
[-294.70739746 12.27999115]
[-308.84835815 7.27670479]
[-322.98934937 2.27341843]
[-333.43859863 13.35191059]
[-347.49298096 19.21653175]
[-362.71752930 18.85120010]
[-376.47445679 12.31921196]
[-386.38031006 0.75227380]
[-390.71881104 -13.84557247]
[-388.73834229 -28.94516182]
[-380.78198242 -41.93039703]
[-368.22824097 -50.55151367]
[-353.25213623 -53.31484222]
[-338.44836426 -49.74162674]
[-326.38174438 -40.45094681]
[-319.14291382 -27.05246735]
[-317.98605347 -11.86755466]
[-303.84506226 -6.86426830]
[-289.70410156 -1.86098194]
[-275.56314087 3.14230442]
[-265.20486450 1.02610612]
[-255.96826172 8.50626278]
[-241.25059509 11.40283203]
[-226.53292847 14.29940128]
[-218.94616699 4.80175352]
[-207.97387695 -0.59587687]
[-195.67549133 -0.81188536]
[-184.38862610 4.25626850]
[-176.28483582 13.70088005]
[-172.95182800 25.76595879]
[-158.33567810 29.13759422]
[-151.10101318 27.57543564]
[-143.51104736 32.68397903]
[-128.95141602 36.29185104]
[-114.39176941 39.89972687]
[-99.83212280 43.50759888]
[-85.27247620 47.11547470]
[-70.71282959 50.72335052]
[-56.12445450 54.21321869]
[-41.50829697 57.58485413]
[-26.89213753 60.95648956]
[-19.65747261 59.39433289]
[-12.06752014 64.50287628]
[2.49212432 68.11074829]
[17.05176926 71.71862030]
[31.61141205 75.32649994]
[46.17105865 78.93437195]
[55.51860046 63.08494949]
[69.37351990 50.97618484]
[86.33186340 43.83508301]
[104.67522430 42.38526154]
[122.54483032 46.77363205]
[138.12994385 56.55551529]
[149.85128784 70.73969269]
[156.52111816 87.88887024]
[171.47196960 86.67565918]
[186.42282104 85.46245575]
[201.37368774 84.24925232]
[216.32453918 83.03604126]
[231.27540588 81.82283783]
[246.22625732 80.60962677]
[261.17712402 79.39642334]
[276.12796021 78.18321991]
[291.07882690 76.97000885]
[297.32617188 56.97906494]
[311.48751831 41.61826324]
[330.80963135 33.80863190]
[351.56375122 35.00941086]
[369.76525879 44.94564819]
[381.27325439 35.32452393]
[392.78125000 25.70339966]
[404.28924561 16.08227730]
[415.79724121 6.46115398]
[424.07083130 -8.33694649]
[440.58099365 -4.48319674]
[441.44830322 12.44855118]
[425.41836548 17.96915054]
[413.91036987 27.59027290]
[402.40237427 37.21139526]
[390.89437866 46.83251953]
[379.38635254 56.45364380]
[381.96243286 61.43096542]
[383.93109131 66.67828369]
[385.26464844 72.12177277]
[385.94430542 77.68486023]
[400.87353516 79.14000702]
[415.80279541 80.59515381]
[430.73205566 82.05030060]
[438.73391724 74.65640259]
[449.26864624 72.93048096]
[458.81033325 77.20506287]
[464.29943848 85.84443665]
[478.98352051 79.95478821]
[490.60458374 89.27146149]
[505.47888184 91.20928955]
[520.35321045 93.14710999]
[530.92102051 81.78487396]
[546.15557861 78.83730316]
[560.19885254 85.43778992]
[567.65087891 99.04832458]
[565.64624023 114.43537140]
[554.95581055 125.68228912]
[539.69012451 128.46443176]
[525.71929932 121.71198273]
[518.41534424 108.02140808]
[503.54104614 106.08358765]
[488.66674805 104.14576721]
[475.04656982 110.17401886]
[462.36160278 100.71873474]
[445.11239624 109.43845367]
[429.27691650 96.97955322]
[414.34765625 95.52440643]
[399.41839600 94.06925964]
[384.48913574 92.61411285]
[379.81240845 104.18212128]
[372.26300049 114.13635254]
[362.36013794 121.77863312]
[350.78854370 126.57025909]
[338.35095215 128.16998291]
[325.91253662 126.45830536]
[314.34060669 121.54633331]
[304.44430542 113.76863098]
[296.91787720 103.66044617]
[292.29202271 91.92086792]
[277.34118652 93.13407135]
[262.39031982 94.34728241]
[247.43946838 95.56048584]
[232.48860168 96.77369690]
[217.53775024 97.98690033]
[202.58689880 99.20010376]
[187.63603210 100.41331482]
[172.68518066 101.62651825]
[157.73431396 102.83972931]
[155.90284729 114.70332336]
[151.66047668 125.93282318]
[145.19017029 136.04393005]
[136.77096558 144.60058594]
[126.76596069 151.23376465]
[115.60663605 155.65742493]
[103.77424622 157.68077087]
[102.80329895 172.64930725]
[101.83235168 187.61785889]
[100.86140442 202.58639526]
[112.28900146 213.26084900]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 192]
[7 191]
[8 190]
[9 189]
[16 96]
[17 95]
[18 94]
[19 93]
[20 92]
[21 90]
[22 89]
[23 88]
[25 87]
[26 86]
[27 85]
[28 84]
[29 83]
[30 82]
[31 80]
[32 79]
[36 73]
[37 72]
[38 71]
[49 69]
[50 68]
[51 67]
[52 66]
[104 182]
[105 181]
[106 180]
[107 179]
[108 178]
[109 177]
[110 176]
[111 175]
[112 174]
[113 173]
[118 130]
[119 129]
[120 128]
[121 127]
[122 126]
[134 163]
[135 162]
[136 161]
[137 160]
[141 158]
[143 156]
[144 155]
[145 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
