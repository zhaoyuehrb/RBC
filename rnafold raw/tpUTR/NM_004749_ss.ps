%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 01:05:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUGUGCCAGCAGCAUGGACUGCGUGCCUCUCCGCCGGAGGUCUAGCUGUGGGCGGCCAAGAAGGGUCACCCUUGAGGACAAACCUCUGUGCAGGACCUUGGCCAGAGUGGGGAGGGUGGCCAGCCACUCUGAGGGACAGAACGUCCUCUUGUGUAUAAUAAACCUUUAAUUUUGGUGUUGGACCCCUGGGGCCUUCCCAGGCUUGGUCACCCUCUGCACUGUCA\
) } def
/len { sequence length } bind def

/coor [
[145.85409546 137.39828491]
[136.76921082 149.33415222]
[122.59186554 154.23341370]
[108.07599640 150.45326233]
[98.08905792 139.26124573]
[95.97967529 124.41153717]
[84.86978912 134.48974609]
[73.75989532 144.56796265]
[68.73721313 159.57073975]
[54.11209869 162.39123535]
[43.00220871 172.46945190]
[31.89231873 182.54766846]
[20.78242874 192.62586975]
[9.67253876 202.70408630]
[5.42520094 210.77850342]
[-1.66253603 212.84385681]
[-12.91144371 222.76666260]
[-24.16035080 232.68946838]
[-35.40925980 242.61227417]
[-46.65816879 252.53507996]
[-57.90707397 262.45788574]
[-63.37485886 280.04675293]
[-80.70555115 282.83511353]
[-91.81543732 292.91333008]
[-96.06277466 300.98773193]
[-103.15051270 303.05310059]
[-114.39942169 312.97589111]
[-115.13713074 328.76296997]
[-126.87799835 339.34252930]
[-142.65637207 338.43795776]
[-153.11123657 326.58590698]
[-152.03988647 310.81796265]
[-140.07795715 300.48901367]
[-124.32222748 301.72698975]
[-113.07331848 291.80419922]
[-101.89365387 281.80343628]
[-90.78376007 271.72521973]
[-89.88485718 259.66891479]
[-80.72096252 251.18162537]
[-67.82987976 251.20896912]
[-56.58097458 241.28616333]
[-45.33206558 231.36335754]
[-34.08315659 221.44055176]
[-22.83424950 211.51774597]
[-11.58534145 201.59494019]
[-0.40567285 191.59419250]
[10.70421696 181.51597595]
[21.81410789 171.43777466]
[32.92399597 161.35955811]
[44.03388596 151.28135681]
[48.26191711 136.99943542]
[63.68168640 133.45806885]
[74.79157257 123.37985992]
[85.90146637 113.30164337]
[85.17195892 98.31939697]
[73.13549805 89.36820984]
[61.09904480 80.41703033]
[49.06258392 71.46585083]
[37.02612686 62.51466370]
[24.98966980 53.56348038]
[12.95321083 44.61229706]
[-0.35462481 37.69120789]
[-14.59447861 32.97669983]
[-28.83433151 28.26219559]
[-43.07418442 23.54768944]
[-57.31404114 18.83318329]
[-74.25086975 19.59487152]
[-79.67137146 3.53079581]
[-65.73562622 -6.12484837]
[-52.59953308 4.59332991]
[-38.35968018 9.30783558]
[-24.11982727 14.02234173]
[-9.87997246 18.73684692]
[4.35988092 23.45135307]
[11.55693245 10.29071331]
[-0.09588122 0.84550673]
[-11.74869537 -8.59969997]
[-23.40151024 -18.04490662]
[-39.44287491 -17.81212616]
[-49.51474762 -30.29959679]
[-45.89085388 -45.92799759]
[-31.35112953 -52.70855713]
[-17.04920959 -45.43981171]
[-13.95630360 -29.69771957]
[-2.30348897 -20.25251389]
[9.34932518 -10.80730724]
[21.00214005 -1.36210108]
[15.30410576 -15.23770618]
[26.50840378 -25.21085548]
[41.02595520 -28.98454666]
[55.66864395 -25.73006439]
[67.22087860 -16.16210365]
[73.14574432 -2.38182878]
[72.14211273 12.58455753]
[64.43038940 25.45037651]
[51.70409393 33.39024353]
[36.75880432 34.66065598]
[21.90439415 32.57584000]
[33.94085312 41.52702332]
[45.97731018 50.47820663]
[58.01376724 59.42938995]
[70.05022430 68.38056946]
[82.08668518 77.33175659]
[94.12313843 86.28293610]
[108.68149567 89.89602661]
[121.14214325 80.14704132]
[134.89941406 85.85552216]
[149.72439575 83.57080841]
[164.54937744 81.28609467]
[179.37435913 79.00138092]
[191.83502197 69.25239563]
[205.59228516 74.96087646]
[220.41726685 72.67616272]
[235.24224854 70.39144897]
[250.06723022 68.10673523]
[264.89221191 65.82202148]
[279.71719360 63.53731155]
[294.54217529 61.25259781]
[309.36715698 58.96788406]
[324.19213867 56.68317413]
[339.01712036 54.39846039]
[353.84210205 52.11374664]
[368.66708374 49.82903290]
[383.47583008 47.44133759]
[398.26763916 44.95077133]
[413.05941772 42.46020508]
[410.79373169 37.51710129]
[409.80532837 31.64063263]
[410.34924316 25.15269470]
[412.60202026 18.43476677]
[416.64913940 11.90940762]
[422.47628784 6.01921082]
[433.15634155 -4.51341486]
[443.83642578 -15.04604053]
[454.44302368 -25.65264320]
[464.97564697 -36.33270645]
[475.50827026 -47.01277161]
[486.04089355 -57.69283676]
[487.36767578 -73.68093109]
[500.77456665 -82.49197388]
[515.97698975 -77.36688232]
[521.31286621 -62.23719406]
[512.68908691 -48.70910645]
[496.72094727 -47.16021347]
[486.18832397 -36.48014832]
[475.65570068 -25.80008125]
[465.12307739 -15.12001705]
[462.66702271 -8.15801525]
[454.36904907 -4.36597538]
[443.68896484 6.16665030]
[433.00891113 16.69927597]
[434.09970093 24.11952782]
[448.52197266 19.99657440]
[462.94421387 15.87362289]
[477.36645508 11.75067043]
[491.78869629 7.62771749]
[506.21096802 3.50476480]
[520.63317871 -0.61818773]
[532.07275391 -10.32062531]
[546.85302734 -12.87842751]
[560.88775635 -7.58442831]
[570.29669189 4.09771872]
[572.47845459 18.93820190]
[566.82983398 32.83401108]
[554.91259766 41.94330978]
[540.02154541 43.74761963]
[526.27319336 37.74775314]
[511.27453613 37.94979858]
[496.27587891 38.15184402]
[481.27725220 38.35389328]
[466.27862549 38.55593872]
[451.27996826 38.75798416]
[436.28134155 38.96002960]
[437.37213135 46.38028336]
[450.63156128 53.39369965]
[463.89096069 60.40711975]
[472.92919922 61.65065765]
[477.28494263 67.61129761]
[492.28012085 63.39439011]
[505.52435303 70.88069916]
[509.45211792 85.20230103]
[522.61279297 92.39935303]
[531.63287354 93.76840973]
[535.90533447 99.78901672]
[548.96466064 107.16831207]
[562.02398682 114.54760742]
[578.78839111 117.07563782]
[581.00000000 133.88471985]
[565.46002197 140.66311646]
[554.64465332 127.60693359]
[541.58532715 120.22763824]
[528.52600098 112.84834290]
[515.41571045 105.55998993]
[502.25506592 98.36293793]
[488.07788086 102.78362274]
[474.62857056 95.67226410]
[470.08789062 80.77193451]
[456.87753296 73.66652679]
[443.61813354 66.65311432]
[430.35873413 59.63969421]
[415.54998779 57.25199509]
[400.75817871 59.74256134]
[385.96640015 62.23312759]
[379.89892578 66.43875885]
[370.95181274 64.65401459]
[356.12683105 66.93872833]
[341.30184937 69.22344208]
[326.47686768 71.50815582]
[311.65188599 73.79286957]
[296.82690430 76.07758331]
[282.00192261 78.36229706]
[267.17694092 80.64700317]
[252.35194397 82.93171692]
[237.52696228 85.21643066]
[222.70198059 87.50114441]
[207.87699890 89.78585815]
[196.47673035 99.37142181]
[181.65907288 93.82636261]
[166.83409119 96.11107635]
[152.00910950 98.39579010]
[137.18412781 100.68050385]
[125.78385925 110.26606750]
[110.96620941 104.72100830]
[125.84248352 102.79839325]
[139.29023743 109.44352722]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 54]
[7 53]
[8 52]
[10 50]
[11 49]
[12 48]
[13 47]
[14 46]
[16 45]
[17 44]
[18 43]
[19 42]
[20 41]
[21 40]
[23 37]
[24 36]
[26 35]
[27 34]
[55 104]
[56 103]
[57 102]
[58 101]
[59 100]
[60 99]
[61 98]
[62 74]
[63 73]
[64 72]
[65 71]
[66 70]
[75 87]
[76 86]
[77 85]
[78 84]
[105 223]
[107 221]
[108 220]
[109 219]
[110 218]
[112 216]
[113 215]
[114 214]
[115 213]
[116 212]
[117 211]
[118 210]
[119 209]
[120 208]
[121 207]
[122 206]
[123 205]
[124 203]
[125 202]
[126 201]
[132 151]
[133 150]
[134 149]
[135 147]
[136 146]
[137 145]
[138 144]
[174 200]
[175 199]
[176 198]
[178 197]
[181 194]
[182 193]
[184 192]
[185 191]
[186 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
