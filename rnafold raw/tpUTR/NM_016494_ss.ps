%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 06:02:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGUUGGGGCUGAGUGCUGGCCCUCUGCGUCUUCCUUAUUAACCUUGAAUCCUCAUUAAAGGUUUCUUUACCCACCCUGAGGCUGUAUUGAUCACAGACCUGGCCAGGGGCUCUGCAUCCUCCAUCAGGUCUCUACUUCUGUUGGGGAAGGUGAUCCUAAAUCGCAGAAGGCACCAGGCUGCGGUUUUCCUCCCUGCUGGCC\
) } def
/len { sequence length } bind def

/coor [
[145.46202087 712.82696533]
[143.39971924 697.96942139]
[141.33741760 683.11187744]
[139.27513123 668.25433350]
[137.21282959 653.39678955]
[134.00769043 649.85028076]
[132.99946594 644.25128174]
[135.32221985 638.05310059]
[133.71620178 623.13928223]
[132.11018372 608.22552490]
[130.50415039 593.31176758]
[128.89813232 578.39794922]
[127.29210663 563.48419189]
[125.68608093 548.57043457]
[123.96582794 533.66937256]
[122.13145447 518.78198242]
[120.29707336 503.89456177]
[116.35717773 497.63742065]
[118.55046082 488.76519775]
[116.94443512 473.85140991]
[115.33840942 458.93762207]
[113.50403595 444.05023193]
[111.44173431 429.19265747]
[109.37943268 414.33511353]
[99.96577454 402.79248047]
[105.73226166 388.05957031]
[103.66996002 373.20202637]
[101.60765839 358.34448242]
[99.54535675 343.48690796]
[97.48306274 328.62936401]
[95.42076111 313.77182007]
[81.58863831 312.46786499]
[68.39021301 308.10351562]
[56.49406052 300.89617920]
[46.50362396 291.20733643]
[38.92658615 279.52447510]
[34.14908600 266.43649292]
[32.41602707 252.60409546]
[33.81853867 238.72639465]
[38.28918076 225.50559998]
[45.60518265 213.61140442]
[55.39953995 203.64720154]
[67.17942810 196.11936951]
[80.35099030 191.41154480]
[78.74496460 176.49777222]
[77.13893890 161.58398438]
[75.53291321 146.67021179]
[73.92689514 131.75643921]
[63.94700623 120.55814362]
[49.31581497 117.25234985]
[34.68462372 113.94656372]
[19.51856804 118.45225525]
[8.80941677 108.10028076]
[-5.82177401 104.79449463]
[-20.45296478 101.48870087]
[-33.68090820 110.13722992]
[-49.13257599 106.81736755]
[-57.64076614 93.49872589]
[-54.15772247 78.08301544]
[-40.74987030 69.71611786]
[-25.37185287 73.36194611]
[-17.14717484 86.85751343]
[-2.51598334 90.16329956]
[12.11520767 93.46909332]
[26.23474312 88.72694397]
[37.99041367 99.31536865]
[52.62160492 102.62116241]
[67.25279999 105.92694855]
[72.45353699 100.52304077]
[61.19834137 90.60736847]
[46.76757812 86.51432800]
[42.85223389 72.03433228]
[53.25390244 61.22668457]
[67.87312317 64.58501434]
[72.51552582 78.84807587]
[82.85502625 89.71521759]
[88.05577087 84.31130219]
[84.19199371 69.81746674]
[80.32821655 55.32363510]
[76.46443176 40.82980347]
[72.60065460 26.33596992]
[68.40475464 11.93477440]
[63.87894440 -2.36617112]
[59.35313416 -16.66711617]
[54.71788025 -30.93296432]
[49.97344971 -45.16287613]
[45.22902298 -59.39278793]
[40.48459244 -73.62270355]
[25.87570190 -79.20072174]
[18.31533241 -92.88921356]
[21.37326241 -108.22489166]
[33.60562897 -117.96672058]
[49.23668671 -117.51490021]
[60.88592148 -107.08277130]
[63.05292511 -91.59606934]
[54.71450424 -78.36712646]
[59.45893478 -64.13721466]
[64.20336151 -49.90730667]
[68.94779205 -35.67739487]
[74.04809570 -30.32373047]
[73.65408325 -21.19292641]
[78.17988586 -6.89198017]
[82.70569611 7.40896559]
[85.65451050 9.35022736]
[87.80762482 12.81850147]
[88.45657349 17.42333031]
[87.09449005 22.47219086]
[90.95826721 36.96602249]
[94.82204437 51.45985794]
[98.68582916 65.95368958]
[102.54960632 80.44752502]
[117.52143097 81.36643982]
[123.12868500 67.45390320]
[123.44162750 50.50284195]
[139.81686401 46.11103439]
[148.57015991 60.63055038]
[137.04122925 73.06115723]
[131.43397522 86.97369385]
[137.18341064 91.78971100]
[151.27430725 86.64711761]
[148.68228149 101.42173767]
[154.43171692 106.23774719]
[167.14566040 98.27813721]
[179.85960388 90.31851959]
[192.57356262 82.35890198]
[205.28750610 74.39928436]
[212.87875366 60.51823807]
[227.77207947 60.32273483]
[240.48602295 52.36311722]
[253.19998169 44.40349960]
[265.91394043 36.44388580]
[266.84878540 20.95499611]
[276.73519897 8.99513626]
[291.77166748 5.16311455]
[306.17633057 10.93242264]
[314.41033936 24.08464241]
[313.30752563 39.56248093]
[303.29193115 51.41438675]
[288.21478271 55.08306503]
[273.87353516 49.15783310]
[261.15960693 57.11745071]
[248.44564819 65.07706451]
[235.73170471 73.03668213]
[229.04983521 86.34840393]
[213.24713135 87.11323547]
[200.53317261 95.07285309]
[187.81922913 103.03247070]
[175.10527039 110.99208069]
[162.39132690 118.95169830]
[88.84066772 130.15042114]
[90.44669342 145.06419373]
[92.05271149 159.97796631]
[93.65873718 174.89173889]
[95.26476288 189.80551147]
[111.26409149 192.16592407]
[126.10413361 198.56719971]
[138.78370667 208.57144165]
[148.44894409 221.49792480]
[154.45077515 236.46929932]
[156.38851929 252.47128296]
[154.13667297 268.42126465]
[147.85295105 283.24160767]
[137.96730042 295.93240356]
[125.15249634 305.63900757]
[110.27831268 311.70950317]
[112.34061432 326.56707764]
[114.40291595 341.42462158]
[116.46521759 356.28216553]
[118.52751160 371.13973999]
[120.58981323 385.99728394]
[130.15098572 398.60263062]
[124.23698425 412.27282715]
[126.29928589 427.13037109]
[128.36158752 441.98791504]
[132.11947632 447.43692017]
[132.50054932 453.11315918]
[130.25218201 457.33160400]
[131.85821533 472.24539185]
[133.46423340 487.15914917]
[135.18449402 502.06018066]
[137.01885986 516.94763184]
[138.85324097 531.83502197]
[143.01039124 539.97412109]
[140.59985352 546.96441650]
[142.20588684 561.87817383]
[143.81190491 576.79193115]
[145.41792297 591.70574951]
[147.02395630 606.61950684]
[148.62997437 621.53326416]
[150.23599243 636.44708252]
[152.07037354 651.33447266]
[154.13267517 666.19201660]
[156.19497681 681.04956055]
[158.25727844 695.90710449]
[160.31958008 710.76470947]
[174.58027649 716.46801758]
[184.06608582 728.54754639]
[186.22541809 743.75390625]
[180.47738647 757.99664307]
[168.36819458 767.44458008]
[153.15515137 769.55621338]
[138.93049622 763.76354980]
[129.52058411 751.62481689]
[127.45663452 736.40521240]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 195]
[2 194]
[3 193]
[4 192]
[5 191]
[8 190]
[9 189]
[10 188]
[11 187]
[12 186]
[13 185]
[14 184]
[15 182]
[16 181]
[17 180]
[19 179]
[20 178]
[21 177]
[22 174]
[23 173]
[24 172]
[26 170]
[27 169]
[28 168]
[29 167]
[30 166]
[31 165]
[44 154]
[45 153]
[46 152]
[47 151]
[48 150]
[49 68]
[50 67]
[51 66]
[53 64]
[54 63]
[55 62]
[77 111]
[78 110]
[79 109]
[80 108]
[81 107]
[82 103]
[83 102]
[84 101]
[85 99]
[86 98]
[87 97]
[88 96]
[112 118]
[113 117]
[122 149]
[123 148]
[124 147]
[125 146]
[126 145]
[128 143]
[129 142]
[130 141]
[131 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
