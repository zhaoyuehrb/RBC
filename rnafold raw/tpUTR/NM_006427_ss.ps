%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 20:08:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUGGCUCAAGCCGGCUGCCUUCACCGGGAGCCACGCCGUGCAUGGCAGCCUUCCCUGGACGAGCGCUCGGUGUUCACACUGAACUGUGGGGUCGACGGGAGGGGUGCCUUUUACAUGUUCUAUUUUGUAUCCUAAUGACAGAAUGAAUAAACCUCUUUAUAUUUGCACAAGA\
) } def
/len { sequence length } bind def

/coor [
[50.36638641 179.82698059]
[40.49730301 191.12304688]
[30.62822342 202.41912842]
[20.86093140 213.80332947]
[11.19621754 225.27473450]
[1.53150237 236.74613953]
[-8.13321304 248.21755981]
[-17.79792786 259.68896484]
[-27.46264267 271.16036987]
[-28.38586807 276.36596680]
[-30.97128296 280.28790283]
[-34.44264603 282.50537109]
[-37.96960068 282.97091675]
[-48.23780823 293.90542603]
[-58.50601196 304.83996582]
[-68.77422333 315.77450562]
[-72.38423920 324.20257568]
[-79.32624817 326.81103516]
[-89.78908539 337.55947876]
[-93.29315948 353.57989502]
[-108.99925232 358.29696655]
[-120.75026703 346.85821533]
[-116.45777893 331.03079224]
[-100.53752899 327.09664917]
[-90.07469177 316.34820557]
[-79.70874786 305.50628662]
[-69.44054413 294.57174683]
[-59.17233658 283.63723755]
[-48.90412903 272.70269775]
[-38.93405533 261.49566650]
[-29.26933861 250.02424622]
[-19.60462379 238.55284119]
[-9.93990898 227.08143616]
[-0.27519435 215.61001587]
[9.38952065 204.13861084]
[11.30097198 196.97328186]
[19.33215141 192.55003357]
[29.20123291 181.25396729]
[39.07031250 169.95790100]
[48.42266083 158.23042297]
[57.23944092 146.09516907]
[66.05622101 133.95991516]
[74.87299347 121.82466125]
[83.68977356 109.68940735]
[80.80879211 97.28618622]
[86.45346069 85.56893158]
[81.43578339 71.43305969]
[76.41810608 57.29718781]
[71.40042877 43.16131592]
[59.49254227 32.74436569]
[62.52668381 18.16207504]
[57.50900650 4.02620220]
[52.49132919 -10.10967064]
[47.47365189 -24.24554443]
[42.45597458 -38.38141632]
[37.43829346 -52.51729202]
[32.42061615 -66.65316010]
[27.27626038 -80.74343109]
[15.18329620 -90.94493866]
[17.95518303 -105.57934570]
[12.68456173 -119.62287140]
[7.41393900 -133.66639709]
[-5.42687559 -137.79774475]
[-13.41845131 -148.42185974]
[-13.81529236 -161.51530457]
[-6.69659424 -172.27886963]
[-11.71427155 -186.41473389]
[-16.73195076 -200.55061340]
[-22.12841225 -214.54626465]
[-27.89974785 -228.39154053]
[-33.67108154 -242.23681641]
[-39.44241714 -256.08209229]
[-45.21375275 -269.92736816]
[-50.98508453 -283.77264404]
[-64.33910370 -293.29116821]
[-62.50370789 -309.58728027]
[-47.36699295 -315.89694214]
[-34.50031281 -305.72930908]
[-37.13980865 -289.54397583]
[-31.36847496 -275.69869995]
[-25.59713936 -261.85342407]
[-19.82580566 -248.00814819]
[-14.05447006 -234.16287231]
[-8.28313541 -220.31759644]
[-5.14465427 -218.64247131]
[-2.67381239 -215.34663391]
[-1.63131630 -210.76634216]
[-2.59607673 -205.56828308]
[2.42160106 -191.43241882]
[7.43927908 -177.29653931]
[22.90922165 -170.73815918]
[28.98405266 -154.71073914]
[21.45746231 -138.93701172]
[26.72808456 -124.89349365]
[31.99870682 -110.84996796]
[43.71467972 -101.65294647]
[41.31978226 -86.01405334]
[46.63172150 -80.83922577]
[46.55649185 -71.67084503]
[51.57416916 -57.53496933]
[56.59184647 -43.39909363]
[61.60952377 -29.26322174]
[66.62720490 -15.12734890]
[71.64488220 -0.99147570]
[76.66255951 13.14439774]
[88.21154785 22.55025291]
[85.53630066 38.14363480]
[90.55397797 52.27951050]
[95.57165527 66.41538239]
[100.58933258 80.55125427]
[99.66506958 65.57975769]
[108.09867859 53.17515564]
[122.36083984 48.52856827]
[136.48306274 53.58452225]
[144.55543518 66.22718048]
[143.19979858 81.16580200]
[132.98345947 92.14880371]
[118.18054199 94.57977295]
[133.07853699 96.32612610]
[147.97653198 98.07247162]
[162.87452698 99.81881714]
[177.77252197 101.56516266]
[186.69430542 99.45166016]
[192.92140198 103.47891235]
[207.78564453 105.49240875]
[222.64988708 107.50590515]
[237.51414490 109.51940918]
[252.37838745 111.53290558]
[267.24264526 113.54640198]
[282.10687256 115.55990601]
[292.03570557 103.75218964]
[306.77883911 99.20866394]
[321.63180542 103.37915802]
[331.85507202 114.93286896]
[334.18643188 130.18305969]
[327.88195801 144.26344299]
[314.95339966 152.68103027]
[299.52618408 152.74978638]
[286.52310181 144.44778442]
[280.09338379 130.42414856]
[265.22912598 128.41064453]
[250.36488342 126.39715576]
[235.50064087 124.38365173]
[220.63639832 122.37015533]
[205.77214050 120.35665894]
[190.90789795 118.34315491]
[176.02618408 116.46315765]
[161.12818909 114.71681213]
[146.23019409 112.97046661]
[131.33219910 111.22412109]
[116.43419647 109.47777557]
[128.67117310 118.15281677]
[142.92167664 122.83506012]
[154.20538330 132.71826172]
[160.72438049 146.22761536]
[161.43989563 161.21054077]
[156.23793030 175.27964783]
[145.94737244 186.19314575]
[132.20793152 192.21206665]
[117.20883179 192.37736511]
[103.34007263 186.66268921]
[92.81150055 175.97863770]
[87.30074310 162.02758789]
[87.68589783 147.03253174]
[93.90553284 133.38285828]
[95.82502747 118.50618744]
[87.00825500 130.64143372]
[78.19147491 142.77668762]
[69.37469482 154.91194153]
[60.55791473 167.04721069]
[75.55084229 167.50773621]
[84.68550110 179.40556335]
[81.25782013 194.00866699]
[67.78343201 200.59963989]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 39]
[2 38]
[3 37]
[4 35]
[5 34]
[6 33]
[7 32]
[8 31]
[9 30]
[13 29]
[14 28]
[15 27]
[16 26]
[18 25]
[19 24]
[40 170]
[41 169]
[42 168]
[43 167]
[44 166]
[46 110]
[47 109]
[48 108]
[49 107]
[51 105]
[52 104]
[53 103]
[54 102]
[55 101]
[56 100]
[57 99]
[58 97]
[60 95]
[61 94]
[62 93]
[66 90]
[67 89]
[68 88]
[69 84]
[70 83]
[71 82]
[72 81]
[73 80]
[74 79]
[118 151]
[119 150]
[120 149]
[121 148]
[122 147]
[124 146]
[125 145]
[126 144]
[127 143]
[128 142]
[129 141]
[130 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
