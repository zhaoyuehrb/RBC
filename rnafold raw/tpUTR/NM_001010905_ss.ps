%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 21:41:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACAUUUAACUUCAAACUUCAGGAAAUGAUUAAUGAAUUAAAAAUGAAAAACUCGAACUUGACAAUCAGUAAUUUCAAAAAAUUAAUGUCAUCAUGACCAUGUAGUUUAUUCUUUCUGAUAUUUUUGAUUUAUGCUUAUUUGUUAAGAUCUUGUACAUGUAUUAAAAACUUAAAUUAAAUGCAUUCAAGUUAAAAU\
) } def
/len { sequence length } bind def

/coor [
[95.19380951 290.99609375]
[80.68695068 285.15786743]
[73.37243652 271.33642578]
[76.70397186 256.05786133]
[89.10849762 246.53620911]
[89.58683014 231.54383850]
[90.06516266 216.55146790]
[90.54349518 201.55909729]
[91.02182770 186.56672668]
[91.50016785 171.57435608]
[91.97850037 156.58198547]
[92.45683289 141.58961487]
[86.03253174 137.71942139]
[82.64125061 152.33103943]
[67.69680786 153.62078857]
[61.85226059 139.80625916]
[73.18392944 129.97904968]
[66.75962830 126.10886383]
[53.72956085 133.53970337]
[40.69949722 140.97053528]
[27.66943169 148.40138245]
[28.32033539 162.38047791]
[22.90824509 175.21401978]
[12.54274940 184.41769409]
[-0.71381128 188.23661804]
[-14.25652981 185.97973633]
[-25.44977379 178.14411926]
[-38.59667969 185.36622620]
[-51.74358368 192.58834839]
[-64.89048767 199.81045532]
[-78.03739166 207.03256226]
[-86.06970215 221.32991028]
[-102.46866608 221.25181580]
[-110.36443329 206.87860107]
[-101.63451385 192.99623108]
[-85.25950623 193.88566589]
[-72.11260223 186.66355896]
[-58.96569443 179.44143677]
[-45.81879044 172.21932983]
[-32.67188644 164.99720764]
[-32.72526932 148.84364319]
[-24.58102608 134.78471375]
[-10.37845707 126.70216370]
[6.05578804 126.88256073]
[20.23859024 135.37132263]
[33.26865387 127.94047546]
[46.29872131 120.50963593]
[59.32878494 113.07879639]
[62.31886673 89.15152740]
[77.02743530 72.67193604]
[96.54386139 67.99575806]
[98.45233154 53.11766434]
[89.06280518 40.68888855]
[91.21021271 25.62757111]
[103.11701965 16.75268555]
[105.02548981 1.87458920]
[99.10688782 -12.79785824]
[108.40061951 -24.43726730]
[110.30909729 -39.31536484]
[112.21756744 -54.19345856]
[114.12604523 -69.07155609]
[116.03451538 -83.94965363]
[117.94298553 -98.82774353]
[119.85146332 -113.70584106]
[121.75993347 -128.58393860]
[110.81379700 -142.22242737]
[113.06798553 -159.22387695]
[126.64489746 -169.14009094]
[128.31587219 -184.04672241]
[129.98684692 -198.95335388]
[131.65782166 -213.86000061]
[133.20989990 -228.77947998]
[123.42880249 -240.90251160]
[125.09482574 -256.02465820]
[136.71257019 -265.27471924]
[138.14561462 -280.20611572]
[139.57867432 -295.13751221]
[141.01173401 -310.06887817]
[142.44479370 -325.00027466]
[143.87783813 -339.93167114]
[130.78936768 -332.60418701]
[116.83891296 -338.11645508]
[112.29409790 -352.41134644]
[120.49993134 -364.96780396]
[135.41687012 -366.54415894]
[146.06646729 -355.97882080]
[148.68428040 -370.74862671]
[151.30209351 -385.51843262]
[153.91990662 -400.28823853]
[156.53770447 -415.05804443]
[159.15551758 -429.82785034]
[147.51365662 -439.74822998]
[142.43399048 -454.06933594]
[145.18634033 -468.91152954]
[154.93305969 -480.30703735]
[168.98043823 -485.26049805]
[171.59825134 -500.03030396]
[169.69975281 -506.38281250]
[171.09329224 -511.90734863]
[174.54223633 -515.22613525]
[177.62971497 -529.90496826]
[180.71717834 -544.58374023]
[173.19042969 -558.75158691]
[179.70637512 -573.41180420]
[195.26652527 -577.31835938]
[207.93447876 -567.47442627]
[207.99246216 -551.43151855]
[195.39599609 -541.49627686]
[192.30851746 -526.81744385]
[189.22105408 -512.13867188]
[186.36804199 -497.41247559]
[183.75024414 -482.64266968]
[195.23950195 -473.16308594]
[200.47604370 -459.11196899]
[197.95968628 -444.22793579]
[188.26750183 -432.52499390]
[173.92532349 -427.21002197]
[171.30751038 -412.44021606]
[168.68969727 -397.67041016]
[166.07189941 -382.90060425]
[163.45408630 -368.13082886]
[160.83627319 -353.36102295]
[158.80923462 -338.49859619]
[157.37617493 -323.56723022]
[155.94311523 -308.63583374]
[154.51007080 -293.70443726]
[153.07701111 -278.77304077]
[151.64395142 -263.84167480]
[161.29025269 -252.55076599]
[160.04962158 -237.38780212]
[148.14128113 -227.34643555]
[150.63455200 -220.37977600]
[146.56446838 -212.18902588]
[144.89347839 -197.28237915]
[143.22250366 -182.37574768]
[141.55152893 -167.46910095]
[150.92465210 -158.61772156]
[153.52352905 -145.79174805]
[148.17875671 -133.63339233]
[136.63803101 -126.67546082]
[134.72955322 -111.79737091]
[132.82109070 -96.91927338]
[130.91261292 -82.04117584]
[129.00413513 -67.16307831]
[127.09566498 -52.28498459]
[125.18718719 -37.40689087]
[123.27871704 -22.52879333]
[129.33383179 -8.92052746]
[119.90358734 3.78306270]
[117.99511719 18.66115761]
[127.27645111 30.25393295]
[125.55293274 45.36962509]
[113.33042908 55.02613831]
[111.42195892 69.90423584]
[125.78319550 80.72714233]
[132.09805298 97.56469727]
[128.39581299 115.16225433]
[139.61737061 125.11597443]
[150.83892822 135.06970215]
[162.06048584 145.02342224]
[173.28204346 154.97715759]
[184.50360107 164.93087769]
[195.72515869 174.88459778]
[211.18345642 178.25382996]
[215.57044983 192.48773193]
[226.79200745 202.44145203]
[241.91601562 198.97102356]
[256.17825317 205.08401489]
[264.09454346 218.42985535]
[262.62097168 233.87680054]
[252.32412720 245.48518372]
[237.16336060 248.79135132]
[222.96829224 242.52400208]
[215.19721985 229.09306335]
[216.83828735 213.66300964]
[205.61672974 203.70928955]
[190.96107483 201.05200195]
[185.77143860 186.10615540]
[174.54988098 176.15243530]
[163.32832336 166.19871521]
[152.10676575 156.24497986]
[140.88520813 146.29125977]
[129.66365051 136.33753967]
[118.44209290 126.38381195]
[116.01295471 131.90841675]
[112.34172821 137.21879578]
[107.44920349 142.06794739]
[106.97087097 157.06031799]
[106.49253845 172.05268860]
[106.01420593 187.04505920]
[105.53586578 202.03742981]
[105.05753326 217.02980042]
[104.57920074 232.02217102]
[104.10086823 247.01454163]
[115.87319946 257.30755615]
[118.22402191 272.76742554]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 194]
[6 193]
[7 192]
[8 191]
[9 190]
[10 189]
[11 188]
[12 187]
[18 48]
[19 47]
[20 46]
[21 45]
[27 40]
[28 39]
[29 38]
[30 37]
[31 36]
[51 154]
[52 153]
[55 150]
[56 149]
[58 147]
[59 146]
[60 145]
[61 144]
[62 143]
[63 142]
[64 141]
[65 140]
[68 136]
[69 135]
[70 134]
[71 133]
[72 131]
[75 128]
[76 127]
[77 126]
[78 125]
[79 124]
[80 123]
[86 122]
[87 121]
[88 120]
[89 119]
[90 118]
[91 117]
[96 112]
[97 111]
[100 110]
[101 109]
[102 108]
[157 184]
[158 183]
[159 182]
[160 181]
[161 180]
[162 179]
[163 178]
[165 176]
[166 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
