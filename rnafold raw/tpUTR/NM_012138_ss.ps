%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 01:04:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCGCCCACCUCCGACACCCAGUGGGCGCCUUGGCUGGUGCGGCUGCUGGUCCAGAUGGAGGAAACCAGUGACUUUAUGGGGCUGAGCUAGUAGGGAAGCCCCUGGAAAGAUGCUGCGUUCCGAACCUGUGCCUAAUACACGCAAGGGCGCUGUCCCGCCCAACCCCGCCUUUAAACGCCACAAAUAAAGAGCAUUGUUACCGCCA\
) } def
/len { sequence length } bind def

/coor [
[-10.81236649 359.06231689]
[-17.31857872 370.96923828]
[-28.76665306 378.04882812]
[-42.10955048 378.54260254]
[-49.28020096 391.71765137]
[-56.45085526 404.89270020]
[-63.62150574 418.06771851]
[-70.79215240 431.24276733]
[-77.96280670 444.41781616]
[-85.13346100 457.59286499]
[-76.17897034 469.95327759]
[-73.48268127 484.97634888]
[-77.57995605 499.67926025]
[-87.65726471 511.14270020]
[-101.71376038 517.09057617]
[-116.95851135 516.34204102]
[-130.36465454 509.04559326]
[-139.27040100 496.65002441]
[-141.90751648 481.61645508]
[-137.75236511 466.92980957]
[-127.62999725 455.50613403]
[-113.55018616 449.61361694]
[-98.30850220 450.42221069]
[-91.13784790 437.24716187]
[-83.96720123 424.07211304]
[-76.79654694 410.89709473]
[-69.62590027 397.72204590]
[-62.45524597 384.54699707]
[-55.28459549 371.37194824]
[-62.80798340 356.78289795]
[-60.12703705 340.42016602]
[-48.10270691 328.76342773]
[-31.33516884 326.54803467]
[-24.36432266 313.26620483]
[-17.39347458 299.98434448]
[-10.42262650 286.70251465]
[-10.09758759 279.31723022]
[-3.24487853 273.27389526]
[3.92577291 260.09884644]
[11.09642410 246.92381287]
[18.26707458 233.74876404]
[25.33802605 220.51994324]
[32.30887222 207.23811340]
[39.27972031 193.95626831]
[39.60475922 186.57099915]
[46.45746994 180.52764893]
[53.62812042 167.35260010]
[60.79877090 154.17755127]
[67.96942139 141.00251770]
[83.15703583 84.72791290]
[77.83796692 70.70266724]
[72.51889038 56.67742157]
[60.39078140 46.51772308]
[63.11212921 31.87383080]
[57.79305649 17.84858894]
[52.47398376 3.82334447]
[38.56808853 2.29869008]
[26.73248291 -5.03411674]
[19.24725723 -16.69536591]
[17.52541733 -30.37817192]
[21.84646988 -43.40475082]
[31.31289673 -53.25046158]
[26.20625687 -67.35443878]
[21.09961700 -81.45841980]
[15.99297714 -95.56240082]
[1.95901597 -102.32151794]
[-3.01892662 -116.69770813]
[3.51134777 -130.03529358]
[-1.59529233 -144.13926697]
[-6.70193243 -158.24324036]
[-11.80857277 -172.34722900]
[-25.84253311 -179.10635376]
[-30.82047653 -193.48252869]
[-24.29020119 -206.82011414]
[-29.39684105 -220.92408752]
[-34.50348282 -235.02807617]
[-39.61012268 -249.13204956]
[-55.58456039 -256.25927734]
[-61.34953690 -272.41610718]
[-53.79814911 -287.44207764]
[-59.11722183 -301.46731567]
[-64.43629456 -315.49255371]
[-69.75537109 -329.51779175]
[-75.07444000 -343.54302979]
[-80.39351654 -357.56829834]
[-93.23185730 -361.64620972]
[-101.25968170 -372.21981812]
[-101.72418976 -385.29278564]
[-94.67972565 -396.08352661]
[-99.78636169 -410.18750000]
[-112.67279816 -420.33007812]
[-110.06479645 -436.52050781]
[-94.64524841 -442.10348511]
[-82.27645874 -431.33572388]
[-85.68238068 -415.29415894]
[-80.57574463 -401.19015503]
[-65.05540466 -394.71542358]
[-58.89772415 -378.70416260]
[-66.36827087 -362.88735962]
[-61.04919815 -348.86212158]
[-55.73012543 -334.83688354]
[-50.41105270 -320.81161499]
[-45.09197998 -306.78637695]
[-39.77290344 -292.76113892]
[-27.39731407 -289.16818237]
[-19.22941971 -278.95037842]
[-18.42677498 -265.69885254]
[-25.50614166 -254.23869324]
[-20.39950180 -240.13471985]
[-15.29286194 -226.03073120]
[-10.18622208 -211.92675781]
[3.36921024 -205.86161804]
[8.74898624 -191.63093567]
[2.29540682 -177.45387268]
[7.40204668 -163.34988403]
[12.50868702 -149.24591064]
[17.61532593 -135.14192200]
[31.17075920 -129.07679749]
[36.55053329 -114.84609985]
[30.09695625 -100.66903687]
[35.20359421 -86.56506348]
[40.31023407 -72.46108246]
[45.41687775 -58.35710144]
[61.38911438 -55.91471481]
[74.02336884 -45.69237518]
[79.81224823 -30.40611076]
[77.08747101 -14.19392776]
[66.49922943 -1.49572897]
[71.81829834 12.52951431]
[77.13737488 26.55475807]
[88.88502502 35.71128082]
[86.54413605 51.35834885]
[91.86320496 65.38359070]
[97.18228149 79.40883636]
[99.23841095 64.55043030]
[96.55931091 49.79162216]
[100.80255127 35.40430069]
[111.06182861 24.46140099]
[125.14591980 19.30016518]
[140.04666138 21.02296257]
[152.58145142 29.26182938]
[160.07305908 42.25705719]
[160.92135620 57.23305130]
[154.94517517 70.99114990]
[143.42094421 80.59281921]
[128.80870056 83.98726654]
[115.98421478 91.76753235]
[130.96881104 91.08808899]
[145.95341492 90.40865326]
[160.93803406 89.72920990]
[175.92263794 89.04977417]
[186.39387512 77.21218109]
[202.17349243 76.32942963]
[213.89971924 86.92523956]
[214.61558533 102.71331024]
[203.89639282 114.32685089]
[188.10163879 114.87576294]
[176.60206604 104.03437805]
[161.61746216 104.71382141]
[146.63285828 105.39325714]
[131.64825439 106.07269287]
[116.66365051 106.75213623]
[114.05715179 113.78463745]
[128.12216187 118.99764252]
[142.18717957 124.21065521]
[156.25210571 129.42387390]
[151.03866577 143.48872375]
[136.97416687 138.27566528]
[122.90915680 133.06265259]
[108.84414673 127.84965515]
[106.23764038 134.88215637]
[117.15975952 145.16357422]
[128.08186340 155.44497681]
[139.00398254 165.72639465]
[149.92610168 176.00781250]
[164.37345886 170.95484924]
[179.51248169 173.20619202]
[191.86433411 182.24446106]
[198.59065247 195.99273682]
[198.14576721 211.29177856]
[190.63191223 224.62597656]
[177.77572632 232.93121338]
[162.53146362 234.29902649]
[148.40213013 228.41508484]
[138.63456726 216.63148499]
[135.47326660 201.65600586]
[139.64468384 186.92991638]
[128.72257996 176.64851379]
[117.80046082 166.36709595]
[106.87834167 156.08567810]
[95.95623016 145.80427551]
[81.14447021 148.17317200]
[73.97381592 161.34820557]
[66.80316162 174.52325439]
[59.63251114 187.69828796]
[52.56156158 200.92710876]
[45.59071350 214.20895386]
[38.61986542 227.49079895]
[37.40216827 236.54611206]
[31.44211769 240.91941833]
[24.27146721 254.09446716]
[17.10081673 267.26950073]
[9.93016434 280.44454956]
[2.85921359 293.67337036]
[-4.11163378 306.95520020]
[-11.08248138 320.23706055]
[-18.05332947 333.51889038]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 29]
[5 28]
[6 27]
[7 26]
[8 25]
[9 24]
[10 23]
[33 207]
[34 206]
[35 205]
[36 204]
[38 203]
[39 202]
[40 201]
[41 200]
[42 198]
[43 197]
[44 196]
[46 195]
[47 194]
[48 193]
[49 192]
[50 134]
[51 133]
[52 132]
[54 130]
[55 129]
[56 128]
[62 123]
[63 122]
[64 121]
[65 120]
[68 117]
[69 116]
[70 115]
[71 114]
[74 111]
[75 110]
[76 109]
[77 108]
[80 104]
[81 103]
[82 102]
[83 101]
[84 100]
[85 99]
[89 96]
[90 95]
[147 162]
[148 161]
[149 160]
[150 159]
[151 158]
[171 191]
[172 190]
[173 189]
[174 188]
[175 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
