%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 16:49:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCUGGCUUCCUCAGCCUCUUCUCUUUAGGCCCAGCUGCUGGGCAAGGAAUUCCAGUGCCUCCUACGGGGGCAGCACACUUAGAUAUUCCUGGACAUCCAGAUAGCUCACAUGUGCUGACCACACUUCAGGCUCUGGACUGGAGCUCUCUGGCAUGGGGGUGGGGCCUCAGAUGCUGGGGCCCAGUCUGCCCCAUCUUCAUUCCUGCACCUUAAACCUGUACAGUCAUUUUUCUACUGACUUAAUAAACAGCCG\
AGCUGUCCCUUGAUGCUGA\
) } def
/len { sequence length } bind def

/coor [
[113.67018890 422.21398926]
[107.98935699 436.09661865]
[102.30852509 449.97927856]
[96.62769318 463.86193848]
[90.94686127 477.74459839]
[86.06784058 491.92892456]
[82.00654602 506.36865234]
[77.94524384 520.80841064]
[73.88394928 535.24810791]
[80.44729614 549.88720703]
[72.96643066 564.07928467]
[57.18003845 566.93750000]
[45.19808197 556.26922607]
[46.21209717 540.25823975]
[59.44421768 531.18682861]
[63.50551605 516.74707031]
[67.56681061 502.30737305]
[71.62811279 487.86764526]
[60.06476974 497.42218018]
[45.28618240 499.98992920]
[31.17767143 494.89581299]
[21.44840050 483.47909546]
[18.65621758 468.74127197]
[23.53519440 454.55691528]
[34.80263519 444.65518188]
[49.49630356 441.63919067]
[63.75320053 446.30191040]
[73.82514954 457.41748047]
[77.06420898 472.06378174]
[82.74504089 458.18112183]
[88.42586517 444.29846191]
[94.10669708 430.41580200]
[99.78752899 416.53314209]
[105.30939484 402.58648682]
[110.67158508 388.57766724]
[116.03376770 374.56887817]
[121.39595032 360.56005859]
[96.75296783 339.17379761]
[85.42590332 310.37121582]
[88.56155396 281.26782227]
[103.91751099 258.33984375]
[126.70294189 245.98318481]
[122.97259521 231.45443726]
[119.15931702 216.94723511]
[115.26324463 202.46205139]
[111.36716461 187.97686768]
[106.61325836 182.35531616]
[107.51033020 173.30393982]
[103.77997589 158.77519226]
[100.04962921 144.24644470]
[96.31928253 129.71769714]
[92.58893585 115.18894958]
[81.30898285 105.30144501]
[66.41676331 103.50648499]
[51.52455139 101.71151733]
[36.63233566 99.91655731]
[21.74011803 98.12158966]
[6.74623489 97.69325256]
[-8.22416592 98.63510895]
[-23.19456673 99.57696533]
[-38.16496658 100.51882172]
[-53.13536835 101.46067810]
[-68.10576630 102.40254211]
[-83.07617188 103.34439850]
[-98.50439453 110.37335205]
[-109.52961731 97.49387360]
[-100.20555878 83.33413696]
[-84.01802826 88.37399292]
[-69.04763031 87.43213654]
[-54.07722473 86.49028015]
[-39.10682678 85.54842377]
[-24.13642502 84.60656738]
[-9.16602325 83.66470337]
[5.80437756 82.72284698]
[-7.97608709 76.79842377]
[-18.93559456 66.55688477]
[-25.77871895 53.20878601]
[-27.69659233 38.33190155]
[-24.46251869 23.68469048]
[-16.45877075 10.99847603]
[-4.63140345 1.77278519]
[9.62157536 -2.90189290]
[24.61544228 -2.47300529]
[38.57790375 3.00875258]
[49.85857773 12.89542961]
[57.12407303 26.01840782]
[59.51560211 40.82653427]
[56.75047684 55.56946945]
[49.15554428 68.50457764]
[37.62853241 78.10290527]
[23.53508186 83.22937775]
[38.42729950 85.02433777]
[53.31951523 86.81930542]
[68.21173096 88.61426544]
[83.10395050 90.40923309]
[92.99144745 79.12928009]
[89.26110077 64.60053253]
[85.53075409 50.07178497]
[81.71747589 35.56458282]
[77.82140350 21.07939720]
[73.92532349 6.59421253]
[70.02924347 -7.89097214]
[66.13317108 -22.37615776]
[55.07698441 -33.69301987]
[59.24296951 -47.99315262]
[55.34689331 -62.47833633]
[51.45081711 -76.96352386]
[47.55473709 -91.44870758]
[43.65866089 -105.93389130]
[38.42668152 -113.37422180]
[39.80182266 -120.60682678]
[36.07147598 -135.13557434]
[30.92483521 -142.63517761]
[32.38251114 -149.85160828]
[28.81837654 -164.42201233]
[18.02362251 -175.98851013]
[22.51522255 -190.18974304]
[11.72046757 -201.75624084]
[16.21206665 -215.95745850]
[12.64793396 -230.52787781]
[9.00063419 -245.07769775]
[5.27028608 -259.60644531]
[-9.20615578 -265.19323730]
[-17.60572052 -278.24032593]
[-16.69860649 -293.73086548]
[-6.83361340 -305.70843506]
[8.19596386 -309.56735229]
[22.61094856 -303.82385254]
[30.86848259 -290.68640137]
[29.79337883 -275.20660400]
[19.79903412 -263.33679199]
[23.52938271 -248.80804443]
[28.21876144 -243.13253784]
[27.21834755 -234.09201050]
[30.78248024 -219.52159119]
[41.32230377 -208.99726868]
[37.08563614 -193.75387573]
[47.62545776 -183.22955322]
[43.38879013 -167.98614502]
[46.95292282 -153.41574097]
[50.60022354 -138.86592102]
[54.33057022 -124.33717346]
[58.14384460 -109.82997131]
[62.03992462 -95.34478760]
[65.93600464 -80.85959625]
[69.83207703 -66.37441254]
[73.72815704 -51.88922882]
[84.50566864 -41.60844421]
[80.61835480 -26.27223396]
[84.51443481 -11.78704929]
[88.41050720 2.69813538]
[92.30658722 17.18332100]
[96.20265961 31.66850471]
[100.95657349 37.29006577]
[100.05950165 46.34143829]
[103.78984833 60.87018585]
[107.52019501 75.39893341]
[121.78604126 80.03418732]
[133.34375000 70.47282410]
[144.90144348 60.91146851]
[156.45913696 51.35010910]
[168.01684570 41.78874588]
[179.57453918 32.22738647]
[190.91078186 22.40447617]
[202.01965332 12.32514191]
[213.12852478 2.24580741]
[224.23739624 -7.83352709]
[235.34626770 -17.91286087]
[246.45513916 -27.99219704]
[257.56399536 -38.07152939]
[268.67288208 -48.15086365]
[279.78173828 -58.23020172]
[287.44918823 -73.35126495]
[304.10189819 -70.16938019]
[305.65429688 -53.28665543]
[289.86108398 -47.12133026]
[278.75222778 -37.04199600]
[267.64334106 -26.96265984]
[256.53448486 -16.88332558]
[245.42559814 -6.80399084]
[234.31672668 3.27534389]
[223.20785522 13.35467815]
[212.09898376 23.43401337]
[200.99011230 33.51334763]
[200.70234680 36.26580429]
[199.32766724 39.07263565]
[196.83920288 41.52676010]
[193.35517883 43.21849060]
[189.13589478 43.78508759]
[177.57820129 53.34644699]
[166.02050781 62.90780640]
[154.46279907 72.46916199]
[142.90510559 82.03052521]
[131.34741211 91.59188843]
[146.07420349 88.74205780]
[155.30473328 100.56564331]
[154.98103333 115.56214905]
[145.24890137 126.97641754]
[130.49215698 129.66690063]
[117.35681915 122.42034912]
[107.11768341 111.45860291]
[110.84803009 125.98735046]
[114.57837677 140.51609802]
[118.30872345 155.04484558]
[122.03907776 169.57359314]
[125.85234833 184.08079529]
[129.74842834 198.56597900]
[133.64450073 213.05116272]
[138.87648010 220.49148560]
[137.50134277 227.72409058]
[141.23168945 242.25283813]
[149.98007202 240.64768982]
[159.09794617 240.52967834]
[168.32836914 241.97567749]
[177.39941406 245.01756287]
[186.03207397 249.63943481]
[193.94883728 255.77622986]
[200.88229370 263.31390381]
[206.58383179 272.09106445]
[210.83203125 281.90222168]
[213.44044495 292.50244141]
[214.26461792 303.61346436]
[213.20793152 314.93099976]
[210.22630310 326.13296509]
[222.51086426 334.74050903]
[234.79541016 343.34805298]
[247.07995605 351.95559692]
[259.36450195 360.56314087]
[273.60342407 354.62542725]
[288.78814697 357.35095215]
[300.07324219 367.86996460]
[303.85769653 382.82595825]
[298.93389893 397.44650269]
[286.87301636 407.06619263]
[271.52365112 408.61547852]
[257.78369141 401.59997559]
[250.03755188 388.25827026]
[250.75695801 372.84768677]
[238.47241211 364.24014282]
[226.18786621 355.63259888]
[213.90332031 347.02505493]
[201.61875916 338.41751099]
[195.92268372 343.29650879]
[205.68067932 354.68869019]
[215.43849182 366.08102417]
[204.04600525 375.83862305]
[194.28851318 364.44668579]
[184.53051758 353.05450439]
[178.83442688 357.93350220]
[185.45274353 371.39450073]
[192.07106018 384.85546875]
[198.68937683 398.31643677]
[205.30769348 411.77743530]
[217.72222900 423.32366943]
[210.06390381 438.44934082]
[193.40930176 435.27752686]
[191.84672546 418.39575195]
[185.22840881 404.93475342]
[178.61009216 391.47378540]
[171.99177551 378.01281738]
[165.37345886 364.55181885]
[157.88128662 364.89443970]
[158.56648254 379.87878418]
[159.25167847 394.86312866]
[159.93664551 409.84747314]
[144.95228577 410.53219604]
[144.26733398 395.54830933]
[143.58213806 380.56396484]
[142.89694214 365.57962036]
[135.40476990 365.92224121]
[130.04258728 379.93106079]
[124.68039703 393.93988037]
[119.31821442 407.94866943]
[119.97364044 414.46633911]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 33]
[2 32]
[3 31]
[4 30]
[5 29]
[6 18]
[7 17]
[8 16]
[9 15]
[34 273]
[35 272]
[36 271]
[37 270]
[42 211]
[43 210]
[44 208]
[45 207]
[46 206]
[48 205]
[49 204]
[50 203]
[51 202]
[52 201]
[53 95]
[54 94]
[55 93]
[56 92]
[57 91]
[58 74]
[59 73]
[60 72]
[61 71]
[62 70]
[63 69]
[64 68]
[96 157]
[97 156]
[98 155]
[99 153]
[100 152]
[101 151]
[102 150]
[103 149]
[105 147]
[106 146]
[107 145]
[108 144]
[109 143]
[111 142]
[112 141]
[114 140]
[115 139]
[117 137]
[119 135]
[120 134]
[121 132]
[122 131]
[158 194]
[159 193]
[160 192]
[161 191]
[162 190]
[163 189]
[164 184]
[165 183]
[166 182]
[167 181]
[168 180]
[169 179]
[170 178]
[171 177]
[172 176]
[224 242]
[225 241]
[226 240]
[227 239]
[228 238]
[249 261]
[250 260]
[251 259]
[252 258]
[253 257]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
