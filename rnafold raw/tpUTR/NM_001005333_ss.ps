%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 06:27:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGUUGGAUAUUGCUAUCAAUCGCAGUAGUCUUUCCCCUGUGUGAGGCUGAAGCCUCAGAUUCCUUCUAAACACAGCUAUCUAGAGAGCCACAUCCUGUUGACUGAAAGUGGCAUGCAAGAUAAAUUUAUUUGCUGUUCCUUGUCUACUGCUUUUUUUCCCCUUGUGUGCUGUCAAGUUUUGGUAUCAGAAAUAAACAUUGAAAUUGCAAAGUGAA\
) } def
/len { sequence length } bind def

/coor [
[116.59571838 203.51242065]
[113.16764832 188.90939331]
[109.73957825 174.30636597]
[106.31151581 159.70333862]
[102.88344574 145.10031128]
[99.45537567 130.49728394]
[84.67910767 127.91622162]
[76.50347900 140.49235535]
[68.32785034 153.06849670]
[60.15222168 165.64462280]
[52.06742477 178.27934265]
[44.07387543 190.97198486]
[36.08032227 203.66462708]
[28.08677292 216.35726929]
[20.09322166 229.04989624]
[25.98012161 243.40692139]
[22.27118111 258.47421265]
[10.39256096 268.45809937]
[-5.08816576 269.51959229]
[-18.21834373 261.25048828]
[-23.94915199 246.83044434]
[-20.07697678 231.80426025]
[-8.09075069 221.94982910]
[7.40058041 221.05635071]
[15.39413071 208.36370850]
[23.38768196 195.67106628]
[31.38123131 182.97842407]
[39.37478256 170.28578186]
[40.27895355 162.95460510]
[47.57609177 157.46899414]
[55.75171661 144.89286804]
[63.92734528 132.31672668]
[72.10297394 119.74059296]
[68.86276245 112.97664642]
[57.99950790 123.32022095]
[44.80525970 116.18497467]
[47.51406097 101.43158722]
[62.38234329 99.44874573]
[59.14213562 92.68479156]
[44.21839142 91.17420197]
[29.29464722 89.66361237]
[14.37090302 88.15303040]
[-0.55284095 86.64244080]
[-15.47658443 85.13185120]
[-30.47619438 85.02377319]
[-45.42015839 86.31914520]
[-60.36412048 87.61451721]
[-75.30808258 88.90988922]
[-90.25204468 90.20526123]
[-103.37564850 100.03903198]
[-118.34529877 93.34263611]
[-119.76149750 77.00475311]
[-106.16738129 67.83239746]
[-91.54741669 75.26129913]
[-76.60345459 73.96592712]
[-61.65949249 72.67055511]
[-46.71553040 71.37518311]
[-31.77156830 70.07981110]
[-30.36855125 55.14556885]
[-44.80977249 51.08956909]
[-59.25099182 47.03356934]
[-73.88764191 53.60228348]
[-88.08250427 46.12662506]
[-90.94649506 30.34128189]
[-80.28260803 18.35541534]
[-64.27126312 19.36355591]
[-55.19499207 32.59234619]
[-40.75377274 36.64834595]
[-26.31255150 40.70434952]
[-16.28821564 49.93732834]
[-12.33659267 60.75644302]
[-13.96599770 70.20810699]
[0.95774645 71.71869659]
[15.88148975 73.22928619]
[30.80523300 74.73987579]
[45.72897720 76.25045776]
[60.65272141 77.76104736]
[72.76011658 64.87480164]
[88.64270782 57.79891968]
[105.73194122 57.42877579]
[121.35843658 63.59473801]
[133.16894531 75.12379456]
[141.70359802 62.78849030]
[143.19277954 47.03752518]
[156.79708862 40.97354889]
[165.33174133 28.63824463]
[166.82092285 12.88727951]
[180.42524719 6.82330465]
[188.95988464 -5.51200008]
[197.49453735 -17.84730530]
[205.94009399 -30.24378395]
[214.29609680 -42.70079803]
[222.65209961 -55.15781021]
[231.00811768 -67.61482239]
[224.37779236 -77.62874603]
[221.51847839 -89.25778961]
[222.74209595 -101.13573456]
[227.88227844 -111.87520599]
[236.31657410 -120.22972107]
[247.04173279 -125.23832703]
[258.79299927 -126.33612823]
[270.19326782 -123.41788483]
[279.07983398 -135.50212097]
[276.89871216 -150.92549133]
[286.08312988 -163.05403137]
[300.80038452 -165.03834534]
[309.68698120 -177.12257385]
[318.57357788 -189.20680237]
[327.46014404 -201.29103088]
[336.34674072 -213.37525940]
[345.23330688 -225.45948792]
[354.11990356 -237.54371643]
[363.00646973 -249.62796021]
[358.45611572 -264.34530640]
[363.38668823 -278.75164795]
[375.70904541 -287.39013672]
[390.57727051 -287.11950684]
[399.46386719 -299.20373535]
[408.35046387 -311.28796387]
[417.23703003 -323.37219238]
[426.12362671 -335.45642090]
[417.11392212 -347.59384155]
[412.08361816 -361.84823608]
[411.48004150 -376.95211792]
[415.35681152 -391.56243896]
[423.36923218 -404.38009644]
[434.80487061 -414.26535034]
[448.64682007 -420.33917236]
[463.66430664 -422.06152344]
[478.52197266 -419.27923584]
[491.89868164 -412.23971558]
[502.60501099 -401.56890869]
[509.68890381 -388.21563721]
[512.52050781 -373.36727905]
[510.84805298 -358.34417725]
[504.82022095 -344.48211670]
[494.97302246 -333.01373291]
[482.18203735 -324.95877075]
[467.58465576 -321.03350830]
[452.47885132 -321.58691406]
[438.20785522 -326.56985474]
[429.32125854 -314.48562622]
[420.43469238 -302.40139771]
[411.54809570 -290.31716919]
[402.66149902 -278.23294067]
[407.35104370 -264.12100220]
[402.77761841 -249.78408813]
[390.49539185 -240.78402710]
[375.09072876 -240.74136353]
[366.20413208 -228.65713501]
[357.31753540 -216.57290649]
[348.43096924 -204.48867798]
[339.54437256 -192.40444946]
[330.65780640 -180.32022095]
[321.77120972 -168.23599243]
[312.88461304 -156.15176392]
[315.37670898 -141.51191711]
[306.53659058 -129.13018799]
[291.16406250 -126.61553192]
[282.27749634 -114.53130341]
[290.30697632 -98.28004456]
[288.96414185 -80.11775970]
[278.53482056 -65.08409882]
[261.83819580 -57.39460373]
[243.46511841 -59.25881577]
[235.10911560 -46.80180359]
[226.75311279 -34.34479141]
[218.39709473 -21.88777733]
[217.28204346 -14.58570385]
[209.82984924 -9.31265450]
[201.29519653 3.02265048]
[192.76054382 15.35795498]
[191.88182068 30.22661781]
[177.66705322 37.17289734]
[169.13240051 49.50820160]
[168.25367737 64.37686157]
[154.03889465 71.32314301]
[145.50424194 83.65844727]
[147.97877502 98.45292664]
[160.06300354 107.33950806]
[172.14723206 116.22609711]
[184.23147583 125.11267853]
[196.31570435 133.99926758]
[212.66564941 135.26866150]
[219.49623108 150.17755127]
[209.78073120 163.38896179]
[193.51362610 161.31210327]
[187.42910767 146.08349609]
[175.34487915 137.19691467]
[163.26065063 128.31033325]
[151.17642212 119.42374420]
[139.09219360 110.53715515]
[132.83374023 114.67017365]
[133.73420715 129.64312744]
[120.31684875 122.93620300]
[114.05840302 127.06922150]
[117.48646545 141.67224121]
[120.91453552 156.27526855]
[124.34260559 170.87829590]
[127.77067566 185.48132324]
[131.19874573 200.08435059]
[146.26698303 201.57670593]
[160.03315735 207.88311768]
[171.00404358 218.31951904]
[177.98959351 231.75382996]
[180.23207092 246.72880554]
[177.48822021 261.62008667]
[170.05567932 274.81234741]
[158.74066162 284.87463379]
[144.77055359 290.71542358]
[129.66072083 291.70114136]
[115.05017090 287.72491455]
[102.52373505 279.21804810]
[93.44019318 267.10324097]
[88.78486633 252.69468689]
[89.06271362 237.55529785]
[94.24361420 223.32725525]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 201]
[2 200]
[3 199]
[4 198]
[5 197]
[6 196]
[7 33]
[8 32]
[9 31]
[10 30]
[11 28]
[12 27]
[13 26]
[14 25]
[15 24]
[39 77]
[40 76]
[41 75]
[42 74]
[43 73]
[44 72]
[45 58]
[46 57]
[47 56]
[48 55]
[49 54]
[59 69]
[60 68]
[61 67]
[82 178]
[83 177]
[85 175]
[86 174]
[88 172]
[89 171]
[90 170]
[91 168]
[92 167]
[93 166]
[94 165]
[102 160]
[103 159]
[106 156]
[107 155]
[108 154]
[109 153]
[110 152]
[111 151]
[112 150]
[113 149]
[117 145]
[118 144]
[119 143]
[120 142]
[121 141]
[179 192]
[180 191]
[181 190]
[182 189]
[183 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
