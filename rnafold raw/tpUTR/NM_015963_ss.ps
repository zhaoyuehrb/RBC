%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 05:46:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCUAGAGCUUCUGGAGCCCUCGGGAGGGCCUGGCUACUGUGCCUCAACGGUUCGGCUCCUCAACAGACAGUCCCUGCGGCAGAAGUGGGUGUGGCCGUGAGCCUCUGCAGGCUCAAGAGUGUUGUCCAGAUGUUUCUGUACUGGCAUAGAAAAACCAAAUAAAAGGCCUUUAUUUUUAUGGCUGAGGAUUUUGAAUAUUA\
) } def
/len { sequence length } bind def

/coor [
[97.64169312 137.08625793]
[89.03403473 136.16191101]
[83.13253021 149.95219421]
[84.81638336 165.68354797]
[72.69573975 174.34028625]
[66.79423523 188.13058472]
[68.47809601 203.86192322]
[56.35744858 212.51866150]
[50.45594406 226.30895996]
[44.55443954 240.09925842]
[38.65293884 253.88955688]
[37.98001099 270.83013916]
[21.51518440 274.87313843]
[13.07227421 260.17095947]
[24.86264229 247.98805237]
[30.76414490 234.19775391]
[36.66564941 220.40745544]
[42.56715393 206.61715698]
[40.46117783 191.87219238]
[53.00394058 182.22908020]
[58.90544510 168.43878174]
[56.79946899 153.69381714]
[69.34223175 144.05068970]
[75.24373627 130.26040649]
[65.67159271 118.71163177]
[51.02575302 121.95189667]
[36.37991333 125.19216156]
[21.73407173 128.43243408]
[7.11386967 131.78648376]
[-7.47980833 135.25413513]
[-22.07348633 138.72177124]
[-29.70583725 143.75373840]
[-36.92106628 142.12799072]
[-51.56690598 145.36827087]
[-56.70206070 149.55116272]
[-62.33319855 150.38241577]
[-66.71842194 148.47406006]
[-81.45794678 151.25727844]
[-96.19747925 154.04049683]
[-110.93700409 156.82371521]
[-125.67653656 159.60691833]
[-134.37609863 172.80136108]
[-149.87406921 175.89784241]
[-162.97579956 167.05926514]
[-165.90824890 151.52941895]
[-156.93165588 138.52186584]
[-141.37165833 135.75378418]
[-128.45974731 144.86740112]
[-113.72022247 142.08418274]
[-98.98069763 139.30096436]
[-84.24116516 136.51774597]
[-69.50163269 133.73452759]
[-54.80717468 130.72242737]
[-40.16133118 127.48215485]
[-25.54113197 124.12809753]
[-10.94745350 120.66045380]
[3.64622474 117.19281006]
[9.43131638 112.58463287]
[18.49380493 113.78659058]
[33.13964462 110.54631805]
[47.78548813 107.30605316]
[62.43132782 104.06578827]
[71.95551300 77.91181183]
[95.68614197 66.66909027]
[118.98048401 74.83631897]
[130.60334778 65.35427094]
[142.22619629 55.87222672]
[153.84906006 46.39018250]
[156.55375671 40.34443665]
[161.20909119 37.06898880]
[165.98402405 36.80076981]
[177.89614868 27.68477821]
[189.80827332 18.56878853]
[201.72039795 9.45279789]
[213.56127930 0.24445257]
[219.59161377 -14.38242722]
[234.37455750 -16.20281601]
[246.14347839 -25.50296021]
[252.17381287 -40.12984085]
[266.95675659 -41.95022964]
[272.98709106 -56.57710648]
[287.77001953 -58.39749527]
[299.53894043 -67.69763947]
[311.30786133 -76.99777985]
[323.07678223 -86.29792786]
[334.84570312 -95.59806824]
[346.61459351 -104.89821625]
[358.38351440 -114.19835663]
[370.15243530 -123.49849701]
[381.92135620 -132.79864502]
[383.85296631 -137.66352844]
[387.13226318 -140.96649170]
[390.93667603 -142.45558167]
[394.46301270 -142.24267578]
[406.65289307 -150.98379517]
[418.84277344 -159.72491455]
[431.03262329 -168.46603394]
[416.78872681 -179.78385925]
[411.57723999 -201.80346680]
[414.58935547 -216.49794006]
[417.60147095 -231.19239807]
[420.61355591 -245.88685608]
[423.62567139 -260.58132935]
[426.63778687 -275.27578735]
[429.64987183 -289.97024536]
[423.95864868 -305.35015869]
[434.63922119 -317.79434204]
[450.70431519 -314.50128174]
[455.62756348 -298.85858154]
[444.34432983 -286.95812988]
[441.33224487 -272.26367188]
[438.32012939 -257.56921387]
[435.30801392 -242.87475586]
[432.29592896 -228.18029785]
[429.28381348 -213.48582458]
[426.27169800 -198.79136658]
[432.40045166 -194.46833801]
[446.01687622 -200.76062012]
[444.65792847 -185.82228088]
[450.78665161 -181.49923706]
[463.61871338 -189.26698303]
[476.45080566 -197.03472900]
[489.28286743 -204.80247498]
[502.11495972 -212.57022095]
[514.88623047 -220.43751526]
[527.59594727 -228.40388489]
[535.17980957 -242.28895569]
[550.07305908 -242.49237061]
[562.78277588 -250.45874023]
[575.49249268 -258.42510986]
[588.20220947 -266.39147949]
[595.39886475 -281.12716675]
[611.77514648 -281.99246216]
[620.48455811 -268.09722900]
[612.56762695 -253.73567200]
[596.16857910 -253.68174744]
[583.45886230 -245.71539307]
[570.74914551 -237.74902344]
[558.03942871 -229.78265381]
[551.36462402 -216.46737671]
[535.56231689 -215.69416809]
[522.85260010 -207.72779846]
[518.85174561 -201.50721741]
[509.88269043 -199.73814392]
[497.05062866 -191.97039795]
[484.21853638 -184.20265198]
[471.38647461 -176.43492126]
[458.55438232 -168.66717529]
[473.31399536 -171.34199524]
[488.16131592 -169.20729065]
[501.56945801 -162.48262024]
[512.15954590 -151.85952759]
[518.84246826 -138.43051147]
[520.93096924 -123.57661438]
[518.21020508 -108.82542419]
[510.96008301 -95.69396210]
[499.92611694 -85.53266907]
[486.24310303 -79.38655090]
[471.31817627 -77.88767242]
[456.68624878 -81.19017792]
[443.85205078 -88.95442963]
[434.13549805 -100.38196564]
[428.53582764 -114.29754639]
[427.62890625 -129.27011108]
[431.50799561 -143.75984192]
[439.77374268 -156.27615356]
[427.58386230 -147.53504944]
[415.39401245 -138.79393005]
[403.20413208 -130.05281067]
[391.22149658 -121.02973175]
[379.45257568 -111.72958374]
[367.68365479 -102.42944336]
[355.91473389 -93.12929535]
[344.14584351 -83.82915497]
[332.37692261 -74.52901459]
[320.60800171 -65.22886658]
[308.83908081 -55.92872620]
[297.07019043 -46.62858200]
[291.88162231 -32.66691208]
[276.25689697 -30.18131447]
[271.06835938 -16.21964264]
[255.44361877 -13.73404503]
[243.67469788 -4.43390226]
[238.48616028 9.52776909]
[222.86141968 12.01336670]
[219.56011963 18.63182640]
[210.83639526 21.36492348]
[198.92427063 30.48091316]
[187.01214600 39.59690475]
[175.10002136 48.71289444]
[163.33110046 58.01303864]
[151.70825195 67.49508667]
[140.08538818 76.97712708]
[128.46252441 86.45917511]
[131.41889954 93.20057678]
[132.76789856 100.58342743]
[132.37210083 108.22221375]
[130.18696594 115.70259857]
[126.26676178 122.60388947]
[120.76483917 128.52261353]
[113.92849731 133.09593201]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 24]
[3 23]
[5 21]
[6 20]
[8 18]
[9 17]
[10 16]
[11 15]
[25 62]
[26 61]
[27 60]
[28 59]
[29 57]
[30 56]
[31 55]
[33 54]
[34 53]
[37 52]
[38 51]
[39 50]
[40 49]
[41 48]
[65 194]
[66 193]
[67 192]
[68 191]
[71 190]
[72 189]
[73 188]
[74 187]
[75 185]
[77 183]
[78 182]
[80 180]
[82 178]
[83 177]
[84 176]
[85 175]
[86 174]
[87 173]
[88 172]
[89 171]
[90 170]
[94 169]
[95 168]
[96 167]
[97 166]
[99 116]
[100 115]
[101 114]
[102 113]
[103 112]
[104 111]
[105 110]
[120 148]
[121 147]
[122 146]
[123 145]
[124 144]
[125 142]
[126 141]
[128 139]
[129 138]
[130 137]
[131 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
