%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 17:12:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGGGGGCCCGGGGGACUUUUUUAAAAAACCAGAUCGGGAGGACUGUGGCCAGCAAUUAACACCAUGUAGACUUCCUUAGUUCUUAAGUGGUUGAAUUCGCUGCUUGUUCUGUAACGUUAUAAAUAAUUUAUAUCUGAAGACGGAGAGCCUGUAAUAUUCUUCAGAUUAAAUGAAGCGUGAGACACUUU\
) } def
/len { sequence length } bind def

/coor [
[105.18363953 217.29876709]
[91.70364380 210.71926880]
[80.80464172 200.41336060]
[73.48197174 187.32220459]
[70.40435791 172.64131165]
[71.85285187 157.71142578]
[77.69518280 143.89595032]
[87.40009308 132.45458984]
[91.91819763 118.15121460]
[81.09577942 128.53752136]
[70.27336121 138.92381287]
[59.45094681 149.31011963]
[48.62852859 159.69642639]
[38.06562805 170.34654236]
[27.76868248 181.25401306]
[34.32283020 194.94371033]
[35.48520660 210.07688904]
[31.09860611 224.60693359]
[21.75628471 236.56877136]
[8.72171211 244.34465027]
[-6.24229240 246.88296509]
[-21.11197090 243.84040833]
[-33.87631989 235.62847900]
[-42.80906677 223.35775757]
[-46.70212936 208.68777466]
[-45.02900696 193.60250854]
[-38.01597214 180.14213562]
[-26.61147881 170.12704468]
[-12.35789585 164.91169739]
[2.81709957 165.20143127]
[16.86121368 170.95706177]
[27.15816116 160.04960632]
[27.41660881 156.51702881]
[29.40946007 152.93620300]
[33.13963318 150.12574768]
[38.24222565 148.87400818]
[49.06464386 138.48770142]
[59.88706207 128.10139465]
[70.70948029 117.71509552]
[81.53189850 107.32879639]
[82.88701630 92.39012909]
[74.11020660 80.22593689]
[65.33339691 68.06174469]
[56.55658722 55.89755249]
[47.77977371 43.73336029]
[36.93877029 42.61605072]
[28.67841148 35.84849930]
[25.58068466 25.85892296]
[28.44034195 16.02729607]
[20.06836319 3.58101201]
[11.69638538 -8.86527252]
[4.29701996 -14.25099564]
[3.29103541 -21.58582687]
[-4.87510109 -34.16812515]
[-13.04123783 -46.75042343]
[-21.31057549 -59.26513672]
[-29.68255234 -71.71141815]
[-38.05453110 -84.15770721]
[-46.42650986 -96.60398865]
[-59.86470413 -97.65486908]
[-70.09127045 -106.13400269]
[-73.51109314 -118.76921082]
[-69.09053040 -130.88296509]
[-77.25666809 -143.46525574]
[-85.42279816 -156.04756165]
[-93.58893585 -168.62985229]
[-101.75507355 -181.21215820]
[-118.92195129 -184.53375244]
[-128.19976807 -198.95477295]
[-124.26424408 -215.29772949]
[-132.63621521 -227.74401855]
[-141.00819397 -240.19029236]
[-149.48225403 -252.56730652]
[-158.05780029 -264.87420654]
[-173.53424072 -269.10025024]
[-179.74700928 -283.89147949]
[-171.93020630 -297.90139771]
[-156.08020020 -300.38272095]
[-144.35577393 -289.43203735]
[-145.75090027 -273.44976807]
[-137.17533875 -261.14285278]
[-130.76089478 -257.44604492]
[-128.56192017 -248.56227112]
[-120.18993378 -236.11599731]
[-111.81795502 -223.66970825]
[-98.94098663 -222.98562622]
[-88.65901947 -214.88471985]
[-84.86954498 -202.15214539]
[-89.17277527 -189.37828064]
[-81.00663757 -176.79598999]
[-72.84050751 -164.21369934]
[-64.67436981 -151.63139343]
[-56.50823212 -139.04910278]
[-39.93103409 -136.26031494]
[-30.30358124 -122.07032013]
[-33.98022461 -104.97596741]
[-25.60824585 -92.52968597]
[-17.23626900 -80.08339691]
[-8.86429024 -67.63711548]
[-2.51151037 -63.83528137]
[-0.45894021 -54.91656113]
[7.70719624 -42.33426285]
[15.87333298 -29.75196457]
[24.14266968 -17.23724937]
[32.51464844 -4.79096603]
[40.88662720 7.65531826]
[58.82774734 14.84018707]
[59.94396973 34.95655060]
[68.72077942 47.12074280]
[77.49758911 59.28493500]
[86.27439880 71.44912720]
[95.05120850 83.61331940]
[102.00759888 83.26074219]
[108.42115021 85.69367981]
[113.24230957 90.42324066]
[115.71887970 96.59259796]
[130.53613281 98.92693329]
[145.35337830 101.26126099]
[160.17062378 103.59559631]
[174.98786926 105.92992401]
[180.16622925 98.61239624]
[187.41043091 93.40615082]
[195.91375732 90.85607910]
[204.74049377 91.21321869]
[212.92897034 94.41030121]
[219.59623718 100.07218170]
[224.03337097 107.55964661]
[225.78071594 116.04149628]
[240.35612488 119.58515167]
[254.93153381 123.12879944]
[269.50692749 126.67244720]
[284.08233643 130.21609497]
[293.17791748 129.20246887]
[298.86737061 133.93974304]
[313.38253784 137.72264099]
[327.89767456 141.50553894]
[342.41284180 145.28843689]
[356.92797852 149.07133484]
[371.44314575 152.85423279]
[385.95828247 156.63713074]
[400.47344971 160.42002869]
[414.98858643 164.20292664]
[429.67266846 167.26527405]
[444.48992920 169.59959412]
[459.30718994 171.93392944]
[473.07241821 163.69395447]
[488.04608154 169.45323181]
[492.74163818 184.79374695]
[483.55703735 197.94757080]
[467.53796387 198.82420349]
[456.97283936 186.75119019]
[442.15557861 184.41685486]
[427.33834839 182.08251953]
[435.17004395 194.87565613]
[431.81005859 209.49449158]
[419.17861938 217.58439636]
[404.49456787 214.52198792]
[396.14981079 202.05743408]
[398.91336060 187.31420898]
[411.20568848 178.71807861]
[396.69055176 174.93518066]
[382.17538452 171.15228271]
[367.66024780 167.36938477]
[353.14508057 163.58648682]
[338.62994385 159.80358887]
[324.11477661 156.02069092]
[309.59963989 152.23779297]
[295.08447266 148.45489502]
[280.53869629 144.79150391]
[265.96328735 141.24784851]
[251.38787842 137.70420837]
[236.81246948 134.16055298]
[222.23706055 130.61691284]
[205.22982788 143.32585144]
[184.09541321 139.30029297]
[172.65354919 120.74717712]
[157.83628845 118.41284180]
[143.01904297 116.07851410]
[128.20179749 113.74417877]
[113.38454437 111.40985107]
[125.26876831 120.56218719]
[139.76954651 124.39981842]
[152.46179199 132.39401245]
[162.18640137 143.81468201]
[168.05528259 157.61889648]
[169.53250122 172.54597473]
[166.48312378 187.23275757]
[159.18565369 200.33796692]
[148.30650330 210.66482544]
[134.83918762 217.27024841]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 40]
[10 39]
[11 38]
[12 37]
[13 36]
[14 32]
[15 31]
[41 112]
[42 111]
[43 110]
[44 109]
[45 108]
[49 106]
[50 105]
[51 104]
[53 103]
[54 102]
[55 101]
[56 99]
[57 98]
[58 97]
[59 96]
[63 93]
[64 92]
[65 91]
[66 90]
[67 89]
[70 85]
[71 84]
[72 83]
[73 81]
[74 80]
[116 180]
[117 179]
[118 178]
[119 177]
[120 176]
[128 173]
[129 172]
[130 171]
[131 170]
[132 169]
[134 168]
[135 167]
[136 166]
[137 165]
[138 164]
[139 163]
[140 162]
[141 161]
[142 160]
[143 153]
[144 152]
[145 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
