%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 15:01:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGCCAGGCUUCAACACUUUCCCUGUCCCCACCUGGGGACUCUUGCCCCCACAUAUUUCUCCAGGUCUCCUCCCCACCCCCCCAGCAUCAAUAAAGUGUCAUAAACAGAA\
) } def
/len { sequence length } bind def

/coor [
[65.62071991 149.71847534]
[59.92966080 145.25738525]
[48.66957474 155.16749573]
[43.42200851 170.09309387]
[28.75615883 172.69351196]
[17.49607468 182.60363770]
[6.23598957 192.51374817]
[-5.02409506 202.42387390]
[-0.44210634 216.94714355]
[-2.16984653 232.07772827]
[-9.90797424 245.19418335]
[-22.31581116 254.02398682]
[-37.24362564 257.03732300]
[-52.10508347 253.71212769]
[-64.32534790 244.62449646]
[-71.78718567 231.34892273]
[-73.19777679 216.18547058]
[-68.31274414 201.76132202]
[-57.97844315 190.57551575]
[-43.98535156 184.56608582]
[-28.75785637 184.77420044]
[-14.93421555 191.16378784]
[-3.67413139 181.25366211]
[7.58595324 171.34355164]
[18.84603691 161.43342590]
[23.28820992 147.21665955]
[38.75945663 143.90740967]
[50.01953888 133.99729919]
[39.62289810 102.90999603]
[46.98166656 70.96694183]
[69.93180847 47.56178665]
[64.14256287 33.72398758]
[58.35332108 19.88619041]
[52.56407928 6.04839277]
[46.77483368 -7.78940582]
[40.98559189 -21.62720490]
[35.19634628 -35.46500397]
[29.40710449 -49.30279922]
[23.61786079 -63.14059830]
[8.45979595 -65.18518066]
[-3.56031466 -74.48107910]
[-9.27558327 -88.45255280]
[-7.24378014 -103.30946350]
[1.89021015 -115.07534027]
[-3.89903331 -128.91313171]
[-18.61485291 -134.67683411]
[-24.86831665 -149.19129944]
[-18.94935417 -163.84536743]
[-4.36958408 -169.94502258]
[10.22107697 -163.87145996]
[16.16624832 -149.22801208]
[9.93876457 -134.70237732]
[15.72800827 -120.86457825]
[30.51924324 -119.10816956]
[42.52523422 -110.12417603]
[48.46160126 -96.24520111]
[46.64199066 -81.15925598]
[37.45565796 -68.92984009]
[43.24490356 -55.09204483]
[49.03414536 -41.25424576]
[54.82339096 -27.41644669]
[60.61263275 -13.57864952]
[66.40187836 0.25914919]
[72.19111633 14.09694767]
[77.98036194 27.93474579]
[83.76960754 41.77254486]
[90.64790344 40.28065109]
[97.65299225 39.59839630]
[104.68990326 39.73502731]
[111.66323090 40.68869019]
[118.47843170 42.44646072]
[125.04312134 44.98450851]
[131.26828003 48.26841736]
[137.06953430 52.25366974]
[142.36822510 56.88624191]
[147.09249878 62.10331726]
[151.17832947 67.83417511]
[154.57032776 74.00111389]
[157.22248840 80.52053833]
[159.09886169 87.30403900]
[160.17401123 94.25967407]
[160.43334961 101.29312897]
[159.87338257 108.30905151]
[158.50169373 115.21232605]
[156.33686829 121.90936279]
[169.53428650 129.03874207]
[182.73170471 136.16813660]
[195.92912292 143.29751587]
[210.39875793 137.36763000]
[225.27899170 142.17520142]
[233.54382324 155.45024109]
[231.29084778 170.92468262]
[219.58386230 181.29196167]
[203.95054626 181.65696716]
[191.77246094 171.84736633]
[188.79974365 156.49493408]
[175.60232544 149.36555481]
[162.40489197 142.23617554]
[149.20747375 135.10678101]
[144.66316223 140.73161316]
[139.47967529 145.77354431]
[133.73120117 150.16043091]
[127.50000763 153.82946777]
[120.87526703 156.72816467]
[113.95178986 158.81504822]
[106.82865143 160.06024170]
[99.60778809 160.44590759]
[92.39253998 159.96656799]
[85.28615570 158.62904358]
[78.39034271 156.45249939]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 28]
[3 27]
[5 25]
[6 24]
[7 23]
[8 22]
[31 66]
[32 65]
[33 64]
[34 63]
[35 62]
[36 61]
[37 60]
[38 59]
[39 58]
[44 53]
[45 52]
[85 99]
[86 98]
[87 97]
[88 96]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
