%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 21:53:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGCUAGGGUGGAGGAGAGGAGUGGGGUUUGUUGAUGAACCUCCACCCCCACCCCACCCCCGCACGCCUGUAAUCCCAGCACUUGGGGAGGCCAAGGCGGGAGGAUCGCUUGAGCCCAGAGGUUCGAGAUCAACCUGGGCAAGAGAGUGAGACCCUGACUCUACGAAAAUUAAAAGUUAGCCCGGUGUGGUGGCGCGCACCUGUGGCUUAGCUACCCUGAA\
) } def
/len { sequence length } bind def

/coor [
[197.16069031 95.86347961]
[182.26811218 97.65539551]
[167.37553406 99.44730377]
[152.48294067 101.23921967]
[137.59036255 103.03112793]
[122.69777679 104.82304382]
[108.90199280 128.00665283]
[75.86055756 126.12520599]
[63.59012985 134.75288391]
[51.31970978 143.38055420]
[39.04928589 152.00822449]
[26.77886200 160.63589478]
[14.50844002 169.26356506]
[9.29425335 176.75265503]
[2.00383496 177.92491150]
[-10.38691139 186.37887573]
[-17.42582130 200.54800415]
[-32.29990005 201.32966614]
[-37.61907196 208.74456787]
[-44.92528152 209.81399536]
[-57.43389130 218.09255981]
[-64.67170715 232.16113281]
[-79.55532837 232.73318481]
[-92.06393433 241.01174927]
[-104.57254791 249.29031372]
[-117.08116150 257.56887817]
[-129.53114319 265.93533325]
[-141.92189026 274.38931274]
[-154.31263733 282.84326172]
[-166.70338440 291.29721069]
[-179.09413147 299.75115967]
[-181.78047180 315.32546997]
[-194.74070740 324.37026978]
[-210.28573608 321.51940918]
[-219.19299316 308.46426392]
[-216.17794800 292.95025635]
[-203.02937317 284.18151855]
[-187.54809570 287.36041260]
[-175.15734863 278.90646362]
[-162.76660156 270.45251465]
[-150.37585449 261.99856567]
[-137.98510742 253.54460144]
[-134.23466492 247.18389893]
[-125.35972595 245.06025696]
[-112.85111237 236.78169250]
[-100.34249878 228.50312805]
[-87.83389282 220.22456360]
[-81.49077606 206.74813843]
[-65.71245575 205.58395386]
[-53.20384598 197.30538940]
[-40.75386047 188.93891907]
[-34.60121918 175.37446594]
[-18.84086990 173.98812866]
[-6.45012236 165.53416443]
[5.88076830 156.99314880]
[18.15119171 148.36547852]
[30.42161369 139.73779297]
[42.69203568 131.11012268]
[54.96245956 122.48245239]
[67.23287964 113.85478210]
[67.49697876 106.35943604]
[54.25050735 113.39726257]
[41.53239059 105.44431305]
[42.06090164 90.45362091]
[55.30752182 83.41608429]
[68.02516174 91.36873627]
[68.28925323 83.87339020]
[56.65648270 74.40350342]
[45.02371216 64.93362427]
[33.39094543 55.46374130]
[29.10199356 54.92738342]
[25.55961227 53.22915268]
[23.03662682 50.74486160]
[21.65638924 47.90024185]
[21.38943291 45.11807632]
[10.30848694 35.00804901]
[-0.77245867 24.89802170]
[-11.85340405 14.78799534]
[-22.93434906 4.67796850]
[-38.96190262 3.97293282]
[-48.28682709 -9.08177280]
[-43.75584030 -24.47169495]
[-28.84472656 -30.39100266]
[-14.99201488 -22.29891014]
[-12.82432270 -6.40297699]
[-1.74337745 3.70704961]
[9.33756828 13.81707668]
[20.41851425 23.92710304]
[31.49946022 34.03713226]
[42.86082840 43.83097076]
[54.49359512 53.30085373]
[66.12636566 62.77073669]
[77.75913239 72.24061584]
[92.71822357 68.34803009]
[106.50570679 71.34178162]
[116.38248444 79.43080902]
[120.90586853 89.93045807]
[135.79844666 88.13854980]
[150.69104004 86.34663391]
[165.58361816 84.55471802]
[180.47619629 82.76280975]
[195.36878967 80.97089386]
[210.20497131 78.76013947]
[224.97299194 76.13230133]
[239.74101257 73.50445557]
[246.59033203 59.70615768]
[260.09335327 52.66898727]
[274.97491455 54.90579605]
[285.55908203 65.35152435]
[300.32711792 62.72368240]
[315.09512329 60.09584045]
[322.98760986 55.51511383]
[330.08959961 57.53653336]
[344.89315796 55.11699295]
[359.69674683 52.69745636]
[374.50033569 50.27791595]
[389.30389404 47.85837555]
[404.09005737 45.33462524]
[418.85809326 42.70678329]
[433.62609863 40.07893753]
[442.67843628 27.40246582]
[457.69274902 24.94783592]
[469.72204590 33.65597534]
[484.49005127 31.02813530]
[496.72131348 20.99284744]
[510.60723877 26.38080406]
[525.37524414 23.75296211]
[534.42761230 11.07648945]
[549.44189453 8.62185955]
[561.47119141 17.32999992]
[576.23925781 14.70215797]
[591.00726318 12.07431507]
[605.77526855 9.44647217]
[614.82763672 -3.23000002]
[629.84191895 -5.68462992]
[641.87121582 3.02351046]
[656.63922119 0.39566788]
[671.40722656 -2.23217463]
[686.17529297 -4.86001730]
[700.94329834 -7.48785973]
[715.71130371 -10.11570263]
[719.84960938 -14.82059479]
[725.05047607 -17.22661209]
[730.24810791 -17.29358292]
[734.52471924 -15.41805744]
[748.49151611 -20.88880348]
[762.45831299 -26.35955048]
[776.42504883 -31.83029747]
[790.39184570 -37.30104446]
[800.41949463 -49.53853989]
[815.09204102 -46.97603989]
[829.05883789 -52.44678879]
[841.60174561 -63.85343933]
[856.03485107 -54.95838547]
[851.48291016 -38.62694168]
[834.52954102 -38.48000717]
[820.56280518 -33.00926208]
[811.53411865 -21.16307068]
[795.86260986 -23.33426476]
[781.89581299 -17.86351967]
[767.92901611 -12.39277172]
[753.96228027 -6.92202473]
[739.99548340 -1.45127773]
[754.87042236 0.48167688]
[768.36859131 7.02372694]
[779.10192871 17.50208473]
[785.96655273 30.83914757]
[788.25646973 45.66332245]
[785.73620605 60.45008850]
[778.66497803 73.67875671]
[767.76995850 83.98889160]
[754.17163086 90.32018280]
[739.26843262 92.02152252]
[724.59301758 88.91794586]
[711.65460205 81.32862091]
[701.78381348 70.03403473]
[695.99578857 56.19574356]
[694.88568115 41.23687744]
[698.56774902 26.69581604]
[706.66326904 14.06796932]
[718.33917236 4.65231895]
[703.57116699 7.28016138]
[688.80310059 9.90800381]
[674.03509521 12.53584671]
[659.26708984 15.16368866]
[644.49902344 17.79153061]
[636.21209717 30.11477089]
[621.27270508 32.99015427]
[608.40313721 24.21449280]
[593.63507080 26.84233665]
[578.86706543 29.47017860]
[564.09906006 32.09802246]
[555.81213379 44.42126083]
[540.87268066 47.29664230]
[528.00311279 38.52098465]
[513.23510742 41.14882660]
[502.06015015 50.99615097]
[487.11788940 45.79615402]
[472.34988403 48.42399979]
[464.06295776 60.74723816]
[449.12350464 63.62261963]
[436.25393677 54.84695816]
[421.48593140 57.47480392]
[406.71789551 60.10264587]
[400.68850708 64.36537170]
[391.72344971 62.66195297]
[376.91986084 65.08148956]
[362.11627197 67.50102997]
[347.31271362 69.92057037]
[332.50912476 72.34011078]
[317.72296143 74.86386108]
[302.95495605 77.49170685]
[288.18692017 80.11954498]
[281.85580444 93.57520294]
[268.65933228 100.80825806]
[253.55761719 98.86106110]
[242.36886597 88.27247620]
[227.60084534 90.90032196]
[212.83282471 93.52816010]
[211.12101746 95.73756409]
[208.43470764 97.40509033]
[204.97480774 98.15758514]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 102]
[2 101]
[3 100]
[4 99]
[5 98]
[6 97]
[8 60]
[9 59]
[10 58]
[11 57]
[12 56]
[13 55]
[15 54]
[16 53]
[18 51]
[20 50]
[21 49]
[23 47]
[24 46]
[25 45]
[26 44]
[27 42]
[28 41]
[29 40]
[30 39]
[31 38]
[67 93]
[68 92]
[69 91]
[70 90]
[75 89]
[76 88]
[77 87]
[78 86]
[79 85]
[103 219]
[104 218]
[105 217]
[109 213]
[110 212]
[111 211]
[113 210]
[114 209]
[115 208]
[116 207]
[117 206]
[118 204]
[119 203]
[120 202]
[123 199]
[124 198]
[126 196]
[127 195]
[130 192]
[131 191]
[132 190]
[133 189]
[136 186]
[137 185]
[138 184]
[139 183]
[140 182]
[141 181]
[145 163]
[146 162]
[147 161]
[148 160]
[149 159]
[151 157]
[152 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
