%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 22:29:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCAAGAAAUUGUCCCAACAACCACCAAUUCUUACGGAGGAAUAUUAUUUAGCCAGCAGGAGUGGAGUUUGGUUUACUGAUUUUACUGUUUUGUGUUCAUGAAUCUUUAUUUUAAUGGAGUUAAAAGCACAGGAAAAUGUAUUUGGAAAUGCAGCUUAGUAUGAAUUCUAUUAAAGACACAAUUGGGCUCUGC\
) } def
/len { sequence length } bind def

/coor [
[40.91182327 170.36157227]
[34.85448074 171.63378906]
[25.65133286 183.47871399]
[16.44818115 195.32362366]
[7.43704796 207.31526184]
[-1.37973094 219.45053101]
[-10.19650936 231.58578491]
[-19.01328850 243.72103882]
[-27.83006668 255.85629272]
[-30.34759521 264.65115356]
[-36.88792801 268.11447144]
[-45.89905930 280.10610962]
[-54.91019440 292.09777832]
[-47.47233963 305.38677979]
[-46.08912277 320.55276489]
[-51.00019073 334.96807861]
[-61.35467529 346.13519287]
[-75.35859680 352.11935425]
[-90.58568573 351.88375854]
[-104.39776611 345.46920776]
[-114.40180969 333.98709106]
[-118.86455536 319.42675781]
[-117.01280212 304.31082153]
[-109.16737366 291.25827026]
[-96.68755341 282.53051758]
[-81.73552704 279.63967896]
[-66.90183258 283.08663940]
[-57.89070129 271.09500122]
[-48.87956619 259.10336304]
[-39.96532059 247.03950500]
[-31.14854431 234.90425110]
[-22.33176422 222.76899719]
[-13.51498604 210.63374329]
[-4.69820690 198.49848938]
[-4.55023527 193.71276855]
[-1.38540256 188.97230530]
[4.60326624 186.12048340]
[13.80641651 174.27555847]
[23.00956726 162.43064880]
[9.11035061 168.07083130]
[-5.85950232 169.02137756]
[-20.36048126 165.18449402]
[-32.90129852 156.95480347]
[-42.19224548 145.17863464]
[-47.27783585 131.06704712]
[-47.63506699 116.07129669]
[-43.22719955 101.73355865]
[-34.50754166 89.52833557]
[-22.37282944 80.71081543]
[-8.07100010 76.18778992]
[6.92713308 76.42442322]
[21.07915306 81.39637756]
[32.92966080 90.59233093]
[41.25993729 103.06655884]
[45.21329498 117.53621674]
[44.38316727 132.51322937]
[38.85525894 146.45678711]
[50.62565613 137.15852356]
[62.39605331 127.86026001]
[74.16645050 118.56199646]
[85.93685150 109.26373291]
[87.26424408 94.32257843]
[77.31740570 83.09491730]
[67.37056732 71.86725616]
[57.42372513 60.63959503]
[47.47688675 49.41193390]
[37.53004837 38.18427277]
[27.58320808 26.95660973]
[17.63636780 15.72894859]
[7.68952751 4.50128746]
[-7.25313187 -0.69751060]
[-9.90142155 -15.35478973]
[-25.76394081 -17.75479507]
[-33.65251541 -31.72440338]
[-27.51570320 -46.54732895]
[-12.06114292 -50.85268784]
[0.85574907 -41.33778381]
[1.32623947 -25.30163002]
[15.55743408 -20.90590858]
[18.91718864 -5.44555235]
[28.86402893 5.78210878]
[38.81086731 17.00976944]
[48.75770950 28.23743057]
[58.70454788 39.46509171]
[68.65139008 50.69275284]
[78.59822845 61.92041397]
[88.54506683 73.14807892]
[98.49190521 84.37574005]
[98.03389740 67.55619049]
[98.77587128 50.70541382]
[105.74671936 37.42357635]
[112.71756744 24.14173508]
[119.68841553 10.85989380]
[126.65926361 -2.42194629]
[133.63011169 -15.70378685]
[140.60095215 -28.98562622]
[147.57180786 -42.26746750]
[154.54264832 -55.54930878]
[150.06982422 -70.47015381]
[157.32846069 -83.84052277]
[171.58076477 -88.01272583]
[178.55162048 -101.29457092]
[185.52246094 -114.57640839]
[185.63850403 -121.20841980]
[188.64295959 -126.05211639]
[192.93783569 -128.16848755]
[200.33296204 -141.21887207]
[207.72807312 -154.26924133]
[215.12318420 -167.31961060]
[222.51831055 -180.36999512]
[229.91342163 -193.42036438]
[229.24032593 -209.80569458]
[243.23680115 -218.35150146]
[257.50445557 -210.26660156]
[257.36596680 -193.86802673]
[242.96379089 -186.02525330]
[235.56867981 -172.97486877]
[228.17356873 -159.92449951]
[220.77844238 -146.87413025]
[213.38333130 -133.82374573]
[205.98822021 -120.77337646]
[198.80430603 -107.60556030]
[191.83345032 -94.32372284]
[184.86260986 -81.04187775]
[189.52519226 -66.94237518]
[182.64495850 -53.37340164]
[167.82449341 -48.57846069]
[160.85363770 -35.29661942]
[153.88279724 -22.01478004]
[146.91194153 -8.73293877]
[139.94110107 4.54890108]
[132.97024536 17.83074188]
[125.99940491 31.11258125]
[119.02855682 44.39442062]
[112.05770874 57.67626190]
[115.91185760 64.11019897]
[130.90991211 63.86823654]
[123.62016296 76.97806549]
[127.47431183 83.41200256]
[142.47383118 83.53282928]
[157.47334290 83.65366364]
[172.47285461 83.77449036]
[187.47236633 83.89531708]
[202.47187805 84.01615143]
[216.46502686 75.46488953]
[230.73583984 83.54423523]
[230.60374451 99.94284821]
[216.20462036 107.79124451]
[202.35105896 99.01566315]
[187.35153198 98.89483643]
[172.35202026 98.77400208]
[157.35250854 98.65317535]
[142.35299683 98.53234863]
[127.35348511 98.41151428]
[121.25243378 112.11470032]
[131.37886047 123.18065643]
[141.50529480 134.24661255]
[151.63171387 145.31257629]
[161.75814819 156.37854004]
[171.88456726 167.44450378]
[182.01100159 178.51045227]
[190.12455750 182.73631287]
[192.20965576 189.83721924]
[202.15649414 201.06488037]
[215.61325073 200.32617188]
[226.87185669 207.37347412]
[231.93687439 219.44129944]
[229.16406250 232.03259277]
[238.92874146 243.41903687]
[248.69340515 254.80549622]
[264.51519775 257.46072388]
[272.17770386 271.55560303]
[265.80288696 286.27774048]
[250.28097534 290.33358765]
[237.51904297 280.61181641]
[237.30696106 264.57015991]
[227.54229736 253.18371582]
[217.77761841 241.79727173]
[200.97528076 241.23338318]
[189.54980469 228.44429016]
[190.92883301 211.01171875]
[180.98199463 199.78405762]
[170.94503784 188.63688660]
[160.81860352 177.57092285]
[150.69218445 166.50495911]
[140.56575012 155.43901062]
[130.43933105 144.37304688]
[120.31290436 133.30708313]
[110.18647766 122.24112701]
[95.23511505 121.03412628]
[83.46472168 130.33239746]
[71.69432068 139.63066101]
[59.92392349 148.92892456]
[48.15352631 158.22718811]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 39]
[3 38]
[4 37]
[5 34]
[6 33]
[7 32]
[8 31]
[9 30]
[11 29]
[12 28]
[13 27]
[57 194]
[58 193]
[59 192]
[60 191]
[61 190]
[62 88]
[63 87]
[64 86]
[65 85]
[66 84]
[67 83]
[68 82]
[69 81]
[70 80]
[72 78]
[90 135]
[91 134]
[92 133]
[93 132]
[94 131]
[95 130]
[96 129]
[97 128]
[98 127]
[101 124]
[102 123]
[103 122]
[106 121]
[107 120]
[108 119]
[109 118]
[110 117]
[111 116]
[139 154]
[140 153]
[141 152]
[142 151]
[143 150]
[144 149]
[155 189]
[156 188]
[157 187]
[158 186]
[159 185]
[160 184]
[161 183]
[163 182]
[164 181]
[168 178]
[169 177]
[170 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
