%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 01:27:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCCCCUGUGGCAAACCAGGAAGGCCAAGGCUGCGGGGCAGGGAAGCCUGGCAAGAGGAAGGCGCCUGGGGUCAAGCUCAGAGCCACUCCACUUGGCUCCAGGGGGGAGACGGGGAUUAGGCAUCCCAGAGGGGCAGAGGAAGAGCCGCUGGCUGCGAAGAGUCAAUAAACAGCCUUGAUACCUGUC\
) } def
/len { sequence length } bind def

/coor [
[341.62631226 214.19126892]
[332.72702026 211.90922546]
[325.78063965 205.68804932]
[322.43768311 196.83546448]
[308.06784058 192.53341675]
[293.69799805 188.23136902]
[279.32815552 183.92932129]
[264.95831299 179.62727356]
[250.54664612 183.38931274]
[239.54530334 172.01911926]
[225.17546082 167.71707153]
[210.80561829 163.41502380]
[220.09004211 175.19633484]
[222.93696594 189.92369080]
[218.71217346 204.31643677]
[208.35681152 215.16845703]
[194.17761230 220.06236267]
[179.33312988 217.90797424]
[167.13011169 209.18522644]
[160.28689575 195.83717346]
[160.32786560 180.83723450]
[167.24391174 167.52677917]
[179.49440002 158.87081909]
[194.34742737 156.79728699]
[180.99934387 149.95411682]
[167.65127563 143.11096191]
[154.30319214 136.26780701]
[140.95512390 129.42463684]
[127.60704041 122.58148193]
[114.25896454 115.73832703]
[103.72859192 125.61624146]
[86.79963684 127.53460693]
[69.68140411 117.85287476]
[54.79781342 119.71803284]
[39.91422653 121.58318329]
[27.18323898 130.97640991]
[13.59265709 124.88170624]
[-1.29093134 126.74686432]
[-16.17451859 128.61201477]
[-31.05810738 130.47717285]
[-40.55801392 143.10758972]
[-56.21799469 145.23843384]
[-68.74726105 135.60552979]
[-70.71242523 119.92388916]
[-60.94758987 107.49716949]
[-45.24605179 105.69790649]
[-32.92326355 115.59358215]
[-18.03967476 113.72843170]
[-3.15608692 111.86327362]
[11.72750092 109.99811554]
[23.39391518 100.73831177]
[38.04907227 106.69960022]
[52.93265915 104.83444214]
[67.81624603 102.96928406]
[70.67196655 96.03424072]
[61.51581955 84.15296173]
[76.38341522 82.16415405]
[79.23913574 75.22910309]
[69.98458099 63.42431259]
[60.73002243 51.61951828]
[43.49578094 45.15884018]
[41.68370438 27.71175957]
[32.23421478 16.06241989]
[22.78472137 4.41307926]
[10.04873657 2.29720306]
[2.41886163 -7.61601496]
[3.55913091 -19.67061996]
[-5.69542599 -31.47541428]
[-14.94998360 -43.28020859]
[-24.20454025 -55.08500290]
[-33.45909882 -66.88980103]
[-49.17692184 -68.54072571]
[-59.05865479 -80.87469482]
[-57.24164200 -96.57418823]
[-44.80388260 -106.32496643]
[-29.12448120 -104.34207153]
[-19.50574493 -91.80191803]
[-21.65430260 -76.14435577]
[-12.39974594 -64.33956146]
[-3.14518857 -52.53476715]
[6.10936832 -40.72997284]
[15.36392593 -28.92517662]
[31.97034836 -23.27619171]
[34.43406296 -5.03641176]
[43.88355255 6.61292791]
[53.33304214 18.26226807]
[65.33914948 19.83298874]
[73.30601501 29.47746658]
[72.53482056 42.36495972]
[81.78937531 54.16975403]
[91.04393005 65.97454834]
[118.45501709 78.66323090]
[121.10211945 102.39024353]
[134.45019531 109.23340607]
[147.79827881 116.07656860]
[161.14634705 122.91972351]
[174.49443054 129.76289368]
[187.84251404 136.60604858]
[201.19058228 143.44920349]
[215.10766602 149.04518127]
[229.47750854 153.34722900]
[243.84735107 157.64927673]
[259.28686523 154.19496155]
[269.26037598 165.25743103]
[283.63021851 169.55947876]
[298.00006104 173.86152649]
[312.36990356 178.16357422]
[326.73974609 182.46562195]
[347.23132324 176.23786926]
[360.79269409 191.78265381]
[375.35910034 195.36308289]
[389.92553711 198.94349670]
[404.49194336 202.52392578]
[419.05838013 206.10433960]
[433.62478638 209.68476868]
[447.03659058 201.76254272]
[461.75799561 205.60110474]
[469.22796631 218.43601990]
[483.79440308 222.01644897]
[498.36080933 225.59687805]
[512.95648193 229.05610657]
[527.58038330 232.39392090]
[542.20434570 235.73173523]
[550.26452637 221.22991943]
[562.68872070 209.98867798]
[578.22247314 203.28506470]
[595.25079346 201.93075562]
[611.96606445 206.17518616]
[626.55975342 215.66783142]
[637.41815186 229.48469543]
[643.30047607 246.21746826]
[658.29577637 245.84350586]
[671.89874268 237.76455688]
[684.81500244 245.18215942]
[699.81030273 244.80819702]
[714.80566406 244.43423462]
[722.73211670 231.19888306]
[736.56597900 224.37045288]
[751.89294434 226.12786865]
[763.82214355 235.91033936]
[768.54711914 250.59634399]
[764.56005859 265.49960327]
[753.13330078 275.86453247]
[737.91302490 278.38375854]
[723.75598145 272.25338745]
[715.17962646 259.42956543]
[700.18426514 259.80352783]
[685.18896484 260.17749023]
[672.65850830 268.22967529]
[658.66973877 260.83883667]
[643.67437744 261.21279907]
[639.73193359 275.68542480]
[652.46588135 283.61306763]
[665.19976807 291.54071045]
[677.93371582 299.46832275]
[693.26824951 295.64389038]
[706.77252197 303.85427856]
[710.43463135 319.22842407]
[702.08190918 332.64511108]
[686.66992188 336.14447021]
[673.34228516 327.65039062]
[670.00604248 312.20223999]
[657.27215576 304.27462769]
[644.53820801 296.34698486]
[631.80432129 288.41934204]
[620.33483887 298.53372192]
[606.61486816 304.99868774]
[591.76074219 307.36535645]
[576.95971680 305.51519775]
[563.37542725 299.66403198]
[552.05609131 290.33929443]
[543.85388184 278.33340454]
[539.36083984 264.63665771]
[538.86651611 250.35565186]
[524.24261475 247.01783752]
[509.61868286 243.68002319]
[502.38421631 245.25978088]
[494.78039551 240.16328430]
[480.21395874 236.58287048]
[465.64755249 233.00244141]
[453.07864380 240.91180420]
[438.25521851 237.48825073]
[430.04437256 224.25119019]
[415.47793579 220.67076111]
[400.91152954 217.09034729]
[386.34509277 213.50991821]
[371.77868652 209.92948914]
[357.21228027 206.34907532]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 108]
[5 107]
[6 106]
[7 105]
[8 104]
[10 102]
[11 101]
[12 100]
[24 99]
[25 98]
[26 97]
[27 96]
[28 95]
[29 94]
[30 93]
[33 54]
[34 53]
[35 52]
[37 50]
[38 49]
[39 48]
[40 47]
[58 91]
[59 90]
[60 89]
[62 86]
[63 85]
[64 84]
[67 82]
[68 81]
[69 80]
[70 79]
[71 78]
[110 188]
[111 187]
[112 186]
[113 185]
[114 184]
[115 183]
[118 180]
[119 179]
[120 178]
[121 176]
[122 175]
[123 174]
[131 151]
[132 150]
[134 148]
[135 147]
[136 146]
[152 165]
[153 164]
[154 163]
[155 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
