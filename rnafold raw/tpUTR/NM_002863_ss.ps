%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 03:46:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCUAGAAUUGUCUCUAGAAAACAUAGCUUCUUACUGAACUUGAACAUUUUUACAACAUUCACUGGUUUUUGUUUUGUUAGCUAAUAAUCUAUAAUAGUUGAGUAUCUCUGGGAAUGGGGAGGGAAAUUAUAUGUAAUAGAGCUUAAAAAUAAAGUGUCAAUUUCCAAGGGCUA\
) } def
/len { sequence length } bind def

/coor [
[-24.05324745 397.99566650]
[-36.28400803 410.91604614]
[-53.66309738 413.90582275]
[-59.64978790 427.65933228]
[-65.63648224 441.41287231]
[-71.62317657 455.16638184]
[-77.60986328 468.91992188]
[-83.59655762 482.67346191]
[-77.57759857 497.28671265]
[-83.73173523 511.84356689]
[-98.40782166 517.70770264]
[-112.89880371 511.39999390]
[-118.60743713 496.66275024]
[-112.14688110 482.23925781]
[-97.35008240 476.68676758]
[-91.36339569 462.93322754]
[-85.37670135 449.17968750]
[-79.39000702 435.42617798]
[-73.40332031 421.67263794]
[-67.41662598 407.91912842]
[-75.07614136 398.45391846]
[-77.98938751 386.55697632]
[-75.54106140 374.48196411]
[-68.13758850 364.54336548]
[-57.14112854 358.67288208]
[-44.61926651 358.04415894]
[-38.14549255 344.51306152]
[-31.67171860 330.98196411]
[-25.19794655 317.45089722]
[-18.72417259 303.91979980]
[-18.67360878 296.50491333]
[-12.01218891 290.20654297]
[-5.29793072 276.79318237]
[1.41632748 263.37979126]
[-2.68035364 253.97558594]
[-0.86935061 243.65554810]
[6.48682880 235.88844299]
[17.12181091 233.41992188]
[24.31054497 220.25473022]
[31.49928093 207.08955383]
[30.80794716 192.21099854]
[44.21253204 183.80696106]
[51.40126419 170.64178467]
[58.59000015 157.47659302]
[65.77873230 144.31141663]
[66.22610474 136.90986633]
[73.21508789 130.97706604]
[80.63766479 117.94229126]
[88.06024170 104.90751648]
[75.21937561 112.66072083]
[60.73198318 116.54859161]
[45.73464203 116.26611328]
[31.40393448 111.83544159]
[18.86413956 103.60419464]
[9.09903717 92.21810913]
[2.87472701 78.57048035]
[0.67952126 63.73197937]
[2.68564034 48.86673355]
[8.73569870 35.14096069]
[18.35505295 23.63148689]
[30.78903961 15.24125671]
[45.06217957 10.62850666]
[60.05471039 10.15511990]
[74.59042358 13.85823441]
[87.52895355 21.44733047]
[97.85523987 32.32702637]
[104.75916290 45.64377594]
[107.69908905 60.35284805]
[106.44436646 75.30027771]
[101.09501648 89.31056213]
[112.60478210 79.69155121]
[124.11454773 70.07254791]
[135.62431335 60.45354462]
[147.13407898 50.83453751]
[158.64384460 41.21553421]
[170.15362549 31.59652710]
[181.66339111 21.97752190]
[181.31484985 8.49363995]
[188.69691467 -2.56188536]
[200.92123413 -7.26772118]
[213.43321228 -4.11114645]
[225.11282349 -13.52318192]
[236.79244995 -22.93521690]
[222.07293701 -25.82237816]
[213.56944275 -38.17918777]
[216.13137817 -52.95878601]
[228.29769897 -61.73264313]
[243.13018799 -59.49718857]
[252.17015076 -47.52726364]
[250.26153564 -32.64779663]
[262.88034058 -40.75740814]
[275.49914551 -48.86701965]
[288.11795044 -56.97663498]
[300.73675537 -65.08624268]
[308.16308594 -79.05621338]
[323.05303955 -79.42806244]
[335.67184448 -87.53767395]
[348.29064941 -95.64729309]
[351.76638794 -110.83139038]
[364.67916870 -118.87593079]
[379.13348389 -115.46877289]
[391.75228882 -123.57838440]
[404.37109375 -131.68798828]
[405.09957886 -148.57122803]
[415.63378906 -161.57205200]
[431.67761230 -165.70236206]
[446.87252808 -159.52932739]
[459.34457397 -167.86288452]
[471.81661987 -176.19642639]
[484.28866577 -184.52998352]
[496.76071167 -192.86354065]
[497.23532104 -208.37335205]
[506.76232910 -220.62144470]
[521.67840576 -224.89817810]
[536.24798584 -219.55905151]
[544.86883545 -206.65707397]
[544.22601318 -191.15332031]
[534.56665039 -179.00929260]
[519.60510254 -174.89463806]
[505.09426880 -180.39149475]
[492.62222290 -172.05793762]
[480.15017700 -163.72439575]
[467.67813110 -155.39083862]
[455.20608521 -147.05728149]
[455.91931152 -133.70771790]
[449.88742065 -121.65598297]
[438.59371948 -114.10528564]
[424.93545532 -113.12154388]
[412.48071289 -119.06919098]
[399.86190796 -110.95957947]
[387.24310303 -102.84996796]
[384.33782959 -88.28648376]
[371.65609741 -79.88242340]
[356.40026855 -83.02848816]
[343.78146362 -74.91887665]
[331.16265869 -66.80926514]
[324.63888550 -53.41934967]
[308.84634399 -52.46744156]
[296.22753906 -44.35783005]
[283.60873413 -36.24821854]
[270.98995972 -28.13860512]
[258.37115479 -20.02899361]
[246.20448303 -11.25559425]
[234.52487183 -1.84355867]
[222.84524536 7.56847620]
[221.77418518 24.33753395]
[208.65834045 35.37266922]
[191.28239441 33.48728943]
[179.77262878 43.10629272]
[168.26286316 52.72529984]
[156.75308228 62.34430313]
[145.24331665 71.96331024]
[133.73355103 81.58231354]
[122.22378540 91.20132446]
[110.71401978 100.82032776]
[101.09501648 112.33009338]
[93.67243958 125.36486816]
[86.24986267 138.39964294]
[78.94392395 151.50015259]
[71.75518799 164.66532898]
[64.56645203 177.83052063]
[57.37771606 190.99569702]
[57.55486298 206.81591797]
[44.66446686 214.27827454]
[37.47573090 227.44346619]
[30.28699493 240.60865784]
[31.70674515 260.69580078]
[14.82970619 270.09405518]
[8.11544800 283.50741577]
[1.40119016 296.92080688]
[-5.19308805 310.39358521]
[-11.66686058 323.92465210]
[-18.14063454 337.45574951]
[-24.61440659 350.98684692]
[-31.08818054 364.51791382]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 20]
[4 19]
[5 18]
[6 17]
[7 16]
[8 15]
[26 175]
[27 174]
[28 173]
[29 172]
[30 171]
[32 170]
[33 169]
[34 168]
[38 166]
[39 165]
[40 164]
[42 162]
[43 161]
[44 160]
[45 159]
[47 158]
[48 157]
[49 156]
[70 155]
[71 154]
[72 153]
[73 152]
[74 151]
[75 150]
[76 149]
[77 148]
[81 145]
[82 144]
[83 143]
[90 142]
[91 141]
[92 140]
[93 139]
[94 138]
[96 136]
[97 135]
[98 134]
[101 131]
[102 130]
[103 129]
[107 124]
[108 123]
[109 122]
[110 121]
[111 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
