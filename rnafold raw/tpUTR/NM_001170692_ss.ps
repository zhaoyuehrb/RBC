%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 07:34:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAAGCCUGAAGAUUAAACAGUAAUCAUUUUUGUCAACCACUCCAGGAAGAGUCAUUACUACAUAUGCUAGCCAAAUCAAUCCAUGCAGAUGAUAUAUUAAAAUCUGUAUAAAGGGUAAAGUCUUACAUUCCAAAGAUGUGAUUACUUUUCUUCUAAUUUCUUCCUGUGAAUAAUCAAAUAUAUUCUAUUUAACAUAAACAGAA\
) } def
/len { sequence length } bind def

/coor [
[131.26553345 323.65170288]
[116.22717285 327.09423828]
[101.72267914 321.83847046]
[92.38039398 309.56143188]
[91.18139648 294.18075562]
[98.50828552 280.60427856]
[112.02307892 273.16427612]
[112.94199371 258.19244385]
[113.86090851 243.22061157]
[106.74595642 240.84840393]
[92.51604462 236.10397339]
[85.40108490 233.73176575]
[77.15133667 246.25939941]
[68.90159607 258.78704834]
[60.65184784 271.31466675]
[52.40209961 283.84231567]
[54.21601868 299.78247070]
[42.78290558 311.03695679]
[26.87326622 308.97229004]
[18.69161415 295.17227173]
[24.51421356 280.22314453]
[39.87446213 275.59255981]
[48.12421036 263.06491089]
[56.37395477 250.53729248]
[64.62370300 238.00964355]
[72.87345123 225.48200989]
[62.74714279 236.54808044]
[49.63869858 243.83976746]
[34.89619446 246.60719299]
[20.03576088 244.56573486]
[6.58565521 237.92535400]
[-4.07090759 227.36894226]
[-10.83799839 213.98214722]
[-13.01968575 199.14164734]
[-10.39160347 184.37367249]
[-3.22402596 171.19696045]
[7.74592972 160.96661377]
[21.39010620 154.73472595]
[36.30532837 153.14218140]
[50.95770264 156.35276794]
[63.84037399 164.03631592]
[73.62847900 175.40261841]
[79.31539917 189.28279114]
[80.31635284 204.24870300]
[81.69364166 189.31207275]
[83.07093811 174.37544250]
[84.44822693 159.43881226]
[85.82552338 144.50216675]
[87.20281982 129.56553650]
[88.58010864 114.62889862]
[80.04459381 102.29419708]
[65.58078766 98.31947327]
[56.47177887 99.06293488]
[50.92668915 94.17143250]
[36.52549362 89.97553253]
[22.12429810 85.77962494]
[9.93903828 95.38686371]
[-5.56732607 95.96332550]
[-18.43227959 87.28734589]
[-23.70898628 72.69502258]
[-19.36844254 57.79739380]
[-7.07967901 48.32290649]
[8.43202591 47.91469574]
[21.20210457 56.72972107]
[26.32020187 71.37843323]
[40.72139740 75.57433319]
[55.12258911 79.77024078]
[69.55551147 83.85566711]
[84.01931763 87.83039093]
[89.69427490 82.92684174]
[78.90667725 72.50437927]
[68.11907959 62.08191299]
[54.74982452 55.28022003]
[52.93942642 40.38986969]
[64.28935242 30.58277130]
[78.75952911 34.53421402]
[83.54974365 48.74875641]
[92.29696655 60.93424606]
[101.04418945 73.11972809]
[106.71914673 68.21617889]
[104.88477325 53.32876205]
[103.05039215 38.44135284]
[101.21601868 23.55393791]
[99.03993225 8.71262264]
[96.52329254 -6.07475471]
[94.00665283 -20.86213112]
[91.49001312 -35.64950943]
[88.97337341 -50.43688583]
[86.45673370 -65.22426605]
[83.94009399 -80.01164246]
[81.42345428 -94.79901886]
[66.85021973 -99.47657013]
[56.12830353 -110.39897919]
[51.72151947 -125.05636597]
[54.64251709 -140.08055115]
[64.22006989 -152.01910400]
[78.25332642 -158.12863159]
[93.51754761 -157.00520325]
[106.50512695 -148.90696716]
[114.23162079 -135.69485474]
[114.92152405 -120.40490723]
[108.41631317 -106.55063629]
[96.21083069 -97.31565857]
[98.72747040 -82.52828217]
[101.24411011 -67.74090576]
[103.76074982 -52.95352554]
[106.27738953 -38.16614914]
[108.79402924 -23.37877274]
[111.31066895 -8.59139442]
[113.82730865 6.19598246]
[116.48121643 8.52423191]
[118.13704681 12.25559425]
[118.14673615 16.90591621]
[116.10343170 21.71956062]
[117.93780518 36.60697174]
[119.77218628 51.49438477]
[121.60655975 66.38179779]
[135.34072876 72.41277313]
[147.54318237 63.68923569]
[159.74563599 54.96569824]
[171.94810486 46.24216461]
[184.15055847 37.51862717]
[191.37510681 20.58326912]
[208.89221191 19.56011772]
[220.95956421 10.65061283]
[233.02690125 1.74110830]
[245.09423828 -7.16839647]
[257.16159058 -16.07789993]
[269.22891235 -24.98740578]
[281.29626465 -33.89690781]
[285.09671021 -49.48332214]
[299.71218872 -56.09898758]
[313.93096924 -48.66893768]
[316.84564209 -32.89286804]
[306.22027588 -20.87283134]
[290.20578003 -21.82956886]
[278.13842773 -12.92006397]
[266.07107544 -4.01055908]
[254.00375366 4.89894533]
[241.93640137 13.80844975]
[229.86906433 22.71795464]
[217.80172729 31.62745857]
[215.69020081 43.54132462]
[205.70547485 51.06230164]
[192.87408447 49.72108459]
[180.67163086 58.44461823]
[168.46917725 67.16815186]
[156.26672363 75.89169312]
[144.06427002 84.61522675]
[158.45437622 88.84899139]
[170.06561279 98.34526825]
[177.07029724 111.60929108]
[178.36587524 126.55323029]
[173.74839783 140.82484436]
[163.94470215 152.17770386]
[150.49790955 158.82479858]
[135.52464294 159.71986389]
[121.38175201 154.72200012]
[110.29541016 144.61788940]
[104.01065826 130.99797058]
[103.51674652 116.00619507]
[102.13945007 130.94282532]
[100.76216125 145.87945557]
[99.38486481 160.81610107]
[98.00757599 175.75273132]
[96.63027954 190.68936157]
[95.25298309 205.62600708]
[128.63562012 196.80606079]
[166.55094910 221.51383972]
[177.74925232 231.49372864]
[188.94754028 241.47361755]
[200.14584351 251.45350647]
[211.34414673 261.43338013]
[226.47621155 257.99826050]
[240.72413635 264.14453125]
[248.60928345 277.50881958]
[247.09965515 292.95227051]
[236.77574158 304.53659058]
[221.60729980 307.80737305]
[207.42689514 301.50689697]
[199.68719482 288.05786133]
[201.36425781 272.63168335]
[190.16595459 262.65179443]
[178.96766663 252.67192078]
[167.76936340 242.69203186]
[156.57106018 232.71214294]
[149.63648987 235.56898499]
[155.35017395 249.43815613]
[161.06387329 263.30731201]
[166.77757263 277.17648315]
[172.49125671 291.04565430]
[182.21096802 302.47048950]
[174.34869385 315.24487305]
[159.77000427 311.71472168]
[158.62210083 296.75933838]
[152.90840149 282.89016724]
[147.19470215 269.02102661]
[141.48101807 255.15185547]
[135.76731873 241.28268433]
[128.83273315 244.13952637]
[127.91382599 259.11135864]
[126.99491119 274.08319092]
[139.49841309 283.12011719]
[145.11001587 297.49069214]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 202]
[8 201]
[9 200]
[12 26]
[13 25]
[14 24]
[15 23]
[16 22]
[44 167]
[45 166]
[46 165]
[47 164]
[48 163]
[49 162]
[50 161]
[51 69]
[52 68]
[54 67]
[55 66]
[56 65]
[80 117]
[81 116]
[82 115]
[83 114]
[84 110]
[85 109]
[86 108]
[87 107]
[88 106]
[89 105]
[90 104]
[91 103]
[118 149]
[119 148]
[120 147]
[121 146]
[122 145]
[124 142]
[125 141]
[126 140]
[127 139]
[128 138]
[129 137]
[130 136]
[169 186]
[170 185]
[171 184]
[172 183]
[173 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
