%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 12:59:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCGGCCGGAGCGGGGCCUGCAUGGGCGGGUCUGUGGGGGGGCUUGGCCUGAUGGUGGGCGGGGCCCCGCCCACAGGGCCGACCCCAAUACACCAGCGACUCAACCUUGA\
) } def
/len { sequence length } bind def

/coor [
[100.59941101 174.39984131]
[101.43873596 159.42185974]
[92.08638763 171.14933777]
[89.53138733 186.76286316]
[75.54679871 191.88932800]
[66.19445038 203.61679077]
[56.84210205 215.34426880]
[47.48975754 227.07174683]
[50.76541901 242.36239624]
[43.40043640 256.15698242]
[28.87232971 261.94216919]
[14.04082584 256.98629761]
[5.90890598 243.62944031]
[8.31621552 228.17825317]
[20.12609673 217.92834473]
[35.76228333 217.71939087]
[45.11463165 205.99191284]
[54.46697617 194.26445007]
[63.81932449 182.53697205]
[65.70538330 167.76226807]
[80.35891724 161.79698181]
[89.71126556 150.06951904]
[89.61710358 146.12565613]
[90.89801788 142.10726929]
[93.57733917 138.50305176]
[93.15664673 123.50894928]
[92.73595428 108.51484680]
[92.10501099 93.52812195]
[91.26396179 78.55171967]
[90.42290497 63.57531738]
[81.92398834 50.23069000]
[88.93549347 37.08960724]
[88.09443665 22.11320496]
[87.25337982 7.13680267]
[86.41232300 -7.83959961]
[85.57126617 -22.81600189]
[84.73020935 -37.79240417]
[83.88915253 -52.76880646]
[83.04809570 -67.74520874]
[81.99708557 -82.70834351]
[80.73632812 -97.65526581]
[79.47557068 -112.60218811]
[78.21481323 -127.54911041]
[76.95405579 -142.49603271]
[75.69329834 -157.44294739]
[74.43254089 -172.38987732]
[65.56270599 -185.49089050]
[72.20289612 -198.82345581]
[70.94213867 -213.77037048]
[69.68138123 -228.71730042]
[68.42062378 -243.66421509]
[56.18537140 -253.66792297]
[54.69058609 -269.40136719]
[64.82309723 -281.53018188]
[80.57145691 -282.85852051]
[92.59245300 -272.59835815]
[93.75424194 -256.83682251]
[83.36754608 -244.92497253]
[84.62830353 -229.97805786]
[85.88906097 -215.03112793]
[87.14981842 -200.08421326]
[95.92947388 -188.05229187]
[89.37946320 -173.65063477]
[90.64022064 -158.70370483]
[91.90097809 -143.75679016]
[93.16173553 -128.80986023]
[94.42249298 -113.86294556]
[95.68325043 -98.91602325]
[96.94400787 -83.96910095]
[100.69582367 -77.47547913]
[98.02449799 -68.58626556]
[98.86555481 -53.60986328]
[99.70661163 -38.63346100]
[100.54766846 -23.65705872]
[101.38872528 -8.68065643]
[102.22978210 6.29574585]
[103.07083893 21.27214813]
[103.91189575 36.24855042]
[112.35064697 48.52196503]
[105.39930725 62.73426056]
[106.24036407 77.71066284]
[107.08141327 92.68706512]
[110.68595123 100.03698730]
[107.73004913 108.09415436]
[108.15074158 123.08825684]
[108.57144165 138.08235168]
[116.90637207 125.61122894]
[127.68886566 115.18348694]
[140.43174744 107.27026367]
[154.55924988 102.22910309]
[169.43310547 100.28777313]
[184.38124084 101.53398132]
[198.72830200 105.91143036]
[211.82603455 113.22233582]
[223.08267212 123.13636780]
[231.98960876 135.20559692]
[238.14442444 148.88471985]
[241.26902771 163.55567932]
[241.22222900 178.55560303]
[238.00616455 193.20677185]
[231.76612854 206.84722900]
[222.78405762 218.86065674]
[211.46577454 228.70425415]
[198.32267761 235.93330383]
[183.94859314 240.22114563]
[168.99296570 241.37406921]
[154.13153076 239.33998108]
[140.03573608 234.21076965]
[127.34248352 226.21820068]
[116.62525940 215.72338867]
[108.36829376 203.20050049]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 22]
[3 21]
[5 19]
[6 18]
[7 17]
[8 16]
[25 86]
[26 85]
[27 84]
[28 82]
[29 81]
[30 80]
[32 78]
[33 77]
[34 76]
[35 75]
[36 74]
[37 73]
[38 72]
[39 71]
[40 69]
[41 68]
[42 67]
[43 66]
[44 65]
[45 64]
[46 63]
[48 61]
[49 60]
[50 59]
[51 58]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
