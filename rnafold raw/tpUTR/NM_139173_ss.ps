%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 15:32:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGUUUACCUGUCAUCAUCUGCCUGCUUCUUUUAAUGAAUUAUUUCACAUGACAGAAGAAUUUUAAAGUAGAAAUAUGUGGGGACUGUACAGAGAAUCCAGGAUUUAGUAAACAUGUGAUUUCAGUACAGGGCUUUUCUUGGACUUUUUACUCCAAAGUUAAUUUAAUAAAAAUAAUAUUAAAUGGAA\
) } def
/len { sequence length } bind def

/coor [
[73.80255127 131.16075134]
[70.88042450 116.44812775]
[81.18210602 105.54502106]
[66.23333740 106.78371429]
[51.28457260 108.02240753]
[36.33580399 109.26109314]
[30.66941452 112.72353363]
[24.96403885 112.78208923]
[20.87366486 110.28523254]
[5.89211607 111.02899170]
[-9.08943367 111.77275085]
[-24.07098389 112.51650238]
[-32.50459671 116.07298279]
[-39.30597687 113.14662933]
[-54.29777527 113.64257812]
[-69.28957367 114.13852692]
[-80.99814606 127.12422180]
[-98.13813782 127.62341309]
[-110.10192108 115.81517792]
[-125.08347321 116.55893707]
[-140.06501770 117.30269623]
[-155.04656982 118.04644775]
[-170.02812195 118.79020691]
[-180.40913391 137.45005798]
[-199.81690979 146.02761841]
[-220.34228516 141.20436096]
[-233.72682190 125.08721924]
[-248.56105042 127.31117249]
[-263.39526367 129.53512573]
[-278.22949219 131.75907898]
[-293.06369019 133.98304749]
[-305.56417847 143.68089294]
[-319.29794312 137.91609192]
[-334.13217163 140.14004517]
[-348.96640015 142.36399841]
[-363.09082031 154.16552734]
[-379.15979004 147.13082886]
[-393.95523071 149.59974670]
[-408.75064087 152.06866455]
[-423.54605103 154.53758240]
[-435.85397339 165.37490845]
[-451.30471802 159.87893677]
[-454.00393677 143.70344543]
[-441.17486572 133.48840332]
[-426.01498413 139.74217224]
[-411.21954346 137.27325439]
[-396.42413330 134.80433655]
[-381.62872314 132.33541870]
[-374.33755493 122.66906738]
[-362.01824951 120.49966431]
[-351.19033813 127.52978516]
[-336.35614014 125.30583191]
[-321.52191162 123.08187866]
[-310.08245850 113.54309845]
[-295.28765869 119.14881897]
[-280.45343018 116.92486572]
[-265.61920166 114.70091248]
[-250.78500366 112.47695923]
[-235.95077515 110.25300598]
[-234.03172302 101.32226562]
[-229.71937561 93.24304199]
[-223.33496094 86.64456177]
[-215.36163330 82.04473114]
[-206.40792847 79.80953217]
[-197.16131592 80.12388611]
[-188.33541870 82.97644043]
[-180.61494446 88.15947723]
[-174.60255432 95.28394318]
[-170.77188110 103.80865479]
[-155.79032898 103.06490326]
[-140.80877686 102.32114410]
[-125.82723236 101.57738495]
[-110.84568024 100.83363342]
[-103.61100006 90.15852356]
[-91.36405182 85.53572083]
[-78.50292206 88.86511230]
[-69.78552246 99.14672852]
[-54.79372406 98.65077972]
[-39.80192566 98.15483093]
[-24.81473923 97.53495789]
[-9.83318996 96.79119873]
[5.14835978 96.04743958]
[20.12990952 95.30368805]
[35.09711456 94.31232452]
[50.04587936 93.07363892]
[64.99465179 91.83494568]
[79.94341278 90.59625244]
[104.90241241 79.76311493]
[115.93827057 69.60388947]
[126.97412872 59.44466782]
[131.88691711 44.40554810]
[146.49099731 41.47811890]
[157.52685547 31.31889534]
[168.56271362 21.15967178]
[179.59857178 11.00044918]
[181.94348145 4.78772926]
[186.40986633 1.23720598]
[191.17134094 0.69521600]
[202.53706360 -9.09357071]
[213.90278625 -18.88235664]
[225.26850891 -28.67114258]
[236.63423157 -38.45993042]
[247.99995422 -48.24871445]
[259.36566162 -58.03750229]
[258.81573486 -71.50606537]
[266.02304077 -82.66618347]
[278.16433716 -87.55970764]
[290.71713257 -84.60569763]
[302.24313354 -94.20522308]
[313.76916504 -103.80475616]
[312.05450439 -114.36665344]
[314.86666870 -124.60684204]
[321.63128662 -132.68763733]
[331.07101440 -137.18795776]
[341.44644165 -137.35304260]
[350.87646484 -133.22019958]
[362.86425781 -142.23641968]
[374.85208130 -151.25263977]
[386.83990479 -160.26885986]
[387.49194336 -175.89283752]
[398.07244873 -187.40748596]
[413.58563232 -189.37591553]
[426.70666504 -180.86871338]
[431.24017334 -165.90270996]
[425.04559326 -151.54440308]
[411.04779053 -144.57333374]
[395.85614014 -148.28103638]
[383.86831665 -139.26481628]
[371.88049316 -130.24861145]
[359.89266968 -121.23238373]
[358.60769653 -101.80885315]
[343.23324585 -89.37899017]
[323.36868286 -92.27873230]
[311.84268188 -82.67920685]
[300.31665039 -73.07968140]
[299.51211548 -56.28923416]
[286.56372070 -45.04789734]
[269.15444946 -46.67177963]
[257.78872681 -36.88299179]
[246.42301941 -27.09420586]
[235.05729675 -17.30541992]
[223.69157410 -7.51663399]
[212.32585144 2.27215266]
[200.96012878 12.06093884]
[189.75779724 22.03630829]
[178.72193909 32.19552994]
[167.68608093 42.35475540]
[156.65022278 52.51397705]
[152.52679443 66.82643890]
[137.13334656 70.48052979]
[126.09749603 80.63974762]
[115.06163788 90.79897308]
[113.69940186 105.73699188]
[122.71562195 117.72480774]
[131.73184204 129.71263123]
[140.74804688 141.70045471]
[142.89587402 126.85501862]
[153.99035645 116.75984955]
[168.97204590 116.01869965]
[181.00874329 124.96955109]
[184.61131287 139.53050232]
[178.13687134 153.06126404]
[164.53796387 159.39132690]
[150.01683044 155.63442993]
[157.58831787 168.58326721]
[165.15980530 181.53211975]
[172.73129272 194.48097229]
[180.30276489 207.42980957]
[187.87425232 220.37866211]
[195.44573975 233.32751465]
[210.88989258 235.77949524]
[221.10560608 247.61897278]
[221.26933289 263.25570679]
[211.30375671 275.30648804]
[195.91433716 278.08132935]
[182.36747742 270.27001953]
[177.05958557 255.56083679]
[182.49688721 240.89898682]
[174.92539978 227.95014954]
[167.35392761 215.00129700]
[159.78244019 202.05244446]
[152.21095276 189.10360718]
[144.63948059 176.15475464]
[137.06799316 163.20590210]
[128.76023865 150.71667480]
[119.74401855 138.72885132]
[110.72779846 126.74102783]
[101.71157837 114.75320435]
[100.41982269 129.69747925]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 87]
[4 86]
[5 85]
[6 84]
[9 83]
[10 82]
[11 81]
[12 80]
[14 79]
[15 78]
[16 77]
[19 73]
[20 72]
[21 71]
[22 70]
[23 69]
[27 59]
[28 58]
[29 57]
[30 56]
[31 55]
[33 53]
[34 52]
[35 51]
[37 48]
[38 47]
[39 46]
[40 45]
[88 152]
[89 151]
[90 150]
[92 148]
[93 147]
[94 146]
[95 145]
[98 144]
[99 143]
[100 142]
[101 141]
[102 140]
[103 139]
[104 138]
[108 135]
[109 134]
[110 133]
[116 130]
[117 129]
[118 128]
[119 127]
[153 188]
[154 187]
[155 186]
[156 185]
[164 184]
[165 183]
[166 182]
[167 181]
[168 180]
[169 179]
[170 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
