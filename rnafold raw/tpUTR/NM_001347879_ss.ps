%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 00:53:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAUGUACCACUCGGGACCCUUUCUCUGGAUGUUUGCCAUCUAAUAUGUAUAAAAAGAUCAGAAAUAUGAAAAAAAGGUAACAAUGACAUUAACACUUGGUCUCAUCAUUAUCACACAAGUAGGCUUAUGCUGCCACUUCCAUGGCAGAGUCUGAGUUAGUCCUGAAAUAAUUGAUUUUUAUAUUAUGAAGUUUAUUAACUUUUUUCCC\
) } def
/len { sequence length } bind def

/coor [
[220.62915039 587.25445557]
[211.49534607 574.25146484]
[204.48133850 559.99029541]
[199.75653076 544.81384277]
[197.43527222 529.08709717]
[197.57408142 513.18835449]
[200.17033386 497.50009155]
[205.16223145 482.39996338]
[212.43031311 468.25149536]
[221.80033875 455.39544678]
[233.04739380 444.14154053]
[245.90136719 434.76104736]
[238.99172974 421.44726562]
[232.08209229 408.13348389]
[225.17245483 394.81970215]
[218.26281738 381.50592041]
[211.35317993 368.19213867]
[204.44354248 354.87832642]
[192.30285645 354.86856079]
[181.25314331 349.66683960]
[173.41773987 340.20486450]
[170.33100891 328.23934937]
[172.63824463 316.02593994]
[179.96185303 305.89407349]
[173.45359802 292.37954712]
[166.94534302 278.86502075]
[161.21051025 274.20217896]
[160.44250488 265.09927368]
[154.13714600 251.48890686]
[147.83178711 237.87852478]
[141.52642822 224.26814270]
[135.86199951 219.52001953]
[135.23025513 210.40667725]
[129.12919617 196.70349121]
[123.02815247 183.00030518]
[116.92710114 169.29711914]
[110.82605743 155.59394836]
[104.72500610 141.89076233]
[98.62395477 128.18757629]
[92.52290344 114.48439789]
[91.30742645 129.43507385]
[94.41059875 144.11056519]
[92.78706360 159.02244568]
[86.59844208 172.68630981]
[76.46077728 183.74197388]
[63.38322067 191.08891296]
[48.66757584 193.99577332]
[33.77871704 192.17318726]
[20.19874763 185.80259705]
[9.27948761 175.51815796]
[2.10789609 162.34362793]
[-0.60213268 147.59045410]
[1.41917109 132.72727966]
[7.97059679 119.23361206]
[18.39998245 108.45271301]
[31.66913795 101.45774841]
[46.45718384 98.94503021]
[61.29294968 101.16498566]
[76.14417267 99.05757141]
[62.10064697 93.78694916]
[48.05712509 88.51632690]
[33.77313614 95.27969360]
[18.91872406 89.88321686]
[12.30674934 75.52851868]
[17.85997772 60.73199081]
[32.28377914 54.27215195]
[47.02076721 59.98150635]
[53.32774734 74.47280121]
[67.37126923 79.74342346]
[81.41479492 85.01404572]
[86.87437439 79.87176514]
[76.58982086 68.95261383]
[66.30543518 58.03329849]
[77.22490692 47.74908066]
[87.50897217 58.66806030]
[97.79352570 69.58721161]
[103.25310516 64.44493866]
[98.83177948 50.11134720]
[94.41044617 35.77775574]
[89.98912048 21.44416237]
[85.56779480 7.11057043]
[71.87570953 -0.31671512]
[67.59603882 -14.91599941]
[74.76119995 -27.92353821]
[70.33987427 -42.25712967]
[65.91854858 -56.59072113]
[61.49721909 -70.92431641]
[50.03599548 -81.83077240]
[53.67811966 -96.27321625]
[49.25679016 -110.60681152]
[44.83546448 -124.94039917]
[40.41413498 -139.27400208]
[35.99280930 -153.60758972]
[25.54642487 -166.96084595]
[35.48598099 -180.69552612]
[51.43545151 -174.94654846]
[50.32640076 -158.02891541]
[54.74773026 -143.69532776]
[59.16905594 -129.36172485]
[63.59038544 -115.02813721]
[68.01171112 -100.69454956]
[79.15669250 -90.81332397]
[75.83081055 -75.34564209]
[80.25214386 -61.01205063]
[84.67346954 -46.67845917]
[89.09479523 -32.34486389]
[102.34233856 -25.63381195]
[107.03038025 -11.16049480]
[99.90139008 2.68924260]
[104.32271576 17.02283478]
[108.74404144 31.35642624]
[113.16536713 45.69001770]
[117.58670044 60.02360916]
[124.93426514 61.52803040]
[127.94332886 46.83294678]
[142.63836670 49.84224319]
[139.62939453 64.53687286]
[146.97695923 66.04129028]
[156.67594910 54.59885025]
[166.37495422 43.15640640]
[176.07394409 31.71396255]
[179.23597717 23.14344025]
[186.00462341 20.17429924]
[195.87370300 8.87822819]
[205.74278259 -2.41784406]
[203.15643311 -17.84006119]
[211.13288879 -31.29034615]
[225.90591431 -36.41788101]
[240.50015259 -30.80160713]
[248.02462769 -17.09335136]
[244.92652893 -1.76573694]
[232.66867065 7.94400740]
[217.03886414 7.45123672]
[207.16976929 18.74730873]
[197.30068970 30.04338074]
[187.51638794 41.41295624]
[177.81739807 52.85540009]
[168.11839294 64.29784393]
[158.41940308 75.74028778]
[145.59851074 102.20265198]
[124.74507141 113.20300293]
[106.22608948 108.38334656]
[112.32713318 122.08653259]
[118.42818451 135.78971863]
[124.52923584 149.49288940]
[130.63027954 163.19607544]
[136.73133850 176.89926147]
[142.83238220 190.60243225]
[148.93344116 204.30561829]
[155.13681030 217.96278381]
[161.44216919 231.57316589]
[167.74752808 245.18354797]
[174.05288696 258.79391479]
[180.45986938 272.35675049]
[186.96812439 285.87130737]
[193.47637939 299.38583374]
[211.40470886 302.08953857]
[224.01097107 314.90121460]
[226.38267517 332.55917358]
[217.75733948 347.96868896]
[224.66697693 361.28250122]
[231.57661438 374.59628296]
[238.48623657 387.91006470]
[245.39587402 401.22384644]
[252.30551147 414.53762817]
[259.21514893 427.85140991]
[272.58920288 423.18692017]
[286.47653198 420.40936279]
[300.61239624 419.57119751]
[314.72723389 420.68798828]
[328.55203247 423.73791504]
[341.82336426 428.66241455]
[354.28836060 435.36712646]
[365.70965576 443.72384644]
[375.86981201 453.57287598]
[384.57543945 464.72616577]
[391.66101074 476.97073364]
[396.99179077 490.07296753]
[400.46667480 503.78289795]
[402.01980591 517.83905029]
[401.62213135 531.97351074]
[399.28161621 545.91668701]
[395.04342651 559.40301514]
[388.98876953 572.17541504]
[381.23348999 583.99066162]
[371.92581177 594.62384033]
[361.24356079 603.87243652]
[349.39068604 611.56060791]
[355.69604492 625.17095947]
[362.00140381 638.78137207]
[368.30676270 652.39172363]
[374.61212158 666.00213623]
[380.91748047 679.61248779]
[394.63153076 688.60455322]
[393.43121338 704.95971680]
[378.55130005 711.85321045]
[365.29898071 702.19360352]
[367.30709839 685.91784668]
[361.00173950 672.30749512]
[354.69638062 658.69708252]
[348.39102173 645.08673096]
[342.08566284 631.47631836]
[335.78030396 617.86596680]
[320.54251099 622.30950928]
[304.79858398 624.34332275]
[288.92733765 623.91790771]
[273.31060791 621.04266357]
[258.32427979 615.78613281]
[244.32920837 608.27416992]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 166]
[13 165]
[14 164]
[15 163]
[16 162]
[17 161]
[18 160]
[24 156]
[25 155]
[26 154]
[28 153]
[29 152]
[30 151]
[31 150]
[33 149]
[34 148]
[35 147]
[36 146]
[37 145]
[38 144]
[39 143]
[40 142]
[59 70]
[60 69]
[61 68]
[77 113]
[78 112]
[79 111]
[80 110]
[81 109]
[84 106]
[85 105]
[86 104]
[87 103]
[89 101]
[90 100]
[91 99]
[92 98]
[93 97]
[118 139]
[119 138]
[120 137]
[121 136]
[123 135]
[124 134]
[125 133]
[188 203]
[189 202]
[190 201]
[191 200]
[192 199]
[193 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
