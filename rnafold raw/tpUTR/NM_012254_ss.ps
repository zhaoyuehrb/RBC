%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 13:30:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCACCUGGCCAACCCACUGGGGUAGGGAUCAAAGCCAGCCACCCCCACCCCAACACACUCGGUGUCCCUUUCAUCCUGGGCCUGUGUGAAUCCCAGCCUGGCCAUACCCUCAACCUCAGUGGGCUGGAAAUGACAGUGGGCCCUGUAGCAGUGGCAGAAUAAACUCAGAUGUGUUCACAGAA\
) } def
/len { sequence length } bind def

/coor [
[42.83539200 226.11781311]
[28.34281540 220.24421692]
[21.06204987 206.40496826]
[24.43085098 191.13456726]
[36.85857391 181.64321899]
[37.37348938 166.65206909]
[37.88840103 151.66090393]
[55.35770798 111.12959290]
[89.00602722 97.71242523]
[78.17427826 87.33585358]
[67.34252930 76.95928192]
[52.02475739 72.99995422]
[48.18662262 58.60835648]
[37.35487366 48.23178482]
[26.52312660 37.85521698]
[15.69137764 27.47864532]
[4.85962868 17.10207558]
[-5.97212029 6.72550488]
[-16.80386925 -3.65106559]
[-27.63561821 -14.02763653]
[-38.46736526 -24.40420723]
[-49.29911423 -34.78077698]
[-60.13086319 -45.15734863]
[-71.13914490 -55.34644699]
[-82.32071686 -65.34507751]
[-93.50228119 -75.34370422]
[-104.68384552 -85.34233093]
[-116.54000854 -80.15374756]
[-129.43130493 -79.84452820]
[-141.43519592 -84.42533112]
[-150.77487183 -93.18019104]
[-156.08232117 -104.77816010]
[-156.59855652 -117.47556305]
[-152.28205872 -129.37814331]
[-163.11380005 -139.75471497]
[-173.94555664 -150.13128662]
[-184.77729797 -160.50785828]
[-195.60905457 -170.88442993]
[-205.70384216 -164.05810547]
[-216.89308167 -159.24351501]
[-228.78063965 -156.60902405]
[-240.94609070 -156.24586487]
[-252.95953369 -158.16494751]
[-264.39678955 -162.29655457]
[-274.85443115 -168.49293518]
[-283.96386719 -176.53349304]
[-291.40457153 -186.13269043]
[-296.91510010 -196.95019531]
[-300.30249023 -208.60290527]
[-301.44885254 -220.67858887]
[-300.31564331 -232.75036621]
[-296.94476318 -244.39190674]
[-291.45715332 -255.19239807]
[-284.04843140 -264.77108765]
[-293.75582886 -276.20639038]
[-303.46325684 -287.64169312]
[-313.17065430 -299.07699585]
[-322.87808228 -310.51229858]
[-335.66189575 -312.34445190]
[-343.51119995 -322.08972168]
[-342.63473511 -334.17010498]
[-352.14440918 -345.77038574]
[-357.07684326 -347.62515259]
[-360.45254517 -350.87139893]
[-362.00152588 -354.67630005]
[-361.82641602 -358.22143555]
[-370.72631836 -370.29583740]
[-379.62622070 -382.37026978]
[-395.01510620 -381.28118896]
[-408.53887939 -388.70492554]
[-415.88214111 -402.27252197]
[-414.70169067 -417.65466309]
[-405.37420654 -429.94293213]
[-390.87606812 -435.21621704]
[-375.83355713 -431.79180908]
[-365.04669189 -420.76242065]
[-361.95755005 -405.64749146]
[-367.55181885 -391.27017212]
[-358.65191650 -379.19573975]
[-349.75201416 -367.12133789]
[-340.54415894 -355.28005981]
[-331.03448486 -343.67977905]
[-314.31045532 -338.39758301]
[-311.44277954 -320.21972656]
[-301.73535156 -308.78442383]
[-292.02795410 -297.34912109]
[-282.32052612 -285.91378784]
[-272.61312866 -274.47848511]
[-256.38131714 -282.30413818]
[-238.60519409 -285.33065796]
[-220.67404175 -283.31472778]
[-203.99121094 -276.40731812]
[-189.86419678 -265.14248657]
[-179.40220642 -250.39610291]
[-173.42907715 -233.31773376]
[-172.41839600 -215.24099731]
[-176.45594788 -197.57948303]
[-185.23248291 -181.71618652]
[-174.40072632 -171.33961487]
[-163.56898499 -160.96304321]
[-152.73722839 -150.58647156]
[-141.90548706 -140.20989990]
[-125.58218384 -145.62136841]
[-108.67649078 -142.01623535]
[-95.84956360 -130.29658508]
[-90.68438721 -113.61432648]
[-94.68521881 -96.52389526]
[-83.50365448 -86.52526855]
[-72.32209015 -76.52664185]
[-61.14051819 -66.52801514]
[-56.38348770 -65.89839935]
[-51.97895432 -62.25774765]
[-49.75429535 -55.98909760]
[-38.92254639 -45.61252594]
[-28.09079742 -35.23595428]
[-17.25904846 -24.85938454]
[-6.42729855 -14.48281479]
[4.40445042 -4.10624409]
[15.23619938 6.27032614]
[26.06794739 16.64689636]
[36.89969635 27.02346802]
[47.73144531 37.40003586]
[58.56319427 47.77660751]
[73.10620880 50.99373627]
[77.71910095 66.12753296]
[88.55084991 76.50410461]
[99.38259888 86.88067627]
[92.60998535 73.49666595]
[92.07634735 58.50616455]
[97.88012695 44.67445755]
[108.95071411 34.55308533]
[123.24590302 30.00913429]
[138.12867737 31.88082695]
[150.85359192 39.82289124]
[159.07330322 52.37025833]
[161.27151489 67.20831299]
[157.04270935 81.59988403]
[147.16699219 92.89015961]
[133.46614075 98.99641418]
[118.47050476 98.79293823]
[132.55116272 103.96354675]
[146.63180542 109.13416290]
[160.75631714 114.18371582]
[174.92366028 119.11185455]
[189.09100342 124.03999329]
[206.03736877 123.53311157]
[211.21565247 139.67689514]
[197.13627625 149.12185669]
[184.16287231 138.20732117]
[169.99552917 133.27919006]
[155.82818604 128.35105896]
[148.45930481 129.12501526]
[141.46119690 123.21481323]
[127.38054657 118.04420471]
[113.29988861 112.87358856]
[108.59501648 118.71431732]
[94.48037720 136.23651123]
[102.53082275 148.89314270]
[110.58126831 161.54977417]
[118.63170624 174.20640564]
[124.34223938 177.61740112]
[127.04825592 182.65046692]
[126.73258972 187.43858337]
[134.34381104 200.36412048]
[149.70500183 204.08024597]
[157.86787415 217.61328125]
[153.98954773 232.93431091]
[140.37095642 240.95365906]
[125.09178162 236.91355896]
[117.21688080 223.21095276]
[121.41828918 207.97534180]
[113.80706024 195.04981995]
[105.97507477 182.25685120]
[97.92462921 169.60021973]
[89.87419128 156.94358826]
[81.82374573 144.28695679]
[67.35101318 148.23156738]
[52.87956238 152.17581177]
[52.36464691 167.16697693]
[51.84973526 182.15814209]
[63.59692001 192.47984314]
[65.91000366 207.94540405]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 180]
[6 179]
[7 178]
[9 127]
[10 126]
[11 125]
[13 123]
[14 122]
[15 121]
[16 120]
[17 119]
[18 118]
[19 117]
[20 116]
[21 115]
[22 114]
[23 113]
[24 110]
[25 109]
[26 108]
[27 107]
[34 102]
[35 101]
[36 100]
[37 99]
[38 98]
[54 88]
[55 87]
[56 86]
[57 85]
[58 84]
[61 82]
[62 81]
[66 80]
[67 79]
[68 78]
[140 155]
[141 154]
[142 153]
[143 151]
[144 150]
[145 149]
[157 176]
[158 175]
[159 174]
[160 173]
[163 172]
[164 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
