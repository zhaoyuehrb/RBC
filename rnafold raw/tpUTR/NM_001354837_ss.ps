%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 09:17:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUAUGAAGAGGAUUAGGAGACCCUUUUCUUCUCCUUAAACCCUAGGAAGGAAGAAGUGGAACAAAUGGUAAAGACAGCAUGGCUUACUAACUUUCCAGUGUUCACUGGAAUACUCCAAGACCAAUCAUGUUCAUCUUUGUAUCGUCACAGCACUGUACCUGACCUCUUACAGUGAUCUAUAGAUCUAUAGAUGUUUGUUGAUGAGUUAAUAAUGAGUAAAUAAAUGAUUCCUUUUUCUCUACUGUUUAA\
) } def
/len { sequence length } bind def

/coor [
[111.52332306 414.09295654]
[111.14936066 399.09762573]
[110.77540588 384.10226440]
[110.40144348 369.10693359]
[110.02748108 354.11160278]
[106.72765350 347.52078247]
[109.74349976 338.92724609]
[101.84814453 326.29742432]
[109.41280365 312.40188599]
[109.22580719 297.40304565]
[109.03881073 282.40420532]
[108.85182190 267.40536499]
[108.66482544 252.40653992]
[108.47782898 237.40769958]
[97.66916656 227.22396851]
[97.26586151 212.01568604]
[108.02077484 200.74761963]
[107.83378601 185.74877930]
[107.64678955 170.74993896]
[107.45979309 155.75111389]
[100.96460724 152.00111389]
[87.97423553 159.50112915]
[87.97422028 144.50111389]
[81.47903442 140.75111389]
[68.39616394 148.08857727]
[60.14458847 161.58755493]
[45.25915909 161.06488037]
[32.17628860 168.40235901]
[19.09342003 175.73983765]
[6.01055145 183.07730103]
[-7.07231760 190.41477966]
[-20.15518570 197.75225830]
[-33.23805618 205.08973694]
[-46.22843552 212.58973694]
[-59.12430954 220.25109863]
[-72.02018738 227.91244507]
[-84.91606140 235.57380676]
[-86.21138000 251.03672791]
[-96.37365723 262.76309204]
[-111.49529266 266.24389648]
[-125.76169586 260.14068604]
[-133.68714905 246.80026245]
[-132.22416687 231.35229492]
[-121.93527985 219.73686218]
[-106.77677917 216.42031860]
[-92.57741547 222.67793274]
[-79.68154144 215.01657104]
[-66.78566742 207.35522461]
[-53.88979721 199.69386292]
[-51.86835098 195.39337158]
[-47.13761902 192.30455017]
[-40.57553101 192.00686646]
[-27.49266243 184.66938782]
[-14.40979290 177.33190918]
[-1.32692373 169.99443054]
[11.75594521 162.65696716]
[24.83881378 155.31948853]
[37.92168427 147.98200989]
[45.23748398 135.00787354]
[61.05868912 135.00572205]
[74.14155579 127.66824341]
[68.43445587 102.11879730]
[80.33027649 83.92560577]
[72.03562927 71.42765045]
[63.74098969 58.92969131]
[55.44635010 46.43173218]
[47.15170670 33.93377686]
[39.81899261 28.53236198]
[38.83269882 21.22791290]
[30.69450378 8.62752438]
[22.55630875 -3.97286463]
[11.84076595 -5.63469172]
[3.96115804 -12.76137829]
[1.34562695 -22.83244896]
[4.62098742 -32.47741318]
[-3.20054078 -45.27677917]
[-11.02206898 -58.07614136]
[-18.84359741 -70.87550354]
[-35.73315430 -72.00036621]
[-48.49112320 -82.87014008]
[-52.20940781 -99.04242706]
[-45.61343002 -114.08794403]
[-53.59391022 -126.78880310]
[-61.57439041 -139.48966980]
[-69.63388824 -152.14053345]
[-77.77207947 -164.74092102]
[-85.91027069 -177.34130859]
[-99.82620239 -174.37330627]
[-113.89047241 -176.32521057]
[-126.41942596 -182.94277954]
[-135.92019653 -193.41453552]
[-141.26861572 -206.47108459]
[-141.84219360 -220.53907776]
[-137.59248352 -233.93080139]
[-129.04846191 -245.04658508]
[-137.02894592 -257.74743652]
[-145.00942993 -270.44830322]
[-152.98991394 -283.14916992]
[-160.97039795 -295.85003662]
[-168.95088196 -308.55090332]
[-176.93135071 -321.25177002]
[-191.67503357 -328.43200684]
[-192.55851746 -344.80734253]
[-178.67297363 -353.53222656]
[-164.30264282 -345.63122559]
[-164.23049927 -329.23223877]
[-156.25001526 -316.53137207]
[-148.26953125 -303.83050537]
[-140.28904724 -291.12963867]
[-132.30856323 -278.42880249]
[-124.32808685 -265.72793579]
[-116.34760284 -253.02706909]
[-100.75472260 -255.92063904]
[-85.20867920 -252.59555054]
[-72.10022736 -243.53286743]
[-63.45689011 -230.09831238]
[-60.62935257 -214.33653259]
[-64.08049011 -198.65994263]
[-73.30988312 -185.47950745]
[-65.17169189 -172.87911987]
[-57.03349686 -160.27873230]
[-50.78110123 -156.37548828]
[-48.87352753 -147.47015381]
[-40.89304733 -134.76928711]
[-32.91256714 -122.06842041]
[-19.58091545 -122.41285706]
[-7.72165775 -116.07991791]
[-0.47689217 -104.62648010]
[0.17439555 -90.98143768]
[-6.04423380 -78.69702911]
[1.77729428 -65.89766693]
[9.59882259 -53.09830475]
[17.42035103 -40.29894257]
[35.03487396 -32.28628922]
[35.15669632 -12.11105824]
[43.29489136 0.48933017]
[51.43308640 13.08971882]
[59.64966202 25.63913536]
[67.94430542 38.13709259]
[76.23894501 50.63504791]
[84.53359222 63.13300323]
[92.82823181 75.63095856]
[126.05956268 82.06198883]
[130.11866760 122.95771790]
[144.21405029 117.82741547]
[158.30943298 112.69711304]
[172.40483093 107.56681061]
[186.50021362 102.43650818]
[200.59561157 97.30620575]
[214.65873718 92.08814240]
[228.68908691 86.78252411]
[242.71942139 81.47690582]
[255.98115540 74.46787262]
[268.26843262 65.86422729]
[280.55572510 57.26058197]
[292.84298706 48.65693283]
[305.13027954 40.05328751]
[317.41754150 31.44964218]
[329.70483398 22.84599495]
[328.28631592 7.55274963]
[334.71902466 -6.39414024]
[347.27261353 -15.24303150]
[362.57022095 -16.61361694]
[376.49688721 -10.13721657]
[385.30639648 2.44405103]
[386.62902832 17.74588776]
[380.10897827 31.65217781]
[367.50018311 40.42219543]
[352.19427490 41.69685364]
[338.30847168 35.13327408]
[326.02120972 43.73692322]
[313.73391724 52.34056854]
[301.44662476 60.94421387]
[289.15936279 69.54785919]
[276.87207031 78.15150452]
[264.58480835 86.75515747]
[269.71508789 100.85054779]
[284.65802002 99.54320526]
[299.60095215 98.23587036]
[314.54385376 96.92853546]
[329.48678589 95.62120056]
[344.42968750 94.31386566]
[359.37261963 93.00653076]
[372.48834229 83.16225433]
[387.46334839 89.84666443]
[388.89263916 106.18340302]
[375.30587769 115.36664581]
[360.67996216 107.94944763]
[345.73703003 109.25678253]
[330.79412842 110.56411743]
[315.85119629 111.87145233]
[300.90826416 113.17879486]
[285.96536255 114.48612976]
[271.02243042 115.79346466]
[258.70840454 111.90454865]
[250.79118347 104.28772736]
[248.02503967 95.50724030]
[233.99470520 100.81286621]
[219.96437073 106.11848450]
[214.83326721 111.40994263]
[205.72590637 111.40159607]
[191.63052368 116.53189850]
[177.53512573 121.66220093]
[163.43974304 126.79250336]
[149.34434509 131.92280579]
[135.24896240 137.05311584]
[150.07843018 139.30853271]
[164.90789795 141.56396484]
[179.73736572 143.81938171]
[194.28948975 140.18133545]
[209.28518677 140.54054260]
[223.64645386 144.87118530]
[236.34085083 152.86192322]
[246.45584106 163.93833923]
[253.26426697 177.30416870]
[256.27667236 191.99856567]
[255.27653503 206.96519470]
[250.33572388 221.12811279]
[241.80943298 233.46919250]
[230.31059265 243.10125732]
[216.66583252 249.33189392]
[201.85606384 251.71316528]
[186.94589233 250.07389832]
[173.00721741 244.53195190]
[161.04203796 235.48570251]
[151.91052246 223.58547974]
[146.26908875 209.68676758]
[144.52340698 194.78330994]
[137.16848755 181.71025085]
[129.81355286 168.63717651]
[122.45862579 155.56411743]
[122.64562225 170.56294250]
[122.83261871 185.56178284]
[123.01961517 200.56062317]
[134.05210876 211.55706787]
[134.02807617 226.77067566]
[123.47666168 237.22070312]
[123.66365814 252.21954346]
[123.85065460 267.21838379]
[124.03765106 282.21722412]
[124.22463989 297.21603394]
[124.41163635 312.21487427]
[132.32037354 325.91751099]
[124.74234009 338.74026489]
[125.02281952 353.73764038]
[125.39678192 368.73297119]
[125.77074432 383.72830200]
[126.14469910 398.72366333]
[126.51866150 413.71899414]
[132.95800781 429.40246582]
[119.67003632 439.93176270]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 249]
[2 248]
[3 247]
[4 246]
[5 245]
[7 244]
[9 242]
[10 241]
[11 240]
[12 239]
[13 238]
[14 237]
[17 234]
[18 233]
[19 232]
[20 231]
[24 61]
[25 60]
[27 58]
[28 57]
[29 56]
[30 55]
[31 54]
[32 53]
[33 52]
[34 49]
[35 48]
[36 47]
[37 46]
[63 142]
[64 141]
[65 140]
[66 139]
[67 138]
[69 137]
[70 136]
[71 135]
[75 133]
[76 132]
[77 131]
[78 130]
[82 125]
[83 124]
[84 123]
[85 121]
[86 120]
[87 119]
[95 112]
[96 111]
[97 110]
[98 109]
[99 108]
[100 107]
[101 106]
[144 206]
[145 205]
[146 204]
[147 203]
[148 202]
[149 201]
[150 199]
[151 198]
[152 197]
[153 176]
[154 175]
[155 174]
[156 173]
[157 172]
[158 171]
[159 170]
[177 194]
[178 193]
[179 192]
[180 191]
[181 190]
[182 189]
[183 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
