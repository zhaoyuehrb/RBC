%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 16:16:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAGAUCAACAGAAUCAGAGUAGAUAGUUCCUUAAUCGGAACCCAAAGGACCCCGUGCCUCAAUCUCUAUCCUGAUGUCAUGGGAGUCCUAGCAAAGCUAUAGACUCCAAGCAAGGCUUGGGGUCCUUUAUGGAACCCCAGGAUGACUCAGCAAUAAAAUAUUUUUGGUUUUUUGGUUUUGUAUGUUGGUGA\
) } def
/len { sequence length } bind def

/coor [
[87.98912811 362.12698364]
[73.48612976 356.27917480]
[66.18075562 342.45291138]
[69.52238464 327.17654419]
[81.93320465 317.66308594]
[82.42144775 302.67102051]
[82.90969086 287.67898560]
[83.39793396 272.68692017]
[83.88617706 257.69488525]
[84.37442780 242.70281982]
[84.86267090 227.71076965]
[75.42975616 221.26170349]
[70.23377228 210.95016479]
[70.67209625 199.29173279]
[76.75140381 189.19389343]
[87.05718231 183.23085022]
[88.03314972 168.26263428]
[89.00912476 153.29441833]
[89.98509216 138.32620239]
[90.96106720 123.35797882]
[84.74632263 119.15953827]
[83.68904114 134.12222290]
[70.20227814 140.68785095]
[57.77297211 132.29067993]
[58.83057785 117.32801819]
[72.31682587 110.76264954]
[66.10208130 106.56420135]
[52.57999039 113.05673981]
[39.05789948 119.54927826]
[25.53580856 126.04181671]
[12.01371765 132.53436279]
[7.01368189 147.52685547]
[-7.16033363 154.51777649]
[-22.09913635 149.35951233]
[-28.93980026 135.11236572]
[-23.62388039 120.22894287]
[-9.30521679 113.53929138]
[5.52117968 119.01226807]
[19.04327011 112.51972961]
[32.56536102 106.02719116]
[46.08745193 99.53465271]
[59.60954285 93.04211426]
[65.77001953 79.36554718]
[61.67198181 64.93619537]
[57.57394409 50.50684738]
[53.24158096 36.14611435]
[48.67604828 21.85780144]
[44.11051178 7.56948805]
[39.54497528 -6.71882486]
[34.97943878 -21.00713730]
[30.41390610 -35.29545212]
[25.84836960 -49.58376312]
[21.28283501 -63.87207794]
[16.71729851 -78.16039276]
[12.15176392 -92.44869995]
[0.58122051 -103.23912048]
[4.07763100 -117.71752930]
[-0.48790446 -132.00584412]
[-5.05344009 -146.29415894]
[-9.61897564 -160.58247375]
[-31.56188011 -163.12693787]
[-48.56939316 -180.54200745]
[-51.06900406 -207.02255249]
[-62.62047195 -216.59143066]
[-74.17194366 -226.16030884]
[-89.17005920 -222.18084717]
[-103.63068390 -227.80845642]
[-111.99341583 -240.87919617]
[-111.04261017 -256.36712646]
[-101.14386749 -268.31677246]
[-86.10346222 -272.13330078]
[-71.70474243 -266.34918213]
[-63.48429489 -253.18847656]
[-64.60305786 -237.71177673]
[-53.05158997 -228.14289856]
[-41.50011826 -218.57402039]
[-34.76572037 -221.87519836]
[-41.36809540 -235.34400940]
[-47.97024918 -248.81291199]
[-34.50122833 -255.41484070]
[-27.89929390 -241.94638062]
[-21.29691696 -228.47758484]
[-14.56251526 -231.77876282]
[-15.05076027 -246.77081299]
[-15.53900433 -261.76287842]
[-16.02724838 -276.75491333]
[-16.51549339 -291.74697876]
[-17.00373650 -306.73901367]
[-27.08693123 -322.13879395]
[-18.23244667 -337.28271484]
[-18.96465111 -352.26483154]
[-19.69685555 -367.24694824]
[-20.42905998 -382.22906494]
[-27.24135780 -397.75418091]
[-14.20880890 -408.59802246]
[-0.18097514 -399.07669067]
[-5.44694138 -382.96127319]
[-4.71473646 -367.97915649]
[-3.98253202 -352.99703979]
[-3.25032735 -338.01492310]
[5.50194597 -329.65106201]
[6.22608519 -317.16497803]
[-2.01168489 -307.22726440]
[-1.52344072 -292.23522949]
[-1.03519654 -277.24316406]
[-0.54695231 -262.25112915]
[-0.05870811 -247.25906372]
[0.42953610 -232.26701355]
[13.45969486 -223.43554688]
[21.82242966 -210.88090515]
[24.68416786 -196.73838806]
[22.09910774 -183.20930481]
[14.93356419 -172.22009277]
[4.66933775 -165.14801025]
[9.23487282 -150.85969543]
[13.80040836 -136.57138062]
[18.36594391 -122.28306580]
[29.60993004 -112.51464081]
[26.44007683 -97.01423645]
[31.00561142 -82.72592163]
[35.57114792 -68.43761444]
[40.13668442 -54.14929962]
[44.70221710 -39.86098480]
[49.26775360 -25.57267380]
[53.83329010 -11.28435993]
[58.39882278 3.00395274]
[62.96435928 17.29226494]
[67.52989197 31.58057785]
[71.30187225 34.53237915]
[73.25074005 39.89113998]
[72.00328827 46.40880966]
[76.10132599 60.83815765]
[80.19936371 75.26750946]
[93.84928894 70.35455322]
[107.58828735 72.14368439]
[118.44853210 79.65223694]
[124.35507965 90.72729492]
[124.51483154 102.62678528]
[138.33772278 108.45152283]
[152.16062927 114.27626038]
[165.98352051 120.10099792]
[179.80641174 125.92573547]
[193.62930298 131.75047302]
[202.76815796 132.20138550]
[207.62857056 137.78414917]
[221.35481262 143.83311462]
[235.08106995 149.88208008]
[244.21136475 150.48167419]
[248.98027039 156.14282227]
[262.60623169 162.41439819]
[276.23220825 168.68598938]
[292.00329590 167.42735291]
[300.32971191 179.77725220]
[313.95568848 186.04882812]
[327.58166504 192.32040405]
[341.20764160 198.59199524]
[358.12390137 199.72192383]
[361.72100830 216.28988647]
[346.79629517 224.33287048]
[334.93606567 212.21797180]
[321.31008911 205.94638062]
[307.68411255 199.67480469]
[294.05813599 193.40322876]
[279.26168823 195.11044312]
[269.96063232 182.31196594]
[256.33465576 176.04037476]
[242.70867920 169.76879883]
[229.03211975 163.60832214]
[215.30586243 157.55937195]
[201.57960510 151.51040649]
[187.80456543 145.57336426]
[173.98167419 139.74862671]
[160.15878296 133.92388916]
[146.33589172 128.09915161]
[132.51298523 122.27442169]
[118.69009399 116.44968414]
[105.92928314 124.33395386]
[104.95330811 139.30216980]
[103.97734070 154.27038574]
[103.00136566 169.23860168]
[102.02539825 184.20681763]
[115.05484009 197.94364929]
[113.94090271 216.52450562]
[99.85472107 228.19902039]
[99.36647797 243.19107056]
[98.87823486 258.18313599]
[98.38999176 273.17517090]
[97.90174103 288.16723633]
[97.41349792 303.15927124]
[96.92525482 318.15133667]
[108.69078827 328.45211792]
[111.03137970 343.91354370]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 190]
[6 189]
[7 188]
[8 187]
[9 186]
[10 185]
[11 184]
[16 181]
[17 180]
[18 179]
[19 178]
[20 177]
[27 42]
[28 41]
[29 40]
[30 39]
[31 38]
[43 133]
[44 132]
[45 131]
[46 128]
[47 127]
[48 126]
[49 125]
[50 124]
[51 123]
[52 122]
[53 121]
[54 120]
[55 119]
[57 117]
[58 116]
[59 115]
[60 114]
[63 76]
[64 75]
[65 74]
[83 108]
[84 107]
[85 106]
[86 105]
[87 104]
[88 103]
[90 100]
[91 99]
[92 98]
[93 97]
[138 176]
[139 175]
[140 174]
[141 173]
[142 172]
[143 171]
[145 170]
[146 169]
[147 168]
[149 167]
[150 166]
[151 165]
[153 163]
[154 162]
[155 161]
[156 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
