%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 14:14:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAGAGUCUUCCAGGUGCCUGGCCCUUGGCUUUAGCCAUACCAGGGUGAGUUAAAGAGAGGCCCCGGCUGGGUGAGCUGAGAUGGAGUCCUCGACUUAUCACCACACCACUGCCCCAAGGACCUUACAGGCCCUCCCUGUUAAUAAACAGCUCUAACACGGCCAGGCUGGGCUCUGGGAUUCUGA\
) } def
/len { sequence length } bind def

/coor [
[89.02407837 517.60803223]
[81.30189514 503.14080811]
[90.19828033 489.36453247]
[90.45027161 474.36663818]
[90.70225525 459.36874390]
[90.95424652 444.37088013]
[91.20623016 429.37298584]
[91.45822144 414.37512207]
[91.71020508 399.37722778]
[89.07848358 395.36914062]
[88.95092010 389.66122437]
[92.23104095 383.88198853]
[92.98671722 368.90106201]
[93.74240112 353.92010498]
[94.49807739 338.93914795]
[95.12789154 323.95236206]
[95.63179016 308.96084595]
[95.75778961 293.96136475]
[95.50580597 278.96347046]
[95.25381470 263.96560669]
[95.00183105 248.96771240]
[94.74983978 233.96983337]
[94.49785614 218.97195435]
[94.24586487 203.97406006]
[93.99388123 188.97618103]
[65.92497253 182.41194153]
[41.41640472 167.23687744]
[23.02894592 145.03656006]
[9.49107075 151.49612427]
[-4.04680395 157.95567322]
[-17.58467865 164.41523743]
[-26.42034531 178.23056030]
[-42.78808594 177.21611023]
[-49.85017395 162.41546631]
[-40.34173584 149.05427551]
[-24.04424095 150.87736511]
[-10.50636578 144.41780090]
[3.03150916 137.95823669]
[16.56938362 131.49868774]
[12.35713577 116.47916412]
[10.82645130 100.95544434]
[12.02416611 85.40249634]
[15.91363239 70.29617310]
[22.37584686 56.09868622]
[31.21308899 43.24442291]
[42.15496826 32.12668228]
[33.41993713 19.93245506]
[24.68490601 7.73822594]
[15.94987392 -4.45600319]
[7.21484280 -16.65023232]
[-7.57903051 -13.27132511]
[-22.49926758 -15.80697632]
[-35.27748108 -23.84009361]
[-43.98304367 -36.12018967]
[-47.31476974 -50.75796509]
[-44.79531860 -65.51593781]
[-36.83931351 -78.15046692]
[-45.57434464 -90.34469604]
[-54.30937576 -102.53892517]
[-61.86722565 -107.70687103]
[-63.08668900 -115.01218414]
[-71.61563873 -127.35143280]
[-80.14458466 -139.69067383]
[-88.77687836 -151.95785522]
[-97.51190948 -164.15208435]
[-106.65165710 -176.04598999]
[-116.18580627 -187.62614441]
[-125.71995544 -199.20629883]
[-135.25410461 -210.78645325]
[-144.78825378 -222.36660767]
[-160.55357361 -225.33889771]
[-167.93161011 -239.58473206]
[-161.26257324 -254.17594910]
[-145.66236877 -257.91940308]
[-133.09814453 -247.94343567]
[-133.20809937 -231.90075684]
[-123.67395020 -220.32060242]
[-114.13980103 -208.74044800]
[-104.60565186 -197.16029358]
[-95.07150269 -185.58013916]
[-92.27626801 -185.18470764]
[-89.47116852 -183.64656067]
[-87.09657288 -180.95701599]
[-85.58754730 -177.26832581]
[-85.31768036 -172.88711548]
[-76.58264923 -160.69288635]
[-70.11804199 -157.07852173]
[-67.80533600 -148.21961975]
[-59.27638626 -135.88037109]
[-50.74744034 -123.54113007]
[-42.11514664 -111.27395630]
[-33.38011551 -99.07972717]
[-24.64508438 -86.88549805]
[-10.12248230 -90.35295868]
[4.66131163 -87.98973083]
[17.44856262 -80.12518311]
[26.27437782 -67.93122864]
[29.76861572 -53.24777222]
[27.36851692 -38.30513000]
[19.40907097 -25.38526344]
[28.14410400 -13.19103432]
[36.87913513 -0.99680567]
[45.61416626 11.19742298]
[54.34919739 23.39165306]
[62.65021133 19.01958466]
[71.36460876 15.54380417]
[80.39594269 13.00278473]
[89.64425659 11.42464733]
[99.00717926 10.82685947]
[108.38109589 11.21603870]
[117.66225433 12.58787632]
[126.74792480 14.92718887]
[135.53755188 18.20808411]
[143.93383789 22.39425278]
[151.84388733 27.43935776]
[159.18011475 33.28756332]
[165.86134338 39.87414169]
[171.81361389 47.12619019]
[176.97105408 54.96344376]
[190.50892639 48.50387955]
[204.04679871 42.04431915]
[213.16983032 29.11834145]
[227.98847961 30.62060928]
[241.52636719 24.16104698]
[255.06423950 17.70148468]
[266.75567627 5.42358828]
[281.79025269 13.25925541]
[278.42279053 29.87540817]
[261.52380371 31.23935890]
[247.98591614 37.69892120]
[234.44804382 44.15848160]
[226.29333496 56.62242889]
[210.50636292 55.58219528]
[196.96849060 62.04175568]
[183.43061829 68.50131989]
[187.00714111 80.44001007]
[188.88435364 92.76072693]
[189.02558899 105.22282410]
[203.87292480 107.35754395]
[218.72024536 109.49227142]
[233.56756592 111.62699127]
[248.41488647 113.76171112]
[263.42993164 107.16776276]
[276.48605347 117.09097290]
[274.15219116 133.32319641]
[258.82925415 139.16612244]
[246.28016663 128.60903931]
[231.43283081 126.47431183]
[216.58551025 124.33959198]
[201.73818970 122.20486450]
[186.89086914 120.07014465]
[183.73280334 130.68634033]
[179.28312683 140.82917786]
[173.61044312 150.34219360]
[166.80229187 159.07865906]
[158.96366882 166.90380859]
[150.21549988 173.69692993]
[140.69273376 179.35324097]
[130.54226685 183.78546143]
[119.92065430 186.92526245]
[108.99176025 188.72419739]
[109.24375153 203.72207642]
[109.49573517 218.71995544]
[109.74772644 233.71784973]
[109.99971008 248.71572876]
[110.25170135 263.71362305]
[110.50368500 278.71148682]
[110.75567627 293.70938110]
[113.46602631 298.21917725]
[114.09782410 302.85302734]
[112.95499420 306.79360962]
[110.62332916 309.46475220]
[110.11942291 324.45626831]
[112.96332550 333.15921021]
[109.47902679 339.69482422]
[108.72335052 354.67578125]
[107.96767426 369.65673828]
[107.21199036 384.63766479]
[106.70809174 399.62921143]
[106.45610046 414.62710571]
[106.20411682 429.62496948]
[105.95212555 444.62286377]
[105.70014191 459.62075806]
[105.44815063 474.61862183]
[105.19616699 489.61651611]
[113.62473297 503.68389893]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 185]
[4 184]
[5 183]
[6 182]
[7 181]
[8 180]
[9 179]
[12 178]
[13 177]
[14 176]
[15 175]
[16 173]
[17 172]
[18 168]
[19 167]
[20 166]
[21 165]
[22 164]
[23 163]
[24 162]
[25 161]
[28 39]
[29 38]
[30 37]
[31 36]
[46 104]
[47 103]
[48 102]
[49 101]
[50 100]
[57 93]
[58 92]
[59 91]
[61 90]
[62 89]
[63 88]
[64 86]
[65 85]
[66 80]
[67 79]
[68 78]
[69 77]
[70 76]
[119 135]
[120 134]
[121 133]
[123 131]
[124 130]
[125 129]
[138 151]
[139 150]
[140 149]
[141 148]
[142 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
