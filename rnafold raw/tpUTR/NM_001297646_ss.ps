%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 08:22:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGGCCAGAAAGGCCCCUCGAGGCAGAGACCCUCCGCCCUCUUGCACACCAGGGCCGCUCGUGGGACUCCACAUCCUCCAGCCCCCACAAUCCUGUCAGGGGCUCCCUGACAGUCCUGGGGGUGGAGAGGCCAUCCCGGGGCGUCCCCCGCGUCUGUGUCCUUGCUGCCUUCAUCCCCUGGGGCCUGUGAAUAAAGCUGCAGAACCCCCUUCA\
) } def
/len { sequence length } bind def

/coor [
[248.07406616 476.75756836]
[262.08715820 471.40655518]
[276.30175781 476.19857788]
[269.54077148 462.80868530]
[262.77978516 449.41882324]
[248.59489441 445.02285767]
[241.54754639 431.53991699]
[246.25460815 416.69131470]
[232.06970215 412.29534912]
[225.02235413 398.81240845]
[229.72941589 383.96380615]
[222.96842957 370.57391357]
[216.20744324 357.18402100]
[209.44645691 343.79415894]
[202.68545532 330.40426636]
[191.33613586 329.27362061]
[181.84284973 322.73822021]
[176.62855530 312.32562256]
[177.09140015 300.56970215]
[183.23200989 290.39404297]
[176.86515808 276.81231689]
[170.49830627 263.23059082]
[164.13145447 249.64888000]
[157.76460266 236.06715393]
[151.29870605 222.53230286]
[144.73408508 209.04505920]
[132.20710754 200.98750305]
[133.12457275 185.19291687]
[126.55995178 171.70567322]
[119.99533081 158.21842957]
[113.43070984 144.73118591]
[102.82841492 148.02571106]
[91.42613220 148.76588440]
[79.84806061 146.76133728]
[68.76232910 141.97595215]
[58.84265518 134.53755188]
[50.72788239 124.73807526]
[36.06330490 127.89247131]
[21.39872932 131.04687500]
[6.73415470 134.20126343]
[-7.93042088 137.35566711]
[-12.56455708 151.99876404]
[-23.91020966 162.35115051]
[-38.91545486 165.62806702]
[-53.54395676 160.94805908]
[-63.86072159 149.57000732]
[-67.09059143 134.55456543]
[-62.36474609 119.94080353]
[-50.95441818 109.65975189]
[-35.92892838 106.47696686]
[-21.33005142 111.24859619]
[-11.08481884 122.69109344]
[3.57975674 119.53668976]
[18.24433136 116.38229370]
[32.90890884 113.22789764]
[47.57348251 110.07350159]
[48.28475189 102.60729980]
[33.35235596 101.18476868]
[21.13177299 92.48664093]
[34.77489090 86.25237274]
[49.70728683 87.67491150]
[50.41855240 80.20870972]
[36.61336136 74.34214020]
[22.80816650 68.47557068]
[9.00297451 62.60899734]
[-7.20015955 65.13694000]
[-17.27891350 52.20052719]
[-10.86512947 37.10763550]
[5.44324112 35.38453674]
[14.86954498 48.80380630]
[28.67473793 54.67037582]
[42.47993088 60.53694916]
[56.28512192 66.40351868]
[63.33466339 61.69293594]
[70.76892090 58.30745697]
[78.35486603 56.25025177]
[85.86801910 55.48538971]
[83.68400574 40.64524078]
[81.49998474 25.80508995]
[79.31597137 10.96494007]
[77.13195038 -3.87521052]
[72.78759003 -11.90688229]
[75.02608490 -18.94799232]
[73.05914307 -33.81847000]
[71.09219360 -48.68894958]
[69.12524414 -63.55942535]
[67.15830231 -78.42990112]
[65.19135284 -93.30038452]
[53.51544952 -97.75624084]
[44.89112473 -106.70072937]
[40.91016388 -118.39459991]
[42.26963425 -130.59986877]
[48.65069962 -141.00811768]
[58.79062653 -147.67704773]
[57.25903320 -162.59866333]
[55.72743988 -177.52026367]
[54.19584656 -192.44186401]
[52.66425705 -207.36346436]
[51.13266373 -222.28506470]
[49.60107040 -237.20666504]
[48.06947708 -252.12828064]
[46.53788757 -267.04986572]
[38.90587616 -282.18884277]
[51.34046936 -293.71350098]
[65.85695648 -284.95520020]
[61.45948792 -268.58148193]
[62.99108124 -253.65986633]
[64.52267456 -238.73826599]
[66.05426788 -223.81666565]
[67.58586121 -208.89505005]
[69.11744690 -193.97344971]
[70.64904022 -179.05184937]
[72.18063354 -164.13024902]
[73.71222687 -149.20864868]
[89.38176727 -141.05873108]
[97.08802795 -124.99166870]
[93.57392120 -107.36161041]
[80.06182861 -95.26732635]
[82.02877808 -80.39685059]
[83.99572754 -65.52637482]
[85.96266937 -50.65589523]
[87.92961884 -35.78541565]
[89.89656830 -20.91493797]
[91.97209930 -6.05922794]
[94.15612030 8.78092289]
[96.34013367 23.62107277]
[98.52415466 38.46122360]
[100.70817566 53.30137253]
[111.94461823 52.24020386]
[123.66971588 53.97180939]
[134.00166321 43.09748077]
[137.31152344 27.03582382]
[152.95935059 22.12893867]
[164.84800720 33.42460632]
[160.74745178 49.30281448]
[144.87599182 53.42942429]
[134.54405212 64.30374908]
[143.62466431 76.24285889]
[156.86315918 69.19003296]
[170.10165405 62.13721466]
[183.34014893 55.08439255]
[196.57864380 48.03157043]
[204.79374695 33.83847046]
[221.19035339 34.12698746]
[228.90104675 48.60032272]
[219.99371338 62.36954498]
[203.63145447 61.27006149]
[190.39297485 68.32288361]
[177.15447998 75.37570953]
[163.91598511 82.42852783]
[150.67749023 89.48135376]
[145.79263306 118.07502747]
[126.91795349 138.16656494]
[133.48257446 151.65380859]
[140.04719543 165.14105225]
[146.61181641 178.62829590]
[159.60833740 187.65055847]
[158.22132874 202.48043823]
[164.78594971 215.96768188]
[171.35342407 222.31193542]
[171.34632874 229.70030212]
[177.71318054 243.28202820]
[184.08003235 256.86373901]
[190.44688416 270.44546509]
[196.81373596 284.02719116]
[214.86384583 289.78884888]
[222.83103943 306.62692261]
[216.07534790 323.64328003]
[222.83633423 337.03317261]
[229.59732056 350.42303467]
[236.35832214 363.81292725]
[243.11930847 377.20281982]
[257.86248779 382.23037720]
[264.52835083 395.90591431]
[259.64450073 409.93032837]
[274.38766479 414.95785522]
[281.05352783 428.63342285]
[276.16967773 442.65780640]
[282.93066406 456.04769897]
[289.69165039 469.43759155]
[297.12829590 482.46435547]
[305.22113037 495.09390259]
[313.31396484 507.72348022]
[321.40682983 520.35302734]
[339.71231079 528.79998779]
[339.75964355 548.13781738]
[348.21807861 560.52551270]
[356.67651367 572.91320801]
[365.13491821 585.30090332]
[373.59335327 597.68859863]
[389.10714722 598.00738525]
[401.45031738 607.41088867]
[405.87667847 622.28326416]
[400.68417358 636.90576172]
[387.86944580 645.65576172]
[372.36001587 645.16870117]
[360.11959839 635.63183594]
[355.85482788 620.71234131]
[361.20565796 606.14703369]
[352.74722290 593.75933838]
[344.28878784 581.37164307]
[335.83038330 568.98394775]
[327.37194824 556.59625244]
[317.20458984 555.61529541]
[309.08398438 549.06347656]
[305.84158325 538.91522217]
[308.77725220 528.44586182]
[300.68441772 515.81634521]
[292.59155273 503.18676758]
[284.49871826 490.55718994]
[281.39865112 505.23333740]
[269.66668701 514.58001709]
[254.66889954 514.32220459]
[243.26516724 504.57772827]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 180]
[4 179]
[5 178]
[8 175]
[11 172]
[12 171]
[13 170]
[14 169]
[15 168]
[20 165]
[21 164]
[22 163]
[23 162]
[24 161]
[25 159]
[26 158]
[28 156]
[29 155]
[30 154]
[31 153]
[37 56]
[38 55]
[39 54]
[40 53]
[41 52]
[62 73]
[63 72]
[64 71]
[65 70]
[77 128]
[78 127]
[79 126]
[80 125]
[81 124]
[83 123]
[84 122]
[85 121]
[86 120]
[87 119]
[88 118]
[94 114]
[95 113]
[96 112]
[97 111]
[98 110]
[99 109]
[100 108]
[101 107]
[102 106]
[130 137]
[131 136]
[138 151]
[139 150]
[140 149]
[141 148]
[142 147]
[181 210]
[182 209]
[183 208]
[184 207]
[186 203]
[187 202]
[188 201]
[189 200]
[190 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
