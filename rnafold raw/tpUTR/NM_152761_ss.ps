%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 15:01:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUUGUGAAAACUAAGGAAUCUAUGUCAGAGUGUCAGCUGGAAAAAGAAAAAAGGACUCAUUUUCCUGGUAUCAAAACUUGGCAGCUGGUGAUUCUCCAUCAUGAUAAUGAACAGUUAAUUGACAGAAAACCAAAGUUGUUUAACAAUCUGCUUGUCUGUCUAUAAAUAAUGAGUAUGUGUAAUAAAGGAAAAUAACAUAGAAU\
) } def
/len { sequence length } bind def

/coor [
[157.86882019 274.42315674]
[157.89488220 289.51162720]
[154.01394653 304.09246826]
[146.49060059 317.17150879]
[135.83781433 327.85705566]
[122.78190613 335.42050171]
[108.21305084 339.34616089]
[93.12458038 339.36639404]
[78.54524994 335.47982788]
[65.46909332 327.95144653]
[54.78768158 317.29452515]
[47.22927475 304.23568726]
[43.30923080 289.66534424]
[43.29481506 274.57684326]
[47.18701553 259.99902344]
[54.72045517 246.92578125]
[65.38149261 236.24847412]
[78.44323730 228.69511414]
[93.01511383 224.78070068]
[108.10359955 224.77210999]
[111.96737671 210.27827454]
[115.83116150 195.78443909]
[119.69493866 181.29060364]
[123.55871582 166.79676819]
[127.42249298 152.30293274]
[131.28627014 137.80911255]
[79.92506409 137.01396179]
[65.08984375 95.98888397]
[50.89670181 91.13555908]
[36.70355988 86.28224182]
[22.51041985 81.42891693]
[8.31727886 76.57559204]
[-9.66116333 80.54751587]
[-20.68090248 66.89243317]
[-34.94675064 62.25717926]
[-49.21259689 57.62192535]
[-63.47844315 52.98666763]
[-77.74429321 48.35141373]
[-92.01013947 43.71615982]
[-106.27598572 39.08090210]
[-117.37705994 52.70039368]
[-132.82469177 60.99842834]
[-150.23913574 62.72738266]
[-166.94937134 57.64927292]
[-180.40286255 46.56807327]
[-188.55540466 31.20259094]
[-190.18173218 13.91988087]
[-204.64553833 9.94515896]
[-215.60169983 20.61800385]
[-230.33175659 24.34923172]
[-244.85519409 20.23384476]
[-255.29882812 9.47343254]
[-258.92974854 -4.97240067]
[-273.39352417 -8.94712353]
[-287.85733032 -12.92184639]
[-302.32113647 -16.89656830]
[-315.08401489 -7.86091995]
[-330.66464233 -9.19454670]
[-341.70629883 -20.26774979]
[-342.99545288 -35.85210419]
[-333.92343140 -48.58914948]
[-318.77374268 -52.46484756]
[-304.69961548 -45.64920807]
[-298.34640503 -31.36037064]
[-283.88262939 -27.38564873]
[-269.41882324 -23.41092491]
[-254.95501709 -19.43620300]
[-244.45190430 -29.99794006]
[-229.97610474 -33.91037369]
[-215.38916016 -30.02609062]
[-204.63438416 -19.29150391]
[-200.67080688 -4.51864386]
[-186.20700073 -0.54392117]
[-179.35057068 -11.10493469]
[-169.78796387 -19.32403183]
[-158.28402710 -24.53057098]
[-145.76258850 -26.29538536]
[-133.23229980 -24.46614647]
[-121.70539856 -19.18045235]
[-112.11592102 -10.85553169]
[-105.24402618 -0.15532981]
[-101.65250397 12.06244278]
[-101.64073181 24.81505585]
[-87.37488556 29.45031166]
[-73.10903931 34.08556747]
[-58.84318924 38.72082138]
[-44.57734299 43.35607529]
[-30.31149483 47.99132919]
[-16.04564667 52.62658691]
[-5.12575483 47.41556931]
[6.79934883 51.16415024]
[13.17060280 62.38245010]
[27.36374474 67.23577118]
[41.55688477 72.08909607]
[55.75002670 76.94242096]
[69.94316864 81.79574585]
[80.02873993 66.94044495]
[97.44850159 57.96993637]
[118.68035126 58.41147232]
[138.59263611 69.68552399]
[139.96994019 54.74888611]
[141.34722900 39.81225204]
[142.72451782 24.87561798]
[135.37590027 10.21513653]
[144.62265015 -3.32847786]
[160.95252991 -1.82271552]
[167.56674194 13.18342400]
[157.66116333 26.25291061]
[156.28385925 41.18954468]
[154.90657043 56.12618256]
[153.52928162 71.06281281]
[159.52864075 75.56366730]
[167.89833069 63.11584854]
[176.26802063 50.66802597]
[179.22962952 35.96330643]
[193.24562073 30.61988831]
[205.24478149 39.62100220]
[204.03680420 54.57228088]
[190.74670410 61.53025436]
[181.13702393 73.04781342]
[171.52735901 84.56537628]
[177.52671814 89.06623077]
[191.48181152 83.56574249]
[205.43690491 78.06525421]
[219.39199829 72.56476593]
[233.34709167 67.06427765]
[247.30218506 61.56378555]
[257.30377197 49.30495834]
[271.98171997 51.83619308]
[285.93679810 46.33570480]
[295.93838501 34.07687378]
[310.61633301 36.60810852]
[324.57144165 31.10762024]
[330.42037964 19.60836220]
[342.16061401 15.31568336]
[353.30844116 20.01933479]
[367.34619141 14.73334312]
[381.38394165 9.44735146]
[395.42169189 4.16135979]
[409.45941162 -1.12463188]
[422.15173340 -12.36479855]
[436.46621704 -3.28008652]
[431.69918823 12.98987675]
[414.74542236 12.91311359]
[400.70767212 18.19910431]
[386.66992188 23.48509598]
[372.63217163 28.77108765]
[358.59442139 34.05707932]
[348.21389771 48.20418167]
[330.07192993 45.06271362]
[316.11682129 50.56320190]
[307.11340332 62.42860031]
[291.43728638 60.29079819]
[277.48220825 65.79128265]
[268.47879028 77.65668488]
[252.80267334 75.51888275]
[238.84757996 81.01937103]
[224.89248657 86.51985931]
[210.93739319 92.02034760]
[196.98229980 97.52083588]
[183.02720642 103.02132416]
[181.64991760 117.95795441]
[194.36386108 125.91757202]
[207.07780457 133.87719727]
[219.79176331 141.83680725]
[235.59446716 142.60163879]
[242.27633667 155.91336060]
[254.99028015 163.87297058]
[267.70422363 171.83259583]
[283.59851074 169.65275574]
[295.11282349 180.82417297]
[293.41436768 196.77706909]
[279.80606079 205.27374268]
[264.72702026 199.79629517]
[259.74462891 184.54653931]
[247.03067017 176.58692932]
[234.31671143 168.62730408]
[219.42340088 168.43180847]
[211.83213806 154.55075073]
[199.11819458 146.59114075]
[186.40425110 138.63153076]
[173.69029236 130.67190552]
[166.71275330 133.42214966]
[174.05424500 146.50276184]
[181.39573669 159.58337402]
[188.73724365 172.66398621]
[199.27798462 183.33604431]
[199.11857605 198.33520508]
[188.35340881 208.78083801]
[173.35626221 208.48835754]
[163.00656128 197.63093567]
[163.43144226 182.63842773]
[159.87351990 168.06649780]
[156.31558228 153.49456787]
[152.75765991 138.92263794]
[145.78010559 141.67288208]
[141.91633606 156.16671753]
[138.05255127 170.66055298]
[134.18876648 185.15438843]
[130.32499695 199.64822388]
[126.46121216 214.14205933]
[122.59743500 228.63587952]
[135.67939758 236.15417480]
[146.36903381 246.80284119]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 202]
[21 201]
[22 200]
[23 199]
[24 198]
[25 197]
[26 196]
[28 96]
[29 95]
[30 94]
[31 93]
[32 92]
[34 89]
[35 88]
[36 87]
[37 86]
[38 85]
[39 84]
[40 83]
[47 73]
[48 72]
[53 67]
[54 66]
[55 65]
[56 64]
[100 111]
[101 110]
[102 109]
[103 108]
[122 161]
[123 160]
[124 159]
[125 158]
[126 157]
[127 156]
[129 154]
[130 153]
[132 151]
[133 150]
[136 148]
[137 147]
[138 146]
[139 145]
[140 144]
[162 182]
[163 181]
[164 180]
[165 179]
[167 177]
[168 176]
[169 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
