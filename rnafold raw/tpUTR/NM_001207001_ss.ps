%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 04:30:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGGCUUUAAUACGUGUUAUUUGCUCAUCUGUAUUUCUUACUCUUUGCACAAUUAAACCAUGUUCCUUUUACUUAUGUACAUUUUUAAUAAAAGAAAGUUGUUAAUGACUCA\
) } def
/len { sequence length } bind def

/coor [
[55.67486954 100.75749207]
[40.84988785 98.47277832]
[26.02490616 96.18806458]
[11.19992447 93.90335083]
[2.09692049 95.70269012]
[-4.00309086 91.34354401]
[-18.75883293 88.64761353]
[-33.51457596 85.95167542]
[-48.27031708 83.25573730]
[-63.02605820 80.55979919]
[-77.78179932 77.86386108]
[-88.90577698 84.57230377]
[-101.21254730 81.92870331]
[-108.14137268 71.90572357]
[-122.81647491 68.80064392]
[-137.49157715 65.69556427]
[-152.16667175 62.59048843]
[-165.21154785 80.03121185]
[-185.03512573 88.89220428]
[-206.59968567 86.99169159]
[-224.45915222 74.87381744]
[-234.13433838 55.65500641]
[-249.12130737 56.28036118]
[-264.10824585 56.90571976]
[-274.62216187 68.70544434]
[-290.40484619 69.53124237]
[-302.09277344 58.89318466]
[-302.75164795 43.10263443]
[-291.99060059 31.52785301]
[-276.19396973 31.03594780]
[-264.73361206 41.91876221]
[-249.74665833 41.29340363]
[-234.75970459 40.66804504]
[-232.57090759 31.65995598]
[-228.48735046 23.32636452]
[-222.69711304 16.06101990]
[-215.46903992 10.20824528]
[-207.14021301 6.04661655]
[-198.10031128 3.77570653]
[-188.77330017 3.50651908]
[-179.59759521 5.25607109]
[-171.00543213 8.94638538]
[-163.40252686 14.40795898]
[-157.14889526 21.38754082]
[-152.54182434 29.55987358]
[-149.80172729 38.54285431]
[-149.06159973 47.91539001]
[-134.38648987 51.02046967]
[-119.71139526 54.12554550]
[-105.03630066 57.23062134]
[-88.74895477 50.86112213]
[-75.08586121 63.10811996]
[-60.33012390 65.80405426]
[-45.57437897 68.49999237]
[-30.81863785 71.19593048]
[-16.06289673 73.89186859]
[-1.30715394 76.58780670]
[13.48463726 79.07836914]
[28.30961990 81.36308289]
[43.13460159 83.64779663]
[57.95958328 85.93251038]
[62.68373489 76.06702423]
[69.67967224 67.65856171]
[78.52148438 61.21901703]
[88.67089844 57.14043427]
[99.51001740 55.67110443]
[110.37896729 56.90048599]
[120.61605072 60.75373459]
[129.59803772 66.99626160]
[136.77813721 75.24803162]
[141.71919250 85.00668335]
[144.12042236 95.67811584]
[143.83564758 106.61266327]
[158.07550049 111.32717133]
[172.31535339 116.04167938]
[186.55520630 120.75617981]
[200.54830933 113.91287231]
[214.92237854 118.89690399]
[221.36019897 132.27935791]
[235.60005188 136.99386597]
[249.83990479 141.70837402]
[265.37255859 138.70056152]
[275.02304077 150.04595947]
[289.26287842 154.76046753]
[303.50274658 159.47497559]
[317.74258423 164.18946838]
[330.26766968 155.02966309]
[345.78472900 155.01493835]
[358.32717896 164.15097046]
[363.07214355 178.92475891]
[358.19512939 193.65548706]
[345.57141113 202.67889404]
[330.05511475 202.52526855]
[317.61251831 193.25372314]
[313.02807617 178.42932129]
[298.78823853 173.71482849]
[284.54837036 169.00032043]
[270.30853271 164.28581238]
[255.79438782 167.63082886]
[245.12539673 155.94822693]
[230.88554382 151.23371887]
[216.64569092 146.51921082]
[203.49386597 153.41596985]
[188.98547363 148.83763123]
[181.84069824 134.99603271]
[167.60084534 130.28152466]
[153.36099243 125.56702423]
[139.12113953 120.85251617]
[126.54385376 135.50654602]
[108.92967987 143.42294312]
[89.62103271 143.09951782]
[72.28187561 134.59764099]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 61]
[2 60]
[3 59]
[4 58]
[6 57]
[7 56]
[8 55]
[9 54]
[10 53]
[11 52]
[14 50]
[15 49]
[16 48]
[17 47]
[22 33]
[23 32]
[24 31]
[73 108]
[74 107]
[75 106]
[76 105]
[79 102]
[80 101]
[81 100]
[83 98]
[84 97]
[85 96]
[86 95]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
