%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 05:36:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCCCCUCAUGCUAGCCUAGUCCCUGGAGGAGGGAGUCCGGCCCCAGGCCAGGGACUAAGGAGCAAUGACCAUUGUGCACAUGCGUGUGGGAAGGGGUUGCUAGGGGGUGGGGACGGCUAACCAGGGUAAGAAUGUUCAGGGGGCUGCCCAGGAGGGGCCCCCAACCUGACUAUCAUGGACAAGAGAUUUGAUGGAUAGAAUAAAAGGCUGCAGCGAG\
) } def
/len { sequence length } bind def

/coor [
[236.02014160 117.27870941]
[221.06680298 116.09645844]
[206.11346436 114.91420746]
[191.16014099 113.73195648]
[176.20680237 112.54970551]
[161.24536133 111.47474670]
[146.27661133 110.50711823]
[131.30784607 109.53948975]
[127.50800323 118.96349335]
[120.88790894 126.94534302]
[111.97774506 132.64770508]
[101.55364990 135.42369080]
[90.57055664 134.88813782]
[80.07473755 130.96539307]
[71.10418701 123.90834808]
[64.58620453 114.28554535]
[51.18708420 121.02821350]
[37.78796387 127.77088165]
[24.43755150 134.60948181]
[11.13653088 141.54367065]
[-2.16448951 148.47784424]
[-15.46550941 155.41203308]
[-28.76652908 162.34620667]
[-42.06755066 169.28038025]
[-55.36857224 176.21456909]
[-68.66959381 183.14874268]
[-81.97061157 190.08293152]
[-82.97894287 203.82633972]
[-90.58482361 215.18757629]
[-102.71360016 221.25982666]
[-116.15071106 220.55328369]
[-127.39344788 213.35917664]
[-140.79257202 220.10183716]
[-154.19169617 226.84451294]
[-160.44613647 233.49346924]
[-167.83172607 233.58624268]
[-181.32618713 240.13601685]
[-192.93542480 252.49165344]
[-208.02195740 244.75650024]
[-204.76547241 228.11825562]
[-187.87596130 226.64154053]
[-174.38150024 220.09178162]
[-160.93435669 213.44538879]
[-147.53523254 206.70271301]
[-134.13612366 199.96005249]
[-132.00540161 183.68040466]
[-120.47392273 171.76074219]
[-103.94567871 169.03828430]
[-88.90479279 176.78190613]
[-75.60377502 169.84773254]
[-62.30274963 162.91354370]
[-49.00173187 155.97937012]
[-35.70071030 149.04518127]
[-22.39969063 142.11100769]
[-9.09867001 135.17681885]
[4.20235014 128.24264526]
[17.50337029 121.30846405]
[21.97879219 115.43255615]
[31.04529572 114.37176514]
[44.44441605 107.62909698]
[57.84353638 100.88642883]
[60.20067978 86.07278442]
[49.55610657 75.50429535]
[38.91153717 64.93579865]
[28.26696396 54.36730194]
[17.62239265 43.79880524]
[6.97782040 33.23031235]
[-5.89559937 32.49707413]
[-14.54362297 23.48040199]
[-14.72597027 11.38895035]
[-25.21784592 0.66884917]
[-40.40013123 -3.78184772]
[-43.77268600 -18.28960991]
[-54.26456070 -29.00971031]
[-69.44684601 -33.46040726]
[-72.81940460 -47.96817017]
[-83.31127930 -58.68827057]
[-93.80315399 -69.40837097]
[-104.29502869 -80.12847137]
[-114.78690338 -90.84857178]
[-130.71774292 -94.73964691]
[-135.05302429 -110.55537415]
[-123.33299255 -122.02589417]
[-107.61420441 -117.35131836]
[-104.06680298 -101.34044647]
[-93.57492828 -90.62034607]
[-83.08305359 -79.90024567]
[-72.59117889 -69.18014526]
[-62.09930420 -58.46004486]
[-47.66746521 -54.77611923]
[-43.54446030 -39.50158310]
[-33.05258560 -28.78148460]
[-18.62074661 -25.09756088]
[-14.49774456 -9.82302570]
[-4.00586939 0.89707500]
[13.12716579 4.70688105]
[17.54631615 22.58573914]
[28.19088745 33.15423584]
[38.83546066 43.72272873]
[49.48003006 54.29122543]
[60.12460327 64.85971832]
[70.76917267 75.42821503]
[89.01991272 64.85303497]
[109.32712555 65.79098511]
[125.27695465 77.12136841]
[132.27548218 94.57073212]
[147.24423218 95.53836060]
[162.21299744 96.50598907]
[170.97262573 93.93779755]
[177.38905334 97.59637451]
[192.34237671 98.77861786]
[207.29571533 99.96086884]
[222.24905396 101.14311981]
[237.20239258 102.32537079]
[252.19892883 102.64810944]
[267.18927002 102.11028290]
[282.17962646 101.57245636]
[297.16998291 101.03462219]
[312.16033936 100.49679565]
[321.95312500 79.76245880]
[341.30801392 67.64926910]
[364.04180908 67.90252686]
[382.95877075 80.33658600]
[395.94915771 72.83658600]
[408.93954468 65.33658600]
[421.92990112 57.83658218]
[418.97494507 47.15552139]
[420.55664062 35.25686264]
[427.11166382 24.11462212]
[438.21249390 15.82598972]
[452.55227661 12.23610687]
[462.41207886 0.93194854]
[465.03543091 -15.25601196]
[480.46026611 -20.82435608]
[492.81884766 -10.04484844]
[489.39770508 5.99347687]
[473.71624756 10.79176617]
[463.85644531 22.09592438]
[468.15090942 28.24470329]
[481.03433228 46.69104004]
[495.04190063 41.32556534]
[509.04943848 35.96009064]
[523.05700684 30.59461784]
[537.06457520 25.22914505]
[551.07214355 19.86367035]
[555.51971436 14.98474312]
[560.94824219 13.32841492]
[565.55926514 14.55153179]
[579.71496582 9.59009266]
[593.87066650 4.62865353]
[604.14514160 -8.15287685]
[620.30792236 -5.37864256]
[625.73211670 10.09746265]
[614.83782959 22.35494804]
[598.83209229 18.78436279]
[584.67639160 23.74580193]
[570.52069092 28.70724106]
[556.43762207 33.87122726]
[542.43005371 39.23670197]
[528.42248535 44.60217667]
[514.41491699 49.96765137]
[500.40737915 55.33312225]
[486.39981079 60.69859695]
[468.99389648 79.78590393]
[446.08724976 82.41535187]
[429.42990112 70.82696533]
[416.43954468 78.32696533]
[403.44915771 85.82696533]
[390.45877075 93.32696533]
[392.69863892 106.84041595]
[390.26516724 120.32035065]
[403.14660645 128.00592041]
[416.02807617 135.69149780]
[428.90954590 143.37705994]
[441.79098511 151.06263733]
[454.67245483 158.74819946]
[467.09567261 149.94006348]
[482.02871704 146.95277405]
[496.88436890 150.30390930]
[509.08874512 159.41285706]
[516.52740479 172.70143127]
[517.91156006 187.86732483]
[513.00134277 202.28292847]
[502.64752197 213.45066833]
[488.64398193 219.43566895]
[473.41687012 219.20098877]
[459.60440063 212.78729248]
[449.59967041 201.30577087]
[445.13604736 186.74569702]
[446.98687744 171.62966919]
[434.10540771 163.94409180]
[421.22396851 156.25851440]
[408.34249878 148.57295227]
[395.46102905 140.88737488]
[382.57958984 133.20181274]
[377.26623535 138.26531982]
[371.11151123 142.28349304]
[364.31872559 145.11897278]
[357.11312866 146.67358398]
[349.73437500 146.89169312]
[342.42861938 145.76216125]
[335.44030762 143.31889343]
[329.00390625 139.63980103]
[323.33618164 134.84432983]
[318.62875366 129.08959961]
[315.04171753 122.56524658]
[312.69818115 115.48715210]
[297.70782471 116.02497864]
[282.71746826 116.56280518]
[267.72711182 117.10063934]
[252.73675537 117.63846588]
[264.40539551 127.06408691]
[268.41241455 141.51898193]
[263.26187134 155.60699463]
[250.87658691 164.06893921]
[235.88006592 163.74588013]
[223.87066650 154.75842285]
[219.33161926 140.46166992]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 114]
[2 113]
[3 112]
[4 111]
[5 110]
[6 108]
[7 107]
[8 106]
[16 61]
[17 60]
[18 59]
[19 57]
[20 56]
[21 55]
[22 54]
[23 53]
[24 52]
[25 51]
[26 50]
[27 49]
[32 45]
[33 44]
[34 43]
[36 42]
[37 41]
[62 102]
[63 101]
[64 100]
[65 99]
[66 98]
[67 97]
[70 95]
[71 94]
[73 92]
[74 91]
[76 89]
[77 88]
[78 87]
[79 86]
[80 85]
[115 211]
[116 210]
[117 209]
[118 208]
[119 207]
[123 169]
[124 168]
[125 167]
[126 166]
[131 138]
[132 137]
[140 163]
[141 162]
[142 161]
[143 160]
[144 159]
[145 158]
[148 157]
[149 156]
[150 155]
[171 195]
[172 194]
[173 193]
[174 192]
[175 191]
[176 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
