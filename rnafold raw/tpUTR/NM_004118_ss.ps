%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 00:10:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCAGCCUCACCUCGGGCAGUCCCUGCAGGUCCCUCACCCUCCGGGCUGAGCCUGGCUCUAGGACCUGAAGAACUCUCGAAGGACCCAGCCCUGGUGAGCCAAGGACAACCACACAGAAAGCCAGGAUUGAAGCGGUGCUCAGCCAGGCCCCUGGGGCCUCCGGACAAACUUGGGGGUGAGGGGAAGCAGGGCCUCUUGGGAUUUACUCUGUGGCUCUCAGGGCCAAUAAAGCCAUGUGAUGAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[429.00805664 807.22448730]
[415.92672729 815.57061768]
[400.44000244 814.60015869]
[388.50289917 804.68627930]
[384.70544434 789.64105225]
[390.50784302 775.24963379]
[403.67895508 767.04589844]
[404.61706543 752.07525635]
[405.55517578 737.10461426]
[406.49328613 722.13403320]
[407.43139648 707.16339111]
[416.84869385 683.03991699]
[434.76605225 675.25195312]
[428.23364258 661.74908447]
[421.70123291 648.24621582]
[415.16882324 634.74328613]
[408.63641357 621.24041748]
[402.10400391 607.73754883]
[396.37683105 603.09716797]
[395.57553101 594.02453613]
[389.21261597 580.44097900]
[376.80712891 572.19763184]
[377.95986938 556.41845703]
[371.59695435 542.83489990]
[365.23406982 529.25134277]
[358.87118530 515.66772461]
[352.50827026 502.08416748]
[346.14538574 488.50061035]
[333.54910278 485.85952759]
[324.63491821 476.30853271]
[322.81439209 463.17504883]
[328.97238159 451.21362305]
[322.77999878 437.55148315]
[316.58761597 423.88934326]
[310.39523315 410.22717285]
[304.20285034 396.56503296]
[298.01046753 382.90289307]
[291.81805420 369.24072266]
[285.62567139 355.57858276]
[279.43328857 341.91644287]
[273.24090576 328.25427246]
[267.63168335 323.47198486]
[267.05770874 314.38217163]
[261.03680420 300.64358521]
[255.01589966 286.90499878]
[234.68795776 259.10595703]
[224.59069824 248.01338196]
[214.49342346 236.92080688]
[204.39614868 225.82823181]
[194.29887390 214.73565674]
[184.20161438 203.64309692]
[174.10433960 192.55052185]
[164.00706482 181.45794678]
[149.71792603 177.25444031]
[146.15008545 161.84077454]
[131.86093140 157.63728333]
[128.29310608 142.22361755]
[118.19583130 131.13104248]
[108.09855652 120.03846741]
[97.72744751 123.65620422]
[85.89183807 121.74064636]
[75.57613373 113.83287811]
[69.79793549 101.07175446]
[55.49767685 96.54376221]
[40.00564957 99.75431824]
[30.20773125 88.53602600]
[15.90747643 84.00803375]
[1.60722113 79.48004150]
[-9.53924274 87.01348877]
[-22.79594612 86.76377106]
[-33.33695602 79.04551697]
[-37.45361328 66.85147095]
[-51.69607925 62.14485168]
[-67.63514709 66.00208282]
[-78.74766541 53.94206238]
[-73.60202789 38.37111282]
[-57.49162674 35.30728912]
[-46.98945999 47.90238953]
[-32.74699783 52.60900879]
[-18.04698181 44.41508102]
[-1.64980948 49.50033188]
[6.13521290 65.17978668]
[20.43546867 69.70777893]
[34.73572159 74.23577118]
[49.20489883 70.70134735]
[60.02566910 82.24350739]
[74.32592773 86.77149963]
[84.42319489 75.67893219]
[78.57471466 61.86606216]
[72.72622681 48.05319977]
[60.22060394 38.36196899]
[62.38320923 23.62519836]
[56.53472519 9.81233215]
[50.68624115 -4.00053263]
[44.83776093 -17.81339836]
[38.98927689 -31.62626266]
[33.14079285 -45.43912888]
[16.51353455 -44.37559509]
[0.55438262 -49.07088089]
[-12.80641842 -58.93870926]
[-21.95920372 -72.76830292]
[-25.80880737 -88.87293243]
[-23.90558243 -105.29563141]
[-16.49783707 -120.04698944]
[-4.49961424 -131.34616089]
[-10.69200134 -145.00831604]
[-24.33109283 -154.11366272]
[-22.99532127 -170.45831299]
[-8.05881405 -177.22830200]
[5.11303139 -167.45924377]
[2.97014928 -151.20069885]
[9.16253567 -137.53855896]
[22.49404335 -139.25630188]
[35.78728867 -137.15368652]
[47.96823502 -131.39103699]
[58.05002975 -122.42479706]
[65.21295166 -110.97132111]
[68.87106323 -97.94974518]
[68.72011566 -84.40814209]
[64.76285553 -71.43923187]
[57.30954742 -60.09214783]
[46.95365906 -51.28761292]
[52.80214310 -37.47474670]
[58.65062332 -23.66188049]
[64.49910736 -9.84901619]
[70.34758759 3.96384954]
[76.19607544 17.77671432]
[88.28337860 26.47995567]
[86.53909302 42.20471573]
[92.38758087 56.01758194]
[98.23606110 69.83044434]
[121.74064636 85.89183807]
[119.19113159 109.94120026]
[129.28840637 121.03376770]
[139.38566589 132.12634277]
[154.39704895 137.12326050]
[157.24266052 151.74351501]
[172.25402832 156.74043274]
[175.09963989 171.36068726]
[185.19691467 182.45324707]
[195.29417419 193.54582214]
[205.39144897 204.63839722]
[215.48872375 215.73095703]
[225.58599854 226.82353210]
[235.68325806 237.91610718]
[245.78053284 249.00868225]
[260.77935791 248.82093811]
[270.59582520 237.47911072]
[280.41229248 226.13728333]
[290.22872925 214.79544067]
[300.04519653 203.45361328]
[309.86166382 192.11178589]
[315.65548706 176.17855835]
[332.56994629 177.33522034]
[336.14086914 193.90884399]
[321.20349121 201.92825317]
[311.38702393 213.27008057]
[301.57055664 224.61190796]
[291.75411987 235.95373535]
[281.93765259 247.29556274]
[272.12118530 258.63739014]
[282.18383789 247.51341248]
[296.16528320 242.08021545]
[311.09881592 243.49061584]
[323.81579590 251.44537354]
[331.61788940 264.25659180]
[332.84957886 279.20593262]
[327.24954224 293.12139893]
[316.00601196 303.05029297]
[301.50466919 306.88586426]
[286.82254028 303.81427002]
[275.07489014 294.48727417]
[268.75448608 280.88409424]
[274.77539062 294.62268066]
[280.79629517 308.36126709]
[286.90304565 322.06188965]
[293.09545898 335.72402954]
[299.28784180 349.38619995]
[305.48022461 363.04833984]
[311.67260742 376.71047974]
[317.86499023 390.37265015]
[324.05737305 404.03479004]
[330.24975586 417.69692993]
[336.44213867 431.35910034]
[342.63455200 445.02124023]
[359.12677002 450.89132690]
[366.12124634 466.56948853]
[359.72894287 482.13769531]
[366.09185791 495.72128296]
[372.45474243 509.30484009]
[378.81765747 522.88842773]
[385.18054199 536.47198486]
[391.54342651 550.05560303]
[404.40405273 559.27050781]
[402.79620361 574.07806396]
[409.15908813 587.66168213]
[415.60687256 601.20513916]
[422.13928223 614.70800781]
[428.67169189 628.21087646]
[435.20410156 641.71380615]
[441.73651123 655.21667480]
[448.26892090 668.71954346]
[448.55737305 653.72229004]
[456.02420044 640.71282959]
[468.82824707 632.89898682]
[483.81231689 632.20745850]
[497.28161621 638.80883789]
[505.91488647 651.07531738]
[507.58334351 665.98223877]
[501.87561035 679.85388184]
[490.19906616 689.26971436]
[475.43292236 691.90808105]
[461.21920776 687.11895752]
[471.72579956 697.82470703]
[482.23236084 708.53039551]
[492.73892212 719.23608398]
[503.24548340 729.94177246]
[513.75207520 740.64746094]
[529.16174316 747.71697998]
[526.63433838 764.48150635]
[509.82534790 766.69372559]
[503.04635620 751.15405273]
[492.53979492 740.44836426]
[482.03323364 729.74267578]
[471.52664185 719.03692627]
[461.02008057 708.33123779]
[450.51351929 697.62554932]
[443.48565674 700.24450684]
[448.72360229 714.30029297]
[453.96157837 728.35601807]
[459.19955444 742.41174316]
[464.43750000 756.46746826]
[469.67547607 770.52319336]
[474.91342163 784.57897949]
[484.23846436 796.32812500]
[475.94589233 808.82745361]
[461.49578857 804.80328369]
[460.85769653 789.81689453]
[455.61972046 775.76116943]
[450.38177490 761.70544434]
[445.14379883 747.64971924]
[439.90585327 733.59399414]
[434.66787720 719.53820801]
[429.42990112 705.48248291]
[422.40203857 708.10150146]
[421.46392822 723.07214355]
[420.52581787 738.04272461]
[419.58770752 753.01336670]
[418.64959717 767.98400879]
[430.69354248 777.76782227]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 249]
[8 248]
[9 247]
[10 246]
[11 245]
[13 202]
[14 201]
[15 200]
[16 199]
[17 198]
[18 197]
[20 196]
[21 195]
[23 193]
[24 192]
[25 191]
[26 190]
[27 189]
[28 188]
[32 185]
[33 184]
[34 183]
[35 182]
[36 181]
[37 180]
[38 179]
[39 178]
[40 177]
[41 176]
[43 175]
[44 174]
[45 173]
[46 146]
[47 145]
[48 144]
[49 143]
[50 142]
[51 141]
[52 140]
[53 139]
[55 137]
[57 135]
[58 134]
[59 133]
[63 87]
[64 86]
[66 84]
[67 83]
[68 82]
[72 79]
[73 78]
[88 131]
[89 130]
[90 129]
[92 127]
[93 126]
[94 125]
[95 124]
[96 123]
[97 122]
[105 112]
[106 111]
[147 161]
[148 160]
[149 159]
[150 158]
[151 157]
[152 156]
[213 227]
[214 226]
[215 225]
[216 224]
[217 223]
[218 222]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
