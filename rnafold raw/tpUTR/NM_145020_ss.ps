%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 19:57:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCCGUGAGCAUCAAUAUAUCUUUUCUUGGUCUUUUAAUAUUUUUAACUACAGUAUGCUUGUAUGCUUCUUUUAACUCCUGGAUAAACUUUUCUUUUUUCCCUGAGUUUGUGUAAUUAAUUGAACAUAAUUUUCUUCCUUUGAAUAAACCUGUGCCUAUUUUGGAGUUCACAGACUUACAAAUCCAA\
) } def
/len { sequence length } bind def

/coor [
[128.90115356 487.36901855]
[141.69410706 479.20169067]
[138.70631409 464.50225830]
[128.58895874 453.57119751]
[133.42242432 438.50637817]
[130.43463135 423.80697632]
[127.44683838 409.10754395]
[124.45904541 394.40811157]
[121.47126007 379.70867920]
[118.48346710 365.00924683]
[108.36611938 354.07818604]
[113.19956970 339.01336670]
[110.21178436 324.31396484]
[107.22399139 309.61453247]
[104.23620605 294.91510010]
[94.11885071 283.98403931]
[98.95230865 268.91921997]
[95.96451569 254.21980286]
[92.97673035 239.52037048]
[80.43383026 238.16967773]
[68.76207733 233.33528137]
[58.90967560 225.39900208]
[51.68009949 214.99508667]
[47.66656876 202.95954895]
[47.20338440 190.26296997]
[50.33810806 177.93223572]
[56.82689667 166.96749878]
[66.15343475 158.26103210]
[77.57001495 152.52464294]
[75.32257843 137.69396973]
[73.07514191 122.86328888]
[67.93724823 136.95591736]
[69.79418945 151.84053040]
[67.31069946 166.63351440]
[60.69482803 180.09568787]
[50.50075912 191.09936523]
[37.58242798 198.72279358]
[23.02196884 202.32739258]
[8.03907585 201.61119080]
[-6.11117125 196.63418579]
[-18.24344254 187.81330872]
[-27.34144974 175.88743591]
[-32.64307404 161.85559082]
[-33.70421219 146.89317322]
[-30.43597794 132.25354004]
[-23.11214066 119.16304016]
[-12.34619808 108.71820831]
[0.96001095 101.79399109]
[15.69186020 98.97041321]
[30.61530113 100.48399353]
[44.47847366 106.20690155]
[59.42778015 104.97476196]
[45.71781158 98.88898468]
[32.00783920 92.80319977]
[18.29787064 86.71742249]
[4.58790064 80.63164520]
[-9.12206936 74.54586029]
[-25.36342430 76.81532288]
[-35.23478699 63.71997070]
[-28.58134651 48.73118591]
[-12.24759197 47.26813889]
[-3.03628969 60.83589172]
[10.67368031 66.92167664]
[24.38364983 73.00745392]
[38.09362030 79.09323120]
[51.80359268 85.17901611]
[65.51356506 91.26479340]
[71.58854675 86.86654663]
[62.47459412 74.95286560]
[50.56003571 65.84005737]
[55.32791519 51.61798096]
[70.32764435 51.52804565]
[75.26561737 65.69226074]
[83.73851776 78.07006073]
[89.81350708 73.67182159]
[88.31206512 58.74715042]
[86.81063080 43.82248306]
[85.30919647 28.89781570]
[73.35498047 18.91110229]
[72.04492188 3.75397849]
[81.63939667 -7.58099508]
[80.13796234 -22.50566292]
[78.63652802 -37.43032837]
[69.55674744 -50.38672638]
[75.98123932 -63.82454681]
[74.47980499 -78.74921417]
[72.97837067 -93.67388153]
[59.95234299 -102.32585907]
[55.58482361 -117.34114075]
[61.93802261 -131.62997437]
[76.01214600 -138.44561768]
[91.16183472 -134.56991577]
[100.23386383 -121.83287811]
[98.94469452 -106.24851990]
[87.90303802 -95.17531586]
[89.40447235 -80.25064850]
[90.90590668 -65.32598114]
[99.87829590 -53.43709946]
[93.56119537 -38.93176651]
[95.06262970 -24.00709724]
[96.56406403 -9.08243084]
[108.22405243 0.11432441]
[109.95932770 15.22867107]
[100.23386383 27.39638138]
[101.73529816 42.32104874]
[103.23673248 57.24571609]
[104.73817444 72.17037964]
[118.78043365 77.44435883]
[129.73553467 67.19809723]
[140.69062805 56.95183945]
[151.64573669 46.70557785]
[162.60083008 36.45932007]
[173.55592346 26.21306038]
[170.00059509 11.27133465]
[174.40782166 -3.44164920]
[185.59210205 -13.96817112]
[200.54489136 -17.47665024]
[215.24398804 -13.02332211]
[225.73539734 -1.80611038]
[229.19699097 13.15761089]
[224.69761658 27.84267616]
[213.44757080 38.29887772]
[198.47306824 41.71354675]
[183.80218506 37.16815948]
[172.84709167 47.41441727]
[161.89198303 57.66067886]
[150.93688965 67.90693665]
[139.98179626 78.15319824]
[129.02668762 88.39945221]
[132.12675476 95.22877502]
[138.32687378 108.88742065]
[141.42692566 115.71674347]
[156.35159302 114.21530914]
[171.27626038 112.71387482]
[179.92823792 99.68784332]
[194.94352722 95.32032776]
[209.23236084 101.67352295]
[216.04800415 115.74765015]
[212.17230225 130.89733887]
[199.43525696 139.96936035]
[183.85090637 138.68019104]
[172.77769470 127.63854218]
[157.85302734 129.13996887]
[142.92835999 130.64140320]
[124.97267151 138.07272339]
[107.99494934 137.47860718]
[95.03764343 130.71339417]
[87.90582275 120.61585999]
[90.15325928 135.44653320]
[92.40069580 150.27720642]
[109.53374481 154.08993530]
[123.86761475 164.15892029]
[133.22782898 178.92373657]
[136.20706177 196.11408997]
[132.37673950 213.09896851]
[122.34836578 227.28929138]
[107.67615509 236.53257751]
[110.66394806 251.23200989]
[113.65173340 265.93142700]
[123.98279572 277.91390991]
[118.93563080 291.92730713]
[121.92341614 306.62673950]
[124.91120911 321.32617188]
[127.89900208 336.02560425]
[138.23005676 348.00805664]
[133.18289185 362.02148438]
[136.17068481 376.72088623]
[139.15847778 391.42031860]
[142.14627075 406.11975098]
[145.13404846 420.81918335]
[148.12184143 435.51858521]
[158.45289612 447.50106812]
[153.40573120 461.51446533]
[156.39352417 476.21389771]
[171.35978699 478.73892212]
[184.40126038 486.50320435]
[193.75421143 498.45672607]
[198.15373230 512.98284912]
[197.00480652 528.11706543]
[190.46282959 541.81256104]
[179.41255188 552.21716309]
[165.34841919 557.92376709]
[150.17251587 558.16046143]
[135.93722534 552.89538574]
[124.56777191 542.84057617]
[117.60178375 529.35577393]
[115.98134613 514.26477051]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 174]
[3 173]
[5 171]
[6 170]
[7 169]
[8 168]
[9 167]
[10 166]
[12 164]
[13 163]
[14 162]
[15 161]
[17 159]
[18 158]
[19 157]
[29 150]
[30 149]
[31 148]
[52 67]
[53 66]
[54 65]
[55 64]
[56 63]
[57 62]
[75 107]
[76 106]
[77 105]
[78 104]
[81 101]
[82 100]
[83 99]
[85 97]
[86 96]
[87 95]
[108 129]
[109 128]
[110 127]
[111 126]
[112 125]
[113 124]
[132 144]
[133 143]
[134 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
