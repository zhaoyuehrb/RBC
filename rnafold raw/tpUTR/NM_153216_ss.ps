%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 03:31:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUGAGGGGCUUGCCCUUCACGGCACGGUUGGAGAGGGGAGAAGAAGGGAAAACCCAGGAAAUGUCCCUAGGGUUCAUUUGAGGGCUUUUAGUAUUAAUUUCUCAUUCACUGUCUAAAGAAGUUAAGGAUACAUAGUAGGGAAUGGGGGUGGGAAUUGUUCAAGAAAAACCUGGGAGAGAAGAUGAAGUUUAUUGCAGUUUUGUGUUUUCCCUUUGUUUUUCCCUAGCAUUGGUUUAAAGGUACAUUACAGUAU\
AUAGAUGGUUUCG\
) } def
/len { sequence length } bind def

/coor [
[88.80976868 138.99699402]
[92.06680298 154.47932434]
[80.87796783 164.31086731]
[76.47657776 178.65058899]
[72.15898895 193.01577759]
[67.84140778 207.38095093]
[63.52381897 221.74613953]
[59.20623398 236.11131287]
[54.88864899 250.47650146]
[50.57106400 264.84167480]
[54.86029434 280.66995239]
[43.10692215 292.10632324]
[27.40180397 287.38601685]
[23.90102386 271.36486816]
[36.20588303 260.52410889]
[40.52346802 246.15892029]
[44.84105301 231.79373169]
[49.15863800 217.42855835]
[53.47622299 203.06336975]
[57.79380798 188.69818115]
[62.11139297 174.33300781]
[61.03088760 167.04844666]
[66.56419373 159.82580566]
[62.98635864 145.36730957]
[74.49599457 134.51194763]
[67.22554779 125.49940491]
[62.84547806 115.18654633]
[61.50418472 104.44032288]
[63.10369110 94.10843658]
[67.32154846 84.95272827]
[73.64989471 77.59294891]
[81.44753265 72.46526337]
[90.00028992 69.79796600]
[78.23298645 59.59167480]
[77.20372772 44.41289520]
[87.00637817 33.25746918]
[85.78147125 18.30756569]
[84.55656433 3.35766339]
[83.33165741 -11.59223938]
[82.10675049 -26.54214287]
[80.88184357 -41.49204636]
[79.65693665 -56.44194794]
[78.43202972 -71.39185333]
[77.20712280 -86.34175873]
[75.89494324 -101.28424835]
[74.49552155 -116.21882629]
[73.09610748 -131.15341187]
[71.69669342 -146.08798218]
[70.29727936 -161.02256775]
[68.89786530 -175.95713806]
[67.49844360 -190.89172363]
[66.09902954 -205.82629395]
[64.69961548 -220.76087952]
[63.30019760 -235.69546509]
[61.90078354 -250.63003540]
[52.90974808 -263.64816284]
[59.42591858 -277.04177856]
[58.02650452 -291.97634888]
[56.62708664 -306.91094971]
[55.22767258 -321.84552002]
[53.82825470 -336.78009033]
[44.42646790 -345.57656860]
[43.55081177 -358.02066040]
[51.12659073 -367.42294312]
[49.90168381 -382.37283325]
[48.67677689 -397.32275391]
[37.48716736 -404.78207397]
[32.69612122 -417.13943481]
[35.83963394 -429.81469727]
[45.55614853 -438.24642944]
[44.50591660 -453.20962524]
[43.45568848 -468.17282104]
[42.40545654 -483.13598633]
[33.72092056 -496.36056519]
[40.54812622 -509.59832764]
[39.49789810 -524.56152344]
[38.44766617 -539.52471924]
[37.39743805 -554.48791504]
[36.34720612 -569.45111084]
[35.29697418 -584.41430664]
[34.24674606 -599.37750244]
[22.89824104 -604.52319336]
[14.85040569 -613.94171143]
[11.57629299 -625.81506348]
[13.63518143 -637.88525391]
[20.57809830 -647.88342285]
[31.04394531 -653.95678711]
[30.34347153 -668.94042969]
[29.64299965 -683.92407227]
[28.94252777 -698.90765381]
[28.24205589 -713.89129639]
[27.54158401 -728.87493896]
[26.84111214 -743.85858154]
[10.41827106 -748.08123779]
[-3.73211312 -757.73345947]
[-13.85788345 -771.76147461]
[-18.65766335 -788.56188965]
[-17.44718170 -806.16485596]
[-10.25416756 -822.46466064]
[2.17113042 -835.47192383]
[18.43263245 -843.55615234]
[15.30253410 -858.22595215]
[12.17243576 -872.89569092]
[9.04233742 -887.56549072]
[5.91224003 -902.23529053]
[2.78214192 -916.90502930]
[-0.34795609 -931.57482910]
[-3.47805405 -946.24462891]
[-6.60815191 -960.91436768]
[-11.44349194 -968.62176514]
[-9.68808937 -975.77374268]
[-12.64665222 -990.47906494]
[-25.52305984 -999.24468994]
[-28.31398010 -1014.20013428]
[-19.87796021 -1026.42175293]
[-22.83652306 -1041.12707520]
[-25.79508781 -1055.83251953]
[-40.80778503 -1057.80676270]
[-54.36490631 -1064.55078125]
[-64.99588013 -1075.33325195]
[-71.54753113 -1088.98449707]
[-73.30919647 -1104.02355957]
[-70.08976746 -1118.81933594]
[-62.23847961 -1131.76672363]
[-50.60697556 -1141.46142578]
[-36.45695114 -1146.85180664]
[-21.32329750 -1147.35302734]
[-6.84760046 -1142.91088867]
[5.39992476 -1134.00708008]
[14.09075832 -1121.60754395]
[18.28218269 -1107.05725098]
[17.51954460 -1091.93457031]
[11.88557053 -1077.87976074]
[1.99138927 -1066.41748047]
[-11.08975124 -1058.79101562]
[-8.13118839 -1044.08569336]
[-5.17262459 -1029.38037109]
[7.33346415 -1021.37200928]
[10.54335117 -1006.50085449]
[2.05868363 -993.43762207]
[5.01724672 -978.73229980]
[8.06162930 -964.04449463]
[11.19172764 -949.37469482]
[14.32182503 -934.70495605]
[17.45192337 -920.03515625]
[20.58202171 -905.36535645]
[23.71212006 -890.69561768]
[26.84221649 -876.02581787]
[29.97231483 -861.35601807]
[33.10241318 -846.68621826]
[47.91636658 -844.33105469]
[55.44163513 -857.30682373]
[62.96690750 -870.28259277]
[70.49217987 -883.25836182]
[67.77629089 -899.06982422]
[78.55207062 -910.95520020]
[94.55326080 -909.79705811]
[103.50511932 -896.48376465]
[98.54055023 -881.22814941]
[83.46793365 -875.73309326]
[75.94266510 -862.75732422]
[68.41739655 -849.78155518]
[60.89212418 -836.80578613]
[71.08887482 -827.50445557]
[78.45444489 -815.96984863]
[82.53306580 -803.02758789]
[83.10172272 -789.58593750]
[80.18151855 -776.57183838]
[74.03209686 -764.86730957]
[65.12976837 -755.24926758]
[54.13111115 -748.33837891]
[41.82474899 -744.55908203]
[42.52521896 -729.57543945]
[43.22569275 -714.59179688]
[43.92616272 -699.60815430]
[44.62663651 -684.62451172]
[45.32710648 -669.64086914]
[46.02758026 -654.65722656]
[61.23383331 -645.62335205]
[68.00815582 -629.11413574]
[63.45028305 -611.69787598]
[49.20993423 -600.42767334]
[50.26016235 -585.46453857]
[51.31039429 -570.50134277]
[52.36062622 -555.53814697]
[53.41085434 -540.57495117]
[54.46108627 -525.61175537]
[55.51131821 -510.64855957]
[64.12073517 -498.49426270]
[57.36864471 -484.18621826]
[58.41887665 -469.22305298]
[59.46910477 -454.25985718]
[60.51933670 -439.29666138]
[73.68026733 -428.80099487]
[75.19094849 -411.69573975]
[63.62667847 -398.54763794]
[64.85158539 -383.59774780]
[66.07649231 -368.64782715]
[76.82185364 -354.75445557]
[68.76283264 -338.17950439]
[70.16225433 -323.24493408]
[71.56166840 -308.31036377]
[72.96108246 -293.37576294]
[74.36049652 -278.44119263]
[83.25143433 -266.49127197]
[76.83535767 -252.02944946]
[78.23477936 -237.09487915]
[79.63419342 -222.16029358]
[81.03360748 -207.22572327]
[82.43302155 -192.29113770]
[83.83244324 -177.35655212]
[85.23185730 -162.42198181]
[86.63127136 -147.48739624]
[88.03068542 -132.55282593]
[89.43010712 -117.61824799]
[90.82952118 -102.68367004]
[94.56925201 -96.33963013]
[92.15702820 -87.56666565]
[93.38193512 -72.61676025]
[94.60684204 -57.66685486]
[95.83174896 -42.71695328]
[97.05665588 -27.76704979]
[98.28156281 -12.81714630]
[99.50646973 2.13275647]
[100.73137665 17.08265877]
[101.95628357 32.03256226]
[113.44403076 41.44358063]
[114.89922333 56.58745956]
[104.95019531 68.57305908]
[127.21366119 77.18207550]
[139.20639038 100.74648285]
[131.81005859 128.80363464]
[145.23468018 137.17561340]
[144.57888794 152.05578613]
[151.79904175 165.20375061]
[159.01921082 178.35173035]
[166.23937988 191.49971008]
[173.45953369 204.64767456]
[184.01914978 207.06515503]
[191.36784363 214.72326660]
[193.26759338 224.94271851]
[189.33119202 234.32589722]
[196.24230957 247.63891602]
[203.15342712 260.95193481]
[210.06454468 274.26495361]
[225.20570374 278.79495239]
[232.63528442 292.74404907]
[227.94544983 307.83645630]
[213.91859436 315.11813354]
[198.87660217 310.26901245]
[191.74363708 296.16595459]
[196.75152588 281.17605591]
[189.84040833 267.86303711]
[182.92929077 254.55003357]
[176.01817322 241.23701477]
[159.00454712 232.00662231]
[160.31156921 211.86784363]
[153.09140015 198.71986389]
[145.87123108 185.57189941]
[138.65107727 172.42391968]
[131.43090820 159.27593994]
[118.52272034 151.84439087]
[118.66207886 136.02380371]
[111.19899750 136.76710510]
[112.68560028 151.69325256]
[114.17197418 166.61943054]
[99.24577332 168.10556030]
[97.75944519 153.17985535]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 25]
[3 23]
[4 21]
[5 20]
[6 19]
[7 18]
[8 17]
[9 16]
[10 15]
[33 229]
[36 226]
[37 225]
[38 224]
[39 223]
[40 222]
[41 221]
[42 220]
[43 219]
[44 218]
[45 216]
[46 215]
[47 214]
[48 213]
[49 212]
[50 211]
[51 210]
[52 209]
[53 208]
[54 207]
[55 206]
[57 204]
[58 203]
[59 202]
[60 201]
[61 200]
[64 198]
[65 197]
[66 196]
[70 193]
[71 192]
[72 191]
[73 190]
[75 188]
[76 187]
[77 186]
[78 185]
[79 184]
[80 183]
[81 182]
[87 178]
[88 177]
[89 176]
[90 175]
[91 174]
[92 173]
[93 172]
[101 150]
[102 149]
[103 148]
[104 147]
[105 146]
[106 145]
[107 144]
[108 143]
[109 142]
[111 141]
[112 140]
[115 137]
[116 136]
[117 135]
[151 163]
[152 162]
[153 161]
[154 160]
[232 263]
[234 261]
[235 260]
[236 259]
[237 258]
[238 257]
[242 255]
[243 254]
[244 253]
[245 252]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
