%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 18:47:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGCUUUCAGCCCUGGAUAUUUAAAUCUCCUCCUCUUCUUCCUGUCCAUGCCGGCCCCUCCCAGCACCAGCUCUGCUCAGGCCCCUUCAGCUACUGCCACUUCGCCUUACAUCCCUGCUGACUGCCCAGAGACUCAGAGGAAAUAAAGUUUAAUAAAUCUGUAGGUGGCUUCUGG\
) } def
/len { sequence length } bind def

/coor [
[242.10066223 240.24687195]
[231.16976929 229.97477722]
[220.23889160 219.70269775]
[209.30801392 209.43060303]
[198.28639221 199.25592041]
[183.46838379 200.23689270]
[172.05622864 190.17620850]
[171.12777710 174.62707520]
[160.01631165 164.55059814]
[148.90483093 154.47413635]
[137.79336548 144.39767456]
[126.68188477 134.32119751]
[102.44597626 144.98968506]
[75.53502655 139.70794678]
[55.81404114 119.31510925]
[42.21006393 125.63426971]
[28.60608482 131.95343018]
[15.00210571 138.27258301]
[1.39812744 144.59175110]
[-12.20585060 150.91090393]
[-9.44421196 165.73738098]
[-10.45734882 180.78477478]
[-15.18157578 195.10722351]
[-23.31992340 207.80439758]
[-34.36080933 218.07814026]
[-47.61019135 225.28262329]
[-62.23520660 228.96498108]
[-77.31651306 228.89373779]
[-91.90608215 225.07336426]
[-105.08680725 217.74401855]
[-116.03013611 207.36642456]
[-124.04815674 194.59294128]
[-128.63685608 180.22648621]
[-129.50778198 165.17018127]
[-126.60618591 150.37046814]
[-120.11447144 136.75767517]
[-110.44070435 125.18749237]
[-98.19298553 116.38724518]
[-84.14122009 110.91013336]
[-69.16872406 109.10043335]
[-54.21666336 111.07192230]
[-40.22494507 116.70066071]
[-28.07310486 125.63282776]
[-18.52501106 137.30693054]
[-4.92103195 130.98776245]
[8.68294621 124.66860962]
[22.28692436 118.34944916]
[35.89090347 112.03028870]
[49.49488068 105.71113586]
[50.02724457 90.72058105]
[36.90579605 83.45231628]
[23.78434944 76.18405914]
[7.96335363 76.26547241]
[0.57912135 63.33016205]
[-12.54232502 56.06189728]
[-27.66202736 60.66299820]
[-41.56723022 53.15161133]
[-46.00821686 37.98410797]
[-38.35023499 24.15909958]
[-23.13662720 19.87871742]
[-9.39335632 27.68243790]
[-5.27406168 42.94045258]
[7.84738445 50.20871353]
[22.72984695 49.60741806]
[31.05261421 63.06261063]
[44.17406082 70.33087158]
[57.29550552 77.59913635]
[61.94080353 73.04163361]
[67.01719666 69.30489349]
[72.39134216 66.41979218]
[65.00691986 53.36336517]
[57.62249756 40.30693817]
[44.56206894 29.49668694]
[51.33436584 13.95408916]
[68.14431000 16.15910149]
[70.67892456 32.92251587]
[78.06334686 45.97894287]
[85.44776917 59.03536987]
[93.08509064 57.08086395]
[100.94981384 56.53776169]
[103.85984802 41.82274628]
[106.76988220 27.10773087]
[109.67991638 12.39271355]
[97.59052277 4.83248854]
[88.83032227 -6.37989044]
[84.43764496 -19.88223267]
[84.92181396 -34.04296494]
[90.20413971 -47.15828323]
[99.62983704 -57.65715027]
[112.04914856 -64.28948212]
[125.95757294 -66.27497864]
[129.12831116 -80.93602753]
[123.60363007 -96.37655640]
[134.41806030 -108.70458221]
[150.44664001 -105.23808289]
[155.20054626 -89.54310608]
[143.78936768 -77.76528931]
[140.61862183 -63.10423660]
[153.77381897 -54.29445267]
[162.56770325 -41.08236313]
[165.63188171 -25.47063255]
[162.46913147 -9.83929539]
[153.53384399 3.41708350]
[140.16697693 12.25622368]
[124.39492798 15.30274677]
[121.48489380 30.01776314]
[118.57486725 44.73278046]
[115.66483307 59.44779587]
[122.54318237 62.82913589]
[128.72079468 67.36590576]
[134.00564575 72.91707611]
[138.23344421 79.31010437]
[141.27279663 86.34626770]
[143.02920532 93.80683899]
[143.44808960 101.45992279]
[142.51641846 109.06762695]
[140.26316833 116.39347076]
[136.75834656 123.20973206]
[147.86982727 133.28619385]
[158.98129272 143.36267090]
[170.09277344 153.43913269]
[181.20423889 163.51559448]
[196.76985168 162.92413330]
[207.89491272 173.30139160]
[208.36285400 188.14445496]
[216.85044861 191.60626221]
[219.58009338 198.49972534]
[230.51097107 208.77180481]
[241.44186401 219.04389954]
[252.37274170 229.31597900]
[262.66998291 226.32325745]
[273.19790649 227.87980652]
[282.05282593 233.63603210]
[287.66204834 242.48916626]
[289.06289673 252.79396057]
[286.06759644 262.66830444]
[296.43627930 273.50759888]
[306.80496216 284.34689331]
[317.17367554 295.18618774]
[327.54235840 306.02548218]
[337.91104126 316.86477661]
[353.47937012 317.37896729]
[363.84030151 328.51925659]
[363.25415039 343.35812378]
[373.62283325 354.19741821]
[392.54074097 353.87466431]
[405.48895264 367.23068237]
[404.61029053 385.49310303]
[415.35714722 395.95758057]
[430.11645508 391.70809937]
[445.01925659 395.42318726]
[456.05679321 406.10348511]
[460.25997925 420.87606812]
[456.49816895 435.76715088]
[445.78332520 446.77114868]
[430.99765015 450.92800903]
[416.11843872 447.11956787]
[405.14810181 436.37026978]
[401.03759766 421.57165527]
[404.89266968 406.70443726]
[394.14581299 396.23995972]
[383.00527954 398.86437988]
[371.87002563 395.73901367]
[363.55117798 387.53228760]
[360.20697021 376.21017456]
[362.78353882 364.56610107]
[352.41485596 353.72680664]
[337.56457520 353.65417480]
[326.89486694 342.80929565]
[327.07174683 327.23345947]
[316.70306396 316.39416504]
[306.33438110 305.55487061]
[295.96566772 294.71557617]
[285.59698486 283.87628174]
[275.22830200 273.03698730]
[255.80094910 274.06875610]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 130]
[2 129]
[3 128]
[4 127]
[5 125]
[8 122]
[9 121]
[10 120]
[11 119]
[12 118]
[15 49]
[16 48]
[17 47]
[18 46]
[19 45]
[20 44]
[50 67]
[51 66]
[52 65]
[54 63]
[55 62]
[70 78]
[71 77]
[72 76]
[80 108]
[81 107]
[82 106]
[83 105]
[91 98]
[92 97]
[136 175]
[137 174]
[138 173]
[139 172]
[140 171]
[141 170]
[144 167]
[145 166]
[148 161]
[149 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
