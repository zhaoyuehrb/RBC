%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 10:54:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACCUCCGGAGCCCCACCCCCGCCCUUCCCAGGUGGAGCCAAAGCAGCAGGCGCCUUUGCCCCUGGAGUCAAGACCCACAGCCCUCGGGGACCACCUGGAGUCUCUCCAUCCUCCACCCCCCGCCUGUGGGAUGCCUUGUGGGACGUCUCUUUCUAUUCAAUAAACAGAUGCUGCAGCCUCA\
) } def
/len { sequence length } bind def

/coor [
[151.55754089 339.45285034]
[138.67765808 326.25045776]
[129.93362427 309.99707031]
[126.00963593 291.95074463]
[127.21654510 273.51037598]
[133.46720886 256.10720825]
[144.28276062 241.09382629]
[158.82928467 229.63894653]
[152.82247925 215.89419556]
[146.81565857 202.14942932]
[140.80885315 188.40467834]
[134.68429565 174.71199036]
[128.20919800 161.18153381]
[121.50279236 147.76423645]
[114.79638672 134.34692383]
[108.08998108 120.92961884]
[101.38357544 107.51231384]
[103.98758698 133.35173035]
[103.32421112 159.44697571]
[99.37804413 185.48818970]
[87.07846832 194.07424927]
[74.77888489 202.66030884]
[62.47931290 211.24636841]
[50.17973709 219.83242798]
[48.97485733 235.42352295]
[37.99324417 246.55627441]
[22.42007065 247.97413635]
[9.60851765 239.00762939]
[5.60780859 223.89047241]
[12.30695534 209.76052856]
[26.54282570 203.28952026]
[41.59367752 207.53285217]
[53.89325333 198.94679260]
[66.19282532 190.36073303]
[78.49240875 181.77467346]
[90.79198456 173.18861389]
[85.26028442 159.24514771]
[79.72909546 145.30290222]
[64.88850403 147.48396301]
[52.37241364 158.08015442]
[37.03131866 152.28509521]
[34.64682007 136.06022644]
[47.67189026 126.09632111]
[62.70745087 132.64337158]
[77.54804230 130.46232605]
[78.38320160 123.00896454]
[80.05352783 108.10225677]
[80.88869476 100.64890289]
[66.89888000 95.23733521]
[52.90905762 89.82577515]
[38.91924286 84.41421509]
[23.25705719 86.65174103]
[14.17830086 74.84388733]
[0.18848370 69.43232727]
[-15.92322540 72.48926544]
[-26.42000771 59.88967896]
[-20.50367355 44.59494019]
[-4.26044130 42.33896255]
[5.60004568 55.44250488]
[19.58986282 60.85406876]
[34.25140381 58.22946930]
[44.33080292 70.42439270]
[58.32062149 75.83596039]
[72.31044006 81.24752045]
[86.30025482 86.65908051]
[99.99294281 80.53451538]
[105.28422546 66.49876404]
[110.57550812 52.46301270]
[108.20362091 36.82061005]
[119.93312073 27.64083672]
[125.22440338 13.60508442]
[120.16316223 3.94199395]
[121.24740601 -6.69129896]
[127.87658691 -14.79341507]
[137.66479492 -17.83086777]
[143.43476868 -31.67671013]
[149.20474243 -45.52255249]
[154.97471619 -59.36839676]
[160.74470520 -73.21424103]
[166.51467896 -87.06008148]
[172.28465271 -100.90592194]
[167.54489136 -109.10829163]
[167.13198853 -118.43466949]
[171.01216125 -126.77384186]
[178.19410706 -132.29661560]
[186.97869873 -133.85675049]
[193.45379639 -147.38720703]
[199.92887878 -160.91766357]
[206.40397644 -174.44810486]
[212.87907410 -187.97856140]
[200.85237122 -200.75445557]
[194.65122986 -217.13059998]
[195.19700623 -234.59782410]
[202.37945557 -250.49079895]
[215.07769775 -262.39474487]
[231.33506775 -268.51229858]
[248.66055298 -267.93490601]
[254.43052673 -281.78073120]
[260.20050049 -295.62658691]
[265.97048950 -309.47241211]
[271.74044800 -323.31826782]
[272.25210571 -340.26449585]
[288.67770386 -344.46401978]
[297.26016235 -329.84289551]
[285.58630371 -317.54827881]
[279.81631470 -303.70245361]
[274.04635620 -289.85659790]
[268.27636719 -276.01077271]
[262.50637817 -262.16491699]
[272.13925171 -254.00677490]
[279.09384155 -243.45053101]
[282.79849243 -231.34559631]
[282.94351196 -218.66935730]
[279.50708008 -206.44830322]
[272.75772095 -195.67495728]
[263.23355103 -187.22717285]
[251.69920349 -181.79667664]
[239.08448792 -179.83242798]
[226.40953064 -181.50347900]
[219.93443298 -167.97302246]
[213.45933533 -154.44256592]
[206.98425293 -140.91210938]
[200.50915527 -127.38166046]
[203.92890930 -107.04143524]
[186.13049316 -95.13594818]
[180.36051941 -81.29010773]
[174.59054565 -67.44425964]
[168.82057190 -53.59841919]
[163.05058289 -39.75257492]
[157.28060913 -25.90673447]
[151.51063538 -12.06089020]
[155.41252136 6.86277342]
[139.26014709 18.89636612]
[133.96887207 32.93211746]
[136.71922302 47.57058716]
[124.61125946 57.75429535]
[119.31997681 71.79004669]
[114.02869415 85.82579803]
[114.80088043 100.80590820]
[121.50728607 114.22321320]
[128.21369934 127.64051819]
[134.92010498 141.05783081]
[141.62651062 154.47512817]
[146.95605469 158.45521545]
[149.13021851 163.73983765]
[148.32389832 168.47012329]
[154.75656128 174.99122620]
[154.55360413 182.39787292]
[160.56042480 196.14262390]
[166.56723022 209.88737488]
[172.57403564 223.63214111]
[184.17190552 221.18907166]
[196.01483154 220.84452820]
[207.72631836 222.60786438]
[218.93431091 226.42147827]
[229.28305054 232.16265869]
[238.44435120 239.64750671]
[246.12797546 248.63687134]
[252.09089661 258.84399414]
[256.14492798 269.94360352]
[258.16268921 281.58230591]
[258.08160400 293.38992310]
[255.90580750 304.99108887]
[251.70605469 316.01733398]
[245.61727905 326.11871338]
[237.83441162 334.97497559]
[228.60603333 342.30560303]
[218.22645569 347.87881470]
[222.54220581 362.24456787]
[233.92288208 373.23504639]
[230.17460632 387.65029907]
[234.49035645 402.01602173]
[246.79382324 412.85839844]
[243.29100037 428.87905884]
[227.58528137 433.59738159]
[215.83337402 422.15951538]
[220.12461853 406.33178711]
[215.80886841 391.96606445]
[204.73689270 382.00308228]
[208.17648315 366.56030273]
[203.86073303 352.19458008]
[185.46701050 352.94226074]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 151]
[9 150]
[10 149]
[11 148]
[12 146]
[13 143]
[14 142]
[15 141]
[16 140]
[17 139]
[20 36]
[21 35]
[22 34]
[23 33]
[24 32]
[38 45]
[39 44]
[48 65]
[49 64]
[50 63]
[51 62]
[53 60]
[54 59]
[66 138]
[67 137]
[68 136]
[70 134]
[71 133]
[75 131]
[76 130]
[77 129]
[78 128]
[79 127]
[80 126]
[81 125]
[86 123]
[87 122]
[88 121]
[89 120]
[90 119]
[97 109]
[98 108]
[99 107]
[100 106]
[101 105]
[168 181]
[169 180]
[171 178]
[172 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
