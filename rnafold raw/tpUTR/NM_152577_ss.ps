%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 07:42:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAUAACAGUAUUUGGAACUGAAGACCUGAUGGGAAAAAAACCUUCAAGUUCUAUACUGUACUGUGGAUAAGCGGCUCAGUUCAGCAGAGCUGGAGUUGAACAACUUUGUUCCUCUGGUGUGGUAAAUUGACCUAAAGGUGACCUCUGACGAUUUCCUGAAAUAAAUAUGCAAUGUUACAUUUUCAA\
) } def
/len { sequence length } bind def

/coor [
[153.81916809 159.99601746]
[146.71424866 146.78541565]
[139.60931396 133.57481384]
[126.40734100 142.39643860]
[111.70368195 146.52185059]
[97.05167389 145.90023804]
[83.88758087 140.96333313]
[73.38985443 132.54841614]
[66.37418365 121.78330231]
[52.48085022 127.43796539]
[38.58751297 133.09263611]
[24.69417953 138.74729919]
[10.80084419 144.40196228]
[-3.09249115 150.05662537]
[-16.98582649 155.71128845]
[-21.35565758 160.70936584]
[-26.78082275 162.47251892]
[-31.43030357 161.31515503]
[-45.50210571 166.50979614]
[-59.57390594 171.70445251]
[-73.64570618 176.89909363]
[-87.71751404 182.09375000]
[-101.78931427 187.28839111]
[-88.18263245 193.60173035]
[-81.69214630 207.12480164]
[-85.27811432 221.68986511]
[-97.30500793 230.65388489]
[-112.28746033 229.92846680]
[-123.39208984 219.84446716]
[-125.55416870 205.00109863]
[-117.78768921 192.16839600]
[-132.36309814 195.71205139]
[-146.93850708 199.25569153]
[-158.52015686 210.03417969]
[-172.71505737 205.52262878]
[-187.29046631 209.06628418]
[-193.06253052 223.46984863]
[-206.21630859 231.70133972]
[-221.69393921 230.59558105]
[-233.54394531 220.57772827]
[-237.20974731 205.49987793]
[-231.28178406 191.15977478]
[-218.03947449 183.07145691]
[-202.57475281 184.34506226]
[-190.83412170 194.49087524]
[-176.25871277 190.94721985]
[-165.71958923 180.42219543]
[-150.48216248 184.68028259]
[-135.90675354 181.13664246]
[-121.33133698 177.59298706]
[-106.98396301 173.21659851]
[-92.91216278 168.02194214]
[-78.84036255 162.82730103]
[-64.76855469 157.63264465]
[-50.69675446 152.43798828]
[-36.62495041 147.24334717]
[-22.64049149 141.81796265]
[-8.74715614 136.16328430]
[5.14617920 130.50862122]
[19.03951454 124.85395813]
[32.93284988 119.19929504]
[46.82618332 113.54463196]
[60.71952057 107.88996887]
[60.71285248 92.14330292]
[66.77489471 77.61027527]
[56.12476349 67.04737854]
[45.47463989 56.48447800]
[34.82451248 45.92158127]
[19.02337456 46.23719025]
[7.68515778 35.22718048]
[7.53662443 19.42358780]
[18.66589737 8.20240974]
[34.47017288 8.22096920]
[45.57305908 19.46825600]
[45.38740921 35.27145386]
[56.03753662 45.83435440]
[66.68766022 56.39725113]
[77.33779144 66.96014404]
[95.49791718 56.21260071]
[118.51690674 55.74638748]
[140.51325989 67.52166748]
[146.05348206 53.58230209]
[151.59368896 39.64293289]
[157.13391113 25.70356369]
[162.67411804 11.76419353]
[160.58097839 -3.91794014]
[172.47196960 -12.88752937]
[170.37882996 -28.56966209]
[182.26982117 -37.53925323]
[187.81004333 -51.47862244]
[183.42752075 -63.62126160]
[188.34179688 -75.12371063]
[199.41242981 -80.02532196]
[205.18116760 -93.87168121]
[210.94989014 -107.71804810]
[216.71862793 -121.56440735]
[222.48736572 -135.41076660]
[228.25608826 -149.25712585]
[234.02482605 -163.10348511]
[233.55335999 -169.72572327]
[236.12185669 -174.81922913]
[240.21774292 -177.30538940]
[246.43876648 -190.95452881]
[252.65979004 -204.60365295]
[258.88079834 -218.25279236]
[265.10183716 -231.90193176]
[262.99304199 -248.16493225]
[276.18533325 -257.90634155]
[291.10763550 -251.10504150]
[292.40911865 -234.75762939]
[278.75097656 -225.68090820]
[272.52993774 -212.03176880]
[266.30892944 -198.38264465]
[260.08789062 -184.73350525]
[253.86688232 -171.08436584]
[247.87118530 -157.33476257]
[242.10244751 -143.48840332]
[236.33372498 -129.64204407]
[230.56498718 -115.79567719]
[224.79626465 -101.94931030]
[219.02752686 -88.10295105]
[213.25878906 -74.25659180]
[216.45472717 -57.00843811]
[201.74940491 -45.93840408]
[196.20919800 -31.99903679]
[198.69860840 -17.31394005]
[186.41134644 -7.34731388]
[188.90075684 7.33778286]
[176.61349487 17.30440903]
[171.07327271 31.24377823]
[165.53306580 45.18314743]
[159.99284363 59.12251663]
[154.45263672 73.06188965]
[163.81875610 84.77836609]
[178.63600159 82.44403076]
[193.45324707 80.10969543]
[205.85914612 69.38469696]
[221.25932312 75.02088165]
[223.81140137 91.22023773]
[210.89001465 101.31824493]
[195.78758240 94.92694855]
[180.97033691 97.26128387]
[166.15309143 99.59561157]
[162.81979370 106.31417847]
[176.94229126 111.36937714]
[191.06478882 116.42458344]
[205.18728638 121.47978210]
[220.08787537 119.75573730]
[232.46517944 128.22937012]
[236.24826050 142.74447632]
[229.58158875 156.18157959]
[215.73507690 161.94992065]
[201.50025940 157.22023010]
[193.85919189 144.31265259]
[181.29052734 136.12554932]
[168.72187805 127.93843079]
[156.15321350 119.75131989]
[152.81991577 126.46988678]
[159.92485046 139.68049622]
[167.02976990 152.89109802]
[174.35101318 165.98304749]
[181.88659668 178.95281982]
[189.42218018 191.92259216]
[196.95776367 204.89236450]
[204.49334717 217.86213684]
[222.96755981 221.99925232]
[232.40489197 238.04212952]
[227.22595215 255.58761597]
[235.18403625 268.30252075]
[243.14212036 281.01742554]
[251.10020447 293.73233032]
[259.05828857 306.44723511]
[272.58682251 316.66561890]
[266.51284790 332.49417114]
[249.62141418 331.03936768]
[246.34338379 314.40533447]
[238.38529968 301.69042969]
[230.42721558 288.97552490]
[222.46913147 276.26062012]
[214.51104736 263.54571533]
[203.08248901 263.45516968]
[193.01651001 257.79367065]
[186.87721252 247.87040710]
[186.29243469 236.09608459]
[191.52357483 225.39772034]
[183.98799133 212.42794800]
[176.45240784 199.45817566]
[168.91682434 186.48840332]
[161.38124084 173.51863098]
[157.06033325 171.44813538]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 160]
[2 159]
[3 158]
[9 63]
[10 62]
[11 61]
[12 60]
[13 59]
[14 58]
[15 57]
[18 56]
[19 55]
[20 54]
[21 53]
[22 52]
[23 51]
[31 50]
[32 49]
[33 48]
[35 46]
[36 45]
[65 78]
[66 77]
[67 76]
[68 75]
[81 133]
[82 132]
[83 131]
[84 130]
[85 129]
[87 127]
[89 125]
[90 124]
[93 122]
[94 121]
[95 120]
[96 119]
[97 118]
[98 117]
[99 116]
[102 115]
[103 114]
[104 113]
[105 112]
[106 111]
[134 143]
[135 142]
[136 141]
[161 189]
[162 188]
[163 187]
[164 186]
[165 185]
[168 180]
[169 179]
[170 178]
[171 177]
[172 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
