%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 07:12:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUGGAAGCCACAAGCAGCCCAGCCCUCCUUAAUCAACUUCAAGGAGCACCUUCAUUAGUACAGCUUGCAUAUUUAACAUUUUGUAUUUCAAUAAAAGUGAAGACAAACGA\
) } def
/len { sequence length } bind def

/coor [
[105.29093933 151.96623230]
[96.41991425 152.11206055]
[87.65216827 150.75445557]
[79.24065399 147.93260193]
[71.42804718 143.72787476]
[61.50524139 154.97679138]
[62.31057358 170.53279114]
[52.08719254 181.79942322]
[37.25196075 182.47132874]
[27.32915306 193.72023010]
[26.89295959 209.75735474]
[13.99644470 219.29986572]
[-1.46728730 215.02755737]
[-7.63578510 200.21778870]
[0.22289453 186.23135376]
[16.08024597 183.79742432]
[26.00305176 172.54852295]
[24.81853104 157.74539185]
[34.72142410 146.19604492]
[50.25633240 145.05398560]
[60.17913818 133.80506897]
[54.79600525 126.17408752]
[50.85771561 117.70649719]
[48.49015808 108.67295837]
[47.76900101 99.36221313]
[48.71729279 90.07184601]
[51.30472946 81.09881592]
[38.24540329 73.71952057]
[25.18607712 66.34022522]
[12.12675095 58.96092987]
[-0.93257600 51.58163452]
[-13.99190235 44.20233917]
[-29.81302071 44.14956665]
[-37.08727264 31.15208626]
[-52.24545670 35.62477875]
[-66.08644867 27.99572182]
[-70.39862823 12.79109573]
[-62.62366486 -0.96846193]
[-47.37429810 -5.11965084]
[-33.69770813 2.80035615]
[-29.70797729 18.09275818]
[-14.82095051 17.61771584]
[-6.61260796 31.14301491]
[6.44671869 38.52230835]
[19.50604439 45.90160370]
[32.56537247 53.28089905]
[45.62469864 60.66019440]
[58.68402481 68.03948975]
[78.63201141 52.33562088]
[103.62762451 47.89122391]
[127.76631165 55.75617218]
[145.34593201 74.07257843]
[159.30175781 68.57398224]
[173.25759888 63.07538605]
[187.21343994 57.57678986]
[201.16928101 52.07819366]
[215.12512207 46.57959747]
[229.08096313 41.08100128]
[242.34036255 34.06758118]
[254.73954773 25.62598801]
[267.13870239 17.18439293]
[279.53787231 8.74279690]
[291.93707275 0.30120173]
[304.33624268 -8.14039326]
[316.73541260 -16.58198929]
[319.80700684 -31.85297394]
[332.50180054 -40.23731995]
[347.04141235 -37.21490097]
[359.44058228 -45.65649796]
[358.92843628 -61.07535553]
[366.85327148 -74.31169128]
[380.68630981 -81.14183044]
[396.01345825 -79.38630676]
[407.94390869 -69.60530090]
[412.67065430 -54.91989136]
[408.68545532 -40.01614380]
[397.25994873 -29.64978790]
[382.03997803 -27.12869072]
[367.88217163 -33.25732422]
[355.48300171 -24.81572914]
[352.96520996 -10.18028450]
[340.51092529 -1.44267583]
[325.17700195 -4.18281651]
[312.77783203 4.25877857]
[300.37866211 12.70037365]
[287.97949219 21.14196968]
[275.58032227 29.58356476]
[263.18112183 38.02515793]
[250.78196716 46.46675491]
[265.48657227 49.42893219]
[275.79791260 60.32279205]
[277.94836426 75.16784668]
[271.15216064 88.53988647]
[257.89254761 95.55294037]
[243.01445007 93.64451599]
[231.95413208 83.51192474]
[228.75289917 68.85750580]
[234.57955933 55.03683853]
[220.62371826 60.53543472]
[206.66787720 66.03403473]
[192.71203613 71.53263092]
[178.75619507 77.03122711]
[164.80035400 82.52982330]
[150.84452820 88.02841949]
[152.13714600 96.80597687]
[151.92562866 105.67568207]
[150.21604919 114.38165283]
[147.05775452 122.67270660]
[142.54185486 130.30966187]
[136.79861450 137.07217407]
[129.99374390 142.76516724]
[122.32354736 147.22439575]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 21]
[6 20]
[9 17]
[10 16]
[27 48]
[28 47]
[29 46]
[30 45]
[31 44]
[32 43]
[34 41]
[52 104]
[53 103]
[54 102]
[55 101]
[56 100]
[57 99]
[58 98]
[59 89]
[60 88]
[61 87]
[62 86]
[63 85]
[64 84]
[65 83]
[68 80]
[69 79]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
