%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 10:32:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGCUGCCGCUCACCUACCUGCACAUCUGCCACAGCUGGCCCUGGGCCCACCCCACGAAGGGCCUGGGCCUAACCCCUUGGCCUGGCCCAGCUUCCAGAGGGACCCUGGGCCGUGUGCCAGCUCCCAGACACUACCUGGGUAGCUCAGGGGAGGAGGUGGGGGUCCAGGAGGGGGAUCCCUCUCCACAGGGGCAGCCCCAAGGGCUCGGUGCUAUUUGUAACGGAAUAAAAUUUGUAGCCAGACCCCA\
) } def
/len { sequence length } bind def

/coor [
[327.72552490 391.94464111]
[314.05834961 386.02371216]
[312.40399170 370.28924561]
[303.74041748 358.04415894]
[295.07681274 345.79904175]
[286.41323853 333.55395508]
[277.74963379 321.30886841]
[269.08605957 309.06378174]
[260.42245483 296.81869507]
[246.75526428 290.89779663]
[245.10093689 275.16329956]
[236.43734741 262.91821289]
[212.87376404 262.64379883]
[196.22982788 245.63787842]
[196.46687317 221.61340332]
[184.55702209 212.49444580]
[172.64715576 203.37548828]
[160.73730469 194.25654602]
[148.82745361 185.13758850]
[136.91758728 176.01863098]
[125.00773621 166.89967346]
[110.19866943 165.30572510]
[103.94520569 150.77284241]
[112.98400116 162.74363708]
[111.66219330 177.68528748]
[100.66223145 187.88337708]
[85.66342926 188.07260132]
[74.40969086 178.15527344]
[72.71134949 163.25172424]
[81.44697571 151.05557251]
[69.77004242 160.47094727]
[58.09310913 169.88632202]
[46.41617584 179.30168152]
[41.01515198 194.78590393]
[24.85654068 197.58435059]
[14.56293774 184.81823730]
[20.72351837 169.62023926]
[37.00080490 167.62475586]
[48.67773819 158.20938110]
[60.35467529 148.79400635]
[72.03160858 139.37864685]
[69.18326569 132.44056702]
[63.48657990 118.56439972]
[60.63823700 111.62632751]
[45.71397018 113.13175201]
[30.78970528 114.63717651]
[15.86544037 116.14260101]
[0.94117492 117.64802551]
[-13.98309040 119.15345001]
[-28.90735626 120.65887451]
[-43.83161926 122.16430664]
[-58.53633881 133.26762390]
[-74.24160004 125.41334534]
[-89.14576721 127.10618591]
[-104.04993439 128.79904175]
[-115.12612152 140.40496826]
[-131.09246826 138.83798218]
[-139.70095825 125.30012512]
[-134.34788513 110.17649078]
[-119.13969421 105.06863403]
[-105.74278259 113.89486694]
[-90.83861542 112.20201874]
[-75.93444061 110.50917053]
[-68.17169952 101.25273132]
[-55.78664017 99.70738220]
[-45.33704758 107.24003601]
[-30.41278076 105.73461151]
[-15.48851585 104.22918701]
[-0.56425083 102.72376251]
[14.36001396 101.21833801]
[29.28427887 99.71291351]
[44.20854568 98.20748138]
[59.13280869 96.70205688]
[72.28695679 84.43334198]
[86.74331665 81.73170471]
[82.46803284 67.35387421]
[78.19274139 52.97605133]
[73.91744995 38.59822464]
[69.64216614 24.22039604]
[50.57018280 15.68579769]
[47.23207474 -8.86002254]
[38.56848145 -21.10511208]
[29.90489197 -33.35020065]
[21.16453552 -45.54061127]
[12.27168274 -57.62023163]
[3.30310822 -69.64373779]
[-5.66546631 -81.66724396]
[-14.63404083 -93.69074249]
[-23.60261536 -105.71424866]
[-32.57118988 -117.73775482]
[-41.53976440 -129.76126099]
[-50.50833893 -141.78475952]
[-65.89760590 -144.19480896]
[-74.82173920 -156.51611328]
[-72.42929077 -171.17256165]
[-81.39787292 -183.19607544]
[-90.36644745 -195.21957397]
[-105.63609314 -201.20036316]
[-107.82353973 -217.45297241]
[-94.67852020 -227.25810242]
[-79.72351074 -220.52908325]
[-78.34294128 -204.18815613]
[-69.37436676 -192.16464233]
[-60.40578842 -180.14114380]
[-45.67536163 -178.25697327]
[-36.40867233 -166.19119263]
[-38.48483658 -150.75334167]
[-29.51626015 -138.72982788]
[-20.54768562 -126.70632935]
[-11.57911110 -114.68282318]
[-2.61053658 -102.65931702]
[6.35803843 -90.63581848]
[15.32661343 -78.61231232]
[24.29518700 -66.58880615]
[30.79706955 -63.11528397]
[33.29978943 -54.35739136]
[39.75751114 -50.80244064]
[42.14998245 -42.01379013]
[50.81357193 -29.76870155]
[59.47716141 -17.52361298]
[74.17498779 -20.51926231]
[77.35509491 -35.17828369]
[80.53520203 -49.83730698]
[83.71530914 -64.49633026]
[86.80324554 -79.17504120]
[89.79889679 -93.87287140]
[92.79454803 -108.57069397]
[95.79019928 -123.26851654]
[98.78584290 -137.96633911]
[88.91450500 -150.09443665]
[89.20010376 -165.72941589]
[99.50778198 -177.48890686]
[114.97057343 -179.82046509]
[128.28741455 -171.62316895]
[133.17051697 -156.76754761]
[127.31420898 -142.26797485]
[113.48367310 -134.97068787]
[110.48802185 -120.27287292]
[107.49237061 -105.57504272]
[104.49671936 -90.87722015]
[101.50107574 -76.17938995]
[103.24036407 -69.01596832]
[98.37432861 -61.31622314]
[95.19422150 -46.65719986]
[92.01411438 -31.99817848]
[88.83400726 -17.33915710]
[95.44136810 4.46487617]
[84.01998901 19.94510841]
[88.29528046 34.32293320]
[92.57057190 48.70075989]
[96.84585571 63.07858658]
[101.12114716 77.45641327]
[131.48661804 95.64951324]
[113.06415558 138.86297607]
[128.72509766 141.10917664]
[134.12669373 154.98982239]
[146.03654480 164.10877991]
[157.94641113 173.22772217]
[169.85626221 182.34667969]
[181.76611328 191.46563721]
[193.67597961 200.58459473]
[205.58583069 209.70355225]
[212.34150696 205.68840027]
[219.84982300 203.47903442]
[227.63917542 203.19764709]
[235.22442627 204.84579468]
[242.13710022 208.30541992]
[247.95426941 213.34703064]
[252.32450867 219.64495850]
[266.85324097 215.91461182]
[281.38198853 212.18426514]
[295.91073608 208.45391846]
[310.43948364 204.72357178]
[324.96823120 200.99322510]
[339.49697876 197.26287842]
[350.82876587 185.40864563]
[366.69442749 189.55749512]
[370.77273560 205.44143677]
[358.86828613 216.72042847]
[343.22732544 211.79162598]
[328.69857788 215.52197266]
[314.16983032 219.25231934]
[299.64108276 222.98266602]
[285.11233521 226.71301270]
[270.58358765 230.44335938]
[256.05484009 234.17370605]
[255.22532654 241.39262390]
[252.72100830 248.21386719]
[248.68243408 254.25462341]
[257.34600830 266.49972534]
[271.63287354 273.29647827]
[272.66754150 288.15512085]
[281.33114624 300.40020752]
[289.99472046 312.64529419]
[298.65832520 324.89038086]
[307.32189941 337.13546753]
[315.98550415 349.38055420]
[324.64907837 361.62564087]
[338.93594360 368.42242432]
[339.97061157 383.28103638]
[355.29446411 386.07705688]
[363.90612793 398.61871338]
[361.14611816 413.21041870]
[369.80972290 425.45553589]
[378.47329712 437.70062256]
[392.76016235 444.49737549]
[393.79483032 459.35601807]
[402.45843506 471.60110474]
[416.74530029 478.39785767]
[417.77996826 493.25650024]
[425.27130127 498.43759155]
[426.47433472 505.71032715]
[434.98336792 518.06329346]
[443.49240112 530.41632080]
[452.00143433 542.76928711]
[460.51046753 555.12225342]
[474.92861938 550.58258057]
[490.04431152 550.49609375]
[504.51345825 554.87042236]
[517.04949951 563.31671143]
[526.53771973 575.08380127]
[532.13446045 589.12542725]
[533.34204102 604.19305420]
[530.05303955 618.94683838]
[522.55999756 632.07489014]
[511.52917480 642.40991211]
[497.94137573 649.03283691]
[483.00485229 651.35479736]
[468.04772949 649.16937256]
[454.39999390 642.67077637]
[443.27520752 632.43701172]
[435.66259766 619.37792969]
[432.23901367 604.65478516]
[433.30889893 589.57678223]
[438.77713013 575.48461914]
[448.15750122 563.63128662]
[439.64846802 551.27832031]
[431.13943481 538.92535400]
[422.63037109 526.57232666]
[414.12133789 514.21936035]
[405.53488159 501.92007446]
[391.86767578 495.99914551]
[390.21334839 480.26467896]
[381.54974365 468.01959229]
[367.88256836 462.09866333]
[366.22821045 446.36419678]
[357.56463623 434.11911011]
[348.90103149 421.87402344]
[334.22262573 419.62026978]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 200]
[3 198]
[4 197]
[5 196]
[6 195]
[7 194]
[8 193]
[9 192]
[11 190]
[12 189]
[15 162]
[16 161]
[17 160]
[18 159]
[19 158]
[20 157]
[21 156]
[23 154]
[30 41]
[31 40]
[32 39]
[33 38]
[44 73]
[45 72]
[46 71]
[47 70]
[48 69]
[49 68]
[50 67]
[51 66]
[53 63]
[54 62]
[55 61]
[75 152]
[76 151]
[77 150]
[78 149]
[79 148]
[81 120]
[82 119]
[83 118]
[84 116]
[85 114]
[86 113]
[87 112]
[88 111]
[89 110]
[90 109]
[91 108]
[92 107]
[95 104]
[96 103]
[97 102]
[121 146]
[122 145]
[123 144]
[124 143]
[125 141]
[126 140]
[127 139]
[128 138]
[129 137]
[169 186]
[170 185]
[171 184]
[172 183]
[173 182]
[174 181]
[175 180]
[203 248]
[204 247]
[205 246]
[207 244]
[208 243]
[210 241]
[212 240]
[213 239]
[214 238]
[215 237]
[216 236]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
