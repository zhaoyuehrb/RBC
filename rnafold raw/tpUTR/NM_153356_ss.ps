%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 18:38:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACACCAAAGCCCGCAGUGGACUGAUGCCUUCGAUGGGCAGGAUGAAGGCCAGGGGCACUGGAGUGAGGGAGUAGAUAAAACAGCUGCAAUAUAAACAGUCCUCUGGAAUAAU\
) } def
/len { sequence length } bind def

/coor [
[85.69699860 136.20095825]
[76.70722961 131.18545532]
[69.34664917 123.98869324]
[64.13008881 115.11407471]
[49.44383240 118.16591644]
[34.80062485 121.41806030]
[20.20320320 124.86991882]
[14.93902397 134.58294678]
[5.35722065 139.62309265]
[-5.18885326 138.50433350]
[-13.16000462 131.84945679]
[-27.92414665 134.49900818]
[-42.68828964 137.14855957]
[-57.45243073 139.79809570]
[-72.21657562 142.44764709]
[-86.94314575 145.29861450]
[-93.39244843 159.28834534]
[-106.68731689 166.71127319]
[-121.62709045 164.90374756]
[-132.50755310 154.76699829]
[-147.19381714 157.81884766]
[-155.08526611 162.68981934]
[-162.32267761 160.74768066]
[-174.49722290 171.73461914]
[-190.01400757 166.42787170]
[-192.91069031 150.28659058]
[-180.20742798 139.91552734]
[-164.97222900 145.98355103]
[-150.24565125 143.13258362]
[-135.55940247 140.08074951]
[-129.61819458 126.44841766]
[-116.63539124 118.83850861]
[-101.48388672 120.35021973]
[-89.99498749 130.61235046]
[-84.00527954 126.10953522]
[-74.86611938 127.68350983]
[-60.10197830 125.03395844]
[-45.33783722 122.38440704]
[-30.57369614 119.73486328]
[-15.80955410 117.08531189]
[-2.14558530 103.51760864]
[16.75134850 110.27249908]
[31.34877014 106.82064056]
[37.21325302 102.15589905]
[46.39199066 103.47965240]
[61.07825089 100.42781067]
[65.97211456 81.10056305]
[79.79341125 66.73170471]
[98.91603088 61.09099579]
[118.32304382 65.65830994]
[132.92288208 79.23538208]
[146.91432190 73.82800293]
[160.90574646 68.42061615]
[174.89718628 63.01322937]
[188.88861084 57.60584641]
[202.88005066 52.19845963]
[216.87147522 46.79107666]
[223.86233521 40.69768143]
[231.31965637 41.43281937]
[245.45356750 36.40962601]
[259.58749390 31.38643074]
[273.72140503 26.36323547]
[280.88244629 10.47423649]
[296.98010254 4.72883844]
[311.98156738 12.19403458]
[325.97299194 6.78664923]
[339.96441650 1.37926447]
[346.42160034 -12.79616833]
[360.68792725 -18.08071327]
[374.16223145 -11.83744431]
[384.24526978 -24.02936172]
[398.90603638 -21.40038490]
[412.89746094 -26.80776978]
[426.88888550 -32.21515274]
[429.17770386 -47.40254593]
[438.76611328 -59.40079880]
[453.07489014 -64.98244476]
[468.25503540 -62.64603806]
[480.22317505 -53.02007294]
[485.75991821 -38.69387817]
[483.37594604 -23.52113152]
[473.71252441 -11.58322430]
[459.36904907 -6.09139395]
[444.20382690 -8.52291584]
[432.29629517 -18.22372055]
[418.30484009 -12.81633663]
[404.31341553 -7.40895176]
[395.23114014 4.39619350]
[379.56961060 2.15398860]
[373.79605103 15.83614731]
[359.68377686 21.51931763]
[345.37182617 15.37069702]
[331.38037109 20.77808189]
[317.38894653 26.18546677]
[313.83517456 38.65274429]
[303.57006836 46.88647842]
[290.23852539 47.67323303]
[278.74459839 40.49715042]
[264.61068726 45.52034378]
[250.47676086 50.54353714]
[236.34284973 55.56673050]
[222.27886963 60.78250885]
[208.28742981 66.18989563]
[194.29600525 71.59727478]
[180.30456543 77.00466156]
[166.31314087 82.41204834]
[152.32170105 87.81943512]
[138.33026123 93.22681427]
[138.76535034 103.51186371]
[136.48901367 113.55126953]
[131.66049194 122.64284515]
[124.61750793 130.15068054]
[115.85266876 135.54966736]
[105.97902679 138.46214294]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 46]
[5 45]
[6 43]
[7 42]
[11 40]
[12 39]
[13 38]
[14 37]
[15 36]
[16 34]
[20 30]
[21 29]
[23 28]
[51 108]
[52 107]
[53 106]
[54 105]
[55 104]
[56 103]
[57 102]
[59 101]
[60 100]
[61 99]
[62 98]
[65 94]
[66 93]
[67 92]
[70 89]
[72 87]
[73 86]
[74 85]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
