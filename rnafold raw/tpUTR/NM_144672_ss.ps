%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 21:49:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGGCCUGAGCGCAUCGUCCUGUGUUGCCCCAAGCAGCUGGCCAACAUGUGUAGAGACAGGAUGCUCCAGAUGGUGGGACACCCUUCCCUGGAUCCAGACCCUCAUCUAGGGCAGGGAAACCCUGGGGCCUUGAUGGUGAAAAUGCACCCCAAAUGAAAAAUAAUUAUUAAAAAUGAUCUUGCAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[170.54988098 181.31132507]
[185.53538513 180.65208435]
[200.45274353 182.25370789]
[188.31748962 173.43692017]
[176.18223572 164.62014771]
[164.04698181 155.80337524]
[151.91172791 146.98658752]
[137.06727600 145.76528931]
[130.45057678 131.39414978]
[118.31532288 122.57736969]
[84.24347687 133.94549561]
[54.23314667 100.91986084]
[39.89260864 105.31861115]
[25.55207253 109.71736145]
[11.21153450 114.11611176]
[-3.12900186 118.51486206]
[-17.39484978 123.15012360]
[-31.58210754 128.02061462]
[-45.76936722 132.89109802]
[-59.91587448 137.87872314]
[-74.02066803 142.98312378]
[-87.94897461 148.55107117]
[-101.68557739 154.57650757]
[-115.42217255 160.60194397]
[-129.15878296 166.62736511]
[-142.89537048 172.65280151]
[-156.63197327 178.67823792]
[-162.04614258 190.39799500]
[-173.62580872 195.12905884]
[-184.94728088 190.83683777]
[-198.78163147 196.63432312]
[-212.61598206 202.43180847]
[-218.37091064 217.15106201]
[-232.88165283 223.41317749]
[-247.53923035 217.50294495]
[-253.64756775 202.92680359]
[-247.58270264 188.33253479]
[-232.94281006 182.37863159]
[-218.41346741 188.59745789]
[-204.57911682 182.79997253]
[-190.74478149 177.00248718]
[-180.89862061 162.48519897]
[-162.65740967 164.94163513]
[-148.92080688 158.91619873]
[-135.18420410 152.89077759]
[-121.44760895 146.86534119]
[-107.71100616 140.83990479]
[-93.97441101 134.81448364]
[-92.83329773 132.23533630]
[-90.59259033 129.95712280]
[-87.36331177 128.40435791]
[-83.40917969 127.95296478]
[-79.12506104 128.87832642]
[-65.02027130 123.77392578]
[-59.79108047 118.53199768]
[-50.63985825 118.70384216]
[-36.45259857 113.83335114]
[-22.26534081 108.96286011]
[-19.39403534 105.12606049]
[-14.07454872 103.06261444]
[-7.52775240 104.17433167]
[6.81278419 99.77558136]
[21.15332031 95.37683105]
[35.49385834 90.97808075]
[49.83439636 86.57932281]
[53.63676453 72.06925964]
[43.29646301 61.20288467]
[32.95616150 50.33650589]
[22.61586189 39.47012711]
[6.67794657 37.63644028]
[-1.70302188 23.95656776]
[3.90211844 8.92453671]
[19.19358253 4.07163525]
[32.44107056 13.12059402]
[33.48223877 29.12982559]
[43.82254028 39.99620438]
[54.16284180 50.86258316]
[64.50314331 61.72896194]
[71.65498352 59.47038269]
[74.89482117 44.82444763]
[85.95866394 54.95322418]
[93.11050415 52.69464493]
[95.33445740 37.86042786]
[97.55841827 23.02621078]
[99.78237152 8.19199181]
[94.17664337 -6.60281897]
[103.71542358 -18.04226685]
[105.93937683 -32.87648392]
[108.16333771 -47.71070480]
[110.38729095 -62.54492188]
[112.61124420 -77.37914276]
[114.83519745 -92.21335602]
[117.05915070 -107.04757690]
[119.28311157 -121.88179016]
[107.21768951 -131.38554382]
[101.53551483 -145.65469360]
[103.76506042 -160.85089111]
[113.30658722 -172.88645935]
[127.59347534 -178.52388000]
[142.78262329 -176.24671936]
[154.78820801 -166.66751099]
[160.38082886 -152.36302185]
[158.05606079 -137.18109131]
[148.43927002 -125.20558167]
[134.11732483 -119.65783691]
[131.89337158 -104.82362366]
[129.66941833 -89.98940277]
[127.44546509 -75.15518188]
[125.22150421 -60.32096863]
[122.99755096 -45.48674774]
[120.77359772 -30.65253067]
[118.54964447 -15.81831264]
[124.31443787 -2.08454370]
[114.61658478 10.41594696]
[112.39263153 25.25016594]
[110.16867828 40.08438492]
[107.94472504 54.91860199]
[119.40906525 61.63844299]
[127.76877594 70.92102051]
[132.57943726 81.58412933]
[133.80122375 92.42269897]
[131.77027893 102.33712769]
[127.13210297 110.44211578]
[139.26734924 119.25889587]
[154.97979736 121.11082458]
[160.72851562 134.85133362]
[172.86376953 143.66812134]
[184.99902344 152.48489380]
[197.13427734 161.30166626]
[209.26953125 170.11845398]
[223.57321167 174.63560486]
[238.57116699 174.38760376]
[253.56910706 174.13958740]
[263.09222412 165.42314148]
[275.60058594 165.53526306]
[284.38333130 173.86967468]
[299.38333130 173.86967468]
[314.38333130 173.86967468]
[329.38333130 173.86967468]
[340.38000488 162.51853943]
[356.18341064 162.35145569]
[367.41766357 173.46752930]
[367.41766357 189.27182007]
[356.18341064 200.38790894]
[340.38000488 200.22082520]
[329.38333130 188.86967468]
[314.38333130 188.86967468]
[299.38333130 188.86967468]
[284.38333130 188.86967468]
[269.69137573 198.45329285]
[253.81712341 189.13754272]
[238.81916809 189.38554382]
[223.82121277 189.63356018]
[236.95021057 196.88818359]
[248.83937073 206.03410339]
[259.21847534 216.86341858]
[267.85162354 229.12998962]
[274.54260254 242.55499268]
[279.13928223 256.83331299]
[281.53723145 271.64041138]
[281.68194580 286.63970947]
[279.57009888 301.49029541]
[275.24969482 315.85464478]
[268.81896973 329.40625000]
[260.42407227 341.83706665]
[250.25579834 352.86459351]
[238.54528809 362.23815918]
[225.55870056 369.74472046]
[211.59121704 375.21365356]
[196.96029663 378.52066040]
[181.99850464 379.59057617]
[167.04589844 378.39904785]
[152.44235229 374.97320557]
[138.51979065 369.39089966]
[125.59465790 361.77899170]
[113.96074677 352.31051636]
[103.88246918 341.20068359]
[95.58891296 328.70199585]
[89.26857758 315.09857178]
[85.06512451 300.69958496]
[83.07408905 285.83230591]
[83.34072876 270.83468628]
[85.85897827 256.04757690]
[90.57160950 241.80711365]
[97.37150574 228.43693542]
[106.10410309 216.24096680]
[116.57092285 205.49639893]
[128.53405762 196.44744873]
[141.72158813 189.29980469]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 130]
[4 129]
[5 128]
[6 127]
[7 126]
[9 124]
[10 123]
[12 65]
[13 64]
[14 63]
[15 62]
[16 61]
[17 58]
[18 57]
[19 56]
[20 54]
[21 53]
[22 48]
[23 47]
[24 46]
[25 45]
[26 44]
[27 43]
[30 41]
[31 40]
[32 39]
[66 78]
[67 77]
[68 76]
[69 75]
[82 117]
[83 116]
[84 115]
[85 114]
[87 112]
[88 111]
[89 110]
[90 109]
[91 108]
[92 107]
[93 106]
[94 105]
[131 153]
[132 152]
[133 151]
[136 149]
[137 148]
[138 147]
[139 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
