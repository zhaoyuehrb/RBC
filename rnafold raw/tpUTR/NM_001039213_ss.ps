%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 01:52:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGUGACCCUGGAGACGUCCAGAGAGAAGAGCUCUUCGCACCAUCCUCUGGUCCUCGCCCUCUGAGUGGGAACCACUCCCCCACAGCGAGGAUGCCAGGCUGUGGUCCUGCUGUUCUCCUGCCUCCACCCUAGAGCUAGAGCCACAGGGCCCCACUCCCUCGCUGAGCUGUUGGGGAGCCACCGAGGCCAUAAACGUCCUGGUUAA\
) } def
/len { sequence length } bind def

/coor [
[88.79954529 346.19400024]
[73.81758118 350.67446899]
[59.48130035 344.42907715]
[52.55985641 330.40667725]
[56.32134628 315.22824097]
[68.98970795 306.06054688]
[69.89105988 291.08764648]
[70.79240417 276.11474609]
[71.69375610 261.14184570]
[72.59510803 246.16896057]
[70.15260315 242.06326294]
[70.26441193 236.37936401]
[73.75527191 230.76164246]
[75.10627747 215.82261658]
[72.57756042 208.87677002]
[76.59151459 200.66975403]
[78.16691589 185.75271606]
[79.74231720 170.83567810]
[81.31771851 155.91862488]
[82.89311981 141.00158691]
[63.86016846 115.06623077]
[68.60558319 87.25739288]
[56.30036545 78.67941284]
[43.99515152 70.10144043]
[35.16411972 67.76053619]
[31.57076073 61.30089951]
[19.39587021 52.53893280]
[7.22098017 43.77696609]
[-4.95390987 35.01500320]
[-17.12879944 26.25303650]
[-32.84943771 24.47197914]
[-38.66004944 10.75753212]
[-50.83493805 1.99556613]
[-63.00983047 -6.76639986]
[-72.78158569 -2.47751594]
[-83.37123871 -2.63137317]
[-92.86829376 -7.13316393]
[-99.58720398 -15.10971165]
[-102.36642456 -25.07800102]
[-100.76887512 -35.22066498]
[-109.44327545 -38.08799744]
[-112.64198303 -44.75188446]
[-124.26837158 -54.22960663]
[-135.89476013 -63.70732880]
[-147.52113342 -73.18505096]
[-159.14752197 -82.66277313]
[-174.66041565 -81.25292969]
[-186.31620789 -91.03031158]
[-187.56468201 -105.82817841]
[-199.19107056 -115.30590057]
[-210.81744385 -124.78362274]
[-222.44383240 -134.26133728]
[-234.07022095 -143.73905945]
[-245.69659424 -153.21678162]
[-257.46414185 -162.51867676]
[-269.37014771 -171.64263916]
[-281.27615356 -180.76661682]
[-293.18218994 -189.89057922]
[-305.08819580 -199.01454163]
[-316.99420166 -208.13850403]
[-332.16961670 -200.10415649]
[-349.27505493 -199.51249695]
[-364.86810303 -206.43421936]
[-375.83193970 -219.43280029]
[-379.99813843 -235.86241150]
[-376.57562256 -252.40634155]
[-388.75051880 -261.16830444]
[-400.92541504 -269.93026733]
[-413.10028076 -278.69223022]
[-425.27517700 -287.45422363]
[-437.45007324 -296.21618652]
[-453.83792114 -300.56072998]
[-454.19973755 -317.51083374]
[-438.01223755 -322.55075073]
[-428.68811035 -308.39105225]
[-416.51321411 -299.62908936]
[-404.33831787 -290.86712646]
[-392.16345215 -282.10516357]
[-379.98855591 -273.34320068]
[-367.81365967 -264.58123779]
[-356.94546509 -271.69949341]
[-344.27392578 -274.70770264]
[-331.30252075 -273.22662354]
[-319.57803345 -267.41101074]
[-310.50585938 -257.93374634]
[-305.18173218 -245.90814209]
[-304.25939941 -232.75701904]
[-307.87023926 -220.04452515]
[-295.96423340 -210.92056274]
[-284.05822754 -201.79660034]
[-272.15219116 -192.67262268]
[-260.24618530 -183.54866028]
[-248.34016418 -174.42469788]
[-243.57064819 -174.15216064]
[-238.92208862 -170.87950134]
[-236.21887207 -164.84317017]
[-224.59249878 -155.36544800]
[-212.96611023 -145.88772583]
[-201.33972168 -136.41000366]
[-189.71334839 -126.93228149]
[-178.08695984 -117.45455933]
[-163.34111023 -119.21401978]
[-151.41529846 -109.76788330]
[-149.66979980 -94.28915405]
[-138.04341125 -84.81143188]
[-126.41703033 -75.33370972]
[-114.79064941 -65.85598755]
[-103.16426086 -56.37826920]
[-91.46697998 -46.98819733]
[-72.33784485 -50.66785049]
[-56.42290115 -38.91354370]
[-54.24786377 -18.94128990]
[-42.07297134 -10.17932415]
[-29.89808273 -1.41735840]
[-15.04827595 -0.26301575]
[-8.36683464 14.07814598]
[3.80805588 22.84011078]
[15.98294640 31.60207748]
[28.15783691 40.36404419]
[40.33272552 49.12601089]
[52.57312393 57.79622269]
[64.87834167 66.37419891]
[77.18355560 74.95217896]
[85.18431091 69.52905273]
[94.39074707 66.58563232]
[104.05367279 66.36145782]
[113.38670349 68.87477112]
[121.63034058 73.92104340]
[128.11370850 81.08959961]
[132.30918884 89.79708099]
[147.25796509 88.55838776]
[162.20672607 87.31970215]
[177.15550232 86.08100891]
[192.10426331 84.84231567]
[207.05302429 83.60363007]
[221.99206543 82.25262451]
[236.92053223 80.78937531]
[251.84898376 79.32613373]
[266.77743530 77.86289215]
[275.55352783 68.40935516]
[288.01867676 67.49872589]
[297.44982910 75.07521057]
[312.39859009 73.83651733]
[327.34738159 72.59783173]
[333.88699341 63.90389633]
[343.92541504 60.31892014]
[354.06619263 62.79941940]
[361.01742554 70.29156494]
[375.99667358 69.50277710]
[390.97592163 68.71398163]
[405.95516968 67.92519379]
[415.21780396 55.32608795]
[430.42410278 51.67878342]
[444.39407349 58.70541763]
[450.53155518 73.08823395]
[445.93859863 88.03610229]
[432.78387451 96.49109650]
[417.27862549 94.46102905]
[406.74395752 82.90443420]
[391.76470947 83.69322968]
[376.78546143 84.48201752]
[361.80621338 85.27081299]
[346.40798950 96.96469879]
[328.58605957 87.54660034]
[313.63729858 88.78528595]
[298.68853760 90.02397919]
[284.82791138 100.78628540]
[268.24069214 92.79135132]
[253.31222534 94.25459290]
[238.38377380 95.71783447]
[223.45530701 97.18108368]
[217.10406494 100.96271515]
[208.29171753 98.55239868]
[193.34295654 99.79108429]
[178.39418030 101.02977753]
[163.44541931 102.26846313]
[148.49665833 103.50715637]
[133.54788208 104.74584961]
[136.78227234 113.42176056]
[137.65917969 123.57036591]
[147.56701660 134.83245850]
[157.47483826 146.09455872]
[173.32894897 148.54957581]
[181.16900635 162.54646301]
[174.98081970 177.34800720]
[159.51141357 181.59973145]
[146.62760925 172.04008484]
[146.21275330 156.00239563]
[136.30491638 144.74029541]
[126.39707947 133.47819519]
[119.25035095 135.75289917]
[127.99398804 147.94096375]
[119.10436249 160.02294922]
[104.86666870 155.30194092]
[104.95689392 140.30229187]
[97.81015778 142.57699585]
[96.23475647 157.49403381]
[94.65935516 172.41107178]
[93.08395386 187.32810974]
[91.50855255 202.24514771]
[90.04531097 217.17361450]
[88.69430542 232.11265564]
[87.56800079 247.07031250]
[86.66664886 262.04321289]
[85.76530457 277.01608276]
[84.86395264 291.98898315]
[83.96260071 306.96188354]
[95.43969727 317.58309937]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 207]
[7 206]
[8 205]
[9 204]
[10 203]
[13 202]
[14 201]
[16 200]
[17 199]
[18 198]
[19 197]
[20 196]
[22 123]
[23 122]
[24 121]
[26 120]
[27 119]
[28 118]
[29 117]
[30 116]
[32 114]
[33 113]
[34 112]
[40 109]
[42 108]
[43 107]
[44 106]
[45 105]
[46 104]
[49 101]
[50 100]
[51 99]
[52 98]
[53 97]
[54 96]
[55 93]
[56 92]
[57 91]
[58 90]
[59 89]
[60 88]
[66 80]
[67 79]
[68 78]
[69 77]
[70 76]
[71 75]
[130 178]
[131 177]
[132 176]
[133 175]
[134 174]
[135 173]
[136 171]
[137 170]
[138 169]
[139 168]
[142 166]
[143 165]
[144 164]
[148 162]
[149 161]
[150 160]
[151 159]
[180 190]
[181 189]
[182 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
