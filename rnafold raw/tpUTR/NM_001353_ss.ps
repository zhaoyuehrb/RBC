%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 21:02:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUGGAGGGCAUUGCAUGAGGUCUGCCAGAAGGCCCUGCGUGUGGAUGGUGACACAGAGGAUGGCUCUAUGCUGGUGACUGGACACAUCGCCUCUGGUUAAAUCUCUCCUGCUUGGUGAUUUCAGCAAGCUACAGCAAAGCCCAUUGGCCAGAAAGGAAAGACAAUAAUUUUGUUUUUUCAUUUUGAAAAAAUUAAAUGCUCUCUCCUAAAGAUUCUUCACCUA\
) } def
/len { sequence length } bind def

/coor [
[101.96497345 317.76538086]
[110.40491486 305.26663208]
[121.68854523 295.26013184]
[135.10658264 288.37484741]
[131.78335571 273.74758911]
[128.46012878 259.12036133]
[125.13690186 244.49311829]
[121.81367493 229.86587524]
[118.49044800 215.23863220]
[115.16722107 200.61138916]
[111.84398651 185.98414612]
[108.52075958 171.35690308]
[105.19753265 156.72967529]
[86.08419037 155.24147034]
[68.54684448 147.49703979]
[54.57164383 134.37345886]
[45.74131775 117.35699463]
[43.05591583 98.37480927]
[28.24887276 95.97658539]
[13.44182873 93.57836914]
[-1.36521518 91.18015289]
[-16.17225838 88.78193665]
[-30.17633820 99.27355194]
[-47.10135269 96.44163513]
[-56.54754257 82.52181244]
[-71.38662720 80.33056641]
[-86.22570801 78.13932037]
[-101.06479645 75.94807434]
[-115.90388489 73.75682831]
[-130.74296570 71.56558228]
[-139.67935181 73.40673828]
[-145.77336121 69.23875427]
[-160.58041382 66.84053802]
[-175.38745117 64.44232178]
[-181.12065125 70.47891235]
[-188.68414307 73.72695923]
[-196.82171631 73.72751617]
[-204.21315002 70.55450439]
[-209.68847656 64.79069519]
[-212.41294861 57.42221451]
[-227.06303406 54.20118713]
[-241.71311951 50.98015594]
[-256.36318970 47.75912857]
[-271.01327515 44.53809738]
[-284.22613525 52.78783035]
[-299.03753662 49.31254959]
[-306.82095337 36.66526794]
[-321.47103882 33.44423676]
[-336.12112427 30.22320938]
[-350.77120972 27.00217819]
[-365.91091919 31.59560013]
[-376.67984009 21.30579948]
[-391.32992554 18.08477020]
[-400.37295532 19.29807281]
[-406.16137695 14.71514130]
[-420.76507568 11.28987789]
[-435.36874390 7.86461544]
[-454.39376831 14.54868031]
[-467.88729858 0.69095308]
[-482.58093262 -2.32521582]
[-497.27456665 -5.34138441]
[-512.65606689 0.34559473]
[-525.09729004 -10.33840847]
[-521.79980469 -26.40260696]
[-506.15573120 -31.32153130]
[-494.25839233 -20.03501320]
[-479.56475830 -17.01884460]
[-464.87115479 -14.00267601]
[-456.89172363 -20.36578369]
[-446.50936890 -21.31165504]
[-437.12435913 -16.28842735]
[-431.94348145 -6.73906851]
[-417.33981323 -3.31380534]
[-402.73611450 0.11145777]
[-388.10888672 3.43468523]
[-373.45880127 6.65571499]
[-359.36694336 1.83190334]
[-347.55017090 12.35209465]
[-332.90008545 15.57312489]
[-318.25003052 18.79415512]
[-303.59994507 22.01518440]
[-291.22937012 13.79904270]
[-276.32623291 16.85692978]
[-267.79226685 29.88801193]
[-253.14216614 33.10904312]
[-238.49208069 36.33007050]
[-223.84199524 39.55110168]
[-209.19192505 42.77213287]
[-189.29173279 34.25400162]
[-172.98922729 49.63527679]
[-158.18218994 52.03349304]
[-143.37515259 54.43170929]
[-128.55172729 56.72649765]
[-113.71263885 58.91774368]
[-98.87355042 61.10898972]
[-84.03446960 63.30023575]
[-69.19538116 65.49147797]
[-54.35629654 67.68272400]
[-45.19358826 58.63159943]
[-32.29875565 56.47520065]
[-20.33896828 62.22103882]
[-13.77404118 73.97489166]
[1.03300261 76.37310791]
[15.84004688 78.77132416]
[30.64709091 81.16954803]
[45.45413589 83.56776428]
[50.50468063 66.84708405]
[60.75604248 51.77113342]
[75.64195251 39.97015381]
[94.08461761 32.87126923]
[114.56914520 31.53879929]
[117.89237213 16.91156006]
[121.21559906 2.28431892]
[124.53882599 -12.34292126]
[127.86205292 -26.97016144]
[123.37443542 -42.14157867]
[133.73916626 -52.83838272]
[137.06239319 -67.46562195]
[131.69879150 -82.96283722]
[142.64100647 -95.17758942]
[158.63261414 -91.54438019]
[163.22283936 -75.80075073]
[151.68963623 -64.14239502]
[148.36640930 -49.51515579]
[153.09172058 -35.38997650]
[142.48928833 -23.64693451]
[139.16606140 -9.01969433]
[135.84283447 5.60754633]
[132.51960754 20.23478699]
[129.19638062 34.86202621]
[135.55674744 38.83642197]
[143.50553894 26.11569977]
[151.45433044 13.39497852]
[155.08332825 -1.15941203]
[170.04681396 -2.20538568]
[175.66540527 11.70258236]
[164.17504883 21.34376717]
[156.22625732 34.06448746]
[148.27746582 46.78520966]
[154.63783264 50.75960541]
[166.32789612 41.36054611]
[178.01795959 31.96149063]
[183.44061279 16.48483086]
[199.60310364 13.70894051]
[209.87887573 26.48941803]
[203.69708252 41.67880249]
[187.41702271 43.65156174]
[175.72695923 53.05061722]
[164.03688049 62.44967270]
[169.16719055 76.54506683]
[184.16389465 76.23092651]
[199.16061401 75.91679382]
[214.15731812 75.60265350]
[229.15402222 75.28852081]
[242.78913879 67.26390839]
[255.67565918 74.73297119]
[270.67236328 74.41883087]
[285.66906738 74.10469818]
[300.66577148 73.79055786]
[315.66250610 73.47642517]
[330.65921021 73.16228485]
[345.65591431 72.84815216]
[360.65261841 72.53401184]
[375.64932251 72.21987915]
[390.64605713 71.90574646]
[402.74325562 61.36831665]
[418.49765015 64.39792633]
[425.82382202 78.67051697]
[419.10174561 93.23737335]
[403.48803711 96.92405701]
[390.96017456 86.90245056]
[375.96347046 87.21659088]
[360.96676636 87.53072357]
[345.97006226 87.84486389]
[330.97332764 88.15899658]
[315.97662354 88.47313690]
[300.97991943 88.78726959]
[285.98321533 89.10140991]
[270.98651123 89.41554260]
[255.98979187 89.72968292]
[243.42735291 97.73182678]
[229.46817017 90.28523254]
[214.47145081 90.59936523]
[199.47474670 90.91349792]
[184.47802734 91.22763824]
[169.48132324 91.54177094]
[168.68618774 100.85942078]
[166.67031860 109.81459045]
[163.51593018 118.25124359]
[159.32455444 126.02870178]
[154.21459961 133.02400208]
[148.31828308 139.13380432]
[141.77870178 144.27584839]
[134.74647522 148.38992310]
[127.37652588 151.43846130]
[119.82477570 153.40644836]
[123.14800262 168.03367615]
[126.47122955 182.66091919]
[129.79446411 197.28816223]
[133.11769104 211.91540527]
[136.44091797 226.54264832]
[139.76414490 241.16989136]
[143.08737183 255.79711914]
[146.41059875 270.42437744]
[149.73382568 285.05160522]
[164.80967712 285.46322632]
[179.30929565 289.61193848]
[192.32122803 297.23693848]
[203.02754211 307.85888672]
[210.75520325 320.81008911]
[215.01846313 335.27645874]
[215.54931641 350.34857178]
[212.31442261 365.07904053]
[205.51708984 378.54183960]
[195.58464050 389.89071655]
[183.14140320 398.41226196]
[168.96960449 403.57083130]
[153.96006775 405.04211426]
[139.05632019 402.73364258]
[125.19521332 396.79052734]
[113.24807739 387.58636475]
[103.96591187 375.69970703]
[97.93221283 361.87780762]
[95.52625275 346.98947144]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 205]
[5 204]
[6 203]
[7 202]
[8 201]
[9 200]
[10 199]
[11 198]
[12 197]
[13 196]
[18 106]
[19 105]
[20 104]
[21 103]
[22 102]
[25 98]
[26 97]
[27 96]
[28 95]
[29 94]
[30 93]
[32 92]
[33 91]
[34 90]
[40 88]
[41 87]
[42 86]
[43 85]
[44 84]
[47 81]
[48 80]
[49 79]
[50 78]
[52 76]
[53 75]
[55 74]
[56 73]
[57 72]
[59 68]
[60 67]
[61 66]
[111 130]
[112 129]
[113 128]
[114 127]
[115 126]
[117 124]
[118 123]
[140 149]
[141 148]
[142 147]
[150 186]
[151 185]
[152 184]
[153 183]
[154 182]
[156 180]
[157 179]
[158 178]
[159 177]
[160 176]
[161 175]
[162 174]
[163 173]
[164 172]
[165 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
