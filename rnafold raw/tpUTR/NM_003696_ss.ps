%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 10:24:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGGAUGUGUGAAAUCUGAUAAAAUGCUAUUAAACUUGGGAUCAAUGUGUUCUAUGAAGUCCAGUGGAGUUCUUAGGGCCUAAAUUGGGGGCCAGAGUUUCAAAGGCAUCACUAUGGAACUAGGAAUACUUUCUUUAACUAGUCCAAGAGGAGAGAGAGGAAUAGGUUGCAAGCUAGAAAAUGGAUUUCUGCAGGACAG\
) } def
/len { sequence length } bind def

/coor [
[141.70732117 735.73809814]
[138.34843445 720.05059814]
[148.63020325 707.73535156]
[136.49179077 699.14489746]
[131.68247986 684.88531494]
[136.24523926 670.35827637]
[148.63020325 661.19757080]
[148.63020325 646.19757080]
[148.63020325 631.19757080]
[148.63020325 616.19757080]
[145.48394775 609.50335693]
[148.74926758 600.96362305]
[148.98370361 585.96545410]
[149.21813965 570.96728516]
[149.45257568 555.96911621]
[149.68701172 540.97094727]
[149.92144775 525.97277832]
[150.15588379 510.97460938]
[135.99229431 506.18359375]
[123.98677063 497.23724365]
[115.32256317 485.00155640]
[110.85845184 470.66760254]
[111.04364777 455.63534546]
[115.87258911 441.37713623]
[124.88428497 429.29336548]
[137.20628357 420.57495117]
[151.63909912 416.08596802]
[151.87353516 401.08779907]
[152.10797119 386.08963013]
[140.72998047 379.09658813]
[134.24293518 367.29898071]
[134.43605042 353.72860718]
[141.36581421 341.93362427]
[153.31341553 335.05090332]
[153.78224182 320.05822754]
[154.25105286 305.06555176]
[154.71987915 290.07287598]
[155.18869019 275.08020020]
[155.65750122 260.08752441]
[146.43272400 260.27572632]
[137.70884705 257.74389648]
[130.25630188 252.80416870]
[124.70665741 245.97714233]
[121.49931335 237.93806458]
[120.84743500 229.45060730]
[122.72569275 221.29447937]
[126.88012695 214.19374084]
[132.85879517 208.75259399]
[127.58189392 194.71142578]
[122.30500031 180.67025757]
[117.02810669 166.62908936]
[111.75121307 152.58792114]
[106.47432709 138.54675293]
[101.19743347 124.50557709]
[83.45265961 129.80838013]
[61.86980820 121.25014496]
[46.84885788 97.49158478]
[33.41526794 90.81785583]
[19.98167610 84.14412689]
[4.18017530 84.93354034]
[-3.77558017 72.34166718]
[-17.20917130 65.66793823]
[-30.64276123 58.99421310]
[-47.51796341 57.36207962]
[-50.62113571 40.69454575]
[-35.46401978 33.09861374]
[-23.96903419 45.56061935]
[-10.53544331 52.23434830]
[2.89814711 58.90807724]
[17.73878670 57.64131546]
[26.65540314 70.71054077]
[40.08899307 77.38426208]
[53.52258301 84.05799103]
[58.84656906 78.77545166]
[48.28166962 68.12731171]
[58.92998505 57.56259155]
[69.49452972 68.21038055]
[74.81851196 62.92784119]
[68.24996948 49.44250488]
[61.68143082 35.95717239]
[55.11288834 22.47183609]
[48.54434586 8.98650169]
[33.33039093 5.37131071]
[24.04116058 -7.20820475]
[25.06274605 -22.81238365]
[35.91278458 -34.07340622]
[51.46821976 -35.67416763]
[64.38425446 -26.85883331]
[68.56232452 -11.78973484]
[62.02968216 2.41795921]
[68.59822083 15.90329361]
[75.16676331 29.38862801]
[81.73530579 42.87396240]
[88.30384827 56.35929871]
[95.77615356 55.71536255]
[110.72076416 54.42749023]
[118.19306946 53.78355408]
[122.35767365 39.37327576]
[126.52227020 24.96299744]
[130.68687439 10.55272007]
[134.85147095 -3.85755754]
[139.01606750 -18.26783562]
[143.18066406 -32.67811203]
[139.57904053 -48.08391953]
[150.54574585 -58.16263580]
[154.71035767 -72.57291412]
[146.85859680 -86.28880310]
[151.08573914 -101.51728821]
[164.88386536 -109.22358704]
[180.06681824 -104.83568573]
[187.62680054 -90.95684814]
[183.07861328 -75.82114410]
[169.12063599 -68.40831757]
[164.95602417 -53.99803543]
[168.85554504 -39.62295151]
[157.59094238 -28.51351357]
[153.42634583 -14.10323524]
[149.26174927 0.30704245]
[145.09715271 14.71732044]
[140.93255615 29.12759781]
[136.76794434 43.53787613]
[132.60334778 57.94815445]
[138.87200928 99.79318237]
[115.23860168 119.22868347]
[120.51549530 133.26985168]
[125.79238129 147.31101990]
[131.06927490 161.35218811]
[136.34617615 175.39335632]
[141.62306213 189.43452454]
[146.89996338 203.47569275]
[169.94245911 210.49055481]
[179.35600281 234.66073608]
[194.27867126 233.13945007]
[209.20132446 231.61816406]
[224.12397766 230.09686279]
[239.04663086 228.57557678]
[253.96929932 227.05429077]
[262.71209717 217.56416321]
[275.17803955 216.60830688]
[284.63800049 224.15536499]
[299.58261108 222.86749268]
[308.47268677 213.51516724]
[320.95202637 212.75425720]
[330.29287720 220.44825745]
[345.25579834 219.39410400]
[360.21871948 218.33996582]
[373.49923706 208.71917725]
[388.35891724 215.65617371]
[389.51138306 232.01477051]
[375.77108765 240.96665955]
[361.27285767 233.30288696]
[346.30993652 234.35702515]
[331.34701538 235.41116333]
[317.35876465 246.00241089]
[300.87048340 237.81210327]
[285.92587280 239.09997559]
[272.10482788 249.90855408]
[255.49058533 241.97695923]
[240.56791687 243.49824524]
[225.64526367 245.01953125]
[210.72261047 246.54081726]
[195.79995728 248.06210327]
[180.87730408 249.58338928]
[170.65017700 260.55636597]
[170.18136597 275.54904175]
[169.71253967 290.54168701]
[169.24372864 305.53436279]
[168.77490234 320.52703857]
[168.30609131 335.51971436]
[181.81037903 345.69812012]
[186.54283142 361.75979614]
[180.82929993 377.32232666]
[167.10614014 386.32406616]
[166.87170410 401.32223511]
[166.63726807 416.32040405]
[180.92274475 421.25827026]
[192.96621704 430.35757446]
[201.59584045 442.71710205]
[205.97679138 457.11926270]
[205.69206238 472.14993286]
[200.78213501 486.33740234]
[191.73974609 498.29629517]
[179.46046448 506.86306763]
[165.15405273 511.20904541]
[164.91961670 526.20721436]
[164.68518066 541.20538330]
[164.45074463 556.20355225]
[164.21630859 571.20172119]
[163.98187256 586.19989014]
[163.74743652 601.19805908]
[163.63020325 616.19757080]
[163.63020325 631.19757080]
[163.63020325 646.19757080]
[163.63020325 661.19757080]
[176.01518250 670.35827637]
[180.57794189 684.88531494]
[175.76863098 699.14489746]
[163.63020325 707.73535156]
[173.91197205 720.05059814]
[170.55310059 735.73809814]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 198]
[7 194]
[8 193]
[9 192]
[10 191]
[12 190]
[13 189]
[14 188]
[15 187]
[16 186]
[17 185]
[18 184]
[27 175]
[28 174]
[29 173]
[34 169]
[35 168]
[36 167]
[37 166]
[38 165]
[39 164]
[48 130]
[49 129]
[50 128]
[51 127]
[52 126]
[53 125]
[54 124]
[57 73]
[58 72]
[59 71]
[61 69]
[62 68]
[63 67]
[78 94]
[79 93]
[80 92]
[81 91]
[82 90]
[97 122]
[98 121]
[99 120]
[100 119]
[101 118]
[102 117]
[103 116]
[105 114]
[106 113]
[132 163]
[133 162]
[134 161]
[135 160]
[136 159]
[137 158]
[140 156]
[141 155]
[144 153]
[145 152]
[146 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
