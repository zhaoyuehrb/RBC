%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 11:46:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCAGCCUUCCAGCAAGAGAUUGUUUUUCAAGGACAAGGACUUUGAUUUAUUUCUGCCCCCACCCUGGUACUGCCUGGUGCCUGCCACAAAAUAAGCACUAACAAAAGUGUAUUGUUUAAAAAAUAAAAAGAAGGUGGGCAGAAAUGUGCCCAGUGGAAGGCUGACCCCAUUUAAGUGCCAACUACUCCAAACCGA\
) } def
/len { sequence length } bind def

/coor [
[134.07855225 306.72204590]
[140.61524963 296.22146606]
[148.90789795 287.03851318]
[158.69645691 279.46334839]
[152.03546143 266.02343750]
[145.37446594 252.58352661]
[138.71345520 239.14361572]
[132.05245972 225.70372009]
[125.39146423 212.26380920]
[118.73046112 198.82389832]
[112.06946564 185.38400269]
[105.40846252 171.94409180]
[98.74746704 158.50418091]
[83.79463959 157.31542969]
[75.09378815 169.53407288]
[66.39293671 181.75271606]
[57.69208145 193.97135925]
[56.67272949 210.33879089]
[41.86997223 217.39643860]
[28.51162148 207.88400269]
[30.33960152 191.58705139]
[45.47344208 185.27049255]
[54.17429733 173.05186462]
[62.87514877 160.83322144]
[71.57600403 148.61457825]
[66.98672485 142.68258667]
[52.12294006 144.69947815]
[57.80817413 130.81860352]
[53.21889496 124.88661194]
[39.20667648 130.23989868]
[25.19445992 135.59320068]
[11.18224239 140.94648743]
[-2.82997561 146.29978943]
[-16.84219360 151.65307617]
[-21.78542328 166.48880005]
[-35.13536453 174.63208008]
[-50.58858490 172.23791504]
[-60.84854507 160.43676758]
[-61.07080460 144.80075073]
[-51.15042114 132.71275330]
[-35.77149582 129.88032532]
[-22.19548607 137.64085388]
[-8.18326855 132.28756714]
[5.82894897 126.93427277]
[19.84116745 121.58097839]
[33.85338593 116.22768402]
[47.86560440 110.87438965]
[54.51602936 84.98751831]
[71.70994568 68.23217773]
[92.50000000 63.58482742]
[92.50000000 48.58482742]
[92.50000000 33.58482742]
[92.50000000 18.58482742]
[92.50000000 3.58482742]
[92.50000000 -11.41517258]
[92.50000000 -26.41517258]
[92.50000000 -41.41517258]
[92.50000000 -56.41517258]
[92.50000000 -71.41517639]
[92.50000000 -86.41517639]
[92.38100433 -101.41470337]
[92.14301300 -116.41281128]
[69.53053284 -123.01574707]
[50.76275635 -137.20964050]
[38.27995300 -157.12570190]
[33.69692612 -180.15267944]
[37.59413147 -203.27915955]
[49.44424820 -223.48745728]
[39.26660538 -234.50633240]
[29.08896446 -245.52520752]
[18.91132355 -256.54406738]
[8.73368263 -267.56295776]
[-1.44395816 -278.58184814]
[-17.25567436 -282.93173218]
[-21.13201714 -298.86618042]
[-9.08534050 -309.99313354]
[6.49177027 -304.86618042]
[9.57491779 -288.75946045]
[19.75255775 -277.74060059]
[29.93020058 -266.72171021]
[40.10784149 -255.70285034]
[50.28548050 -244.68397522]
[60.46312332 -233.66510010]
[65.21280670 -236.81575012]
[70.22103119 -239.53674316]
[75.44902802 -241.80700684]
[80.85634613 -243.60896301]
[86.40111542 -244.92866516]
[92.04042053 -245.75590515]
[97.73060608 -246.08427429]
[103.42763519 -245.91122437]
[106.26641083 -260.64016724]
[109.10517883 -275.36907959]
[111.94394684 -290.09802246]
[114.78271484 -304.82696533]
[117.62148285 -319.55587769]
[120.34331512 -334.30688477]
[122.94803619 -349.07897949]
[125.55275726 -363.85110474]
[128.15748596 -378.62322998]
[130.76220703 -393.39532471]
[121.49307251 -406.19607544]
[124.07274628 -421.78839111]
[136.97076416 -430.92169189]
[152.53494263 -428.17727661]
[161.53135681 -415.18344116]
[158.62255859 -399.64913940]
[145.53431702 -390.79061890]
[142.92959595 -376.01849365]
[140.32487488 -361.24636841]
[137.72015381 -346.47427368]
[135.11543274 -331.70214844]
[137.05201721 -324.56137085]
[132.35041809 -316.71710205]
[129.51164246 -301.98818970]
[126.67287445 -287.25924683]
[123.83410645 -272.53033447]
[120.99533844 -257.80139160]
[118.15657043 -243.07246399]
[128.27941895 -238.92953491]
[137.56509399 -233.14054871]
[145.74816895 -225.86915588]
[152.59446716 -217.32141113]
[157.90769958 -207.73989868]
[161.53514099 -197.39689636]
[163.37197876 -186.58662415]
[163.36434937 -175.61685181]
[161.51094055 -164.80014038]
[157.86305237 -154.44497681]
[152.52317810 -144.84692383]
[145.64212036 -136.28024292]
[137.41477966 -128.98995972]
[128.07453918 -123.18498230]
[117.88674927 -119.03200531]
[107.14112091 -116.65080261]
[107.37911224 -101.65268707]
[110.63209534 -95.00746918]
[107.50000000 -86.41517639]
[107.50000000 -71.41517639]
[107.50000000 -56.41517258]
[107.50000000 -41.41517258]
[107.50000000 -26.41517258]
[107.50000000 -11.41517258]
[107.50000000 3.58482742]
[107.50000000 18.58482742]
[107.50000000 33.58482742]
[107.50000000 48.58482742]
[107.50000000 63.58482742]
[120.20114899 66.41875458]
[131.75382996 73.75063324]
[140.55404663 85.08926392]
[145.21360779 99.37213898]
[144.76184082 115.06060028]
[138.80593872 130.30513000]
[127.62583160 143.16305542]
[112.18737030 151.84318542]
[118.84837341 165.28309631]
[125.50936890 178.72299194]
[132.17036438 192.16290283]
[138.83137512 205.60281372]
[145.49237061 219.04272461]
[152.15336609 232.48262024]
[158.81436157 245.92253113]
[165.47537231 259.36242676]
[172.13636780 272.80233765]
[189.59370422 268.86691284]
[207.46838379 269.50311279]
[224.58369446 274.66430664]
[239.81414795 284.00604248]
[252.15945435 296.90917969]
[260.81027222 312.52084351]
[265.20123291 329.81082153]
[265.04785156 347.63958740]
[260.36508179 364.83328247]
[251.46583557 380.26113892]
[238.94020081 392.90975952]
[246.84857178 405.65563965]
[254.75695801 418.40151978]
[269.45971680 425.66522217]
[270.25039673 442.04528809]
[256.31561279 450.69134521]
[241.99029541 442.70904541]
[242.01107788 426.30990601]
[234.10269165 413.56402588]
[226.19432068 400.81814575]
[214.67385864 405.15530396]
[202.56401062 407.38864136]
[190.24586487 407.44628906]
[178.10733032 405.32501221]
[166.53089905 401.09011841]
[155.88165283 394.87356567]
[146.49569702 386.86984253]
[138.66955566 377.32983398]
[132.65083313 366.55300903]
[128.63038635 354.87805176]
[126.73622894 342.67211914]
[127.02947998 330.31933594]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 165]
[5 164]
[6 163]
[7 162]
[8 161]
[9 160]
[10 159]
[11 158]
[12 157]
[13 156]
[14 25]
[15 24]
[16 23]
[17 22]
[29 47]
[30 46]
[31 45]
[32 44]
[33 43]
[34 42]
[50 148]
[51 147]
[52 146]
[53 145]
[54 144]
[55 143]
[56 142]
[57 141]
[58 140]
[59 139]
[60 138]
[61 136]
[62 135]
[68 83]
[69 82]
[70 81]
[71 80]
[72 79]
[73 78]
[91 119]
[92 118]
[93 117]
[94 116]
[95 115]
[96 114]
[97 112]
[98 111]
[99 110]
[100 109]
[101 108]
[176 185]
[177 184]
[178 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
