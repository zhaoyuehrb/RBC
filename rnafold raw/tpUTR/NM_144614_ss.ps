%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 00:29:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUCAGUCUUGGGCUUUCGGUCCCUUUCUUUUAAUGCCCAUCCUCAUUCCUACUCUGAAUUGUCACACUUUUCCCUUCCCCACCAGUUCUUUAAUAAAAGUAUUUGAAAGGC\
) } def
/len { sequence length } bind def

/coor [
[27.55210114 223.65393066]
[20.77910042 237.03775024]
[14.00610065 250.42156982]
[7.23309994 263.80538940]
[0.46009979 277.18917847]
[-6.31290054 290.57299805]
[-4.86973667 306.90853882]
[-18.44869232 316.10330200]
[-33.08090210 308.69854736]
[-33.71400070 292.31161499]
[-19.69671440 283.80001831]
[-12.92371368 270.41619873]
[-6.15071344 257.03237915]
[0.62228698 243.64855957]
[7.39528751 230.26475525]
[14.16828728 216.88093567]
[8.65788841 209.78153992]
[5.81412506 201.21003723]
[5.98980522 192.13685608]
[9.19412136 183.59957886]
[15.08825588 176.58422852]
[23.02097702 171.91142273]
[32.10050583 170.14045715]
[41.29474258 171.50245667]
[49.84186172 159.17579651]
[58.38898468 146.84912109]
[66.93610382 134.52246094]
[75.48322296 122.19579315]
[84.03034973 109.86912537]
[81.27700806 101.37077332]
[82.76323700 92.56202698]
[88.15249634 85.43751526]
[96.22445679 81.61047363]
[105.15134430 81.94749451]
[114.68720245 70.36874390]
[124.22306061 58.78999329]
[133.75891113 47.21124268]
[143.29476929 35.63249207]
[135.50061035 26.40570831]
[129.27279663 16.06039619]
[124.76875305 4.85981846]
[122.10198975 -6.91117096]
[121.33932495 -18.95337296]
[122.49919128 -30.96084785]
[125.55120087 -42.62868881]
[130.41690063 -53.66076279]
[136.97184753 -63.77722931]
[145.04876709 -72.72163391]
[154.44177246 -80.26741791]
[164.91169739 -86.22364044]
[176.19213867 -90.43983459]
[187.99621582 -92.80978394]
[200.02394104 -93.27422333]
[211.96975708 -91.82228088]
[223.53031921 -88.49178314]
[234.41227722 -83.36823273]
[244.33961487 -76.58261108]
[253.06069946 -68.30807495]
[265.14715576 -77.19160461]
[277.23364258 -86.07512665]
[289.32012939 -94.95865631]
[301.40658569 -103.84218597]
[313.49307251 -112.72571564]
[308.15451050 -126.84670258]
[306.82485962 -141.88447571]
[309.60278320 -156.72312927]
[316.28213501 -170.26153564]
[326.36730957 -181.49507141]
[339.10986328 -189.59011841]
[353.56423950 -193.94596863]
[368.65783691 -194.23939514]
[383.27059937 -190.44860840]
[396.31814575 -182.85494995]
[406.83230591 -172.02188110]
[414.03280640 -158.75329590]
[417.38534546 -144.03381348]
[416.64117432 -128.95573425]
[411.85546875 -114.63792419]
[403.38336182 -102.14287567]
[391.85357666 -92.39779663]
[378.12167358 -86.12584686]
[363.20663452 -83.79244232]
[348.21530151 -85.57073212]
[334.26010132 -91.32875824]
[322.37661743 -100.63923645]
[310.29013062 -91.75571442]
[298.20364380 -82.87218475]
[286.11718750 -73.98865509]
[274.03070068 -65.10512543]
[261.94421387 -56.22159576]
[269.35272217 -39.34041595]
[272.44692993 -21.15827370]
[271.03817749 -2.76031470]
[265.20654297 14.75444126]
[255.29650879 30.33876228]
[241.89651489 43.05981064]
[225.80403137 52.15499115]
[207.97810364 57.07765579]
[189.48223877 57.52996445]
[171.42088318 53.48089600]
[154.87351990 45.16834641]
[145.33766174 56.74709702]
[135.80180359 68.32585144]
[126.26595306 79.90459442]
[116.73009491 91.48334503]
[114.97208405 111.32546234]
[96.35701752 118.41624451]
[87.80989075 130.74291992]
[79.26277161 143.06958008]
[70.71565247 155.39624023]
[62.16852951 167.72291565]
[53.62141037 180.04957581]
[59.34844971 200.96058655]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 16]
[2 15]
[3 14]
[4 13]
[5 12]
[6 11]
[24 112]
[25 111]
[26 110]
[27 109]
[28 108]
[29 107]
[34 105]
[35 104]
[36 103]
[37 102]
[38 101]
[58 90]
[59 89]
[60 88]
[61 87]
[62 86]
[63 85]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
