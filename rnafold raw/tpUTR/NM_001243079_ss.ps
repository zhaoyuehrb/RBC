%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 21:32:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCCCCUGAGGGUCAGAGUGGACCCCUGCAUGGUAGUGCCAGGGACCCAGGCUCCAUUUCCAUUCCUGUGGCUCCCCCAGAGGGGCUGUCCUGGGGGAGGGCUGGGGGGCACACGGGAGGUGGGUUCUUGCCUUGUGGCAUGACUGUUCAACCCAGACUUUGCUGGGAUCUCUUCCUUUUUCAUUAAAGACAAUUUGAAAUGCUGU\
) } def
/len { sequence length } bind def

/coor [
[234.73358154 129.16384888]
[219.85821533 127.23417664]
[204.98286438 125.30449677]
[190.10749817 123.37482452]
[175.23213196 121.44514465]
[160.35678101 119.51547241]
[145.48141479 117.58579254]
[131.86453247 123.62149811]
[119.17440033 114.17316437]
[104.29903412 112.24349213]
[89.66078186 115.51786041]
[77.02522278 123.60134125]
[73.64701080 129.29048157]
[68.65191650 132.00912476]
[63.88124466 131.73162842]
[51.00617981 139.42791748]
[47.04003525 154.49136353]
[33.87325287 162.11308289]
[19.53700066 158.23913574]
[6.66193771 165.93540955]
[-6.21312571 173.63169861]
[-10.17926884 188.69514465]
[-23.34605026 196.31684875]
[-37.68230438 192.44291687]
[-50.55736923 200.13919067]
[-63.43243027 207.83547974]
[-76.30749512 215.53175354]
[-89.18255615 223.22804260]
[-101.99884796 231.02178955]
[-114.75563049 238.91258240]
[-127.51241302 246.80337524]
[-134.79637146 261.49609375]
[-151.17752075 262.26416016]
[-159.80433655 248.31748962]
[-151.80229187 234.00318909]
[-135.40319824 234.04660034]
[-122.64641571 226.15580750]
[-109.88964081 218.26501465]
[-105.85353851 212.07092285]
[-96.87883759 210.35296631]
[-84.00377655 202.65669250]
[-71.12871552 194.96041870]
[-58.25364685 187.26412964]
[-45.37858582 179.56785583]
[-42.00273132 165.10620117]
[-29.05522156 157.11767578]
[-13.90940666 160.75663757]
[-1.03434312 153.06034851]
[11.84072018 145.36407471]
[15.21657467 130.90242004]
[28.16408348 122.91388702]
[43.30989838 126.55284882]
[56.18496323 118.85656738]
[68.94174194 110.96578217]
[81.57730103 102.88230133]
[81.00872040 95.40388489]
[66.05186462 96.54080200]
[64.91519928 81.58393097]
[79.87155151 80.44705200]
[79.30297089 72.96863556]
[65.59054565 66.88838959]
[51.87812042 60.80814362]
[38.16569519 54.72789764]
[21.92525673 57.00391388]
[12.04860878 43.91254807]
[18.69599915 28.92107582]
[35.02915955 27.45143890]
[44.24593735 41.01547241]
[57.95836639 47.09571838]
[71.67079163 53.17596436]
[85.38321686 59.25621033]
[95.28409576 47.98799896]
[87.49033356 35.17170715]
[79.69657898 22.35541725]
[71.90281677 9.53912640]
[64.10906219 -3.27716422]
[56.31529999 -16.09345627]
[48.52154160 -28.90974617]
[40.72777939 -41.72603607]
[32.93402100 -54.54232788]
[25.79900360 -60.25093079]
[25.12093735 -67.61279297]
[17.52257729 -80.54588318]
[2.41920495 -85.95584869]
[-2.63135982 -101.18316650]
[6.24524546 -114.54675293]
[22.23964882 -115.79520416]
[33.08231354 -103.97081757]
[30.45567322 -88.14424896]
[38.05403137 -75.21115112]
[45.75031281 -62.33608627]
[53.54407120 -49.51979828]
[61.33782959 -36.70350647]
[69.13159180 -23.88721466]
[76.92534637 -11.07092381]
[84.71910858 1.74536753]
[92.51287079 14.56165886]
[100.30662537 27.37794876]
[108.10038757 40.19424057]
[119.62363434 62.31460953]
[118.09760284 83.30033875]
[106.22871399 97.36813354]
[121.10407257 99.29780579]
[135.78494263 93.40012360]
[147.41108704 102.71043396]
[162.28645325 104.64010620]
[177.16181946 106.56978607]
[192.03717041 108.49945831]
[206.91253662 110.42913818]
[221.78790283 112.35881805]
[236.66325378 114.28849030]
[248.83045959 97.81434631]
[267.91058350 90.68640900]
[287.68005371 95.09909058]
[301.76147461 109.50354767]
[316.17410278 105.34710693]
[330.58676147 101.19067383]
[344.99938965 97.03423309]
[359.41201782 92.87779236]
[373.82464600 88.72135162]
[381.20590210 83.33492279]
[388.48760986 84.61298370]
[402.96166992 80.67575073]
[417.43572998 76.73852539]
[431.90975952 72.80129242]
[436.47229004 30.19021034]
[448.59414673 21.35502434]
[455.18902588 6.97385406]
[470.03161621 5.73003101]
[482.15347290 -3.10515499]
[494.27532959 -11.94034100]
[506.39718628 -20.77552795]
[512.54632568 -35.97816467]
[528.82208252 -37.98591232]
[538.48138428 -24.73336601]
[531.58758545 -9.85361385]
[515.23236084 -8.65366745]
[503.11053467 0.18151884]
[490.98867798 9.01670456]
[478.86679077 17.85189056]
[473.13894653 31.60111046]
[457.42935181 33.47688293]
[445.30749512 42.31206894]
[447.16604614 49.57814026]
[461.69818115 45.86102295]
[476.23031616 42.14390564]
[490.76251221 38.42702866]
[494.47915649 52.95929337]
[479.94741821 56.67604446]
[465.41528320 60.39316177]
[450.88314819 64.11027527]
[452.74169922 71.37635040]
[467.61706543 73.30602264]
[482.49243164 75.23570251]
[497.36779785 77.16537476]
[512.24316406 79.09505463]
[524.60876465 69.25290680]
[540.30230713 71.12023163]
[550.01318359 83.58917999]
[547.98004150 99.26214600]
[535.40911865 108.84063721]
[519.75854492 106.64189911]
[510.31347656 93.97041321]
[495.43811035 92.04073334]
[480.56274414 90.11106110]
[465.68740845 88.18138123]
[450.81204224 86.25170898]
[435.84701538 87.27534485]
[421.37295532 91.21257782]
[406.89889526 95.14980316]
[392.42483521 99.08703613]
[377.98107910 103.13398743]
[363.56845093 107.29042816]
[349.15582275 111.44686890]
[334.74319458 115.60330200]
[320.33056641 119.75974274]
[305.91790771 123.91618347]
[303.48605347 139.33958435]
[294.63818359 152.20468140]
[302.23654175 165.13777161]
[309.83489990 178.07086182]
[317.43325806 191.00396729]
[325.03161621 203.93705750]
[340.23861694 202.62963867]
[354.50390625 208.05780029]
[364.99502563 219.14378357]
[369.62899780 233.68644714]
[367.48574829 248.79832458]
[358.99081421 261.47897339]
[345.83084106 269.21060181]
[330.61880493 270.45812988]
[316.37503052 264.97384644]
[305.92761230 253.84663391]
[301.35095215 239.28584290]
[303.55371094 224.18251038]
[312.09851074 211.53541565]
[304.50015259 198.60232544]
[296.90179443 185.66921997]
[289.30343628 172.73612976]
[281.70507812 159.80303955]
[273.92163086 161.51399231]
[265.93051147 161.43733215]
[258.13812256 159.56703186]
[250.94299316 155.98847961]
[244.71540833 150.87474060]
[239.77830505 144.47813416]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 111]
[2 110]
[3 109]
[4 108]
[5 107]
[6 106]
[7 105]
[9 103]
[10 102]
[11 55]
[12 54]
[15 53]
[16 52]
[19 49]
[20 48]
[21 47]
[24 44]
[25 43]
[26 42]
[27 41]
[28 40]
[29 38]
[30 37]
[31 36]
[60 71]
[61 70]
[62 69]
[63 68]
[72 99]
[73 98]
[74 97]
[75 96]
[76 95]
[77 94]
[78 93]
[79 92]
[80 91]
[82 90]
[83 89]
[115 177]
[116 176]
[117 175]
[118 174]
[119 173]
[120 172]
[122 171]
[123 170]
[124 169]
[125 168]
[126 143]
[127 142]
[129 140]
[130 139]
[131 138]
[132 137]
[152 167]
[153 166]
[154 165]
[155 164]
[156 163]
[179 200]
[180 199]
[181 198]
[182 197]
[183 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
