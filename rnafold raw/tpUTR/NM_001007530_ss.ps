%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 20:36:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGGCGGGCAGUGGGUGAGGGGACCAGGAGGUGGCUCCAAAGGGUAAAGCAAACAAAGCUUUUAACGACAGCCGUUGUGCCCCAGGCUCUCCAUGCCACCACCUGCCCUACCAUUUAUUAAUAGUGUUAGAAUUACAAGUUGAUGAAACGAGAUUACAAUAAAGUUUGAUUUCUGAAACUUCA\
) } def
/len { sequence length } bind def

/coor [
[84.67467499 109.25537109]
[87.13151550 102.93459320]
[91.54379272 99.19525909]
[77.24662018 94.65753937]
[62.94944763 90.11982727]
[48.65227509 85.58210754]
[34.35510254 81.04438782]
[20.05793190 76.50666809]
[6.15069103 83.52282715]
[-8.28403282 78.71726227]
[-14.88715744 65.41559601]
[-29.18432808 60.87788010]
[-43.48149872 56.34016037]
[-57.77867126 51.80244064]
[-68.24690247 60.79017258]
[-81.68376160 63.40487289]
[-94.55307770 59.06755066]
[-103.52184296 49.01455688]
[-106.32329559 35.94756699]
[-120.54091644 31.16641426]
[-134.75852966 26.38526154]
[-148.97615051 21.60410881]
[-163.19375610 16.82295609]
[-177.45167542 12.16335011]
[-191.74884033 7.62563181]
[-206.96046448 23.04706764]
[-233.37959290 21.03874779]
[-246.81375122 27.71133423]
[-260.24792480 34.38391876]
[-273.68206787 41.05650711]
[-282.29843140 55.00966263]
[-298.68014526 54.25386429]
[-305.97512817 39.56661606]
[-296.67892456 26.05689621]
[-280.35464478 27.62234879]
[-266.92050171 20.94976234]
[-253.48634338 14.27717590]
[-240.05218506 7.60458994]
[-239.73214722 0.11142113]
[-252.39067078 -7.93604374]
[-239.09207153 -14.87491608]
[-238.77203369 -22.36808395]
[-251.58833313 -30.16184425]
[-264.40460205 -37.95560455]
[-277.22091675 -45.74936295]
[-312.57470703 -18.99446869]
[-327.01846313 -23.04141998]
[-341.46221924 -27.08837128]
[-355.90597534 -31.13532257]
[-370.34973145 -35.18227386]
[-383.15762329 -26.21051788]
[-398.73135376 -27.62198830]
[-409.71755981 -38.75023270]
[-410.92883301 -54.34083176]
[-401.79324341 -67.03238678]
[-386.62438965 -70.83232880]
[-372.58450317 -63.94644165]
[-366.30279541 -49.62603378]
[-351.85903931 -45.57908249]
[-337.41528320 -41.53213120]
[-322.97149658 -37.48517990]
[-308.52774048 -33.43822861]
[-304.46804810 -39.74448013]
[-296.34863281 -52.35698700]
[-292.28894043 -58.66323853]
[-301.95254517 -70.13559723]
[-311.61611938 -81.60794830]
[-321.27972412 -93.08029938]
[-330.94332886 -104.55265808]
[-346.53979492 -109.62040710]
[-349.68411255 -125.71529388]
[-337.14163208 -136.28027344]
[-321.81503296 -130.44700623]
[-319.47097778 -114.21625519]
[-309.80737305 -102.74389648]
[-300.14376831 -91.27154541]
[-290.48019409 -79.79918671]
[-280.81658936 -68.32683563]
[-269.42715454 -58.56565475]
[-256.61087036 -50.77189255]
[-243.79457092 -42.97813416]
[-230.97827148 -35.18437576]
[-207.06433105 -37.43601227]
[-190.26284790 -24.64343452]
[-187.21112061 -6.67153978]
[-172.91395569 -2.13382149]
[-165.56982422 -3.10947180]
[-158.41259766 2.60534048]
[-144.19499207 7.38649368]
[-129.97737122 12.16764641]
[-115.75975800 16.94879913]
[-101.54214478 21.72995377]
[-88.48671722 11.79644108]
[-71.91709137 11.59132862]
[-58.35055542 21.39307213]
[-53.24095535 37.50527191]
[-38.94378281 42.04298782]
[-24.64661026 46.58070755]
[-10.34943867 51.11842346]
[2.71592450 44.05925751]
[17.27993011 48.45747757]
[24.59564972 62.20949936]
[38.89282227 66.74721527]
[53.18999100 71.28493500]
[67.48716736 75.82265472]
[81.78433228 80.36037445]
[96.08150482 84.89808655]
[110.86340332 82.34943390]
[122.81547546 73.28588867]
[134.76754761 64.22234344]
[141.08843994 49.71865463]
[155.90475464 48.19349289]
[167.85682678 39.12994766]
[179.80891418 30.06640244]
[191.76098633 21.00285721]
[192.35122681 5.37641716]
[202.88612366 -6.17996740]
[218.39141846 -8.20972443]
[231.54597473 0.24553438]
[236.13864136 15.19349480]
[230.00086975 29.57618713]
[216.03074646 36.60254288]
[200.82453918 32.95493317]
[188.87245178 42.01847839]
[176.92037964 51.08202362]
[164.96830750 60.14557266]
[159.50230408 74.00096893]
[143.83110046 76.17441559]
[131.87902832 85.23796082]
[119.92694855 94.30151367]
[119.67089081 101.79713440]
[132.90971375 94.74493408]
[145.63655090 102.68391418]
[145.12472534 117.67517853]
[131.88603210 124.72762299]
[119.15876770 116.78839111]
[118.90270996 124.28401947]
[130.20840454 134.14207458]
[141.51409912 144.00013733]
[152.81979370 153.85818481]
[164.12548828 163.71624756]
[179.16949463 160.40197754]
[193.11735535 166.51019287]
[200.70426941 179.50645447]
[199.20162964 194.30104065]
[210.50732422 204.15910339]
[221.81301880 214.01715088]
[233.11871338 223.87521362]
[248.66984558 222.98057556]
[259.99499512 233.13909912]
[260.75204468 247.97023010]
[272.05773926 257.82827759]
[283.36343384 267.68634033]
[294.66912842 277.54440308]
[305.97482300 287.40246582]
[321.39453125 284.80105591]
[334.85256958 292.76437378]
[339.99453735 307.53240967]
[334.39248657 322.13211060]
[320.69158936 329.66995239]
[305.36096191 326.58682251]
[295.63925171 314.33843994]
[296.11679077 298.70816040]
[284.81109619 288.85009766]
[273.50540161 278.99203491]
[262.19970703 269.13397217]
[250.89399719 259.27593994]
[236.09791565 260.54541016]
[224.49189758 250.70899963]
[223.26066589 235.18090820]
[211.95497131 225.32284546]
[200.64927673 215.46479797]
[189.34358215 205.60673523]
[174.89138794 209.10990906]
[160.98309326 203.36332703]
[153.03253174 190.37710571]
[154.26744080 175.02194214]
[142.96174622 165.16387939]
[131.65605164 155.30583191]
[120.35034943 145.44776917]
[109.04465485 135.58972168]
[97.75356293 131.93768311]
[89.63359070 125.26838684]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 107]
[4 106]
[5 105]
[6 104]
[7 103]
[8 102]
[11 99]
[12 98]
[13 97]
[14 96]
[19 92]
[20 91]
[21 90]
[22 89]
[23 88]
[24 86]
[25 85]
[27 38]
[28 37]
[29 36]
[30 35]
[42 82]
[43 81]
[44 80]
[45 79]
[46 62]
[47 61]
[48 60]
[49 59]
[50 58]
[65 78]
[66 77]
[67 76]
[68 75]
[69 74]
[108 130]
[109 129]
[110 128]
[112 126]
[113 125]
[114 124]
[115 123]
[137 181]
[138 180]
[139 179]
[140 178]
[141 177]
[145 173]
[146 172]
[147 171]
[148 170]
[151 167]
[152 166]
[153 165]
[154 164]
[155 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
