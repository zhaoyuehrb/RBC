%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 18:24:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGAAGAGCAAUGUUACAUGCCAUAUUCCACUGUUUUUGAUGCUAAUCCACUAGCGCAAUUAUUUAGAUUUGCUCAUACACUAAAGAAAACACAAUUGUUCAUAUAUGUCUCAGUAUUUCUGUAUUAAAUAUUCAUAAUAUGUAUUCUGCCCUAUGGUUUGCAUCUUUGUAAGUUAAAUAUUCUAAUUUAUCAAUUAGCAGAAUAAUUAUCAUAAGAUCCAAAAUGUCUUCCAGACACCCCUGCAC\
) } def
/len { sequence length } bind def

/coor [
[73.27473450 225.28822327]
[81.76418304 211.25749207]
[73.86882019 198.62767029]
[81.43347931 184.73211670]
[81.24649048 169.73327637]
[81.05949402 154.73445129]
[74.85848999 150.34942627]
[69.46226501 145.30511475]
[64.93401337 139.73432922]
[61.31632233 133.77479553]
[58.63104248 127.56599426]
[45.03642654 133.90527344]
[31.44181061 140.24453735]
[17.84719276 146.58381653]
[4.25257635 152.92309570]
[-9.34204102 159.26235962]
[-7.40225458 167.29742432]
[-6.60059071 175.52130127]
[-6.95183229 183.77365112]
[-8.44829369 191.89372253]
[-11.05998325 199.72340393]
[-14.73520851 207.11041260]
[-19.40159416 213.91113281]
[-24.96751213 219.99354553]
[-31.32387543 225.23968506]
[-38.34628296 229.54795837]
[-45.89744568 232.83512878]
[-53.82987595 235.03793335]
[-61.98876953 236.11422729]
[-70.21501923 236.04389954]
[-78.34833527 234.82913208]
[-86.23033142 232.49446106]
[-93.70766449 229.08618164]
[-100.63496399 224.67146301]
[-106.87770081 219.33706665]
[-112.31475067 213.18756104]
[-116.84080505 206.34336853]
[-120.36836243 198.93832397]
[-134.90452576 202.63967896]
[-143.00506592 215.94451904]
[-157.79953003 219.49114990]
[-170.43374634 211.68652344]
[-184.96990967 215.38789368]
[-199.50605774 219.08924866]
[-207.02621460 224.22650146]
[-214.24650574 222.74494934]
[-228.82768250 226.26480103]
[-243.40885925 229.78466797]
[-257.99002075 233.30453491]
[-272.57119751 236.82438660]
[-280.59719849 250.43904114]
[-295.92013550 254.30984497]
[-309.44918823 246.14035034]
[-313.15777588 230.77734375]
[-304.84567261 217.33543396]
[-289.44433594 213.78947449]
[-276.09106445 222.24320984]
[-261.50988770 218.72335815]
[-246.92871094 215.20349121]
[-232.34754944 211.68363953]
[-217.76637268 208.16377258]
[-203.20742798 204.55308533]
[-188.67126465 200.85173035]
[-174.13510132 197.15037537]
[-166.77206421 184.25381470]
[-152.08305359 180.29302979]
[-138.60588074 188.10351562]
[-124.06972504 184.40216064]
[-122.52669525 161.92587280]
[-112.63062286 141.65744019]
[-95.81758118 126.58291626]
[-74.54428101 118.93135834]
[-51.92912292 119.84525299]
[-31.29504967 129.20997620]
[-15.68131447 145.66775513]
[-2.08669782 139.32847595]
[11.50791931 132.98919678]
[25.10253525 126.64992523]
[38.69715118 120.31065369]
[52.29177094 113.97138214]
[49.58657837 103.66468811]
[49.11997604 92.84262848]
[50.98742294 81.99372101]
[55.17733383 71.62333679]
[61.56839371 62.23019791]
[69.93196869 54.28246689]
[79.93977356 48.19466782]
[91.17648315 44.30647278]
[103.15683746 42.86446381]
[115.34661102 44.00784683]
[113.66713715 29.10216331]
[111.98767090 14.19647980]
[110.30820465 -0.70920354]
[101.07442474 -13.55630016]
[107.33807373 -27.06984901]
[105.65860748 -41.97553253]
[103.97914124 -56.88121414]
[94.41049957 -65.50430298]
[93.30562592 -77.93569183]
[100.71324158 -87.47784424]
[99.21972656 -102.40330505]
[97.72620392 -117.32876587]
[96.23268890 -132.25422668]
[94.73917389 -147.17968750]
[82.79025269 -157.17274475]
[81.48823547 -172.33056641]
[91.08872223 -183.66044617]
[89.59519958 -198.58590698]
[88.10168457 -213.51136780]
[86.60816956 -228.43682861]
[77.53526306 -241.39804077]
[83.96688843 -254.83245850]
[82.47336578 -269.75790405]
[69.23782349 -277.63995361]
[63.25131989 -291.64050293]
[66.61694336 -306.30804443]
[77.83969879 -316.06445312]
[76.34618378 -330.98989868]
[74.85266876 -345.91537476]
[63.39579010 -357.14566040]
[65.17601013 -373.08963013]
[78.82769775 -381.51644897]
[93.87844086 -375.96176147]
[98.78260803 -360.68664551]
[89.77812958 -347.40887451]
[91.27164459 -332.48342896]
[92.76516724 -317.55795288]
[105.69860077 -310.21875000]
[111.90380859 -296.50891113]
[108.81015015 -281.59976196]
[97.39883423 -271.25143433]
[98.89234924 -256.32595825]
[107.85842896 -244.43232727]
[101.53363037 -229.93034363]
[103.02714539 -215.00488281]
[104.52066803 -200.07942200]
[106.01418304 -185.15396118]
[117.66928864 -175.95101929]
[119.39654541 -160.83575439]
[109.66463470 -148.67320251]
[111.15814972 -133.74774170]
[112.65166473 -118.82228851]
[114.14518738 -103.89682770]
[115.63870239 -88.97136688]
[126.63303375 -75.27881622]
[118.88482666 -58.56068039]
[120.56429291 -43.65499878]
[122.24375916 -28.74931526]
[131.35740662 -16.96837234]
[125.21389008 -2.38867068]
[126.89335632 12.51701260]
[128.57283020 27.42269516]
[130.25228882 42.32838058]
[144.34768677 47.45867920]
[155.21540833 37.11980438]
[166.08314514 26.78093147]
[170.19963074 10.90684509]
[186.07522583 6.79616356]
[197.37847900 18.67760277]
[192.48156738 34.32855606]
[176.42202759 37.64866638]
[165.55429077 47.98754120]
[154.68655396 58.32641602]
[159.10787964 72.66001129]
[173.91131592 75.08037567]
[188.71476746 77.50074005]
[203.58256531 72.09159851]
[214.89459229 81.78115082]
[229.69802856 84.20151520]
[244.50146484 86.62187958]
[259.30490112 89.04225159]
[274.10833740 91.46261597]
[288.92657471 93.79065704]
[303.75906372 96.02629852]
[316.39157104 86.91272736]
[331.40194702 89.39127350]
[340.01248169 101.49062347]
[354.84497070 103.72625732]
[369.67742920 105.96189117]
[384.50988770 108.19752502]
[399.34234619 110.43315887]
[406.84298706 98.47103882]
[418.29870605 90.29195404]
[431.96389771 87.10173798]
[445.77157593 89.34909821]
[457.64602661 96.66279602]
[465.81497192 107.91251373]
[469.07391357 121.38342285]
[483.87734985 123.80378723]
[498.68078613 126.22415924]
[513.48425293 128.64451599]
[528.28765869 131.06489563]
[543.09112549 133.48526001]
[558.23040771 127.18179321]
[571.09289551 137.35469055]
[568.44677734 153.53895569]
[553.01416016 159.08558655]
[540.67077637 148.28869629]
[525.86730957 145.86833191]
[511.06387329 143.44796753]
[496.26043701 141.02760315]
[481.45700073 138.60722351]
[466.65353394 136.18685913]
[457.73056030 149.45785522]
[443.85980225 157.53292847]
[427.79739380 158.74868774]
[412.76086426 152.81063843]
[401.78436279 140.86235046]
[397.10671997 125.26561737]
[382.27426147 123.02998352]
[367.44177246 120.79434967]
[352.60931396 118.55871582]
[337.77685547 116.32308197]
[325.98251343 125.34689331]
[310.90844727 123.29093170]
[301.52340698 110.85875702]
[286.69094849 108.62312317]
[279.62725830 110.72833252]
[271.68798828 106.26605225]
[256.88455200 103.84568787]
[242.08110046 101.42532349]
[227.27766418 99.00495911]
[212.47422791 96.58458710]
[198.66525269 102.16685486]
[186.29440308 92.30418396]
[171.49095154 89.88381195]
[156.68751526 87.46344757]
[157.51922607 107.53851318]
[151.46052551 126.67881012]
[139.24801636 142.59336853]
[145.07453918 156.41551208]
[150.90106201 170.23765564]
[156.72758484 184.05979919]
[162.55410767 197.88194275]
[174.27813721 210.12872314]
[165.75550842 224.78480530]
[149.31288147 220.65245056]
[148.73196411 203.70846558]
[142.90544128 189.88632202]
[137.07891846 176.06417847]
[131.25239563 162.24203491]
[125.42588043 148.41989136]
[118.08399200 149.95178223]
[103.40021515 153.01556396]
[96.05832672 154.54745483]
[96.24532318 169.54627991]
[96.43231964 184.54512024]
[104.34105682 198.24775696]
[96.76301575 211.07049561]
[105.59962463 224.88522339]
[97.81482697 239.31881714]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 249]
[4 247]
[5 246]
[6 245]
[11 80]
[12 79]
[13 78]
[14 77]
[15 76]
[16 75]
[38 68]
[39 67]
[42 64]
[43 63]
[44 62]
[46 61]
[47 60]
[48 59]
[49 58]
[50 57]
[90 153]
[91 152]
[92 151]
[93 150]
[95 148]
[96 147]
[97 146]
[100 144]
[101 143]
[102 142]
[103 141]
[104 140]
[107 137]
[108 136]
[109 135]
[110 134]
[112 132]
[113 131]
[117 127]
[118 126]
[119 125]
[154 163]
[155 162]
[156 161]
[164 227]
[165 226]
[166 225]
[168 223]
[169 222]
[170 221]
[171 220]
[172 219]
[173 217]
[174 216]
[177 213]
[178 212]
[179 211]
[180 210]
[181 209]
[188 203]
[189 202]
[190 201]
[191 200]
[192 199]
[193 198]
[230 242]
[231 241]
[232 240]
[233 239]
[234 238]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
