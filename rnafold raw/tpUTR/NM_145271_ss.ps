%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 04:29:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCACCGCAGGCUGGAGUUGAGCCUGACCUUGGCACGAAGGACUGACGGAUCCCUGAGGUGGGCCACUGAGUCGGGGACUCCGGAACUGAAAUUCAUGCCCUGGGCUUUCCUCAAGGAUCCCUCAAGUUUCCAACUUGUAAAAAGAAAAGUGCCUGUAAAGAUUCGAAUAGAUUAGACUUGCCACCCAUCUCCCCAGUCUUUUGUUUAACAAAAAA\
) } def
/len { sequence length } bind def

/coor [
[34.20352554 292.59536743]
[26.61054611 305.53161621]
[26.29769325 321.34973145]
[13.18238735 328.40933228]
[20.70991707 340.19528198]
[22.41815186 354.00863647]
[18.03041840 367.14776611]
[8.45669460 377.06768799]
[-4.39444447 381.87286377]
[-17.99612999 380.67929077]
[-25.77389526 393.50527954]
[-33.55166245 406.33129883]
[-41.32942581 419.15728760]
[-49.10719299 431.98330688]
[-56.88496017 444.80929565]
[-51.68302155 459.55630493]
[-57.22566223 474.17864990]
[-70.89581299 481.77212524]
[-86.23885345 478.75131226]
[-96.01026154 466.54257202]
[-95.59628296 450.91046143]
[-85.19238281 439.23602295]
[-69.71096039 437.03152466]
[-61.93319702 424.20553589]
[-54.15542984 411.37951660]
[-46.37766266 398.55352783]
[-38.59989929 385.72750854]
[-30.82213211 372.90151978]
[-38.94309616 358.92831421]
[-38.90724564 342.67272949]
[-30.62964058 328.57348633]
[-16.28873253 320.52825928]
[0.24613392 320.81634521]
[0.01588450 305.92352295]
[13.67429256 297.93862915]
[21.26727295 285.00238037]
[27.72008324 271.46130371]
[32.98495102 257.41561890]
[38.24981689 243.36993408]
[43.51468277 229.32424927]
[48.77954865 215.27856445]
[54.04441452 201.23287964]
[59.30928040 187.18719482]
[64.57414246 173.14151001]
[69.83901215 159.09584045]
[75.10388184 145.05015564]
[80.36874390 131.00447083]
[66.73402405 115.49317169]
[63.63507843 95.07498169]
[72.05338287 76.21660614]
[62.85807419 64.36560059]
[53.66276932 52.51459503]
[44.46746063 40.66358948]
[35.27215576 28.81258202]
[26.07684898 16.96157646]
[11.50407600 10.80163670]
[9.81498528 -3.99688435]
[0.61967951 -15.84789085]
[-8.57562637 -27.69889641]
[-17.77093315 -39.54990387]
[-26.96623802 -51.40090942]
[-41.53901291 -57.56084824]
[-43.22810364 -72.35936737]
[-52.42340851 -84.21037292]
[-61.61871338 -96.06137848]
[-70.81401825 -107.91239166]
[-80.00932312 -119.76339722]
[-81.75606537 -104.86544800]
[-92.58699036 -94.48801422]
[-107.54598999 -93.37969971]
[-119.78798676 -102.04764557]
[-123.71118927 -116.52551270]
[-117.52037811 -130.18836975]
[-104.04840088 -136.78427124]
[-89.46038818 -133.29530334]
[-97.42133331 -146.00842285]
[-105.38228607 -158.72152710]
[-113.34323883 -171.43464661]
[-121.30419159 -184.14776611]
[-128.50660706 -189.75595093]
[-129.28663635 -197.10083008]
[-141.15638733 -197.62734985]
[-151.19680786 -203.75312805]
[-156.97607422 -213.85910034]
[-157.16012573 -225.37956238]
[-151.81886292 -235.45323181]
[-159.22549438 -248.49708557]
[-166.63212585 -261.54092407]
[-181.93284607 -265.49859619]
[-189.88148499 -279.15856934]
[-185.76225281 -294.41659546]
[-172.01901245 -302.22036743]
[-156.80538940 -297.94006348]
[-149.14735413 -284.11508179]
[-153.58828735 -268.94754028]
[-146.18165588 -255.90371704]
[-138.77500916 -242.85987854]
[-120.86289215 -239.06143188]
[-111.25590515 -223.09945679]
[-116.46063232 -204.87860107]
[-108.59107208 -192.10871887]
[-100.63012695 -179.39559937]
[-92.66917419 -166.68247986]
[-84.70822144 -153.96937561]
[-76.74726868 -141.25625610]
[-68.15831757 -128.95869446]
[-58.96301270 -117.10769653]
[-49.76770782 -105.25669098]
[-40.57240295 -93.40568542]
[-31.37709618 -81.55467224]
[-17.46203232 -76.24240112]
[-15.11523247 -60.59621429]
[-5.91992617 -48.74520874]
[3.27537966 -36.89420319]
[12.47068596 -25.04319572]
[21.66599083 -13.19219017]
[35.58105469 -7.87991476]
[37.92785645 7.76627016]
[47.12316132 19.61727715]
[56.31846619 31.46828270]
[65.51377106 43.31929016]
[74.70908356 55.17029572]
[83.90438843 67.02130127]
[95.20468903 60.44054413]
[109.08141327 57.96873474]
[123.97457886 60.56214523]
[133.33894348 48.84426498]
[142.70329285 37.12638092]
[152.06765747 25.40849686]
[161.43202209 13.69061375]
[170.79637146 1.97273076]
[175.96124268 -14.17534924]
[192.90802002 -13.68255997]
[197.12583923 2.73835564]
[182.51425171 11.33708954]
[173.14990234 23.05497360]
[163.78553772 34.77285767]
[154.42118835 46.49073792]
[145.05682373 58.20862198]
[135.69245911 69.92650604]
[138.42536926 76.91086578]
[150.02149963 67.39614868]
[162.65382385 75.48467255]
[158.86460876 89.99817657]
[143.89117432 90.87957764]
[146.62406921 97.86392975]
[161.45423889 100.11476135]
[176.28440857 102.36559296]
[187.19981384 91.49546051]
[202.24703979 89.16423035]
[215.62345886 96.05880737]
[222.29527283 109.34883881]
[237.12542725 111.59967041]
[251.95559692 113.85050201]
[266.80151367 115.99490356]
[279.31152344 106.71388245]
[294.35360718 108.99227142]
[303.12454224 120.97585297]
[317.98547363 123.01371765]
[324.89294434 112.10974121]
[335.37203979 104.65351868]
[347.84680176 101.72303772]
[360.45748901 103.71891785]
[371.33770752 110.31002045]
[378.89080811 120.48778534]
[382.02398682 132.72044373]
[396.82031250 135.18377686]
[410.65682983 127.06403351]
[425.57974243 132.95355225]
[430.14147949 148.33439636]
[420.84262085 161.40769958]
[404.81652832 162.14474487]
[394.35699463 149.98013306]
[379.56063843 147.51679993]
[369.10528564 161.20225525]
[353.07492065 167.73756409]
[335.85501099 165.23731995]
[322.20608521 154.30149841]
[315.94760132 137.87463379]
[301.08666992 135.83677673]
[289.41357422 145.01687622]
[274.31344604 143.16189575]
[264.76367188 130.85583496]
[257.71401978 133.05999756]
[249.70477295 128.68066406]
[234.87460327 126.42984009]
[220.04443359 124.17900848]
[209.72976685 134.89093018]
[194.91000366 137.50607300]
[181.23211670 130.81512451]
[174.03356934 117.19576263]
[159.20339966 114.94493103]
[144.37324524 112.69409943]
[135.12638855 126.14630127]
[122.34315491 134.88296509]
[108.08300781 138.21553040]
[94.41442871 136.26933289]
[89.14955902 150.31501770]
[83.88469696 164.36070251]
[78.61982727 178.40638733]
[73.35496521 192.45205688]
[68.09009552 206.49774170]
[62.82522964 220.54342651]
[57.56036377 234.58911133]
[52.29549789 248.63479614]
[47.03063202 262.68048096]
[41.76576614 276.72616577]
[53.76185608 267.72094727]
[68.46077728 264.73068237]
[83.02172852 268.33331299]
[94.63054657 277.83255005]
[101.04363251 291.39248657]
[101.02156067 306.39248657]
[94.56858826 319.93350220]
[82.93186951 329.39852905]
[68.36038208 332.95828247]
[53.67032242 329.92477417]
[41.70078659 320.88427734]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 36]
[2 35]
[4 33]
[10 28]
[11 27]
[12 26]
[13 25]
[14 24]
[15 23]
[37 207]
[38 206]
[39 205]
[40 204]
[41 203]
[42 202]
[43 201]
[44 200]
[45 199]
[46 198]
[47 197]
[50 123]
[51 122]
[52 121]
[53 120]
[54 119]
[55 118]
[57 116]
[58 115]
[59 114]
[60 113]
[61 112]
[63 110]
[64 109]
[65 108]
[66 107]
[67 106]
[75 105]
[76 104]
[77 103]
[78 102]
[79 101]
[81 100]
[86 97]
[87 96]
[88 95]
[126 140]
[127 139]
[128 138]
[129 137]
[130 136]
[131 135]
[146 193]
[147 192]
[148 191]
[152 187]
[153 186]
[154 185]
[155 183]
[158 180]
[159 179]
[166 174]
[167 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
