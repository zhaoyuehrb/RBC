%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 15:08:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCAUGGUUACAUUCAGGAUACUUGAGCACUUUAUAUACUACCGUAGCACUGUAGCUAUUUUUUAUGUGAUAAUCUUGUUUGAUAAAAAAGUAAACCUGUUUUGCAAUUGAA\
) } def
/len { sequence length } bind def

/coor [
[85.78289795 325.96118164]
[91.82923889 310.12203979]
[91.82923889 295.12203979]
[91.82923889 280.12203979]
[79.45880127 268.82318115]
[79.01066589 251.73931885]
[91.24307251 239.32884216]
[90.82610321 224.33462524]
[78.99667358 219.47926331]
[69.88333130 210.44250488]
[64.89183044 198.56768799]
[64.81137848 185.63964844]
[69.69010162 173.61639404]
[78.82228851 164.33270264]
[90.85025787 159.21998596]
[91.26723480 144.22578430]
[91.68420410 129.23156738]
[92.10117340 114.23737335]
[83.71986389 99.77367401]
[92.50000000 85.54856110]
[92.50000000 70.54856110]
[92.50000000 55.54855728]
[92.50000000 40.54855728]
[92.50000000 25.54855728]
[91.04270935 10.61951542]
[88.14192200 -4.09732628]
[85.24114227 -18.81416893]
[82.34035492 -33.53100967]
[79.43956757 -48.24785233]
[61.26501465 -58.54022980]
[56.35985565 -78.54843140]
[67.40257263 -95.59989166]
[62.88646317 -109.90390015]
[58.37035370 -124.20790863]
[53.85424042 -138.51191711]
[49.33813095 -152.81593323]
[44.82202148 -167.11994934]
[40.30590820 -181.42395020]
[26.43656349 -183.75839233]
[14.99843884 -191.82765198]
[8.21230793 -203.99465942]
[7.36517859 -217.83384705]
[12.56657314 -230.61462402]
[22.73825836 -239.84014893]
[18.62151909 -254.26417542]
[14.50477791 -268.68820190]
[10.38803673 -283.11221313]
[6.27129650 -297.53625488]
[-7.66201115 -304.99536133]
[-12.15992260 -320.14608765]
[-4.55390644 -333.99975586]
[10.64352226 -338.33721924]
[24.41599846 -330.58517456]
[28.59255791 -315.34274292]
[20.69532013 -301.65298462]
[24.81205940 -287.22897339]
[28.92880058 -272.80493164]
[33.04553986 -258.38092041]
[37.16228104 -243.95689392]
[52.86934662 -240.44985962]
[64.76049042 -229.46682739]
[69.55670929 -213.90872192]
[65.87149048 -197.95478821]
[54.60992050 -185.94006348]
[59.12602997 -171.63606262]
[63.64214325 -157.33204651]
[68.15825653 -143.02803040]
[72.67436218 -128.72401428]
[77.19047546 -114.42001343]
[81.70658112 -100.11599731]
[91.23861694 -98.49810791]
[99.53493500 -93.42033386]
[105.38237000 -85.57416534]
[107.90695953 -76.05942535]
[106.70438385 -66.23020172]
[101.90398407 -57.50215912]
[94.15640259 -51.14863968]
[97.05718994 -36.43179703]
[99.95797729 -21.71495438]
[102.85876465 -6.99811363]
[105.75955200 7.71872854]
[114.89967346 -4.17489290]
[129.49443054 -7.63796377]
[143.00361633 -1.11860847]
[149.37345886 12.46170998]
[145.74951172 27.01736069]
[133.75572205 36.02564240]
[118.76678467 35.44975281]
[107.50000000 25.54855728]
[107.50000000 40.54855728]
[107.50000000 55.54855728]
[107.50000000 70.54856110]
[107.50000000 85.54856110]
[115.26785278 94.34429932]
[115.10472870 106.07792664]
[107.09537506 114.65434265]
[106.67840576 129.64854431]
[106.26143646 144.64274597]
[105.84445953 159.63694763]
[120.94601440 168.38479614]
[129.56829834 183.45703125]
[129.45582581 200.73281860]
[120.72744751 215.53977966]
[105.82030487 223.91766357]
[106.23727417 238.91186523]
[117.08040619 247.04318237]
[121.15737152 259.76364136]
[117.17913055 272.31045532]
[106.82923889 280.12203979]
[106.82923889 295.12203979]
[106.82923889 310.12203979]
[112.87557983 325.96118164]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 111]
[3 110]
[4 109]
[7 105]
[8 104]
[15 99]
[16 98]
[17 97]
[18 96]
[20 93]
[21 92]
[22 91]
[23 90]
[24 89]
[25 81]
[26 80]
[27 79]
[28 78]
[29 77]
[32 70]
[33 69]
[34 68]
[35 67]
[36 66]
[37 65]
[38 64]
[44 59]
[45 58]
[46 57]
[47 56]
[48 55]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
