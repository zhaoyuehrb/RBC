%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 10:54:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCAAGGCAACCUGUGGAAAGAAGAAUUCAGAUGUCAGUGGGAGCCUCCAGGUGGGAGGAGAGCAUGCCUAAACCCUGGUGGCCAUUGUUCUGUACUAAGGAACAACAUUCCCUUUGAAAGGACAUUAUUUGCCUGUUGUAUUUAACUUCACAGUGCCUUGCAAAGAGUUGUUUAACUUGCAUGGUGCCACCCAAUAAAUAUCUGUGCAAUUGAA\
) } def
/len { sequence length } bind def

/coor [
[242.70883179 323.29727173]
[229.58746338 307.71725464]
[226.18817139 287.55596924]
[233.53041077 268.39193726]
[223.43441772 257.29818726]
[213.33842468 246.20445251]
[203.24243164 235.11071777]
[193.14643860 224.01698303]
[183.05046082 212.92324829]
[172.95446777 201.82951355]
[168.31491089 200.71391296]
[164.32527161 196.67463684]
[162.73249817 190.26538086]
[152.96191406 178.88400269]
[143.19131470 167.50262451]
[133.42073059 156.12126160]
[123.65014648 144.73988342]
[113.87956238 133.35852051]
[104.10897064 121.97714233]
[109.63932800 135.92042542]
[110.21130371 150.90951538]
[105.75962830 165.23371887]
[96.79235840 177.25819397]
[84.33293915 185.61061096]
[69.80335236 189.33769226]
[54.86186600 188.01408386]
[41.21374512 181.79083252]
[30.41665077 171.37820435]
[23.70285225 157.96459961]
[21.83859444 143.08090210]
[25.03664398 128.42578125]
[32.93201065 115.67183685]
[44.62359619 106.27466583]
[58.77703857 101.30676270]
[73.77701569 101.33512878]
[87.91377258 106.35774994]
[76.18630219 97.00540161]
[64.45883179 87.65305328]
[52.73135757 78.30070496]
[37.11782074 75.74570465]
[31.99136543 61.76111603]
[20.26389313 52.40876770]
[8.53642178 43.05641937]
[-3.19105029 33.70407486]
[-16.46122742 26.71104813]
[-30.80544662 22.32431984]
[-45.14966583 17.93758965]
[-60.60927200 21.30078316]
[-70.51736450 10.17967510]
[-84.86157990 5.79294634]
[-99.20580292 1.40621686]
[-113.55001831 -2.98051238]
[-127.89423370 -7.36724186]
[-137.01127625 -6.88410807]
[-142.41352844 -11.92269802]
[-157.83082581 -3.65219760]
[-174.13777161 -8.98794270]
[-181.39241028 -24.16282082]
[-195.73663330 -28.54955101]
[-210.08085632 -32.93627930]
[-222.39259338 -23.49166489]
[-237.90524292 -23.12112236]
[-250.65386963 -31.96713638]
[-255.73637390 -46.62823486]
[-251.19844055 -61.46692276]
[-238.78495789 -70.77742004]
[-223.26921082 -70.97966003]
[-210.61729431 -61.99586868]
[-205.69412231 -47.28049850]
[-191.34989929 -42.89376831]
[-177.00569153 -38.50703812]
[-166.58883667 -46.08670807]
[-153.51316833 -46.28706741]
[-142.54737854 -38.81103516]
[-137.81959534 -26.20190620]
[-123.50750732 -21.71146011]
[-109.16329193 -17.32473183]
[-94.81906891 -12.93800163]
[-80.47485352 -8.55127239]
[-66.13063049 -4.16454315]
[-51.69701767 -7.84150505]
[-40.76293564 3.59337139]
[-26.41871643 7.98010063]
[-12.07449818 12.36682987]
[-6.86803293 6.96843004]
[3.54489756 -3.82836914]
[8.75136280 -9.22676849]
[3.84845281 -23.40285683]
[-1.05445707 -37.57894516]
[-5.95736694 -51.75503159]
[-10.86027718 -65.93112183]
[-15.76318741 -80.10720825]
[-20.66609764 -94.28329468]
[-35.33631897 -99.69795990]
[-43.04895020 -113.30124664]
[-40.16232681 -128.67008972]
[-28.03941917 -138.54780579]
[-12.40429688 -138.27041626]
[-0.63938475 -127.96892548]
[1.70028472 -112.50736237]
[-6.49000883 -99.18621063]
[-1.58709896 -85.01011658]
[3.31581092 -70.83403015]
[8.21872139 -56.65794373]
[13.12163067 -42.48185349]
[18.02454185 -28.30576706]
[22.92745018 -14.12967873]
[23.42955399 -1.29619765]
[20.08409882 9.60208321]
[13.91128063 17.56381226]
[6.16129684 21.97660065]
[17.88876915 31.32894707]
[29.61624146 40.68129349]
[41.34371185 50.03364182]
[56.11842346 51.91970062]
[62.08370590 66.57323456]
[73.81118011 75.92558289]
[85.53865051 85.27792358]
[97.26612091 94.63027191]
[91.08767700 80.59571075]
[86.04791260 66.07643127]
[94.25691986 53.52206039]
[102.46592712 40.96768951]
[104.54168701 32.07696533]
[110.88574982 28.29218292]
[119.27564240 15.85796928]
[117.64082336 -0.10157118]
[129.19958496 -11.22697067]
[145.08503723 -8.98377514]
[153.11122131 4.90722799]
[147.12113953 19.79004860]
[131.70985413 24.24786186]
[123.31996155 36.68207550]
[115.02029419 49.17669678]
[106.81129456 61.73106766]
[98.60228729 74.28543854]
[109.24720764 84.85358429]
[121.74182892 76.55391693]
[134.23645020 68.25424957]
[146.73106384 59.95457840]
[153.53552246 45.03373718]
[169.88320923 43.73569870]
[178.95704651 57.39577484]
[171.42263794 71.96164703]
[155.03073120 72.44919586]
[142.53611755 80.74886322]
[130.04148865 89.04853058]
[117.54687500 97.34819794]
[115.49034119 112.20655823]
[125.26093292 123.58792877]
[135.03152466 134.96929932]
[144.80210876 146.35067749]
[154.57269287 157.73204041]
[164.34327698 169.11341858]
[174.11386108 180.49478149]
[184.04820251 191.73352051]
[194.14419556 202.82725525]
[204.24017334 213.92098999]
[214.33616638 225.01472473]
[224.43215942 236.10845947]
[234.52815247 247.20219421]
[244.62414551 258.29592896]
[253.83166504 254.29937744]
[263.73739624 252.78720093]
[273.68414307 253.85092163]
[283.01428223 257.41146851]
[291.11318970 263.22503662]
[297.44970703 270.89965820]
[301.61102295 279.92163086]
[303.32946777 289.69006348]
[302.49981689 299.55667114]
[299.18566895 308.86892700]
[293.61462402 317.01318359]
[302.71011353 328.94094849]
[311.80557251 340.86874390]
[320.90106201 352.79653931]
[329.99655151 364.72433472]
[337.68502808 369.64788818]
[339.13589478 376.89126587]
[348.05773926 388.94949341]
[356.97961426 401.00769043]
[365.90145874 413.06588745]
[374.82333374 425.12411499]
[383.74517822 437.18231201]
[392.66702271 449.24053955]
[401.58889771 461.29873657]
[416.01962280 456.71258545]
[431.15750122 457.06304932]
[445.36053467 462.31213379]
[457.08804321 471.89044189]
[465.06793213 484.75903320]
[468.43460083 499.52197266]
[466.82284546 514.57788086]
[460.40750122 528.29364014]
[449.88449097 539.18145752]
[436.39523315 546.06030273]
[421.40295410 548.18402100]
[406.53387451 545.32220459]
[393.40093994 537.78533936]
[383.42868042 526.39093018]
[377.69879150 512.37493896]
[376.83285522 497.25781250]
[380.92477417 482.67922974]
[389.53067017 470.22061157]
[380.60882568 458.16238403]
[371.68695068 446.10418701]
[362.76510620 434.04595947]
[353.84326172 421.98776245]
[344.92138672 409.92953491]
[335.99954224 397.87133789]
[327.07766724 385.81311035]
[318.06878662 373.81982422]
[308.97329712 361.89202881]
[299.87780762 349.96423340]
[290.78231812 338.03643799]
[281.68682861 326.10867310]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 162]
[5 161]
[6 160]
[7 159]
[8 158]
[9 157]
[10 156]
[13 155]
[14 154]
[15 153]
[16 152]
[17 151]
[18 150]
[19 149]
[36 119]
[37 118]
[38 117]
[39 116]
[41 114]
[42 113]
[43 112]
[44 111]
[45 84]
[46 83]
[47 82]
[49 80]
[50 79]
[51 78]
[52 77]
[53 76]
[55 75]
[58 71]
[59 70]
[60 69]
[87 107]
[88 106]
[89 105]
[90 104]
[91 103]
[92 102]
[93 101]
[121 136]
[122 135]
[123 134]
[125 133]
[126 132]
[137 148]
[138 147]
[139 146]
[140 145]
[173 216]
[174 215]
[175 214]
[176 213]
[177 212]
[179 211]
[180 210]
[181 209]
[182 208]
[183 207]
[184 206]
[185 205]
[186 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
