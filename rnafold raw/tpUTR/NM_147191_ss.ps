%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 10:37:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAGAAAAAGUAGGAAAUGGAGGGUCAUAGGACUUCGCUAAAAUUCUGAUACUGUUUACAAAGAAAACCGGAUUUUCAGUAGCUGAAGAAAAUAUGGCACUGUAAGUUAAAACCCAAUGGGAAAAGCCUUAGUUGAACUUUUAAAAUACUUGAUUUAAAAACAAUUGCUCAGGCAAAACAUAAUUCAUAAACUAAAAGGUUUAA\
) } def
/len { sequence length } bind def

/coor [
[90.99337006 213.82931519]
[79.50956726 212.33154297]
[68.23654938 209.67823792]
[57.29026794 205.89669800]
[46.78333664 201.02583313]
[36.82382965 195.11573792]
[27.51419830 188.22721863]
[18.95021248 180.43112183]
[11.21996498 171.80764771]
[4.40297413 162.44551086]
[-1.43063354 152.44100952]
[-6.22084999 141.89706421]
[-9.91839981 130.92213440]
[-12.48524666 119.62911224]
[-13.89498615 108.13417053]
[-14.13311768 96.55555725]
[-13.19718933 85.01237488]
[-11.09683132 73.62336731]
[-25.43203545 69.20726776]
[-40.89849854 72.53879547]
[-50.78379059 61.39741898]
[-65.11899567 56.98131943]
[-80.58545685 60.31284714]
[-90.47074890 49.17147064]
[-104.80595398 44.75537109]
[-119.14115906 40.33927536]
[-133.47636414 35.92317581]
[-147.81156921 31.50708008]
[-162.14677429 27.09098244]
[-175.53507996 37.42405319]
[-192.27804565 37.73962021]
[-205.77563477 28.11134338]
[-210.82510376 12.49376106]
[-225.22628784 8.29785824]
[-239.62748718 4.10195541]
[-254.02868652 -0.09394720]
[-268.46160889 -4.17937994]
[-282.92541504 -8.15410233]
[-297.38922119 -12.12882519]
[-311.85302734 -16.10354805]
[-306.84417725 -1.96453583]
[-314.64163208 10.84951973]
[-329.50100708 12.89859676]
[-340.47552490 2.67315602]
[-339.48034668 -12.29379463]
[-327.24948120 -20.97605705]
[-341.36657715 -26.04631042]
[-355.48370361 -31.11656380]
[-369.60079956 -36.18681717]
[-387.28775024 -26.66451645]
[-405.98950195 -33.11291885]
[-413.80392456 -50.95370483]
[-429.27038574 -47.62218094]
[-439.15567017 -58.76355743]
[-453.49087524 -63.17965317]
[-467.82608032 -67.59574890]
[-482.16128540 -72.01184845]
[-495.19506836 -63.37156296]
[-510.72747803 -65.18202972]
[-521.42462158 -76.58840179]
[-522.23559570 -92.20494080]
[-512.77752686 -104.65799713]
[-497.51617432 -108.06761169]
[-483.65753174 -100.82387543]
[-477.74517822 -86.34705353]
[-463.40997314 -81.93095398]
[-449.07476807 -77.51486206]
[-434.73956299 -73.09876251]
[-420.29846191 -76.74615479]
[-409.38781738 -65.28890991]
[-401.93606567 -72.36069489]
[-392.14395142 -75.72515869]
[-381.75857544 -74.71109009]
[-372.66247559 -69.43491364]
[-366.53244019 -60.79169083]
[-364.53054810 -50.30391693]
[-350.41345215 -45.23366547]
[-336.29632568 -40.16341019]
[-322.17922974 -35.09315872]
[-307.87829590 -30.56735039]
[-293.41448975 -26.59262657]
[-278.95068359 -22.61790466]
[-264.48687744 -18.64318275]
[-257.20068359 -19.90261841]
[-249.83277893 -14.49514198]
[-235.43157959 -10.29923916]
[-221.03039551 -6.10333633]
[-206.62919617 -1.90743375]
[-196.87556458 -11.02768230]
[-183.78376770 -14.16144466]
[-170.74971008 -10.38585091]
[-161.20881653 -0.58467185]
[-157.73068237 12.75577831]
[-143.39547729 17.17187500]
[-129.06027222 21.58797264]
[-114.72505951 26.00407028]
[-100.38986206 30.42016792]
[-86.05465698 34.83626556]
[-71.61354065 31.18887138]
[-60.70289993 42.64611816]
[-46.36769485 47.06221390]
[-31.92658043 43.41482162]
[-21.01593781 54.87206650]
[-6.68073368 59.28816223]
[2.10164571 41.22802734]
[13.91221809 24.98582458]
[28.38565826 11.06396294]
[45.07427216 -0.10692920]
[63.46185303 -8.18131256]
[82.97962952 -12.90943146]
[103.02388000 -14.14503384]
[122.97459412 -11.84990215]
[142.21466064 -6.09502745]
[148.66368103 -19.63792801]
[155.11270142 -33.18082809]
[156.46350098 -50.08087540]
[173.07702637 -53.46127319]
[180.92439270 -38.43279648]
[168.65560913 -26.73180771]
[162.20658875 -13.18890667]
[155.75756836 0.35399291]
[172.34315491 11.65577698]
[186.69371033 25.68692780]
[198.36590576 42.01395416]
[206.99911499 60.13244247]
[212.32662964 79.48262787]
[227.22764587 77.76237488]
[242.12867737 76.04212189]
[257.02972412 74.32186890]
[271.88726807 72.25957489]
[286.69348145 69.85630798]
[301.49972534 67.45304871]
[316.30593872 65.04978943]
[331.11218262 62.64653015]
[345.91839600 60.24327087]
[351.76098633 51.06157684]
[361.49298096 46.70328140]
[371.79989624 48.38801956]
[379.31463623 55.32062149]
[394.18753052 53.37222672]
[409.06045532 51.42382812]
[423.93338013 49.47543335]
[438.80630493 47.52703476]
[453.67922974 45.57863998]
[468.55215454 43.63024521]
[475.84637451 29.93448448]
[489.81240845 23.17210770]
[505.07998657 25.94338799]
[515.77844238 37.18270874]
[517.79400635 52.56832504]
[510.35165405 66.18415070]
[496.31307983 72.79462433]
[481.07644653 69.85787964]
[470.50054932 58.50316238]
[455.62762451 60.45156097]
[440.75469971 62.39995575]
[425.88177490 64.34835052]
[411.00885010 66.29675293]
[396.13592529 68.24514771]
[381.26303101 70.19354248]
[366.82196045 83.04799652]
[348.32165527 75.04949951]
[333.51544189 77.45275879]
[318.70919800 79.85601807]
[303.90298462 82.25927734]
[289.09677124 84.66253662]
[274.29052734 87.06579590]
[271.94201660 89.70178986]
[268.19805908 91.32897949]
[263.54782104 91.30303192]
[258.74996948 89.22290039]
[243.84893799 90.94315338]
[228.94790649 92.66340637]
[214.04687500 94.38365936]
[214.08905029 104.68202209]
[213.20318604 114.94229889]
[211.39646912 125.08103180]
[208.68362427 135.01574707]
[205.08670044 144.66561890]
[200.63496399 153.95217896]
[195.36460876 162.79986572]
[189.31854248 171.13671875]
[182.54591370 178.89489746]
[175.10182190 186.01133728]
[167.04681396 192.42811584]
[158.44644165 198.09304810]
[149.37062073 202.96005249]
[139.89321899 206.98954773]
[144.19934082 221.35816956]
[148.50546265 235.72679138]
[152.81159973 250.09541321]
[157.11772156 264.46405029]
[161.42384338 278.83264160]
[173.72006226 289.68325806]
[170.20649719 305.70156860]
[154.49761963 310.40936279]
[142.75337219 298.96365356]
[147.05522156 283.13879395]
[142.74909973 268.77017212]
[138.44297791 254.40153503]
[134.13685608 240.03291321]
[129.83071899 225.66429138]
[125.52459717 211.29566956]
[114.11982727 213.30870056]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 104]
[19 103]
[21 101]
[22 100]
[24 98]
[25 97]
[26 96]
[27 95]
[28 94]
[29 93]
[33 88]
[34 87]
[35 86]
[36 85]
[37 83]
[38 82]
[39 81]
[40 80]
[46 79]
[47 78]
[48 77]
[49 76]
[52 70]
[54 68]
[55 67]
[56 66]
[57 65]
[113 121]
[114 120]
[115 119]
[126 174]
[127 173]
[128 172]
[129 171]
[130 167]
[131 166]
[132 165]
[133 164]
[134 163]
[135 162]
[139 160]
[140 159]
[141 158]
[142 157]
[143 156]
[144 155]
[145 154]
[188 203]
[189 202]
[190 201]
[191 200]
[192 199]
[193 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
