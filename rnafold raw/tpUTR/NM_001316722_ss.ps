%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 22:38:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGCUGGAGGAUGAGAGCCCACCUGGAUCAGUUGUCUCAGCUGAUUUCAGACACGUGAGAGAGAGCUCAGCGAGACUCAGCUUGUAGCUGACUACAGAUGUGUGAGGGAACCUGGCUGAGACCAAAACAACUGUCCAGCUGAGCCCAGGCUAAACUGCCAACAUGCA\
) } def
/len { sequence length } bind def

/coor [
[69.91584778 118.56491089]
[66.59745789 133.19325256]
[63.27906418 147.82159424]
[70.58162689 162.10627747]
[63.83548355 176.66200256]
[48.21569824 180.32286072]
[35.70443726 170.28054810]
[35.89926529 154.23867798]
[48.65072632 144.50318909]
[51.96912003 129.87486267]
[55.28751373 115.24652100]
[72.04077148 95.38220978]
[92.52288818 94.24482727]
[90.30038452 79.41039276]
[85.91796112 71.34873962]
[88.17710114 64.27980804]
[83.94528961 56.13809204]
[86.33544159 49.11237335]
[84.66587067 34.20557785]
[75.44062805 21.35235214]
[81.71324158 7.84296608]
[80.04367065 -7.06382895]
[70.81842804 -19.91705322]
[77.09104156 -33.42644119]
[75.42147064 -48.33323669]
[73.75189972 -63.24002838]
[72.08232880 -78.14682770]
[70.41275787 -93.05361938]
[66.33301544 -101.27259064]
[68.85335541 -108.25267029]
[67.46115875 -123.18791962]
[66.06896973 -138.12316895]
[64.67678070 -153.05842590]
[63.28458786 -167.99368286]
[61.06208420 -182.82812500]
[58.01617813 -197.51560974]
[54.97027588 -212.20310974]
[51.92436981 -226.89059448]
[48.87846375 -241.57809448]
[45.83256149 -256.26559448]
[42.78665543 -270.95306396]
[39.74074936 -285.64056396]
[36.69484329 -300.32806396]
[33.64894104 -315.01556396]
[19.55877304 -329.39477539]
[26.31478500 -347.48718262]
[22.72504997 -362.05130005]
[19.13531494 -376.61544800]
[15.54558086 -391.17956543]
[2.30327249 -399.38195801]
[-1.12975764 -414.20318604]
[6.77156496 -426.77716064]
[3.18183017 -441.34127808]
[-0.40790474 -455.90539551]
[-3.99763966 -470.46951294]
[-7.58737469 -485.03366089]
[-11.17710972 -499.59777832]
[-24.41941833 -507.80017090]
[-27.85244751 -522.62139893]
[-19.95112610 -535.19537354]
[-23.67607117 -549.72552490]
[-27.53590775 -564.22039795]
[-40.92839432 -572.17517090]
[-44.63633347 -586.93005371]
[-36.97010422 -599.64874268]
[-40.82994080 -614.14361572]
[-44.68977737 -628.63848877]
[-48.54961395 -643.13336182]
[-52.98277283 -648.12615967]
[-54.03895569 -653.76202393]
[-52.27280045 -658.23895264]
[-55.59119415 -672.86724854]
[-58.90958786 -687.49560547]
[-62.22798157 -702.12396240]
[-65.54637146 -716.75231934]
[-79.04901886 -724.96533203]
[-82.70809937 -740.34020996]
[-74.35274506 -753.75524902]
[-58.94004822 -757.25158691]
[-45.61408234 -748.75488281]
[-42.28090668 -733.30609131]
[-50.91803741 -720.07067871]
[-47.59964371 -705.44232178]
[-44.28125000 -690.81402588]
[-40.96285629 -676.18566895]
[-37.64446259 -661.55731201]
[-34.05472946 -646.99322510]
[-30.19489288 -632.49835205]
[-26.33505630 -618.00341797]
[-22.47521973 -603.50854492]
[-9.49904823 -596.28674316]
[-5.37814093 -581.64184570]
[-13.04102421 -568.08020020]
[-9.18118763 -553.58532715]
[-4.40202522 -547.90789795]
[-5.38699818 -538.78509521]
[7.45269060 -531.32330322]
[11.30066395 -516.60437012]
[3.38701773 -503.18753052]
[6.97675276 -488.62338257]
[10.56648731 -474.05926514]
[14.15622234 -459.49514771]
[17.74595833 -444.93099976]
[21.33569336 -430.36688232]
[34.17538071 -422.90512085]
[38.02335358 -408.18615723]
[30.10970879 -394.76928711]
[33.69944382 -380.20516968]
[37.28917694 -365.64105225]
[40.87891388 -351.07690430]
[50.10491562 -346.57080078]
[55.42025757 -337.52981567]
[54.84817123 -326.83734131]
[48.33643341 -318.06146240]
[51.38233948 -303.37396240]
[54.42824173 -288.68646240]
[57.47414780 -273.99899292]
[60.52005386 -259.31149292]
[63.56595993 -244.62399292]
[66.61186218 -229.93650818]
[69.65776825 -215.24900818]
[72.70367432 -200.56152344]
[75.74958038 -185.87402344]
[85.07720184 -197.62117004]
[99.95871735 -199.50277710]
[111.91664886 -190.44696045]
[114.13897705 -175.61248779]
[105.35971832 -163.45007324]
[90.58010864 -160.88818359]
[78.21984100 -169.38587952]
[79.61203003 -154.45062256]
[81.00422668 -139.51536560]
[82.39641571 -124.58011627]
[83.78860474 -109.64485931]
[85.31955719 -94.72319031]
[86.98912811 -79.81639862]
[88.65869904 -64.90959930]
[90.32826996 -50.00280762]
[91.99784088 -35.09601212]
[101.10366821 -23.30902100]
[94.95046997 -8.73339939]
[96.62004089 6.17339516]
[105.72586823 17.96038628]
[99.57266998 32.53600693]
[101.24224091 47.44280243]
[103.05029297 62.33343506]
[105.13481903 77.18788910]
[107.35732269 92.02232361]
[112.41477203 106.14401245]
[120.11509705 119.01665497]
[127.81542206 131.88929749]
[143.20190430 135.49923706]
[151.45806885 148.97557068]
[147.68565369 164.32302856]
[134.12278748 172.43623352]
[118.81607819 168.50178528]
[110.84671021 154.85389709]
[114.94277954 139.58963013]
[107.24245453 126.71698761]
[99.54212952 113.84434509]
[92.13555908 115.02448273]
[94.49584198 129.83761597]
[96.85613251 144.65075684]
[103.67838287 158.00953674]
[93.08161163 168.62596130]
[79.71022797 161.82846069]
[82.04299164 147.01104736]
[79.68270874 132.19790649]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 11]
[2 10]
[3 9]
[13 148]
[14 147]
[16 146]
[18 145]
[19 144]
[21 142]
[22 141]
[24 139]
[25 138]
[26 137]
[27 136]
[28 135]
[30 134]
[31 133]
[32 132]
[33 131]
[34 130]
[35 123]
[36 122]
[37 121]
[38 120]
[39 119]
[40 118]
[41 117]
[42 116]
[43 115]
[44 114]
[46 110]
[47 109]
[48 108]
[49 107]
[52 104]
[53 103]
[54 102]
[55 101]
[56 100]
[57 99]
[60 96]
[61 94]
[62 93]
[65 90]
[66 89]
[67 88]
[68 87]
[71 86]
[72 85]
[73 84]
[74 83]
[75 82]
[149 160]
[150 159]
[151 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
