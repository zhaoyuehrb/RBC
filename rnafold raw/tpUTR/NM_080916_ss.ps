%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 15:27:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAAUACCAUGAAGUUCAGGCUGUGAUCUGGGCUCCCUGACUUUCUGAAGCUAGAAAAAUGUUGUGUCUCCCAACCACCUUUCCAUCCCCAGCCCCUCUCAUCCCUGGAGCACUCUGCCGCUCAAGAGCUGGUUUGUUAAUUAUUGUUAGACUUUGCCAUUGUUUUCUUUUGUACCUGAAGCAUUUUGAAAAUAAAGUUUACUUAAGUUAUGCUUGUUUUUCUAA\
) } def
/len { sequence length } bind def

/coor [
[11.43364525 321.26586914]
[8.18823624 331.27313232]
[2.30826306 339.97155762]
[-5.73597336 346.68618774]
[-15.30679989 350.89993286]
[-25.64971542 352.29327393]
[-35.95286560 350.76867676]
[-45.41077042 346.45703125]
[-55.79392242 357.28247070]
[-59.76256180 372.59783936]
[-74.15648651 376.42721558]
[-84.53963470 387.25265503]
[-94.92279053 398.07809448]
[-105.30593872 408.90353394]
[-115.68908691 419.72897339]
[-119.36541748 428.07888794]
[-126.29260254 430.63146973]
[-136.82522583 441.31152344]
[-147.35786438 451.99160767]
[-157.89048767 462.67166138]
[-157.95091248 478.24838257]
[-168.78463745 488.92944336]
[-183.63427734 488.77584839]
[-194.16691589 499.45590210]
[-192.51573181 515.00604248]
[-201.28915405 527.95062256]
[-216.34463501 532.17749023]
[-230.57342529 525.69097900]
[-237.25714111 511.55368042]
[-233.23992920 496.44091797]
[-220.41859436 487.48840332]
[-204.84696960 488.92327881]
[-194.31434631 478.24322510]
[-194.67436218 463.39712524]
[-184.14492798 452.41598511]
[-168.57054138 452.13903809]
[-158.03791809 441.45898438]
[-147.50529480 430.77890015]
[-136.97267151 420.09884644]
[-126.51453400 409.34582520]
[-116.13137817 398.52038574]
[-105.74822998 387.69494629]
[-95.36508179 376.86950684]
[-84.98192596 366.04406738]
[-81.75595856 351.50299072]
[-66.61936188 346.89932251]
[-56.23621368 336.07388306]
[-62.83435059 317.60729980]
[-59.10282516 298.27505493]
[-46.00094223 283.47216797]
[-27.11437988 277.37142944]
[-7.67414379 281.74722290]
[1.93212891 270.22683716]
[11.53840160 258.70645142]
[21.14467430 247.18605042]
[30.75094604 235.66564941]
[40.35721970 224.14526367]
[49.96349335 212.62486267]
[59.56976318 201.10446167]
[69.17604065 189.58407593]
[65.05929565 175.16004944]
[50.81944275 170.44554138]
[36.57958984 165.73103333]
[22.33973503 161.01652527]
[9.12835598 169.38273621]
[-6.36287212 167.24829102]
[-16.81946564 155.62101746]
[-17.30414009 139.99093628]
[-7.58804750 127.73812103]
[7.74117041 124.64796448]
[21.44552612 132.17953491]
[27.05424118 146.77667236]
[41.29409409 151.49118042]
[55.53394699 156.20568848]
[69.77380371 160.92019653]
[75.07710266 155.61689758]
[64.47050476 145.01028442]
[53.86389923 134.40368652]
[43.25729752 123.79708862]
[32.65069580 113.19048309]
[22.04409409 102.58388519]
[11.43749332 91.97727966]
[0.83106726 81.37050629]
[11.43802071 70.76425171]
[22.04409409 81.37068176]
[32.65069580 91.97727966]
[43.25729752 102.58388519]
[53.86389923 113.19048309]
[64.47050476 123.79708862]
[75.07710266 134.40368652]
[85.68370819 145.01028442]
[90.98700714 139.70698547]
[86.27249908 125.46713257]
[74.58989716 114.79814148]
[77.93491364 100.28400421]
[73.22040558 86.04415131]
[58.16358185 83.01306152]
[46.65014648 72.84761047]
[41.77716064 58.28225327]
[44.85543442 43.23500061]
[55.05692291 31.75348663]
[69.63748169 26.92618179]
[84.67501068 30.05160522]
[96.12449646 40.28903198]
[100.90607452 54.88465118]
[97.73352814 69.91230774]
[87.46025848 81.32964325]
[92.17476654 95.56950378]
[103.52015686 105.21996307]
[100.51235199 120.75263214]
[105.22686005 134.99247742]
[65.05757141 102.75712585]
[99.68027496 65.28009796]
[102.78534698 50.60499573]
[105.89042664 35.92990112]
[108.99550629 21.25480080]
[98.50227356 9.82363033]
[96.76559448 -5.59595442]
[104.45325470 -19.07480621]
[118.60919952 -25.43003082]
[133.79017639 -22.21791649]
[144.15878296 -10.67358685]
[145.72808838 4.76392937]
[137.89465332 18.15859222]
[123.67060089 24.35987854]
[120.56552124 39.03497696]
[117.46044922 53.71007538]
[114.35536957 68.38516998]
[134.99923706 98.09499359]
[118.03812408 130.43714905]
[129.55851746 120.83087921]
[141.07891846 111.22460175]
[152.59930420 101.61833191]
[150.85575867 83.56173706]
[160.22521973 68.21222687]
[176.78955078 61.62581635]
[193.83723450 66.26773834]
[205.08613586 56.34492874]
[216.33505249 46.42212296]
[227.58395386 36.49931717]
[238.83285522 26.57651138]
[243.54348755 10.86848640]
[259.56243896 7.35782099]
[270.41082764 19.65598679]
[264.92871094 35.11168671]
[248.75566101 37.82542038]
[237.50675964 47.74822617]
[226.25785828 57.67103195]
[215.00894165 67.59383392]
[203.76004028 77.51663971]
[206.68356323 89.28668213]
[204.31553650 101.25448608]
[197.04452515 111.14051056]
[186.19885254 117.03527832]
[173.80426025 117.76802063]
[162.20558167 113.13872528]
[150.68518066 122.74500275]
[139.16479492 132.35127258]
[127.64439392 141.95755005]
[131.15621948 156.54064941]
[145.78672791 159.84942627]
[160.41725159 163.15818787]
[175.04776001 166.46694946]
[189.67828369 169.77572632]
[204.30880737 173.08448792]
[218.93931580 176.39324951]
[233.56983948 179.70202637]
[246.13783264 168.37437439]
[262.81594849 166.78964233]
[277.00790405 175.37548828]
[283.21911621 190.57615662]
[297.89422607 193.68122864]
[312.56933594 196.78630066]
[324.77062988 187.00559998]
[340.40304565 187.40768433]
[352.08541870 197.80268860]
[354.30169678 213.28242493]
[346.00540161 226.53782654]
[331.11380005 231.31010437]
[316.65826416 225.34593201]
[309.46423340 211.46141052]
[294.78915405 208.35632324]
[280.11404419 205.25125122]
[271.07830811 215.07154846]
[258.26812744 219.18025208]
[244.99430847 216.40324402]
[234.74322510 207.36068726]
[230.26107788 194.33253479]
[215.63055420 191.02377319]
[201.00003052 187.71501160]
[186.36952209 184.40623474]
[171.73899841 181.09747314]
[157.10847473 177.78871155]
[142.47796631 174.47993469]
[127.84744263 171.17117310]
[123.16545105 177.03025818]
[134.88363647 186.39425659]
[146.60180664 195.75823975]
[160.64002991 201.04298401]
[159.95179749 216.02717590]
[145.48825073 220.00283813]
[137.23782349 207.47642517]
[125.51964569 198.11242676]
[113.80146790 188.74844360]
[109.11946869 194.60752869]
[115.57400513 208.14781189]
[122.02853394 221.68807983]
[128.48306274 235.22836304]
[140.75660706 246.92436218]
[132.91535950 261.95602417]
[116.30045319 258.58239746]
[114.94278717 241.68289185]
[108.48825836 228.14260864]
[102.03372955 214.60234070]
[95.57920074 201.06205750]
[80.69643402 199.19033813]
[71.09016418 210.71073914]
[61.48388672 222.23114014]
[51.87761688 233.75152588]
[42.27134323 245.27192688]
[32.66506958 256.79232788]
[23.05879784 268.31271362]
[13.45252514 279.83309937]
[3.84625244 291.35351562]
[9.18607330 300.49102783]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 47]
[9 46]
[11 44]
[12 43]
[13 42]
[14 41]
[15 40]
[17 39]
[18 38]
[19 37]
[20 36]
[23 33]
[24 32]
[52 224]
[53 223]
[54 222]
[55 221]
[56 220]
[57 219]
[58 218]
[59 217]
[60 216]
[61 75]
[62 74]
[63 73]
[64 72]
[92 111]
[93 110]
[95 108]
[96 107]
[113 128]
[114 127]
[115 126]
[116 125]
[130 159]
[131 158]
[132 157]
[133 156]
[137 150]
[138 149]
[139 148]
[140 147]
[141 146]
[160 195]
[161 194]
[162 193]
[163 192]
[164 191]
[165 190]
[166 189]
[167 188]
[171 183]
[172 182]
[173 181]
[205 215]
[206 214]
[207 213]
[208 212]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
