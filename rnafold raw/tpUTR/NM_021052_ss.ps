%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 13:54:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUUACUAGUCAAAUCCGUCAGUGAUCCCGAGUCCCAGAAACCAAAGGCUCUUUUCAGAGCCACCCACCUUUUCUGUAAAGUGCUGGAAUACACAUACGAUGCCUGAAAUCUC\
) } def
/len { sequence length } bind def

/coor [
[-33.50375366 249.86026001]
[-42.72786331 257.22344971]
[-54.25155640 259.13922119]
[-65.13459015 255.23797607]
[-77.00417328 264.40930176]
[-88.87376404 273.58059692]
[-100.74334717 282.75192261]
[-112.61293030 291.92321777]
[-124.48251343 301.09454346]
[-136.35209656 310.26583862]
[-141.31272888 318.09506226]
[-148.66572571 319.51895142]
[-155.24380493 333.90780640]
[-170.08493042 335.16894531]
[-172.26737976 350.82180786]
[-184.92904663 360.28002930]
[-200.55796814 357.93222046]
[-209.88179016 345.17126465]
[-207.36886597 329.56805420]
[-194.51004028 320.37963867]
[-178.93426514 323.05740356]
[-173.22247314 309.30151367]
[-157.51504517 307.40740967]
[-145.52340698 298.39627075]
[-133.65382385 289.22494507]
[-121.78424072 280.05364990]
[-109.91465759 270.88232422]
[-98.04507446 261.71102905]
[-86.17549133 252.53970337]
[-74.30590057 243.36839294]
[-73.16895294 225.19363403]
[-58.95053101 213.31709290]
[-40.23643875 215.50765991]
[-28.87625122 205.71244812]
[-17.51606369 195.91723633]
[-19.42511559 179.67337036]
[-11.23484898 165.32540894]
[4.02557135 158.57594299]
[20.47387695 162.24130249]
[31.56698799 152.14462280]
[42.66009903 142.04794312]
[34.66438293 128.05621338]
[30.02468491 112.62335205]
[28.97932434 96.54208374]
[31.58199501 80.63842773]
[37.69901276 65.72930145]
[47.01617050 52.58051682]
[59.05488205 41.86746979]
[73.19677734 34.14044571]
[88.71543884 29.79635048]
[87.91028595 14.81797600]
[87.10514069 -0.16040003]
[86.29998779 -15.13877583]
[85.49484253 -30.11715126]
[84.68968964 -45.09552765]
[75.29109192 -58.53421783]
[82.47426605 -73.27647400]
[98.84976959 -74.15672302]
[107.57189178 -60.26944351]
[99.66806793 -45.90067673]
[100.47321320 -30.92230034]
[101.27836609 -15.94392490]
[102.08351135 -0.96554947]
[102.88866425 14.01282597]
[103.69380951 28.99120140]
[125.47310638 33.61465073]
[144.75485229 44.74696732]
[159.64851379 61.29666519]
[173.02275085 54.50475693]
[186.39697266 47.71284866]
[199.67881775 40.74200058]
[212.76870728 33.41707611]
[225.75909424 25.91707611]
[238.74948120 18.41707611]
[251.73985291 10.91707706]
[257.26428223 -4.14480925]
[272.52947998 -9.07967854]
[285.82531738 -0.10192215]
[286.95236206 15.90149403]
[275.04605103 26.65411758]
[259.23986816 23.90745735]
[246.24948120 31.40745735]
[233.25909424 38.90745926]
[220.26870728 46.40745926]
[215.99369812 52.55710220]
[206.82734680 53.92906189]
[202.38876343 59.96171188]
[193.18888855 61.08707809]
[179.81465149 67.87898254]
[166.44042969 74.67089081]
[169.57734680 85.34101868]
[171.01208496 96.36977386]
[170.70950317 107.48733521]
[168.67701721 118.42173004]
[164.96437073 128.90542603]
[159.66236877 138.68196106]
[152.90074158 147.51216125]
[144.84490967 155.17996216]
[135.69194031 161.49780273]
[125.66577148 166.31109619]
[115.01169586 169.50210571]
[103.99036407 170.99275208]
[92.87140656 170.74656677]
[81.92684937 168.76957703]
[71.42444611 165.11015320]
[61.62114334 159.85780334]
[52.75677490 153.14105225]
[41.66366577 163.23773193]
[30.57055283 173.33441162]
[33.10069656 186.95893860]
[28.57184601 199.94042969]
[18.27984428 208.89184570]
[5.00895786 211.53450012]
[-7.72085381 207.27742004]
[-19.08104134 217.07263184]
[-30.44122887 226.86784363]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 30]
[5 29]
[6 28]
[7 27]
[8 26]
[9 25]
[10 24]
[12 23]
[14 21]
[33 116]
[34 115]
[35 114]
[39 109]
[40 108]
[41 107]
[50 65]
[51 64]
[52 63]
[53 62]
[54 61]
[55 60]
[68 90]
[69 89]
[70 88]
[71 86]
[72 84]
[73 83]
[74 82]
[75 81]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
