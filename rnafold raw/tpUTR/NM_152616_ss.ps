%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 06:37:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCCUUCAGAGCAGGAAACAACCUCAGACUCAUCACAAAGUAGACAUAUACACACACAUAUAUGUAUGUAUAUUUUUCUCACCACAUUCUUCAAGGAGGUUGUAGACAAAUGUUUCCAUGACCUCUCAGCUUUCCAACAGGAAUCUUGUAAGAGCUAAUAAAAGGAAAUACCUGA\
) } def
/len { sequence length } bind def

/coor [
[129.03749084 217.92996216]
[126.10809326 232.84596252]
[117.68941498 245.50274658]
[105.06524658 253.97026062]
[90.16066742 256.95724487]
[75.24853516 254.00823975]
[62.60283279 245.57292175]
[54.15193939 232.93762207]
[51.18455505 218.02912903]
[54.15318298 203.12088013]
[62.60512924 190.48629761]
[75.25153351 182.05203247]
[90.16391754 179.10424805]
[93.07395172 164.38923645]
[95.98398590 149.67422485]
[98.89401245 134.95921326]
[79.57677460 126.13745117]
[69.82173157 108.54270172]
[72.29347229 89.70385742]
[60.01893234 81.08204651]
[47.74439240 72.46023560]
[35.46984863 63.83842468]
[23.19530678 55.21661377]
[10.92076588 46.59480286]
[-1.35377586 37.97299194]
[-13.62831783 29.35117912]
[-24.25824165 39.39591980]
[-36.64525604 47.16176987]
[-50.30860901 52.34962463]
[-64.71846008 54.76039505]
[-79.31642914 54.30263901]
[-93.53723145 50.99603271]
[-106.83057404 44.97053528]
[-118.68244171 36.46127319]
[-128.63497925 25.79936790]
[-136.30416870 13.39906693]
[-141.39465332 -0.25837520]
[-143.71113586 -14.64335728]
[-143.16581726 -29.19847298]
[-139.78176880 -43.36011505]
[-133.69194031 -56.58028412]
[-145.81152344 -65.41858673]
[-158.00906372 -74.14898682]
[-170.28361511 -82.77079773]
[-182.55815125 -91.39260864]
[-202.67832947 -92.23892212]
[-210.11944580 -110.06632996]
[-222.69224548 -118.24707794]
[-235.26506042 -126.42782593]
[-247.83786011 -134.60856628]
[-260.41067505 -142.78932190]
[-272.98345947 -150.97006226]
[-285.55627441 -159.15081787]
[-301.34317017 -160.19189453]
[-307.79122925 -173.61843872]
[-320.36401367 -181.79917908]
[-332.93682861 -189.97991943]
[-348.34481812 -186.46296692]
[-361.68215942 -194.94181824]
[-365.03604126 -210.38613892]
[-356.41665649 -223.63308716]
[-340.93771362 -226.82348633]
[-327.78265381 -218.06451416]
[-324.75607300 -202.55273438]
[-312.18328857 -194.37197876]
[-299.61047363 -186.19123840]
[-284.72283936 -185.73530579]
[-277.37551880 -171.72361755]
[-264.80270386 -163.54287720]
[-252.22991943 -155.36212158]
[-239.65710449 -147.18138123]
[-227.08430481 -139.00062561]
[-214.51150513 -130.81988525]
[-201.93870544 -122.63913727]
[-192.13464355 -125.65154266]
[-182.08494568 -122.69208527]
[-175.19458008 -114.51071930]
[-173.93634033 -103.66715240]
[-161.66180420 -95.04534149]
[-149.38725281 -86.42353058]
[-142.08360291 -85.14785767]
[-136.97322083 -77.53817749]
[-124.85363770 -68.69986725]
[-113.44156647 -79.04773712]
[-100.12863159 -86.81004333]
[-85.49117279 -91.64804077]
[-70.16341400 -93.34965515]
[-54.81002045 -91.83872986]
[-40.09723663 -87.17849731]
[-26.66400528 -79.56887054]
[-15.09420776 -69.33793640]
[-5.89128637 -56.92773819]
[0.54366237 -42.87524414]
[3.92936659 -27.78907204]
[4.11667490 -12.32313919]
[1.09512353 2.85167503]
[-5.00650644 17.07663727]
[7.26803541 25.69844818]
[19.54257774 34.32025909]
[31.81711769 42.94207001]
[44.09165955 51.56388092]
[56.36620331 60.18569183]
[68.64074707 68.80750275]
[80.91528320 77.42931366]
[89.39023590 71.68751526]
[99.53092194 69.09104919]
[110.18238831 70.09617615]
[120.07685089 74.73946381]
[127.98445129 82.61560059]
[132.86564636 92.90872192]
[134.00608826 104.47554016]
[131.11692810 115.97203827]
[145.39913940 120.55662537]
[159.68135071 125.14121246]
[173.96356201 129.72579956]
[188.24577332 134.31037903]
[202.52798462 138.89495850]
[216.81019592 143.47955322]
[231.24612427 147.55435181]
[245.81758118 151.11425781]
[257.65585327 141.25720215]
[272.85070801 140.27246094]
[285.56146240 148.32853699]
[291.02578735 162.15892029]
[305.59722900 165.71881104]
[320.16867065 169.27871704]
[334.74011230 172.83862305]
[349.37246704 176.13934326]
[364.06106567 179.17984009]
[378.74966431 182.22035217]
[391.86001587 173.80865479]
[406.71304321 177.10139465]
[414.65151978 189.65194702]
[429.34014893 192.69245911]
[444.02874756 195.73295593]
[458.71734619 198.77346802]
[474.10824585 193.11196899]
[486.53176880 203.81657410]
[483.20764160 219.87528992]
[467.55548096 224.76828003]
[455.67684937 213.46208191]
[440.98825073 210.42156982]
[426.29962158 207.38105774]
[411.61102295 204.34056091]
[399.34249878 212.70831299]
[384.40286255 209.83404541]
[375.70916748 196.90896606]
[361.02056885 193.86845398]
[346.33193970 190.82795715]
[341.89617920 192.67329407]
[336.25210571 191.72956848]
[331.18020630 187.41006470]
[316.60876465 183.85017395]
[302.03732300 180.29026794]
[287.46588135 176.73036194]
[276.24002075 186.48323059]
[261.24649048 187.77096558]
[248.21737671 179.89093018]
[242.25767517 165.68569946]
[227.68621826 162.12580872]
[225.20549011 163.49380493]
[222.02516174 163.94581604]
[218.49726868 163.20726013]
[215.06758118 161.13809204]
[212.22561646 157.76176453]
[197.94340515 153.17716980]
[183.66119385 148.59259033]
[169.37898254 144.00801086]
[155.09677124 139.42341614]
[140.81455994 134.83883667]
[126.53234100 130.25425720]
[113.60903168 137.86923218]
[110.69899750 152.58425903]
[107.78896332 167.29927063]
[104.87893677 182.01428223]
[117.54678345 190.41630554]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 175]
[14 174]
[15 173]
[16 172]
[19 104]
[20 103]
[21 102]
[22 101]
[23 100]
[24 99]
[25 98]
[26 97]
[41 83]
[42 82]
[43 80]
[44 79]
[45 78]
[47 74]
[48 73]
[49 72]
[50 71]
[51 70]
[52 69]
[53 68]
[55 66]
[56 65]
[57 64]
[112 171]
[113 170]
[114 169]
[115 168]
[116 167]
[117 166]
[118 165]
[119 160]
[120 159]
[124 155]
[125 154]
[126 153]
[127 152]
[128 149]
[129 148]
[130 147]
[133 144]
[134 143]
[135 142]
[136 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
