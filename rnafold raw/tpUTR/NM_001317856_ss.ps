%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 00:59:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCUCCACUCUGUUUCCCGCCUGGGCCAUCCAACCUUGAAGUCCUAAACCACACCUCAGUCACUAAAGGUCUGUUUAAAGUUGUUCUGGUUGAUUGCUUGUUGCCACAAAGGUGUGUUGAGCCCAUUCAUUUGCUGAUUAUAUUUCUGAGCUGCUACCACAUGACAGACACAAGGCUCAGAUGAAGAGGUGAAUUGAACACGUUCCUGACCUCAA\
) } def
/len { sequence length } bind def

/coor [
[91.30036926 104.80927277]
[76.67645264 101.47146606]
[62.05253220 98.13365173]
[47.42861176 94.79583740]
[34.15035248 102.93988800]
[19.36716843 99.34654236]
[11.68489075 86.63756561]
[-2.93902826 83.29975128]
[-17.56294632 79.96193695]
[-32.73883057 84.43441772]
[-43.42529297 74.05902100]
[-58.04920959 70.72120667]
[-65.94636536 82.57109833]
[-77.38957977 90.99655151]
[-90.99259949 95.00221252]
[-105.11614990 94.12660980]
[-118.06546783 88.49523926]
[-128.29365540 78.80303955]
[-134.58648682 66.22869110]
[-136.20649719 52.29130936]
[-150.78056335 48.74213791]
[-168.33113098 54.32203293]
[-180.53642273 41.70993042]
[-195.16033936 38.37211609]
[-209.78425598 35.03430176]
[-224.40817261 31.69648933]
[-239.03208923 28.35867500]
[-254.20797729 32.83115768]
[-264.89443970 22.45576286]
[-279.51834106 19.11794853]
[-294.14227295 15.78013515]
[-303.20050049 16.92138100]
[-308.95300293 12.28669739]
[-323.52706909 8.73752499]
[-338.10113525 5.18835163]
[-352.67520142 1.63917887]
[-364.07711792 7.66272020]
[-376.14068604 4.40969133]
[-382.54321289 -5.85023212]
[-397.06436157 -9.61002064]
[-411.58554077 -13.36980820]
[-423.61343384 -0.55197817]
[-440.39175415 4.38066578]
[-457.27011108 0.15505171]
[-469.61791992 -11.97646713]
[-474.09475708 -28.60545158]
[-488.71868896 -31.94326591]
[-503.34259033 -35.28107834]
[-517.96649170 -38.61889267]
[-532.59045410 -41.95670700]
[-543.09185791 -33.52685165]
[-556.33752441 -32.69504929]
[-567.47943115 -39.54131317]
[-572.56842041 -51.37618256]
[-587.14251709 -54.92535782]
[-601.71655273 -58.47452927]
[-616.29058838 -62.02370071]
[-626.84106445 -50.86198425]
[-641.56341553 -46.48624802]
[-656.49749756 -50.07354355]
[-667.62609863 -60.65891266]
[-671.95568848 -75.39493561]
[-668.32159424 -90.31770325]
[-657.70141602 -101.41306305]
[-642.95184326 -105.69641876]
[-628.04058838 -102.01556396]
[-616.97857666 -91.36064148]
[-612.74145508 -76.59777069]
[-598.16735840 -73.04859161]
[-583.59332275 -69.49942017]
[-569.01922607 -65.95024872]
[-555.03533936 -75.29673004]
[-538.28906250 -71.56185150]
[-529.25262451 -56.58062744]
[-514.62872314 -53.24281311]
[-500.00479126 -49.90499878]
[-485.38085938 -46.56718445]
[-470.75695801 -43.22937012]
[-463.21365356 -53.35818481]
[-452.36065674 -59.90716934]
[-439.79104614 -61.87378693]
[-427.36550903 -58.93117523]
[-416.93692017 -51.48184586]
[-410.07406616 -40.60301590]
[-407.82574463 -27.89096451]
[-393.30459595 -24.13117790]
[-378.78341675 -20.37138939]
[-362.14590454 -25.95950127]
[-349.12603760 -12.93488598]
[-334.55197144 -9.38571358]
[-319.97790527 -5.83654022]
[-305.40383911 -2.28736734]
[-290.80447388 1.15621626]
[-276.18054199 4.49403048]
[-261.55661011 7.83184433]
[-247.42674255 3.12061882]
[-235.69427490 13.73475647]
[-221.07035828 17.07257080]
[-206.44644165 20.41038322]
[-191.82252502 23.74819756]
[-177.19860840 27.08601189]
[-166.79560852 20.91868210]
[-154.58709717 23.57654762]
[-147.23138428 34.16807175]
[-132.65731812 37.71724701]
[-123.49713135 24.78347588]
[-110.04182434 16.33544159]
[-94.33659363 13.69218063]
[-78.78209686 17.28773880]
[-65.76747894 26.60021019]
[-57.30338669 40.22727203]
[-54.71139908 56.09729004]
[-40.08747864 59.43510437]
[-25.95759392 54.72388077]
[-14.22513294 65.33801270]
[0.39878574 68.67582703]
[15.02270412 72.01364136]
[27.45841789 63.89646530]
[42.33670044 67.07315826]
[50.76642609 80.17191315]
[65.39034271 83.50972748]
[80.01426697 86.84754181]
[94.63818359 90.18535614]
[81.14109039 83.64101410]
[69.74491882 73.88769531]
[61.19478989 61.56311035]
[56.04975128 47.47309494]
[54.64619827 32.53890228]
[57.07590485 17.73699379]
[63.18000793 4.03517103]
[72.55939484 -7.67068577]
[84.60080719 -16.61520195]
[98.51692963 -22.21355247]
[113.39787292 -24.09969521]
[128.27066040 -22.15030479]
[142.16285706 -16.49284172]
[154.16613770 -7.49721146]
[163.49566650 4.24841547]
[169.54147339 17.97606468]
[171.90821838 32.78816986]
[170.44119263 47.71625900]
[165.23629761 61.78427505]
[156.63385010 74.07239532]
[145.19631958 83.77717590]
[131.67152405 90.26408386]
[116.94746399 93.10874176]
[131.93763733 93.65152740]
[146.92781067 94.19430542]
[161.91798401 94.73709106]
[176.90817261 95.27987671]
[191.89834595 95.82265472]
[206.88851929 96.36544037]
[221.87869263 96.90822601]
[226.46348572 82.52481842]
[234.75981140 69.91238403]
[246.15203857 60.00685120]
[259.79479980 53.54326630]
[274.67568970 51.00127411]
[289.69046021 52.56951141]
[303.72488403 58.13159943]
[315.73757935 67.27479553]
[324.83706665 79.32061768]
[330.34814453 93.37518311]
[331.86181641 108.39554596]
[329.26577759 123.26710510]
[322.75265503 136.88627625]
[312.80578613 148.24244690]
[300.16329956 156.49290466]
[285.76333618 161.02540588]
[270.67446899 161.50360107]
[256.01638794 157.89202881]
[242.87684631 150.45867920]
[232.23085022 139.75515747]
[224.86842346 126.57572937]
[221.33590698 111.89839935]
[206.34573364 111.35561371]
[191.35556030 110.81283569]
[176.36538696 110.27005005]
[161.37519836 109.72726440]
[146.38502502 109.18448639]
[131.39485168 108.64170074]
[116.40467834 108.09891510]
[112.39147949 114.43486786]
[125.06324768 122.46145630]
[117.03646088 135.13310242]
[104.36508179 127.10675812]
[100.35188293 133.44270325]
[107.24866486 146.76315308]
[114.14544678 160.08360291]
[121.04223633 173.40405273]
[127.93901825 186.72450256]
[141.15509033 195.42196655]
[140.13595581 210.28167725]
[150.66990662 212.96890259]
[157.84017944 220.84594727]
[159.45974731 231.15174866]
[155.23258972 240.44863892]
[161.74084473 253.96316528]
[168.24909973 267.47769165]
[182.09614563 276.26358032]
[181.14062500 292.63485718]
[166.36549377 299.75018311]
[152.97015381 290.28991699]
[154.73457336 273.98596191]
[148.22631836 260.47143555]
[141.71806335 246.95689392]
[124.98796844 237.25682068]
[126.81550598 217.17845154]
[114.09273529 209.43376160]
[114.61856842 193.62129211]
[107.72178650 180.30084229]
[100.82499695 166.98039246]
[93.92821503 153.65994263]
[87.03143311 140.33949280]
[83.58052826 130.07447815]
[83.38215637 120.19945526]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 123]
[2 122]
[3 121]
[4 120]
[7 117]
[8 116]
[9 115]
[11 113]
[12 112]
[20 105]
[21 104]
[23 101]
[24 100]
[25 99]
[26 98]
[27 97]
[29 95]
[30 94]
[31 93]
[33 92]
[34 91]
[35 90]
[36 89]
[39 87]
[40 86]
[41 85]
[46 78]
[47 77]
[48 76]
[49 75]
[50 74]
[54 71]
[55 70]
[56 69]
[57 68]
[146 182]
[147 181]
[148 180]
[149 179]
[150 178]
[151 177]
[152 176]
[153 175]
[187 214]
[188 213]
[189 212]
[190 211]
[191 210]
[193 208]
[197 206]
[198 205]
[199 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
