%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 18:36:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUACUGUGAUUUGUUAAUGGAUGAAUUGUAUUUUGCAAAGAUAGUUAGAGAAAUACCUCCUUCCCCUUAGCUUUAUUAAGGUAUCAUUGAUAAAUAAAAAUAAAAUAUGUUUAAUGUAUAUAAUGUGAUUUUUAAAUAUAUAUAUAUAUAUACACACAUUGUGAAAUAAUGAAAUAAAGGUAAUUAACACAUCUA\
) } def
/len { sequence length } bind def

/coor [
[22.31612587 320.55804443]
[9.95279121 329.58059692]
[-5.18908548 331.81268311]
[-19.63001060 326.74136353]
[-30.05156517 315.53201294]
[-34.05895233 300.76043701]
[-30.73130417 285.82104492]
[-20.83329010 274.14678955]
[-6.63940144 268.42034912]
[-5.20634508 253.48896790]
[-3.77328849 238.55758667]
[-10.25927067 225.14933777]
[-1.23893368 212.15148926]
[0.19412275 197.22009277]
[1.62717915 182.28871155]
[3.06023550 167.35731506]
[4.49329185 152.42593384]
[5.92634821 137.49453735]
[7.35940456 122.56315613]
[-3.86215353 112.60942841]
[-18.51588058 115.81384277]
[-33.16960907 119.01825714]
[-46.48297501 131.73199463]
[-62.98383331 125.77245331]
[-77.58460236 129.21012878]
[-82.77226257 138.78686523]
[-92.18357086 143.81825256]
[-102.59100342 142.85305786]
[-110.57350159 136.45138550]
[-125.27646637 139.42172241]
[-139.97943115 142.39204407]
[-154.68238831 145.36238098]
[-169.38536072 148.33270264]
[-184.08831787 151.30303955]
[-198.79129028 154.27337646]
[-210.78602600 164.59019470]
[-224.79342651 159.52639771]
[-236.78816223 169.84321594]
[-250.79556274 164.77941895]
[-265.49853516 167.74974060]
[-275.53384399 180.26660156]
[-291.57583618 180.08070374]
[-301.31842041 167.33465576]
[-297.28793335 151.80613708]
[-282.57623291 145.40730286]
[-268.46884155 153.04678345]
[-253.76588440 150.07644653]
[-242.82279968 139.97209167]
[-227.76374817 144.82342529]
[-216.82066345 134.71907043]
[-201.76161194 139.57040405]
[-187.05865479 136.60008240]
[-172.35568237 133.62974548]
[-157.65272522 130.65940857]
[-142.94976807 127.68908691]
[-128.24679565 124.71875000]
[-113.54383850 121.74842072]
[-100.03242493 107.92559052]
[-81.02227783 114.60936737]
[-66.42151642 111.17168427]
[-59.78574753 101.04901886]
[-47.64091110 98.07048035]
[-36.37402344 104.36453247]
[-21.72029495 101.16011810]
[-7.06656790 97.95570374]
[-2.81971884 83.56945038]
[-13.38395023 72.92064667]
[-23.94818115 62.27184296]
[-34.51241302 51.62303925]
[-45.07664490 40.97423553]
[-55.64087296 30.32542992]
[-71.61350250 28.82386780]
[-80.27738190 15.32139778]
[-74.98633575 0.17595948]
[-59.79918671 -4.99416351]
[-46.36622620 3.77710557]
[-44.99207306 19.76119995]
[-34.42784119 30.41000366]
[-23.86360931 41.05880737]
[-13.29937744 51.70761108]
[-2.73514628 62.35641479]
[7.82908487 73.00521851]
[20.55262184 65.06093597]
[15.62263489 50.89424133]
[10.69264698 36.72754669]
[5.76265955 22.56085396]
[-5.15356493 9.58887005]
[4.28955746 -4.49174690]
[20.43401527 0.68443197]
[19.92935371 17.63086700]
[24.85934067 31.79756165]
[29.78932953 45.96425629]
[34.71931839 60.13095093]
[42.21073532 59.77227402]
[41.49338531 44.78943634]
[48.36328506 31.45510292]
[56.47622299 44.07209015]
[57.19357300 59.05492401]
[64.68498993 58.69625092]
[68.23898315 44.12335968]
[71.79297638 29.55047035]
[75.34696960 14.97758007]
[78.90096283 0.40468922]
[71.82983398 -13.99596119]
[78.80995941 -28.44094086]
[94.48677826 -31.84929657]
[106.83438110 -21.60643005]
[106.38073730 -5.56979179]
[93.47385406 3.95868158]
[89.91986084 18.53157234]
[86.36586761 33.10446167]
[82.81187439 47.67735291]
[79.25788116 62.25024414]
[99.64921570 58.74808884]
[118.39920807 65.12167358]
[131.22500610 79.02777863]
[145.09461975 73.31516266]
[158.96421814 67.60254669]
[172.83383179 61.88993454]
[186.70344543 56.17731857]
[200.57304382 50.46470261]
[214.44265747 44.75209045]
[228.31227112 39.03947449]
[242.13587952 33.21644974]
[255.91262817 27.28339005]
[269.68939209 21.35033035]
[283.46612549 15.41726971]
[297.24288940 9.48420906]
[310.97189331 3.44148827]
[324.65225220 -2.71050858]
[327.69000244 -17.92733383]
[339.11462402 -28.42770576]
[354.53311157 -30.17401505]
[368.01675415 -22.49477196]
[374.38082886 -8.34280014]
[371.17819214 6.84017658]
[359.64035034 17.21599388]
[344.20382690 18.79494095]
[330.80426025 10.96987629]
[317.12387085 17.12187386]
[312.30728149 22.73891258]
[303.17593384 23.26095772]
[289.39920044 29.19401741]
[275.62243652 35.12707901]
[261.84570312 41.06013870]
[248.06893921 46.99319839]
[243.16339111 52.53271866]
[234.02488708 52.90908051]
[220.15527344 58.62169647]
[206.28565979 64.33431244]
[192.41606140 70.04692841]
[178.54644775 75.75954437]
[164.67683411 81.47216034]
[150.80723572 87.18477631]
[136.93762207 92.89739227]
[123.34060669 131.78434753]
[80.44129181 136.32217407]
[56.98199463 97.82498932]
[69.76847076 105.66756439]
[82.55494690 113.51013947]
[95.34142303 121.35271454]
[108.12789917 129.19529724]
[120.91437531 137.03787231]
[137.57742310 140.16508484]
[139.18519592 157.04263306]
[123.41232300 163.25975037]
[113.07180023 149.82435608]
[100.28532410 141.98176575]
[87.49884796 134.13919067]
[74.71237183 126.29661560]
[61.92589188 118.45404053]
[49.13941574 110.61146545]
[42.42726135 113.95764923]
[49.88851929 126.97032166]
[57.34977722 139.98300171]
[64.81103516 152.99566650]
[73.60308075 165.14884949]
[66.01832581 178.08993530]
[51.11870956 176.35745239]
[46.70553970 162.02172852]
[40.80467606 148.23115540]
[34.90381241 134.44059753]
[29.00294876 120.65002441]
[22.29079247 123.99620819]
[20.85773659 138.92759705]
[19.42468071 153.85897827]
[17.99162292 168.79037476]
[16.55856705 183.72175598]
[15.12551117 198.65315247]
[13.69245434 213.58453369]
[20.07593536 228.06079102]
[11.15809917 239.99064636]
[9.72504330 254.92202759]
[8.29198647 269.85342407]
[21.13760185 278.17498779]
[28.63448906 291.51873779]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 194]
[10 193]
[11 192]
[13 190]
[14 189]
[15 188]
[16 187]
[17 186]
[18 185]
[19 184]
[20 65]
[21 64]
[22 63]
[24 60]
[25 59]
[29 57]
[30 56]
[31 55]
[32 54]
[33 53]
[34 52]
[35 51]
[37 49]
[39 47]
[40 46]
[66 82]
[67 81]
[68 80]
[69 79]
[70 78]
[71 77]
[83 93]
[84 92]
[85 91]
[86 90]
[99 113]
[100 112]
[101 111]
[102 110]
[103 109]
[116 155]
[117 154]
[118 153]
[119 152]
[120 151]
[121 150]
[122 149]
[123 148]
[124 146]
[125 145]
[126 144]
[127 143]
[128 142]
[129 140]
[130 139]
[158 172]
[159 171]
[160 170]
[161 169]
[162 168]
[163 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
