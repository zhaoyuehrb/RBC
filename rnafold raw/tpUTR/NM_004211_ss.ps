%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 18:33:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCAGUGGUGUGGGAUGGUCCAGACUUGAUCCUGUUUUUCCUCUCUGCCUCCUCCUAAUGUUUUCCAUAGCUCUCCUCCCAUUUUUCUUCAUCUUUCUUCCUACAUCUUGGUUCACAUCCACGCAUGAGAGUGAUUAUGUAGAAAAGUAGGCAUAGUGUCGCAUGCUGCAGUAAAGAGCUACAUAGACCACCUGAA\
) } def
/len { sequence length } bind def

/coor [
[87.20423126 267.58575439]
[83.84534454 251.89825439]
[94.12711334 239.58302307]
[94.12711334 224.58302307]
[94.12711334 209.58302307]
[94.00751495 194.58349609]
[93.76831818 179.58540344]
[93.52912140 164.58731079]
[93.28992462 149.58921814]
[74.52011871 143.06845093]
[59.76774597 129.75704956]
[46.50734329 136.76860046]
[33.24694443 143.78013611]
[19.98654366 150.79168701]
[6.72614431 157.80323792]
[0.59370720 164.58905029]
[-6.80208921 164.81895447]
[-20.17261314 171.61814880]
[-25.28142929 188.34317017]
[-40.60144806 196.05210876]
[-56.44060898 190.41433716]
[-69.70101166 197.42587280]
[-82.96141052 204.43742371]
[-96.22180939 211.44897461]
[-98.53092957 226.67967224]
[-109.24041748 237.50372314]
[-124.09427643 239.91760254]
[-137.36245728 233.20243835]
[-150.62284851 240.21397400]
[-151.82719421 255.59426880]
[-161.17375183 267.86804199]
[-175.68006897 273.11877441]
[-190.71722412 269.67098999]
[-201.48693848 258.62487793]
[-204.55262756 243.50518799]
[-198.93601990 229.13656616]
[-186.42938232 220.10398865]
[-171.02352905 219.28970337]
[-157.63439941 226.95358276]
[-144.37400818 219.94203186]
[-142.45370483 205.19583130]
[-132.09593201 194.27883911]
[-117.12085724 191.52197266]
[-103.23336029 198.18856812]
[-89.97295380 191.17703247]
[-76.71255493 184.16548157]
[-63.45215607 177.15393066]
[-61.41402435 164.42410278]
[-52.27715683 155.05516052]
[-39.21970749 152.62712097]
[-26.97181129 158.24761963]
[-13.60128784 151.44842529]
[-0.28540257 144.54283142]
[12.97499752 137.53129578]
[26.23539734 130.51974487]
[39.49579620 123.50819397]
[52.75619888 116.49665070]
[50.21334457 105.04034424]
[50.40848923 93.30684662]
[53.33090210 81.94144440]
[58.81986237 71.56916046]
[66.57351685 62.76042175]
[76.16544342 55.99965668]
[87.06813812 51.65867996]
[98.68202209 49.97621536]
[110.36839294 51.04478836]
[121.48455048 54.80563736]
[131.41917419 61.05193329]
[142.48057556 50.92053223]
[153.54197693 40.78912735]
[164.60337830 30.65772438]
[175.66479492 20.52631950]
[186.72619629 10.39491653]
[197.78759766 0.26351342]
[194.99555969 -15.48068619]
[201.09245300 -30.10987091]
[214.00735474 -39.05079269]
[229.56451416 -39.59778595]
[236.89122009 -52.68668747]
[236.88035583 -68.50788879]
[249.84848022 -75.83435822]
[257.17517090 -88.92326355]
[264.50189209 -102.01216125]
[271.82861328 -115.10106659]
[279.15530396 -128.18995667]
[286.48202515 -141.27886963]
[293.80874634 -154.36776733]
[301.13543701 -167.45666504]
[301.12457275 -183.27786255]
[314.09271240 -190.60433960]
[321.41940308 -203.69323730]
[328.74612427 -216.78213501]
[324.67755127 -231.81825256]
[332.29434204 -244.98788452]
[346.65402222 -248.77398682]
[353.98074341 -261.86288452]
[353.96987915 -277.68408203]
[366.93798828 -285.01055908]
[374.26470947 -298.09945679]
[381.59143066 -311.18835449]
[378.03317261 -321.48226929]
[380.67953491 -331.82073975]
[388.42077637 -338.84353638]
[398.53311157 -340.40618896]
[406.27349854 -353.25479126]
[414.01388550 -366.10339355]
[421.65155029 -379.01330566]
[421.89297485 -394.83267212]
[434.97628784 -401.95141602]
[442.51080322 -414.92181396]
[450.04528809 -427.89221191]
[444.56616211 -442.53848267]
[449.83206177 -457.26278687]
[463.35656738 -465.11270142]
[478.75384521 -462.38180542]
[488.75378418 -450.35949707]
[488.63467407 -434.72235107]
[478.45278931 -422.85379028]
[463.01568604 -420.35772705]
[455.48120117 -407.38732910]
[447.94668579 -394.41693115]
[448.24417114 -379.52529907]
[434.62194824 -371.47882080]
[433.97982788 -364.10736084]
[426.86248779 -358.36303711]
[419.12210083 -345.51443481]
[411.38171387 -332.66583252]
[412.44906616 -313.36584473]
[394.68032837 -303.86163330]
[387.35360718 -290.77273560]
[380.02691650 -277.68383789]
[380.56182861 -262.79885864]
[367.06964111 -254.53616333]
[359.74295044 -241.44726562]
[364.02334595 -227.22708130]
[356.77947998 -213.84870911]
[341.83502197 -209.45542908]
[334.50830078 -196.36653137]
[327.18161011 -183.27763367]
[327.71652222 -168.39263916]
[314.22433472 -160.12995911]
[306.89764404 -147.04106140]
[299.57092285 -133.95214844]
[292.24420166 -120.86325073]
[284.91751099 -107.77435303]
[277.59078979 -94.68545532]
[270.26409912 -81.59654999]
[262.93737793 -68.50765228]
[263.47229004 -53.62265396]
[249.98011780 -45.35997772]
[242.65341187 -32.27107620]
[247.99343872 -24.72999763]
[250.53884888 -15.84716034]
[250.00314331 -6.62236166]
[263.15005493 0.59975094]
[278.97067261 0.46274081]
[286.40029907 13.37203026]
[299.54721069 20.59414291]
[312.69409180 27.81625366]
[326.67434692 21.08334541]
[341.93609619 23.88681602]
[352.61083984 35.14867401]
[354.59393311 50.53850555]
[347.12286377 64.13860321]
[333.07040405 70.71945953]
[317.83999634 67.75059509]
[307.28802490 56.37359619]
[305.47198486 40.96315765]
[292.32507324 33.74104691]
[279.17819214 26.51893425]
[264.29791260 27.17251778]
[255.92793274 13.74665546]
[242.78102112 6.52454281]
[226.37205505 15.05123425]
[207.91900635 11.32491779]
[196.85758972 21.45632172]
[185.79618835 31.58772469]
[174.73478699 41.71912766]
[163.67338562 51.85053253]
[152.61198425 61.98193359]
[141.55058289 72.11333466]
[148.37831116 87.20719147]
[149.90394592 103.70308685]
[145.96028137 119.79314423]
[136.97953796 133.71394348]
[123.94597626 143.93980408]
[108.28801727 149.35002136]
[108.52721405 164.34811401]
[108.76641083 179.34620667]
[109.00560760 194.34429932]
[112.27455902 202.88644409]
[109.12711334 209.58302307]
[109.12711334 224.58302307]
[109.12711334 239.58302307]
[119.40888214 251.89825439]
[116.05000305 267.58575439]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 194]
[4 193]
[5 192]
[6 190]
[7 189]
[8 188]
[9 187]
[11 57]
[12 56]
[13 55]
[14 54]
[15 53]
[17 52]
[18 51]
[21 47]
[22 46]
[23 45]
[24 44]
[28 40]
[29 39]
[68 181]
[69 180]
[70 179]
[71 178]
[72 177]
[73 176]
[74 175]
[78 151]
[79 150]
[81 148]
[82 147]
[83 146]
[84 145]
[85 144]
[86 143]
[87 142]
[88 141]
[90 139]
[91 138]
[92 137]
[95 134]
[96 133]
[98 131]
[99 130]
[100 129]
[104 127]
[105 126]
[106 125]
[107 123]
[109 121]
[110 120]
[111 119]
[154 173]
[155 172]
[157 170]
[158 169]
[159 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
