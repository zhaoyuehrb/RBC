%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Sep  9 22:58:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCAAUCAUAAAGUGCACACCUUUAUUCAGAACUUUAGUAUUAAAUCAGUUCUCAAUUUCAUUUUUUAUGUAUUGUUUUACUCCUUUUUAUUCAUACGUAAAAUUUUGGAUUAAUUUGUGAAAAUGUAAUUAUAAGCUGAGACCGGUGGCUCUCUUCUUAAAAGCACCAUAUUAAAUCCUGGAAAACUAA\
) } def
/len { sequence length } bind def

/coor [
[30.10824394 336.21105957]
[20.57199287 324.58969116]
[13.02355003 311.58901978]
[7.65843773 297.54580688]
[4.61562681 282.82382202]
[3.97393227 267.80435181]
[5.74997568 252.87644958]
[9.89775372 238.42681885]
[16.30982780 224.82969666]
[24.82011223 212.43731689]
[35.20816803 201.57064819]
[47.20491791 192.51116943]
[60.49962234 185.49354553]
[74.74790955 180.69955444]
[72.30448151 165.89990234]
[69.86104584 151.10025024]
[67.41761780 136.30059814]
[61.25060654 132.03234863]
[56.29958725 146.19171143]
[51.34857178 160.35105896]
[49.33726501 175.21560669]
[38.42060089 185.50280762]
[23.46292114 186.62879944]
[11.12920666 178.09184265]
[6.91522503 163.69593811]
[12.69867897 149.85571289]
[25.90091896 142.73849487]
[37.40874863 133.11717224]
[48.91658020 123.49584961]
[42.74956894 119.22759247]
[28.03779030 122.15395355]
[13.32601166 125.08030701]
[-1.38576746 128.00665283]
[-16.09754753 130.93301392]
[-30.80932617 133.85937500]
[-34.12913513 148.72203064]
[-43.21233749 160.94558716]
[-56.48520660 168.41224670]
[-71.64813995 169.82833862]
[-86.07406616 164.94853210]
[-97.26361084 154.61828613]
[-103.27811432 140.62738037]
[-103.07553101 125.39980316]
[-96.69094849 111.57385254]
[-85.23055267 101.54493713]
[-70.67990875 97.05063629]
[-55.56001663 98.86961365]
[-42.49048233 106.68671417]
[-33.73567963 119.14759064]
[-19.02390099 116.22123718]
[-4.31212234 113.29488373]
[10.39965725 110.36852264]
[25.11143684 107.44216919]
[39.82321548 104.51581573]
[48.35971832 92.18179321]
[45.91628647 77.38214111]
[36.03434372 65.02666473]
[41.59508514 51.20901871]
[39.15165329 36.40936661]
[36.70822144 21.60971832]
[34.26478958 6.81006718]
[31.82135582 -7.98958254]
[29.37792397 -22.78923225]
[13.73483181 -27.23685265]
[1.63803113 -38.01956177]
[-4.52695179 -52.94306564]
[-3.57402515 -69.00342560]
[4.25562668 -82.99170685]
[17.35189629 -92.13510895]
[14.66664410 -106.89279938]
[4.58386898 -119.08493805]
[9.91778469 -132.99172974]
[7.23253155 -147.74942017]
[-5.47904825 -156.75238037]
[-7.99204731 -171.75703430]
[0.66924727 -183.82009888]
[-2.01600575 -198.57778931]
[-4.70125866 -213.33547974]
[-7.38651133 -228.09317017]
[-10.07176399 -242.85086060]
[-12.75701714 -257.60855103]
[-15.44227028 -272.36624146]
[-30.38863182 -274.89251709]
[-43.56804276 -282.38110352]
[-53.38903046 -293.92770386]
[-58.66565704 -308.13803101]
[-58.76074982 -323.29608154]
[-53.66281891 -337.57147217]
[-43.98747253 -349.24038696]
[-30.90304947 -356.89373779]
[-15.98955917 -359.60733032]
[-1.04787910 -357.05349731]
[12.11771107 -349.54064941]
[21.91740036 -337.97598267]
[27.16783142 -323.75595093]
[27.23498917 -308.59774780]
[22.11076164 -294.33175659]
[12.41392422 -282.68072510]
[-0.68458021 -275.05148315]
[2.00067282 -260.29379272]
[4.68592548 -245.53611755]
[7.37117863 -230.77842712]
[10.05643177 -216.02073669]
[12.74168396 -201.26304626]
[15.42693710 -186.50535583]
[27.78231049 -178.26640320]
[30.71576691 -163.33825684]
[21.99022102 -150.43466187]
[24.67547417 -135.67697144]
[34.56618118 -124.54040527]
[29.42433357 -109.57805634]
[32.10958862 -94.82036591]
[45.65755844 -91.79497528]
[57.06343842 -83.80677032]
[64.58435059 -72.03603363]
[67.05572510 -58.24404144]
[64.07147980 -44.50950623]
[56.05038452 -32.91532516]
[44.17757416 -25.23266411]
[46.62100601 -10.43301487]
[49.06443787 4.36663532]
[51.50786972 19.16628456]
[53.95130157 33.96593475]
[56.39473343 48.76558685]
[66.10190582 60.06249237]
[60.71593475 74.93871307]
[63.15936661 89.73835754]
[70.78308868 77.24947357]
[82.22681427 68.90413666]
[95.53826141 65.68527985]
[108.60494995 67.73742676]
[119.48848724 74.39584351]
[126.71204376 84.33988190]
[129.45852661 95.83946228]
[144.36024475 97.55377197]
[159.26196289 99.26807404]
[174.16368103 100.98237610]
[186.46896362 91.43157959]
[201.55700684 93.38240814]
[210.58639526 105.17247772]
[225.48811340 106.88677979]
[240.38983154 108.60108185]
[255.29154968 110.31539154]
[270.20678711 111.90772247]
[285.13455200 113.37798309]
[301.49008179 108.91326141]
[310.30795288 123.39363098]
[298.83453369 135.87548828]
[283.66430664 128.30575562]
[268.73654175 126.83549500]
[261.76049805 129.31263733]
[253.57723999 125.21710205]
[238.67552185 123.50279999]
[223.77381897 121.78849792]
[208.87210083 120.07418823]
[197.40133667 129.50590515]
[182.26445007 127.97963715]
[172.44938660 115.88409424]
[157.54766846 114.16979218]
[142.64595032 112.45549011]
[127.74423218 110.74118042]
[122.41981506 122.65612030]
[111.94110107 131.83088684]
[97.74882507 136.04981995]
[82.21726990 133.85716248]
[84.66069794 148.65681458]
[87.10413361 163.45646667]
[89.54756165 178.25611877]
[104.58068085 178.21572876]
[119.42557526 180.58749390]
[133.69773865 185.30995178]
[147.02746582 192.26080322]
[159.06951904 201.25997925]
[169.51194763 212.07440186]
[178.08428955 224.42393494]
[184.56449890 237.98872375]
[188.78469849 252.41737366]
[190.63560486 267.33615112]
[190.06925964 282.35867310]
[187.10034180 297.09573364]
[181.80574036 311.16567993]
[174.32261658 324.20404053]
[164.84477234 335.87310791]
[153.61773682 345.87060547]
[140.93229675 353.93756104]
[127.11705017 359.86505127]
[112.52983856 363.49951172]
[97.54850769 364.74682617]
[82.56110382 363.57467651]
[67.95584106 360.01342773]
[54.11103439 354.15533447]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 168]
[15 167]
[16 166]
[17 165]
[30 54]
[31 53]
[32 52]
[33 51]
[34 50]
[35 49]
[55 127]
[56 126]
[58 124]
[59 123]
[60 122]
[61 121]
[62 120]
[63 119]
[69 112]
[70 111]
[72 109]
[73 108]
[76 105]
[77 104]
[78 103]
[79 102]
[80 101]
[81 100]
[82 99]
[134 161]
[135 160]
[136 159]
[137 158]
[140 155]
[141 154]
[142 153]
[143 152]
[144 150]
[145 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
