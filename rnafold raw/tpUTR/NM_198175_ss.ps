%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 03:08:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGGAGGGCAGACCACAUUGCUUUUCACAUCCAUUUCCCCUCCUUCCCAUGGGCAGAGGACCAGGCUGUAGGAAAUCUAGUUAUUUACAGGAACUUCAUCAUAAUUUGGAGGGAAGCUCUUGGAGCUGUGAGUUCUCCCUGUACAGUGUUACCAUCCCCGACCAUCUGAUUAAAAUGCUUCCUCCCAGCAUAGGAUUCAUUGAGUUGGUUACUUCAUAUUGUUGCAUUGCUUUUUUUUCCUUCU\
) } def
/len { sequence length } bind def

/coor [
[90.07748413 410.68698120]
[92.51507568 391.45919800]
[92.70741272 376.46041870]
[92.89975739 361.46166992]
[93.09209442 346.46289062]
[93.28443146 331.46411133]
[93.47676849 316.46536255]
[93.66910553 301.46658325]
[86.09563446 288.64114380]
[94.00924683 274.94131470]
[94.20158386 259.94256592]
[94.39392090 244.94378662]
[80.92469788 235.54187012]
[75.66870117 219.80392456]
[80.88862610 203.87881470]
[94.71273804 194.11389160]
[94.71273804 179.11389160]
[86.97544098 166.38662720]
[94.71273804 152.58645630]
[94.71273804 137.58645630]
[94.71273804 122.58644867]
[82.52120209 113.84765625]
[68.31596375 118.66545105]
[54.11072540 123.48325348]
[39.90548706 128.30105591]
[25.70024681 133.11885071]
[11.52618885 138.02761841]
[-2.61610699 143.02716064]
[-16.75840187 148.02671814]
[-27.19061089 159.92123413]
[-41.76900101 156.86839294]
[-55.91129684 161.86795044]
[-60.42023849 176.59803772]
[-72.59583282 185.74179077]
[-87.64296722 185.96023560]
[-99.78804016 177.37913513]
[-113.93033600 182.37867737]
[-128.07263184 187.37823486]
[-138.50483704 199.27275085]
[-153.08322144 196.21990967]
[-167.22552490 201.21946716]
[-181.33547974 206.30957031]
[-195.41250610 211.49005127]
[-209.48953247 216.67053223]
[-215.88928223 231.12109375]
[-230.66258240 236.73583984]
[-245.04466248 230.18365479]
[-250.50291443 215.35183716]
[-243.79904175 201.03982544]
[-228.91033936 195.73869324]
[-214.66999817 202.59350586]
[-200.59297180 197.41302490]
[-186.51594543 192.23254395]
[-181.33593750 186.98484802]
[-172.22506714 187.07716370]
[-158.08277893 182.07762146]
[-148.66212463 170.54069519]
[-133.07217407 173.23593140]
[-118.92987823 168.23638916]
[-104.78758240 163.23684692]
[-100.73406219 148.92926025]
[-88.89284515 139.64219666]
[-73.67568970 139.10214233]
[-60.91084290 147.72564697]
[-46.76854706 142.72610474]
[-37.34789276 131.18917847]
[-21.75794983 133.88441467]
[-7.61565447 128.88487244]
[6.52664089 123.88532257]
[11.77351093 118.70446777]
[20.88245010 118.91360474]
[35.08768845 114.09580994]
[49.29293060 109.27801514]
[63.49816895 104.46021271]
[77.70340729 99.64241791]
[62.92736053 97.06008148]
[48.05973434 99.04846191]
[34.38069534 92.89347839]
[26.00775909 80.44783783]
[25.46126556 65.45780182]
[32.90571213 52.43550491]
[46.10025406 45.30078888]
[61.07320023 46.20127487]
[73.31755066 54.86590576]
[79.14762115 68.68637085]
[88.87001801 80.10894012]
[85.81408691 65.42353058]
[82.75814819 50.73811722]
[79.70221710 36.05270767]
[76.64628601 21.36729813]
[73.59034729 6.68188858]
[59.53710175 4.44012499]
[47.11740112 -2.44621086]
[37.81101227 -13.13335037]
[32.71881485 -26.32608414]
[32.43257904 -40.43471527]
[36.96627808 -53.76661301]
[45.75685883 -64.72927856]
[57.73406982 -72.02055359]
[54.86668777 -86.74394226]
[51.99930954 -101.46732330]
[49.13193130 -116.19071198]
[46.26454926 -130.91410828]
[36.03190994 -142.98072815]
[41.19359970 -156.95236206]
[38.32622147 -171.67575073]
[35.45884323 -186.39912415]
[25.22620201 -198.46575928]
[30.38789177 -212.43739319]
[27.52051353 -227.16078186]
[24.65313339 -241.88415527]
[21.78575325 -256.60754395]
[18.91837502 -271.33093262]
[9.95574760 -285.72216797]
[21.30346680 -298.31842041]
[36.54881668 -290.90118408]
[33.64176178 -274.19830322]
[36.50914001 -259.47491455]
[39.37652206 -244.75154114]
[42.24390030 -230.02815247]
[45.11127853 -215.30476379]
[55.13882446 -204.29124451]
[50.18222809 -189.26651001]
[53.04961014 -174.54312134]
[55.91698837 -159.81973267]
[65.94453430 -148.80621338]
[60.98793793 -133.78147888]
[63.85531616 -119.05809021]
[66.72269440 -104.33470917]
[69.59007263 -89.61132050]
[72.45745850 -74.88793182]
[88.04375458 -71.96877289]
[101.34625244 -63.26690674]
[110.30881500 -50.09196472]
[113.53255463 -34.44764709]
[110.49410248 -18.72699738]
[101.63032532 -5.34637976]
[88.27575684 3.62595487]
[91.33169556 18.31136513]
[94.38762665 32.99677658]
[97.44355774 47.68218613]
[100.49949646 62.36759567]
[103.55542755 77.05300140]
[115.34262085 86.32997131]
[130.33491516 85.84919739]
[145.32720947 85.36842346]
[160.31950378 84.88764954]
[175.31179810 84.40687561]
[190.30409241 83.92610168]
[194.45060730 70.22281647]
[202.61154175 58.48570251]
[213.97927856 49.85306549]
[227.43605042 45.15713120]
[241.66375732 44.84384918]
[255.27313232 48.93058395]
[266.93933105 57.00568390]
[275.53097534 68.26993561]
[280.21978760 81.61563110]
[295.21701050 81.32714081]
[310.21423340 81.03864288]
[325.21148682 80.75014496]
[340.20870972 80.46165466]
[355.20376587 80.07701111]
[370.19607544 79.59623718]
[379.55972290 70.74726868]
[392.04217529 70.64327240]
[400.96002197 78.79534149]
[415.95724487 78.50684357]
[430.95446777 78.21834564]
[437.36883545 64.41192627]
[449.09381104 54.79879379]
[463.76980591 51.24423218]
[478.47335815 54.40121078]
[490.29934692 63.59119797]
[496.93496704 76.94910431]
[511.93218994 76.66061401]
[526.92944336 76.37211609]
[541.92663574 76.08361816]
[556.92388916 75.79512787]
[566.60180664 63.51213455]
[581.92132568 60.37429428]
[595.64904785 67.86318970]
[601.30316162 82.44280243]
[596.21392822 97.22908020]
[582.78442383 105.24039459]
[567.35552979 102.69404602]
[557.21234131 90.79235077]
[542.21514893 91.08084869]
[527.21789551 91.36933899]
[512.22070312 91.65783691]
[497.22348022 91.94633484]
[491.10647583 105.54956055]
[479.64270020 115.18756104]
[465.07141113 118.90769196]
[450.26956177 115.92018127]
[438.18356323 106.76509094]
[431.24298096 93.21557617]
[416.24572754 93.50406647]
[401.24850464 93.79256439]
[386.71862793 103.65084076]
[370.67681885 94.58853149]
[355.68453979 95.06930542]
[349.11483765 98.41740417]
[340.49719238 95.45887756]
[325.49996948 95.74737549]
[310.50274658 96.03586578]
[295.50552368 96.32436371]
[280.50830078 96.61286163]
[275.59173584 111.58089447]
[265.82723999 123.97912598]
[252.38265991 132.29498291]
[236.87622070 135.50588989]
[221.18171692 133.20506287]
[207.20214844 125.65286255]
[196.63893127 113.74754333]
[190.78486633 98.91839600]
[175.79257202 99.39916992]
[160.80027771 99.87994385]
[145.80798340 100.36071777]
[130.81568909 100.84149170]
[115.82339478 101.32226562]
[116.96168518 108.06423187]
[115.04106903 115.61887360]
[109.71273804 122.58644867]
[109.71273804 137.58645630]
[109.71273804 152.58645630]
[117.45003510 166.38662720]
[109.71273804 179.11389160]
[109.71273804 194.11389160]
[121.42623138 201.35494995]
[127.98532867 213.34033203]
[127.77325439 226.89326477]
[120.95208740 238.48109436]
[109.39269257 245.13612366]
[109.20035553 260.13488770]
[109.00801849 275.13366699]
[116.56772614 289.03192139]
[108.66786957 301.65893555]
[108.47553253 316.65768433]
[108.28319550 331.65646362]
[108.09085846 346.65524292]
[107.89852142 361.65399170]
[107.70618439 376.65277100]
[107.51384735 391.65151978]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 244]
[3 243]
[4 242]
[5 241]
[6 240]
[7 239]
[8 238]
[10 236]
[11 235]
[12 234]
[16 229]
[17 228]
[19 226]
[20 225]
[21 224]
[22 75]
[23 74]
[24 73]
[25 72]
[26 71]
[27 69]
[28 68]
[29 67]
[31 65]
[32 64]
[36 60]
[37 59]
[38 58]
[40 56]
[41 55]
[42 53]
[43 52]
[44 51]
[86 143]
[87 142]
[88 141]
[89 140]
[90 139]
[91 138]
[99 131]
[100 130]
[101 129]
[102 128]
[103 127]
[105 125]
[106 124]
[107 123]
[109 121]
[110 120]
[111 119]
[112 118]
[113 117]
[144 221]
[145 220]
[146 219]
[147 218]
[148 217]
[149 216]
[158 208]
[159 207]
[160 206]
[161 205]
[162 204]
[163 202]
[164 201]
[167 199]
[168 198]
[169 197]
[175 191]
[176 190]
[177 189]
[178 188]
[179 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
