%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 06:44:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCUGGGCCUCCUCUCCAGAAUCAUGUGGAGGGGCCAGAGGCCUGCCAGACCCCCAGCUGGGCCCUGCUCACCCCUUGUUGCUGGGCUUGGAGGGGCCUCUUGAGGAACUUUUAAUUUGCAGGGGUGCCCGCUAUGGACGGGGCAUUCCAGCUGAGACACUGUGAUUUUAAAUUAAAUCUUUGUGGUCUUUGC\
) } def
/len { sequence length } bind def

/coor [
[110.84683990 159.91720581]
[125.84297943 159.57267761]
[117.02619934 147.43742371]
[108.20941925 135.30216980]
[99.39264679 123.16691589]
[95.61631012 120.85424805]
[92.64012909 117.99849701]
[82.87545776 129.38494873]
[73.11078644 140.77139282]
[63.34611511 152.15783691]
[60.12905884 160.72160339]
[53.33125305 163.64743042]
[43.38441467 174.87509155]
[33.43757629 186.10275269]
[23.49073601 197.33041382]
[13.54389572 208.55807495]
[10.18414116 224.01843262]
[-4.04705381 228.41415405]
[-13.99389362 239.64181519]
[-12.78959942 255.40014648]
[-23.14412498 267.33996582]
[-38.91431427 268.37759399]
[-50.74399567 257.89739990]
[-51.61482620 242.11714172]
[-41.01015854 230.39892578]
[-25.22155571 229.69497681]
[-15.27471542 218.46731567]
[-12.62642479 203.81002808]
[2.31623411 198.61123657]
[12.26307392 187.38357544]
[22.20991325 176.15591431]
[32.15675354 164.92825317]
[42.10359192 153.70059204]
[51.95966721 142.39317322]
[61.72433853 131.00672913]
[71.48901367 119.62027740]
[81.25368500 108.23382568]
[79.92628479 93.29267120]
[68.30721283 83.80599213]
[56.68813705 74.31931305]
[45.06906128 64.83263397]
[33.44998932 55.34595108]
[21.83091354 45.85927200]
[10.21183872 36.37258911]
[-1.40723586 26.88591003]
[-19.64127731 24.36117744]
[-25.23190117 7.73250723]
[-37.00230026 -1.56575847]
[-48.77269745 -10.86402416]
[-60.54309464 -20.16229057]
[-71.27143097 -18.27089500]
[-81.06511688 -22.51575470]
[-86.77932739 -31.27019501]
[-86.72541809 -41.50461960]
[-98.19015503 -51.17725372]
[-109.65489197 -60.84988785]
[-121.11962891 -70.52252197]
[-132.58436584 -80.19515228]
[-144.04910278 -89.86778259]
[-156.18435669 -98.68456268]
[-168.92637634 -106.59916687]
[-181.66839600 -114.51377106]
[-194.41041565 -122.42837524]
[-207.15243530 -130.34297180]
[-223.79756165 -133.56417847]
[-225.31007385 -150.45051575]
[-209.50236511 -156.57853699]
[-199.23782349 -143.08499146]
[-186.49580383 -135.17039490]
[-173.75378418 -127.25579071]
[-161.01176453 -119.34118652]
[-148.26974487 -111.42658234]
[-153.22616577 -125.58405304]
[-149.85383606 -140.20005798]
[-139.19561768 -150.75477600]
[-124.54740906 -153.98432922]
[-110.43897247 -148.88999939]
[-101.23316193 -137.04714966]
[-99.77674103 -122.11802673]
[-106.52009583 -108.71925354]
[-119.37792206 -100.99421692]
[-134.37646484 -101.33251953]
[-122.91172791 -91.65988922]
[-111.44699097 -81.98725128]
[-99.98226166 -72.31462097]
[-88.51752472 -62.64198685]
[-77.05278778 -52.96935654]
[-57.82730865 -50.97690201]
[-51.24482727 -31.93268776]
[-39.47443008 -22.63442230]
[-27.70403290 -13.33615589]
[-15.93363571 -4.03788996]
[-3.87845945 -5.13411379]
[6.00561953 2.52763462]
[8.07944489 15.26683521]
[19.69851875 24.75351524]
[31.31759453 34.24019623]
[42.93666840 43.72687531]
[54.55574417 53.21355820]
[66.17481995 62.70023727]
[77.79389191 72.18692017]
[89.41296387 81.67359924]
[83.76442719 67.77777100]
[72.42114258 57.96299362]
[64.36312103 45.31118393]
[60.26515579 30.88181496]
[60.47041702 15.88321877]
[64.96170807 1.57139552]
[73.36293030 -10.85516834]
[84.97055054 -20.35585785]
[98.81253815 -26.13507652]
[113.72975159 -27.70886612]
[128.47300720 -24.94543457]
[141.80767822 -18.07619476]
[152.61711121 -7.67638540]
[159.99612427 5.38310289]
[163.32678223 20.00865555]
[162.33015442 34.97550964]
[157.08973694 49.03032684]
[148.04432678 60.99614334]
[135.95143127 69.87092590]
[121.82509613 74.91120911]
[111.52790070 85.81844330]
[125.79374695 81.18318939]
[140.05960083 76.54793549]
[154.32543945 71.91268158]
[168.59129333 67.27742004]
[182.85713196 62.64216995]
[197.12298584 58.00691223]
[211.38883972 53.37165833]
[225.65467834 48.73640442]
[228.76943970 33.69666290]
[238.99876404 22.23992920]
[253.59098816 17.44800758]
[268.62088013 20.60989952]
[280.04550171 30.87507439]
[284.79165649 45.48225021]
[281.58267212 60.50216675]
[271.28173828 71.89454651]
[256.65975952 76.59489441]
[241.64997864 73.33884430]
[230.28993225 63.00225067]
[216.02409363 67.63750458]
[201.75823975 72.27275848]
[187.49238586 76.90802002]
[173.22654724 81.54327393]
[158.96069336 86.17852783]
[144.69485474 90.81378174]
[130.42900085 95.44903564]
[116.16315460 100.08428955]
[111.52790070 114.35013580]
[120.34468079 126.48538971]
[129.16145325 138.62065125]
[137.97824097 150.75590515]
[147.27650452 162.52630615]
[157.04116821 173.91275024]
[166.80584717 185.29919434]
[176.57051086 196.68563843]
[186.33518982 208.07209778]
[196.19125366 219.37951660]
[206.13810730 230.60717773]
[221.48306274 229.25129700]
[234.53153992 237.09927368]
[240.38754272 250.96186829]
[236.99836731 265.44122314]
[246.94520569 276.66888428]
[256.89202881 287.89654541]
[266.83886719 299.12420654]
[276.78573608 310.35186768]
[292.57431030 311.05578613]
[303.17898560 322.77401733]
[302.30816650 338.55429077]
[290.47848511 349.03448486]
[274.70828247 347.99685669]
[264.35375977 336.05703735]
[265.55807495 320.29870605]
[255.61122131 309.07104492]
[245.66438293 297.84338379]
[235.71754456 286.61572266]
[225.77070618 275.38806152]
[210.98840332 277.00723267]
[197.93275452 269.52297974]
[191.71482849 255.62365723]
[194.91044617 240.55401611]
[184.96359253 229.32635498]
[178.16578674 226.40052795]
[174.94873047 217.83676147]
[165.18406677 206.45031738]
[155.41938782 195.06387329]
[145.65472412 183.67741394]
[135.89006042 172.29096985]
[132.08354187 186.79995728]
[118.43443298 193.02102661]
[104.98641968 186.37640381]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 154]
[3 153]
[4 152]
[5 151]
[7 37]
[8 36]
[9 35]
[10 34]
[12 33]
[13 32]
[14 31]
[15 30]
[16 29]
[18 27]
[19 26]
[38 102]
[39 101]
[40 100]
[41 99]
[42 98]
[43 97]
[44 96]
[45 95]
[47 92]
[48 91]
[49 90]
[50 89]
[54 87]
[55 86]
[56 85]
[57 84]
[58 83]
[59 82]
[60 72]
[61 71]
[62 70]
[63 69]
[64 68]
[123 150]
[124 149]
[125 148]
[126 147]
[127 146]
[128 145]
[129 144]
[130 143]
[131 142]
[155 191]
[156 190]
[157 189]
[158 188]
[159 187]
[160 185]
[161 184]
[165 180]
[166 179]
[167 178]
[168 177]
[169 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
