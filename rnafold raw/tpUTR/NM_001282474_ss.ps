%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 10:51:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGUCUCCACUCACAGCCUGAAAUUCUCCUGUGUCCCAAACCCCAGGGGGCCCCAGCAGCUUCGAACCUACACCUGAGGGCUACCAGCAGGUGGCGCUCUGGCUUUGCACUGCAAAAACUGGGGACCAGCCCCCUUCUCCCACAAAUAAAGCCCAAUAAAGCCUGAGAAGUGAGGAAAGCCAUAUU\
) } def
/len { sequence length } bind def

/coor [
[112.97424316 250.36737061]
[98.20059967 247.77131653]
[84.85344696 240.92636108]
[74.12443542 230.44358826]
[66.97145844 217.25894165]
[64.03313446 202.54954529]
[65.57180786 187.62867737]
[71.45010376 173.82847595]
[81.14142609 162.38258362]
[84.93959045 147.87141418]
[88.73776245 133.36024475]
[92.53592682 118.84909058]
[82.24569702 129.76289368]
[71.95546722 140.67669678]
[61.66524124 151.59049988]
[51.37501144 162.50431824]
[53.31752777 175.84515381]
[47.30353165 187.69297791]
[35.73213196 193.81713867]
[22.93954659 192.17652893]
[12.46742630 202.91592407]
[5.73840952 218.47731018]
[-11.07760715 216.31909180]
[-13.65886307 199.56278992]
[1.72802699 192.44380188]
[12.20014763 181.70440674]
[11.26420021 164.92207336]
[22.97878265 152.40205383]
[40.46120453 152.21408081]
[50.75143433 141.30027771]
[61.04166412 130.38647461]
[71.33189392 119.47266388]
[81.62212372 108.55886078]
[69.83177185 117.83181000]
[55.13567352 120.83592987]
[40.65212250 116.93379211]
[29.45430374 106.95336914]
[23.91822624 93.01235199]
[25.21856499 78.06881714]
[33.07940674 65.29356384]
[45.83279800 57.39729691]
[60.77265930 56.05548859]
[74.72898865 61.55285263]
[84.74044800 72.72293091]
[88.68276215 87.19539642]
[86.92282867 72.29900360]
[85.16290283 57.40260696]
[83.40296936 42.50621033]
[81.64303589 27.60981178]
[79.88310242 12.71341610]
[78.12316895 -2.18298101]
[75.73932648 -16.99234581]
[72.73577118 -31.68855858]
[69.73222351 -46.38477325]
[66.72867584 -61.08098602]
[63.72512054 -75.77719879]
[56.85534668 -76.22303009]
[50.15619278 -77.78023529]
[43.80605698 -80.40520477]
[37.97368622 -84.02588654]
[32.81370544 -88.54382324]
[28.46249962 -93.83679199]
[25.03462791 -99.76213837]
[22.61979294 -106.16057587]
[21.28050613 -112.86053467]
[21.05046082 -119.68270111]
[21.93369484 -126.44483948]
[23.90453911 -132.96665955]
[26.90835190 -139.07464600]
[30.86304092 -144.60664368]
[35.66129684 -149.41613770]
[41.17351151 -153.37622070]
[47.25127029 -156.38285828]
[44.24771881 -171.07907104]
[33.90382004 -183.05047607]
[38.93595123 -197.06927490]
[35.93239975 -211.76548767]
[32.92885208 -226.46170044]
[22.58494759 -238.43309021]
[27.61708260 -252.45190430]
[24.61353111 -267.14810181]
[21.60997963 -281.84432983]
[18.60643005 -296.54052734]
[15.60287857 -311.23675537]
[12.59932804 -325.93295288]
[1.32302976 -337.83999634]
[6.25538492 -353.47979736]
[22.32240868 -356.76351929]
[32.99572754 -344.31311035]
[27.29554176 -328.93652344]
[30.29909134 -314.24029541]
[33.30264282 -299.54409790]
[36.30619431 -284.84786987]
[39.30974579 -270.15167236]
[42.31329346 -255.45545959]
[52.44236374 -244.53523254]
[47.62506485 -229.46525574]
[50.62861252 -214.76904297]
[53.63216400 -200.07283020]
[63.76123428 -189.15260315]
[58.94393539 -174.08262634]
[61.94748306 -159.38641357]
[70.04663086 -158.75086975]
[77.86653900 -156.54881287]
[85.76302338 -169.30206299]
[93.65950775 -182.05532837]
[101.55598450 -194.80857849]
[109.45246887 -207.56182861]
[112.64999390 -224.21151733]
[129.53417969 -225.74804688]
[135.68466187 -209.94906616]
[122.20572662 -199.66535950]
[114.30924225 -186.91209412]
[106.41275787 -174.15884399]
[98.51628113 -161.40557861]
[90.61979675 -148.65232849]
[103.93975830 -124.54478455]
[99.24874878 -97.25394440]
[78.42133331 -78.78074646]
[81.42488861 -64.08453369]
[84.42843628 -49.38832474]
[87.43198395 -34.69210815]
[90.43553925 -19.99589729]
[100.84239197 -30.79855347]
[115.79193878 -29.56935501]
[124.29449463 -17.21190453]
[120.09967041 -2.81039715]
[106.29115295 3.04835224]
[93.01956177 -3.94291377]
[94.77949524 10.95348263]
[96.53942871 25.84988022]
[98.29936218 40.74627686]
[100.05929565 55.64267349]
[101.81922913 70.53907013]
[103.57916260 85.43547058]
[111.83666992 86.84070587]
[119.18733215 93.06777954]
[122.86089325 103.33511353]
[135.54736328 111.33843994]
[148.23384094 119.34177399]
[160.98710632 127.23825073]
[173.80624390 135.02732849]
[186.62538147 142.81640625]
[198.47245789 133.38920593]
[212.80316162 128.59309387]
[227.88175964 128.98860168]
[241.88883972 134.50871277]
[253.14093018 144.46923828]
[260.29275513 157.65353394]
[262.49813843 172.46115112]
[259.50994873 187.10205078]
[272.32910156 194.89112854]
[286.58990479 188.77485657]
[301.71472168 192.24182129]
[311.88772583 203.95887756]
[313.19717407 219.42060852]
[305.13961792 232.68164062]
[290.81329346 238.64283752]
[275.72695923 235.01200867]
[265.68167114 223.18528748]
[264.54000854 207.71026611]
[251.72087097 199.92118835]
[240.10305786 209.31860352]
[225.94453430 214.18330383]
[210.94787598 213.90988159]
[196.92343140 208.51203918]
[185.57081604 198.62326050]
[178.27287292 185.42248535]
[175.92730713 170.49365234]
[178.83630371 155.63554382]
[166.01716614 147.84646606]
[153.19802856 140.05738831]
[145.83367920 139.26933289]
[140.23051453 132.02824402]
[127.54403687 124.02491760]
[114.85755920 116.02159119]
[122.15399170 129.12739563]
[129.45042419 142.23320007]
[136.74685669 155.33900452]
[148.98770142 164.00857544]
[158.12072754 175.90763855]
[163.33053589 189.97384644]
[164.15196228 204.95133972]
[160.51168823 219.50291443]
[152.73472595 232.32940674]
[141.51539612 242.28564453]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 33]
[13 32]
[14 31]
[15 30]
[16 29]
[20 26]
[21 25]
[45 135]
[46 134]
[47 133]
[48 132]
[49 131]
[50 130]
[51 129]
[52 123]
[53 122]
[54 121]
[55 120]
[56 119]
[73 102]
[74 101]
[76 99]
[77 98]
[78 97]
[80 95]
[81 94]
[82 93]
[83 92]
[84 91]
[85 90]
[104 116]
[105 115]
[106 114]
[107 113]
[108 112]
[138 176]
[139 175]
[140 174]
[141 172]
[142 171]
[143 170]
[151 162]
[152 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
