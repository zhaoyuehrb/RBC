%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 11:20:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCCUGACCCCCUGGGCUCUAAAGAGGAAUGUCUGCUGUUGCACAUCUGGCUGAGGCCACCUGCCCCGAUCCUGCCAUCUCUGCAUCGCCCCCUGCUGCCUUCAGCCUUCCCUGGGCCCUGAAUAAACACCACAGCCAGUUUCCUUCUCAUUCUUUUCUUUGGGGUUCAGGAGGAAAAACACAGUCCUAGGGACAAAAGCCAGGUCCACAGCAGUCAUUUUUAAAAUAAAGUUAUUUAAUAGUCUCCA\
) } def
/len { sequence length } bind def

/coor [
[96.99122620 628.08685303]
[89.90092468 627.41052246]
[85.98830414 641.89123535]
[82.07568359 656.37200928]
[78.16305542 670.85272217]
[74.25043488 685.33343506]
[84.09483337 697.32788086]
[84.97533417 712.82000732]
[76.55336761 725.85266113]
[62.06734848 731.41455078]
[47.08744812 727.36706543]
[37.37374496 715.26647949]
[36.66135406 699.76574707]
[45.22420883 686.82525635]
[59.76971054 681.42083740]
[63.68233490 666.94006348]
[67.59495544 652.45935059]
[71.50757599 637.97863770]
[75.42020416 623.49792480]
[54.93206406 610.49615479]
[40.64166260 590.85644531]
[34.56242371 567.31719971]
[37.56148148 543.16796875]
[49.23601913 521.79022217]
[67.96727753 506.18350220]
[91.14500427 498.54479980]
[90.95651245 483.54598999]
[90.76802063 468.54714966]
[90.57952881 453.54833984]
[90.39103699 438.54953003]
[90.20255280 423.55072021]
[90.01406097 408.55191040]
[82.11743927 395.92285156]
[89.68071747 382.02655029]
[89.49222565 367.02774048]
[89.30373383 352.02893066]
[89.11524200 337.03009033]
[88.92675018 322.03128052]
[88.73825836 307.03247070]
[88.54976654 292.03366089]
[85.33132172 285.40179443]
[88.45433807 276.84545898]
[80.62937164 270.32238770]
[77.61013031 260.36349487]
[80.61935425 250.17274475]
[88.89866638 243.16795349]
[89.27561951 228.17268372]
[89.65257263 213.17741394]
[90.02952576 198.18215942]
[90.40647888 183.18688965]
[90.78342438 168.19163513]
[91.16037750 153.19636536]
[91.53733063 138.20111084]
[73.86595917 133.30575562]
[59.15391922 120.14352417]
[51.25200653 100.52861023]
[36.82159042 96.43433380]
[22.39117622 92.34005737]
[13.36044693 100.02534485]
[1.86144698 102.38462830]
[-9.23721123 98.94703674]
[-17.22322845 90.67337799]
[-20.20335388 79.69110870]
[-34.52632141 75.23548889]
[-48.84928894 70.77986145]
[-61.27537537 79.88472748]
[-76.50205231 79.92640686]
[-88.68941498 71.09848785]
[-93.28657532 56.95620728]
[-107.60954285 52.50058365]
[-121.93251038 48.04496002]
[-135.80462646 55.61728287]
[-150.94436646 51.08256531]
[-158.36959839 37.13117218]
[-153.67506409 22.04021645]
[-139.64595032 14.76289654]
[-124.60547638 19.61671638]
[-117.47688293 33.72198868]
[-103.15391541 38.17761230]
[-88.83094788 42.63323593]
[-77.02256012 33.59443283]
[-61.97806931 33.23786926]
[-49.46204376 41.90980911]
[-44.39366531 56.45689392]
[-30.07069778 60.91252136]
[-15.74772930 65.36814117]
[-0.05994236 55.89837646]
[17.86860275 61.01558685]
[26.48545456 77.90963745]
[40.91587067 82.00391388]
[55.34628677 86.09819794]
[59.75467300 80.03057098]
[47.61956406 71.21359253]
[56.43674850 59.07862854]
[68.57145691 67.89531708]
[72.97984314 61.82768631]
[64.62670898 49.36874771]
[56.27357483 36.90980911]
[47.92044067 24.45087051]
[32.97057724 17.71042252]
[31.60249710 1.36843991]
[45.22356033 -7.76384544]
[59.82158661 -0.29192141]
[60.37937927 16.09773636]
[68.73251343 28.55667496]
[77.08564758 41.01561356]
[85.43878174 53.47455215]
[98.16475677 54.49400330]
[109.35029602 58.71036148]
[118.26595306 65.39803314]
[127.68132782 53.72109604]
[137.09669495 42.04416275]
[146.51206970 30.36722755]
[155.92742920 18.69029236]
[165.34280396 7.01335859]
[174.75817871 -4.66357613]
[184.17355347 -16.34051132]
[183.57434082 -29.20813751]
[191.63574219 -38.73659897]
[203.62977600 -40.18045044]
[213.19114685 -51.73814774]
[222.75250244 -63.29584885]
[218.49942017 -69.10183716]
[215.21002197 -75.49751282]
[212.96398926 -82.32443237]
[211.81521606 -89.41374207]
[211.79042053 -96.59038544]
[212.88864136 -103.67737579]
[215.08119202 -110.50021362]
[218.31251526 -116.89112854]
[222.50149536 -122.69325256]
[227.54351807 -127.76445007]
[233.31315613 -131.98080444]
[239.66716003 -135.23960876]
[246.44812012 -137.46195984]
[253.48835754 -138.59454346]
[260.61398315 -138.61103821]
[267.64929199 -137.51260376]
[274.42102051 -135.32794189]
[280.76272583 -132.11241150]
[286.51873779 -127.94674683]
[297.95538330 -137.65258789]
[309.39199829 -147.35842896]
[320.82864380 -157.06427002]
[332.26528931 -166.77011108]
[343.70193481 -176.47595215]
[355.13854980 -186.18179321]
[366.57519531 -195.88761902]
[378.01184082 -205.59346008]
[376.98257446 -220.96379089]
[385.10623169 -233.84242249]
[399.09020996 -239.40232849]
[413.49423218 -235.70602417]
[424.93084717 -245.41186523]
[436.36749268 -255.11769104]
[447.80413818 -264.82354736]
[448.84365845 -280.59359741]
[460.78472900 -290.94668579]
[476.54290771 -289.74047852]
[486.76916504 -277.69064331]
[485.39645386 -261.94607544]
[473.23913574 -251.84777832]
[457.50997925 -253.38690186]
[446.07333374 -243.68106079]
[434.63668823 -233.97521973]
[423.20007324 -224.26937866]
[424.50451660 -209.45599365]
[416.74435425 -196.56245422]
[402.71597290 -190.64147949]
[387.71768188 -194.15682983]
[376.28103638 -184.45098877]
[364.84439087 -174.74514771]
[353.40774536 -165.03930664]
[341.97113037 -155.33346558]
[330.53448486 -145.62762451]
[319.09783936 -135.92179871]
[307.66122437 -126.21595001]
[296.22457886 -116.51010895]
[302.71524048 -93.82817078]
[296.90249634 -70.89673615]
[280.30078125 -53.95358276]
[257.36837769 -47.64112854]
[234.31019592 -53.73448944]
[224.74884033 -42.17678833]
[215.18748474 -30.61909103]
[213.18438721 -13.17396355]
[195.85047913 -6.92513990]
[186.43510437 4.75179434]
[177.01974487 16.42872810]
[167.60437012 28.10566330]
[158.18899536 39.78259659]
[148.77363586 51.45953369]
[139.35826111 63.13646698]
[129.94288635 74.81340027]
[137.61576843 89.22989655]
[138.73553467 105.52267456]
[133.10710144 120.85333252]
[121.71100616 132.55108643]
[106.53259277 138.57806396]
[106.15563965 153.57331848]
[105.77868652 168.56858826]
[105.40174103 183.56384277]
[105.02478790 198.55911255]
[104.64783478 213.55436707]
[104.27088165 228.54963684]
[103.89393616 243.54489136]
[114.30718994 260.82467651]
[103.45433807 276.84545898]
[103.54858398 291.84515381]
[103.73707581 306.84396362]
[103.92556763 321.84280396]
[104.11405945 336.84161377]
[104.30255127 351.84042358]
[104.49103546 366.83923340]
[104.67952728 381.83804321]
[112.58963013 395.53991699]
[105.01287079 408.36340332]
[105.20136261 423.36221313]
[105.38985443 438.36102295]
[105.57834625 453.35986328]
[105.76683807 468.35867310]
[105.95532990 483.35748291]
[106.14382172 498.35629272]
[113.22102356 499.49566650]
[120.12900543 501.40390015]
[126.78450775 504.05764771]
[133.10736084 507.42459106]
[139.02145386 511.46371460]
[144.45564270 516.12603760]
[149.34460449 521.35504150]
[153.62959290 527.08740234]
[157.25921631 533.25366211]
[160.18998718 539.77935791]
[162.38687134 546.58557129]
[163.82369995 553.59002686]
[164.48352051 560.70819092]
[164.35868835 567.85412598]
[163.45111084 574.94165039]
[161.77204895 581.88531494]
[159.34214783 588.60137939]
[156.19104004 595.00897217]
[152.35707092 601.03094482]
[147.88679504 606.59484863]
[142.83444214 611.63372803]
[137.26121521 616.08703613]
[131.23455811 619.90142822]
[124.82740021 623.03106689]
[118.11718750 625.43859863]
[111.18500519 627.09527588]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 19]
[3 18]
[4 17]
[5 16]
[6 15]
[26 223]
[27 222]
[28 221]
[29 220]
[30 219]
[31 218]
[32 217]
[34 215]
[35 214]
[36 213]
[37 212]
[38 211]
[39 210]
[40 209]
[42 208]
[46 206]
[47 205]
[48 204]
[49 203]
[50 202]
[51 201]
[52 200]
[53 199]
[56 91]
[57 90]
[58 89]
[63 86]
[64 85]
[65 84]
[69 80]
[70 79]
[71 78]
[96 107]
[97 106]
[98 105]
[99 104]
[110 194]
[111 193]
[112 192]
[113 191]
[114 190]
[115 189]
[116 188]
[117 187]
[120 185]
[121 184]
[122 183]
[141 178]
[142 177]
[143 176]
[144 175]
[145 174]
[146 173]
[147 172]
[148 171]
[149 170]
[153 166]
[154 165]
[155 164]
[156 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
