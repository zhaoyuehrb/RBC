%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 21:58:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUUUUUCCUGGGCAACUCUACAGUCCCUCCCUCCUUUCGGAAGGUGAAGGAUACUGGGUUUUUAGAUGCCUUGUCCAUCCUGUCUGGUUGCAAUGUUUUGCUCCCAGAAGAGAAUCAGAUCAUCAUGUGGGGAUUACCAUUGUUCCUGGAGUACUCCUACCCUUAGUUGAAUUUCCUUAUUAAAGUUAUAUUUUUCUAUAAGACCCUGACA\
) } def
/len { sequence length } bind def

/coor [
[111.15237427 245.22705078]
[96.56575012 249.35090637]
[81.44859314 248.23403931]
[67.62637329 242.01133728]
[56.76819229 231.43420410]
[50.18523026 217.77987671]
[48.67240906 202.69720459]
[52.41241074 188.00747681]
[60.95360947 175.48454285]
[73.26461792 166.64062500]
[87.85881805 162.54365540]
[88.96400452 147.58442688]
[90.06919861 132.62519836]
[70.22819519 133.82611084]
[48.91263580 122.98634338]
[35.40496826 129.50883484]
[21.89729881 136.03132629]
[8.38962936 142.55381775]
[-5.11803961 149.07630920]
[-6.54860115 162.78471375]
[-14.50247955 173.90815735]
[-26.81536674 179.60369873]
[-40.22657776 178.48088074]
[-51.24236679 170.93952942]
[-64.84476471 177.26210022]
[-78.44715881 183.58465576]
[-92.04956055 189.90721130]
[-101.30261993 202.74043274]
[-116.10535431 201.08863831]
[-129.70774841 207.41119385]
[-143.26315308 213.83389282]
[-156.77081299 220.35638428]
[-170.27848816 226.87887573]
[-183.73768616 233.50080872]
[-197.14768982 240.22180176]
[-205.71365356 254.20594788]
[-222.09799194 253.50924683]
[-229.44590759 238.84841919]
[-220.19848633 225.30525208]
[-203.86869812 226.81179810]
[-190.45869446 220.09080505]
[-185.88807678 214.28440857]
[-176.80097961 213.37121582]
[-163.29330444 206.84872437]
[-149.78564453 200.32623291]
[-145.12988281 194.58787537]
[-136.03030396 193.80880737]
[-122.42790985 187.48623657]
[-114.14778900 175.10525513]
[-98.37212372 176.30480957]
[-84.76972198 169.98225403]
[-71.16732788 163.65969849]
[-57.56492615 157.33714294]
[-54.93003845 141.13349915]
[-43.03659821 129.57792664]
[-26.43426704 127.36705017]
[-11.64052963 135.56863403]
[1.86713922 129.04614258]
[15.37480831 122.52365875]
[28.88247681 116.00116730]
[42.39014435 109.47867584]
[42.88756943 101.99518585]
[27.92061234 101.00009918]
[28.91595268 86.03315735]
[43.88241196 87.02821350]
[44.37983322 79.54473114]
[31.85427666 71.29183197]
[19.32871628 63.03892899]
[6.80315781 54.78602600]
[-8.12839985 59.43173218]
[-22.53279686 53.34507751]
[-29.60871506 39.39999390]
[-26.01512527 24.18092155]
[-13.44880867 14.87384415]
[2.15680408 15.87327766]
[13.43321991 26.70731926]
[15.05605888 42.26046753]
[27.58161736 50.51337051]
[40.10717773 58.76626968]
[52.63273621 67.01917267]
[58.64131165 62.53062820]
[56.87519455 47.63496399]
[70.65846252 53.55354309]
[76.66703796 49.06500244]
[72.30615234 34.71290588]
[67.94526672 20.36080742]
[63.58438492 6.00871134]
[59.22349930 -8.34338474]
[45.56283188 -15.82830429]
[41.34472656 -30.44549370]
[48.56464005 -43.42272186]
[44.20375443 -57.77481842]
[39.84286499 -72.12691498]
[35.48197937 -86.47901154]
[23.14448738 -97.28263092]
[26.59693718 -113.31424713]
[42.28774643 -118.08190155]
[54.07555771 -106.68104553]
[49.83407593 -90.83989716]
[54.19496155 -76.48780060]
[58.55585098 -62.13570404]
[62.91673660 -47.78360748]
[76.13587952 -41.01678848]
[80.76288605 -26.52384377]
[73.57559204 -12.70427132]
[77.93647766 1.64782572]
[82.29736328 15.99992180]
[86.65824890 30.35201836]
[91.01913452 44.70411682]
[124.96940613 59.52650833]
[137.29637146 88.28963470]
[150.60578918 81.37158203]
[163.91520691 74.45352936]
[177.22462463 67.53547668]
[185.90097046 54.30552673]
[200.76226807 55.30093002]
[214.07168579 48.38287735]
[227.38110352 41.46482849]
[240.69052124 34.54677582]
[238.78088379 21.24380112]
[241.05900574 8.02206516]
[247.28941345 -3.83439302]
[256.85345459 -13.17851543]
[268.81082153 -19.11119461]
[281.99185181 -21.06777573]
[295.11203003 -18.87177467]
[306.89712524 -12.75069618]
[316.20693970 -3.31255293]
[329.71459961 -9.83504295]
[343.22229004 -16.35753441]
[356.72994995 -22.88002396]
[370.23760986 -29.40251350]
[383.69680786 -36.02444077]
[397.05688477 -42.84415054]
[410.36630249 -49.76220322]
[423.67572021 -56.68025589]
[429.84570312 -63.41380310]
[437.23284912 -63.60055161]
[450.64285278 -70.32155609]
[464.05285645 -77.04255676]
[467.49533081 -92.29651642]
[479.96871948 -101.72776031]
[495.58346558 -100.88314819]
[506.96679688 -90.16146851]
[508.74380493 -74.62518311]
[500.07543945 -61.61004257]
[485.05468750 -57.26139832]
[470.77383423 -63.63255310]
[457.36386108 -56.91155243]
[443.95385742 -50.19055176]
[430.59378052 -43.37083817]
[417.28436279 -36.45278549]
[403.97494507 -29.53473473]
[399.49044800 -23.66155815]
[390.41781616 -22.61443901]
[385.84719849 -16.80804062]
[376.76010132 -15.89484501]
[363.25244141 -9.37235451]
[349.74478149 -2.84986472]
[336.23709106 3.67262554]
[322.72943115 10.19511604]
[324.07199097 26.79321098]
[318.92449951 42.66861343]
[308.04983521 55.37672424]
[293.09515381 62.94926453]
[276.34228516 64.19911194]
[260.35971069 58.90632629]
[247.60856628 47.85619354]
[234.29914856 54.77424622]
[220.98974609 61.69229507]
[207.68032837 68.61034393]
[199.95594788 81.34547424]
[184.14266968 80.84489441]
[170.83325195 87.76294708]
[157.52383423 94.68099976]
[144.21441650 101.59904480]
[141.13903809 116.28039551]
[150.55302429 127.95844269]
[159.96702576 139.63648987]
[169.38101196 151.31452942]
[178.79501343 162.99258423]
[196.12130737 169.23010254]
[198.14807129 186.66230774]
[207.73327637 198.20024109]
[217.31848145 209.73817444]
[226.90368652 221.27610779]
[242.66197205 222.48117065]
[252.88908386 234.53030396]
[251.51747131 250.27496338]
[239.36088562 260.37411499]
[223.63162231 258.83612061]
[213.66154480 246.57344055]
[215.36575317 230.86131287]
[205.78054810 219.32337952]
[196.19534302 207.78544617]
[186.61013794 196.24751282]
[174.59878540 194.82252502]
[166.51870728 185.28985596]
[167.11695862 172.40657043]
[157.70297241 160.72853088]
[148.28897095 149.05047607]
[138.87498474 137.37243652]
[129.46099854 125.69438934]
[117.57092285 132.10342407]
[105.02842712 133.73039246]
[103.92324066 148.68962097]
[102.81804657 163.64884949]
[116.65171051 169.84608459]
[127.52935791 180.40318298]
[134.13748169 194.04534912]
[135.67808533 209.12521362]
[131.96516418 223.82180786]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 207]
[12 206]
[13 205]
[15 61]
[16 60]
[17 59]
[18 58]
[19 57]
[24 53]
[25 52]
[26 51]
[27 50]
[29 48]
[30 47]
[31 45]
[32 44]
[33 43]
[34 41]
[35 40]
[66 80]
[67 79]
[68 78]
[69 77]
[84 109]
[85 108]
[86 107]
[87 106]
[88 105]
[91 102]
[92 101]
[93 100]
[94 99]
[111 176]
[112 175]
[113 174]
[114 173]
[116 171]
[117 170]
[118 169]
[119 168]
[128 161]
[129 160]
[130 159]
[131 158]
[132 157]
[133 155]
[134 153]
[135 152]
[136 151]
[138 150]
[139 149]
[140 148]
[177 203]
[178 202]
[179 201]
[180 200]
[181 199]
[183 196]
[184 195]
[185 194]
[186 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
