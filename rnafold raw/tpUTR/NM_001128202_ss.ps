%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 01:32:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCUCCCAGAAGAUUUUUGAUGAAUUUUGUAAUACUGGUAUUUCAUCAGACAUCCUAAAAGUAUAUGUUUUCUGAUCCAGCACCACUAUUUAAUUUUUAAAGUACUUUUAUGAUUUUUAUAAGGUCAAAAAACAUUCAAAUCCUUGUGAAAUGAAUUUGUGAUGACAUACGCAUGUGUAAAUAAACUUUUCAGAUGGCCACAUUUA\
) } def
/len { sequence length } bind def

/coor [
[84.26673889 144.30374146]
[86.57949829 159.12437439]
[73.19891357 165.90374756]
[62.61653519 155.27296448]
[69.45679474 141.92349243]
[71.83702850 127.11355591]
[74.21726990 112.30361176]
[66.81230164 111.11348724]
[65.77325439 126.90054321]
[52.34753799 133.35031128]
[44.16840744 145.92416382]
[35.98928070 158.49801636]
[27.81015015 171.07186890]
[19.63101959 183.64573669]
[11.45189095 196.21958923]
[3.27276134 208.79344177]
[5.17633867 224.72315979]
[-6.19327116 236.04179382]
[-22.11427498 234.06666565]
[-30.37344360 220.31291199]
[-24.63504791 205.33123779]
[-9.30109406 200.61431885]
[-1.12196469 188.04045105]
[7.05716467 175.46659851]
[15.23629379 162.89274597]
[23.41542435 150.31889343]
[31.59455299 137.74504089]
[39.77368164 125.17118073]
[40.22770309 110.28349304]
[54.23844147 102.93436432]
[74.12953186 86.23695374]
[93.56539917 88.99081421]
[94.24811554 74.00636292]
[94.93083191 59.02190781]
[95.61355591 44.03745270]
[96.18254852 29.04824638]
[96.63777924 14.05515671]
[96.97922516 -0.94095677]
[97.20687103 -15.93922901]
[97.43451691 -30.93750191]
[97.66215515 -45.93577576]
[90.13518524 -59.85177994]
[98.06474304 -72.46016693]
[98.29238892 -87.45843506]
[98.52002716 -102.45671082]
[98.74767303 -117.45497894]
[98.97531128 -132.45324707]
[99.20295715 -147.45152283]
[91.67597961 -161.36753845]
[99.60554504 -173.97592163]
[88.95601654 -183.95414734]
[88.07125092 -198.96286011]
[79.32830048 -211.15142822]
[70.58535767 -223.33998108]
[56.25464249 -230.04379272]
[55.12348557 -244.89538574]
[46.38053894 -257.08395386]
[37.63759232 -269.27249146]
[28.89464569 -281.46105957]
[20.15169716 -293.64959717]
[11.40875053 -305.83816528]
[2.66580367 -318.02673340]
[-6.07714319 -330.21527100]
[-14.82009029 -342.40383911]
[-28.28184891 -335.71224976]
[-42.64272690 -331.26687622]
[-57.53073883 -329.18283081]
[-72.56025696 -329.51416016]
[-87.34197998 -332.25219727]
[-101.49301910 -337.32608032]
[-114.64683533 -344.60433960]
[-126.46270752 -353.89849854]
[-136.63458252 -364.96780396]
[-144.89897156 -377.52551270]
[-151.04182434 -391.24633789]
[-154.90400696 -405.77493286]
[-156.38549805 -420.73492432]
[-155.44792175 -435.73883057]
[-152.11555481 -450.39801025]
[-146.47471619 -464.33273315]
[-138.67150879 -477.18209839]
[-128.90806580 -488.61328125]
[-117.43729401 -498.33013916]
[-104.55628967 -506.08099365]
[-90.59871674 -511.66510010]
[-75.92610168 -514.93780518]
[-60.91851044 -515.81439209]
[-45.96466827 -514.27203369]
[-31.45191956 -510.35076904]
[-17.75617599 -504.15216064]
[-5.23219347 -495.83676147]
[5.79562855 -485.61993408]
[15.04164314 -473.76635742]
[22.26635551 -460.58303833]
[27.28262711 -446.41146851]
[29.96052742 -431.61874390]
[30.23069000 -416.58801270]
[28.08611679 -401.70858765]
[23.58235931 -387.36590576]
[16.83607483 -373.93148804]
[8.02200794 -361.75329590]
[-2.63153553 -351.14678955]
[6.11141157 -338.95822144]
[14.85435867 -326.76965332]
[23.59730530 -314.58111572]
[32.34025192 -302.39254761]
[41.08319855 -290.20401001]
[49.82614899 -278.01544189]
[58.56909561 -265.82690430]
[67.31204224 -253.63833618]
[81.01740265 -247.80632019]
[82.77391052 -232.08291626]
[91.51686096 -219.89436340]
[100.25980377 -207.70581055]
[115.12009430 -205.66331482]
[126.82726288 -215.04106140]
[138.53442383 -224.41882324]
[150.24159241 -233.79656982]
[161.94876099 -243.17431641]
[173.65592957 -252.55207825]
[185.36309814 -261.92980957]
[197.07026672 -271.30758667]
[208.77743530 -280.68533325]
[220.48460388 -290.06307983]
[215.34835815 -304.30728149]
[215.11799622 -319.44750977]
[219.81851196 -333.84136963]
[228.94000244 -345.92761230]
[241.49305725 -354.39517212]
[256.11602783 -358.32553101]
[271.22268677 -357.29241943]
[285.17440796 -351.40783691]
[296.45779419 -341.31011963]
[303.84890747 -328.09460449]
[306.54605103 -313.19479370]
[304.25662231 -298.22692871]
[297.22894287 -284.81457520]
[286.22537231 -274.41265869]
[272.43948364 -268.14944458]
[257.36663818 -266.70437622]
[242.64186096 -270.23413086]
[229.86235046 -278.35589600]
[218.15518188 -268.97814941]
[206.44801331 -259.60040283]
[194.74085999 -250.22265625]
[183.03369141 -240.84490967]
[171.32652283 -231.46714783]
[159.61935425 -222.08940125]
[147.91218567 -212.71165466]
[136.20501709 -203.33389282]
[124.49784851 -193.95614624]
[139.25852966 -196.62489319]
[151.99830627 -188.70666504]
[156.13958740 -174.28965759]
[149.54421997 -160.81742859]
[135.61741638 -155.24569702]
[121.54961395 -160.45115662]
[114.60381317 -173.74827576]
[122.14707184 -160.90504456]
[114.20123291 -147.22387695]
[113.97358704 -132.22561646]
[113.74594116 -117.22734070]
[113.51830292 -102.22906494]
[113.29065704 -87.23079681]
[113.06301117 -72.23252106]
[120.60626984 -59.38928986]
[112.66043091 -45.70812988]
[112.43278503 -30.70985985]
[112.20514679 -15.71158600]
[111.97750092 -0.71331388]
[115.02016449 6.02456284]
[111.63086700 14.51039028]
[111.17563629 29.50348091]
[114.11569977 36.28675842]
[110.59800720 44.72016907]
[109.91529083 59.70462418]
[109.23257446 74.68907928]
[108.54985046 89.67353821]
[114.42885590 75.87363434]
[125.26982117 65.50669098]
[139.31861877 60.25014877]
[154.30207825 60.95453644]
[167.79576111 67.50588989]
[177.61634827 78.84415436]
[182.17477417 93.13473511]
[180.73348999 108.06533051]
[173.52568054 121.22008514]
[161.71762085 130.47047424]
[147.21992493 134.31974792]
[132.37840271 132.14505005]
[119.59451294 124.29826355]
[110.93569946 112.04668427]
[114.76298523 126.55019379]
[118.59027100 141.05371094]
[122.41755676 155.55722046]
[126.24483490 170.06072998]
[138.17446899 181.31311035]
[134.13166809 197.20611572]
[118.27531433 201.39039612]
[106.91707611 189.56152344]
[111.74132538 173.88801575]
[107.91403961 159.38450623]
[104.08675385 144.88099670]
[100.25946808 130.37748718]
[96.43218994 115.87397003]
[89.02721405 114.68384552]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 30]
[10 28]
[11 27]
[12 26]
[13 25]
[14 24]
[15 23]
[16 22]
[32 178]
[33 177]
[34 176]
[35 175]
[36 173]
[37 172]
[38 170]
[39 169]
[40 168]
[41 167]
[43 165]
[44 164]
[45 163]
[46 162]
[47 161]
[48 160]
[50 158]
[52 114]
[53 113]
[54 112]
[56 110]
[57 109]
[58 108]
[59 107]
[60 106]
[61 105]
[62 104]
[63 103]
[64 102]
[115 151]
[116 150]
[117 149]
[118 148]
[119 147]
[120 146]
[121 145]
[122 144]
[123 143]
[124 142]
[192 205]
[193 204]
[194 203]
[195 202]
[196 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
