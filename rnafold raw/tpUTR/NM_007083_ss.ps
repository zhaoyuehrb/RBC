%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 23:30:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCACAUUUAUAUGUUUAGAAACAUGUAGACUAACGAAUGACAUAAGAAAUAGUGGACAUUUUGGAUUGAUUAAACAUCUGACUGUGAUUUUCUAAUGUAUAUGAUUUCCAUGAAGAAAUUUUGUUUCUAAACAUGCACAUUUUAAAAGCCUCUUUUCGAAUAAAGCAAAUGCGUGAAAAAGA\
) } def
/len { sequence length } bind def

/coor [
[78.86362457 225.41317749]
[90.25752258 214.70275879]
[89.23941803 199.73735046]
[88.22130585 184.77194214]
[87.20319366 169.80653381]
[86.18508148 154.84112549]
[70.11801147 144.25492859]
[59.39510727 129.59088135]
[54.78065109 113.13202667]
[56.15937805 97.16849518]
[62.62964249 83.68534851]
[72.69892120 74.11618805]
[64.08947754 61.83296585]
[55.48003769 49.54974747]
[46.87059784 37.26652527]
[38.26115417 24.98330498]
[29.65171432 12.70008373]
[21.04227257 0.41686270]
[12.43283081 -11.86635780]
[3.82338905 -24.14957809]
[-4.78605270 -36.43280029]
[-13.39549446 -48.71602249]
[-22.00493622 -60.99924088]
[-30.61437798 -73.28246307]
[-39.22381973 -85.56568146]
[-45.82549286 -83.09071350]
[-52.72838593 -81.68542480]
[-59.76049423 -81.38295746]
[-66.74689484 -82.18897247]
[-73.51407623 -84.08161163]
[-79.89427948 -87.01202393]
[-85.72962952 -90.90567780]
[-90.87606812 -95.66421509]
[-95.20687866 -101.16796875]
[-98.61583710 -107.27894592]
[-101.01977539 -113.84429932]
[-102.36067200 -120.70014954]
[-102.60699463 -127.67568207]
[-101.75445557 -134.59738159]
[-99.82610321 -141.29336548]
[-96.87163544 -147.59767151]
[-92.96620941 -153.35430908]
[-102.97158051 -164.52984619]
[-112.97694397 -175.70538330]
[-122.98231506 -186.88090515]
[-137.95193481 -192.00155640]
[-140.67677307 -206.64480591]
[-150.68214417 -217.82034302]
[-160.68751526 -228.99588013]
[-170.69288635 -240.17140198]
[-180.69825745 -251.34693909]
[-191.76368713 -248.20645142]
[-203.14945984 -249.42756653]
[-213.20657349 -254.79478455]
[-220.49293518 -263.49493408]
[-223.98010254 -274.24014282]
[-223.19834900 -285.45843506]
[-218.29949951 -295.52371216]
[-227.72280884 -307.19424438]
[-237.14610291 -318.86477661]
[-249.87974548 -321.01019287]
[-257.48715210 -330.94381714]
[-256.31594849 -342.99795532]
[-265.53970337 -354.82681274]
[-274.76345825 -366.65567017]
[-283.98724365 -378.48455811]
[-293.21099854 -390.31341553]
[-302.43475342 -402.14227295]
[-310.19815063 -406.99981689]
[-311.71267700 -414.25122070]
[-327.39517212 -416.20968628]
[-337.03341675 -428.73483276]
[-334.90927124 -444.39572144]
[-322.28292847 -453.90103149]
[-306.64535522 -451.61141968]
[-297.27407837 -438.88528442]
[-299.72891235 -423.27279663]
[-290.60589600 -411.36605835]
[-281.38214111 -399.53717041]
[-272.15835571 -387.70831299]
[-262.93460083 -375.87945557]
[-253.71083069 -364.05056763]
[-244.48706055 -352.22171021]
[-227.89640808 -346.53176880]
[-225.47557068 -328.28808594]
[-216.05227661 -316.61752319]
[-206.62896729 -304.94699097]
[-188.07495117 -306.99319458]
[-171.89381409 -297.39004517]
[-164.68778992 -279.84637451]
[-169.52272034 -261.35232544]
[-159.51734924 -250.17677307]
[-149.51197815 -239.00125122]
[-139.50660706 -227.82571411]
[-129.50123596 -216.65017700]
[-115.24726868 -212.32887268]
[-111.80677795 -196.88627625]
[-101.80141449 -185.71075439]
[-91.79604340 -174.53521729]
[-81.79067230 -163.35968018]
[-73.05616760 -167.56964111]
[-63.61273956 -169.76896667]
[-53.91693497 -169.85128784]
[-44.43751907 -167.81265259]
[-35.63278580 -163.75160217]
[-25.81862831 -175.09542847]
[-16.00447083 -186.43925476]
[-6.19031239 -197.78306580]
[3.62384534 -209.12689209]
[13.43800354 -220.47071838]
[12.04853344 -236.21380615]
[22.26197624 -248.27453613]
[38.01887894 -249.49748230]
[49.97094727 -239.15708923]
[51.02723312 -223.38813782]
[40.56106186 -211.54606628]
[24.78182602 -210.65655518]
[14.96766758 -199.31272888]
[5.15351009 -187.96891785]
[-4.66064787 -176.62509155]
[-14.47480583 -165.28126526]
[-24.28896332 -153.93743896]
[-14.03871727 -123.66536713]
[-26.94059753 -94.17512512]
[-18.33115578 -81.89190674]
[-9.72171497 -69.60868073]
[-1.11227334 -57.32546234]
[7.49716854 -45.04224014]
[16.10660934 -32.75902176]
[24.71605110 -20.47579956]
[33.32549286 -8.19257927]
[41.93493652 4.09064198]
[50.54437637 16.37386322]
[59.15381622 28.65708351]
[67.76325989 40.94030380]
[76.37270355 53.22352600]
[84.98213959 65.50674438]
[104.96969604 57.93841171]
[128.34092712 62.39638519]
[147.79652405 79.97732544]
[156.06585693 107.41753387]
[169.57249451 113.94217682]
[183.07911682 120.46681976]
[196.58575439 126.99146271]
[212.37754822 126.02722168]
[220.47216797 138.53027344]
[233.97880554 145.05491638]
[247.48542786 151.57955933]
[260.99206543 158.10420227]
[274.49868774 164.62884521]
[291.39093018 166.07412720]
[294.67837524 182.70628357]
[279.60623169 190.46949768]
[267.97402954 178.13548279]
[254.46740723 171.61083984]
[240.96078491 165.08619690]
[227.45416260 158.56155396]
[213.94752502 152.03691101]
[199.12181091 153.46783447]
[190.06111145 140.49809265]
[176.55447388 133.97344971]
[163.04785156 127.44880676]
[149.54121399 120.92416382]
[144.35166931 126.33883667]
[148.54064941 140.74205017]
[133.97259521 137.16818237]
[128.78305054 142.58283997]
[135.87506104 155.80038452]
[150.09242249 163.97341919]
[149.85246277 180.37081909]
[135.40203857 188.12432861]
[121.60649109 179.25782776]
[122.65750885 162.89239502]
[115.56550598 149.67485046]
[101.15048981 153.82301331]
[102.16860199 168.78842163]
[103.18671417 183.75382996]
[104.20482635 198.71923828]
[105.22293091 213.68464661]
[117.96241760 222.75325012]
[121.84218597 237.90188599]
[115.03032684 251.97784424]
[100.74320221 258.33489990]
[85.72673798 253.97140503]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 179]
[3 178]
[4 177]
[5 176]
[6 175]
[12 137]
[13 136]
[14 135]
[15 134]
[16 133]
[17 132]
[18 131]
[19 130]
[20 129]
[21 128]
[22 127]
[23 126]
[24 125]
[25 124]
[42 100]
[43 99]
[44 98]
[45 97]
[47 95]
[48 94]
[49 93]
[50 92]
[51 91]
[58 87]
[59 86]
[60 85]
[63 83]
[64 82]
[65 81]
[66 80]
[67 79]
[68 78]
[70 77]
[105 122]
[106 121]
[107 120]
[108 119]
[109 118]
[110 117]
[141 163]
[142 162]
[143 161]
[144 160]
[146 158]
[147 157]
[148 156]
[149 155]
[150 154]
[167 174]
[168 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
