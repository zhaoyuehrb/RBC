%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 08:21:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGUUGGUUUCACGAUGAUUUAUUGUGACCUCCCACAUAUGAGGCAAAUACUGUCCUAAGACACUAUGUGCGAGAGCCUGUGAGCUCAUUGUAACUUCAUGGAAUGUAAUUACUAUGUGGUUAUGAAUGGGAUAACCACCUUGAAUGUGUACUUUUGUUAAUUAAAUUAUUUUAAUUAAUAA\
) } def
/len { sequence length } bind def

/coor [
[209.43733215 351.81622314]
[215.14698792 327.99719238]
[205.88070679 316.20159912]
[196.61442566 304.40600586]
[182.66772461 299.17736816]
[180.22703552 283.54553223]
[170.96075439 271.74993896]
[161.69447327 259.95434570]
[152.42819214 248.15876770]
[143.16191101 236.36317444]
[128.16246033 236.23512268]
[118.69613647 247.87078857]
[109.22982025 259.50646973]
[99.76349640 271.14212036]
[90.29718018 282.77780151]
[80.83085632 294.41345215]
[71.36454010 306.04913330]
[61.89822006 317.68481445]
[56.59254837 333.78717041]
[39.65071487 333.14642334]
[35.57645416 316.68930054]
[50.26255035 308.21847534]
[59.72887039 296.58282471]
[69.19519043 284.94714355]
[78.66150665 273.31149292]
[88.12783051 261.67581177]
[97.59414673 250.04014587]
[107.06047058 238.40446472]
[116.52678680 226.76879883]
[110.91341400 212.83238220]
[113.55743408 199.22680664]
[122.38678741 190.10101318]
[117.60563660 175.88339233]
[112.82448578 161.66578674]
[108.04332733 147.44816589]
[103.26217651 133.23056030]
[96.34088898 133.18919373]
[89.57683563 131.72174072]
[83.26064301 128.89126587]
[77.66371155 124.81938171]
[73.02653503 119.68105316]
[69.54836273 113.69705200]
[67.37864685 107.12451935]
[66.61061859 100.24585724]
[67.27726746 93.35663605]
[53.62313461 87.14659119]
[39.96899796 80.93655396]
[24.20377350 82.26632690]
[15.82171059 69.95412445]
[2.16757512 63.74408340]
[-11.48655987 57.53404617]
[-27.25178337 58.86381531]
[-35.63384628 46.55161285]
[-49.28798294 40.34157562]
[-62.94211960 34.13153458]
[-76.59625244 27.92149544]
[-92.85755157 30.04336357]
[-102.60957336 16.85890388]
[-95.82028961 1.93115771]
[-79.47392273 0.61651206]
[-70.38621521 14.26736069]
[-56.73207855 20.47739983]
[-43.07794571 26.68743896]
[-29.42380905 32.89748001]
[-14.63521957 31.12352562]
[-5.27652121 43.87990952]
[8.37761402 50.08994675]
[22.03174973 56.29998779]
[36.82033920 54.52603531]
[46.17903900 67.28241730]
[59.83317184 73.49245453]
[73.48730469 79.70249939]
[75.89347839 76.89616394]
[78.59511566 74.37301636]
[81.55910492 72.16396332]
[76.29533386 58.11787415]
[71.03156281 44.07178116]
[65.76779175 30.02568817]
[51.27957916 23.71163750]
[45.57741165 8.97186756]
[52.04428482 -5.44878006]
[66.84352112 -10.99479103]
[81.19499207 -4.37581396]
[86.58422089 10.48122787]
[79.81388855 24.76191711]
[85.07765961 38.80801010]
[90.34143066 52.85410309]
[95.60519409 66.90019226]
[103.41462708 66.78476715]
[111.03723907 68.48665619]
[119.04867554 55.80529404]
[127.06010437 43.12393570]
[135.07154846 30.44257545]
[143.08297729 17.76121712]
[151.09442139 5.07985640]
[159.10585022 -7.60150337]
[167.11729431 -20.28286362]
[167.94660950 -36.08232117]
[181.28549194 -42.70980072]
[189.29692078 -55.39115906]
[197.30836487 -68.07251740]
[205.31979370 -80.75388336]
[213.33123779 -93.43524170]
[221.23411560 -106.18453217]
[229.02787781 -119.00082397]
[236.82164001 -131.81710815]
[239.88528442 -148.49195862]
[256.75656128 -150.16409302]
[263.03378296 -134.41503906]
[249.63792419 -124.02335358]
[241.84416199 -111.20706177]
[234.05041504 -98.39076996]
[233.25949097 -91.02445221]
[226.01258850 -85.42380524]
[218.00115967 -72.74244690]
[209.98971558 -60.06108475]
[201.97828674 -47.37972641]
[193.96684265 -34.69836426]
[193.71055603 -19.80596352]
[179.79864502 -12.27142715]
[171.78721619 0.40993288]
[163.77577209 13.09129238]
[155.76434326 25.77265167]
[147.75289917 38.45401382]
[139.74147034 51.13537216]
[131.73002625 63.81673050]
[123.71859741 76.49809265]
[133.15209961 103.98121643]
[117.47978973 128.44940186]
[122.26094055 142.66700745]
[127.04209900 156.88462830]
[131.82325745 171.10224915]
[136.60440063 185.31985474]
[158.98854065 198.09393311]
[154.95750427 227.09689331]
[164.22378540 238.89248657]
[173.49006653 250.68807983]
[182.75634766 262.48367310]
[192.02262878 274.27926636]
[206.63212585 280.35159302]
[208.41001892 295.13970947]
[217.67630005 306.93530273]
[226.94258118 318.73089600]
[233.27696228 316.76669312]
[239.86994934 316.20913696]
[246.41365051 317.07763672]
[252.60395813 319.32513428]
[258.15457153 322.84066772]
[262.81033325 327.45477295]
[266.35885620 332.94769287]
[268.64028931 339.05978394]
[269.55453491 345.50384521]
[269.06552124 351.97857666]
[267.20260620 358.18267822]
[264.05899048 363.82888794]
[259.78695679 368.65719604]
[266.91433716 381.85571289]
[274.04168701 395.05422974]
[281.16903687 408.25274658]
[288.29638672 421.45126343]
[295.42373657 434.64978027]
[302.55108643 447.84829712]
[309.67843628 461.04681396]
[316.80578613 474.24533081]
[323.93313599 487.44384766]
[331.06051636 500.64236450]
[338.18786621 513.84088135]
[352.42706299 521.97583008]
[352.23098755 538.37384033]
[337.80136108 546.16595459]
[323.98211670 537.33642578]
[324.98934937 520.96826172]
[317.86199951 507.76971436]
[310.73461914 494.57119751]
[303.60726929 481.37268066]
[296.47991943 468.17416382]
[289.35256958 454.97564697]
[282.22521973 441.77713013]
[275.09786987 428.57861328]
[267.97052002 415.38009644]
[260.84317017 402.18157959]
[253.71580505 388.98306274]
[246.58845520 375.78454590]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 143]
[3 142]
[4 141]
[6 139]
[7 138]
[8 137]
[9 136]
[10 135]
[11 29]
[12 28]
[13 27]
[14 26]
[15 25]
[16 24]
[17 23]
[18 22]
[32 133]
[33 132]
[34 131]
[35 130]
[36 129]
[45 72]
[46 71]
[47 70]
[49 68]
[50 67]
[51 66]
[53 64]
[54 63]
[55 62]
[56 61]
[75 88]
[76 87]
[77 86]
[78 85]
[90 127]
[91 126]
[92 125]
[93 124]
[94 123]
[95 122]
[96 121]
[97 120]
[99 118]
[100 117]
[101 116]
[102 115]
[103 114]
[104 112]
[105 111]
[106 110]
[156 183]
[157 182]
[158 181]
[159 180]
[160 179]
[161 178]
[162 177]
[163 176]
[164 175]
[165 174]
[166 173]
[167 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
