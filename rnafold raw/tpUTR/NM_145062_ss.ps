%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 13:19:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAUCAAGCAUUUAAGCAUUUCAGUGAUUGAGAACAAUACUUUGUUUUCUAAAUGUAGAUAUUGAACUCCUUAAUACAAUUAUGAAUCUGUGAAUUCUCUUAAGUCUUAACAUAUAAUUUAAUUUCUAAAAUGCCUGUGUUAAUUGAAUUAUACCUAUCAUACUUCAUUGUUUGGUAAAUUAUUUCAAUAAAAUGUCUUGUUUUUGCAUUGUG\
) } def
/len { sequence length } bind def

/coor [
[100.32289886 306.66992188]
[98.57344055 291.77227783]
[96.82398224 276.87466431]
[95.07453156 261.97702026]
[85.90564728 250.23901367]
[91.98062134 235.63061523]
[90.23116302 220.73298645]
[88.48170471 205.83535767]
[86.73225403 190.93772888]
[84.87400055 176.05328369]
[82.90705109 161.18280029]
[80.94010925 146.31231689]
[78.97315979 131.44184875]
[68.40537262 120.79656982]
[53.54966354 118.72103119]
[38.69395447 116.64549255]
[23.83824158 114.56995392]
[12.26371861 126.90588379]
[-4.21945047 129.88146973]
[-19.07875061 122.51876068]
[-26.54487419 107.89754486]
[-41.42932510 106.03929138]
[-56.31377792 104.18103790]
[-71.19822693 102.32279205]
[-83.59524536 111.75421143]
[-98.66372681 109.65764618]
[-107.57874298 97.78086090]
[-122.46319580 95.92260742]
[-137.34765625 94.06435394]
[-152.23210144 92.20610809]
[-167.10258484 94.17304993]
[-180.99201965 99.83728027]
[-194.88145447 105.50151062]
[-208.77088928 111.16574097]
[-222.66033936 116.82997131]
[-236.54977417 122.49420166]
[-250.43920898 128.15843201]
[-264.32864380 133.82266235]
[-273.95001221 147.10276794]
[-290.23147583 145.14155579]
[-296.42404175 129.95655823]
[-286.15734863 117.16879272]
[-269.99288940 119.93321991]
[-256.10345459 114.26898956]
[-242.21400452 108.60475922]
[-228.32456970 102.94052887]
[-214.43511963 97.27629852]
[-200.54568481 91.61206818]
[-186.65625000 85.94784546]
[-172.76681519 80.28361511]
[-172.54765320 72.78681183]
[-187.54125977 72.34851837]
[-202.53485107 71.91021729]
[-217.52844238 71.47191620]
[-232.52203369 71.03337097]
[-232.08323669 56.03978729]
[-217.09014893 56.47832108]
[-202.09654236 56.91662216]
[-187.10295105 57.35491943]
[-172.10935974 57.79322052]
[-171.89021301 50.29642105]
[-185.42504883 43.83051300]
[-198.95989990 37.36460495]
[-212.49475098 30.89869881]
[-226.02958679 24.43279076]
[-239.56443787 17.96688271]
[-255.10881042 21.93575096]
[-267.81613159 12.14269447]
[-267.93838501 -3.89989281]
[-255.38183594 -13.88551044]
[-239.77877808 -10.15404797]
[-233.09852600 4.43203688]
[-219.56367493 10.89794445]
[-206.02883911 17.36385345]
[-192.49398804 23.82976151]
[-178.95915222 30.29566956]
[-165.42430115 36.76157761]
[-174.20233154 24.59825897]
[-161.72341919 16.27497292]
[-146.78895569 14.87444496]
[-132.98014832 20.73251724]
[-123.60833740 32.44443893]
[-120.92084503 47.20172119]
[-125.56214142 61.46560669]
[-136.42062378 71.81643677]
[-150.37385559 77.32165527]
[-135.48939514 79.17990112]
[-120.60494995 81.03815460]
[-105.72049713 82.89640808]
[-94.15911102 73.57600403]
[-79.03768921 75.24849701]
[-69.33998108 87.43833923]
[-54.45552444 89.29658508]
[-39.57107544 91.15483856]
[-24.68662262 93.01309204]
[-16.50661278 82.46392822]
[-4.08282471 77.29204559]
[9.38140583 78.94678497]
[20.35692406 87.10214996]
[25.91378021 99.71424103]
[40.76948929 101.78977966]
[55.62520218 103.86531830]
[70.48091125 105.94085693]
[70.02887726 94.71038055]
[73.74597168 83.97622681]
[81.20209503 75.24783325]
[91.43520355 69.78608704]
[103.07491302 68.42160034]
[114.52582550 71.42948914]
[122.24617767 58.56884384]
[129.96653748 45.70819855]
[137.68688965 32.84755325]
[145.40724182 19.98690987]
[153.12759399 7.12626648]
[160.84794617 -5.73437738]
[156.29937744 -22.62758446]
[165.20184326 -37.29418182]
[181.62774658 -40.91004181]
[189.15936279 -53.88212204]
[196.69097900 -66.85420227]
[204.22259521 -79.82627869]
[197.82284546 -93.96215057]
[200.98716736 -109.15316010]
[212.49880981 -119.55804443]
[227.93132019 -121.17591858]
[241.35057068 -113.38467407]
[247.59658813 -99.18021393]
[244.26765442 -84.02442169]
[232.64381409 -73.74503326]
[217.19467163 -72.29466248]
[209.66305542 -59.32258606]
[202.13143921 -46.35050583]
[194.59982300 -33.37842941]
[199.61416626 -21.51079941]
[196.83706665 -8.73099518]
[187.06327820 0.24875677]
[173.70858765 1.98597419]
[165.98823547 14.84661865]
[158.26788330 27.70726204]
[150.54753113 40.56790543]
[142.82717896 53.42855072]
[135.10682678 66.28919220]
[127.38647461 79.14984131]
[133.65393066 92.77771759]
[148.44264221 95.28645325]
[163.23136902 97.79518890]
[178.02008057 100.30391693]
[192.80880737 102.81265259]
[207.59753418 105.32138824]
[222.49737549 100.00113678]
[233.75132751 109.75807953]
[248.54003906 112.26681519]
[257.64694214 101.92234802]
[270.57321167 97.46320343]
[283.90832520 99.95276642]
[294.18957520 108.63579559]
[298.80099487 121.16305542]
[313.55148315 123.88760376]
[328.30197144 126.61215973]
[343.05245972 129.33671570]
[357.80294800 132.06126404]
[372.77893066 126.95928955]
[383.88909912 136.87962341]
[398.63958740 139.60418701]
[411.51513672 130.43927002]
[427.08602905 133.14543152]
[436.11428833 146.11715698]
[433.24365234 161.65855408]
[420.17721558 170.54917908]
[404.66702271 167.51438904]
[395.91503906 154.35466003]
[381.16455078 151.63011169]
[367.24362183 156.92697144]
[355.07836914 146.81175232]
[340.32791138 144.08720398]
[325.57742310 141.36264038]
[310.82693481 138.63809204]
[296.07644653 135.91354370]
[284.54257202 147.59655762]
[268.15338135 150.12693787]
[253.33897400 142.31144714]
[246.03131104 127.05553436]
[231.24258423 124.54679871]
[217.40052795 130.04649353]
[205.08879089 120.11010742]
[190.30007935 117.60137177]
[175.51135254 115.09264374]
[160.72262573 112.58390808]
[145.93391418 110.07517242]
[131.14518738 107.56643677]
[122.95432281 121.43211365]
[109.29162598 129.32064819]
[93.84363556 129.47489929]
[95.81058502 144.34536743]
[97.77753448 159.21585083]
[99.74447632 174.08633423]
[103.97102356 182.18061829]
[101.62988281 189.18827820]
[103.37934113 204.08590698]
[105.12879181 218.98353577]
[106.87825012 233.88116455]
[116.17226410 246.68475342]
[109.97216034 260.22756958]
[111.72161865 275.12521362]
[113.47106934 290.02282715]
[115.22052765 304.92047119]
[129.12786865 311.59799194]
[137.19786072 324.74633789]
[136.85540771 340.16989136]
[128.20976257 352.94708252]
[114.01973724 359.00073242]
[98.81330872 356.39913940]
[87.44280243 345.97250366]
[83.53649902 331.04788208]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 206]
[2 205]
[3 204]
[4 203]
[6 201]
[7 200]
[8 199]
[9 198]
[10 196]
[11 195]
[12 194]
[13 193]
[14 103]
[15 102]
[16 101]
[17 100]
[21 95]
[22 94]
[23 93]
[24 92]
[27 89]
[28 88]
[29 87]
[30 86]
[31 50]
[32 49]
[33 48]
[34 47]
[35 46]
[36 45]
[37 44]
[38 43]
[61 77]
[62 76]
[63 75]
[64 74]
[65 73]
[66 72]
[109 143]
[110 142]
[111 141]
[112 140]
[113 139]
[114 138]
[115 137]
[118 133]
[119 132]
[120 131]
[121 130]
[144 190]
[145 189]
[146 188]
[147 187]
[148 186]
[149 185]
[151 183]
[152 182]
[157 178]
[158 177]
[159 176]
[160 175]
[161 174]
[163 172]
[164 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
