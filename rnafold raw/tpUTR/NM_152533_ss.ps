%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 03:34:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACUGGGCUCUGUGUGUGGCCUUCUUAUUGGCCACCUUCUCCUUGGCAGGCUCUGGGCAGUAGCCACAGAGACUUUAGUAAAGGGAUCAGCCUUCAUGGCCAUCAUAGACCGGGAGUGGUUUGUGGUCCCCCCAAAAAGCUACACCAAGCUAAUAAACUGCGAGUUCCCACCCCACUUCCAGCUGGAAUGA\
) } def
/len { sequence length } bind def

/coor [
[177.06550598 219.44444275]
[175.37779236 204.53970337]
[178.31121826 189.82933044]
[185.58686829 176.71197510]
[196.51296997 166.43479919]
[210.05072021 159.97497559]
[224.91627502 157.94671631]
[210.91110229 152.57499695]
[203.52880859 153.11581421]
[196.72288513 147.00016785]
[182.80700684 141.40119934]
[168.89112854 135.80223083]
[154.97525024 130.20326233]
[141.05938721 124.60429382]
[127.14350891 119.00532532]
[105.36993408 132.69764709]
[80.36077118 126.68844604]
[68.96658325 136.44409180]
[57.57239532 146.19972229]
[46.17820740 155.95536804]
[34.78401947 165.71099854]
[23.38983345 175.46664429]
[24.76036453 190.92306519]
[16.75522423 204.21582031]
[2.45255423 210.23356628]
[-12.64797783 206.66235352]
[-22.73991013 194.87539673]
[-23.94268608 179.40499878]
[-15.79381752 166.19987488]
[-1.42670822 160.33763123]
[13.63419437 164.07244873]
[25.02838326 154.31681824]
[36.42256927 144.56117249]
[47.81675720 134.80554199]
[59.21094513 125.04989624]
[70.60513306 115.29425812]
[67.78190613 107.74382782]
[66.86539459 99.73509979]
[67.90983582 91.74205780]
[54.60623550 84.81282043]
[45.53430557 83.62042236]
[41.14385223 77.66098785]
[27.95480537 70.51612091]
[14.76575851 63.37126160]
[1.57671142 56.22640228]
[-14.24282551 56.45622253]
[-21.74806976 43.59074020]
[-34.93711472 36.44588089]
[-48.24071121 29.51664352]
[-61.65533447 22.80486679]
[-75.06995392 16.09309006]
[-88.53875732 9.49071312]
[-102.06084442 2.99817467]
[-115.58293915 -3.49436378]
[-129.10502625 -9.98690224]
[-142.62712097 -16.47944069]
[-156.20159912 -22.86171150]
[-169.82757568 -29.13329124]
[-183.45356750 -35.40486908]
[-199.72425842 -33.35639191]
[-209.41670227 -46.58471680]
[-202.56013489 -61.48167801]
[-186.20800781 -62.72256088]
[-177.18197632 -49.03084946]
[-163.55599976 -42.75926971]
[-149.93002319 -36.48768997]
[-142.52816772 -36.54704666]
[-136.13458252 -30.00153160]
[-122.61248779 -23.50899315]
[-109.09040070 -17.01645470]
[-95.56830597 -10.52391624]
[-82.04621887 -4.03137779]
[-74.64437866 -3.97024679]
[-68.35817719 2.67846870]
[-54.94355774 9.39024544]
[-41.52893448 16.10202217]
[-36.78194046 15.46406937]
[-31.58561897 17.81196785]
[-27.79225540 23.25683403]
[-14.60320759 30.40169525]
[0.27296036 29.66082573]
[8.72157288 43.03735352]
[21.91061974 50.18221664]
[35.09966660 57.32707596]
[48.28871155 64.47193909]
[61.53547287 71.50922394]
[74.83907318 78.43846130]
[78.45481110 74.82506561]
[82.58330536 71.81079865]
[87.12628174 69.46739197]
[91.97563934 67.85062408]
[91.73149109 52.85261536]
[91.48733521 37.85460281]
[81.00646973 25.70836258]
[84.10956573 9.96827507]
[98.41618347 2.70878577]
[112.95151520 9.49875355]
[116.56529999 25.12949753]
[106.48534393 37.61044693]
[106.72949982 52.60845947]
[106.97365570 67.60647583]
[118.44317627 72.47143555]
[127.30542755 81.22805023]
[132.30757141 92.63840485]
[132.74247742 105.08945465]
[146.65835571 110.68842316]
[160.57423401 116.28739166]
[174.49009705 121.88636017]
[188.40597534 127.48532867]
[202.32185364 133.08430481]
[216.28282166 138.56982422]
[230.28799438 143.94154358]
[244.92727661 147.21131897]
[259.88705444 148.30906677]
[274.84683228 149.40682983]
[289.80661011 150.50459290]
[304.76638794 151.60235596]
[319.72616577 152.70011902]
[334.68594360 153.79788208]
[349.64572144 154.89564514]
[357.46939087 147.31178284]
[367.96105957 145.33485413]
[377.60284424 149.38150024]
[383.29629517 157.88896179]
[398.21240234 159.47306824]
[413.12854004 161.05718994]
[428.04464722 162.64129639]
[416.10577393 153.56037903]
[409.50402832 140.09126282]
[409.64025879 125.09188080]
[416.48550415 111.74488068]
[428.58734131 102.88229370]
[443.37796021 100.38462830]
[457.71896362 104.78184509]
[468.56741333 115.14093018]
[473.62149048 129.26383972]
[471.80874634 144.15390015]
[463.51382446 156.65167236]
[450.49697876 164.10525513]
[465.49249268 164.47146606]
[480.48803711 164.83767700]
[495.48355103 165.20388794]
[506.75408936 154.12460327]
[522.55688477 154.34338379]
[533.51635742 165.73043823]
[533.13055420 181.53001404]
[521.62823486 192.36851501]
[505.83361816 191.81564331]
[495.11734009 180.19941711]
[480.12182617 179.83320618]
[465.12628174 179.46699524]
[450.13076782 179.10078430]
[447.96456909 186.28114319]
[462.32522583 190.61375427]
[457.99240112 204.97433472]
[443.63220215 200.64187622]
[441.46603394 207.82225037]
[454.16226196 215.81011963]
[466.85848999 223.79797363]
[479.55468750 231.78584290]
[496.18099976 235.10284424]
[497.59622192 251.99761963]
[481.75347900 258.03448486]
[471.56683350 244.48205566]
[458.87060547 236.49420166]
[446.17440796 228.50633240]
[433.47817993 220.51847839]
[420.92062378 197.18420410]
[426.46054077 177.55741882]
[411.54440308 175.97329712]
[396.62829590 174.38919067]
[381.71218872 172.80506897]
[364.67581177 181.93249512]
[348.54794312 169.85542297]
[333.58816528 168.75765991]
[318.62838745 167.65989685]
[303.66860962 166.56213379]
[288.70883179 165.46437073]
[273.74905396 164.36660767]
[258.78930664 163.26884460]
[243.82951355 162.17108154]
[256.41687012 170.32943726]
[265.92028809 181.93482971]
[271.43621826 195.88381958]
[272.44021606 210.85018921]
[268.83682251 225.41093445]
[260.96862793 238.18167114]
[249.58375549 247.94816589]
[235.76461792 253.78184509]
[220.82514954 255.12805176]
[206.18576050 251.85877991]
[193.23832703 244.28488159]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 112]
[8 111]
[10 110]
[11 109]
[12 108]
[13 107]
[14 106]
[15 105]
[17 36]
[18 35]
[19 34]
[20 33]
[21 32]
[22 31]
[39 87]
[40 86]
[42 85]
[43 84]
[44 83]
[45 82]
[47 80]
[48 79]
[49 76]
[50 75]
[51 74]
[52 72]
[53 71]
[54 70]
[55 69]
[56 68]
[57 66]
[58 65]
[59 64]
[91 101]
[92 100]
[93 99]
[113 181]
[114 180]
[115 179]
[116 178]
[117 177]
[118 176]
[119 175]
[120 174]
[124 172]
[125 171]
[126 170]
[127 169]
[139 152]
[140 151]
[141 150]
[142 149]
[157 167]
[158 166]
[159 165]
[160 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
