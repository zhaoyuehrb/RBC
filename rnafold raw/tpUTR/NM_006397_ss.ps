%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 20:56:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCUGCCUCUACGCGCUCUACCUGCUUCCCCAACCCAGACAUUAAAAUUGUUUAAGGAGAACCACACGUAGGGGAUGUACUUUUGGGACAGAAGCAAGGUGGGAGUGUGCUCUGCAGCCGGGUCCAGCUACUUCCUUUUGGAACCUUAAAUAGAAUGGGUGUUGGUUGAUUAAUUUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[83.91108704 117.38242340]
[77.45301056 107.25501251]
[76.79328156 95.26184845]
[63.80290222 87.76184845]
[50.81251907 80.26184845]
[37.82213974 72.76184845]
[24.83175659 65.26184845]
[13.08456421 72.88056946]
[-0.73394591 74.68067169]
[-13.91505909 70.36688232]
[-23.89979553 60.83675385]
[-28.77568626 47.99462128]
[-27.64292908 34.37122726]
[-40.50264740 26.64933586]
[-53.36236954 18.92744446]
[-66.22209167 11.20555210]
[-79.08181000 3.48365974]
[-91.94152832 -4.23823214]
[-104.80124664 -11.96012402]
[-117.66096497 -19.68201637]
[-130.58648682 -27.29324341]
[-143.57687378 -34.79324341]
[-156.56726074 -42.29324341]
[-169.55763245 -49.79324341]
[-182.61190796 -57.18146515]
[-195.72912598 -64.45735931]
[-208.84634399 -71.73326111]
[-221.96356201 -79.00915527]
[-235.08076477 -86.28505707]
[-248.38098145 -93.22080231]
[-261.85534668 -99.81179047]
[-275.32974243 -106.40278625]
[-288.80410767 -112.99377441]
[-302.27847290 -119.58477020]
[-312.37570190 -115.45709991]
[-322.85940552 -117.53901672]
[-330.30044556 -124.90253448]
[-332.40155029 -134.93350220]
[-345.64172363 -141.98315430]
[-358.94192505 -148.91889954]
[-372.30117798 -155.74023438]
[-385.66043091 -162.56155396]
[-399.01968384 -169.38288879]
[-412.37890625 -176.20420837]
[-424.54837036 -167.05731201]
[-439.42181396 -164.11320496]
[-454.03878784 -167.90327454]
[-465.51351929 -177.62393188]
[-471.60470581 -191.30628967]
[-471.15310669 -206.21473694]
[-484.51235962 -213.03605652]
[-497.87161255 -219.85739136]
[-508.27923584 -214.05017090]
[-520.07727051 -214.00030518]
[-530.32299805 -219.60420227]
[-536.51690674 -229.36251831]
[-537.21234131 -240.77941895]
[-550.32952881 -248.05531311]
[-566.70806885 -247.23295593]
[-575.38104248 -261.15097046]
[-567.42651367 -275.49172974]
[-551.02734375 -275.50265503]
[-543.05364990 -261.17254639]
[-529.93646240 -253.89663696]
[-512.69592285 -259.99752808]
[-496.17630005 -251.43486023]
[-491.05029297 -233.21662903]
[-477.69104004 -226.39530945]
[-464.33178711 -219.57398987]
[-452.52038574 -228.68202209]
[-437.86550903 -231.77128601]
[-423.26278687 -228.17662048]
[-411.62139893 -218.55899048]
[-405.28448486 -204.78471375]
[-405.55758667 -189.56346130]
[-392.19833374 -182.74212646]
[-378.83908081 -175.92080688]
[-365.47985840 -169.09947205]
[-352.12060547 -162.27815247]
[-344.71514893 -162.03598022]
[-338.59207153 -155.22334290]
[-325.35189819 -148.17369080]
[-306.14465332 -150.27409363]
[-295.68750000 -133.05914307]
[-282.21310425 -126.46815491]
[-268.73873901 -119.87715912]
[-255.26435852 -113.28617096]
[-241.78997803 -106.69517517]
[-238.33369446 -107.50300598]
[-234.31274414 -106.66126251]
[-230.51388550 -103.92224121]
[-227.80487061 -99.40226746]
[-214.68765259 -92.12637329]
[-201.57044983 -84.85047150]
[-188.45323181 -77.57457733]
[-175.33601379 -70.29867554]
[-167.94322205 -69.80243683]
[-162.05763245 -62.78362274]
[-149.06726074 -55.28362274]
[-136.07687378 -47.78362274]
[-123.08649445 -40.28362274]
[-115.70331573 -39.66054916]
[-109.93907166 -32.54173660]
[-97.07935333 -24.81984329]
[-84.21963501 -17.09795189]
[-71.35991669 -9.37605953]
[-58.50019455 -1.65416777]
[-45.64047623 6.06772423]
[-32.78075790 13.78961658]
[-19.92103767 21.51150894]
[-5.99812460 13.33255100]
[10.24314594 13.28357220]
[24.37748337 21.47245407]
[32.50605011 35.74961090]
[32.33175659 52.27146912]
[45.32213974 59.77146912]
[58.31251907 67.27146912]
[71.30290222 74.77146912]
[84.29328156 82.27146912]
[104.84490967 76.81533813]
[121.49179077 90.04486084]
[136.39849854 88.37453461]
[151.30520630 86.70420837]
[166.21191406 85.03388214]
[181.10374451 83.23566437]
[195.97958374 81.30968475]
[210.85542297 79.38371277]
[225.73126221 77.45773315]
[231.56515503 63.24994278]
[243.73114014 53.87528229]
[258.95663452 51.85549164]
[273.14608765 57.73388290]
[282.48257446 69.92919922]
[284.45462036 85.16096497]
[278.53176880 99.33190155]
[266.30725098 108.63011169]
[251.06939697 110.55441284]
[236.91708374 104.58718109]
[227.65724182 92.33357239]
[212.78140259 94.25955200]
[197.90556335 96.18552399]
[183.02972412 98.11150360]
[176.78437805 102.09838104]
[167.88224792 99.94058990]
[152.97554016 101.61091614]
[138.06883240 103.28124237]
[123.16211700 104.95157623]
[121.53738403 109.85610962]
[118.88783264 114.29166412]
[127.36800385 126.66448975]
[135.84817505 139.03730774]
[144.32833862 151.41012573]
[152.80851746 163.78295898]
[161.28868103 176.15577698]
[169.76884460 188.52859497]
[178.24902344 200.90141296]
[186.72918701 213.27424622]
[200.91319275 220.28314209]
[201.72633362 235.15553284]
[210.20651245 247.52835083]
[218.68667603 259.90118408]
[234.20101929 260.19268799]
[246.56069946 269.57449341]
[251.01316833 284.43905640]
[245.84635925 299.07064819]
[233.04702759 307.84313965]
[217.53677368 307.38333130]
[205.27960205 297.86801147]
[200.98863220 282.95602417]
[206.31385803 268.38134766]
[197.83369446 256.00851440]
[189.35351562 243.63569641]
[175.77607727 237.51179504]
[174.35636902 221.75440979]
[165.87620544 209.38159180]
[157.39602661 197.00875854]
[148.91586304 184.63594055]
[140.43568420 172.26312256]
[131.95552063 159.89030457]
[123.47534943 147.51748657]
[114.99517822 135.14465332]
[106.51500702 122.77183533]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 119]
[4 118]
[5 117]
[6 116]
[7 115]
[13 110]
[14 109]
[15 108]
[16 107]
[17 106]
[18 105]
[19 104]
[20 103]
[21 101]
[22 100]
[23 99]
[24 98]
[25 96]
[26 95]
[27 94]
[28 93]
[29 92]
[30 88]
[31 87]
[32 86]
[33 85]
[34 84]
[38 82]
[39 81]
[40 79]
[41 78]
[42 77]
[43 76]
[44 75]
[50 69]
[51 68]
[52 67]
[57 64]
[58 63]
[121 147]
[122 146]
[123 145]
[124 144]
[125 142]
[126 141]
[127 140]
[128 139]
[149 182]
[150 181]
[151 180]
[152 179]
[153 178]
[154 177]
[155 176]
[156 175]
[157 174]
[159 172]
[160 171]
[161 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
