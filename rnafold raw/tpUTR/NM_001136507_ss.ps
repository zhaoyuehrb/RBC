%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 00:29:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUCAGUCCUGGGCUUUCGGUCCCUUUCUUUUAAUGCCCAUCCUCAUUCCUACUCUGAAUUGUCACACUUUUCCCUUCCCCACCAGUUCUUUAAUAAAAGUAUUUGAAAGGCAACA\
) } def
/len { sequence length } bind def

/coor [
[1.20729792 220.82073975]
[-5.35231209 234.31042480]
[-11.91192150 247.80010986]
[-18.47153091 261.28979492]
[-25.03114128 274.77947998]
[-31.59075165 288.26916504]
[-29.88835907 304.57968140]
[-43.31958771 313.98895264]
[-58.06753922 306.81747437]
[-58.96078873 290.44268799]
[-45.08043289 281.70953369]
[-38.52082443 268.21984863]
[-31.96121407 254.73017883]
[-25.40160370 241.24049377]
[-18.84199333 227.75080872]
[-12.28238392 214.26112366]
[-18.47420883 209.22726440]
[-23.77682304 203.25785828]
[-28.05047607 196.50798035]
[-31.18218040 189.15336609]
[-33.08869171 181.38569641]
[-33.71872711 173.40774536]
[-33.05434036 165.42797852]
[-31.11143303 157.65516663]
[-27.93936920 150.29290771]
[-23.61973381 143.53427124]
[-18.26422310 137.55677795]
[-12.01176929 132.51770020]
[-5.02492285 128.54994202]
[2.51436281 125.75852966]
[10.40947342 124.21783447]
[18.45426178 123.96959686]
[26.43843079 125.02178192]
[34.15302658 127.34834290]
[41.39591217 130.88984680]
[47.97706604 135.55505371]
[59.26562881 125.67738342]
[70.55419159 115.79971313]
[81.84275055 105.92204285]
[82.91114807 91.47196198]
[93.81553650 81.93045044]
[108.27957916 82.78939819]
[119.56813812 72.91172791]
[111.64396667 59.33401871]
[106.48088074 44.48986435]
[104.27009583 28.93420219]
[105.09248352 13.24823475]
[108.91559601 -1.98230946]
[115.59500122 -16.18903542]
[124.87969208 -28.84210014]
[136.42152405 -39.46996307]
[149.78828430 -47.67697525]
[164.47987366 -53.15808868]
[179.94700623 -55.71021652]
[195.61174011 -55.23973465]
[210.88912964 -51.76593018]
[225.20895386 -45.42021561]
[238.03713989 -36.44115067]
[248.78399658 -46.90562439]
[259.53085327 -57.37009430]
[270.27770996 -67.83457184]
[281.02453613 -78.29904175]
[291.77139282 -88.76351166]
[284.53765869 -102.01401520]
[281.14825439 -116.72504425]
[281.85467529 -131.80494690]
[286.60449219 -146.13470459]
[295.04525757 -158.65093994]
[306.55059814 -168.42486572]
[320.26675415 -174.73120117]
[335.17587280 -177.10197449]
[350.17163086 -175.36123657]
[364.14120483 -169.63819885]
[376.04797363 -160.35751343]
[385.00842285 -148.20788574]
[390.35754395 -134.09091187]
[391.69845581 -119.05413055]
[388.93164062 -104.21340179]
[382.26242065 -90.66999054]
[372.18566895 -79.42891693]
[359.44918823 -71.32433319]
[344.99807739 -66.95765686]
[329.90469360 -66.65293121]
[315.28912354 -70.43276215]
[302.23587036 -78.01666260]
[291.48901367 -67.55219269]
[280.74215698 -57.08771896]
[269.99533081 -46.62324524]
[259.24847412 -36.15877151]
[248.50161743 -25.69429779]
[256.49929810 -13.80799389]
[262.27993774 -0.69561070]
[265.66162109 13.23341179]
[266.53744507 27.54389191]
[264.87872314 41.78849792]
[260.73605347 55.52173996]
[254.23773193 68.31388092]
[245.58581543 79.76441956]
[235.04978943 89.51458740]
[222.95817566 97.25862885]
[209.68832397 102.75335693]
[195.65464783 105.82580566]
[181.29560852 106.37868500]
[167.06007385 104.39344788]
[153.39331055 99.93088531]
[140.72297668 93.12932587]
[129.44581604 84.20028687]
[118.15724945 94.07795715]
[117.08885193 108.52803802]
[106.18446350 118.06954956]
[91.72042084 117.21060181]
[80.43186188 127.08827209]
[69.14329529 136.96594238]
[57.85473633 146.84361267]
[65.41646576 169.69784546]
[61.39486694 193.37673950]
[46.77850342 212.36616516]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 16]
[2 15]
[3 14]
[4 13]
[5 12]
[6 11]
[36 114]
[37 113]
[38 112]
[39 111]
[42 108]
[43 107]
[58 90]
[59 89]
[60 88]
[61 87]
[62 86]
[63 85]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
