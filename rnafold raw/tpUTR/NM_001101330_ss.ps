%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 03:54:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCUGGAGAAUAAUAGACCUGUGCUGUCCAAGAGCACUUGAAAUGUGGCUAGUCCAAAUUCUGAUACAGUGUAAGUGUAAAAUACGUACUUCAUUCAAUAAUUCAUAUAUUAUUAGAAAACAGUAUGAAGAUGUAAAACAUCUCAGUAAUAUUUCAUAUUGACUCCACAUUGAAAUAAUGUUUUGGAUAUUUUGCAUUAAAUAAAAUAUACUAUUAAAAUU\
) } def
/len { sequence length } bind def

/coor [
[78.91351318 320.66735840]
[74.54029083 335.01568604]
[77.91802979 350.47213745]
[66.80625916 360.39068604]
[62.43303299 374.73901367]
[58.05980682 389.08737183]
[67.51600647 401.39019775]
[67.90115356 416.90249634]
[59.06714249 429.65945435]
[44.41083908 434.75576782]
[29.56788445 430.23178101]
[20.24570274 417.82708740]
[20.02886009 402.31152344]
[29.00073814 389.65115356]
[43.71146774 384.71414185]
[48.08469009 370.36581421]
[52.45791626 356.01745605]
[48.76736832 341.58731079]
[60.19194412 330.64245605]
[64.56517029 316.29412842]
[62.22257996 307.79412842]
[66.77206421 298.98171997]
[66.13829803 283.99511719]
[65.50453186 269.00851440]
[64.87076569 254.02191162]
[63.81504822 239.05911255]
[62.33822250 224.13198853]
[60.86139297 209.20486450]
[59.38456345 194.27774048]
[57.90773392 179.35061646]
[56.43090439 164.42350769]
[54.95407486 149.49638367]
[53.47724915 134.56925964]
[52.00041962 119.64213562]
[41.06299591 109.37700653]
[26.07229996 108.84882355]
[11.08160114 108.32064056]
[-3.90909648 107.79244995]
[-18.89979362 107.26426697]
[-33.89049149 106.73608398]
[-48.88119125 106.20789337]
[-58.47232056 118.26261902]
[-73.15100861 122.31101227]
[-87.23236084 117.00257111]
[-95.39011383 104.56919098]
[-110.38081360 104.04100037]
[-125.37151337 103.51281738]
[-140.36221313 102.98463440]
[-150.30770874 111.18842316]
[-162.77731323 110.44499207]
[-171.12364197 101.69669342]
[-186.10540771 100.95738220]
[-201.08717346 100.21807098]
[-210.71026611 112.39082336]
[-225.65951538 116.55006409]
[-240.18666077 111.09647369]
[-248.70571899 98.12706757]
[-247.94091797 82.62885284]
[-238.18635559 70.56120300]
[-223.19285583 66.56437683]
[-208.72572327 72.17523956]
[-200.34786987 85.23629761]
[-185.36610413 85.97560883]
[-170.38432312 86.71492767]
[-155.22172546 77.87223816]
[-139.83403015 87.99393463]
[-124.84333038 88.52211761]
[-109.85263062 89.05030823]
[-94.86193085 89.57849121]
[-85.84932709 77.75009155]
[-71.42928314 73.44587708]
[-57.07192612 78.51733398]
[-48.35300446 91.21720123]
[-33.36230469 91.74538422]
[-18.37160873 92.27356720]
[-3.38091087 92.80175781]
[11.60978699 93.32994080]
[26.60048485 93.85812378]
[41.59118271 94.38631439]
[46.64619446 88.84584045]
[31.99482536 85.63066101]
[27.45366669 71.33458710]
[37.56393433 60.25386047]
[52.21523285 63.46935272]
[56.75622177 77.76489258]
[61.81123734 72.22441864]
[59.91446686 57.34482574]
[58.01769638 42.46523666]
[56.12092972 27.58564186]
[54.22415924 12.70604992]
[52.32738876 -2.17354178]
[38.88344574 -9.69461632]
[32.52035904 -23.52807236]
[35.48792648 -38.28129578]
[46.44262695 -48.33776093]
[44.54585648 -63.21735382]
[42.64908600 -78.09694672]
[40.64755249 -92.96280670]
[38.54135895 -107.81420135]
[36.43516159 -122.66559601]
[34.32896805 -137.51699829]
[32.22277069 -152.36839294]
[30.11657524 -167.21978760]
[17.33381271 -176.51368713]
[14.94937134 -192.13706970]
[24.37789726 -204.82084656]
[40.02561188 -207.03997803]
[52.60900497 -197.47787476]
[54.66257477 -181.80757141]
[44.96797180 -169.32597351]
[47.07416534 -154.47457886]
[49.18036270 -139.62318420]
[51.28655624 -124.77179718]
[53.39275360 -109.92040253]
[55.49895096 -95.06900787]
[59.54672623 -88.89325714]
[57.52867889 -79.99371338]
[59.42544937 -65.11412048]
[61.32221603 -50.23453140]
[74.44947815 -43.24790192]
[81.02332306 -29.71096611]
[78.33415985 -14.72357845]
[67.20697784 -4.07031155]
[69.10375214 10.80928135]
[71.00051880 25.68887329]
[72.89729309 40.56846619]
[74.79405975 55.44805908]
[76.69082642 70.32765198]
[93.21630859 61.33819199]
[112.76670074 61.27827835]
[122.64032745 49.98617935]
[132.51396179 38.69408035]
[142.38758850 27.40198326]
[152.26121521 16.10988426]
[162.13484192 4.81778526]
[168.00909424 -11.08597088]
[184.91748047 -9.84388256]
[188.40463257 6.74756241]
[173.42694092 14.69141197]
[163.55331421 25.98351097]
[153.67968750 37.27560806]
[143.80606079 48.56770706]
[133.93243408 59.85980606]
[124.05879974 71.15190887]
[127.42129517 77.85590363]
[140.82929993 71.13091278]
[154.23741150 64.40614319]
[160.96195984 77.81436920]
[147.55429077 84.53890991]
[134.14628601 91.26390839]
[137.50878906 97.96790314]
[152.46377563 96.80682373]
[167.41877747 95.64573669]
[182.37377930 94.48464966]
[197.32876587 93.32356262]
[212.28376770 92.16247559]
[227.23875427 91.00138855]
[235.41331482 77.94448090]
[249.54357910 72.27094269]
[264.13259888 75.96205902]
[273.63690186 87.39910126]
[288.59191895 86.23801422]
[301.80331421 76.52252197]
[316.71221924 83.35311127]
[317.98159790 99.70305634]
[304.30563354 108.75293732]
[289.75299072 101.19300842]
[274.79800415 102.35409546]
[267.17285156 115.12104797]
[253.32836914 121.01969910]
[238.49172974 117.59511566]
[228.39984131 105.95638275]
[213.44485474 107.11746979]
[198.48985291 108.27855682]
[183.53485107 109.43964386]
[168.57986450 110.60073090]
[153.62486267 111.76181793]
[138.66987610 112.92290497]
[124.81813812 131.38534546]
[103.52318573 139.09400940]
[81.90738678 133.97557068]
[66.92754364 118.16530609]
[68.40437317 133.09242249]
[69.88120270 148.01954651]
[71.35802460 162.94667053]
[72.83485413 177.87379456]
[74.31168365 192.80091858]
[75.78851318 207.72804260]
[77.26534271 222.65516663]
[78.74217224 237.58227539]
[81.38362122 241.00361633]
[82.67457581 244.71385193]
[82.68946838 248.25460815]
[81.64347839 251.23837280]
[79.85736847 253.38815308]
[80.49113464 268.37475586]
[81.12490082 283.36135864]
[81.75866699 298.34796143]
[87.77657318 284.60806274]
[96.74971771 272.58798218]
[108.21186066 262.91226196]
[121.56740570 256.08370972]
[136.12239075 252.45709229]
[151.12052917 252.22088623]
[165.78251648 255.38734436]
[179.34646606 261.79196167]
[191.10762024 271.10192871]
[200.45483398 282.83349609]
[206.90243530 296.37707520]
[210.11538696 311.02893066]
[209.92674255 326.02774048]
[206.34631348 340.59414673]
[199.56013489 353.97128296]
[189.92082214 365.46405029]
[177.92926025 374.47528076]
[164.20851135 380.53674316]
[149.47154236 383.33343506]
[134.48408508 382.72012329]
[120.02490234 378.72860718]
[106.84532166 371.56628418]
[95.63014984 361.60537720]
[86.96214294 349.36340332]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 20]
[2 19]
[4 17]
[5 16]
[6 15]
[22 198]
[23 197]
[24 196]
[25 195]
[26 190]
[27 189]
[28 188]
[29 187]
[30 186]
[31 185]
[32 184]
[33 183]
[34 182]
[35 79]
[36 78]
[37 77]
[38 76]
[39 75]
[40 74]
[41 73]
[45 69]
[46 68]
[47 67]
[48 66]
[51 64]
[52 63]
[53 62]
[86 128]
[87 127]
[88 126]
[89 125]
[90 124]
[91 123]
[95 119]
[96 118]
[97 117]
[98 115]
[99 114]
[100 113]
[101 112]
[102 111]
[103 110]
[130 144]
[131 143]
[132 142]
[133 141]
[134 140]
[135 139]
[151 178]
[152 177]
[153 176]
[154 175]
[155 174]
[156 173]
[157 172]
[161 168]
[162 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
