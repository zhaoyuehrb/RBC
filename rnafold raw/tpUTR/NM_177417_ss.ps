%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 16:31:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUCCAGUGAACUGCGCUGGCCGCAGCUUCUUGGGAACAGUGCAGGAGGGAUGGGCUGGUGGGGUGAGAGGGGGUCUAUCAUCUCCUGGCCCCCCCUUGCCUCUGGGUACCUGGUGGAUAGCUGCCUUCUCCUGCGAUUAAAGGCUGUGGACGUGACAGUGAG\
) } def
/len { sequence length } bind def

/coor [
[99.97823334 299.40972900]
[89.95553589 288.24972534]
[84.02194214 274.47323608]
[82.79912567 259.52081299]
[76.14332581 272.96328735]
[69.48752594 286.40576172]
[62.83172989 299.84826660]
[56.17593384 313.29074097]
[49.52013779 326.73321533]
[53.26979446 342.33193970]
[43.29882812 354.90011597]
[27.25610733 354.79653931]
[17.44823837 342.10067749]
[21.39897537 326.55166626]
[36.07765198 320.07742310]
[42.73345184 306.63494873]
[49.38924789 293.19244385]
[56.04504395 279.74996948]
[62.70084381 266.30749512]
[69.35664368 252.86500549]
[73.74526978 238.52136230]
[75.75063324 223.65602112]
[77.75599670 208.79067993]
[79.76136017 193.92532349]
[81.76672363 179.05998230]
[83.77208710 164.19464111]
[85.77745056 149.32928467]
[87.78281403 134.46394348]
[89.78817749 119.59860229]
[77.89283752 110.60867310]
[73.57166290 94.76323700]
[58.90344238 97.90065002]
[44.23522568 101.03806305]
[32.43150330 112.42244720]
[16.74736786 107.63288116]
[13.31731033 91.59646606]
[25.66988182 80.81008148]
[41.09781265 86.36984253]
[55.76603317 83.23242950]
[70.43424988 80.09502411]
[81.24207306 69.69353485]
[84.93901825 55.15625000]
[88.63595581 40.61896515]
[92.33290100 26.08168030]
[96.02983856 11.54439640]
[99.72678375 -2.99288750]
[103.42372131 -17.53017235]
[107.12065887 -32.06745529]
[110.81760406 -46.60474014]
[114.51454163 -61.14202499]
[95.40345001 -71.55773926]
[92.69524384 -91.45257568]
[105.91995239 -104.23503113]
[105.91995239 -119.23503113]
[105.77629089 -134.23434448]
[105.48896790 -149.23158264]
[105.20164490 -164.22883606]
[97.20141602 -177.87826538]
[104.69351196 -190.75141907]
[101.38768005 -199.31784058]
[104.54708862 -206.03805542]
[104.54708862 -221.03805542]
[104.54708862 -236.03805542]
[104.54708862 -251.03805542]
[104.54708862 -266.03805542]
[104.54708862 -281.03805542]
[104.54708862 -296.03805542]
[104.54708862 -311.03805542]
[96.80979156 -324.83822632]
[104.54708862 -337.56549072]
[104.54708862 -352.56549072]
[104.54708862 -367.56549072]
[104.54708862 -382.56549072]
[104.54708862 -397.56549072]
[104.54708862 -412.56549072]
[104.54708862 -427.56549072]
[90.96520996 -434.62176514]
[82.22779846 -447.18826294]
[80.34263611 -462.37722778]
[85.74292755 -476.69836426]
[97.18772125 -486.86080933]
[112.04708862 -490.52929688]
[126.90646362 -486.86080933]
[138.35125732 -476.69836426]
[143.75154114 -462.37722778]
[141.86637878 -447.18826294]
[133.12896729 -434.62176514]
[119.54708862 -427.56549072]
[119.54708862 -412.56549072]
[119.54708862 -397.56549072]
[119.54708862 -382.56549072]
[119.54708862 -367.56549072]
[119.54708862 -352.56549072]
[119.54708862 -337.56549072]
[127.28439331 -324.83822632]
[119.54708862 -311.03805542]
[119.54708862 -296.03805542]
[119.54708862 -281.03805542]
[119.54708862 -266.03805542]
[119.54708862 -251.03805542]
[119.54708862 -236.03805542]
[119.54708862 -221.03805542]
[119.54708862 -206.03805542]
[119.69075775 -191.03874207]
[127.67042542 -178.46200562]
[120.19889069 -164.51615906]
[120.48621368 -149.51890564]
[120.77353668 -134.52166748]
[124.06109619 -127.86321259]
[120.91995239 -119.23503113]
[120.91995239 -104.23503113]
[132.90626526 -97.12033844]
[138.24476624 -82.29031372]
[153.11010742 -84.29567719]
[167.97544861 -86.30104065]
[182.84080505 -88.30640411]
[197.70614624 -90.31176758]
[210.34669495 -100.75918579]
[225.61817932 -94.78306580]
[227.81059265 -78.53112793]
[214.66857910 -68.72197723]
[199.71151733 -75.44641876]
[184.84616089 -73.44105530]
[169.98081970 -71.43569183]
[155.11547852 -69.43032837]
[140.25012207 -67.42496490]
[129.05183411 -57.44508362]
[125.35488892 -42.90779877]
[121.65794373 -28.37051392]
[117.96100616 -13.83323097]
[114.26406097 0.70405346]
[110.56712341 15.24133778]
[106.87018585 29.77862167]
[103.17324066 44.31590652]
[99.47630310 58.85319138]
[95.77935791 73.39047241]
[109.13702393 75.51416779]
[119.38512421 83.69903564]
[124.10361481 95.49594879]
[122.43627930 107.67807770]
[115.21784973 117.12100220]
[104.65351868 121.60396576]
[102.64815521 136.46931458]
[100.64279175 151.33465576]
[98.63742828 166.19999695]
[96.63206482 181.06535339]
[94.62670898 195.93069458]
[92.62134552 210.79603577]
[90.61598206 225.66139221]
[88.61061859 240.52673340]
[97.98888397 228.81997681]
[110.61483002 220.72148132]
[125.16597748 217.07949829]
[140.11822510 218.27549744]
[153.90544128 224.18418884]
[165.08352661 234.18670654]
[172.48167419 247.23536682]
[175.32498169 261.96340942]
[173.31565857 276.82821655]
[166.66413879 290.27282715]
[156.06712341 300.88900757]
[142.63455200 307.56481934]
[127.77340698 309.60098267]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 20]
[5 19]
[6 18]
[7 17]
[8 16]
[9 15]
[21 150]
[22 149]
[23 148]
[24 147]
[25 146]
[26 145]
[27 144]
[28 143]
[29 142]
[31 40]
[32 39]
[33 38]
[41 136]
[42 135]
[43 134]
[44 133]
[45 132]
[46 131]
[47 130]
[48 129]
[49 128]
[50 127]
[53 111]
[54 110]
[55 108]
[56 107]
[57 106]
[59 104]
[61 103]
[62 102]
[63 101]
[64 100]
[65 99]
[66 98]
[67 97]
[68 96]
[70 94]
[71 93]
[72 92]
[73 91]
[74 90]
[75 89]
[76 88]
[113 126]
[114 125]
[115 124]
[116 123]
[117 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
