%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 01:49:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGACAAGACAAGCUACUGAAUACGUUCACAUCUGUCUUGAUGCCUAAUAUUUUUACAUUUCUGUAAACAUAUUUCUGAAAUAUUUUUUGCCUUUCAAGCGACAGAUGCCUCAUUUUGUGAAAACUUAAUGAUGAUUUUGUGUUUAAGUUCCAAACAUUUGAAUAAAAUAAUUGACAAUA\
) } def
/len { sequence length } bind def

/coor [
[209.06015015 455.56838989]
[204.20262146 441.37667847]
[199.34509277 427.18496704]
[194.48756409 412.99328613]
[179.54647827 412.77087402]
[165.55677795 407.44006348]
[154.21380615 397.62622070]
[146.89921570 384.49920654]
[144.51268005 369.63400269]
[147.36129761 354.82165527]
[155.12022400 341.85357666]
[166.86955261 332.30484009]
[162.01202393 318.11312866]
[157.15449524 303.92141724]
[152.29696655 289.72973633]
[148.45489502 286.85183716]
[146.39546204 281.51864624]
[147.52644348 274.96038818]
[143.16438293 260.60864258]
[138.80232239 246.25689697]
[134.44027710 231.90516663]
[130.07821655 217.55342102]
[125.71616364 203.20167542]
[121.35410309 188.84992981]
[116.99205017 174.49819946]
[101.93774414 162.38824463]
[106.73136902 142.82621765]
[101.87384033 128.63452148]
[97.01631165 114.44281006]
[89.32920837 101.56227112]
[79.14480591 90.54963684]
[68.96041107 79.53701019]
[58.77600861 68.52438354]
[48.59160614 57.51175308]
[38.40720749 46.49912643]
[28.22280502 35.48649597]
[18.03840446 24.47386932]
[7.66440296 13.63966084]
[-2.89607477 2.98713446]
[-13.45655251 -7.66539192]
[-24.01703072 -18.31791687]
[-43.67393875 -22.70625496]
[-47.84257889 -41.57171631]
[-58.76640701 -51.85130310]
[-77.64478302 -50.53768539]
[-91.27423859 -63.20246506]
[-91.34482574 -81.48899078]
[-102.61884308 -91.38326263]
[-113.89286041 -101.27752686]
[-125.16688538 -111.17179108]
[-136.44090271 -121.06605530]
[-147.71492004 -130.96031189]
[-158.98893738 -140.85458374]
[-170.26296997 -150.74884033]
[-182.42875671 -159.52345276]
[-195.37551880 -167.09848022]
[-208.32229614 -174.67350769]
[-221.26907349 -182.24853516]
[-237.66213989 -181.80229187]
[-246.01341248 -195.91569519]
[-237.73181152 -210.07009888]
[-221.33673096 -209.70466614]
[-213.69403076 -195.19531250]
[-200.74726868 -187.62028503]
[-187.80049133 -180.04524231]
[-174.85371399 -172.47021484]
[-181.01452637 -186.14663696]
[-180.22116089 -201.12564087]
[-172.65010071 -214.07473755]
[-159.98574829 -222.11303711]
[-145.04565430 -223.45220947]
[-131.15364075 -217.79431152]
[-121.40036011 -206.39808655]
[-117.95572662 -191.79896545]
[-121.58607483 -177.24491882]
[-131.48373413 -165.97387695]
[-145.44670105 -160.49340820]
[-160.36869812 -162.02287292]
[-149.09468079 -152.12860107]
[-137.82066345 -142.23434448]
[-126.54663849 -132.34007263]
[-115.27262115 -122.44580841]
[-103.99859619 -112.55154419]
[-92.72457886 -102.65727997]
[-81.45056152 -92.76301575]
[-70.46576691 -95.95972443]
[-59.18800354 -93.41854858]
[-50.45624542 -85.66020966]
[-46.52587891 -74.53337860]
[-48.48682022 -62.77513123]
[-37.56298828 -52.49554443]
[-27.38551521 -53.72271729]
[-18.02279091 -49.03408432]
[-12.68938923 -39.76841736]
[-13.36450386 -28.87839508]
[-2.80402637 -18.22587013]
[7.75645113 -7.57334328]
[18.31692886 3.07918286]
[23.02947807 3.99339032]
[27.20862389 7.89452839]
[29.05103302 14.28946877]
[39.23543549 25.30209732]
[49.41983414 36.31472397]
[59.60423660 47.32735443]
[69.78863525 58.33998108]
[79.97303772 69.35260773]
[90.15744019 80.36524200]
[100.34183502 91.37786865]
[102.37484741 87.80556488]
[105.48577881 84.73779297]
[109.55545807 82.41577911]
[122.75733948 75.29464722]
[135.95921326 68.17352295]
[149.16108704 61.05239487]
[162.36296082 53.93126678]
[166.98941040 39.05733871]
[180.47943115 32.02356720]
[194.63093567 36.52583694]
[207.83280945 29.40470886]
[215.97448730 15.16935444]
[232.37236023 15.37315464]
[240.15773010 29.80645561]
[231.32165527 43.62151718]
[214.95394897 42.60658646]
[201.75205994 49.72771072]
[197.74186707 64.02645111]
[184.45474243 71.43635559]
[169.48410034 67.13314056]
[156.28221130 74.25427246]
[143.08033752 81.37539673]
[129.87846375 88.49652863]
[116.67658997 95.61765289]
[111.20801544 109.58528137]
[116.06554413 123.77698517]
[120.92307281 137.96868896]
[130.98100281 142.19792175]
[136.91615295 151.09014893]
[136.96130371 161.56114197]
[131.34379578 170.13613892]
[135.70584106 184.48788452]
[140.06790161 198.83963013]
[144.42996216 213.19136047]
[148.79200745 227.54310608]
[153.15406799 241.89485168]
[157.51612854 256.24658203]
[161.87817383 270.59832764]
[166.48866272 284.87219238]
[171.34619141 299.06390381]
[176.20372009 313.25561523]
[181.06124878 327.44729614]
[196.19747925 327.79367065]
[210.27551270 333.28741455]
[221.60322571 343.24749756]
[228.82618713 356.45727539]
[231.08956909 371.31320190]
[228.13928223 386.01934814]
[220.35032654 398.80453491]
[208.67926025 408.13574219]
[213.53678894 422.32745361]
[218.39431763 436.51916504]
[223.25184631 450.71084595]
[238.34201050 450.02990723]
[253.01243591 453.62927246]
[266.07385254 461.21719360]
[276.46740723 472.17849731]
[283.35058594 485.62463379]
[286.16537476 500.46557617]
[284.68359375 515.49822998]
[279.02539062 529.50396729]
[269.64938354 541.34747314]
[257.31570435 550.06854248]
[243.02416992 554.96020508]
[227.93333435 555.62597656]
[213.26654053 552.01190186]
[200.21275330 544.41088867]
[189.83020020 533.43914795]
[182.96054077 519.98608398]
[180.16065979 505.14233398]
[181.65753174 490.11114502]
[187.32983398 476.11108398]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 161]
[2 160]
[3 159]
[4 158]
[12 150]
[13 149]
[14 148]
[15 147]
[18 146]
[19 145]
[20 144]
[21 143]
[22 142]
[23 141]
[24 140]
[25 139]
[27 135]
[28 134]
[29 133]
[30 108]
[31 107]
[32 106]
[33 105]
[34 104]
[35 103]
[36 102]
[37 101]
[38 98]
[39 97]
[40 96]
[41 95]
[43 91]
[44 90]
[47 85]
[48 84]
[49 83]
[50 82]
[51 81]
[52 80]
[53 79]
[54 78]
[55 66]
[56 65]
[57 64]
[58 63]
[111 132]
[112 131]
[113 130]
[114 129]
[115 128]
[118 125]
[119 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
