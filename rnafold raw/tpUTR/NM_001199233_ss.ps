%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 03:44:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAUUCUAGCCGGCGGCUGCACAGCUGCUGGGGCAUCUCCAUGAGGAAGAGGGCGGUGGACAGGAGUCAUGAAGACUAAUUCGGAAACUCCCCUGAAGGAGGAGAAGACAUCUGAGCCAUCCUUGUGCCACCAAGCAAGAGUCACUCCAGCUCCUAAAAAGCCACCAUGGGAAGAGCUGCCUCCAAUUAAAGUUCUUGAUUGCACCAGA\
) } def
/len { sequence length } bind def

/coor [
[126.47324371 243.58737183]
[125.12865448 228.64776611]
[123.78406525 213.70814514]
[114.93704987 201.72567749]
[121.40615845 187.28749084]
[120.06156921 172.34788513]
[112.81713104 170.40673828]
[102.21074677 181.01356506]
[98.32823944 166.52444458]
[91.08380127 164.58331299]
[82.44953918 176.84910583]
[73.81528473 189.11488342]
[65.18103027 201.38067627]
[56.54677200 213.64646912]
[47.91251755 225.91226196]
[39.27826309 238.17805481]
[30.64400673 250.44384766]
[22.00975037 262.70962524]
[21.07944870 279.08236694]
[6.31530523 286.22045898]
[-7.09459543 276.78082275]
[-5.35529709 260.47418213]
[9.74395943 254.07537842]
[18.37821579 241.80958557]
[27.01247025 229.54379272]
[35.64672852 217.27799988]
[44.28098297 205.01222229]
[52.91523743 192.74642944]
[61.54949570 180.48063660]
[70.18375397 168.21484375]
[78.81800842 155.94905090]
[60.23656845 128.39019775]
[62.12637711 101.18251038]
[47.66693115 105.17306519]
[35.05229950 118.58721161]
[18.25301743 113.51380157]
[3.85488868 117.72021484]
[-10.54323959 121.92662048]
[-24.90950203 126.24061584]
[-39.24309540 130.66194153]
[-49.99462891 143.04484558]
[-66.04064941 139.65998840]
[-70.87438202 123.98941040]
[-59.52330017 112.15366364]
[-43.66442108 116.32834625]
[-29.33082962 111.90702057]
[-23.86532784 106.93121338]
[-14.74965096 107.52849579]
[-0.35152227 103.32208252]
[14.04660606 99.11566925]
[20.13171196 88.66053772]
[32.09321213 85.03857422]
[43.67638016 90.71362305]
[58.13582230 86.72306824]
[65.04545593 73.40927887]
[59.98550797 59.28848267]
[54.92556000 45.16768646]
[49.86560822 31.04688835]
[44.80566025 16.92609215]
[39.64022827 2.84353805]
[34.36960602 -11.19998550]
[29.09898567 -25.24350739]
[23.82836151 -39.28703308]
[18.55773926 -53.33055496]
[9.03100395 -64.91680908]
[-3.72919750 -72.80206299]
[-16.48939896 -80.68732452]
[-29.24959946 -88.57257843]
[-45.13087463 -86.29999542]
[-56.71020508 -97.40399170]
[-55.10491562 -113.36653137]
[-41.54644775 -121.94251251]
[-26.43570137 -116.55319214]
[-21.36434364 -101.33277893]
[-8.60414219 -93.44752502]
[4.15605927 -85.56226349]
[16.91625977 -77.67700958]
[23.04915619 -81.99414062]
[35.31494522 -90.62839508]
[41.44784164 -94.94551849]
[38.32916641 -109.61773682]
[35.21049118 -124.28994751]
[32.09181595 -138.96215820]
[28.97314072 -153.63438416]
[25.85446548 -168.30659485]
[7.51326036 -178.58961487]
[2.79150343 -198.77801514]
[14.33761978 -215.64373779]
[10.34706688 -230.10319519]
[6.35651445 -244.56263733]
[2.36596179 -259.02206421]
[-1.73263478 -273.45126343]
[-5.93904543 -287.84939575]
[-18.15973473 -298.78497314]
[-14.53521347 -314.77856445]
[1.20592225 -319.37731934]
[12.87054062 -307.85046387]
[8.45908260 -292.05581665]
[12.66549397 -277.65768433]
[17.55898666 -272.11834717]
[16.82540512 -263.01263428]
[20.81595802 -248.55317688]
[24.80651093 -234.09373474]
[28.79706192 -219.63429260]
[37.96080399 -217.74525452]
[45.85541153 -212.61645508]
[51.37313461 -204.91725159]
[53.72153473 -195.68099976]
[52.53705597 -186.16642761]
[47.94060898 -177.68608093]
[40.52667999 -171.42526245]
[43.64535522 -156.75305176]
[46.76403046 -142.08084106]
[49.88270569 -127.40862274]
[53.00138092 -112.73641205]
[56.12005615 -98.06419373]
[57.06944656 -87.25782776]
[55.22806931 -77.48204041]
[51.14402008 -69.38996887]
[45.50336075 -63.43387604]
[39.06652832 -59.83987427]
[32.60126495 -58.60117722]
[37.87188721 -44.55765533]
[43.14250946 -30.51412964]
[48.41313171 -16.47060776]
[53.68375397 -2.42708445]
[58.97751617 2.73106194]
[58.92645645 11.86614227]
[63.98640823 25.98693848]
[69.04635620 40.10773468]
[74.10630798 54.22853470]
[79.16625977 68.34932709]
[122.37145996 56.56439972]
[159.78263855 97.76178741]
[173.39302063 91.45642853]
[187.00340271 85.15106964]
[192.52552795 70.58591461]
[206.41821289 64.38526917]
[220.26983643 69.73954010]
[233.88021851 63.43417740]
[247.49060059 57.12882233]
[259.32073975 44.98452759]
[274.26535034 52.99047852]
[270.70935059 69.56730652]
[253.79595947 70.73920441]
[240.18557739 77.04455566]
[226.57519531 83.34991455]
[221.70314026 97.37841034]
[207.99009705 103.96682739]
[193.30876160 98.76145172]
[179.69837952 105.06681061]
[166.08799744 111.37216949]
[168.32362366 126.20462799]
[183.18788147 128.21812439]
[198.05212402 130.23162842]
[212.91636658 132.24513245]
[221.73193359 119.73335266]
[235.35752869 112.76185608]
[250.66207886 112.93261719]
[264.12872314 120.20641327]
[272.66293335 132.91175842]
[274.30358887 148.12908936]
[268.67367554 162.36154175]
[257.06692505 172.33862305]
[242.15049744 175.76766968]
[227.35205078 171.86070251]
[216.07215881 161.51551819]
[210.90286255 147.10937500]
[196.03862000 145.09587097]
[181.17437744 143.08236694]
[166.31013489 141.06887817]
[159.50027466 154.43397522]
[169.86621094 165.27589417]
[180.23214722 176.11781311]
[190.59809875 186.95974731]
[200.96403503 197.80166626]
[211.32997131 208.64358521]
[221.69590759 219.48550415]
[236.19599915 214.71997070]
[251.32667542 216.72624207]
[264.08377075 225.10595703]
[271.93429565 238.19534302]
[273.31958008 253.39546204]
[267.96453857 267.68832397]
[256.93243408 278.23611450]
[242.41371155 282.94451904]
[227.29103088 280.87866211]
[214.56706238 272.44879150]
[206.76812744 259.32858276]
[205.44270325 244.12312317]
[210.85398865 229.85145569]
[200.48805237 219.00952148]
[190.12211609 208.16760254]
[179.75616455 197.32568359]
[169.39022827 186.48376465]
[159.02429199 175.64183044]
[148.65835571 164.79991150]
[135.00119019 171.00329590]
[136.34577942 185.94290161]
[145.28897095 198.99395752]
[138.72367859 212.36355591]
[140.06826782 227.30317688]
[141.41285706 242.24278259]
[154.34729004 251.03109741]
[158.55685425 266.09143066]
[152.05392456 280.31274414]
[137.90898132 286.98019409]
[122.80084229 282.94558716]
[113.86309814 270.11395264]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 203]
[2 202]
[3 201]
[5 199]
[6 198]
[10 31]
[11 30]
[12 29]
[13 28]
[14 27]
[15 26]
[16 25]
[17 24]
[18 23]
[33 54]
[34 53]
[36 50]
[37 49]
[38 48]
[39 46]
[40 45]
[55 132]
[56 131]
[57 130]
[58 129]
[59 128]
[60 126]
[61 125]
[62 124]
[63 123]
[64 122]
[65 77]
[66 76]
[67 75]
[68 74]
[80 116]
[81 115]
[82 114]
[83 113]
[84 112]
[85 111]
[88 104]
[89 103]
[90 102]
[91 101]
[92 99]
[93 98]
[134 152]
[135 151]
[136 150]
[139 147]
[140 146]
[141 145]
[153 171]
[154 170]
[155 169]
[156 168]
[172 197]
[173 196]
[174 195]
[175 194]
[176 193]
[177 192]
[178 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
