%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 05:55:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCAGGCCAGGGCCUUCCAGCUGCUCUUGGGGCCAGAGCCAAGAGCCUCUCAGUAGAGGGAGGGGCUGCCCUGAGUGGAGUAUUAAAGACACUUAAGAAAACCGCUCAA\
) } def
/len { sequence length } bind def

/coor [
[171.34428406 176.46298218]
[164.69519043 174.04496765]
[159.13183594 169.58982849]
[155.26277161 163.54196167]
[153.52479553 156.52206421]
[154.13400269 149.26353455]
[141.82646179 140.68888855]
[129.51893616 132.11424255]
[124.60869598 132.09434509]
[119.69254303 128.88844299]
[116.77640533 122.68991852]
[104.97369385 113.43271637]
[91.16001892 111.27075958]
[85.76910400 98.37000275]
[73.96638489 89.11279297]
[62.16366959 79.85558319]
[50.36095428 70.59837341]
[38.55823898 61.34116745]
[26.75552368 52.08395767]
[11.27190685 53.78553772]
[-0.56585300 44.22927475]
[-2.09262609 29.45752716]
[-13.89534187 20.20031929]
[-25.69805717 10.94311142]
[-37.50077057 1.68590260]
[-49.30348969 -7.57130575]
[-62.48934555 -4.42273426]
[-74.88271332 -9.41499233]
[-81.99312592 -20.49536324]
[-81.38607788 -33.45124435]
[-92.92209625 -43.03874588]
[-104.45812225 -52.62625122]
[-115.99414062 -62.21375656]
[-127.53015900 -71.80126190]
[-139.20069885 -81.22456360]
[-154.08728027 -76.84626770]
[-168.69293213 -82.08596802]
[-177.40148926 -94.92888641]
[-176.86433411 -110.43666077]
[-167.28802490 -122.64624023]
[-152.35482788 -126.86277771]
[-137.80686951 -121.46495056]
[-129.23814392 -108.52831268]
[-129.94348145 -93.02727509]
[-122.63149261 -91.35112000]
[-117.94265747 -83.33728027]
[-106.40663147 -73.74977875]
[-94.87061310 -64.16226959]
[-83.33459473 -54.57476807]
[-71.79857635 -44.98726273]
[-55.20490265 -47.28038025]
[-41.77914429 -36.71059799]
[-40.04627991 -19.37402153]
[-28.24356461 -10.11681271]
[-16.44084930 -0.85960436]
[-4.63813305 8.39760399]
[7.16458225 17.65481186]
[21.87469673 15.61812115]
[33.97620010 24.83811378]
[36.01273346 40.28124237]
[47.81544876 49.53845215]
[59.61816406 58.79566193]
[71.42087555 68.05287170]
[83.22359467 77.31008148]
[95.02630615 86.56728363]
[108.83998108 88.72924042]
[114.23089600 101.62999725]
[126.03361511 110.88720703]
[138.09356689 119.80670166]
[150.40110779 128.38134766]
[162.70864868 136.95599365]
[186.54998779 136.19136047]
[196.97563171 156.87420654]
[210.55526733 163.24552917]
[224.13488770 169.61685181]
[237.71452332 175.98817444]
[251.29414368 182.35949707]
[264.87377930 188.73080444]
[278.45339966 195.10212708]
[291.85153198 185.53236389]
[308.15023804 183.99101257]
[322.93515015 190.80137634]
[332.24914551 204.03742981]
[333.65124512 220.06750488]
[347.40573120 226.05198669]
[361.16021729 232.03645325]
[374.91473389 238.02093506]
[389.52700806 231.99963379]
[404.08486938 238.15142822]
[409.95135498 252.82656860]
[403.64599609 267.31857300]
[388.90963745 273.02957153]
[374.48510742 266.57135010]
[368.93023682 251.77543640]
[355.17575073 245.79095459]
[341.42126465 239.80647278]
[327.66677856 233.82199097]
[317.17687988 242.68852234]
[303.81814575 246.15661621]
[290.20953369 243.48690796]
[279.04473877 235.14923096]
[272.55908203 222.74105835]
[272.08209229 208.68176270]
[258.50244141 202.31044006]
[244.92282104 195.93911743]
[231.34320068 189.56779480]
[217.76356506 183.19647217]
[204.18394470 176.82516479]
[190.60430908 170.45384216]
[185.01623535 174.53277588]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 71]
[7 70]
[8 69]
[11 68]
[12 67]
[14 65]
[15 64]
[16 63]
[17 62]
[18 61]
[19 60]
[22 57]
[23 56]
[24 55]
[25 54]
[26 53]
[30 50]
[31 49]
[32 48]
[33 47]
[34 46]
[35 44]
[73 109]
[74 108]
[75 107]
[76 106]
[77 105]
[78 104]
[79 103]
[84 97]
[85 96]
[86 95]
[87 94]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
