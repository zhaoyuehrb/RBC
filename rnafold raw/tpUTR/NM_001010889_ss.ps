%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Sep  9 23:45:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCCUGCCUAUUUGGGUGGAUAUGUCAAACGCUUUCUUCUGGACACUUGGAAACUAAAACCUAGGUCUUAGGUACAUCCUAUAGGGAGCACAGAACCCAUCAUUUCACACAUGGGCUCUGAAAGUGGGAAAGGAAAGGUGAUCAAGCAGGGGCAGGACUUGGGGGAAGUGUUGCCAUGGAUUCGAUGGGACUUUGGGGACCU\
) } def
/len { sequence length } bind def

/coor [
[343.54071045 530.96368408]
[345.29138184 526.35015869]
[347.84277344 522.49401855]
[350.96853638 519.51745605]
[341.74575806 507.68783569]
[332.52297974 495.85818481]
[323.30020142 484.02856445]
[314.07739258 472.19891357]
[304.85461426 460.36929321]
[295.63183594 448.53964233]
[291.08111572 447.07391357]
[287.40512085 442.73065186]
[286.31390381 436.20071411]
[277.45980835 424.09268188]
[268.60568237 411.98464966]
[255.31330872 413.26406860]
[243.02651978 407.76290894]
[234.99967957 396.82107544]
[233.41651917 383.23437500]
[238.79698181 370.54074097]
[230.13037109 358.29779053]
[221.46376038 346.05484009]
[219.88117981 360.97113037]
[209.92208862 372.18792725]
[195.29800415 375.52499390]
[181.45896912 369.73870850]
[173.56246948 356.98547363]
[174.55134583 342.01809692]
[184.05705261 330.41458130]
[198.53704834 326.49926758]
[212.59504700 331.73138428]
[205.49864197 318.51620483]
[198.40223694 305.30099487]
[191.30584717 292.08581543]
[184.20944214 278.87063599]
[177.11303711 265.65545654]
[171.17568970 261.24731445]
[170.01087952 252.18168640]
[163.11882019 238.85877991]
[156.22677612 225.53588867]
[149.33471680 212.21299744]
[133.03720093 210.26750183]
[120.98861694 198.87858582]
[118.07157898 182.38906860]
[125.63025665 167.26054382]
[118.53385162 154.04534912]
[111.43745422 140.83016968]
[104.34104919 127.61499023]
[97.24464417 114.39980316]
[99.52874756 129.22488403]
[94.40010071 143.32087708]
[83.12332916 153.21200562]
[68.47904205 156.45930481]
[54.07823944 152.26206970]
[43.47185135 141.65525818]
[39.27520370 127.25428009]
[42.52310181 112.61013031]
[52.41468048 101.33375549]
[66.51087952 96.20568085]
[81.33473969 98.48990631]
[68.11956024 91.39350128]
[54.90437698 84.29709625]
[41.68919373 77.20069122]
[28.47401047 70.10428619]
[12.75990677 73.33640289]
[0.52809924 62.95553207]
[1.16178226 46.92499924]
[14.17484856 37.54205322]
[29.58478737 42.00448990]
[35.57041168 56.88910675]
[48.78559494 63.98551178]
[62.00077820 71.08191681]
[75.21596527 78.17831421]
[88.43114471 85.27471924]
[93.48386383 79.73215485]
[88.93654633 65.43803406]
[103.58929443 68.64701843]
[108.64201355 63.10445404]
[100.35653687 50.60041809]
[92.07106781 38.09638214]
[83.78559113 25.59234619]
[69.99636841 15.72859287]
[75.65740204 -0.25230208]
[92.58088684 0.76354611]
[96.28962708 17.30687141]
[104.57510376 29.81090736]
[112.86057281 42.31494141]
[121.14604950 54.81897736]
[128.45983887 53.15811539]
[132.89689636 38.82938766]
[143.08741760 49.83639145]
[150.40121460 48.17552567]
[152.47355652 33.31937027]
[154.54589844 18.46321297]
[156.61825562 3.60705733]
[150.86172485 -11.12973404]
[160.28318787 -22.66600037]
[162.35552979 -37.52215576]
[164.42787170 -52.37831116]
[166.50021362 -67.23446655]
[168.57257080 -82.09062958]
[156.41072083 -91.47066498]
[150.58311462 -105.68103790]
[152.65736389 -120.89922333]
[162.07546997 -133.03160095]
[176.30404663 -138.81463623]
[191.51565552 -136.69270325]
[203.61845398 -127.23660278]
[209.35685730 -112.98998260]
[207.18725586 -97.78509521]
[197.69326782 -85.71199799]
[183.42872620 -80.01828003]
[181.35636902 -65.16212463]
[179.28402710 -50.30596924]
[177.21168518 -35.44981003]
[175.13934326 -20.59365463]
[181.04408264 -6.91947460]
[171.47441101 5.67940283]
[169.40205383 20.53555870]
[167.32971191 35.39171600]
[165.25737000 50.24787140]
[147.39811707 99.00805664]
[110.45982361 107.30340576]
[117.55622864 120.51858521]
[124.65263367 133.73376465]
[131.74903870 146.94894409]
[138.84544373 160.16413879]
[152.60659790 161.00578308]
[164.06321716 168.47908020]
[170.28010559 180.54161072]
[169.72782898 193.99237061]
[162.65760803 205.32093811]
[169.54966736 218.64382935]
[176.44172668 231.96673584]
[183.33378601 245.28962708]
[190.32821655 258.55905151]
[197.42462158 271.77423096]
[204.52102661 284.98941040]
[211.61743164 298.20462036]
[218.71383667 311.41979980]
[225.81022644 324.63497925]
[233.70671082 337.38821411]
[242.37332153 349.63119507]
[251.03993225 361.87414551]
[267.95162964 361.85125732]
[281.41220093 371.81250000]
[286.23663330 387.67440796]
[280.71374512 403.13052368]
[289.56784058 415.23858643]
[298.42196655 427.34661865]
[307.46148682 439.31686401]
[316.68426514 451.14651489]
[325.90704346 462.97613525]
[335.12982178 474.80578613]
[344.35260010 486.63540649]
[353.57537842 498.46505737]
[362.79815674 510.29467773]
[374.97402954 519.05529785]
[389.12133789 524.04064941]
[403.26867676 529.02593994]
[417.41598511 534.01129150]
[432.44833374 528.40698242]
[446.12771606 536.78875732]
[447.96047974 552.72680664]
[436.54067993 563.99475098]
[420.62863159 561.94891357]
[412.43066406 548.15856934]
[398.28335571 543.17327881]
[384.13601685 538.18792725]
[369.98870850 533.20263672]
[360.58483887 544.88885498]
[368.48132324 557.64208984]
[376.37780762 570.39532471]
[390.22106934 578.05529785]
[390.34271240 592.94946289]
[398.23919678 605.70269775]
[406.13568115 618.45593262]
[419.97891235 626.11590576]
[420.10058594 641.01000977]
[427.99707031 653.76330566]
[435.17950439 659.41613770]
[435.91519165 666.77429199]
[443.61434937 679.64764404]
[451.31350708 692.52099609]
[465.89566040 700.02386475]
[466.41870117 716.41467285]
[452.34457397 724.83197021]
[438.15155029 716.61676025]
[438.44015503 700.22015381]
[430.74099731 687.34680176]
[423.04187012 674.47344971]
[415.24380493 661.65979004]
[407.34732056 648.90649414]
[394.06887817 642.15875244]
[393.38241577 626.35241699]
[385.48593140 613.59918213]
[377.58944702 600.84594727]
[364.31103516 594.09814453]
[363.62457275 578.29180908]
[355.72808838 565.53857422]
[347.83160400 552.78533936]
[344.85964966 547.34509277]
[343.19360352 541.70568848]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 157]
[5 156]
[6 155]
[7 154]
[8 153]
[9 152]
[10 151]
[13 150]
[14 149]
[15 148]
[20 144]
[21 143]
[22 142]
[31 141]
[32 140]
[33 139]
[34 138]
[35 137]
[36 136]
[38 135]
[39 134]
[40 133]
[41 132]
[45 127]
[46 126]
[47 125]
[48 124]
[49 123]
[60 74]
[61 73]
[62 72]
[63 71]
[64 70]
[78 88]
[79 87]
[80 86]
[81 85]
[92 121]
[93 120]
[94 119]
[95 118]
[97 116]
[98 115]
[99 114]
[100 113]
[101 112]
[158 170]
[159 169]
[160 168]
[161 167]
[171 201]
[172 200]
[173 199]
[175 197]
[176 196]
[177 195]
[179 193]
[180 192]
[182 191]
[183 190]
[184 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
