%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 16:27:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGAAAUUCUAUAACUUUAAUGGGGUAACCUCACAUUAAUUCAUGUAUAAUGCUCCAGAAAAUUCACACCAGGAGAGAAAUCUUACAAGUAUGAUAUUGUCUUUGUCAAUACCUCAUUUGUAAAACAGACCCAUUAGUCGUGAAUUUCCAGCUCUUUCAAAAAUAAAUGUUUAUGUGAGAAAAUAA\
) } def
/len { sequence length } bind def

/coor [
[262.32501221 420.16497803]
[263.71533203 410.17962646]
[267.62646484 400.86901855]
[273.80487061 392.85925293]
[265.52346802 380.35250854]
[257.24209595 367.84576416]
[248.96072388 355.33901978]
[240.67935181 342.83227539]
[232.39796448 330.32550049]
[224.11659241 317.81875610]
[217.78970337 313.96981812]
[215.80335999 305.03311157]
[207.73213196 292.38973999]
[194.36210632 285.82531738]
[193.45817566 270.02996826]
[185.38694763 257.38656616]
[177.31570435 244.74317932]
[172.90933228 242.85478210]
[169.65165710 238.16757202]
[169.19422913 231.53971863]
[161.54998779 218.63368225]
[153.90573120 205.72766113]
[146.26148987 192.82164001]
[138.61723328 179.91561890]
[130.97297668 167.00959778]
[117.96117401 171.60313416]
[104.32180023 173.69487000]
[90.53142548 173.21173096]
[77.07188416 170.17059326]
[64.41344452 164.67773438]
[52.99838257 156.92503357]
[43.22554779 147.18339539]
[35.43639374 135.79318237]
[29.90307426 123.15237427]
[15.25562572 126.38536835]
[0.60817772 129.61836243]
[-14.03927040 132.85136414]
[-22.33095360 146.30586243]
[-37.72690964 149.87518311]
[-51.09299088 141.44171143]
[-54.49934006 126.00888824]
[-45.92502975 112.73271179]
[-30.45704460 109.48972321]
[-17.27226830 118.20391846]
[-2.62481976 114.97091675]
[12.02262783 111.73792267]
[26.67007637 108.50492859]
[26.20656776 102.03495026]
[26.31280708 95.54925537]
[26.98797035 89.09793091]
[28.22684669 82.73078156]
[30.01987076 76.49695587]
[32.35319901 70.44460297]
[35.20881271 64.62043762]
[22.84218979 56.13122940]
[10.47556591 47.64202118]
[-1.89105701 39.15281677]
[-14.40451908 47.74221039]
[-29.17672157 51.22739029]
[-44.20984268 49.13701630]
[-57.47077942 41.75379181]
[-67.16609955 30.07624054]
[-71.98458862 15.68365097]
[-71.27458191 0.52250594]
[-65.13211060 -13.35677528]
[-54.38788605 -24.07713509]
[-40.49497986 -30.18873024]
[-25.33229256 -30.86501884]
[-10.95045376 -26.01453972]
[0.70551163 -16.29327774]
[8.05922985 -3.01595688]
[10.11616993 12.02177620]
[6.59814930 26.78619194]
[18.96477318 35.27539825]
[31.33139610 43.76460648]
[43.69802094 52.25381088]
[50.77303696 44.98802185]
[58.77709198 38.76044464]
[67.55912018 33.68860626]
[76.95339203 29.86822891]
[86.78260803 27.37141037]
[96.86126709 26.24527168]
[106.99916077 26.51106644]
[117.00496674 28.16377831]
[121.92533875 13.99374294]
[126.84571075 -0.17629369]
[131.76608276 -14.34632969]
[136.68646240 -28.51636696]
[141.60682678 -42.68640137]
[146.52720642 -56.85643768]
[151.44757080 -71.02647400]
[144.80776978 -85.11727905]
[149.99958801 -99.41761780]
[163.47393799 -105.66082001]
[160.69154358 -121.23544312]
[172.17559814 -130.72047424]
[177.09596252 -144.89051819]
[182.01634216 -159.06054688]
[186.93670654 -173.23059082]
[191.85708618 -187.40061951]
[183.68321228 -200.73185730]
[186.04193115 -216.19052124]
[197.81951904 -226.47752380]
[213.45497131 -226.73564148]
[225.56570435 -216.84300232]
[228.43339539 -201.47061157]
[220.70401001 -187.87683105]
[206.02711487 -182.48025513]
[201.10675049 -168.31021118]
[196.18637085 -154.14018250]
[191.26600647 -139.97013855]
[186.34562683 -125.80010223]
[189.47994995 -111.23902130]
[177.64396667 -100.74044800]
[184.34939575 -87.49005890]
[179.56129456 -73.04953766]
[165.61761475 -66.10610199]
[160.69723511 -51.93606567]
[155.77687073 -37.76602936]
[150.85649109 -23.59599304]
[145.93612671 -9.42595673]
[141.01574707 4.74407911]
[136.09538269 18.91411591]
[131.17500305 33.08415222]
[149.31558228 45.06744766]
[163.17869568 61.81539154]
[171.56192017 81.87533569]
[173.73811340 103.50734711]
[169.51853943 124.83514404]
[159.26916504 144.00883484]
[143.87901306 159.36534119]
[151.52325439 172.27136230]
[159.16751099 185.17739868]
[166.81175232 198.08341980]
[174.45600891 210.98944092]
[182.10025024 223.89546204]
[189.95909119 236.67195129]
[198.03033447 249.31533813]
[206.10156250 261.95870972]
[220.04890442 269.42745972]
[220.37551880 284.31851196]
[228.44674683 296.96188354]
[236.62333679 309.53738403]
[244.90472412 322.04412842]
[253.18609619 334.55087280]
[261.46746826 347.05764771]
[269.74884033 359.56439209]
[278.03024292 372.07113647]
[286.31161499 384.57788086]
[306.64947510 382.12432861]
[325.36410522 390.26690674]
[337.34274292 406.69720459]
[339.35531616 426.85421753]
[330.92523193 445.19042969]
[340.41687012 456.80541992]
[349.90853882 468.42044067]
[359.40020752 480.03543091]
[374.12390137 485.82540894]
[376.18615723 500.57653809]
[385.67782593 512.19152832]
[400.40151978 517.98150635]
[402.46377563 532.73266602]
[411.95544434 544.34765625]
[421.44711304 555.96264648]
[430.93875122 567.57769775]
[446.45803833 572.87713623]
[449.36227417 589.01708984]
[436.66384888 599.39410400]
[421.42581177 593.33319092]
[419.32376099 577.06933594]
[409.83209229 565.45434570]
[400.34042358 553.83929443]
[390.84878540 542.22430420]
[376.80398560 537.26513672]
[374.06280518 521.68322754]
[364.57116699 510.06820679]
[350.52636719 505.10903931]
[347.78518677 489.52709961]
[338.29354858 477.91207886]
[328.80187988 466.29708862]
[319.31021118 454.68206787]
[310.02215576 458.23751831]
[300.11599731 459.29400635]
[290.25332642 457.77218628]
[281.09512329 453.76516724]
[273.25738525 447.53298950]
[267.26980591 439.48562622]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[12 142]
[13 141]
[15 139]
[16 138]
[17 137]
[20 136]
[21 135]
[22 134]
[23 133]
[24 132]
[25 131]
[34 47]
[35 46]
[36 45]
[37 44]
[54 76]
[55 75]
[56 74]
[57 73]
[84 124]
[85 123]
[86 122]
[87 121]
[88 120]
[89 119]
[90 118]
[91 117]
[94 114]
[96 112]
[97 111]
[98 110]
[99 109]
[100 108]
[154 181]
[155 180]
[156 179]
[157 178]
[159 176]
[160 175]
[162 173]
[163 172]
[164 171]
[165 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
