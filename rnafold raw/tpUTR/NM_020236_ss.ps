%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 22:06:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUGGUGAAUUGUGAAAUUACUUUCAGUGGUUUAAGAAGCAAUGGAGAAAAUGAUAAUACAGCAUAAUUUUUACAUUUGAUGUCUUGUUAUUGAUCAUACUUGAAAGUGAACUUUAACAUUGAAAAAUCGUACAGUCAUUUCAAGAAUAAGAAAAUAAAAUUUUCUCUUUGUCUGAACCUGC\
) } def
/len { sequence length } bind def

/coor [
[-0.92159796 403.87603760]
[-14.49891090 410.25228882]
[-29.25531769 407.55999756]
[-39.70610046 396.79983521]
[-41.96693420 381.97155762]
[-43.06587219 397.75454712]
[-56.51596069 404.15332031]
[-64.74273682 416.69604492]
[-72.96952057 429.23880005]
[-81.19629669 441.78152466]
[-79.34193420 454.56146240]
[-86.47167969 464.84408569]
[-98.30670166 467.41720581]
[-106.74642181 479.81765747]
[-115.18614197 492.21810913]
[-115.85809326 508.60348511]
[-130.50781250 515.97351074]
[-144.06494141 506.74658203]
[-142.58305359 490.41452026]
[-127.58659363 483.77838135]
[-119.14687347 471.37792969]
[-110.70714569 458.97747803]
[-110.36632538 441.44195557]
[-93.73902893 433.55474854]
[-85.51225281 421.01202393]
[-77.28546906 408.46926880]
[-69.05869293 395.92654419]
[-68.54818726 381.04067993]
[-54.50966644 373.74478149]
[-47.15801239 360.66986084]
[-40.71576309 347.12374878]
[-34.27350998 333.57763672]
[-27.83125877 320.03149414]
[-21.38900757 306.48538208]
[-14.94675541 292.93927002]
[-14.91329193 285.53067017]
[-8.27713394 279.21829224]
[-8.93218899 274.46563721]
[-6.59190512 269.25384521]
[-1.14051712 265.44525146]
[5.98683596 252.24673462]
[13.11418915 239.04821777]
[20.24154282 225.84970093]
[20.65427589 218.45254517]
[27.60491943 212.48820496]
[34.95657349 199.41329956]
[42.30822372 186.33839417]
[49.65987778 173.26348877]
[57.01153183 160.18858337]
[64.36318207 147.11367798]
[71.71483612 134.03877258]
[79.06649017 120.96385956]
[86.41814423 107.88895416]
[85.52230072 92.91572571]
[76.66413116 80.81065369]
[67.80596924 68.70557404]
[58.94779968 56.60049820]
[50.08963394 44.49541855]
[41.23146820 32.39034271]
[32.37330246 20.28526497]
[17.00673676 17.73449516]
[8.19573784 5.33203697]
[10.72220707 -9.30191422]
[1.86404026 -21.40699196]
[-6.99412632 -33.51206970]
[-15.85229301 -45.61714554]
[-30.61269760 -41.98411560]
[-45.63907623 -44.28113937]
[-58.64002228 -52.15793228]
[-67.63298035 -64.41334534]
[-71.24658966 -79.17852020]
[-68.92980194 -94.20186615]
[-61.03591156 -107.19243622]
[-48.76867676 -116.16926575]
[-33.99876785 -119.76344299]
[-18.97848129 -117.42689514]
[-5.99830532 -109.51592255]
[2.96237731 -97.23689270]
[6.53712845 -82.46226501]
[4.18082428 -67.44506836]
[-3.74721575 -54.47531128]
[5.11095095 -42.37023544]
[13.96911716 -30.26515770]
[22.82728386 -18.16008186]
[37.53985214 -16.14118958]
[46.69573212 -3.99110723]
[44.47837830 11.42709923]
[53.33654404 23.53217697]
[62.19470978 35.63725281]
[71.05287933 47.74232864]
[79.91104126 59.84740829]
[88.76921082 71.95248413]
[97.62738037 84.05756378]
[90.26685333 70.98764801]
[92.44692230 56.14691544]
[103.25527191 45.74597549]
[118.16877747 44.13744736]
[130.94638062 51.99447632]
[136.24085999 66.02902222]
[131.83656311 80.36785126]
[119.57540131 89.01076508]
[132.77392578 81.88340759]
[145.97242737 74.75605774]
[159.17094421 67.62870026]
[172.36946106 60.50135040]
[185.56797791 53.37399673]
[198.76649475 46.24664307]
[204.84864807 39.39884186]
[212.25175476 39.11246109]
[225.57003784 32.21148682]
[238.88832092 25.31051064]
[245.08648682 18.56754684]
[252.49340820 18.40760231]
[265.92758179 11.73501587]
[274.84530640 -1.33344734]
[289.68582153 -0.06542778]
[303.11999512 -6.73801374]
[308.24459839 -21.44773865]
[321.96380615 -28.02331543]
[335.95568848 -23.04712296]
[349.38986206 -29.71970749]
[362.82400513 -36.39229584]
[371.44036865 -50.34544754]
[387.82208252 -49.58965302]
[395.11706543 -34.90240479]
[385.82086182 -21.39268494]
[369.49661255 -22.95813751]
[356.06243896 -16.28555107]
[342.62829590 -9.61296463]
[338.13891602 4.54264498]
[324.60983276 11.50097084]
[309.79257202 6.69614363]
[296.35839844 13.36872959]
[288.40158081 25.95992470]
[272.60015869 25.16917419]
[259.16598511 31.84176064]
[245.78929138 38.62878799]
[232.47100830 45.52976227]
[219.15274048 52.43074036]
[205.89385986 59.44515991]
[192.69534302 66.57250977]
[179.49682617 73.69986725]
[166.29830933 80.82721710]
[153.09979248 87.95457458]
[139.90127563 95.08192444]
[126.70275879 102.20928192]
[141.70257568 102.28214264]
[156.05947876 106.62719727]
[167.80439758 115.95761871]
[175.28385925 128.95983887]
[177.44487000 143.80335999]
[173.98320007 158.39845276]
[165.38619995 170.69038391]
[152.86416626 178.94863892]
[138.18002319 182.01058960]
[123.40102386 179.44519043]
[110.60782623 171.61358643]
[101.60149384 159.61833191]
[97.64997101 145.14817810]
[99.30981445 130.23948669]
[99.49304962 115.24060822]
[92.14139557 128.31550598]
[84.78974915 141.39042664]
[77.43809509 154.46533203]
[70.08644104 167.54023743]
[62.73478699 180.61514282]
[55.38313293 193.69004822]
[48.03147888 206.76495361]
[40.67982483 219.83985901]
[33.44005966 232.97705078]
[26.31270599 246.17556763]
[19.18535233 259.37408447]
[12.05799961 272.57260132]
[5.15702391 285.89086914]
[-1.40063417 299.38150024]
[-7.84288597 312.92764282]
[-14.28513718 326.47375488]
[-20.72738838 340.01986694]
[-27.16964149 353.56600952]
[-33.61189270 367.11212158]
[-19.76725578 361.33923340]
[-5.14355373 364.67800903]
[4.82381964 375.88745117]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 29]
[7 27]
[8 26]
[9 25]
[10 24]
[13 22]
[14 21]
[15 20]
[30 180]
[31 179]
[32 178]
[33 177]
[34 176]
[35 175]
[37 174]
[40 173]
[41 172]
[42 171]
[43 170]
[45 169]
[46 168]
[47 167]
[48 166]
[49 165]
[50 164]
[51 163]
[52 162]
[53 161]
[54 93]
[55 92]
[56 91]
[57 90]
[58 89]
[59 88]
[60 87]
[63 84]
[64 83]
[65 82]
[66 81]
[101 146]
[102 145]
[103 144]
[104 143]
[105 142]
[106 141]
[107 140]
[109 139]
[110 138]
[111 137]
[113 136]
[114 135]
[116 133]
[117 132]
[120 129]
[121 128]
[122 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
