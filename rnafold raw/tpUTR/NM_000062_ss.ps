%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Sep  9 22:41:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACCUGCAGGAUCAGGUUAGGGCGAGCGCUACCUCUCCAGCCUCAGCUCUCAGUUGCAGCCCUGCUGCUGCCUGCCUGGACUUGGCCCCUGCCACCUCCUGCCUCAGGUGUCCGCUAUCCACCAAAAGGGCUCCCUGAGGGUCUGGGCAAGGGACCUGCUUCUAUUAGCCCUUCUCCAUGGCCCUGCCAUGCUCUCCAAACCACUUUUUGCAGCUUUCUCUAGUUCAAGUUCACCAGACUCUAUAAAUAAAACCU\
GACAGACCAUGACUUUC\
) } def
/len { sequence length } bind def

/coor [
[249.41795349 392.00833130]
[247.55494690 376.22213745]
[251.22274780 360.72772217]
[259.99478149 347.40713501]
[250.98364258 335.41549683]
[241.97250366 323.42385864]
[232.96136475 311.43222046]
[223.95024109 299.44058228]
[214.93910217 287.44894409]
[205.92796326 275.45730591]
[196.91683960 263.46563721]
[182.05218506 263.89010620]
[169.64111328 255.37956238]
[164.56176758 241.02499390]
[168.95962524 226.26135254]
[159.94848633 214.26971436]
[150.93734741 202.27807617]
[141.92622375 190.28642273]
[126.96816254 189.16548157]
[116.27040863 199.68014526]
[105.57266235 210.19480896]
[94.87491608 220.70947266]
[84.17716980 231.22413635]
[73.54009247 241.80018616]
[62.96405029 252.43725586]
[52.38800812 263.07434082]
[48.57589722 271.33367920]
[41.62852859 273.77206421]
[30.93078041 284.28674316]
[20.23303223 294.80139160]
[22.66117096 310.12731934]
[15.58724689 323.93817139]
[1.73132753 330.92337036]
[-13.57870293 328.39700317]
[-24.45582581 317.33047485]
[-26.71756554 301.97912598]
[-19.49423790 288.24581909]
[-5.56335688 281.41134644]
[9.71836662 284.10366821]
[20.41611481 273.58898926]
[31.11386299 263.07434082]
[41.75093460 252.49827576]
[52.32698059 241.86120605]
[62.90302277 231.22413635]
[65.38135529 224.29090881]
[73.66249847 220.52638245]
[84.36025238 210.01171875]
[95.05799866 199.49705505]
[105.75574493 188.98239136]
[116.45349884 178.46772766]
[113.12182617 171.74835205]
[106.45848083 158.30961609]
[103.12680817 151.59024048]
[88.28173065 153.74049377]
[75.73323059 163.37614441]
[62.02826309 157.54321289]
[47.18318176 159.69346619]
[32.33810043 161.84371948]
[17.49302101 163.99397278]
[2.64794040 166.14422607]
[-12.16086102 174.39866638]
[-24.19219589 162.45364380]
[-16.04460335 147.58580017]
[0.49768651 151.29914856]
[15.34276676 149.14889526]
[30.18784714 146.99864197]
[45.03292847 144.84838867]
[59.87800598 142.69813538]
[71.36468506 133.21627808]
[86.13147736 138.89541626]
[100.97655487 136.74516296]
[68.60534668 114.18869019]
[76.44467163 78.12516785]
[68.13804626 65.63516998]
[59.83142090 53.14517212]
[51.52479935 40.65517807]
[43.21817398 28.16518211]
[34.91155243 15.67518520]
[26.60492897 3.18518853]
[18.29830551 -9.30480766]
[9.99168205 -21.79480362]
[-3.14365530 -7.45566177]
[-27.47252655 -4.80158091]
[-40.87271118 -11.54213715]
[-54.27289200 -18.28269386]
[-67.67307281 -25.02324867]
[-84.00505829 -23.54051399]
[-93.23270416 -37.09715271]
[-85.86341858 -51.74725723]
[-69.47807312 -52.42005539]
[-60.93252182 -38.42343140]
[-47.53233719 -31.68287659]
[-34.13215256 -24.94231987]
[-20.73197174 -18.20176315]
[-15.14684963 -23.20740318]
[-25.15812683 -34.37764740]
[-38.13119888 -41.90754318]
[-34.97871399 -56.57253265]
[-20.05731010 -58.10604858]
[-13.98788261 -44.38892365]
[-3.97660613 -33.21868134]
[1.60851550 -38.22431946]
[-3.62977123 -52.27993393]
[-8.86805820 -66.33554840]
[-14.10634518 -80.39116669]
[-19.34463120 -94.44678497]
[-24.58291817 -108.50240326]
[-29.82120514 -122.55801392]
[-44.28955460 -133.97621155]
[-40.65770721 -151.16128540]
[-46.05739212 -165.15568542]
[-51.45707321 -179.15008545]
[-56.85675812 -193.14450073]
[-72.05396271 -193.48120117]
[-85.96348572 -199.61256409]
[-96.46422577 -210.60360718]
[-101.95489502 -224.77825928]
[-101.59820557 -239.97500610]
[-95.44854736 -253.87644958]
[-84.44370270 -264.36273193]
[-70.26183319 -269.83474731]
[-55.06556320 -269.45806885]
[-41.17222214 -263.29013062]
[-30.70043564 -252.27149963]
[-25.24707985 -238.08244324]
[-25.64375114 -222.88668823]
[-31.82995796 -209.00146484]
[-42.86235046 -198.54418945]
[-37.46266937 -184.54977417]
[-32.06298447 -170.55537415]
[-26.66330147 -156.56095886]
[-15.75299072 -151.39068604]
[-11.12815762 -139.80606079]
[-15.76558876 -127.79630280]
[-10.52730179 -113.74068451]
[-5.28901529 -99.68507385]
[-0.05072851 -85.62945557]
[5.18755817 -71.57383728]
[10.42584515 -57.51822281]
[15.66413212 -43.46260452]
[22.48167801 -30.10142708]
[30.78830147 -17.61143112]
[39.09492493 -5.12143469]
[47.40154648 7.36856174]
[55.70817184 19.85855865]
[64.01479340 32.34855270]
[72.32141876 44.83855057]
[80.62804413 57.32854843]
[88.93466187 69.81854248]
[126.45376587 77.92872620]
[131.68635559 118.63156891]
[140.41912842 106.43572998]
[149.15191650 94.23988342]
[157.88468933 82.04404449]
[153.14823914 67.38552094]
[157.89588928 52.91786575]
[170.10783386 44.12396622]
[184.97831726 44.20621109]
[193.71109009 32.01037216]
[202.44387817 19.81452942]
[199.61686707 4.26513624]
[208.68153381 -8.68119812]
[224.25994873 -11.34364319]
[237.10971069 -2.14261746]
[239.60729980 13.46307373]
[230.27093506 26.21484947]
[214.63970947 28.54730988]
[205.90693665 40.74315262]
[197.17414856 52.93899155]
[202.04209900 66.99036407]
[197.65065002 81.38408661]
[185.48344421 90.53900909]
[170.08053589 90.77682495]
[161.34776306 102.97266388]
[152.61497498 115.16851044]
[143.88220215 127.36434937]
[153.69917297 138.70573425]
[167.02090454 131.81141663]
[180.34263611 124.91710663]
[193.66436768 118.02279663]
[206.98609924 111.12848663]
[220.30781555 104.23417664]
[231.59577942 91.58433533]
[246.87606812 98.92932129]
[244.04812622 115.64575958]
[227.20213318 117.55590057]
[213.88040161 124.45021057]
[200.55867004 131.34452820]
[187.23693848 138.23883057]
[173.91522217 145.13314819]
[160.59349060 152.02746582]
[158.92457581 159.33941650]
[172.43904114 152.83100891]
[185.95372009 159.33894348]
[189.29205322 173.96275330]
[179.94024658 185.69065857]
[164.94024658 185.69152832]
[155.58676147 173.96333313]
[153.91786194 181.27529907]
[162.92898560 193.26693726]
[171.94012451 205.25857544]
[180.95126343 217.25021362]
[196.35556030 217.13349915]
[208.73022461 226.00599670]
[213.45176697 240.29484558]
[208.90847778 254.45451355]
[217.91961670 266.44616699]
[226.93074036 278.43780518]
[235.94187927 290.42944336]
[244.95301819 302.42108154]
[253.96414185 314.41271973]
[262.97528076 326.40435791]
[271.98641968 338.39599609]
[285.57589722 333.91366577]
[299.86389160 333.84204102]
[313.45678711 338.17489624]
[325.03280640 346.47702026]
[333.47061157 357.92791748]
[337.95782471 371.40289307]
[338.06936646 385.58352661]
[333.80752563 399.08654785]
[325.60064697 410.59896851]
[334.47320557 422.69351196]
[343.34573364 434.78802490]
[352.21829224 446.88256836]
[367.62292480 446.94314575]
[379.89465332 455.95742798]
[384.45144653 470.29968262]
[379.74551392 484.40612793]
[388.61807251 496.50067139]
[397.49060059 508.59521484]
[412.89523315 508.65576172]
[425.16699219 517.67010498]
[429.72378540 532.01232910]
[425.01785278 546.11877441]
[433.89041138 558.21331787]
[442.76293945 570.30786133]
[457.30773926 566.03875732]
[472.43527222 567.00488281]
[486.31884766 573.08947754]
[497.28192139 583.55786133]
[504.00070190 597.14587402]
[505.66378784 612.21270752]
[502.07043457 626.93896484]
[493.65451050 639.54644775]
[481.43228149 648.51263428]
[466.87963867 652.75488281]
[451.75390625 651.76092529]
[437.88159180 645.65075684]
[426.93780518 635.16223145]
[420.24407959 621.56182861]
[418.60876465 606.49194336]
[422.22924805 591.77233887]
[430.66839600 579.18041992]
[421.79586792 567.08587646]
[412.92330933 554.99133301]
[398.05474854 555.24468994]
[385.74243164 546.59185791]
[380.82861328 532.17980957]
[385.39605713 517.46777344]
[376.52352905 505.37322998]
[367.65097046 493.27868652]
[352.78244019 493.53204346]
[340.47012329 484.87924194]
[335.55627441 470.46719360]
[340.12374878 455.75512695]
[331.25119019 443.66058350]
[322.37866211 431.56604004]
[313.50610352 419.47149658]
[298.43121338 424.07247925]
[282.66571045 423.22534180]
[268.12121582 417.01437378]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 213]
[5 212]
[6 211]
[7 210]
[8 209]
[9 208]
[10 207]
[11 206]
[15 202]
[16 201]
[17 200]
[18 199]
[19 50]
[20 49]
[21 48]
[22 47]
[23 46]
[24 44]
[25 43]
[26 42]
[28 41]
[29 40]
[30 39]
[53 71]
[54 70]
[56 68]
[57 67]
[58 66]
[59 65]
[60 64]
[73 149]
[74 148]
[75 147]
[76 146]
[77 145]
[78 144]
[79 143]
[80 142]
[81 141]
[83 94]
[84 93]
[85 92]
[86 91]
[102 140]
[103 139]
[104 138]
[105 137]
[106 136]
[107 135]
[108 134]
[110 131]
[111 130]
[112 129]
[113 128]
[151 176]
[152 175]
[153 174]
[154 173]
[158 169]
[159 168]
[160 167]
[177 191]
[178 190]
[179 189]
[180 188]
[181 187]
[182 186]
[222 269]
[223 268]
[224 267]
[225 266]
[229 262]
[230 261]
[231 260]
[235 256]
[236 255]
[237 254]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
