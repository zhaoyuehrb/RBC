%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 20:08:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGCAUGCCAAAUAUUGUACUGGAAUUUACCUCUGGGAAAACUGAAGCUUCAUAAGAAAUUGUUUUGAUUUAGGGUUGUGGUAGAGGUAGGUAUGAGAAAAUCAUCUUGUAUUUAUAGAUGCUAAUGAAUUUCAAUGCUUUCUAUCUUUACACUUAGAUAUUAAGUUCUUUGUGAAAUUCUGUAAUAAAAUUCUACUUCAUUAAAGAGCUGUCGAUUU\
) } def
/len { sequence length } bind def

/coor [
[96.43026733 500.95858765]
[102.09814453 486.61010742]
[114.63696289 477.62225342]
[113.77672577 462.64694214]
[112.91648865 447.67163086]
[109.39681244 441.17797852]
[112.15288544 432.47561646]
[111.50755310 417.48950195]
[98.23692322 410.72518921]
[90.07965851 398.14285278]
[89.31052399 383.06723022]
[96.23609161 369.54193115]
[109.08554840 361.24502563]
[108.44020844 346.25891113]
[100.16252136 333.87631226]
[107.29894257 319.75604248]
[106.65361023 304.76992798]
[94.15684509 296.70959473]
[88.73851013 282.67016602]
[92.67205048 267.96026611]
[104.65145111 258.27520752]
[104.00611877 243.28910828]
[103.36077881 228.30299377]
[102.71544647 213.31687927]
[102.07011414 198.33076477]
[101.42478180 183.34466553]
[100.77944946 168.35855103]
[100.13411713 153.37243652]
[88.97255707 143.35147095]
[74.00379944 144.31910706]
[59.03504181 145.28672791]
[50.67896271 148.96133423]
[43.84490585 146.15931702]
[28.86380959 146.91210938]
[13.88271141 147.66491699]
[-1.09838605 148.41772461]
[-16.07948303 149.17053223]
[-31.04824066 150.13815308]
[-46.00157928 151.32040405]
[-60.95491409 152.50265503]
[-75.90824890 153.68490601]
[-90.86158752 154.86715698]
[-96.44128418 169.03149414]
[-107.57215881 179.32666016]
[-122.01010132 183.75001526]
[-136.87573242 181.47540283]
[-149.22865295 173.00694275]
[-156.64900208 160.06848145]
[-171.60234070 161.25073242]
[-186.55567932 162.43296814]
[-201.86898804 169.70889282]
[-213.09970093 157.00820923]
[-204.00433350 142.70050049]
[-187.73793030 147.47964478]
[-172.78459167 146.29739380]
[-157.83125305 145.11514282]
[-152.53628540 131.17137146]
[-141.66760254 120.86694336]
[-127.34409332 116.28456879]
[-112.39043427 118.38414001]
[-99.78003693 126.80226898]
[-92.04383850 139.91381836]
[-77.09049988 138.73156738]
[-62.13716507 137.54931641]
[-47.18382645 136.36706543]
[-32.23049164 135.18481445]
[-28.50702477 132.20265198]
[-22.87216949 131.52397156]
[-16.83228874 134.18943787]
[-1.85119128 133.43663025]
[13.12990665 132.68382263]
[28.11100388 131.93101501]
[43.09210205 131.17820740]
[58.06741333 130.31797791]
[73.03617096 129.35034180]
[88.00492859 128.38272095]
[73.86629486 112.16674805]
[74.35410309 92.08049774]
[87.30554199 78.63175964]
[83.89284515 64.02513885]
[80.48015594 49.41851044]
[77.06746674 34.81188202]
[73.65476990 20.20525742]
[59.51041031 14.10253143]
[51.76223373 0.99455243]
[53.20119095 -13.98521423]
[63.06682968 -25.11208153]
[59.65413666 -39.71870804]
[56.24144363 -54.32533264]
[52.82875061 -68.93196106]
[49.41606140 -83.53858948]
[46.00336838 -98.14521027]
[42.59067535 -112.75183868]
[39.17798233 -127.35846710]
[35.76528931 -141.96508789]
[32.35260010 -156.57171631]
[28.93990707 -171.17834473]
[25.52721405 -185.78497314]
[11.97187042 -193.91075134]
[8.21368217 -209.26168823]
[16.48231697 -222.73036194]
[31.87213898 -226.32604980]
[45.25264359 -217.91546631]
[48.68540955 -202.48849487]
[40.13383865 -189.19766235]
[43.54653168 -174.59103394]
[46.95922470 -159.98440552]
[50.37191772 -145.37777710]
[53.78461075 -130.77116394]
[57.19729996 -116.16452789]
[60.60999298 -101.55790710]
[64.02268982 -86.95127869]
[67.43537903 -72.34465027]
[70.84806824 -57.73802567]
[74.26076508 -43.13140106]
[77.67345428 -28.52477264]
[91.44799805 -22.92119789]
[99.37541199 -10.12979031]
[98.23740387 5.05435705]
[88.26139832 16.79256439]
[91.67408752 31.39919090]
[95.08678436 46.00581741]
[98.49947357 60.61244202]
[101.91217041 75.21907043]
[119.44473267 81.49775696]
[128.81629944 99.21177673]
[123.45033264 119.98855591]
[137.74253845 115.43523407]
[152.03475952 110.88191223]
[166.32696533 106.32859802]
[180.61917114 101.77527618]
[194.91137695 97.22195435]
[209.20359802 92.66863251]
[223.49580383 88.11531067]
[231.92832947 68.84618378]
[251.56507874 62.17456055]
[269.47506714 72.03480530]
[283.48263550 66.66933441]
[297.49017334 61.30385971]
[311.49774170 55.93838501]
[317.99731445 41.78234863]
[332.27938843 36.54053879]
[345.73495483 42.82411575]
[359.74252319 37.45864487]
[373.75009155 32.09317017]
[387.75762939 26.72769737]
[401.76519775 21.36222267]
[405.66186523 6.34238100]
[417.66412354 -3.49250937]
[433.15689087 -4.36073160]
[446.18286133 4.07156324]
[451.73330688 18.56198502]
[447.67391968 33.53867340]
[435.56567383 43.24278259]
[420.06439209 43.94288635]
[407.13067627 35.36978149]
[393.12310791 40.73525620]
[379.11553955 46.10072708]
[365.10800171 51.46620178]
[351.10043335 56.83167648]
[345.28591919 70.49649048]
[331.15670776 76.13738251]
[316.86322021 69.94594574]
[302.85565186 75.31141663]
[288.84811401 80.67689514]
[274.84054565 86.04236603]
[273.84561157 95.33074188]
[269.51223755 103.67161560]
[262.39724731 109.90189362]
[253.44847107 113.13562775]
[243.87864685 112.88980865]
[235.00100708 109.15605927]
[228.04911804 102.40752411]
[213.75691223 106.96084595]
[199.46470642 111.51416016]
[185.17250061 116.06748199]
[170.88027954 120.62080383]
[156.58807373 125.17412567]
[142.29586792 129.72744751]
[128.00364685 134.28076172]
[142.88627625 132.40788269]
[155.80126953 140.03697205]
[161.34393311 153.97535706]
[157.19473267 168.39009094]
[145.09005737 177.24880981]
[130.09552002 176.84428406]
[118.48607635 167.34582520]
[115.12022400 152.72709656]
[115.76555634 167.71321106]
[116.41089630 182.69932556]
[117.05622864 197.68544006]
[117.70156097 212.67155457]
[118.34689331 227.65765381]
[118.99222565 242.64376831]
[119.63755798 257.62988281]
[132.40518188 266.24926758]
[137.58869934 280.56655884]
[133.39732361 295.01980591]
[121.63971710 304.12457275]
[122.28505707 319.11068726]
[130.60890198 332.56521606]
[123.42632294 345.61358643]
[124.07165527 360.59970093]
[137.58679199 367.76129150]
[145.64941406 380.64114380]
[146.17910767 395.72708130]
[139.13366699 408.96408081]
[126.49365997 416.84417725]
[127.13899994 431.83029175]
[127.89179993 446.81137085]
[128.75204468 461.78668213]
[129.61227417 476.76199341]
[143.09780884 484.25491333]
[150.37144470 497.85998535]
[149.11218262 513.23590088]
[139.72186279 525.47619629]
[125.19688416 530.67510986]
[110.17212677 527.17364502]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 212]
[4 211]
[5 210]
[7 209]
[8 208]
[13 203]
[14 202]
[16 200]
[17 199]
[21 195]
[22 194]
[23 193]
[24 192]
[25 191]
[26 190]
[27 189]
[28 188]
[29 76]
[30 75]
[31 74]
[33 73]
[34 72]
[35 71]
[36 70]
[37 69]
[38 66]
[39 65]
[40 64]
[41 63]
[42 62]
[48 56]
[49 55]
[50 54]
[79 124]
[80 123]
[81 122]
[82 121]
[83 120]
[87 116]
[88 115]
[89 114]
[90 113]
[91 112]
[92 111]
[93 110]
[94 109]
[95 108]
[96 107]
[97 106]
[98 105]
[127 180]
[128 179]
[129 178]
[130 177]
[131 176]
[132 175]
[133 174]
[134 173]
[137 166]
[138 165]
[139 164]
[140 163]
[143 160]
[144 159]
[145 158]
[146 157]
[147 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
