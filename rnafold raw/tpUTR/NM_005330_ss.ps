%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 04:46:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUCUCUUCCAGUUUGCAGGUGUUCCUGUGACCCUGACACCCUCCUUCUGCACAUGGGGACUGGGCUUGGCCUUGAGAGAAAGCCUUCUGUUUAAUAAAGUACAUUUUCUUCAGUAAUC\
) } def
/len { sequence length } bind def

/coor [
[184.20799255 185.00753784]
[190.78106689 171.49264526]
[178.41917419 162.99655151]
[166.05728149 154.50045776]
[153.69538879 146.00436401]
[141.33349609 137.50827026]
[128.97160339 129.01217651]
[116.60971069 120.51609039]
[84.60749054 132.94363403]
[53.67830658 100.74308777]
[39.67459869 106.11860657]
[25.67089462 111.49412537]
[14.49446297 126.05643463]
[-2.69302201 122.78437805]
[-16.55121422 128.52462769]
[-30.40940857 134.26487732]
[-44.26760101 140.00512695]
[-58.12579346 145.74539185]
[-71.98398590 151.48564148]
[-85.84217834 157.22589111]
[-95.39064026 170.55851746]
[-111.68259430 168.68655396]
[-117.95827484 153.53572083]
[-107.76180267 140.69187927]
[-91.58242798 143.36769104]
[-77.72423553 137.62744141]
[-63.86604691 131.88719177]
[-50.00785065 126.14694214]
[-36.14965820 120.40669250]
[-22.29146576 114.66643524]
[-8.43327332 108.92618561]
[-3.46469355 97.81256104]
[8.13520622 92.95426941]
[20.29537392 97.49041748]
[34.29907990 92.11489868]
[48.30278778 86.73937988]
[50.89866638 79.70294189]
[35.91023636 79.11386108]
[31.83899117 64.67692566]
[44.31134796 56.34384155]
[56.09041977 65.63007355]
[58.68629837 58.59363937]
[51.52891922 45.41138077]
[44.37153625 32.22912598]
[37.21415329 19.04686737]
[21.85863495 18.72503471]
[8.72960186 10.75483704]
[1.35869920 -2.71978259]
[1.72866309 -18.07421875]
[9.73997498 -31.17820358]
[23.23763275 -38.50683594]
[38.59083176 -38.08874512]
[51.66964340 -30.03639603]
[58.95592880 -16.51583290]
[58.48971558 -1.16401887]
[50.39641190 11.88948727]
[57.55379486 25.07174301]
[64.71117401 38.25400162]
[71.86855316 51.43625641]
[79.36277008 51.14180756]
[86.34671783 37.86684799]
[94.35121155 50.55290985]
[101.84542847 50.25846100]
[107.94647980 36.55527878]
[114.04752350 22.85209846]
[120.14857483 9.14891720]
[121.06732178 -7.78011847]
[137.58909607 -11.58369732]
[145.81771851 3.23946691]
[133.85176086 15.24996662]
[127.75070953 28.95314789]
[121.64965820 42.65633011]
[115.54860687 56.35951233]
[132.62686157 83.94695282]
[125.10580444 108.15419769]
[137.46769714 116.65029144]
[149.82958984 125.14638519]
[162.19148254 133.64247131]
[174.55337524 142.13856506]
[186.91526794 150.63465881]
[199.27716064 159.13075256]
[209.53881836 148.15095520]
[221.32238770 138.82328796]
[234.36460876 131.35615540]
[248.37409973 125.91634369]
[263.03790283 122.62540436]
[278.02844238 121.55684662]
[293.01080322 122.73455811]
[307.65023804 126.13220978]
[321.61975098 131.67390442]
[334.60723877 139.23583984]
[346.32254028 148.64907837]
[356.50396729 159.70332336]
[364.92404175 172.15162659]
[371.39465332 185.71588135]
[375.77124023 200.09304810]
[377.95602417 214.96194458]
[377.90023804 229.99040222]
[375.60507202 244.84268188]
[371.12185669 259.18695068]
[364.55072021 272.70278931]
[356.03842163 285.08822632]
[345.77520752 296.06655884]
[333.99032593 305.39254761]
[320.94705200 312.85781860]
[306.93676758 318.29562378]
[292.27249146 321.58450317]
[277.28179932 322.65090942]
[262.29962158 321.47106934]
[247.66065979 318.07131958]
[233.69194031 312.52764893]
[220.70552063 304.96386719]
[208.99154663 295.54895020]
[198.81170654 284.49325562]
[190.39341736 272.04376221]
[183.92474365 258.47857666]
[179.55020142 244.10078430]
[177.36750793 229.23156738]
[177.42546082 214.20312500]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 81]
[3 80]
[4 79]
[5 78]
[6 77]
[7 76]
[8 75]
[10 36]
[11 35]
[12 34]
[14 31]
[15 30]
[16 29]
[17 28]
[18 27]
[19 26]
[20 25]
[42 59]
[43 58]
[44 57]
[45 56]
[63 73]
[64 72]
[65 71]
[66 70]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
