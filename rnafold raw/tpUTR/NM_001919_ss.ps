%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 15:13:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAUUGGGCUGCCACAGGCUUACGGCCACACGUGCCCCUGUGGGUCCCAGGGAGGUCUUAAACAAGGUAUUUUUCAACUUAAAAGUACUGCCAGCGUUUCAUUUUGC\
) } def
/len { sequence length } bind def

/coor [
[92.85641479 143.97598267]
[78.02929688 141.70518494]
[69.70534515 129.22673035]
[73.30390167 114.66478729]
[86.48166656 107.50000000]
[71.48166656 107.50000000]
[56.48166656 107.50000000]
[41.48166656 107.50000000]
[33.04556656 118.11843872]
[20.20700645 121.83663177]
[7.77135801 117.49852753]
[0.25778875 106.92032623]
[-14.73586559 106.48406219]
[-29.72951889 106.04779053]
[-44.72317505 105.61151886]
[-59.71682739 105.17524719]
[-74.71047974 104.73897552]
[-89.70413971 104.30270386]
[-101.14941406 114.86884308]
[-116.34889984 114.21281433]
[-126.35156250 103.23637390]
[-141.34521484 102.80010223]
[-156.33886719 102.36383057]
[-171.33253479 101.92755890]
[-182.65470886 112.95406342]
[-198.45629883 112.66144562]
[-209.36247253 101.22332001]
[-208.90280151 85.42571259]
[-197.35000610 74.64107513]
[-181.55815125 75.26773834]
[-170.89625549 86.93390656]
[-155.90260315 87.37017822]
[-140.90895081 87.80644989]
[-125.91529846 88.24272156]
[-115.29132843 77.86645508]
[-100.07941437 78.09529877]
[-89.26786804 89.30905151]
[-74.27420807 89.74532318]
[-59.28055573 90.18159485]
[-44.28690338 90.61786652]
[-29.29324913 91.05413055]
[-14.29959488 91.49040222]
[0.69405949 91.92667389]
[12.34046936 79.89180756]
[29.42355156 79.92952728]
[41.48166656 92.50000000]
[56.48166656 92.50000000]
[71.48166656 92.50000000]
[86.48166656 92.50000000]
[100.85150909 88.19795227]
[113.38382721 79.95531464]
[120.66198730 65.90757751]
[135.54718018 65.37825012]
[148.07949829 57.13561249]
[151.39443970 41.91559601]
[164.22140503 33.73492050]
[178.71093750 36.98899841]
[191.24325562 28.74636459]
[203.77557373 20.50372887]
[203.25950623 9.57684708]
[207.37451172 -0.47057921]
[215.28718567 -7.78548670]
[225.47082520 -11.05034924]
[235.99971008 -9.72014332]
[244.91319275 -4.11203146]
[258.11621094 -11.23103714]
[271.31924438 -18.35004234]
[284.52224731 -25.46904755]
[286.45883179 -40.86480331]
[297.09948730 -52.15887070]
[312.35269165 -55.00845718]
[326.35321045 -48.31783295]
[333.71762085 -34.65967941]
[331.61413574 -19.28583908]
[320.85159302 -8.10786533]
[305.56838989 -5.42391729]
[291.64126587 -12.26602745]
[278.43823242 -5.14702129]
[265.23522949 1.97198403]
[252.03219604 9.09098911]
[248.02658081 28.01735878]
[231.26458740 38.26113892]
[212.01820374 33.03604507]
[199.48588562 41.27868271]
[186.95358276 49.52131653]
[184.20251465 64.11471558]
[171.61038208 72.65244293]
[156.32214355 69.66793060]
[143.78982544 77.91056824]
[137.40805054 91.36873627]
[121.62646484 92.48763275]
[109.09414673 100.73027039]
[115.21869659 105.45019531]
[119.05258942 113.24996948]
[125.39186859 126.84458160]
[131.73114014 140.43919373]
[146.98825073 143.26770020]
[157.64450073 154.54704285]
[159.60237122 169.94010925]
[152.10900879 183.52793884]
[138.04576111 190.08573914]
[122.82024384 187.09190369]
[112.28696442 175.69761658]
[110.49620056 160.28421021]
[118.13652039 146.77847290]
[111.79724884 133.18385315]
[105.45797729 119.58924103]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 49]
[6 48]
[7 47]
[8 46]
[12 43]
[13 42]
[14 41]
[15 40]
[16 39]
[17 38]
[18 37]
[21 34]
[22 33]
[23 32]
[24 31]
[50 92]
[51 91]
[53 89]
[54 88]
[57 85]
[58 84]
[59 83]
[65 80]
[66 79]
[67 78]
[68 77]
[94 107]
[95 106]
[96 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
