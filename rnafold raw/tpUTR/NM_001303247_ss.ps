%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 12:41:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAAAGUCUCCAGGCUUAUGCUGCAAAGAGAAUGUACGGAUUGAUCAUGACAUUCCUUACCUUCUUAGGCUUGUUUAAAAGAAAUAUAGCAUUUAUUGUAGCAAAGACUUAAAUUUUGUAGAUACAAUAUGAAUCUUUUCAUGUUUUAUUGGAAAUGCUGUUCAUACUUUAACAUAAAGCUUUCUUAAUGCAA\
) } def
/len { sequence length } bind def

/coor [
[41.54172516 131.15548706]
[47.88683701 117.56359863]
[59.07423782 107.57150269]
[73.29374695 102.79597473]
[88.24704742 104.01046753]
[74.66650391 97.64109802]
[61.08596420 91.27172852]
[47.50542068 84.90235901]
[33.92488098 78.53298950]
[20.34433556 72.16362000]
[10.15176964 78.30984497]
[-1.62187314 78.76264191]
[-12.04203224 73.52508545]
[-18.56742668 64.00418091]
[-19.66958046 52.63494873]
[-33.04010391 45.83575058]
[-46.41062927 39.03655243]
[-59.83493805 32.34418106]
[-73.31218719 25.75905991]
[-86.78943634 19.17393875]
[-95.88536835 18.21580124]
[-100.42782593 12.37484264]
[-113.79834747 5.57564402]
[-127.16886902 -1.22355425]
[-140.53939819 -8.02275276]
[-153.90991211 -14.82195187]
[-167.28044128 -21.62114906]
[-180.65097046 -28.42034912]
[-194.02148438 -35.21954727]
[-218.80166626 -28.50473022]
[-236.60198975 -46.22918701]
[-251.59770203 -46.58796310]
[-266.59341431 -46.94673920]
[-281.58911133 -47.30551529]
[-296.58483887 -47.66429520]
[-310.56613159 -40.25928497]
[-323.10467529 -48.29878998]
[-338.10040283 -48.65756607]
[-353.09609985 -49.01634598]
[-367.07739258 -41.61133575]
[-379.61596680 -49.65084076]
[-394.61166382 -50.00961685]
[-409.60736084 -50.36839294]
[-423.58865356 -42.96338654]
[-436.12722778 -51.00289154]
[-451.12292480 -51.36166763]
[-461.32174683 -39.50763321]
[-476.76239014 -37.03362274]
[-490.15426636 -45.10778809]
[-495.17410278 -59.91775131]
[-489.45175171 -74.47070312]
[-475.68905640 -81.89518738]
[-460.38439941 -78.68558502]
[-450.76416016 -66.35737610]
[-435.76846313 -65.99859619]
[-422.85977173 -73.42926788]
[-409.24859619 -65.36410522]
[-394.25289917 -65.00532532]
[-379.25717163 -64.64654541]
[-366.34848022 -72.07721710]
[-352.73733521 -64.01205444]
[-337.74160767 -63.65327454]
[-322.74591064 -63.29449844]
[-309.83721924 -70.72516632]
[-296.22604370 -62.66000366]
[-281.23034668 -62.30122757]
[-266.23464966 -61.94244766]
[-251.23892212 -61.58367157]
[-236.24322510 -61.22489548]
[-234.87712097 -64.44501495]
[-233.07209778 -67.44123840]
[-230.86399841 -70.15411377]
[-238.19070435 -83.24301147]
[-245.51741028 -96.33191681]
[-252.94825745 -109.36197662]
[-260.48275757 -122.33238220]
[-268.01724243 -135.30278015]
[-275.55175781 -148.27317810]
[-283.08624268 -161.24359131]
[-298.16278076 -166.72795105]
[-303.13818359 -181.97998047]
[-294.19580078 -195.29963684]
[-278.19543457 -196.46922302]
[-267.41122437 -184.59150696]
[-270.11584473 -168.77809143]
[-262.58135986 -155.80767822]
[-255.04685974 -142.83728027]
[-247.51235962 -129.86688232]
[-239.97785950 -116.89647675]
[-233.89259338 -112.68694305]
[-232.42851257 -103.65862274]
[-225.10180664 -90.56972504]
[-217.77510071 -77.48081970]
[-209.71855164 -77.99268341]
[-201.86341858 -75.88660431]
[-195.04403687 -71.34673309]
[-189.99728394 -64.81774902]
[-187.28303528 -56.96151352]
[-187.22229004 -48.59006882]
[-173.85176086 -41.79087067]
[-160.48124695 -34.99167252]
[-147.11071777 -28.19247437]
[-133.74018860 -21.39327621]
[-120.36967468 -14.59407806]
[-106.99914551 -7.79487944]
[-93.62862396 -0.99568069]
[-80.20431519 5.69669199]
[-66.72706604 12.28181267]
[-53.24982071 18.86693382]
[-45.85129547 18.97886658]
[-39.61143112 25.66602898]
[-26.24090576 32.46522903]
[-12.87038231 39.26442719]
[4.15176392 32.55198669]
[20.96798134 40.53978729]
[26.71370506 58.58307648]
[40.29424667 64.95244598]
[53.87479019 71.32181549]
[67.45532990 77.69118500]
[81.03587341 84.06055450]
[94.61641693 90.42992401]
[97.61965179 83.36302948]
[105.11997986 77.95436096]
[116.03378296 76.48838806]
[130.38571167 72.12696075]
[144.73765564 67.76554108]
[159.08958435 63.40411758]
[170.04382324 51.98854446]
[184.47091675 55.69095612]
[198.82286072 51.32953262]
[213.17478943 46.96811295]
[227.52671814 42.60668945]
[241.87866211 38.24526596]
[256.23059082 33.88384247]
[270.58251953 29.52241898]
[284.93444824 25.16099548]
[295.73760986 12.82309818]
[311.76934814 16.27494812]
[316.53759766 31.96557999]
[305.13717651 43.75381470]
[289.29586792 39.51292801]
[274.94393921 43.87435150]
[260.59201050 48.23577499]
[246.24008179 52.59719849]
[231.88815308 56.95862198]
[217.53620911 61.32004547]
[203.18428040 65.68146515]
[188.83235168 70.04289246]
[178.90466309 81.14650726]
[163.45100403 77.75605011]
[149.09907532 82.11747742]
[134.74713135 86.47889709]
[120.39520264 90.84031677]
[117.07405090 105.46803284]
[128.13545227 115.59943390]
[139.19685364 125.73083496]
[150.25827026 135.86224365]
[161.31967163 145.99363708]
[169.77215576 149.48785400]
[172.47503662 156.37588501]
[183.37347412 166.68240356]
[194.27191162 176.98890686]
[207.54539490 169.73149109]
[222.41226196 166.93299866]
[237.41600037 168.86761475]
[251.08673096 175.34577942]
[262.08508301 185.73283386]
[269.33361816 199.01116943]
[272.12213135 213.87991333]
[270.17745972 228.88235474]
[263.69015503 242.54873657]
[253.29573059 253.54014587]
[240.01252747 260.77975464]
[225.14193726 263.55831909]
[210.14079285 261.60360718]
[196.47875977 255.10713196]
[185.49432373 244.70533752]
[178.26361084 231.41729736]
[175.49501038 216.54484558]
[177.45977783 201.54501343]
[183.96540833 187.88734436]
[173.06697083 177.58084106]
[162.16853333 167.27432251]
[151.18826294 157.05505371]
[140.12686157 146.92364502]
[129.06546021 136.79223633]
[118.00405121 126.66083527]
[106.94264984 116.52943420]
[113.75975037 129.89083862]
[114.76052856 144.85742188]
[109.78303528 159.00749207]
[99.63265991 170.05149841]
[85.95180511 176.20243835]
[70.95410919 176.46507263]
[57.06627655 170.79689026]
[46.53545380 160.11505127]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 121]
[6 120]
[7 119]
[8 118]
[9 117]
[10 116]
[15 113]
[16 112]
[17 111]
[18 109]
[19 108]
[20 107]
[22 106]
[23 105]
[24 104]
[25 103]
[26 102]
[27 101]
[28 100]
[29 99]
[31 69]
[32 68]
[33 67]
[34 66]
[35 65]
[37 63]
[38 62]
[39 61]
[41 59]
[42 58]
[43 57]
[45 55]
[46 54]
[72 93]
[73 92]
[74 91]
[75 89]
[76 88]
[77 87]
[78 86]
[79 85]
[124 153]
[125 152]
[126 151]
[127 150]
[129 148]
[130 147]
[131 146]
[132 145]
[133 144]
[134 143]
[135 142]
[136 141]
[154 188]
[155 187]
[156 186]
[157 185]
[158 184]
[160 183]
[161 182]
[162 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
