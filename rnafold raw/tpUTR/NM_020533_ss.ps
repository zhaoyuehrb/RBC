%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 05:24:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGACCUGACUGCCGUUGGACCGUAGGCCCUGGACUGCAGAGACCCCCGCCCCCGACCCCGCUUAUUUAUUUGUAGGGUUUGCUUUUAAGGAUCGGCUCCCUGUCGCGCCCGAGGAGGGCCUGGACCUUUCGUGUCGGACCCUUGGGGGCGGGGAGACUGGGUGGGGAGGGUGUUGAAUAAAAGGGAAAAUAAAUGUGUCGUUUUCAUUUUUA\
) } def
/len { sequence length } bind def

/coor [
[159.98150635 220.64700317]
[152.64024353 207.56625366]
[145.29896545 194.48551941]
[137.95770264 181.40476990]
[130.61643982 168.32403564]
[123.27516937 155.24328613]
[115.83853149 142.21653748]
[108.30691528 129.24446106]
[100.43541718 130.39825439]
[92.53410339 129.47038269]
[85.14404297 126.52439880]
[74.81210327 137.39872742]
[64.48016357 148.27305603]
[54.14822006 159.14738464]
[50.25191116 174.48130798]
[35.87622070 178.37858582]
[25.54427910 189.25291443]
[15.21233845 200.12724304]
[5.04039097 211.15136719]
[-4.96939087 222.32295227]
[-8.41597939 237.76419067]
[-22.67165375 242.07986450]
[-32.68143463 253.25143433]
[-38.74804306 269.08282471]
[-55.64012909 267.63586426]
[-58.92591476 251.00337219]
[-43.85301971 243.24165344]
[-33.84323502 232.07006836]
[-31.11261368 217.42791748]
[-16.14097404 212.31317139]
[-6.13119173 201.14158630]
[-5.49326277 196.41127014]
[-1.87894130 192.03057861]
[4.33801174 189.79530334]
[14.66995239 178.92097473]
[25.00189400 168.04664612]
[28.15919304 153.49052429]
[43.27389526 148.81544495]
[53.60583496 137.94111633]
[63.93777466 127.06678009]
[74.26971436 116.19245911]
[70.13416290 105.68109894]
[70.12158203 94.38545990]
[74.23370361 83.86491394]
[81.90285492 75.57180786]
[92.07032013 70.65100861]
[91.85114288 55.65261078]
[91.63197327 40.65421295]
[91.41280365 25.65581322]
[91.19362640 10.65741444]
[90.97445679 -4.34098434]
[90.75527954 -19.33938217]
[90.53610992 -34.33778000]
[76.01418304 -42.24681854]
[67.51184082 -56.31992722]
[67.26907349 -72.66630554]
[75.25745392 -86.82212067]
[89.21372986 -94.96949768]
[88.77542877 -109.96309662]
[88.33712769 -124.95668793]
[87.89883423 -139.95028687]
[87.46053314 -154.94387817]
[87.02223206 -169.93746948]
[86.58393097 -184.93107605]
[86.14563751 -199.92466736]
[77.84845734 -202.72529602]
[70.54006195 -207.51499939]
[64.68641663 -213.97691345]
[60.65782928 -221.68798828]
[58.70555496 -230.14659119]
[58.94612885 -238.80519104]
[61.35445786 -247.10580444]
[65.76605988 -254.51586914]
[71.88825226 -260.56256104]
[79.31956482 -264.86279297]
[87.57605743 -267.14764404]
[88.67098236 -282.10763550]
[89.76591492 -297.06759644]
[90.86084747 -312.02758789]
[91.95577240 -326.98757935]
[93.05070496 -341.94757080]
[94.14563751 -356.90753174]
[95.24056244 -371.86752319]
[96.22616577 -386.83511353]
[83.50611115 -395.32907104]
[76.78981781 -408.95950317]
[77.79120636 -424.02148438]
[86.14143372 -436.47659302]
[99.51473236 -443.03558350]
[100.39095306 -458.00997925]
[101.26718140 -472.98437500]
[102.14340210 -487.95874023]
[95.22545624 -502.18731689]
[103.69300079 -514.44091797]
[104.56922913 -529.41528320]
[105.33602905 -544.39569092]
[105.99336243 -559.38128662]
[106.65068817 -574.36682129]
[107.30802155 -589.35241699]
[107.96535492 -604.33801270]
[108.51318359 -619.32800293]
[108.95148468 -634.32159424]
[109.38978577 -649.31518555]
[96.27671051 -657.31164551]
[88.93276215 -670.80096436]
[89.33342743 -686.15466309]
[97.37092590 -699.24255371]
[110.88320923 -706.54418945]
[126.23554230 -706.09539795]
[139.29821777 -698.01696777]
[146.55746460 -684.48181152]
[146.06056213 -669.13098145]
[137.94117737 -656.09368896]
[124.38337708 -648.87689209]
[123.94508362 -633.88330078]
[123.50678253 -618.88970947]
[126.45252228 -612.11395264]
[122.95094299 -603.68072510]
[122.29361725 -588.69512939]
[121.63628387 -573.70953369]
[120.97895050 -558.72393799]
[120.32161713 -543.73834229]
[123.16803741 -536.92028809]
[119.54361725 -528.53906250]
[118.66738892 -513.56469727]
[125.64801788 -500.40716553]
[117.11779022 -487.08251953]
[116.24156952 -472.10812378]
[115.36534119 -457.13375854]
[114.48912048 -442.15936279]
[127.00617218 -434.08538818]
[133.84675598 -420.74139404]
[133.08462524 -405.66540527]
[124.82445526 -392.91134644]
[111.20055389 -385.95889282]
[113.94705200 -379.09997559]
[110.20054626 -370.77261353]
[109.10562134 -355.81262207]
[108.01068878 -340.85263062]
[106.91575623 -325.89263916]
[105.82083130 -310.93267822]
[104.72589874 -295.97268677]
[103.63096619 -281.01269531]
[102.53604126 -266.05270386]
[120.16883850 -253.65237427]
[126.76129913 -232.99064636]
[119.48115540 -212.42161560]
[101.13922882 -200.36296082]
[101.57752991 -185.36936951]
[102.01583099 -170.37577820]
[102.45412445 -155.38217163]
[102.89242554 -140.38858032]
[103.33072662 -125.39498901]
[103.76902771 -110.40139008]
[104.20732117 -95.40779877]
[116.62889099 -89.73526001]
[125.43735504 -79.21408844]
[128.87037659 -65.86048889]
[126.20292664 -52.26572037]
[117.89952087 -41.09325027]
[105.53450775 -34.55695343]
[105.75367737 -19.55855560]
[105.97285461 -4.56015730]
[106.19202423 10.43824100]
[106.41120148 25.43663979]
[106.63037109 40.43503952]
[106.84954834 55.43343735]
[107.06871796 70.43183899]
[124.64382172 82.19760132]
[130.29174805 102.57942200]
[121.27899170 121.71284485]
[128.81060791 134.68492126]
[135.82366943 140.53283691]
[136.35591125 147.90202332]
[143.69717407 160.98275757]
[151.03845215 174.06350708]
[158.37971497 187.14424133]
[165.72097778 200.22499084]
[173.06225586 213.30572510]
[180.49888611 226.33248901]
[188.03050232 239.30456543]
[195.56211853 252.27664185]
[203.09373474 265.24871826]
[210.62533569 278.22079468]
[218.15695190 291.19287109]
[231.77738953 299.24237061]
[231.47659302 314.13394165]
[239.00819397 327.10601807]
[246.53981018 340.07809448]
[254.07142639 353.05017090]
[261.60302734 366.02224731]
[269.13464355 378.99432373]
[284.55059814 379.58813477]
[297.18518066 388.44085693]
[303.00674438 402.72766113]
[300.15768433 417.88967896]
[289.54708862 429.08874512]
[274.56079102 432.75128174]
[259.98083496 427.70858765]
[250.45965576 415.56979370]
[249.03541565 400.20831299]
[256.16256714 386.52593994]
[248.63096619 373.55386353]
[241.09934998 360.58178711]
[233.56773376 347.60971069]
[226.03611755 334.63763428]
[218.50451660 321.66555786]
[205.42279053 314.54391479]
[205.18487549 298.72448730]
[197.65325928 285.75241089]
[190.12165833 272.78033447]
[182.59004211 259.80825806]
[175.05842590 246.83618164]
[167.52680969 233.86410522]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 179]
[2 178]
[3 177]
[4 176]
[5 175]
[6 174]
[7 172]
[8 171]
[11 41]
[12 40]
[13 39]
[14 38]
[16 36]
[17 35]
[18 34]
[19 31]
[20 30]
[22 28]
[23 27]
[46 168]
[47 167]
[48 166]
[49 165]
[50 164]
[51 163]
[52 162]
[53 161]
[58 155]
[59 154]
[60 153]
[61 152]
[62 151]
[63 150]
[64 149]
[65 148]
[76 144]
[77 143]
[78 142]
[79 141]
[80 140]
[81 139]
[82 138]
[83 137]
[84 135]
[89 130]
[90 129]
[91 128]
[92 127]
[94 125]
[95 124]
[96 122]
[97 121]
[98 120]
[99 119]
[100 118]
[101 116]
[102 115]
[103 114]
[180 214]
[181 213]
[182 212]
[183 211]
[184 210]
[185 209]
[187 207]
[188 206]
[189 205]
[190 204]
[191 203]
[192 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
