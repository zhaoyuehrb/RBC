%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 16:16:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGGACCUCACCCUAGGAUGGGGUUAUAAGCCUCUCAUGAAGUUCAUAAUUUACACGUUUUAAAUACUAGACGCUAGAUUUUUUUUUCUAAGGGUGAAUACUAGUAGUCCAGGCUUGAUUUGGAGGGUGAAUGACGCCUAGCAAGAUGUAUUGUACUUGUGUUUUUUUAAUUGAAUACUUCAAAGAUAA\
) } def
/len { sequence length } bind def

/coor [
[-62.02365112 453.49795532]
[-70.67205811 453.15820312]
[-78.93473053 450.64642334]
[-87.87021637 462.69454956]
[-96.80570984 474.74267578]
[-105.74119568 486.79077148]
[-98.05830383 501.12469482]
[-97.39392853 517.31597900]
[-103.83029175 532.12445068]
[-116.03367615 542.60876465]
[-131.53047180 546.71057129]
[-147.20846558 543.65856934]
[-155.94563293 555.85125732]
[-164.68278503 568.04394531]
[-173.41995239 580.23663330]
[-182.15711975 592.42932129]
[-190.89428711 604.62207031]
[-195.20547485 621.01867676]
[-212.15480042 621.41503906]
[-217.22767639 605.23779297]
[-203.08699036 595.88488770]
[-194.34982300 583.69219971]
[-185.61265564 571.49945068]
[-176.87548828 559.30676270]
[-168.13832092 547.11407471]
[-159.40115356 534.92138672]
[-166.64900208 523.08209229]
[-168.84097290 509.33065796]
[-165.61309814 495.74041748]
[-157.42111206 484.37298584]
[-145.47636414 476.96582031]
[-131.56678772 474.66656494]
[-117.78931427 477.85528564]
[-108.85382080 465.80718994]
[-99.91833496 453.75906372]
[-90.98284149 441.71093750]
[-99.26868439 421.83016968]
[-93.87751770 400.84268188]
[-76.83189392 387.25384521]
[-54.90991592 386.66812134]
[-47.40991592 373.67773438]
[-39.90991592 360.68734741]
[-32.40991592 347.69699097]
[-24.90991402 334.70660400]
[-17.40991402 321.71621704]
[-10.12346363 308.60485840]
[-3.05251265 295.37603760]
[4.01843834 282.14721680]
[10.87199688 268.80447388]
[17.50632668 255.35139465]
[24.14065742 241.89830017]
[16.03645706 227.63093567]
[18.04762459 211.17890930]
[29.57881546 199.04302979]
[46.23392487 196.13722229]
[52.64725113 182.57737732]
[59.06057739 169.01753235]
[65.47389984 155.45770264]
[71.88722992 141.89785767]
[61.88171768 133.05685425]
[54.54554367 121.90093994]
[50.39244461 109.21135712]
[49.71324921 95.87672424]
[52.55552673 82.83083344]
[58.72023010 70.98725891]
[67.77566528 61.17538452]
[79.08769226 54.08231354]
[74.96886444 39.65888596]
[70.85003662 25.23545837]
[66.73120880 10.81203175]
[62.61237717 -3.61139512]
[58.49354935 -18.03482246]
[53.78832245 -32.27774429]
[48.50457001 -46.31633377]
[36.40207291 -56.50653076]
[39.16027832 -71.14352417]
[33.87652588 -85.18211365]
[28.47810173 -99.17700958]
[22.96536255 -113.12726593]
[17.45262337 -127.07752228]
[2.39256477 -130.81573486]
[-7.56821823 -142.71374512]
[-8.59960175 -158.19650269]
[-0.30499709 -171.31059265]
[14.12615013 -177.01335144]
[29.14476967 -173.11198425]
[38.97589493 -161.10662842]
[39.83926010 -145.61358643]
[31.40288162 -132.59025574]
[36.91561890 -118.64000702]
[42.42835999 -104.68974304]
[47.81919861 -99.61627197]
[47.91511536 -90.46586609]
[53.19886780 -76.42727661]
[64.92343140 -67.24121094]
[62.54315948 -51.60008621]
[67.82691193 -37.56149673]
[76.37725830 -49.88592529]
[91.33181763 -51.05264664]
[101.69011688 -40.20342636]
[99.83267975 -25.31887436]
[87.12581635 -17.34795380]
[72.91697693 -22.15365219]
[77.03580475 -7.73022461]
[81.15463257 6.69320250]
[85.27346039 21.11662865]
[89.39228821 35.54005814]
[93.51112366 49.96348190]
[111.55720520 48.53454208]
[129.73585510 53.68532944]
[139.62603760 42.40773010]
[149.51622009 31.13013458]
[159.40641785 19.85253716]
[169.29660034 8.57493973]
[179.18678284 -2.70265698]
[179.57653809 -18.74097443]
[192.44535828 -28.32079315]
[207.92140198 -24.09329224]
[214.13276672 -9.30145264]
[206.31462097 4.70769501]
[190.46438599 7.18753004]
[180.57420349 18.46512794]
[170.68400574 29.74272537]
[160.79382324 41.02032089]
[150.90364075 52.29792023]
[141.01344299 63.57551575]
[149.34700012 76.04756165]
[163.55094910 71.22596741]
[177.75491333 66.40437317]
[191.95886230 61.58278275]
[206.16281128 56.76119232]
[214.51950073 43.06647491]
[230.45414734 41.20452118]
[241.74302673 52.60366440]
[239.72630310 68.51945496]
[225.95103455 76.74266052]
[210.98440552 70.96514130]
[196.78045654 75.78673553]
[182.57649231 80.60832977]
[168.37254333 85.42991638]
[154.16859436 90.25151062]
[152.60421753 96.11943817]
[150.43159485 101.55319977]
[165.18928528 104.23844910]
[179.94697571 106.92370605]
[194.70466614 109.60895538]
[207.55577087 100.40977478]
[223.13378906 103.07445526]
[232.19659424 116.02209473]
[229.36735535 131.57107544]
[216.32463074 140.49647522]
[200.80642700 137.50300598]
[192.01940918 124.36664581]
[177.26171875 121.68139648]
[162.50402832 118.99613953]
[147.74635315 116.31089020]
[138.17343140 132.99314880]
[123.05332184 144.88098145]
[104.58319855 150.24691772]
[85.44706726 148.31118774]
[79.03374481 161.87103271]
[72.62041473 175.43086243]
[66.20709229 188.99070740]
[59.79376221 202.55053711]
[67.29534912 214.12500000]
[68.08773804 227.78656006]
[62.07060242 239.95652771]
[50.91339874 247.49984741]
[37.59375000 248.53262329]
[30.95941734 261.98571777]
[24.32508850 275.43881226]
[24.37606430 282.07608032]
[21.49116516 286.99594116]
[17.24725723 289.21817017]
[10.17630672 302.44699097]
[3.10535526 315.67581177]
[2.93913889 322.31121826]
[-0.10518913 327.13403320]
[-4.41953373 329.21621704]
[-11.91953373 342.20660400]
[-19.41953278 355.19699097]
[-26.91953278 368.18734741]
[-34.41953278 381.17773438]
[-41.91953278 394.16812134]
[-36.28341293 400.96102905]
[-32.55788422 408.94186401]
[-30.97675323 417.58697510]
[-31.63346100 426.33178711]
[-34.47563934 434.60772705]
[-39.30912399 441.87915039]
[-45.81121063 447.67797852]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 36]
[4 35]
[5 34]
[6 33]
[12 26]
[13 25]
[14 24]
[15 23]
[16 22]
[17 21]
[40 184]
[41 183]
[42 182]
[43 181]
[44 180]
[45 179]
[46 176]
[47 175]
[48 174]
[49 171]
[50 170]
[51 169]
[55 164]
[56 163]
[57 162]
[58 161]
[59 160]
[67 108]
[68 107]
[69 106]
[70 105]
[71 104]
[72 103]
[73 97]
[74 96]
[76 94]
[77 93]
[78 91]
[79 90]
[80 89]
[110 126]
[111 125]
[112 124]
[113 123]
[114 122]
[115 121]
[127 141]
[128 140]
[129 139]
[130 138]
[131 137]
[143 156]
[144 155]
[145 154]
[146 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
