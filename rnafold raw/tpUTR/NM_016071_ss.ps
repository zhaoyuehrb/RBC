%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 07:45:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUUGGUCCCUCAAGAGGGAGACUUUCUUCCUCAGUGGCGGAGAGAAGAAAGUGCAUUUAUUGUCUUUCCACCUAUUGGAGGAAUGUCAUCUUCCUAAAUGAAGUUUAUUUGGAGGAACACAGUCAUCUCCUUGGUGAAAUCUAAUCCGGUUACAUUGUGGCUGGUUUCUUGAACACAUUCUAACUGUGCAAAAUUAUCUUGGCCUUGGCCGUGUAAUGUGAGGUUUACCUGAUUCUCUAAUGAAAUAAAUACCU\
AAGUUAUUGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[134.94584656 311.42260742]
[131.19075012 292.93655396]
[133.99243164 274.25942993]
[143.02777100 257.64923096]
[157.21905518 245.11943054]
[151.27786255 231.34619141]
[145.33665466 217.57295227]
[129.02685547 207.14871216]
[131.77226257 187.15487671]
[125.51218414 173.52360535]
[119.25211334 159.89233398]
[112.99203491 146.26107788]
[106.73195648 132.62980652]
[59.03029251 114.25086212]
[75.98764801 52.26095581]
[61.66883087 56.72991180]
[47.35001755 61.19886398]
[33.03120422 65.66781616]
[18.71238899 70.13677216]
[7.84409142 81.63419342]
[-6.61038113 78.04010010]
[-20.92919540 82.50905609]
[-35.24800873 86.97801208]
[-46.11630630 98.47543335]
[-60.57078171 94.88134003]
[-74.88959503 99.35029602]
[-89.20841217 103.81925201]
[-103.52722168 108.28820038]
[-117.84603882 112.75715637]
[-132.16485596 117.22611237]
[-146.48367310 121.69506836]
[-148.83224487 135.46482849]
[-156.83992004 146.82954407]
[-168.90132141 153.60958862]
[-182.64054871 154.53465271]
[-195.37908936 149.48136902]
[-204.65805054 139.48638916]
[-219.02789307 143.78843689]
[-230.02923584 155.15863037]
[-244.44090271 151.39659119]
[-258.81076050 155.69863892]
[-273.18060303 160.00068665]
[-287.55044556 164.30274963]
[-301.92028809 168.60479736]
[-316.29013062 172.90684509]
[-330.65997314 177.20889282]
[-339.04165649 194.22956848]
[-356.90667725 199.59068298]
[-372.72198486 190.32110596]
[-386.98782349 194.95635986]
[-401.25369263 199.59161377]
[-409.78890991 213.17576599]
[-425.74655151 214.82897949]
[-436.88528442 203.28305054]
[-434.66040039 187.39501953]
[-420.77865601 179.35282898]
[-405.88894653 185.32575989]
[-391.62307739 180.69050598]
[-377.35723877 176.05525208]
[-374.51986694 165.04750061]
[-366.65118408 156.67854309]
[-355.61145020 153.09495544]
[-344.09255981 155.29165649]
[-334.96200562 162.83905029]
[-320.59216309 158.53700256]
[-306.22232056 154.23495483]
[-291.85247803 149.93290710]
[-277.48263550 145.63084412]
[-263.11279297 141.32879639]
[-248.74295044 137.02674866]
[-238.76943970 125.96427917]
[-223.32994080 129.41859436]
[-208.96009827 125.11654663]
[-205.60984802 109.29203033]
[-194.66572571 97.25392151]
[-179.05155945 92.35944366]
[-163.01063538 96.03817749]
[-150.95262146 107.37625122]
[-136.63380432 102.90729523]
[-122.31499481 98.43833923]
[-107.99617767 93.96939087]
[-93.67736053 89.50043488]
[-79.35855103 85.03147888]
[-65.03973389 80.56252289]
[-55.19561386 69.38475800]
[-39.71696472 72.65919495]
[-25.39814949 68.19023895]
[-11.07933521 63.72128677]
[-1.23521507 52.54351807]
[14.24343491 55.81795883]
[28.56225014 51.34900665]
[42.88106537 46.88005066]
[57.19987869 42.41109848]
[71.51869202 37.94214249]
[75.56929779 23.49940681]
[65.66271973 12.23620701]
[55.75613785 0.97300631]
[45.84955978 -10.29019451]
[35.94298172 -21.55339432]
[26.03640175 -32.81659698]
[16.12982178 -44.07979584]
[6.22324228 -55.34299469]
[-8.77760792 -63.24304962]
[-5.33894205 -79.84461212]
[11.56574345 -81.13610077]
[17.48644257 -65.24957275]
[27.39302254 -53.98637390]
[37.29960251 -42.72317505]
[47.20618057 -31.45997429]
[57.11275864 -20.19677353]
[67.01934052 -8.93357277]
[76.92591858 2.32962751]
[86.83249664 13.59282780]
[101.25142670 9.45826721]
[103.68408966 -5.34315538]
[106.11676025 -20.14457893]
[108.54943085 -34.94600296]
[110.98210144 -49.74742508]
[113.41476440 -64.54885101]
[111.72163391 -73.48799133]
[115.96281433 -79.50791931]
[118.56753540 -94.28003693]
[121.17225647 -109.05215454]
[123.77697754 -123.82427216]
[126.38170624 -138.59638977]
[128.98641968 -153.36849976]
[131.59115601 -168.14062500]
[118.83767700 -160.24447632]
[104.21183777 -163.57383728]
[96.13275146 -176.21221924]
[99.25102997 -190.88450623]
[111.77168274 -199.14486694]
[126.48738861 -196.23831177]
[134.92750549 -183.83694458]
[138.55633545 -198.39137268]
[142.18516541 -212.94581604]
[145.81399536 -227.50024414]
[141.64508057 -242.76231384]
[152.23155212 -253.23971558]
[155.86038208 -267.79415894]
[159.48921204 -282.34857178]
[163.11804199 -296.90301514]
[154.76441956 -310.31915283]
[158.42549133 -325.69354248]
[171.92918396 -333.90484619]
[187.26402283 -330.08145142]
[195.33210754 -316.49169922]
[191.34678650 -301.19815063]
[177.67248535 -293.27420044]
[174.04365540 -278.71975708]
[170.41482544 -264.16531372]
[166.78599548 -249.61088562]
[171.21446228 -235.38984680]
[160.36842346 -223.87141418]
[156.73959351 -209.31698608]
[153.11076355 -194.76254272]
[149.48193359 -180.20811462]
[146.36326599 -165.53588867]
[143.75854492 -150.76377869]
[141.15382385 -135.99166870]
[138.54910278 -121.21954346]
[135.94438171 -106.44743347]
[133.33964539 -91.67531586]
[130.73492432 -76.90319824]
[128.21618652 -62.11617661]
[125.78352356 -47.31475449]
[123.35085297 -32.51333237]
[120.91818237 -17.71191025]
[118.48551178 -2.91048646]
[116.05284882 11.89093685]
[122.12047577 16.29932594]
[130.93745422 4.16421700]
[143.07241821 12.98139858]
[134.25572205 25.11610413]
[140.32334900 29.52449417]
[153.64860535 22.63699722]
[166.97386169 15.74950027]
[180.29911804 8.86200333]
[183.55134583 -6.43364954]
[195.90631104 -16.01951599]
[211.53038025 -15.36944008]
[223.04634094 -4.79036999]
[225.01670837 10.72258186]
[216.51113892 23.84467316]
[201.54570007 28.38005447]
[187.18661499 22.18725777]
[173.86135864 29.07475471]
[160.53610229 35.96224976]
[147.21084595 42.84974670]
[148.68472290 50.20350266]
[163.39228821 47.25599670]
[166.33953857 61.96360016]
[151.63247681 64.91101074]
[153.10635376 72.26476288]
[168.05662537 73.48514557]
[183.00689697 74.70552063]
[197.95716858 75.92590332]
[212.90744019 77.14628601]
[223.20526123 69.41851807]
[235.61164856 70.72106934]
[243.55253601 79.81667328]
[258.48760986 81.21092224]
[273.42266846 82.60517120]
[288.35772705 83.99942017]
[303.02655029 76.66743469]
[316.55966187 85.92956543]
[315.03533936 102.25771332]
[300.02172852 108.85488892]
[286.96347046 98.93447876]
[272.02841187 97.54022980]
[257.09335327 96.14598083]
[242.15829468 94.75173187]
[226.60731506 102.91648102]
[211.68705750 92.09655762]
[196.73678589 90.87617493]
[181.78651428 89.65579987]
[166.83624268 88.43541718]
[151.88597107 87.21503448]
[140.95445251 114.29462433]
[120.36322021 126.36972809]
[126.62329865 140.00099182]
[132.88337708 153.63226318]
[139.14344788 167.26353455]
[145.40353394 180.89479065]
[155.76234436 184.06204224]
[162.54362488 192.22608948]
[163.70716858 202.55471802]
[159.10989380 211.63174438]
[165.05110168 225.40499878]
[170.99229431 239.17823792]
[182.24282837 237.34887695]
[193.62005615 237.89978027]
[204.62623596 240.80358887]
[214.78057861 245.93013000]
[223.64015198 253.05220032]
[230.81929016 261.85559082]
[236.00631714 271.95303345]
[238.97712708 282.90118408]
[239.60481262 294.22012329]
[237.86512756 305.41433716]
[233.83740234 315.99444580]
[227.70088196 325.49859619]
[219.72683716 333.51263428]
[210.26647949 339.68817139]
[215.23242188 353.84231567]
[220.19837952 367.99642944]
[225.16432190 382.15054321]
[230.13027954 396.30468750]
[235.09623718 410.45880127]
[249.06219482 417.35733032]
[253.89674377 431.78237915]
[247.23399353 445.05426025]
[252.19993591 459.20840454]
[264.98474121 469.47879028]
[262.21566772 485.64245605]
[246.74128723 491.07162476]
[234.48033142 480.18121338]
[238.04580688 464.17434692]
[233.07986450 450.02023315]
[219.58549500 443.82040405]
[214.34768677 429.53686523]
[220.94210815 415.42477417]
[215.97615051 401.27062988]
[211.01019287 387.11651611]
[206.04425049 372.96237183]
[201.07829285 358.80825806]
[196.11235046 344.65411377]
[177.34559631 345.15740967]
[159.51853943 339.20040894]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 230]
[6 229]
[7 228]
[9 224]
[10 223]
[11 222]
[12 221]
[13 220]
[15 94]
[16 93]
[17 92]
[18 91]
[19 90]
[21 88]
[22 87]
[23 86]
[25 84]
[26 83]
[27 82]
[28 81]
[29 80]
[30 79]
[31 78]
[37 73]
[38 72]
[40 70]
[41 69]
[42 68]
[43 67]
[44 66]
[45 65]
[46 64]
[49 59]
[50 58]
[51 57]
[95 113]
[96 112]
[97 111]
[98 110]
[99 109]
[100 108]
[101 107]
[102 106]
[114 170]
[115 169]
[116 168]
[117 167]
[118 166]
[119 165]
[121 164]
[122 163]
[123 162]
[124 161]
[125 160]
[126 159]
[127 158]
[134 157]
[135 156]
[136 155]
[137 154]
[139 152]
[140 151]
[141 150]
[142 149]
[175 189]
[176 188]
[177 187]
[178 186]
[194 218]
[195 217]
[196 216]
[197 215]
[198 214]
[201 212]
[202 211]
[203 210]
[204 209]
[244 267]
[245 266]
[246 265]
[247 264]
[248 263]
[249 262]
[252 259]
[253 258]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
