%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 15:00:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAUGGUUAUUUAUGCACUGUGGGAUGUGUUCUUCUUUCUCUGUAUUCCGAUACAAAGUGUUGUAUCAAAGUGUGAUAUACAAAGUGUACCAACAUAAGUGUUGGUAGCACUUAAGACUUAUACUUGCCUUCUGAUAGUAUUCCUUUAUACACAGUGGAUUGAUUAUAAAUAAAUAGAUGUGUCUUAACAUAA\
) } def
/len { sequence length } bind def

/coor [
[172.70193481 363.26010132]
[185.66671753 348.17584229]
[179.98262024 334.29452515]
[174.29850769 320.41320801]
[168.61441040 306.53189087]
[162.93031311 292.65057373]
[157.24621582 278.76925659]
[151.56211853 264.88793945]
[145.87800598 251.00662231]
[142.77003479 249.31317139]
[140.33311462 246.02290344]
[139.31207275 241.47012329]
[140.27308655 236.31053162]
[135.26980591 222.16955566]
[123.73039246 212.75195312]
[126.42150879 197.16130066]
[121.41822052 183.02032471]
[116.41493225 168.87934875]
[111.41164398 154.73837280]
[106.40836334 140.59741211]
[101.40507507 126.45642853]
[87.61761475 120.54829407]
[73.92764282 126.67891693]
[60.23766327 132.80953979]
[46.54768753 138.94017029]
[32.85771179 145.07078552]
[19.16773415 151.20141602]
[20.28254128 166.31872559]
[16.15670586 180.90478516]
[7.28844213 193.19827271]
[-5.25136185 201.71467590]
[-19.94846535 205.42559814]
[-35.02811813 203.88293457]
[-48.66938400 197.27296448]
[-59.22501373 186.39387512]
[-65.42035675 172.55937195]
[-66.50730133 157.44003296]
[-62.35459137 142.86160278]
[-53.46369171 130.58447266]
[-40.90821457 122.09120178]
[-26.20429611 118.40736389]
[-11.12751007 119.97781372]
[2.50155139 126.61291504]
[13.03711128 137.51142883]
[26.72708893 131.38081360]
[40.41706467 125.25019073]
[54.10704041 119.11956787]
[67.79701996 112.98894501]
[81.48699188 106.85832214]
[80.75856018 91.87601471]
[66.53842163 87.10237122]
[52.31828690 82.32872772]
[38.09814835 77.55508423]
[23.87801170 72.78144073]
[9.65787315 68.00778961]
[-4.56226397 63.23414993]
[-20.51931953 67.01626587]
[-31.57491493 54.90404510]
[-26.35600281 39.35750580]
[-10.23134995 36.36958694]
[0.21138051 49.01401138]
[14.43151855 53.78765488]
[28.65165520 58.56129837]
[42.87179184 63.33494568]
[57.09193039 68.10858917]
[71.31207275 72.88223267]
[85.53220367 77.65587616]
[86.20331573 75.22453308]
[87.13737488 72.79030609]
[87.38027191 57.79227066]
[87.62316895 42.79423904]
[87.86605835 27.79620552]
[88.10895538 12.79817200]
[88.35185242 -2.19986153]
[88.59474945 -17.19789505]
[88.83764648 -32.19592667]
[75.96589661 -38.05062485]
[66.32896423 -48.33971024]
[61.35909653 -61.48567200]
[61.77644348 -75.49015808]
[67.48490906 -88.23773956]
[77.59163666 -97.81546021]
[90.54653931 -102.79988861]
[91.03226471 -117.79202271]
[91.51799774 -132.78414917]
[92.00372314 -147.77629089]
[92.48944855 -162.76841736]
[92.97518158 -177.76055908]
[93.33950806 -192.75613403]
[93.58239746 -207.75416565]
[93.82529449 -222.75219727]
[94.06819153 -237.75022888]
[94.31108856 -252.74826050]
[94.55398560 -267.74630737]
[94.79688263 -282.74432373]
[86.35978699 -296.80661011]
[94.55500031 -311.01119995]
[110.95200348 -310.74563599]
[118.68295288 -296.28311157]
[109.79491425 -282.50143433]
[109.55201721 -267.50338745]
[109.30912018 -252.50537109]
[109.06622314 -237.50733948]
[108.82333374 -222.50930786]
[108.58043671 -207.51127625]
[108.33753967 -192.51322937]
[111.37702179 -185.76473999]
[107.96731567 -177.27482605]
[107.48158264 -162.28269958]
[106.99585724 -147.29055786]
[106.51013184 -132.29843140]
[106.02439880 -117.30629730]
[105.53867340 -102.31416321]
[119.83786011 -95.19555664]
[129.63952637 -82.50974274]
[132.94305420 -66.76307678]
[129.03805542 -51.09473801]
[118.65641785 -38.65090942]
[103.83567810 -31.95303154]
[103.59278107 -16.95499802]
[103.34988403 -1.95696545]
[103.10699463 13.04106808]
[102.86409760 28.03910065]
[102.62120056 43.03713608]
[102.37830353 58.03516769]
[102.13540649 73.03320312]
[107.48147583 78.29338837]
[114.88507843 65.24782562]
[115.58728790 50.26427078]
[125.30014038 38.83359146]
[139.97383118 35.72184753]
[153.49009705 42.22649765]
[160.21328735 55.63539886]
[157.34014893 70.35766602]
[146.06863403 80.25478363]
[131.09756470 81.19988251]
[118.17360687 88.81375885]
[123.51967621 94.07395172]
[138.51181030 93.58821869]
[153.50393677 93.10249329]
[168.49607849 92.61676788]
[179.11943054 80.91548157]
[194.90913391 80.23674011]
[206.49743652 90.98320770]
[207.00921631 106.77920532]
[196.14082336 118.25325012]
[180.34030151 118.59799194]
[168.98179626 107.60890198]
[153.98966980 108.09462738]
[138.99754333 108.58035278]
[124.00540161 109.06608582]
[115.54604340 121.45314789]
[120.54933167 135.59411621]
[125.55261993 149.73509216]
[130.55590820 163.87606812]
[135.55918884 178.01704407]
[140.56248474 192.15800476]
[152.45976257 202.58706665]
[149.41076660 217.16627502]
[154.41406250 231.30725098]
[159.75932312 245.32252502]
[165.44343567 259.20385742]
[171.12753296 273.08517456]
[176.81163025 286.96649170]
[182.49572754 300.84780884]
[188.17982483 314.72912598]
[193.86393738 328.61044312]
[199.54803467 342.49176025]
[210.19018555 342.04864502]
[220.51469421 344.58001709]
[229.70845032 349.87448120]
[237.05075073 357.50341797]
[241.96977234 366.85586548]
[244.08715820 377.18722534]
[243.24707031 387.67868042]
[239.52755737 397.50210571]
[233.23353577 405.88525391]
[224.87176514 412.17272949]
[229.41452026 426.46829224]
[233.95727539 440.76385498]
[238.50003052 455.05944824]
[252.64843750 462.10202026]
[257.59375000 477.11267090]
[250.40199280 491.18582153]
[235.33988953 495.97216797]
[221.34355164 488.63201904]
[216.71673584 473.52014160]
[224.20445251 459.60220337]
[219.66169739 445.30661011]
[215.11894226 431.01104736]
[210.57620239 416.71548462]
[191.23217773 413.71466064]
[176.01939392 401.27059937]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 168]
[3 167]
[4 166]
[5 165]
[6 164]
[7 163]
[8 162]
[9 161]
[13 160]
[14 159]
[16 157]
[17 156]
[18 155]
[19 154]
[20 153]
[21 152]
[22 49]
[23 48]
[24 47]
[25 46]
[26 45]
[27 44]
[50 67]
[51 66]
[52 65]
[53 64]
[54 63]
[55 62]
[56 61]
[69 126]
[70 125]
[71 124]
[72 123]
[73 122]
[74 121]
[75 120]
[76 119]
[83 113]
[84 112]
[85 111]
[86 110]
[87 109]
[88 108]
[89 106]
[90 105]
[91 104]
[92 103]
[93 102]
[94 101]
[95 100]
[138 151]
[139 150]
[140 149]
[141 148]
[178 191]
[179 190]
[180 189]
[181 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
