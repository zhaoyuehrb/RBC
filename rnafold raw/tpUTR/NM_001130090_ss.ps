%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 02:21:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAAUGUCAGCCACAGGAGCUUCUUCAAAACAUAGCACCAGCCCCAGCCAGGAGAAGGAAGUGCACACGCCUCACCCGCACCUCUAGAGAGUUGCUGGGCAUCUCUCAACCGCGAUCCCCAACACCAUUCUUCCCCCACCCCUGGAAAAACUUCCAAAAGUAGAGAAAAUAAAGGACUCAUUUCACAUUUCCCCUACUCAUAA\
) } def
/len { sequence length } bind def

/coor [
[191.04487610 194.26004028]
[189.74816895 175.74728394]
[193.78479004 157.61917114]
[180.49884033 150.65614319]
[167.21289062 143.69313049]
[153.92695618 136.73011780]
[140.64100647 129.76708984]
[132.02133179 138.88966370]
[121.41408539 145.59832764]
[109.47766876 149.47671509]
[96.95296478 150.28405762]
[84.61739349 147.97026062]
[77.96160126 161.41275024]
[76.35198212 178.29011536]
[59.68860626 181.41552734]
[52.07245636 166.26855469]
[64.51911926 154.75695801]
[71.17491150 141.31446838]
[54.42039108 133.80889893]
[39.97844696 119.54410553]
[30.50568771 99.40083313]
[16.46794319 104.68682098]
[2.43019724 109.97281647]
[-11.60754776 115.25880432]
[-25.64529419 120.54479980]
[-39.68303680 125.83078766]
[-53.72078323 131.11677551]
[-53.07161331 146.21765137]
[-57.11627197 160.76010132]
[-65.44652557 173.32334900]
[-77.23608398 182.68399048]
[-91.32253265 187.93513489]
[-106.32194519 188.57434082]
[-120.76484680 184.55155945]
[-133.24017334 176.27288818]
[-142.53314209 164.55957031]
[-156.57089233 169.84556580]
[-166.54838562 182.86022949]
[-182.77075195 180.45880127]
[-188.54980469 165.11166382]
[-177.94055176 152.60664368]
[-161.85687256 155.80781555]
[-147.81913757 150.52183533]
[-148.56021118 135.58825684]
[-144.64387512 121.13721466]
[-136.44152832 108.58724213]
[-124.74593353 99.17428589]
[-110.69455719 93.82997894]
[-95.65904236 93.08947754]
[-81.11124420 97.03786469]
[-68.47915649 105.30060577]
[-59.00677490 117.07904053]
[-44.96902847 111.79304504]
[-30.93128586 106.50705719]
[-16.89353943 101.22106171]
[-2.85579443 95.93507385]
[11.18195057 90.64907837]
[25.21969604 85.36309052]
[26.02386475 70.38465881]
[12.63277531 63.62605667]
[-3.17340446 64.31545258]
[-11.04931736 51.67349243]
[-24.44040680 44.91488647]
[-37.83149719 38.15628433]
[-54.16545868 39.61701584]
[-63.37483978 26.04795647]
[-55.98581696 11.40779305]
[-39.59958649 10.75706959]
[-31.07289314 24.76519585]
[-17.68180466 31.52379799]
[-4.29071426 38.28240204]
[10.55764484 37.10958099]
[19.39137840 50.23496628]
[32.78246689 56.99356842]
[38.10604858 51.71062469]
[27.54032516 41.06330109]
[38.18780899 30.49774361]
[48.75320816 41.14473724]
[54.07678604 35.86179352]
[47.42098999 22.41930962]
[40.76519394 8.97682667]
[27.70788002 0.04278116]
[28.99443817 -14.79615498]
[22.33864212 -28.23863792]
[15.68284416 -41.68112183]
[1.74046433 -50.31489944]
[2.51672578 -66.69566345]
[17.21307755 -73.97229004]
[30.71117210 -64.65921021]
[29.12532806 -48.33691788]
[35.78112411 -34.89443588]
[42.43692398 -21.45195198]
[55.01816940 -13.47940350]
[54.20767593 2.32102895]
[60.86347198 15.76351261]
[67.51927185 29.20599556]
[82.40668488 27.37161827]
[85.60026550 12.71552658]
[88.79385376 -1.94056511]
[91.98743439 -16.59665680]
[87.36566162 -31.72774315]
[97.63527679 -42.51589966]
[100.82886505 -57.17199326]
[104.02244568 -71.82808685]
[99.40067291 -86.95916748]
[109.67028809 -97.74732971]
[100.92065430 -110.90861511]
[104.12202454 -126.38526917]
[117.37508392 -134.99525452]
[132.81703186 -131.63043213]
[141.28642273 -118.28709412]
[137.75852966 -102.88159180]
[124.32637787 -94.55374146]
[129.17657471 -80.47095490]
[118.67853546 -68.63449860]
[115.48495483 -53.97840881]
[112.29136658 -39.32231522]
[117.14156342 -25.23953056]
[106.64352417 -13.40307236]
[103.44994354 1.25301898]
[100.25636292 15.90911102]
[97.06277466 30.56520271]
[122.33371735 38.24145126]
[141.53321838 54.17153931]
[152.36729431 75.00975037]
[154.11552429 96.96762848]
[147.60401917 116.48114777]
[160.88996887 123.44416809]
[174.17591858 130.40718079]
[187.46186829 137.37019348]
[200.74780273 144.33322144]
[208.09516907 135.46012878]
[216.89942932 128.03977966]
[226.87826538 122.30731964]
[237.71217346 118.44382477]
[249.05468750 116.57057953]
[260.54351807 116.74525452]
[271.81204224 118.96012115]
[282.50109863 123.14241028]
[292.27032471 129.15667725]
[300.80914307 136.80914307]
[307.84643555 145.85403442]
[313.15936279 156.00138855]
[316.58023071 166.92640686]
[331.50588989 165.43470764]
[346.43151855 163.94300842]
[361.35717773 162.45129395]
[376.28280640 160.95959473]
[389.27603149 150.95416260]
[404.33239746 157.45320129]
[405.96322632 173.77105713]
[392.49087524 183.12132263]
[377.77450562 175.88523865]
[362.84887695 177.37693787]
[347.92321777 178.86865234]
[332.99758911 180.36035156]
[318.07192993 181.85205078]
[316.30938721 195.68325806]
[311.59640503 208.80561829]
[304.15618896 220.59764099]
[314.72207642 231.24481201]
[325.28796387 241.89196777]
[335.85385132 252.53912354]
[346.41973877 263.18627930]
[361.63250732 267.53170776]
[365.10546875 282.01574707]
[380.31823730 286.36117554]
[383.79122925 300.84521484]
[394.35711670 311.49237061]
[404.92300415 322.13952637]
[415.48889160 332.78668213]
[427.16445923 330.51684570]
[438.37066650 334.13003540]
[446.35699463 342.61782837]
[449.22232056 353.79077148]
[446.36633301 364.84231567]
[456.60098267 375.80825806]
[472.40252686 376.10253906]
[483.30749512 387.54180908]
[482.84616089 403.33938599]
[471.29223633 414.12280273]
[455.50042725 413.49447632]
[444.83978271 401.82717896]
[445.63500977 386.04290771]
[435.40039062 375.07693481]
[417.10379028 375.55136108]
[404.04342651 362.27706909]
[404.84170532 343.35256958]
[394.27581787 332.70541382]
[383.70993042 322.05825806]
[373.14404297 311.41110229]
[358.68704224 307.82723999]
[354.45831299 292.58163452]
[340.00131226 288.99777222]
[335.77258301 273.75216675]
[325.20669556 263.10501099]
[314.64080811 252.45785522]
[304.07492065 241.81069946]
[293.50903320 231.16352844]
[277.51040649 240.37327576]
[259.53680420 244.64430237]
[241.07739258 243.61454773]
[223.66398621 237.36146545]
[208.74383545 226.39627075]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 131]
[4 130]
[5 129]
[6 128]
[7 127]
[12 18]
[13 17]
[21 58]
[22 57]
[23 56]
[24 55]
[25 54]
[26 53]
[27 52]
[36 43]
[37 42]
[59 74]
[60 73]
[62 71]
[63 70]
[64 69]
[79 96]
[80 95]
[81 94]
[83 92]
[84 91]
[85 90]
[97 122]
[98 121]
[99 120]
[100 119]
[102 117]
[103 116]
[104 115]
[106 113]
[144 157]
[145 156]
[146 155]
[147 154]
[148 153]
[160 199]
[161 198]
[162 197]
[163 196]
[164 195]
[166 193]
[168 191]
[169 190]
[170 189]
[171 188]
[176 185]
[177 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
