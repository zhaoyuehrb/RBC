%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 21:27:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGCCCAUGGGGCGGAGCUCGUCCGCAUGGUGCUGAAUGGCUGAGGACCUUCCCAGUCUCCCCAGAGUCCGUGCCUUUCCCUGUGUGAAUUUUGUAUCUAGCCUAAAGUUUCCCUAGGCUUUCUUGUCUCAGCAACUUUCCCAUCUUGUCUCUCUUGGAUGAUGUUUGCCGUCAGCAUUCACCAAAUAAACUUGCUCUCUGGGCCCUCGGU\
) } def
/len { sequence length } bind def

/coor [
[178.95106506 441.28295898]
[190.44013977 430.67471313]
[189.55569458 415.70080566]
[188.67124939 400.72689819]
[187.78681946 385.75302124]
[186.90237427 370.77911377]
[186.01792908 355.80520630]
[185.13348389 340.83129883]
[176.65921021 328.58239746]
[183.56935120 314.35000610]
[182.68490601 299.37609863]
[178.96313477 284.84515381]
[172.54043579 271.28976440]
[166.11773682 257.73434448]
[159.69503784 244.17895508]
[153.27233887 230.62355042]
[146.84963989 217.06814575]
[132.77957153 212.31745911]
[126.07294464 198.66184998]
[131.15130615 183.93609619]
[124.72859955 170.38069153]
[118.30590057 156.82528687]
[111.88320160 143.26988220]
[105.46050262 129.71447754]
[99.03780365 116.15908051]
[86.04741669 108.65908051]
[71.09674835 109.87455750]
[56.14607620 111.09004211]
[41.19540405 112.30551910]
[26.24473000 113.52100372]
[11.29405785 114.73648071]
[-3.64724469 116.06217957]
[-16.64340591 125.08495331]
[-30.05287361 118.60147858]
[-44.98399353 120.03733063]
[-59.91511154 121.47318268]
[-68.30317688 136.16198730]
[-83.64158630 142.88943481]
[-99.80529022 139.18540955]
[-110.46773529 126.70291138]
[-125.37605286 128.35882568]
[-140.28437805 130.01473999]
[-155.19268799 131.67063904]
[-170.10101318 133.32655334]
[-178.28326416 137.38365173]
[-185.24119568 134.89527893]
[-200.17231750 136.33113098]
[-215.10343933 137.76698303]
[-230.29106140 145.30172729]
[-241.73570251 132.79347229]
[-232.88446045 118.33346558]
[-216.53929138 122.83586121]
[-201.60816956 121.40000916]
[-186.67704773 119.96415710]
[-171.75692749 118.41823578]
[-156.84860229 116.76232910]
[-141.94027710 115.10641479]
[-127.03196716 113.45050812]
[-112.12364960 111.79459381]
[-106.62210846 99.63101959]
[-95.74161530 91.71039581]
[-82.26095581 90.18784332]
[-69.68889618 95.56727600]
[-61.35096359 106.54206085]
[-46.41984558 105.10620880]
[-31.48872566 103.67035675]
[-19.56053734 94.75028992]
[-5.08309603 101.13106537]
[1.27312160 97.36233521]
[10.07857800 99.78580475]
[25.02925110 98.57032776]
[39.97992325 97.35485077]
[54.93059540 96.13936615]
[69.88127136 94.92388916]
[84.83193970 93.70840454]
[69.84847260 93.00428009]
[57.84958649 84.00279999]
[52.98175812 69.81462860]
[56.92717743 55.34280777]
[68.32241821 45.58839798]
[83.22959137 43.92225266]
[96.49720001 50.92015076]
[103.54032135 64.16381073]
[101.92489624 79.07691193]
[105.43196106 64.49265289]
[108.93901825 49.90839767]
[104.64270020 34.68170166]
[115.14123535 24.11619377]
[118.64829254 9.53193665]
[122.15534973 -5.05232000]
[114.16572571 -18.42406654]
[117.93013763 -33.16461563]
[130.72729492 -40.69910049]
[134.23434448 -55.28335953]
[137.74140930 -69.86761475]
[141.24845886 -84.45187378]
[125.08895874 -97.96092224]
[118.03714752 -117.72887421]
[121.97012329 -138.26953125]
[135.72738647 -153.92272949]
[155.45191956 -160.41400146]
[157.43724060 -175.28204346]
[159.42254639 -190.15008545]
[161.40785217 -205.01812744]
[163.39315796 -219.88615417]
[165.37846375 -234.75419617]
[153.55194092 -244.66061401]
[148.98046875 -259.39511108]
[153.12278748 -274.25595093]
[164.65708923 -284.50109863]
[179.90283203 -286.86138916]
[193.99514771 -280.58364868]
[202.43722534 -267.67105103]
[202.53524780 -252.24400330]
[194.25791931 -239.22520447]
[180.24650574 -232.76889038]
[178.26119995 -217.90084839]
[176.27589417 -203.03282166]
[174.29057312 -188.16477966]
[172.30526733 -173.29673767]
[170.31996155 -158.42869568]
[178.83792114 -154.44709778]
[186.18327332 -148.55484009]
[191.93495178 -141.08117676]
[195.76124573 -132.44625854]
[197.43890381 -123.13751221]
[196.86616516 -113.68208313]
[194.06892395 -104.61705780]
[189.19961548 -96.45891571]
[182.52888489 -89.67409515]
[174.43063354 -84.65234375]
[165.36100769 -81.68432617]
[155.83271790 -80.94481659]
[152.32566833 -66.36055756]
[148.81860352 -51.77629852]
[145.31155396 -37.19204330]
[153.28407288 -24.66309929]
[149.93518066 -9.82262897]
[136.73960876 -1.54526174]
[133.23254395 13.03899479]
[129.72549438 27.62325096]
[134.27265930 41.80678177]
[123.52326965 53.41545486]
[120.01621246 67.99971008]
[116.50915527 82.58396912]
[126.71611023 71.59223938]
[140.53396606 65.75555420]
[155.52996826 66.10152435]
[169.06396484 72.56922913]
[178.75314331 84.01998138]
[182.89166260 98.43776703]
[180.75090027 113.28421783]
[172.70774841 125.94548798]
[160.17828369 134.19244385]
[145.36840820 136.57315063]
[130.88554382 132.66845703]
[119.27952576 123.16581726]
[112.59320068 109.73638153]
[119.01589966 123.29178619]
[125.43860626 136.84718323]
[131.86129761 150.40258789]
[138.28399658 163.95799255]
[144.70669556 177.51339722]
[159.31901550 182.90950012]
[165.63945007 196.74809265]
[160.40504456 210.64544678]
[166.82774353 224.20085144]
[173.25044250 237.75625610]
[179.67314148 251.31166077]
[186.09584045 264.86706543]
[192.51853943 278.42245483]
[198.35020447 275.44064331]
[205.74867249 274.61856079]
[213.90048218 276.55447388]
[221.79609680 281.54629517]
[232.51937866 292.03494263]
[243.24266052 302.52355957]
[253.96592712 313.01217651]
[267.76962280 306.70166016]
[282.92102051 305.80764771]
[297.37106323 310.45104980]
[309.16546631 320.00387573]
[316.70913696 333.17422485]
[318.98184204 348.18084717]
[315.67626953 362.99426270]
[307.23941040 375.61108398]
[294.81231689 384.32498169]
[280.07565308 387.95745850]
[265.02243042 386.01727295]
[251.68843079 378.76681519]
[241.87701416 367.18661499]
[236.91508484 352.84286499]
[237.47369385 337.67538452]
[243.47731018 323.73547363]
[232.75402832 313.24682617]
[222.03074646 302.75820923]
[211.30746460 292.26959229]
[197.65881348 298.49166870]
[198.54325867 313.46557617]
[207.08079529 326.78552246]
[200.10739136 339.94686890]
[200.99183655 354.92077637]
[201.87628174 369.89465332]
[202.76071167 384.86856079]
[203.64515686 399.84246826]
[204.52960205 414.81637573]
[205.41404724 429.79028320]
[218.07205200 438.97225952]
[221.81639099 454.15493774]
[214.87911987 468.16952515]
[200.53579712 474.39874268]
[185.55889893 469.90133667]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 207]
[3 206]
[4 205]
[5 204]
[6 203]
[7 202]
[8 201]
[10 199]
[11 198]
[12 171]
[13 170]
[14 169]
[15 168]
[16 167]
[17 166]
[20 163]
[21 162]
[22 161]
[23 160]
[24 159]
[25 158]
[26 75]
[27 74]
[28 73]
[29 72]
[30 71]
[31 70]
[32 68]
[34 66]
[35 65]
[36 64]
[40 59]
[41 58]
[42 57]
[43 56]
[44 55]
[46 54]
[47 53]
[48 52]
[84 145]
[85 144]
[86 143]
[88 141]
[89 140]
[90 139]
[93 136]
[94 135]
[95 134]
[96 133]
[101 121]
[102 120]
[103 119]
[104 118]
[105 117]
[106 116]
[175 197]
[176 196]
[177 195]
[178 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
