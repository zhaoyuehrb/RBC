%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 21:55:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUAGGAGAAUAAGAGUCUGGAGACUGGGAGCCUUCACUUCGGCCUCCGAUUGGUGGCGCAUAGGGUGUAACCAAUAGGAAACCCCUAAAGGGUACUUAAACCCCAGAUUUUGCAACUGGGGCUCUUGAGCAGCUUGCUUUAGCCUGCUCCCACUCUGUGGAAUAUACUUUUGCUUCAAUAAAUCUGUGCUUUUAUUGCUUCAUUGUUUCAUUGA\
) } def
/len { sequence length } bind def

/coor [
[129.52226257 620.72436523]
[132.29107666 605.85192871]
[139.52198792 592.56402588]
[150.50657654 582.16241455]
[164.16870117 575.66613770]
[162.21080017 560.79443359]
[160.25291443 545.92279053]
[158.29501343 531.05108643]
[156.22903442 516.19403076]
[154.05505371 501.35241699]
[151.88107300 486.51080322]
[149.70709229 471.66918945]
[147.53311157 456.82754517]
[145.35914612 441.98593140]
[143.18516541 427.14431763]
[141.01118469 412.30267334]
[138.83720398 397.46105957]
[129.33700562 385.98953247]
[134.99253845 371.21368408]
[132.81855774 356.37207031]
[130.64457703 341.53045654]
[128.47059631 326.68881226]
[113.13040924 322.20727539]
[101.23764038 311.44476318]
[95.20791626 296.51885986]
[96.29575348 280.39953613]
[104.33396912 266.31805420]
[117.75698090 257.11944580]
[115.36737823 242.31101990]
[112.97777557 227.50257874]
[110.58817291 212.69413757]
[108.19857025 197.88569641]
[95.30178070 198.11602783]
[82.48600006 196.65447998]
[69.97222900 193.52626038]
[57.97624588 188.78530884]
[46.70490265 182.51339722]
[36.35255432 174.81864929]
[27.09771347 165.83375549]
[19.09996986 155.71366882]
[12.49723244 144.63287354]
[7.40335417 132.78244019]
[3.90617228 120.36672974]
[2.06599140 107.59982300]
[1.91454208 94.70186615]
[3.45443606 81.89526367]
[-11.03445148 78.01297760]
[-25.52333832 74.13069153]
[-40.85584259 78.03260803]
[-51.14688110 67.26488495]
[-65.63577271 63.38259888]
[-80.12465668 59.50031662]
[-94.61354065 55.61803055]
[-109.10243225 51.73574448]
[-123.59131622 47.85345840]
[-138.92382812 51.75536728]
[-149.21485901 40.98765182]
[-163.70375061 37.10536575]
[-178.19264221 33.22307968]
[-192.68151855 29.34079361]
[-207.23823547 36.08480453]
[-221.52185059 28.78015137]
[-224.57519531 13.03033829]
[-214.05601501 0.91727352]
[-198.03372192 1.73306453]
[-188.79924011 14.85190582]
[-174.31034851 18.73419189]
[-159.82145691 22.61647797]
[-145.33258057 26.49876213]
[-131.03642273 22.31916428]
[-119.70903015 33.36457062]
[-105.22014618 37.24685669]
[-90.73126221 41.12914276]
[-76.24237061 45.01142883]
[-61.75348282 48.89371490]
[-47.26459503 52.77599716]
[-32.96843338 48.59640121]
[-21.64105225 59.64180756]
[-7.15216541 63.52409363]
[7.33672190 67.40637970]
[20.36390495 42.49417877]
[39.91399765 22.29221725]
[31.67136192 9.75990009]
[23.42872620 -2.77241659]
[15.18609238 -15.30473423]
[-0.17152785 -19.94403076]
[-5.98564148 -34.89647675]
[2.20384192 -48.69183350]
[18.11465073 -50.74748611]
[29.54137421 -39.48651505]
[27.71840858 -23.54736900]
[35.96104431 -11.01505089]
[44.20367813 1.51726580]
[52.44631195 14.04958344]
[58.41055298 11.01042080]
[64.56793213 8.38452244]
[70.88985443 6.18408108]
[77.34696198 4.41931581]
[83.90927124 3.09842253]
[90.54630280 2.22753501]
[97.22724152 1.81069756]
[103.92105103 1.84984624]
[105.66244507 -13.04872894]
[107.40383911 -27.94730377]
[109.14523315 -42.84587860]
[110.88662720 -57.74445343]
[112.62802124 -72.64302826]
[100.64074707 -82.35430145]
[95.82843018 -97.01190186]
[99.72665405 -111.93863678]
[111.09152222 -122.37143707]
[126.29653931 -124.98123932]
[140.48983765 -118.93526459]
[149.14239502 -106.16276550]
[149.49319458 -90.73938751]
[141.43032837 -77.58668518]
[127.52659607 -70.90163422]
[125.78520203 -56.00306320]
[124.04380798 -41.10448456]
[122.30241394 -26.20591164]
[120.56101990 -11.30733585]
[118.81962585 3.59123993]
[130.59275818 6.22862911]
[142.00144958 10.30409431]
[152.87002563 15.76781940]
[163.02954102 22.54852104]
[172.32041931 30.55435944]
[180.59498596 39.67416763]
[192.36122131 30.37063408]
[204.12745667 21.06710052]
[215.89369202 11.76356888]
[227.65992737 2.46003628]
[239.42616272 -6.84349632]
[251.12442017 -16.23234749]
[262.75408936 -25.70602417]
[264.11083984 -41.45196915]
[276.25787354 -51.56260681]
[291.98858643 -50.03947449]
[301.97024536 -37.78622055]
[300.28088379 -22.07247925]
[287.92279053 -12.22093964]
[272.22778320 -14.07634258]
[260.59808350 -4.60266733]
[257.39871216 2.05644131]
[248.72969055 4.92273903]
[236.96345520 14.22627163]
[225.19721985 23.52980423]
[213.43098450 32.83333588]
[201.66474915 42.13686752]
[189.89851379 51.44039917]
[196.03939819 65.12577820]
[210.81150818 62.52105331]
[225.58363342 59.91633224]
[240.35574341 57.31161118]
[254.90431213 48.60668945]
[267.29647827 60.17692947]
[259.60891724 75.28777313]
[242.96046448 72.08372498]
[228.18835449 74.68844604]
[213.41624451 77.29317474]
[198.64411926 79.89789581]
[200.19976807 92.66429138]
[200.11344910 105.49880219]
[198.39320374 118.19153595]
[195.07377625 130.53575134]
[190.21585083 142.33128357]
[183.90504456 153.38768005]
[176.25035095 163.52740479]
[167.38229370 172.58860779]
[157.45066833 180.42767334]
[146.62205505 186.92163086]
[135.07699585 191.96994019]
[123.00700378 195.49609375]
[125.39660645 210.30453491]
[127.78620911 225.11297607]
[130.17581177 239.92141724]
[132.56541443 254.72984314]
[146.25521851 258.23413086]
[157.54162598 266.66534424]
[164.74081421 278.72442627]
[166.79449463 292.57424927]
[163.42532349 306.11947632]
[155.17387390 317.32351685]
[143.31222534 324.51483154]
[145.48620605 339.35647583]
[147.66018677 354.19808960]
[149.83415222 369.03973389]
[159.48985291 381.57281494]
[153.67883301 395.28707886]
[155.85281372 410.12869263]
[158.02679443 424.97033691]
[160.20075989 439.81195068]
[162.37474060 454.65356445]
[164.54872131 469.49520874]
[166.72270203 484.33682251]
[168.89668274 499.17843628]
[171.07064819 514.02008057]
[175.40928650 522.05395508]
[173.16668701 529.09320068]
[175.12458801 543.96484375]
[177.08247375 558.83654785]
[179.04037476 573.70819092]
[193.91831970 576.44714355]
[207.22076416 583.65130615]
[217.64445496 594.61499023]
[224.16819763 608.26397705]
[226.15283203 623.26123047]
[223.40396118 638.13732910]
[216.19087219 651.43493652]
[205.22021484 661.85125732]
[191.56681824 668.36584473]
[176.56828308 670.34045410]
[161.69401550 667.58160400]
[148.40122986 660.35961914]
[137.99224854 649.38201904]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 202]
[6 201]
[7 200]
[8 199]
[9 197]
[10 196]
[11 195]
[12 194]
[13 193]
[14 192]
[15 191]
[16 190]
[17 189]
[19 187]
[20 186]
[21 185]
[22 184]
[28 177]
[29 176]
[30 175]
[31 174]
[32 173]
[46 80]
[47 79]
[48 78]
[50 76]
[51 75]
[52 74]
[53 73]
[54 72]
[55 71]
[57 69]
[58 68]
[59 67]
[60 66]
[82 94]
[83 93]
[84 92]
[85 91]
[102 122]
[103 121]
[104 120]
[105 119]
[106 118]
[107 117]
[128 150]
[129 149]
[130 148]
[131 147]
[132 146]
[133 145]
[134 143]
[135 142]
[151 161]
[152 160]
[153 159]
[154 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
