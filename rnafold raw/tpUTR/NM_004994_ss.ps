%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 18:14:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUCCCGUCCUGCUUUGGCAGUGCCAUGUAAAUCCCCACUGGGACCAACCCUGGGGAAGGAGCCAGUUUGCCGGAUACAAACUGGUAUUCUGUUCUGGAGGAAAGGGAGGAGUGGAGGUGGGCUGGGCCCUCUCUUCUCACCUUUGUUUUUUGUUGGAGUGUUUCUAAUAAACUUGGAUUCUCUAACCUUUA\
) } def
/len { sequence length } bind def

/coor [
[260.39636230 157.91252136]
[274.53866577 152.91296387]
[289.24520874 155.86241150]
[274.74591064 152.01924133]
[260.24658203 148.17607117]
[245.74726868 144.33290100]
[231.24795532 140.48974609]
[214.58894348 145.98805237]
[201.63346863 132.91157532]
[187.07382202 129.30369568]
[172.51417542 125.69582367]
[157.95452881 122.08794403]
[143.73988342 126.53688049]
[132.20585632 115.70743561]
[120.86875153 135.56492615]
[97.40178680 146.56651306]
[68.83222961 141.67704773]
[59.02601624 153.02774048]
[49.21980667 164.37843323]
[39.41359329 175.72912598]
[33.63414383 191.66757202]
[16.71866226 190.52619934]
[13.13276768 173.95581055]
[28.06290245 165.92291260]
[37.86911392 154.57221985]
[47.67532730 143.22152710]
[57.48153687 131.87083435]
[54.08743286 125.18278503]
[40.71132660 131.97099304]
[27.33511353 138.75898743]
[20.54732132 125.38266754]
[33.92312241 118.59487915]
[47.29922867 111.80667114]
[43.90512466 105.11862183]
[28.95426941 106.33182526]
[14.00341225 107.54503632]
[-0.94744503 108.75823975]
[-15.89830208 109.97145081]
[-30.84915924 111.18465424]
[-36.51630783 114.63428497]
[-42.21706009 114.68551636]
[-46.30247498 112.18704987]
[-61.28477859 112.91548157]
[-76.26708221 113.64391327]
[-88.06846619 124.51160431]
[-103.90056610 121.91850281]
[-111.61834717 107.85382080]
[-105.30138397 93.10676575]
[-89.79551697 88.99002838]
[-76.99551392 98.66161346]
[-62.01321030 97.93317413]
[-47.03090668 97.20474243]
[-32.06236649 96.23379517]
[-17.11150932 95.02059174]
[-2.16065168 93.80738068]
[12.79020596 92.59417725]
[27.74106216 91.38097382]
[42.69192123 90.16776276]
[48.48822784 76.33292389]
[38.86710358 64.82492828]
[29.24598122 53.31692886]
[19.62485886 41.80893326]
[9.91087246 30.37921333]
[0.10466090 19.02852249]
[-9.70155048 7.67782974]
[-19.50776291 -3.67286253]
[-29.31397438 -15.02355480]
[-39.12018585 -26.37424660]
[-48.92639542 -37.72493744]
[-58.73260880 -49.07563019]
[-68.53881836 -60.42632294]
[-84.17113495 -60.02033997]
[-96.37488556 -69.79798889]
[-99.38783264 -85.14257050]
[-91.78736115 -98.80883789]
[-77.16217804 -104.34400177]
[-62.41784668 -99.13452148]
[-54.51618958 -85.64015198]
[-57.18812943 -70.23253632]
[-47.38191605 -58.88184357]
[-37.57570648 -47.53115082]
[-27.76949310 -36.18045807]
[-17.96328163 -24.82976723]
[-8.15707016 -13.47907448]
[1.64914155 -2.12838173]
[11.45535278 9.22231007]
[21.26156425 20.57300186]
[28.02303123 23.58353424]
[31.13285446 32.18780899]
[40.75397873 43.69580841]
[50.37510300 55.20380402]
[59.99622345 66.71179962]
[77.94056702 55.86520004]
[97.65804291 53.41989899]
[115.60255432 58.92639923]
[128.89141846 70.57798767]
[135.76739502 85.66302490]
[135.81372070 101.14778900]
[151.06977844 96.95691681]
[161.56240845 107.52830505]
[176.12205505 111.13617706]
[190.68168640 114.74404907]
[205.24133301 118.35192871]
[216.67947388 112.37093353]
[228.73869324 115.68560791]
[235.09112549 125.99042511]
[249.59043884 129.83358765]
[264.08975220 133.67675781]
[278.58908081 137.51992798]
[293.08837891 141.36309814]
[307.80606079 138.46652222]
[319.76770020 129.41560364]
[331.72933960 120.36468506]
[338.06555176 105.86768341]
[352.88345337 104.35816956]
[364.84509277 95.30725861]
[376.80673218 86.25634003]
[388.76837158 77.20542145]
[400.73001099 68.15450287]
[405.69430542 60.46941757]
[412.95944214 59.05573654]
[425.06607056 50.19970322]
[437.17269897 41.34366608]
[449.27935791 32.48762894]
[458.49346924 18.25611305]
[474.71954346 23.17047882]
[474.48907471 40.12285995]
[458.13537598 44.59426498]
[446.02874756 53.45030212]
[433.92211914 62.30633926]
[421.81549072 71.16237640]
[409.78094482 80.11614227]
[397.81930542 89.16706085]
[385.85766602 98.21797943]
[373.89602661 107.26889801]
[361.93438721 116.31981659]
[356.45373535 130.16943359]
[340.78024292 132.32632446]
[328.81860352 141.37724304]
[316.85696411 150.42816162]
[316.18984985 157.89843750]
[331.02642822 155.69023132]
[345.86300659 153.48200989]
[358.80691528 145.90211487]
[373.73806763 147.33778381]
[385.00051880 157.24520874]
[388.32809448 171.87144470]
[382.46032715 185.67613220]
[369.61987305 193.43003845]
[354.67071533 192.19601440]
[343.27670288 182.44332886]
[329.06616211 177.64115906]
[314.85565186 172.83898926]
[314.18853760 180.30924988]
[324.35714722 191.33645630]
[334.52578735 202.36364746]
[344.69439697 213.39083862]
[354.86303711 224.41804504]
[365.03164673 235.44523621]
[375.20028687 246.47242737]
[386.96255493 244.63130188]
[398.03750610 248.66180420]
[405.70733643 257.45153809]
[408.14981079 268.73583984]
[404.86999512 279.68063354]
[414.67620850 291.03134155]
[424.48242188 302.38201904]
[434.28863525 313.73272705]
[444.09484863 325.08340454]
[459.92623901 327.68081665]
[467.64019775 341.74761963]
[461.31921387 356.49295044]
[445.81222534 360.60546875]
[433.01486206 350.93038940]
[432.74414062 334.88961792]
[422.93795776 323.53894043]
[413.13174438 312.18823242]
[403.32553101 300.83755493]
[393.51931763 289.48684692]
[375.22476196 289.26519775]
[362.67620850 275.51574707]
[364.17309570 256.64105225]
[354.00445557 245.61386108]
[343.83584595 234.58666992]
[333.66720581 223.55946350]
[323.49859619 212.53227234]
[313.32995605 201.50508118]
[303.16134644 190.47787476]
[294.58816528 202.78643799]
[280.92053223 208.96670532]
[266.01632690 207.27416992]
[254.08248901 198.18661499]
[248.48754883 184.26911926]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 110]
[4 109]
[5 108]
[6 107]
[7 106]
[9 103]
[10 102]
[11 101]
[12 100]
[14 98]
[17 27]
[18 26]
[19 25]
[20 24]
[34 58]
[35 57]
[36 56]
[37 55]
[38 54]
[39 53]
[42 52]
[43 51]
[44 50]
[59 92]
[60 91]
[61 90]
[62 89]
[63 87]
[64 86]
[65 85]
[66 84]
[67 83]
[68 82]
[69 81]
[70 80]
[71 79]
[111 140]
[112 139]
[113 138]
[115 136]
[116 135]
[117 134]
[118 133]
[119 132]
[121 131]
[122 130]
[123 129]
[124 128]
[154 188]
[155 187]
[156 186]
[157 185]
[158 184]
[159 183]
[160 182]
[165 179]
[166 178]
[167 177]
[168 176]
[169 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
