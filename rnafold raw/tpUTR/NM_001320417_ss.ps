%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 16:30:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGGUGGUAGCCUAAUUUGUAUUAUGUCUACUUUAAGUGAAUAUUGGAUUUUUUUUAAAAGAUCACUUUUAUAAUGUAUGAAUUUAACAAUAAACUUUUAUAUUUCUACUAA\
) } def
/len { sequence length } bind def

/coor [
[126.02173615 258.24853516]
[119.94609833 271.96301270]
[113.87045288 285.67745972]
[107.79481506 299.39193726]
[101.71916962 313.10641479]
[104.00064087 329.34606934]
[90.91259003 339.22711182]
[75.91889191 332.58474731]
[74.44376373 316.25210571]
[88.00470734 307.03076172]
[94.08034515 293.31628418]
[100.15599060 279.60183716]
[106.23162842 265.88735962]
[112.30727386 252.17289734]
[111.08499908 247.86322021]
[111.59801483 243.03776550]
[114.03752899 238.41494751]
[111.54696655 223.62316895]
[109.05639648 208.83137512]
[106.56583405 194.03958130]
[92.99835968 190.81053162]
[81.66596222 182.60717773]
[74.31536102 170.65284729]
[72.09527588 156.75209045]
[75.37694550 143.01829529]
[83.69261169 131.55241394]
[95.80181885 124.12154388]
[93.72339630 109.26624298]
[91.43868256 94.44126129]
[88.94812012 79.64946747]
[86.45755005 64.85767365]
[76.53630066 52.53374100]
[82.05299377 38.69844818]
[79.56243134 23.90665627]
[77.07186890 9.11486530]
[73.76309967 -5.51565266]
[69.64635468 -19.93967628]
[65.52961731 -34.36369705]
[61.41287613 -48.78772354]
[57.29613495 -63.21174622]
[41.38582611 -68.75023651]
[31.96179962 -82.51462555]
[32.54123306 -99.02061462]
[42.70185852 -111.83125305]
[38.18574905 -126.13526154]
[33.66963959 -140.43927002]
[29.15352821 -154.74328613]
[24.63741684 -169.04730225]
[11.12491989 -177.69552612]
[9.60485554 -193.66641235]
[21.24328804 -204.70845032]
[37.11220551 -202.35112000]
[45.03833771 -188.40278625]
[38.94142914 -173.56341553]
[43.45753860 -159.25939941]
[47.97365189 -144.95538330]
[52.48976135 -130.65138245]
[57.00587082 -116.34736633]
[70.07833099 -113.27573395]
[79.98088074 -104.04562378]
[84.02719116 -91.01343536]
[81.04659271 -77.58564758]
[71.72016144 -67.32848358]
[75.83689880 -52.90446091]
[79.95364380 -38.48043823]
[84.07038116 -24.05641556]
[88.18711853 -9.63239288]
[90.72819519 -8.15633392]
[92.79278564 -5.51332760]
[93.90514374 -1.89707232]
[93.67559814 2.31990695]
[91.86365509 6.62430000]
[94.35422516 21.41609192]
[96.84478760 36.20788193]
[106.58789825 47.47380829]
[101.24934387 62.36711121]
[103.73990631 77.15889740]
[106.23047638 91.95069122]
[110.62391663 98.85523224]
[108.57870483 107.18782043]
[110.65712738 122.04312897]
[126.13442993 126.84132385]
[137.95097351 137.84432983]
[143.79704285 152.83279419]
[142.55987549 168.81530762]
[134.53495789 182.62542725]
[121.35762787 191.54901123]
[123.84819031 206.34080505]
[126.33876038 221.13259888]
[128.82931519 235.92439270]
[135.13204956 222.31278992]
[144.56394958 210.64920044]
[156.55551147 201.63795471]
[170.38258362 195.82316589]
[185.21026611 193.55598450]
[200.14315796 194.97328186]
[214.27954102 199.98951721]
[226.76580811 208.30174255]
[236.84796143 219.40805054]
[243.91720581 232.63778687]
[247.54664612 247.19207764]
[247.51713562 262.19204712]
[243.83044434 276.73193359]
[236.70921326 289.93374634]
[226.58341980 301.00030518]
[214.06455994 309.26333618]
[199.90853882 314.22390747]
[184.97018433 315.58242798]
[170.15155029 313.25692749]
[156.34744263 307.38778687]
[144.39144897 298.32940674]
[135.00550842 286.62881470]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 14]
[2 13]
[3 12]
[4 11]
[5 10]
[17 90]
[18 89]
[19 88]
[20 87]
[27 81]
[28 80]
[29 78]
[30 77]
[31 76]
[33 74]
[34 73]
[35 72]
[36 67]
[37 66]
[38 65]
[39 64]
[40 63]
[44 58]
[45 57]
[46 56]
[47 55]
[48 54]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
