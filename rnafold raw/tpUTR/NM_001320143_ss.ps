%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 10:54:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAUUUGUGACAACUGCCUUGGGUGAAAAUCAGAAGCAAGCAACUCAGCGAAAAACUCAGAAGGUUUGGGUACAUUACAGCUUGGGUUUUCCAACUGACUUAGGAUUUCUGACUUUUUAUUAAUUUCUUAACCUACUGUAAAUAAACUUCACCUGACCAGAUUGUUCCUCAGAA\
) } def
/len { sequence length } bind def

/coor [
[104.76351166 579.53387451]
[88.98188019 578.68798828]
[78.48303223 566.87487793]
[79.49575043 551.10302734]
[91.41920471 540.72967529]
[92.22206879 525.75115967]
[93.02493286 510.77270508]
[93.82780457 495.79418945]
[83.81253052 479.27584839]
[94.98615265 462.52294922]
[95.25389099 447.52536011]
[95.52162170 432.52774048]
[95.78936005 417.53012085]
[96.05709839 402.53253174]
[96.19097137 387.53311157]
[96.19097137 372.53311157]
[96.19097137 357.53311157]
[87.85218811 348.74209595]
[87.74858093 336.22448730]
[96.48247528 326.70462036]
[96.75020599 311.70700073]
[97.01794434 296.70941162]
[97.28567505 281.71179199]
[97.55341339 266.71417236]
[97.82115173 251.71656799]
[98.08888245 236.71894836]
[98.35662079 221.72134399]
[98.62435150 206.72373962]
[80.89617920 195.59027100]
[73.37912750 175.90898132]
[79.24555969 155.53504944]
[96.29150391 142.70401001]
[94.95453644 127.76371002]
[93.61756897 112.82341003]
[85.73306274 101.27671051]
[91.44213867 88.51355743]
[90.10516357 73.57325745]
[75.14717102 71.94526672]
[60.79882812 67.43168640]
[47.61103058 60.20776749]
[36.08972931 50.55280304]
[26.67653275 38.83929825]
[19.73176193 25.51862335]
[15.52067089 11.10360622]
[14.20330906 -3.85120630]
[15.82844162 -18.77088165]
[20.33174515 -33.08220291]
[27.53835869 -46.23569870]
[37.16965866 -57.72673035]
[48.85404587 -67.11485291]
[62.14126968 -74.04071808]
[76.51979065 -78.23979187]
[75.18282318 -93.18009186]
[73.84585571 -108.12038422]
[72.50888062 -123.06068420]
[71.17191315 -138.00097656]
[62.23537827 -151.05659485]
[68.80748749 -164.42285156]
[67.47051239 -179.36314392]
[66.13354492 -194.30343628]
[64.79656982 -209.24374390]
[63.45960236 -224.18403625]
[62.12263489 -239.12434387]
[60.78566360 -254.06463623]
[51.84912872 -267.12023926]
[58.42123413 -280.48651123]
[57.08426666 -295.42678833]
[55.74729538 -310.36709595]
[54.41032410 -325.30740356]
[53.07335663 -340.24768066]
[51.73638535 -355.18798828]
[50.39941406 -370.12829590]
[39.82109833 -359.49346924]
[24.82250404 -359.28814697]
[13.95705032 -369.62942505]
[13.42110348 -384.61984253]
[23.52030563 -395.71066284]
[38.49526596 -396.57699585]
[49.80671692 -386.72341919]
[50.07445145 -401.72103882]
[50.34218597 -416.71865845]
[47.35888672 -425.38720703]
[50.75093079 -431.98092651]
[51.28631592 -446.97137451]
[51.82170105 -461.96182251]
[52.35708618 -476.95223999]
[42.52142715 -489.62661743]
[46.43809128 -505.18423462]
[61.10255051 -511.69061279]
[75.26548767 -504.15466309]
[78.06230927 -488.35726929]
[67.34752655 -476.41687012]
[66.81214142 -461.42642212]
[66.27675629 -446.43597412]
[65.74137115 -431.44555664]
[65.33979797 -416.45092773]
[65.07205963 -401.45330811]
[64.80432892 -386.45568848]
[65.33971405 -371.46527100]
[66.67668152 -356.52496338]
[68.01365662 -341.58465576]
[69.35062408 -326.64434814]
[70.68759155 -311.70407104]
[72.02456665 -296.76376343]
[73.36153412 -281.82345581]
[82.20243835 -269.83648682]
[75.72595978 -255.40161133]
[77.06293488 -240.46130371]
[78.39990234 -225.52101135]
[79.73686981 -210.58070374]
[81.07384491 -195.64041138]
[82.41081238 -180.70011902]
[83.74777985 -165.75981140]
[92.58868408 -153.77284241]
[86.11221313 -139.33795166]
[87.44918060 -124.39765930]
[88.78614807 -109.45735931]
[90.12312317 -94.51705933]
[91.46009064 -79.57675934]
[106.35571289 -77.99736023]
[120.66152954 -73.54073334]
[133.82716370 -66.37636566]
[145.34570312 -56.77798462]
[154.77325439 -45.11304092]
[161.74601746 -31.82868385]
[165.99436951 -17.43461227]
[167.35321045 -2.48351216]
[165.76846313 12.45016003]
[161.29916382 26.79225159]
[154.11531067 39.99098587]
[144.49133301 51.53818893]
[132.79570007 60.98886108]
[119.47673798 67.97832489]
[105.04546356 72.23628998]
[106.38243103 87.17658997]
[114.26693726 98.72328949]
[108.55786133 111.48644257]
[109.89483643 126.42674255]
[111.23180389 141.36703491]
[120.24887848 143.99353027]
[128.17160034 148.99310303]
[134.39198303 155.96678162]
[138.43693542 164.36470032]
[140.00421143 173.52946472]
[138.98497009 182.74757385]
[135.47117615 191.30505371]
[129.74754333 198.54266357]
[122.26847076 203.90673828]
[113.62196350 206.99147034]
[113.35423279 221.98907471]
[113.08649445 236.98669434]
[112.81875610 251.98429871]
[112.55102539 266.98190308]
[112.28328705 281.97952271]
[112.01555634 296.97714233]
[111.74781799 311.97473145]
[111.48008728 326.97235107]
[120.77690125 342.85000610]
[111.19097137 357.53311157]
[111.19097137 372.53311157]
[111.19097137 387.53311157]
[114.32851410 396.14703369]
[111.05470276 402.80026245]
[110.78697205 417.79788208]
[110.51923370 432.79547119]
[110.25150299 447.79309082]
[109.98376465 462.79071045]
[118.00388336 470.19839478]
[120.55283356 480.58801270]
[117.01981354 490.45214844]
[108.80629730 496.59704590]
[108.00343323 511.57556152]
[107.20056915 526.55407715]
[106.39770508 541.53253174]
[117.14398193 553.12103271]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 174]
[6 173]
[7 172]
[8 171]
[10 167]
[11 166]
[12 165]
[13 164]
[14 163]
[15 161]
[16 160]
[17 159]
[20 157]
[21 156]
[22 155]
[23 154]
[24 153]
[25 152]
[26 151]
[27 150]
[28 149]
[32 139]
[33 138]
[34 137]
[36 135]
[37 134]
[52 119]
[53 118]
[54 117]
[55 116]
[56 115]
[58 113]
[59 112]
[60 111]
[61 110]
[62 109]
[63 108]
[64 107]
[66 105]
[67 104]
[68 103]
[69 102]
[70 101]
[71 100]
[72 99]
[79 98]
[80 97]
[81 96]
[83 95]
[84 94]
[85 93]
[86 92]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
