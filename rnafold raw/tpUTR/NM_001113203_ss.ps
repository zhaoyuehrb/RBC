%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 15:12:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAUAUGGAAGCAACUUUUUUUGGUGUCUCAAAGGAGUAACUGCAGCUUGGUUUGAAAUUUGUACUGUUUCUAUCAUAAAUAAAGUUAUGGCUUCUUGUUGGAUGAAUUCA\
) } def
/len { sequence length } bind def

/coor [
[141.32620239 268.53594971]
[137.57955933 254.01141357]
[133.83290100 239.48684692]
[119.93352509 234.20053101]
[111.71495819 221.59420776]
[112.50457001 206.38796997]
[122.20886230 194.42414856]
[118.46221161 179.89959717]
[114.71556854 165.37504578]
[110.96891785 150.85049438]
[107.22227478 136.32594299]
[103.47562408 121.80138397]
[99.30596924 136.21020508]
[85.14478302 141.15599060]
[72.91134644 132.47595215]
[72.90237427 117.47595215]
[85.12550354 108.78128052]
[70.17858124 110.04203796]
[55.23165894 111.30279541]
[40.28473663 112.56355286]
[25.33781433 113.82431030]
[10.39089298 115.08506775]
[-4.55602980 116.34582520]
[-19.50295258 117.60659027]
[-32.64929581 127.40993500]
[-47.60339355 120.67888641]
[-48.98175049 104.33776855]
[-35.36643219 95.19692230]
[-20.76371002 102.65966797]
[-5.81678772 101.39890289]
[9.13013458 100.13814545]
[24.07705688 98.87738800]
[39.02397919 97.61663055]
[53.97090149 96.35587311]
[68.91782379 95.09511566]
[83.86474609 93.83435822]
[95.97521973 84.98357391]
[101.71547699 71.12538147]
[107.45572662 57.26718903]
[113.19597626 43.40899658]
[118.93622589 29.55080414]
[124.67648315 15.69261074]
[113.27149963 4.45567846]
[107.03945923 -10.25070477]
[106.89881897 -26.18409157]
[112.84162140 -40.92706680]
[123.93914032 -52.25401306]
[138.48692322 -58.46709061]
[154.26649475 -58.65069199]
[159.61581421 -72.66442108]
[164.96513367 -86.67816162]
[170.31445312 -100.69189453]
[165.75350952 -112.85699463]
[170.60549927 -124.47365570]
[181.72929382 -129.45074463]
[187.46954346 -143.30894470]
[193.20979309 -157.16712952]
[198.95004272 -171.02532959]
[204.69029236 -184.88351440]
[197.30966187 -198.66975403]
[200.56796265 -213.96411133]
[212.92674255 -223.54507446]
[228.55053711 -222.88879395]
[240.06230164 -212.30516052]
[242.02650452 -196.79142761]
[233.51573181 -183.67271423]
[218.54849243 -179.14326477]
[212.80824280 -165.28507996]
[207.06799316 -151.42687988]
[201.32774353 -137.56869507]
[195.58747864 -123.71049500]
[198.86730957 -106.53347778]
[184.32818604 -95.34256744]
[178.97886658 -81.32883453]
[173.62954712 -67.31510162]
[168.28022766 -53.30136871]
[178.88519287 -43.99922562]
[185.67179871 -31.59825134]
[187.79905701 -17.59232330]
[184.98866272 -3.67673182]
[177.56126404 8.45703220]
[166.39996338 17.32687569]
[152.84538269 21.84112549]
[138.53466797 21.43286324]
[132.79441833 35.29105377]
[127.05416870 49.14925003]
[121.31391907 63.00744247]
[115.57366943 76.86563110]
[109.83341980 90.72383118]
[119.50418854 100.29907227]
[118.00017548 118.05474091]
[121.74682617 132.57928467]
[125.49346924 147.10385132]
[129.24011230 161.62840271]
[132.98677063 176.15295410]
[136.73341370 190.67750549]
[151.01396179 196.45437622]
[159.06059265 209.38128662]
[157.96542358 224.39009094]
[148.35745239 235.74020386]
[152.10411072 250.26475525]
[155.85075378 264.78930664]
[170.66976929 268.82565308]
[181.47384644 279.74203491]
[185.35673523 294.60202026]
[181.27395630 309.40832520]
[170.32376099 320.17813110]
[155.45169067 324.01440430]
[140.65826416 319.88525391]
[129.92283630 308.90133667]
[126.13317871 294.01733398]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 102]
[2 101]
[3 100]
[7 96]
[8 95]
[9 94]
[10 93]
[11 92]
[12 91]
[17 36]
[18 35]
[19 34]
[20 33]
[21 32]
[22 31]
[23 30]
[24 29]
[37 89]
[38 88]
[39 87]
[40 86]
[41 85]
[42 84]
[49 76]
[50 75]
[51 74]
[52 73]
[55 71]
[56 70]
[57 69]
[58 68]
[59 67]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
