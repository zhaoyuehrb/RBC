%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 00:30:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGGCUCCCUUCAAAUGAGCAAGUAUUGAAGUUCAUGCCAUGUGCCCAGCUCCUCCUGGAUCUGUGAGGAAAUAUCUGAAACCUUCAAGAUGUUGUACAUGUCUUAUGGAAAAUGUUGCUCCAUCAUCCCUGCACUCCCUUAUCUAGUAUAUCUACCUCCAUAAGAAAACAUAAGGACAGGCAAUCUUCAUAAAAAUAGACUCCACCUAUU\
) } def
/len { sequence length } bind def

/coor [
[71.15703583 479.15698242]
[58.52300644 487.24285889]
[46.92877197 477.72583008]
[52.39712143 463.75817871]
[44.91017151 463.31597900]
[39.29790878 477.22650146]
[33.68564987 491.13699341]
[28.07338715 505.04751587]
[37.07212830 517.57855225]
[37.84475327 532.98657227]
[30.14471817 546.35491943]
[16.42908096 553.41784668]
[1.07445002 551.92156982]
[-11.01956940 542.34356689]
[-15.99381828 527.74011230]
[-12.26103210 512.77111816]
[-1.01232958 502.21319580]
[14.16286945 499.43527222]
[19.77512932 485.52474976]
[25.38739014 471.61422729]
[30.99965096 457.70370483]
[21.70355988 444.69833374]
[17.33370018 429.76602173]
[18.10984039 414.65481567]
[23.66551590 401.04107666]
[33.11944199 390.34341431]
[45.20234680 383.57543945]
[58.42195129 381.25234985]
[59.74765396 366.31103516]
[61.07335663 351.36975098]
[62.39905548 336.42843628]
[63.72475815 321.48715210]
[54.68100357 314.53472900]
[50.06802368 303.97088623]
[51.13755798 292.37310791]
[57.73912811 282.63259888]
[68.32886505 277.23345947]
[70.09467316 262.33773804]
[71.86048126 247.44204712]
[73.62628174 232.54635620]
[71.29244995 225.53507996]
[75.52955627 217.44458008]
[77.51486206 202.57653809]
[79.50017548 187.70849609]
[77.26999664 180.66355896]
[81.62596893 172.63644409]
[83.83034515 157.79930115]
[66.86832428 150.95602417]
[52.55747986 139.19946289]
[42.29970169 123.50306702]
[37.15239334 105.23306274]
[37.72085190 86.02995300]
[23.16285324 82.41543579]
[8.60485649 78.80091858]
[-5.95314026 75.18640137]
[-20.51113701 71.57189178]
[-35.09539413 68.06483459]
[-47.49082184 77.59832001]
[-63.11199570 76.88211823]
[-74.58307648 66.25440216]
[-76.48776245 50.73324585]
[-67.92672729 37.64727402]
[-52.94223022 33.17527390]
[-38.60948563 39.42879486]
[-31.69598389 53.45510864]
[-24.46991920 51.90953827]
[-16.89662170 57.01389313]
[-2.33862448 60.62840652]
[12.21937275 64.24291992]
[26.77736855 67.85743713]
[41.33536530 71.47195435]
[49.40263367 58.82603836]
[39.98863983 47.14799118]
[30.57464790 35.46994781]
[21.16065598 23.79190254]
[11.74666405 12.11385632]
[2.33267093 0.43581125]
[-7.08132172 -11.24223423]
[-16.58117867 -22.85053825]
[-26.16638374 -34.38846970]
[-35.75158691 -45.92639923]
[-50.52382660 -54.24609375]
[-46.61863327 -70.74414825]
[-29.68426323 -71.55868530]
[-24.21365738 -55.51160431]
[-14.62845230 -43.97367477]
[-5.04324770 -32.43574142]
[1.64790356 -29.29993629]
[4.59672403 -20.65622711]
[14.01071644 -8.97818089]
[23.42470932 2.69986415]
[32.83870316 14.37790966]
[42.25269318 26.05595398]
[51.66668701 37.73400116]
[61.08068085 49.41204453]
[70.50089264 43.93649673]
[80.64188385 40.17952728]
[91.19567108 38.22561264]
[101.84671783 38.10493088]
[112.28132629 39.79326630]
[122.19692230 43.21352768]
[131.31079102 48.23881912]
[139.36813354 54.69694519]
[150.54486084 44.69291306]
[161.72158813 34.68888092]
[172.89833069 24.68484688]
[184.07505798 14.68081284]
[195.25178528 4.67678022]
[206.42851257 -5.32725286]
[217.60525513 -15.33128548]
[228.78198242 -25.33531952]
[223.93734741 -34.83084869]
[222.35932922 -45.85943604]
[224.52043152 -57.27894974]
[230.48982239 -67.80838776]
[239.89573669 -76.17079163]
[251.93833923 -81.24487305]
[265.45443726 -82.20769501]
[273.79946899 -94.67205811]
[282.14453125 -107.13641357]
[274.35748291 -120.26366425]
[273.04586792 -135.47032166]
[278.47006226 -149.73709106]
[289.55313110 -160.23129272]
[304.09451294 -164.86930847]
[319.20700073 -162.73023987]
[331.88998413 -154.23881531]
[339.62527466 -141.08099365]
[340.87701416 -125.86929321]
[335.39666748 -111.62399292]
[324.27236938 -101.17351532]
[309.71282959 -96.59280396]
[294.60888672 -98.79136658]
[286.26385498 -86.32701111]
[277.91879272 -73.86264801]
[282.27331543 -67.75624847]
[294.48611450 -76.46529388]
[306.69891357 -85.17433929]
[318.91171265 -93.88337708]
[331.12466431 -102.59223175]
[339.83334351 -90.37916565]
[327.62075806 -81.67057800]
[315.40795898 -72.96153259]
[303.19515991 -64.25248718]
[290.98236084 -55.54344559]
[295.33688354 -49.43704605]
[309.83999634 -53.26588058]
[324.34307861 -57.09471512]
[333.62588501 -70.17941284]
[349.65106201 -70.93611908]
[360.12551880 -58.78435135]
[357.01412964 -43.04590607]
[342.70367432 -35.79396820]
[328.17193604 -42.59160995]
[313.66882324 -38.76277542]
[299.16571045 -34.93394089]
[283.82235718 -12.15700054]
[259.70690918 -5.08030033]
[238.78601074 -14.15858746]
[227.60928345 -4.15455437]
[216.43255615 5.84947872]
[205.25581360 15.85351181]
[194.07908630 25.85754395]
[182.90235901 35.86157608]
[171.72563171 45.86561203]
[160.54888916 55.86964417]
[149.37216187 65.87368011]
[156.15841675 78.82337189]
[159.61233521 93.02964020]
[159.52899170 107.64952087]
[155.91333008 121.81549072]
[148.97988892 134.68698120]
[139.14009094 145.50021362]
[126.97780609 153.61357117]
[113.21471405 158.54560852]
[98.66748810 160.00367737]
[96.46311188 174.84082031]
[94.36820984 189.69380188]
[92.38290405 204.56184387]
[90.39759827 219.42988586]
[88.52198792 234.31216431]
[86.75617981 249.20785522]
[84.99037170 264.10354614]
[83.22456360 278.99926758]
[95.50975800 293.42260742]
[93.38590240 311.92788696]
[78.66606140 322.81283569]
[77.34035492 337.75415039]
[76.01465607 352.69543457]
[74.68895721 367.63674927]
[73.36325073 382.57806396]
[90.19810486 389.90975952]
[102.55970764 404.56787109]
[107.33969879 423.97555542]
[102.85438538 444.28701782]
[89.33245087 461.14916992]
[93.26813507 475.62365723]
[97.20381927 490.09811401]
[101.13950348 504.57260132]
[105.07518768 519.04705811]
[119.34683228 525.43878174]
[126.12447357 539.53125000]
[122.20791626 554.67041016]
[109.44643402 563.70806885]
[93.86561584 562.37683105]
[82.82225037 551.30535889]
[81.53066254 535.72119141]
[90.60071564 522.98272705]
[86.66503143 508.50827026]
[82.72934723 494.03381348]
[78.79366302 479.55932617]
[74.85797882 465.08486938]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 21]
[6 20]
[7 19]
[8 18]
[28 191]
[29 190]
[30 189]
[31 188]
[32 187]
[37 184]
[38 183]
[39 182]
[40 181]
[42 180]
[43 179]
[44 178]
[46 177]
[47 176]
[52 71]
[53 70]
[54 69]
[55 68]
[56 67]
[57 65]
[72 95]
[73 94]
[74 93]
[75 92]
[76 91]
[77 90]
[78 89]
[79 87]
[80 86]
[81 85]
[103 167]
[104 166]
[105 165]
[106 164]
[107 163]
[108 162]
[109 161]
[110 160]
[111 159]
[118 135]
[119 134]
[120 133]
[146 156]
[147 155]
[148 154]
[196 212]
[197 211]
[198 210]
[199 209]
[200 208]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
