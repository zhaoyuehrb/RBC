%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 01:21:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGGAGCCUCGGUGGCCAUGCUUCUUGCCCCUUGGGCCUCCCCCCAGCCCCUCCUCCCCUUCCUGCACCCGUACCCCCGUGGUCUUUGAAUAAAGUCUGAGUGGGCGGCA\
) } def
/len { sequence length } bind def

/coor [
[60.18522263 143.76022339]
[50.40788651 143.23373413]
[41.58160400 139.13166809]
[34.95554352 132.08259583]
[20.54178238 136.23512268]
[6.12802219 140.38764954]
[-8.28573799 144.54019165]
[-22.63984299 148.89445496]
[-36.93146896 153.44961548]
[-51.22309494 158.00476074]
[-63.21161270 171.89352417]
[-80.17770386 167.65574646]
[-94.33596039 172.60992432]
[-101.52624512 178.47966003]
[-108.96132660 177.49844360]
[-123.25295258 182.05358887]
[-137.54458618 186.60874939]
[-140.74366760 201.63076782]
[-151.03709412 213.02993774]
[-165.65597534 217.73992920]
[-180.66790771 214.49375916]
[-192.03474426 204.16465759]
[-196.69888306 189.53109741]
[-193.40568542 174.52940369]
[-183.04100037 163.19499207]
[-168.39288330 158.57675171]
[-153.40161133 161.91696167]
[-142.09973145 172.31712341]
[-127.80810547 167.76196289]
[-113.51647949 163.20681763]
[-99.29014587 158.45167542]
[-85.13188934 153.49749756]
[-79.53891754 142.67027283]
[-67.66847992 138.47726440]
[-55.77824783 143.71313477]
[-41.48662186 139.15798950]
[-27.19499397 134.60282898]
[-21.69903564 129.50012207]
[-12.43827057 130.12643433]
[1.97548950 125.97389984]
[16.38924980 121.82136536]
[30.80300903 117.66883087]
[38.89173889 99.03655243]
[58.26619720 92.04320526]
[76.90040588 101.47152710]
[90.75859833 95.73127747]
[96.50556946 89.90149689]
[105.08686066 90.03040314]
[119.10059357 84.68108368]
[133.11433411 79.33175659]
[147.12806702 73.98243713]
[161.06539917 68.43710327]
[174.92359924 62.69684982]
[188.78178406 56.95660019]
[188.48991394 40.21416092]
[194.58053589 24.65517426]
[206.11061096 12.61271763]
[221.32374573 5.88122654]
[237.91761780 5.44913578]
[253.39250183 11.35383701]
[265.42773438 22.68021393]
[278.94226074 16.17195702]
[292.45681763 9.66370106]
[293.70217896 -5.58084774]
[302.35372925 -18.07274437]
[316.00564575 -24.51415062]
[330.94879150 -23.26570320]
[343.17828369 -14.76248169]
[356.69284058 -21.27073860]
[370.20736694 -27.77899361]
[383.62930298 -34.47614288]
[396.95596313 -41.36087418]
[401.51596069 -56.49302292]
[415.47973633 -63.89495087]
[430.56283569 -59.17522812]
[437.81671143 -45.13397598]
[432.93780518 -30.10162354]
[418.82061768 -22.99659920]
[403.84069824 -28.03418732]
[390.51400757 -21.14945984]
[385.95043945 -15.19823456]
[376.71560669 -14.26446056]
[363.20108032 -7.75620461]
[349.68655396 -1.24794853]
[348.70965576 13.61513615]
[340.36883545 26.07654572]
[326.82092285 32.73388672]
[311.66021729 31.70937157]
[298.96505737 23.17823410]
[285.45053101 29.68648911]
[271.93600464 36.19474792]
[273.52551270 49.50799179]
[270.89154053 62.67792892]
[264.28125000 74.39571381]
[254.33778381 83.49230194]
[242.03756714 89.05505371]
[228.59449768 90.51931763]
[215.34017944 87.72568512]
[203.59196472 80.93722534]
[194.52203369 70.81478882]
[180.66384888 76.55504608]
[166.80564880 82.29529572]
[161.75802612 87.84188843]
[152.47738647 87.99617004]
[138.46365356 93.34548950]
[124.44992065 98.69481659]
[110.43618774 104.04413605]
[96.49884796 109.58946991]
[82.64065552 115.32971954]
[81.64419556 125.30577850]
[77.03438568 134.14285278]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 42]
[5 41]
[6 40]
[7 39]
[8 37]
[9 36]
[10 35]
[12 32]
[13 31]
[15 30]
[16 29]
[17 28]
[45 109]
[46 108]
[48 107]
[49 106]
[50 105]
[51 104]
[52 102]
[53 101]
[54 100]
[61 91]
[62 90]
[63 89]
[68 84]
[69 83]
[70 82]
[71 80]
[72 79]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
