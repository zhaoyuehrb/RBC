%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 15:40:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGAAGUCCUGGCUGCAGACACCUGCUUCUGAUUCCACAAGGGGCUUUUUCCUCAACCCUGUGGCCGCCUUUGAAGUGACUCAUUUUUUUAAUGUAUUUAUGUAUUUAUUUGAUUGUUUUAUAUAAGAUGGUUUCUUACCUUUGAGCACAAAAUUUCCACGGUGAAAUAAAGUCAACAUUAUAAGCUUUA\
) } def
/len { sequence length } bind def

/coor [
[75.36761475 225.94577026]
[65.10192871 215.00952148]
[61.93525696 229.67144775]
[58.76858139 244.33337402]
[64.29754639 259.77236938]
[53.48653793 272.10339355]
[37.45699692 268.64135742]
[32.69873810 252.94767761]
[44.10665512 241.16670227]
[47.27332687 226.50477600]
[50.43999863 211.84284973]
[53.00442886 197.06367493]
[54.96232224 182.19200134]
[56.92021561 167.32032776]
[58.87810898 152.44865417]
[45.16495895 146.37004089]
[35.46061707 157.80795288]
[25.75627708 169.24584961]
[16.05193329 180.68376160]
[13.65015316 196.90608215]
[-1.69710982 202.68479919]
[-14.20190620 192.07527161]
[-11.00037289 175.99166870]
[4.61402607 170.97941589]
[14.31836796 159.54151917]
[24.02271080 148.10360718]
[33.72705460 136.66569519]
[30.85692787 129.73660278]
[16.99873352 135.47685242]
[3.14054108 141.21710205]
[-10.71774769 146.95712280]
[-16.45753860 133.09873962]
[-2.59971046 127.35890961]
[11.25848293 121.61865997]
[25.11667633 115.87841034]
[22.24654961 108.94931030]
[7.29672098 107.72349548]
[-7.65310764 106.49768066]
[-22.60293579 105.27186584]
[-37.55276489 104.04605103]
[-46.37778091 106.46641541]
[-52.73650360 102.67591095]
[-67.66427612 101.20565033]
[-82.59204865 99.73539734]
[-90.08331299 112.99438477]
[-102.32369995 122.05488586]
[-117.19249725 125.34711456]
[-132.11358643 122.30066681]
[-144.50181580 113.44335938]
[-152.21083069 100.30977631]
[-153.90499878 85.17539215]
[-149.29080200 70.66232300]
[-139.16769409 59.28505325]
[-125.28952789 53.01476288]
[-110.06080627 52.93781281]
[-96.11998749 59.06753922]
[-85.88240814 70.34192657]
[-81.12178802 84.80762482]
[-66.19401550 86.27787781]
[-51.26624680 87.74813843]
[-36.32695007 89.09622192]
[-21.37711906 90.32203674]
[-6.42729139 91.54785156]
[8.52253723 92.77366638]
[23.47236633 93.99948120]
[27.58798599 87.72958374]
[15.04818058 79.49834442]
[2.50837588 71.26710510]
[-10.03130150 63.03567123]
[-1.79967511 50.49612045]
[10.73961449 58.72729874]
[23.27941895 66.95853424]
[35.81922531 75.18977356]
[39.93484497 68.91987610]
[32.86389160 55.69105530]
[25.79294205 42.46223831]
[18.72199059 29.23341751]
[11.65104008 16.00459862]
[4.58008862 2.77577972]
[-8.21882248 -8.34286308]
[-1.07779109 -23.71953392]
[15.67478752 -21.11426353]
[17.80890846 -4.29517126]
[24.87985802 8.93364716]
[31.95080948 22.16246605]
[39.02175903 35.39128494]
[46.09271240 48.62010574]
[53.16366196 61.84892273]
[88.64569855 48.48560715]
[119.75029755 59.46170425]
[133.75573730 83.81291962]
[148.30619812 80.16821289]
[162.85667419 76.52351379]
[177.40715027 72.87880707]
[191.95761108 69.23410797]
[206.50808716 65.58940887]
[195.24159241 55.68655777]
[195.79162598 40.69664764]
[207.75358582 31.64613724]
[222.32832336 35.19251633]
[228.79479980 48.72709656]
[222.39669800 62.29360962]
[237.19635010 59.85017395]
[246.40609741 47.28760147]
[261.44985962 45.02043915]
[273.36959839 53.87794876]
[288.16925049 51.43451691]
[302.96890259 48.99108505]
[317.76855469 46.54765320]
[332.56817627 44.10422134]
[347.36782837 41.66078949]
[362.16748047 39.21735764]
[374.52297974 29.33541489]
[388.34060669 34.89615631]
[403.14025879 32.45272446]
[417.93991089 30.00929070]
[432.73956299 27.56585884]
[447.53921509 25.12242699]
[449.10604858 9.69974995]
[455.98132324 -4.64710712]
[467.59957886 -16.10310555]
[482.78036499 -23.11892891]
[499.84564209 -24.61669731]
[516.80444336 -20.14612198]
[531.58544922 -9.96936321]
[545.44360352 -15.70961380]
[559.30181885 -21.44986534]
[573.16003418 -27.19011688]
[587.01818848 -32.93037033]
[594.46130371 -47.14231873]
[610.24005127 -50.04245758]
[622.25030518 -39.40605164]
[621.27886963 -23.39243889]
[608.07092285 -14.28589249]
[592.75842285 -19.07217598]
[578.90026855 -13.33192444]
[565.04205322 -7.59167290]
[551.18389893 -1.85142124]
[537.32568359 3.88883018]
[538.36541748 11.31640911]
[540.44494629 26.17156601]
[541.48468018 33.59914398]
[556.38635254 35.31344986]
[571.28808594 37.02775574]
[586.18981934 38.74205780]
[601.01251221 31.72643089]
[614.34387207 41.27672958]
[612.46966553 57.56842804]
[597.31793213 63.84202194]
[584.47552490 53.64377594]
[569.57379150 51.92947006]
[554.67205811 50.21516800]
[539.77038574 48.50086212]
[528.61047363 62.09027100]
[513.91479492 70.99964142]
[497.48571777 74.44466400]
[481.24026489 72.29272461]
[466.98675537 65.04928589]
[456.22366333 53.77148819]
[449.98263550 39.92207718]
[435.18301392 42.36550903]
[420.38336182 44.80894089]
[405.58370972 47.25237274]
[390.78405762 49.69580460]
[379.48715210 59.40297699]
[364.61093140 54.01700592]
[349.81127930 56.46043777]
[335.01162720 58.90386963]
[320.21197510 61.34730148]
[305.41232300 63.79073334]
[290.61267090 66.23416901]
[275.81301880 68.67759705]
[267.37301636 80.89651489]
[252.39888000 83.58532715]
[239.63978577 74.64982605]
[224.84013367 77.09325409]
[210.15278625 80.13987732]
[195.60231018 83.78457642]
[181.05184937 87.42927551]
[166.50137329 91.07398224]
[151.95091248 94.71868134]
[137.40043640 98.36338806]
[136.05348206 127.08457184]
[112.46139526 151.25784302]
[73.74977875 154.40655518]
[71.79188538 169.27822876]
[69.83399200 184.14990234]
[67.87609863 199.02157593]
[81.22653198 192.18299866]
[94.96526337 198.20358276]
[98.98618317 212.65460205]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 11]
[3 10]
[4 9]
[12 188]
[13 187]
[14 186]
[15 185]
[16 27]
[17 26]
[18 25]
[19 24]
[36 65]
[37 64]
[38 63]
[39 62]
[40 61]
[42 60]
[43 59]
[44 58]
[74 88]
[75 87]
[76 86]
[77 85]
[78 84]
[79 83]
[91 182]
[92 181]
[93 180]
[94 179]
[95 178]
[96 177]
[102 176]
[103 175]
[106 172]
[107 171]
[108 170]
[109 169]
[110 168]
[111 167]
[112 166]
[114 164]
[115 163]
[116 162]
[117 161]
[118 160]
[125 139]
[126 138]
[127 137]
[128 136]
[129 135]
[142 153]
[143 152]
[144 151]
[145 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
