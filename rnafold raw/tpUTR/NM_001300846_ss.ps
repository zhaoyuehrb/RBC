%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 06:24:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACAUGACCCCCCUUCCUGUACCCGAAGUCCAGACUCCCAGGGGAAUCAGCAGCCAGGACAGACAUCCUAGCAGCCGCCUCCCAGCCCUGCCUAGGAACCGUACAUCCCAUCUGCUCUCUGGCCAACGGCUUCACACCUUCCCCUGCUGCAUGUGGGGGCCGAUGGGCAGGGGACCUCGGUGGAAAUAAAAUGUAUCUAUCACAUCCGCA\
) } def
/len { sequence length } bind def

/coor [
[148.74748230 339.49987793]
[146.42057800 331.81408691]
[145.29286194 323.85925293]
[145.39193726 315.82135010]
[146.71675110 307.88861084]
[149.23753357 300.24694824]
[152.89643860 293.07562256]
[157.60894775 286.54309082]
[163.26574707 280.80303955]
[169.73530579 275.99069214]
[163.66146851 262.27542114]
[157.58763123 248.56015015]
[151.51379395 234.84489441]
[145.43995667 221.12962341]
[133.21179199 212.62542725]
[134.69841003 196.87422180]
[128.62457275 183.15895081]
[122.55074310 169.44369507]
[116.47690582 155.72842407]
[110.40307617 142.01315308]
[89.64971161 142.02619934]
[71.27600861 132.37686157]
[59.50631714 115.28369141]
[57.04664612 94.67658997]
[64.46249390 75.29341888]
[53.81648636 64.72637177]
[43.17047882 54.15932083]
[32.52447128 43.59227371]
[21.87846184 33.02522659]
[11.23245239 22.45817757]
[-0.87546974 27.74965668]
[-14.02914715 28.60951996]
[-26.66154099 24.95707893]
[-37.27510071 17.24791718]
[-44.61930084 6.41718435]
[-47.83794785 -6.23380518]
[-46.56898117 -19.19390678]
[-40.98503876 -30.92264938]
[-51.31170654 -41.80198288]
[-61.63837433 -52.68131638]
[-71.96504211 -63.56064987]
[-82.29170990 -74.43998718]
[-92.61837769 -85.31932068]
[-95.61286163 -70.62125397]
[-108.90113831 -63.66267776]
[-122.68757629 -69.57318115]
[-126.80933380 -83.99577332]
[-118.22800446 -96.29865265]
[-103.27095795 -97.41318512]
[-112.75985718 -109.03044891]
[-122.24875641 -120.64771271]
[-131.73765564 -132.26496887]
[-141.22654724 -143.88223267]
[-156.61352539 -143.14241028]
[-169.33700562 -151.50700378]
[-174.63276672 -165.59312439]
[-170.66604614 -179.92501831]
[-180.15493774 -191.54228210]
[-189.64384460 -203.15954590]
[-205.03080750 -202.41972351]
[-217.75428772 -210.78431702]
[-223.05004883 -224.87043762]
[-219.08332825 -239.20233154]
[-228.57223511 -250.81959534]
[-247.72531128 -257.10623169]
[-249.99903870 -276.30822754]
[-259.82962036 -287.63781738]
[-269.66021729 -298.96743774]
[-279.49078369 -310.29702759]
[-289.32135010 -321.62661743]
[-299.15194702 -332.95620728]
[-309.06658936 -344.21231079]
[-319.06475830 -355.39428711]
[-329.06292725 -366.57626343]
[-341.87387085 -368.07394409]
[-349.97116089 -377.59326172]
[-349.42944336 -389.67767334]
[-359.26000977 -401.00726318]
[-375.04052734 -401.87390137]
[-385.52383423 -413.70080566]
[-384.49038696 -429.47128296]
[-372.55331421 -439.82897949]
[-356.79467773 -438.62884521]
[-346.56375122 -426.58291626]
[-347.93041992 -410.83782959]
[-338.09985352 -399.50823975]
[-321.22756958 -394.68191528]
[-317.88095093 -376.57443237]
[-307.88278198 -365.39245605]
[-297.88461304 -354.21047974]
[-291.08285522 -351.31948853]
[-287.82235718 -342.78677368]
[-277.99176025 -331.45718384]
[-268.16119385 -320.12759399]
[-258.33059692 -308.79800415]
[-248.50003052 -297.46841431]
[-238.66944885 -286.13882446]
[-228.45309448 -286.33648682]
[-219.62908936 -280.76107788]
[-215.24000549 -271.04943848]
[-216.95497131 -260.30850220]
[-207.46606445 -248.69122314]
[-192.63075256 -249.71670532]
[-179.88552856 -241.71524048]
[-174.22961426 -227.57792664]
[-178.02658081 -212.64845276]
[-168.53767395 -201.03118896]
[-159.04878235 -189.41392517]
[-144.21347046 -190.43939209]
[-131.46824646 -182.43794250]
[-125.81232452 -168.30061340]
[-129.60928345 -153.37113953]
[-120.12039185 -141.75387573]
[-110.63149261 -130.13661194]
[-101.14259338 -118.51934814]
[-91.65369415 -106.90208435]
[-81.73904419 -95.64598846]
[-71.41237640 -84.76665497]
[-61.08570862 -73.88732147]
[-50.75904083 -63.00798416]
[-40.43237305 -52.12865067]
[-30.10570335 -41.24931717]
[-14.17453384 -46.87584305]
[2.66849589 -44.96638870]
[17.02931023 -35.85702515]
[25.99275970 -21.33958626]
[27.71432495 -4.30938673]
[21.79949951 11.81217003]
[32.44551086 22.37921715]
[43.09151840 32.94626617]
[53.73752594 43.51331329]
[64.38353729 54.08036041]
[75.02954102 64.64740753]
[83.37596893 60.03787994]
[92.52913666 57.36766815]
[102.04486084 56.76635742]
[111.46134186 58.26312256]
[120.32162476 61.78533173]
[128.19572449 67.16205597]
[134.70150757 74.13236237]
[139.52326965 82.35800171]
[154.07289124 78.70991516]
[168.62251282 75.06182861]
[183.17213440 71.41374207]
[197.72175598 67.76564789]
[212.27137756 64.11756134]
[226.82099915 60.46947479]
[236.26586914 47.50128555]
[252.29924011 46.94402695]
[262.62167358 59.22518158]
[259.31469727 74.92369843]
[244.91513062 81.99701691]
[230.46908569 75.01909637]
[215.91946411 78.66718292]
[201.36984253 82.31526947]
[186.82022095 85.96335602]
[172.27059937 89.61145020]
[157.72097778 93.25953674]
[143.17135620 96.90762329]
[142.49238586 108.22960663]
[138.89530945 118.98644257]
[132.62713623 128.43940735]
[124.11833954 135.93933105]
[130.19216919 149.65458679]
[136.26600647 163.36985779]
[142.33984375 177.08512878]
[148.41368103 190.80038452]
[161.07627869 200.28558350]
[159.15522766 215.05578613]
[165.22906494 228.77105713]
[171.30290222 242.48632812]
[177.37673950 256.20159912]
[183.45056152 269.91687012]
[206.46208191 268.76919556]
[227.72543335 277.53939819]
[243.18409729 294.51818848]
[249.90434265 316.43377686]
[246.63203430 339.08233643]
[234.02641296 358.13421631]
[242.80702209 370.29568481]
[251.58763123 382.45712280]
[260.36822510 394.61859131]
[269.14883423 406.78002930]
[277.92944336 418.94149780]
[292.28082275 425.60095215]
[293.45788574 440.44897461]
[302.23849487 452.61044312]
[311.01910400 464.77191162]
[325.19305420 474.07434082]
[320.17791748 490.26953125]
[303.22729492 489.93365479]
[298.85763550 473.55249023]
[290.07705688 461.39105225]
[281.29644775 449.22958374]
[267.57312012 443.44000244]
[265.76797485 427.72210693]
[256.98736572 415.56063843]
[248.20677185 403.39920044]
[239.42617798 391.23773193]
[230.64556885 379.07629395]
[221.86495972 366.91482544]
[214.53483582 370.08218384]
[206.80334473 372.09524536]
[198.85116577 372.90567017]
[190.86433411 372.49328613]
[183.02989197 370.86642456]
[175.53147888 368.06201172]
[168.54508972 364.14447021]
[162.23489380 359.20446777]
[156.74937439 353.35662842]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 173]
[11 172]
[12 171]
[13 170]
[14 169]
[16 167]
[17 166]
[18 165]
[19 164]
[20 163]
[25 133]
[26 132]
[27 131]
[28 130]
[29 129]
[30 128]
[38 122]
[39 121]
[40 120]
[41 119]
[42 118]
[43 117]
[49 116]
[50 115]
[51 114]
[52 113]
[53 112]
[57 108]
[58 107]
[59 106]
[63 102]
[64 101]
[66 97]
[67 96]
[68 95]
[69 94]
[70 93]
[71 92]
[72 90]
[73 89]
[74 88]
[77 86]
[78 85]
[141 159]
[142 158]
[143 157]
[144 156]
[145 155]
[146 154]
[147 153]
[179 201]
[180 200]
[181 199]
[182 198]
[183 197]
[184 196]
[186 194]
[187 193]
[188 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
