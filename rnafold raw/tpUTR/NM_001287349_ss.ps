%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 19:10:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCAUGGUUUUCUGAGACAGACAGCAAAGACCUUUGAGUUAAGCUGUCUUUAUAAGAAGGAUGUUCAUCAUGGUCUCCUUGGAGACCACUAAUCACAGUGGAGACCAUACCUACUUGCUUUUCCUUGGGUCACUAAGGUGGGAGAGUAGGUGCAACUUAGUCUGAUCCUUACUUAGUAGGAAAUUGGGGAUUACAUCUGUCAUUAACUUGUA\
) } def
/len { sequence length } bind def

/coor [
[20.05952644 295.73995972]
[17.63656044 280.93692017]
[15.21359539 266.13391113]
[12.79063034 251.33090210]
[5.94354582 248.27027893]
[-0.17791997 261.96435547]
[-13.87189960 255.84268188]
[-7.75062275 242.14901733]
[-14.59770679 239.08839417]
[-27.24362373 247.15567017]
[-39.88953781 255.22293091]
[-52.53545380 263.29019165]
[-65.18137360 271.35745239]
[-63.45433044 286.48291016]
[-68.44535065 300.79989624]
[-79.11392212 311.48641968]
[-93.30609131 316.46069336]
[-108.18920898 314.78662109]
[-120.81726074 306.84951782]
[-133.46318054 314.91677856]
[-146.10908508 322.98406982]
[-158.75500488 331.05133057]
[-171.40092468 339.11859131]
[-184.04684448 347.18585205]
[-196.69274902 355.25311279]
[-198.06639099 368.65100098]
[-206.77807617 378.66564941]
[-219.47874451 381.78842163]
[-231.47859192 377.09692383]
[-244.24212646 384.97680664]
[-257.00564575 392.85668945]
[-260.39968872 408.29220581]
[-273.75906372 416.73632812]
[-289.15786743 413.17926025]
[-297.46026611 399.73135376]
[-293.74057007 384.37103271]
[-280.20565796 376.21130371]
[-264.88552856 380.09317017]
[-252.12199402 372.21328735]
[-239.35847473 364.33340454]
[-236.18898010 347.81625366]
[-221.76989746 338.51953125]
[-204.76002502 342.60720825]
[-192.11410522 334.53994751]
[-179.46818542 326.47268677]
[-166.82228088 318.40539551]
[-154.17636108 310.33813477]
[-141.53044128 302.27087402]
[-128.88452148 294.20361328]
[-130.75933838 279.40661621]
[-126.00412750 265.20458984]
[-115.51126862 254.43144226]
[-101.32360077 249.26130676]
[-86.23682404 250.76998901]
[-73.24864197 258.71154785]
[-60.60272217 250.64428711]
[-47.95680618 242.57701111]
[-35.31089020 234.50975037]
[-22.66497421 226.44247437]
[19.25753593 225.28448486]
[28.32299805 213.33386230]
[37.38846207 201.38323975]
[46.45392227 189.43261719]
[55.51938248 177.48197937]
[54.18519974 165.46020508]
[61.63866425 155.42999268]
[74.32233429 153.09297180]
[83.56306458 141.27735901]
[92.80379486 129.46174622]
[77.18539429 88.11576843]
[69.78139496 75.07042694]
[62.37739563 62.02508926]
[54.97340012 48.97975540]
[47.56940079 35.93441772]
[40.16540527 22.88908005]
[32.76140594 9.84374332]
[25.35740852 -3.20159411]
[17.95341110 -16.24693108]
[10.45341110 -29.23731232]
[2.85781622 -42.17203140]
[-4.73777819 -55.10675049]
[-12.42855358 -67.98509979]
[-20.21409225 -80.80638885]
[-35.63872528 -81.09657288]
[-48.44514465 -89.69885254]
[-54.54685974 -103.86827850]
[-51.99684525 -119.08342743]
[-41.60879517 -130.48921204]
[-26.69750023 -134.44609070]
[-12.02110004 -129.69142151]
[-2.26278234 -117.74241638]
[-0.53638911 -102.41194916]
[-7.39280653 -88.59192657]
[0.39273229 -75.77063751]
[6.55040216 -71.68556213]
[8.19694042 -62.70234299]
[15.79253483 -49.76762390]
[23.38813019 -36.83290482]
[29.48488045 -32.65745163]
[30.99874687 -23.65092850]
[38.40274429 -10.60559177]
[45.80674362 2.43974519]
[53.21073914 15.48508263]
[60.61473846 28.53041840]
[68.01873779 41.57575607]
[75.42273712 54.62109375]
[82.82672882 67.66642761]
[90.23072815 80.71176910]
[105.17202759 82.03746796]
[114.75723267 70.49953461]
[124.34243774 58.96160889]
[133.92764282 47.42367554]
[143.51284790 35.88574600]
[153.09805298 24.34781456]
[162.68325806 12.80988407]
[172.26846313 1.27195346]
[175.13546753 -14.28731632]
[189.21986389 -19.13283348]
[198.80506897 -30.67076492]
[208.39027405 -42.20869446]
[207.98208618 -55.09940720]
[216.20188904 -64.51185608]
[228.23295593 -65.75954437]
[237.98728943 -77.15485382]
[247.74162292 -88.55015564]
[257.49594116 -99.94546509]
[267.25027466 -111.34076691]
[277.00460815 -122.73607635]
[279.47741699 -138.94772339]
[294.84982300 -144.65917969]
[307.30804443 -133.99499512]
[304.03613281 -117.92556763]
[288.39993286 -112.98174286]
[278.64559937 -101.58644104]
[268.89126587 -90.19113159]
[259.13693237 -78.79582214]
[249.38259888 -67.40052032]
[239.62826538 -56.00521469]
[237.34461975 -38.60478973]
[219.92820740 -32.62348938]
[210.34300232 -21.08555984]
[200.75779724 -9.54762936]
[198.57638550 5.18636990]
[183.80639648 10.85715866]
[174.22119141 22.39509010]
[164.63598633 33.93302155]
[155.05078125 45.47095108]
[145.46557617 57.00888062]
[135.88037109 68.54681396]
[126.29516602 80.08473969]
[116.70996094 91.62267303]
[118.62438202 98.87422943]
[133.12754822 95.04561615]
[136.95593262 109.54883575]
[122.45321655 113.37732697]
[124.36763000 120.62888336]
[138.39889526 125.93203735]
[152.43017578 131.23519897]
[166.46144104 136.53836060]
[180.49270630 141.84150696]
[194.52397156 147.14466858]
[202.52279663 142.15721130]
[211.78222656 141.41937256]
[220.21635437 144.97052002]
[225.98326111 151.89794922]
[227.88710022 160.56752014]
[241.67005920 166.48612976]
[255.45301819 172.40475464]
[269.23599243 178.32336426]
[282.50061035 170.27171326]
[297.96176147 171.58810425]
[309.67425537 181.76634216]
[313.13446045 196.89270020]
[307.01181030 211.15077209]
[293.66061401 219.05805969]
[278.21469116 217.57403564]
[266.61325073 207.26933289]
[263.31735229 192.10632324]
[249.53440857 186.18771362]
[235.75144958 180.26908875]
[221.96849060 174.35047913]
[201.76130676 178.55381775]
[189.22082520 161.17593384]
[175.18954468 155.87278748]
[161.15827942 150.56962585]
[147.12701416 145.26646423]
[133.09574890 139.96330261]
[119.06447601 134.66015625]
[104.61941528 138.70246887]
[95.37868500 150.51809692]
[86.13795471 162.33370972]
[83.98934174 180.62280273]
[67.47000885 186.54745483]
[58.40454483 198.49807739]
[49.33908463 210.44869995]
[40.27362061 222.39932251]
[31.20816040 234.34994507]
[27.59364510 248.90794373]
[30.01660919 263.71096802]
[32.43957520 278.51397705]
[34.86254120 293.31698608]
[49.51774979 297.58169556]
[60.86550903 307.78909302]
[66.65271759 321.91250610]
[65.73032379 337.14773560]
[58.28146362 350.46978760]
[45.78511429 359.23358154]
[30.72243881 361.69903564]
[16.08413887 357.37664795]
[4.77666092 347.12466431]
[-0.95488632 332.97854614]
[0.02749907 317.74707031]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 201]
[2 200]
[3 199]
[4 198]
[9 59]
[10 58]
[11 57]
[12 56]
[13 55]
[19 49]
[20 48]
[21 47]
[22 46]
[23 45]
[24 44]
[25 43]
[29 40]
[30 39]
[31 38]
[60 197]
[61 196]
[62 195]
[63 194]
[64 193]
[67 191]
[68 190]
[69 189]
[70 108]
[71 107]
[72 106]
[73 105]
[74 104]
[75 103]
[76 102]
[77 101]
[78 100]
[79 98]
[80 97]
[81 96]
[82 94]
[83 93]
[109 151]
[110 150]
[111 149]
[112 148]
[113 147]
[114 146]
[115 145]
[116 144]
[118 142]
[119 141]
[120 140]
[123 138]
[124 137]
[125 136]
[126 135]
[127 134]
[128 133]
[156 188]
[157 187]
[158 186]
[159 185]
[160 184]
[161 183]
[166 181]
[167 180]
[168 179]
[169 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
