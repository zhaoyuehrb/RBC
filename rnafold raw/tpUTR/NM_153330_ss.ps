%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 23:30:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCUGGCCACCCGGCCCUGCCUUCCCACCACCACCACCGUGCAUGGGGCAGCAAACACGUGGGGCCGCAGACAUAGCCUGAUGGUUAAUAAAUGUGCCAAGUGAGUUCAUGGCA\
) } def
/len { sequence length } bind def

/coor [
[78.21824646 132.76885986]
[66.04750061 114.80973816]
[65.71615601 94.41346741]
[51.78150177 88.86139679]
[42.51490402 88.57394409]
[37.54800415 82.96568298]
[23.76881027 77.03830719]
[9.98961544 71.11093140]
[-3.78957844 65.18354797]
[-13.04499626 64.64527893]
[-17.85820580 58.90457153]
[-31.47183609 52.60623550]
[-45.16950607 46.49281693]
[-58.94869995 40.56543732]
[-71.26939392 49.62897491]
[-86.37278748 51.29758453]
[-100.19168854 45.22267914]
[-109.05513000 33.12741852]
[-110.66349030 18.31935310]
[-124.44268799 12.39197540]
[-138.22187805 6.46459723]
[-152.75398254 12.07312489]
[-166.64361572 5.86563110]
[-171.90092468 -8.02307606]
[-185.68013000 -13.95045471]
[-199.45932007 -19.87783241]
[-213.23851013 -25.80521011]
[-227.01770020 -31.73258781]
[-245.18086243 -29.10508156]
[-255.20932007 -43.43676376]
[-269.14398193 -48.98883820]
[-283.07861328 -54.54090881]
[-296.76364136 -46.97426987]
[-312.10073853 -50.02517319]
[-321.84814453 -62.25307846]
[-321.40350342 -77.88433838]
[-310.97671509 -89.53835297]
[-295.49099731 -91.71244812]
[-282.25823975 -83.38008881]
[-277.52655029 -68.47556305]
[-263.59188843 -62.92348862]
[-249.65724182 -57.37141418]
[-238.33892822 -61.87085724]
[-226.63406372 -57.25402451]
[-221.09033203 -45.51178360]
[-207.31112671 -39.58440399]
[-193.53193665 -33.65702820]
[-179.75274658 -27.72964859]
[-165.97355652 -21.80227089]
[-152.27496338 -27.53673744]
[-138.21646118 -21.72182274]
[-132.29449463 -7.31459665]
[-118.51530457 -1.38721871]
[-104.73611450 4.54015923]
[-92.87945557 -4.47567606]
[-78.00296783 -6.35875845]
[-64.08936310 -0.50401413]
[-54.91416931 11.60848522]
[-53.02132034 26.78624535]
[-39.24212646 32.71362305]
[-31.75481987 32.46276855]
[-25.17350006 38.99260330]
[-11.55986881 45.29093933]
[2.13779950 51.40435791]
[15.91699314 57.33173370]
[29.69618797 63.25911331]
[43.47537994 69.18649292]
[57.33357620 74.92674255]
[71.26822662 80.47881317]
[79.48432159 70.08585358]
[91.44342804 63.17041779]
[105.66935730 61.06285095]
[120.22447205 64.46762085]
[132.97358704 73.30946350]
[141.89593506 86.68980408]
[156.23521423 82.28696442]
[170.57449341 77.88412476]
[184.91377258 73.48128510]
[199.25305176 69.07844543]
[210.02055359 56.70941162]
[226.06219482 60.11496353]
[230.87571716 75.79176331]
[219.50938416 87.61286163]
[203.65589905 83.41773224]
[189.31661987 87.82057190]
[174.97732544 92.22340393]
[160.63804626 96.62624359]
[146.29876709 101.02908325]
[143.71241760 108.06903076]
[158.40716553 111.07978821]
[173.19871521 113.57175446]
[176.66583252 128.16555786]
[164.57559204 137.04396057]
[151.68862915 129.36740112]
[138.53973389 122.14891815]
[135.95338440 129.18885803]
[144.03190613 141.82759094]
[152.11041260 154.46632385]
[160.18893433 167.10505676]
[168.26745605 179.74378967]
[182.21910095 187.20449829]
[182.55429077 202.09533691]
[198.04101562 205.24758911]
[206.69302368 218.47326660]
[203.37719727 233.92579651]
[190.06079102 242.43748474]
[174.64418030 238.95848083]
[166.27375793 225.55282593]
[169.91555786 210.17385864]
[156.54174805 203.61714172]
[155.62872314 187.82229614]
[147.55020142 175.18357849]
[139.47169495 162.54484558]
[131.39317322 149.90611267]
[123.31465149 137.26737976]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 69]
[4 68]
[6 67]
[7 66]
[8 65]
[9 64]
[11 63]
[12 62]
[13 60]
[14 59]
[19 54]
[20 53]
[21 52]
[24 49]
[25 48]
[26 47]
[27 46]
[28 45]
[30 42]
[31 41]
[32 40]
[75 88]
[76 87]
[77 86]
[78 85]
[79 84]
[96 115]
[97 114]
[98 113]
[99 112]
[100 111]
[102 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
