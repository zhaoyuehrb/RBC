%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 11:29:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGCCGCAUGGCUCUGGCCGAGGUGCCGCUGUGGCCACCGUCUGUGAAGUGGCUUUACGCUUCAGGAAGCCACGCCUGUUGAAUAAAGCUUUGGUGUGUUUGCAGAUGG\
) } def
/len { sequence length } bind def

/coor [
[-12.98138237 167.33749390]
[-26.24787712 174.33750916]
[-39.51436996 181.33750916]
[-52.78086472 188.33752441]
[-66.04735565 195.33753967]
[-79.31385040 202.33753967]
[-92.58034515 209.33755493]
[-105.84683990 216.33757019]
[-119.01202393 223.52630615]
[-132.07321167 230.90229797]
[-145.13441467 238.27828979]
[-158.19560242 245.65428162]
[-171.15013123 253.21603394]
[-183.99536133 260.96200562]
[-196.84060669 268.70794678]
[-202.07725525 283.87228394]
[-217.24574280 289.09689331]
[-230.71009827 280.37390137]
[-232.14163208 264.39483643]
[-220.44216919 253.41748047]
[-204.58656311 255.86271667]
[-191.74133301 248.11676025]
[-178.89608765 240.37078857]
[-174.73139954 234.12882996]
[-165.57159424 232.59309387]
[-152.51040649 225.21710205]
[-139.44920349 217.84109497]
[-126.38801575 210.46510315]
[-122.04676819 204.34461975]
[-112.84684753 203.07107544]
[-99.58035278 196.07106018]
[-86.31386566 189.07104492]
[-73.04737091 182.07104492]
[-59.78087616 175.07102966]
[-46.51438141 168.07101440]
[-33.24788666 161.07101440]
[-19.98139191 154.07099915]
[-6.81620789 146.88226318]
[6.24498367 139.50627136]
[19.30617523 132.13027954]
[32.36736679 124.75428772]
[45.42855835 117.37828827]
[58.48974991 110.00229645]
[71.55094147 102.62630463]
[84.61212921 95.25031281]
[91.98812103 82.18911743]
[91.55978394 67.19523621]
[91.13143921 52.20135498]
[90.70310211 37.20746994]
[90.27476501 22.21358681]
[89.84642029 7.21970463]
[78.18589020 -3.44835758]
[77.56758118 -19.24054718]
[88.35832977 -30.78763771]
[104.15617371 -31.23894501]
[115.58853149 -20.32671738]
[115.87278748 -4.52498579]
[104.84030151 6.79136372]
[105.26864624 21.78524590]
[105.69698334 36.77912903]
[106.12532806 51.77301407]
[106.55366516 66.76689911]
[106.98200989 81.76078033]
[108.38071442 66.82613373]
[118.62867737 55.87263107]
[133.43728638 53.48413086]
[146.60939026 60.66018677]
[152.63267517 74.39772797]
[148.98648071 88.94782257]
[137.19668579 98.22149658]
[122.19594574 98.33745575]
[137.09817505 100.04732513]
[152.00039673 101.75719452]
[166.90261841 103.46706390]
[181.80484009 105.17694092]
[196.70707703 106.88681030]
[214.66336060 97.94687653]
[229.84326172 109.78071594]
[244.81878662 110.63704681]
[259.79434204 111.49337769]
[271.42111206 100.78853607]
[287.20828247 101.52391815]
[297.78958130 113.26322174]
[296.88735962 129.04173279]
[285.03683472 139.49835205]
[269.26873779 138.42932129]
[258.93798828 126.46891022]
[243.96246338 125.61257935]
[228.98692322 124.75624847]
[221.86012268 132.33114624]
[211.50637817 134.70304871]
[201.37896729 130.82810974]
[194.99720764 121.78903198]
[180.09497070 120.07916260]
[165.19274902 118.36929321]
[150.29052734 116.65942383]
[135.38829041 114.94955444]
[120.48606873 113.23967743]
[111.17906189 117.98954010]
[102.06176758 117.84946442]
[95.27390289 113.97892761]
[91.98812103 108.31150055]
[78.92693329 115.68749237]
[65.86574554 123.06349182]
[52.80455017 130.43948364]
[39.74335861 137.81547546]
[26.68216896 145.19146729]
[13.62097740 152.56745911]
[0.55978620 159.94345093]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 37]
[2 36]
[3 35]
[4 34]
[5 33]
[6 32]
[7 31]
[8 30]
[9 28]
[10 27]
[11 26]
[12 25]
[13 23]
[14 22]
[15 21]
[38 109]
[39 108]
[40 107]
[41 106]
[42 105]
[43 104]
[44 103]
[45 102]
[46 63]
[47 62]
[48 61]
[49 60]
[50 59]
[51 58]
[71 98]
[72 97]
[73 96]
[74 95]
[75 94]
[76 93]
[78 89]
[79 88]
[80 87]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
