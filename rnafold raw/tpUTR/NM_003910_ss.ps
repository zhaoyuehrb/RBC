%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 10:52:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUGGCGCGCUCCACCCUGGACUCUGGACUUCGCAGGUUCCUGCCUGUCACGCCACCCCCUUCCUGGGAGCAGCGAGCAGUGCCCCAGGCCCGAGUUGGAGCACGGUCUCUAUGGGGAAGGCUUCGCUGUCUAUCAGCUGUGAUUUGUAAAAAUAAAAUCUUUAAAUCUCUCGA\
) } def
/len { sequence length } bind def

/coor [
[1.64650273 101.96121979]
[-13.29379559 100.62424469]
[-28.23409462 99.28727722]
[-43.17439270 97.95030975]
[-58.14512634 97.01379395]
[-73.13556671 96.47840881]
[-88.12601471 95.94302368]
[-103.11645508 95.40763855]
[-118.10689545 94.87225342]
[-133.10151672 94.47068024]
[-148.09913635 94.20294189]
[-163.09674072 93.93520355]
[-178.09434509 93.66747284]
[-193.09375000 93.53359985]
[-210.91867065 105.39057159]
[-228.39054871 94.43672180]
[-243.36904907 95.23958588]
[-258.34753418 96.04244995]
[-271.71380615 104.50730896]
[-284.83697510 97.46231842]
[-299.81546021 98.26518250]
[-314.79397583 99.06804657]
[-324.46789551 115.54333496]
[-341.96408081 122.83798981]
[-360.18667603 118.18825531]
[-371.86163330 103.63568115]
[-386.77569580 105.23910522]
[-401.68972778 106.84253693]
[-406.68618774 119.92650604]
[-416.78918457 129.53033447]
[-429.98336792 133.81701660]
[-443.67047119 132.00247192]
[-455.18093872 124.49823761]
[-462.29464722 112.81990051]
[-477.23495483 114.15686798]
[-492.17526245 115.49384308]
[-507.11553955 116.83081055]
[-522.05584717 118.16777802]
[-536.99615479 119.50475311]
[-550.09234619 129.37501526]
[-565.08056641 122.72032166]
[-566.54223633 106.38644409]
[-552.97369385 97.17627716]
[-538.33312988 104.56445312]
[-523.39282227 103.22748566]
[-508.45251465 101.89051056]
[-493.51220703 100.55354309]
[-478.57192993 99.21656799]
[-463.63162231 97.87960052]
[-457.20285034 83.07071686]
[-444.11328125 73.46176910]
[-427.87200928 71.74596405]
[-412.89245605 78.48457336]
[-403.29315186 91.92848206]
[-388.37911987 90.32505035]
[-373.46505737 88.72162628]
[-369.81561279 78.12227631]
[-362.42919922 69.62162781]
[-352.35137939 64.48169708]
[-341.03091431 63.48460007]
[-330.11141968 66.81375885]
[-321.19281006 74.02165222]
[-315.59683228 84.08954620]
[-300.61831665 83.28668213]
[-285.63983154 82.48381805]
[-273.34494019 74.07639313]
[-259.15042114 81.06395721]
[-244.17192078 80.26109314]
[-229.19342041 79.45822906]
[-224.38188171 71.92935944]
[-216.51672363 67.40638733]
[-207.31390381 67.02294159]
[-198.85000610 70.99295044]
[-193.09375000 78.53359985]
[-186.38317871 75.37905884]
[-177.82661438 78.66986084]
[-162.82901001 78.93759918]
[-147.83139038 79.20532990]
[-132.83378601 79.47306824]
[-126.06796265 76.43881226]
[-117.57151031 79.88181305]
[-102.58106995 80.41719818]
[-87.59062958 80.95258331]
[-72.60018921 81.48796844]
[-57.60974503 82.02335358]
[-54.77793121 79.87173462]
[-50.75297546 79.00254059]
[-46.15731049 79.96608734]
[-41.83742142 83.01000977]
[-26.89712334 84.34697723]
[-11.95682526 85.68395233]
[2.98347306 87.02091980]
[17.94525528 88.09101105]
[32.92375183 88.89387512]
[47.90225220 89.69673920]
[62.88074875 90.49960327]
[75.22705841 63.59323120]
[106.21641541 50.63401413]
[141.60519409 63.30416870]
[153.11495972 53.68516541]
[164.62472534 44.06615829]
[176.13449097 34.44715500]
[187.64425659 24.82814789]
[186.37854004 12.96844196]
[190.96220398 2.08750629]
[200.14381409 -5.14310503]
[211.55911255 -7.00934601]
[222.33917236 -3.15988207]
[234.18493652 -12.36194801]
[246.03068542 -21.56401443]
[257.87643433 -30.76608086]
[263.55737305 -46.14980698]
[279.76409912 -48.65476990]
[289.82449341 -35.70408249]
[283.38931274 -20.62029839]
[267.07852173 -18.92032242]
[255.23275757 -9.71825600]
[243.38699341 -0.51619005]
[231.54124451 8.68587589]
[230.38067627 26.93175507]
[216.02699280 38.76304626]
[197.26325989 36.33791351]
[185.75349426 45.95692062]
[174.24372864 55.57592773]
[162.73396301 65.19493103]
[151.22419739 74.81393433]
[156.08801270 89.00347900]
[171.07846069 89.53886414]
[186.06890869 90.07424927]
[201.05934143 90.60963440]
[213.73370361 80.77397919]
[229.29132080 84.69064331]
[235.79771423 99.35510254]
[228.26174927 113.51803589]
[212.46435547 116.31485748]
[200.52395630 105.60008240]
[185.53352356 105.06469727]
[170.54307556 104.52931213]
[155.55262756 103.99392700]
[152.80664062 110.97314453]
[162.14926147 122.70836639]
[147.31466675 124.93158722]
[144.56866455 131.91081238]
[155.90490723 141.73371887]
[167.24114990 151.55662537]
[178.57740784 161.37954712]
[189.91365051 171.20245361]
[204.68679810 166.75749207]
[219.51156616 171.02708435]
[229.65745544 182.64881897]
[231.88691711 197.91424561]
[225.48855591 211.95220947]
[212.50405884 220.28326416]
[197.07673645 220.24897766]
[184.12937927 211.86032104]
[177.79345703 197.79406738]
[180.09072876 182.53869629]
[168.75448608 172.71578979]
[157.41824341 162.89288330]
[146.08200073 153.06996155]
[134.74575806 143.24705505]
[124.17488861 148.01770020]
[113.17788696 150.34786987]
[102.29306793 150.27558899]
[92.02318573 147.95291138]
[82.81230164 143.63256836]
[75.02654266 137.65025330]
[68.93978119 130.40335083]
[64.72457123 122.32758331]
[62.44879913 113.87260437]
[62.07788467 105.47809601]
[47.09938812 104.67523193]
[32.12088776 103.87236786]
[17.14239120 103.06950378]
[11.03700256 105.73975372]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 92]
[2 91]
[3 90]
[4 89]
[5 85]
[6 84]
[7 83]
[8 82]
[9 81]
[10 79]
[11 78]
[12 77]
[13 76]
[14 74]
[16 69]
[17 68]
[18 67]
[20 65]
[21 64]
[22 63]
[26 56]
[27 55]
[28 54]
[34 49]
[35 48]
[36 47]
[37 46]
[38 45]
[39 44]
[93 174]
[94 173]
[95 172]
[96 171]
[99 126]
[100 125]
[101 124]
[102 123]
[103 122]
[108 119]
[109 118]
[110 117]
[111 116]
[127 139]
[128 138]
[129 137]
[130 136]
[143 161]
[144 160]
[145 159]
[146 158]
[147 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
