%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 23:22:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGGCUACCUGAGGCUGCACAGGCCAGGGCUCGGGCAUGUGGUGGCCGCCCACCAGGGGCCUUCACGUCUGCCCUUUGUGAACGGACGUCUCAGGGCUGCUGUGCCCCUUGGGUGUGGGUGGCCUCAAAGGAGGCCCUGUCCCAGCCACCCACCCCCCACUCCCAGGACUUGCGGUCUGAGCCUUUUUGGAUAAUUAAUAAAUAUUUUACACAGCA\
) } def
/len { sequence length } bind def

/coor [
[322.55438232 675.00067139]
[317.04058838 661.05084229]
[311.52679443 647.10095215]
[306.01300049 633.15112305]
[289.97363281 631.17175293]
[277.04745483 621.31597900]
[270.82095337 606.19921875]
[273.08166504 589.91259766]
[283.30621338 576.91564941]
[277.59106445 563.04711914]
[265.58813477 554.22784424]
[267.48382568 538.52062988]
[261.76864624 524.65203857]
[256.05349731 510.78347778]
[250.33831787 496.91491699]
[244.62315369 483.04635620]
[238.90798950 469.17782593]
[233.19282532 455.30926514]
[227.47766113 441.44070435]
[222.02534485 436.45632935]
[221.78175354 427.32977295]
[216.26797485 413.37991333]
[204.39399719 404.38781738]
[206.51684570 388.70968628]
[201.00305176 374.75982666]
[189.12908936 365.76773071]
[191.25193787 350.08956909]
[185.73814392 336.13973999]
[180.22436523 322.18991089]
[164.20199585 318.60815430]
[153.36436462 306.05520630]
[152.13389587 289.35015869]
[161.19323730 275.06393433]
[155.47808838 261.19537354]
[149.76292419 247.32681274]
[135.95654297 241.85691833]
[129.96299744 227.87364197]
[135.79394531 213.42933655]
[130.07878113 199.56077576]
[124.62644958 194.57643127]
[124.38286591 185.44984436]
[118.86907959 171.50000000]
[113.35528564 157.55015564]
[107.84149170 143.60031128]
[102.32770538 129.65048218]
[96.81391144 115.70063019]
[74.98460388 98.57638550]
[64.26345825 88.08557129]
[53.54232025 77.59475708]
[42.82117844 67.10395050]
[32.10003662 56.61313629]
[21.37889481 46.12232590]
[15.08691883 44.11566544]
[11.31595516 39.87153625]
[10.50476456 35.16919327]
[0.09183402 24.37239265]
[-10.32109642 13.57559395]
[-20.73402786 2.77879477]
[-31.14695740 -8.01800442]
[-41.55988693 -18.81480408]
[-52.42260361 -18.38253593]
[-61.54344940 -23.88443756]
[-66.03809357 -33.29882431]
[-64.64133453 -43.41563416]
[-74.73732758 -54.50936890]
[-82.82393646 -58.74734879]
[-84.89774323 -65.83755493]
[-94.83207703 -77.07628632]
[-107.63141632 -78.64594269]
[-115.67439270 -88.20744324]
[-115.06818390 -100.28597260]
[-124.83877563 -111.66734314]
[-134.60935974 -123.04871368]
[-144.37994385 -134.43008423]
[-154.15054321 -145.81146240]
[-169.66867065 -147.16239929]
[-179.41531372 -158.84390259]
[-178.03176880 -173.62976074]
[-187.88447571 -184.94010925]
[-197.81881714 -196.17883301]
[-213.60662842 -196.90036011]
[-224.19822693 -208.63038635]
[-223.30982971 -224.40968323]
[-211.46849060 -234.87667847]
[-195.69946289 -233.82150269]
[-185.35823059 -221.87016296]
[-186.58007812 -206.11317444]
[-176.64575195 -194.87443542]
[-169.86370850 -191.94601440]
[-166.65039062 -183.40034485]
[-151.82554626 -182.52894592]
[-141.75463867 -171.12580872]
[-142.76916504 -155.58204651]
[-132.99858093 -144.20066833]
[-123.22798920 -132.81930542]
[-113.45740509 -121.43792725]
[-103.68681335 -110.05655670]
[-86.83903503 -105.13858795]
[-83.59334564 -87.01062012]
[-73.65901184 -75.77188873]
[-63.64358902 -64.60536194]
[-53.54759979 -53.51162338]
[-34.74438095 -48.99209213]
[-30.76308823 -29.22773361]
[-20.35015869 -18.43093491]
[-9.93722820 -7.63413572]
[0.47570273 3.16266346]
[10.88863373 13.95946312]
[21.30156326 24.75626183]
[31.86970711 35.40118408]
[42.59084702 45.89199448]
[53.31198883 56.38280869]
[64.03313446 66.87361908]
[74.75427246 77.36443329]
[85.47541046 87.85523987]
[100.41886139 86.55391693]
[109.16521454 74.36780548]
[117.91156769 62.18169785]
[126.65792847 49.99559021]
[127.48112488 28.57927895]
[146.64028931 20.89888763]
[154.84930420 8.34451675]
[163.05830383 -4.20985365]
[171.26730347 -16.76422501]
[179.47631836 -29.31859398]
[187.68531799 -41.87296677]
[188.05419922 -58.26796341]
[202.56515503 -65.90761566]
[216.29055786 -56.93290329]
[215.11088562 -40.57624054]
[200.23970032 -33.66395950]
[192.03068542 -21.10958862]
[183.82168579 -8.55521870]
[175.61267090 3.99915242]
[167.40367126 16.55352211]
[159.19465637 29.10789299]
[162.40226746 37.37866211]
[161.43209839 46.33476639]
[156.37586975 53.95606995]
[148.26103210 58.46532822]
[138.84403992 58.74194717]
[130.09768677 70.92805481]
[121.35132599 83.11416626]
[112.60496521 95.30027008]
[110.76375580 110.18684387]
[116.27754974 124.13668060]
[121.79133606 138.08653259]
[127.30513000 152.03637695]
[132.81892395 165.98620605]
[138.33270264 179.93605042]
[143.94732666 193.84562683]
[149.66249084 207.71417236]
[163.97712708 213.85659790]
[169.57554626 228.00270081]
[163.63146973 241.61164856]
[169.34663391 255.48020935]
[175.06179810 269.34875488]
[188.66047668 271.58410645]
[199.29524231 280.17776489]
[204.25637817 292.80267334]
[202.34799194 306.12313843]
[194.17419434 316.67611694]
[199.68798828 330.62594604]
[205.20178223 344.57580566]
[217.47013855 354.56567383]
[214.95289612 369.24603271]
[220.46669006 383.19589233]
[232.73504639 393.18576050]
[230.21780396 407.86611938]
[235.73159790 421.81597900]
[241.34622192 435.72552490]
[247.06138611 449.59408569]
[252.77655029 463.46264648]
[258.49172974 477.33120728]
[264.20687866 491.19976807]
[269.92202759 505.06832886]
[275.63720703 518.93688965]
[281.35235596 532.80541992]
[293.76406860 542.61669922]
[291.45962524 557.33190918]
[297.17477417 571.20050049]
[311.11468506 572.32879639]
[323.15158081 579.31890869]
[330.96575928 590.75787354]
[333.07980347 604.38183594]
[329.13760376 617.52423096]
[319.96286011 627.63732910]
[325.47665405 641.58721924]
[330.99044800 655.53704834]
[336.50424194 669.48687744]
[351.37182617 667.08514404]
[366.40811157 667.93615723]
[380.90982056 672.00006104]
[394.19863892 679.08673096]
[405.65304565 688.86480713]
[414.73727417 700.87689209]
[421.02648926 714.56121826]
[424.22650146 729.27764893]
[424.18762207 744.33795166]
[420.91171265 759.03771973]
[414.55197144 772.68939209]
[405.40585327 784.65441895]
[393.90115356 794.37322998]
[380.57592773 801.39129639]
[366.05346680 805.38024902]
[351.01300049 806.15362549]
[336.15795898 803.67523193]
[322.18319702 798.06097412]
[309.74230957 789.57342529]
[299.41720581 778.60955811]
[291.69076538 765.68225098]
[286.92440796 751.39599609]
[285.34103394 736.41912842]
[287.01470947 721.45208740]
[291.86718750 707.19488525]
[299.67144775 694.31439209]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 190]
[2 189]
[3 188]
[4 187]
[9 181]
[10 180]
[12 178]
[13 177]
[14 176]
[15 175]
[16 174]
[17 173]
[18 172]
[19 171]
[21 170]
[22 169]
[24 167]
[25 166]
[27 164]
[28 163]
[29 162]
[33 157]
[34 156]
[35 155]
[38 152]
[39 151]
[41 150]
[42 149]
[43 148]
[44 147]
[45 146]
[46 145]
[47 115]
[48 114]
[49 113]
[50 112]
[51 111]
[52 110]
[55 109]
[56 108]
[57 107]
[58 106]
[59 105]
[60 104]
[64 102]
[65 101]
[67 100]
[68 99]
[71 97]
[72 96]
[73 95]
[74 94]
[75 93]
[78 90]
[79 88]
[80 87]
[116 144]
[117 143]
[118 142]
[119 141]
[121 136]
[122 135]
[123 134]
[124 133]
[125 132]
[126 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
