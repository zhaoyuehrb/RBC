%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 15:53:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAUGGAAUUAUUACAACAUAUUAUUAAAGUUUAAGGAUGUUGUUUCAAGUGACUGGUAUAAAAUUACUAGUAAGCCAAGAUAUUGUACGUAUUACCCCGGCACAAUGAUUGUGAAAGAACUGACAUUUAACUUUGAAGGUAUUUUUAACUUGUACAUUUUUAAAAUAUGUAUUUAUAUCUUAAUAAUAAAUAUUUCGAAGUUUUGAACGUUU\
) } def
/len { sequence length } bind def

/coor [
[88.79444122 203.58354187]
[91.26643372 184.36013794]
[91.48561096 169.36174011]
[91.70478058 154.36334229]
[91.92395782 139.36494446]
[92.14312744 124.36654663]
[85.37570953 121.13359070]
[78.90979767 134.66844177]
[72.44389343 148.20327759]
[65.97777557 161.73803711]
[52.44312668 155.27169800]
[58.90904617 141.73738098]
[65.37495422 128.20252991]
[71.84085846 114.66768646]
[65.07344055 111.43473053]
[53.54373169 121.02983093]
[42.01402283 130.62492371]
[30.48431778 140.22001648]
[18.95461082 149.81510925]
[7.42490292 159.41020203]
[-4.10480452 169.00531006]
[-10.07199955 186.42729187]
[-27.47130966 188.72424316]
[-38.85958862 198.48678589]
[-50.24786377 208.24932861]
[-48.86797333 223.70492554]
[-56.86505890 237.00253296]
[-71.16408539 243.02893066]
[-86.26677704 239.46687317]
[-96.36584473 227.68601990]
[-97.57798767 212.21635437]
[-89.43711853 199.00628662]
[-75.07356262 193.13536072]
[-60.01040268 196.86105347]
[-48.62212372 187.09851074]
[-37.23384857 177.33596802]
[-35.99518585 165.30491638]
[-26.58996964 157.07829285]
[-13.69989967 157.47560120]
[-2.17019248 147.88050842]
[9.35951424 138.28540039]
[20.88922119 128.69030762]
[32.41893005 119.09521484]
[43.94863510 109.50012207]
[55.47834396 99.90502167]
[54.00844955 92.55047607]
[40.92761612 99.89157867]
[29.90373802 89.71936035]
[36.17169952 76.09171295]
[51.06866074 77.84137726]
[49.59876633 70.48682404]
[35.26671219 66.06050873]
[17.41091156 70.56643677]
[5.99193764 57.23905563]
[-8.40326023 53.02262878]
[-22.79845810 48.80620193]
[-37.19365692 44.58977127]
[-51.58885574 40.37334442]
[-65.98405457 36.15691757]
[-80.37924957 31.94048691]
[-94.12330627 39.74282837]
[-109.33648682 35.46092224]
[-116.99308014 21.63514709]
[-112.55056763 6.46808910]
[-98.64461517 -1.04190421]
[-83.52537537 3.56071281]
[-76.16282654 17.54528999]
[-61.76762390 21.76171684]
[-47.37242889 25.97814560]
[-32.97723007 30.19457436]
[-18.58203125 34.41100311]
[-4.18683243 38.62742996]
[10.20836544 42.84385681]
[20.96636391 37.31700134]
[32.99237442 40.70969772]
[39.69302750 51.72845840]
[54.02507782 56.15476990]
[106.30999756 52.77994156]
[127.92319489 84.88996124]
[137.43380737 73.29045868]
[146.94441223 61.69095612]
[156.45500183 50.09145737]
[165.96560669 38.49195480]
[175.47621155 26.89245605]
[184.98681641 15.29295444]
[187.55712891 -2.94235420]
[204.20976257 -8.48327446]
[213.54986572 -20.22050285]
[222.88995361 -31.95772934]
[232.23005676 -43.69495773]
[241.57015991 -55.43218231]
[250.91026306 -67.16941071]
[260.25036621 -78.90663910]
[269.59048462 -90.64386749]
[278.93057251 -102.38108826]
[267.42700195 -117.49045563]
[260.86175537 -135.43606567]
[259.88717651 -154.63890076]
[264.66043091 -173.38708496]
[274.82299805 -189.98849487]
[289.52694702 -202.92350769]
[307.50506592 -210.98399353]
[327.18008423 -213.38591003]
[327.83743286 -228.37150574]
[328.49475098 -243.35708618]
[329.15209961 -258.34268188]
[329.80941772 -273.32827759]
[324.46298218 -289.41714478]
[338.44308472 -299.00848389]
[351.52963257 -288.22988892]
[344.79501343 -272.67092896]
[344.13766479 -257.68536377]
[343.48034668 -242.69975281]
[342.82302856 -227.71417236]
[342.16567993 -212.72857666]
[356.09613037 -207.16596985]
[365.94161987 -218.48262024]
[375.78707886 -229.79927063]
[385.63256836 -241.11592102]
[395.47805786 -252.43257141]
[405.24060059 -263.82083130]
[414.91967773 -275.28015137]
[424.59872437 -286.73944092]
[423.45968628 -302.27456665]
[433.43890381 -313.75805664]
[448.25628662 -314.74819946]
[457.93536377 -326.20751953]
[454.09973145 -341.24304199]
[459.86557007 -355.64910889]
[473.01580811 -363.88629150]
[488.49389648 -362.78720093]
[500.34823608 -352.77444458]
[504.02053833 -337.69818115]
[498.09875488 -323.35552979]
[484.85992432 -315.26150513]
[469.39465332 -316.52844238]
[459.71560669 -305.06912231]
[461.21755981 -290.29486084]
[451.56484985 -278.53561401]
[436.05804443 -277.06036377]
[426.37896729 -265.60107422]
[416.69989014 -254.14176941]
[414.78579712 -247.00564575]
[406.79470825 -242.58709717]
[396.94921875 -231.27044678]
[387.10372925 -219.95379639]
[377.25827026 -208.63714600]
[367.41278076 -197.32049561]
[374.99514771 -189.34895325]
[381.14154053 -180.25958252]
[385.69143677 -170.30706787]
[388.52880859 -159.76835632]
[389.58514404 -148.93498230]
[388.84106445 -138.10501099]
[386.32666016 -127.57478333]
[382.12023926 -117.63085938]
[376.34603882 -108.54219055]
[369.17059326 -100.55287170]
[360.79782104 -93.87557220]
[351.46343994 -88.68586731]
[341.42810059 -85.11766815]
[330.97027588 -83.25974274]
[320.37844849 -83.15354156]
[309.94323730 -84.79233551]
[299.94934082 -88.12163544]
[290.66778564 -93.04099274]
[281.32769775 -81.30376434]
[271.98760986 -69.56653595]
[262.64749146 -57.82930756]
[253.30738831 -46.09208298]
[243.96728516 -34.35485458]
[234.62718201 -22.61762810]
[225.28707886 -10.88040066]
[215.94699097 0.85682684]
[217.00225830 12.90535641]
[209.31954956 22.75985718]
[196.58631897 24.80355835]
[187.07571411 36.40305710]
[177.56510925 48.00255966]
[168.05450439 59.60206223]
[158.54389954 71.20156097]
[149.03329468 82.80106354]
[139.52270508 94.40056610]
[149.24482727 82.97776031]
[162.86184692 76.68676758]
[177.86184692 76.68807983]
[191.47776794 82.98146057]
[201.19789124 94.40596008]
[205.22914124 108.85411072]
[202.82786560 123.66065979]
[194.43704224 136.09425354]
[181.60452271 143.86125183]
[166.69750977 145.52888489]
[152.46589661 140.78952026]
[141.53501892 130.51744080]
[135.92176819 116.61054230]
[141.28022766 130.62078857]
[146.63868713 144.63102722]
[151.99716187 158.64126587]
[157.35562134 172.65150452]
[170.42167664 182.56163025]
[168.10411072 198.79618835]
[152.78703308 204.65446472]
[140.22735596 194.10997009]
[143.34538269 178.00997925]
[137.98690796 163.99972534]
[132.62844849 149.98948669]
[127.26998901 135.97924805]
[121.91152191 121.96900940]
[107.14152527 124.58572388]
[106.92235565 139.58412170]
[106.70317841 154.58251953]
[106.48400879 169.58091736]
[106.26483154 184.57931519]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 214]
[3 213]
[4 212]
[5 211]
[6 210]
[15 45]
[16 44]
[17 43]
[18 42]
[19 41]
[20 40]
[21 39]
[23 36]
[24 35]
[25 34]
[51 77]
[52 76]
[54 73]
[55 72]
[56 71]
[57 70]
[58 69]
[59 68]
[60 67]
[79 183]
[80 182]
[81 181]
[82 180]
[83 179]
[84 178]
[85 177]
[87 174]
[88 173]
[89 172]
[90 171]
[91 170]
[92 169]
[93 168]
[94 167]
[95 166]
[103 115]
[104 114]
[105 113]
[106 112]
[107 111]
[116 148]
[117 147]
[118 146]
[119 145]
[120 144]
[121 142]
[122 141]
[123 140]
[126 137]
[127 136]
[196 209]
[197 208]
[198 207]
[199 206]
[200 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
