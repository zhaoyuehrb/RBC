%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 03:57:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCAAGAUCAGCUCCCGAGUCUGAGAUCUCUUCUCUCAAUGGCAUUGGAGCUGGCUGUGCCUGAGGCAGACCUGGACCGUGGACAUGGGGCAAUGCCUUGAGCGGAAGGGGAAGCCACUGGUAAUUAAUUUAUCCUUCCUGUAUUGCUGGGUUGGGAUUGUUUUAUUCUGCUUCAAUAAAAUAAUCUUUACUGAAUUAA\
) } def
/len { sequence length } bind def

/coor [
[4.04302835 297.86483765]
[2.46240830 282.94833374]
[3.83302569 268.01110840]
[8.10182095 253.63134766]
[15.10398579 240.36508179]
[2.83173990 248.99015808]
[-2.39591002 256.49194336]
[-9.70169640 257.65255737]
[-22.10790443 266.08380127]
[-34.51411438 274.51504517]
[-46.92032242 282.94628906]
[-59.32653046 291.37756348]
[-71.73274231 299.80880737]
[-84.13894653 308.24005127]
[-96.54515839 316.67129517]
[-103.61000061 330.82751465]
[-118.48548889 331.58193970]
[-125.55033875 345.73815918]
[-140.42582703 346.49258423]
[-152.83203125 354.92382812]
[-165.23823547 363.35507202]
[-177.51048279 371.98016357]
[-189.64573669 380.79693604]
[-201.78099060 389.61370850]
[-213.91624451 398.43048096]
[-226.05151367 407.24725342]
[-226.96176147 422.85833740]
[-237.73120117 434.19647217]
[-253.27482605 435.90814209]
[-266.25341797 427.18515015]
[-270.53884888 412.14624023]
[-264.10772705 397.89230347]
[-249.99658203 391.15362549]
[-234.86828613 395.11199951]
[-222.73303223 386.29522705]
[-210.59777832 377.47845459]
[-198.46252441 368.66168213]
[-186.32727051 359.84490967]
[-184.70797729 355.34326172]
[-180.23857117 351.81491089]
[-173.66949463 350.94885254]
[-161.26329041 342.51760864]
[-148.85707092 334.08636475]
[-142.67959595 320.53320312]
[-126.91674042 319.17572021]
[-120.73927307 305.62255859]
[-104.97640991 304.26510620]
[-92.57019806 295.83383179]
[-80.16398621 287.40258789]
[-67.75778198 278.97134399]
[-55.35157394 270.54010010]
[-42.94536209 262.10882568]
[-30.53915596 253.67758179]
[-18.13294601 245.24633789]
[-5.79333878 236.71791077]
[6.47890711 228.09283447]
[-8.00088024 224.17674255]
[-14.87585163 210.84501648]
[-9.67002583 196.77734375]
[4.22731972 191.13255310]
[17.76825523 197.58569336]
[22.13694572 211.93498230]
[30.37228775 199.39787292]
[38.60762787 186.86076355]
[46.84297180 174.32365417]
[55.07831573 161.78654480]
[63.31365585 149.24943542]
[71.54899597 136.71232605]
[79.78433990 124.17521667]
[88.01968384 111.63810730]
[86.84279633 96.68434906]
[76.74761200 85.58988190]
[61.33959961 87.42642212]
[47.81122208 79.82624817]
[41.36441803 65.71177673]
[44.47810745 50.51031113]
[55.95502090 40.06712341]
[71.38204193 38.39783859]
[84.82717896 46.14432144]
[91.12049103 60.32789993]
[87.84207153 75.49468994]
[97.93726349 86.58915710]
[105.43356323 86.82473755]
[120.42616272 87.29589844]
[127.92246246 87.53147888]
[138.69435120 77.09278870]
[149.46624756 66.65409851]
[160.23814392 56.21540451]
[171.01004028 45.77671432]
[181.78193665 35.33802032]
[192.55383301 24.89932823]
[203.32571411 14.46063709]
[214.09761047 4.02194548]
[224.86950684 -6.41674662]
[229.39529419 -21.57682228]
[243.91957092 -24.87753487]
[254.69146729 -35.31622696]
[265.29806519 -45.92282867]
[275.73675537 -56.69472122]
[279.78411865 -71.98947906]
[294.19754028 -75.74478149]
[304.63623047 -86.51667023]
[315.07492065 -97.28856659]
[325.51361084 -108.06046295]
[335.95230103 -118.83235931]
[339.99966431 -134.12710571]
[354.41308594 -137.88241577]
[358.46044922 -153.17716980]
[372.87387085 -156.93246460]
[383.31259155 -167.70436096]
[393.75128174 -178.47625732]
[404.18997192 -189.24815369]
[414.62866211 -200.02005005]
[425.06735229 -210.79194641]
[410.26531982 -213.22096252]
[402.79522705 -226.22857666]
[408.15719604 -240.23748779]
[422.40325928 -244.93316650]
[435.04431152 -236.85826111]
[436.77310181 -221.95867920]
[448.02478027 -231.87835693]
[459.27642822 -241.79803467]
[470.52810669 -251.71771240]
[481.77978516 -261.63739014]
[484.21810913 -277.49407959]
[498.20672607 -285.34884644]
[513.01477051 -279.17623901]
[517.28277588 -263.71133423]
[507.73669434 -250.81745911]
[491.69946289 -250.38572693]
[480.44778442 -240.46604919]
[469.19610596 -230.54637146]
[457.94445801 -220.62669373]
[446.69277954 -210.70701599]
[435.83923340 -200.35324097]
[425.40054321 -189.58135986]
[414.96185303 -178.80946350]
[404.52316284 -168.03756714]
[394.08447266 -157.26567078]
[383.64578247 -146.49377441]
[380.34506226 -131.96949768]
[365.18499756 -127.44371796]
[361.88427734 -112.91944122]
[346.72421265 -108.39366150]
[336.28552246 -97.62177277]
[325.84683228 -86.84987640]
[315.40814209 -76.07798004]
[304.96942139 -65.30608368]
[301.66873169 -50.78181076]
[286.50863647 -46.25603104]
[276.06994629 -35.48413467]
[275.24874878 -30.77113724]
[271.45251465 -26.52688408]
[265.13015747 -24.54433250]
[254.35826111 -14.10564041]
[250.60295105 0.30779007]
[235.30819702 4.35514784]
[224.53630066 14.79383945]
[213.76441956 25.23253250]
[202.99252319 35.67122269]
[192.22062683 46.10991669]
[181.44873047 56.54860687]
[170.67683411 66.98729706]
[159.90493774 77.42599487]
[149.13304138 87.86468506]
[138.36114502 98.30337524]
[100.55679321 119.87345123]
[92.32144928 132.41055298]
[84.08610535 144.94766235]
[75.85076904 157.48477173]
[67.61542511 170.02189636]
[59.38008118 182.55900574]
[51.14474106 195.09611511]
[42.90939713 207.63322449]
[34.67405701 220.17033386]
[47.71309280 212.75524902]
[61.95161819 208.03672791]
[76.83842468 206.19743347]
[91.79721069 207.30857849]
[106.24889374 211.32714844]
[119.63401794 218.09754944]
[131.43441772 227.35772705]
[141.19326782 238.74916077]
[148.53277588 251.83088684]
[153.16883850 266.09646606]
[154.92196655 280.99368286]
[153.72428894 295.94577026]
[149.62217712 310.37396240]
[142.77442932 323.71969604]
[133.44615173 335.46630859]
[121.99843597 345.15908813]
[108.87446594 352.42279053]
[94.58229065 356.97622681]
[79.67519379 358.64312744]
[64.73027039 357.35897827]
[50.32605362 353.17343140]
[37.02017212 346.24859619]
[25.32772064 336.85250854]
[15.70134449 325.34890747]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 56]
[6 55]
[8 54]
[9 53]
[10 52]
[11 51]
[12 50]
[13 49]
[14 48]
[15 47]
[17 45]
[19 43]
[20 42]
[21 41]
[22 38]
[23 37]
[24 36]
[25 35]
[26 34]
[62 175]
[63 174]
[64 173]
[65 172]
[66 171]
[67 170]
[68 169]
[69 168]
[70 167]
[71 82]
[72 81]
[85 166]
[86 165]
[87 164]
[88 163]
[89 162]
[90 161]
[91 160]
[92 159]
[93 158]
[94 157]
[96 155]
[97 154]
[98 151]
[99 150]
[101 148]
[102 147]
[103 146]
[104 145]
[105 144]
[107 142]
[109 140]
[110 139]
[111 138]
[112 137]
[113 136]
[114 135]
[120 134]
[121 133]
[122 132]
[123 131]
[124 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
