%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 01:07:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCAGUGAGGGAAGUGGCUGGGCCCUAGGCCAUGGAGAAAACCUUAAACAAACCCUGGAGACAGGGAGCCCCUUCUUUCUCCACAGCUCUGGACCUUUCCCCCUCUCCCUGCGGCCUUUGUCACCUACUGUGAUAAUAAAGCAGUGAGUGCUGAGCUCUCACCCUUCCCCCACUAACCAGCU\
) } def
/len { sequence length } bind def

/coor [
[108.49876404 392.17889404]
[107.47512817 377.21386719]
[96.11505127 367.64913940]
[94.86375427 352.48703003]
[104.97315979 340.63638306]
[103.94952393 325.67135620]
[102.92588806 310.70632935]
[101.90225220 295.74130249]
[93.31445312 283.57171631]
[100.09195709 269.27569580]
[99.06832123 254.31066895]
[98.04468536 239.34564209]
[97.02104950 224.38059998]
[95.99741364 209.41557312]
[94.97377777 194.45054626]
[91.37192535 187.97637939]
[94.06263733 179.22166443]
[93.29464722 164.24134827]
[89.80385590 157.70661926]
[92.64363861 148.99913025]
[92.13152313 134.00787354]
[78.58540344 127.56562805]
[66.63333130 136.62916565]
[54.68125153 145.69271851]
[42.72917557 154.75627136]
[33.76189041 169.14459229]
[17.45346642 164.51084900]
[17.39150810 147.55700684]
[33.66562653 142.80418396]
[45.61770630 133.74064636]
[57.56978226 124.67709351]
[69.52185822 115.61354828]
[69.64842224 104.72648621]
[73.17682648 95.54841614]
[59.63070297 89.10617065]
[46.08458328 82.66391754]
[32.53845978 76.22166443]
[18.99234009 69.77941132]
[5.44621897 63.33716202]
[-8.09990215 56.89490891]
[-21.64602280 50.45265961]
[-30.13990211 60.82505417]
[-40.73604584 69.02465820]
[-52.89297867 74.63713074]
[-65.99052429 77.38022614]
[-79.36141968 77.11797333]
[-92.32534027 73.86740875]
[-104.22347260 67.79753113]
[-114.45204926 59.22051239]
[-122.49292755 48.57564545]
[-127.93988037 36.40683746]
[-130.51910400 23.33484268]
[-130.10296631 10.02557278]
[-126.71633911 -2.84381700]
[-139.91485596 -9.97117043]
[-153.11337280 -17.09852409]
[-166.31188965 -24.22587585]
[-179.51040649 -31.35322952]
[-195.87858582 -30.34601974]
[-204.70814514 -44.16524506]
[-196.91596985 -58.59487534]
[-180.51800537 -58.79093933]
[-172.38305664 -44.55174637]
[-159.18453979 -37.42439270]
[-145.98602295 -30.29703903]
[-132.78750610 -23.16968727]
[-119.58898163 -16.04233360]
[-108.07917786 -28.11195564]
[-93.63996887 -36.48503876]
[-77.42144775 -40.48596954]
[-60.71788788 -39.78772354]
[-44.86441803 -34.43859482]
[-31.13033104 -24.85892487]
[-20.61745453 -11.80808258]
[-14.17174911 3.67572117]
[-12.31524563 20.35802460]
[-15.20377159 36.90653610]
[-1.65765047 43.34878922]
[11.88847065 49.79103851]
[25.43459129 56.23329163]
[38.98071289 62.67554474]
[52.52683258 69.11779785]
[66.07295227 75.56004333]
[79.61907196 82.00229645]
[98.60788727 72.84560394]
[118.43355560 80.01242065]
[131.24984741 72.21865845]
[144.06613159 64.42489624]
[156.88243103 56.63113785]
[169.69871521 48.83737946]
[173.48590088 30.98482323]
[188.56646729 21.58070374]
[190.86238098 6.75745106]
[193.15829468 -8.06580067]
[186.72785950 -23.15160942]
[196.79234314 -36.09912872]
[212.99826050 -33.58906174]
[218.67434692 -18.20355034]
[207.98153687 -5.76988792]
[205.68563843 9.05336380]
[203.38972473 23.87661552]
[205.77268982 25.36257362]
[207.95114136 27.13487053]
[209.89085388 29.16567802]
[220.09826660 17.07769394]
[234.73130798 19.85671997]
[248.77740479 14.59294891]
[262.82348633 9.32917786]
[273.03091431 -2.75880790]
[287.66397095 0.02021816]
[301.71005249 -5.24355268]
[315.75613403 -10.50732422]
[329.80224609 -15.77109432]
[331.38488770 -29.68228340]
[338.77600098 -41.49530029]
[350.48245239 -48.93130493]
[364.18533325 -50.58494568]
[377.19921875 -46.18965912]
[386.99850464 -36.65870667]
[401.13241577 -41.68190384]
[415.26632690 -46.70509720]
[429.40023804 -51.72829056]
[443.53414917 -56.75148392]
[457.66809082 -61.77467728]
[471.80200195 -66.79787445]
[479.96298218 -80.61009979]
[495.86953735 -82.69857788]
[507.31945801 -71.46120453]
[505.52938843 -55.51833344]
[491.87249756 -47.09996796]
[476.82519531 -52.66395950]
[462.69128418 -47.64076614]
[448.55734253 -42.61757278]
[434.42343140 -37.59437561]
[420.28952026 -32.57118225]
[406.15560913 -27.54798889]
[392.02169800 -22.52479362]
[389.49008179 -6.57647610]
[379.20718384 5.99567795]
[363.90206909 11.70580292]
[347.71237183 8.90927219]
[335.06600952 -1.72500217]
[321.01992798 3.53876877]
[306.97381592 8.80253983]
[292.92773438 14.06631088]
[283.72500610 25.77779579]
[268.08728027 23.37527084]
[254.04118347 28.63904190]
[239.99508667 33.90281296]
[230.79234314 45.61429596]
[215.15461731 43.21177292]
[209.50633240 59.08621979]
[194.17762756 66.78309631]
[177.49247742 61.65367126]
[164.67619324 69.44743347]
[151.85989380 77.24118805]
[139.04360962 85.03495026]
[126.22731018 92.82870483]
[128.42500305 108.04525757]
[121.79209137 123.28687286]
[107.12277985 133.49575806]
[107.63489532 148.48701477]
[108.27497101 163.47335815]
[109.04296112 178.45367432]
[109.93880463 193.42691040]
[110.96244049 208.39193726]
[111.98607635 223.35696411]
[113.00971222 238.32200623]
[114.03334808 253.28703308]
[115.05698395 268.25207520]
[123.71800995 281.49206543]
[116.86728668 294.71765137]
[117.89092255 309.68270874]
[118.91455841 324.64773560]
[119.93819427 339.61276245]
[131.56709290 349.97647095]
[132.39202881 365.16772461]
[122.44016266 376.19021606]
[123.46379852 391.15527344]
[134.56201172 402.74011230]
[132.28152466 418.62026978]
[118.37170410 426.61380005]
[103.50299072 420.58877563]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 179]
[2 178]
[5 175]
[6 174]
[7 173]
[8 172]
[10 170]
[11 169]
[12 168]
[13 167]
[14 166]
[15 165]
[17 164]
[18 163]
[20 162]
[21 161]
[22 32]
[23 31]
[24 30]
[25 29]
[34 84]
[35 83]
[36 82]
[37 81]
[38 80]
[39 79]
[40 78]
[41 77]
[54 67]
[55 66]
[56 65]
[57 64]
[58 63]
[86 158]
[87 157]
[88 156]
[89 155]
[90 154]
[92 101]
[93 100]
[94 99]
[104 151]
[106 149]
[107 148]
[108 147]
[110 145]
[111 144]
[112 143]
[113 142]
[119 137]
[120 136]
[121 135]
[122 134]
[123 133]
[124 132]
[125 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
