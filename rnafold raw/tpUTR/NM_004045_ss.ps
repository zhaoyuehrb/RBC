%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 12:56:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGGGGCCUGGUCCCCACAGCCCACAGGAUGGACCAAAGGGGGCAGGAUGCUGAUCCUCCCGCUGGCUUCCAGACAGACCUGGGACUUGGCAGUCAUGCCGGGUGAUGGUGUUCCUGCGGAGACCCUCAGUUGUCCUAUUCCUUCCUAGCUUCCCUGCAAUAAAAUCAAGCUGCUUUUGUUGGA\
) } def
/len { sequence length } bind def

/coor [
[139.61759949 188.41453552]
[132.97850037 174.96379089]
[126.33941650 161.51304626]
[119.70032501 148.06230164]
[113.06124115 134.61157227]
[106.42214966 121.16082001]
[91.63790894 118.62580872]
[80.89708710 129.09646606]
[70.15625763 139.56712341]
[59.59478378 150.21865845]
[49.21569824 161.04800415]
[38.83661652 171.87734985]
[28.45753479 182.70668030]
[18.07845116 193.53602600]
[7.88475513 204.54005432]
[-2.12061453 215.71559143]
[2.74304199 230.28405762]
[-0.34486637 245.32933044]
[-10.55370712 256.80432129]
[-25.13735390 261.62228394]
[-40.17287827 258.48724365]
[-51.61580276 248.24247742]
[-56.38803482 233.64379883]
[-53.20586777 218.61816406]
[-42.92528915 207.20741272]
[-28.31172562 202.48097229]
[-13.29614925 205.71022034]
[-3.29078007 194.53468323]
[-2.65802956 189.77992249]
[0.98304027 185.37905884]
[7.24910975 183.15693665]
[17.62819290 172.32760620]
[28.00727654 161.49826050]
[38.38636017 150.66891479]
[48.76544189 139.83956909]
[49.55928421 135.10905457]
[53.34769058 130.83436584]
[59.68560410 128.82629395]
[70.42642975 118.35564423]
[81.16725159 107.88498688]
[76.65328979 93.58029175]
[61.84806442 91.17089844]
[47.04283142 88.76150513]
[38.04651260 90.47386169]
[32.00753784 86.18344879]
[17.24535561 83.52300262]
[2.48317432 80.86254883]
[-12.27900696 78.20210266]
[-27.04118919 75.54164886]
[-42.28086090 81.59842682]
[-54.97646713 71.21797943]
[-52.06785965 55.07883453]
[-36.54716492 49.78355408]
[-24.38073921 60.77946854]
[-9.61855793 63.43991852]
[5.14362383 66.10036469]
[19.90580559 68.76081848]
[34.66798782 71.42126465]
[49.45222473 73.95627594]
[64.25745392 76.36566925]
[79.06268311 78.77506256]
[92.39875031 71.90853119]
[99.03784180 58.45778656]
[105.67693329 45.00704193]
[112.31601715 31.55629921]
[118.95510864 18.10555458]
[106.57023621 4.80470371]
[100.22896576 -12.19109821]
[100.87215424 -30.28609467]
[108.37603760 -46.72721100]
[121.57498932 -59.02291107]
[138.44253540 -65.32077789]
[156.40243530 -64.68655396]
[162.11325073 -78.55690002]
[167.82406616 -92.42724609]
[173.53489685 -106.29759216]
[179.24571228 -120.16793823]
[169.99031067 -132.34515381]
[168.08532715 -147.42056274]
[173.94303894 -161.33291626]
[185.89799500 -170.38473511]
[200.67904663 -172.22483826]
[206.38986206 -186.09518433]
[212.10069275 -199.96553040]
[210.20010376 -215.67216492]
[222.20025635 -224.49519348]
[227.91107178 -238.36553955]
[233.62190247 -252.23588562]
[231.72131348 -267.94250488]
[243.72146606 -276.76553345]
[249.43228149 -290.63589478]
[255.14311218 -304.50622559]
[260.85394287 -318.37658691]
[255.01846313 -332.81906128]
[261.00762939 -346.80419922]
[274.81228638 -352.27841187]
[280.52313232 -366.14877319]
[286.23394775 -380.01910400]
[291.94476318 -393.88946533]
[297.65557861 -407.75979614]
[303.36639404 -421.63015747]
[298.54763794 -436.93240356]
[307.62612915 -450.15966797]
[323.63763428 -451.16513062]
[334.29949951 -439.17745972]
[331.43286133 -423.39260864]
[317.23675537 -415.91934204]
[311.52593994 -402.04898071]
[305.81512451 -388.17864990]
[300.10427856 -374.30828857]
[294.39346313 -360.43795776]
[288.68264771 -346.56759644]
[294.63098145 -332.96051025]
[289.03698730 -318.81265259]
[274.72427368 -312.66574097]
[269.01345825 -298.79541016]
[263.30264282 -284.92504883]
[257.59179688 -271.05471802]
[259.90087891 -256.34017944]
[247.49224854 -246.52505493]
[241.78141785 -232.65470886]
[236.07060242 -218.78436279]
[238.37965393 -204.06982422]
[225.97103882 -194.25471497]
[220.26020813 -180.38436890]
[214.54939270 -166.51402283]
[223.74983215 -154.80003357]
[225.86570740 -139.95486450]
[220.22961426 -125.95126343]
[208.26231384 -116.58747101]
[193.11605835 -114.45711517]
[187.40524292 -100.58676910]
[181.69441223 -86.71642303]
[175.98359680 -72.84607697]
[170.27278137 -58.97573090]
[179.62858582 -51.39719391]
[186.70858765 -41.64082718]
[191.02270508 -30.36920166]
[192.26904297 -18.35020256]
[190.35496521 -6.40470457]
[185.40391541 4.64948559]
[177.74752808 14.05361843]
[167.90344238 21.16008186]
[156.54022217 25.47699547]
[144.43202209 26.70225143]
[132.40585327 24.74464417]
[125.76676178 38.19538879]
[119.12767792 51.64612961]
[112.48858643 65.09687805]
[105.84949493 78.54761505]
[122.10860443 92.25962830]
[119.87289429 114.52172852]
[126.51198578 127.97247314]
[133.15107727 141.42321777]
[139.79016113 154.87396240]
[146.42924500 168.32470703]
[153.06834412 181.77545166]
[160.04786682 195.05273438]
[167.36328125 208.14794922]
[174.67871094 221.24314880]
[181.99414062 234.33836365]
[189.30955505 247.43357849]
[196.62498474 260.52877808]
[203.94039917 273.62399292]
[211.25582886 286.71920776]
[224.74087524 294.99353027]
[224.19313049 309.87805176]
[231.50856018 322.97326660]
[244.51176453 333.85226440]
[237.65754700 349.35891724]
[220.85946655 347.06524658]
[218.41334534 330.28869629]
[211.09791565 317.19348145]
[198.13612366 309.85583496]
[198.16061401 294.03463745]
[190.84519958 280.93942261]
[183.52976990 267.84420776]
[176.21434021 254.74900818]
[168.89892578 241.65379333]
[161.58349609 228.55857849]
[154.26806641 215.46336365]
[146.95265198 202.36816406]
[143.65434265 201.06201172]
[140.83171082 198.08071899]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 157]
[2 156]
[3 155]
[4 154]
[5 153]
[6 152]
[7 40]
[8 39]
[9 38]
[10 35]
[11 34]
[12 33]
[13 32]
[14 31]
[15 28]
[16 27]
[41 61]
[42 60]
[43 59]
[45 58]
[46 57]
[47 56]
[48 55]
[49 54]
[62 150]
[63 149]
[64 148]
[65 147]
[66 146]
[73 135]
[74 134]
[75 133]
[76 132]
[77 131]
[82 126]
[83 125]
[84 124]
[86 122]
[87 121]
[88 120]
[90 118]
[91 117]
[92 116]
[93 115]
[96 112]
[97 111]
[98 110]
[99 109]
[100 108]
[101 107]
[158 182]
[159 181]
[160 180]
[161 179]
[162 178]
[163 177]
[164 176]
[165 175]
[167 173]
[168 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
