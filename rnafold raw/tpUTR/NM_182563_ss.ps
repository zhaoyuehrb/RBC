%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 03:40:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCCCGACCUGGCCCAGCCUGGCCCGUCCCCAAUCCAGUGGGCUGGCCAGGCCACCUGCACCAGGGAGGACAGCUGCUGGCAGGGACUAAUAAACCCUUCCACCUGGC\
) } def
/len { sequence length } bind def

/coor [
[147.92523193 160.72132874]
[136.07601929 156.89248657]
[126.96721649 148.29534912]
[122.40780640 136.55139160]
[123.34006500 123.91501617]
[110.72126007 115.80540466]
[96.54093170 118.78273773]
[84.35157013 110.94910431]
[81.16912842 96.81340027]
[68.55032349 88.70378876]
[55.93151855 80.59417725]
[43.31271744 72.48456573]
[30.69391441 64.37494659]
[15.43809319 67.52101135]
[2.75635672 59.11695099]
[-0.14891385 44.55346680]
[-12.76771641 36.44385529]
[-25.82890892 29.06786156]
[-39.28988266 22.44954491]
[-52.75086212 15.83122921]
[-66.21183777 9.21291256]
[-79.67281342 2.59459615]
[-93.13378906 -4.02372026]
[-106.59476471 -10.64203644]
[-120.05574036 -17.26035309]
[-135.85385132 -16.40583992]
[-143.86143494 -28.96482086]
[-157.32240295 -35.58313751]
[-170.78338623 -42.20145416]
[-184.24435425 -48.81977081]
[-200.04246521 -47.96525574]
[-208.05004883 -60.52423859]
[-222.92681885 -55.18971634]
[-237.18249512 -62.01256561]
[-242.35943604 -76.94490814]
[-235.38624573 -91.12765503]
[-220.40000916 -96.14642334]
[-206.29177856 -89.02368164]
[-201.43173218 -73.98521423]
[-186.59643555 -75.31311798]
[-177.62603760 -62.28074646]
[-164.16506958 -55.66242981]
[-150.70408630 -49.04411316]
[-137.24311829 -42.42579651]
[-122.40782166 -43.75369644]
[-113.43742371 -30.72133064]
[-99.97644806 -24.10301399]
[-86.51547241 -17.48469734]
[-73.05449677 -10.86638069]
[-59.59352112 -4.24806356]
[-46.13254547 2.37025285]
[-32.67156601 8.98856926]
[-19.21059227 15.60688591]
[-16.40553665 14.70413971]
[-13.04945660 14.94440746]
[-9.60986805 16.55324554]
[-6.63022423 19.56976891]
[-4.65810442 23.82505226]
[7.96069860 31.93466568]
[22.41500092 28.52750397]
[35.32778549 36.57204437]
[38.80352402 51.75614548]
[51.42232895 59.86576080]
[64.04113007 67.97537231]
[76.65993500 76.08498383]
[89.27873993 84.19459534]
[103.45906830 81.21726227]
[115.64842987 89.05089569]
[118.83087158 103.18659973]
[131.44967651 111.29621124]
[147.99946594 104.20137024]
[165.37074280 108.31262970]
[176.78437805 121.83566284]
[177.89944458 139.34074402]
[190.96063232 146.71673584]
[204.02183533 154.09272766]
[217.18701172 161.28146362]
[233.00308228 160.87843323]
[240.64875793 173.66094971]
[253.91525269 180.66096497]
[267.18176270 187.66098022]
[282.99783325 187.25793457]
[290.64349365 200.04046631]
[303.90997314 207.04048157]
[317.17648315 214.04048157]
[330.44296265 221.04049683]
[343.82543945 213.36499023]
[359.23199463 214.16584778]
[371.74649048 223.18754578]
[377.37557983 237.55128479]
[374.32305908 252.67364502]
[363.56295776 263.72912598]
[348.52877808 267.18997192]
[334.01791382 261.95184326]
[324.66067505 249.68621826]
[323.44296265 234.30699158]
[310.17648315 227.30697632]
[296.90997314 220.30696106]
[283.64349365 213.30696106]
[268.77630615 214.21067810]
[260.18173218 200.92745972]
[246.91523743 193.92745972]
[233.64874268 186.92744446]
[218.78158569 187.83116150]
[210.18701172 174.54795837]
[202.69105530 174.20484924]
[196.64582825 167.15391541]
[183.58464050 159.77792358]
[170.52345276 152.40193176]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 70]
[6 69]
[9 66]
[10 65]
[11 64]
[12 63]
[13 62]
[16 59]
[17 58]
[18 53]
[19 52]
[20 51]
[21 50]
[22 49]
[23 48]
[24 47]
[25 46]
[27 44]
[28 43]
[29 42]
[30 41]
[32 39]
[74 109]
[75 108]
[76 107]
[77 105]
[79 103]
[80 102]
[81 101]
[83 99]
[84 98]
[85 97]
[86 96]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
