%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 07:09:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUCUGGGAAGUGAAGCUAGUGUUGAACCACUAAACCAUAAAAGUUUAAGUUUUUUGGGGAAAGGAAACUAGUAGUGUUUCCUCCUCUUUGAUGCUCUGAUACUGUUCUGUUUUUCUUCACGAAAUACCCUUUGGAUAGCUAAAGUGUUAACUUUGAAAUAAAGCCCAAAUUAAUGCUCAGAAUUCAAAUUCCAA\
) } def
/len { sequence length } bind def

/coor [
[101.18928528 311.76101685]
[86.19100952 316.18658447]
[71.87769318 309.88873291]
[65.00765991 295.84106445]
[68.82471466 280.67651367]
[81.52656555 271.55526733]
[82.48274231 256.58578491]
[83.43892670 241.61628723]
[84.39511108 226.64678955]
[85.35128784 211.67729187]
[75.34984589 200.69973755]
[76.10630035 185.50492859]
[87.68838501 175.08892822]
[88.64456940 160.11943054]
[89.60074615 145.14993286]
[90.55693054 130.18045044]
[85.18639374 134.96946716]
[78.81775665 138.94422913]
[71.56381226 141.95848083]
[60.34225464 151.91221619]
[49.12069702 161.86593628]
[37.89913940 171.81965637]
[26.67757988 181.77339172]
[25.98332024 197.56242371]
[14.27161121 208.17427063]
[-1.50919855 207.31311035]
[-11.99663448 195.48986816]
[-10.96868610 179.71903992]
[0.96478212 169.35719299]
[16.72385597 170.55181885]
[27.94541359 160.59809875]
[39.16697311 150.64437866]
[50.38853073 140.69065857]
[61.61008835 130.73692322]
[58.80916595 123.77957153]
[53.20732117 109.86485291]
[50.40639877 102.90749359]
[35.41831970 103.50535583]
[20.43023872 104.10321808]
[6.94942093 112.38440704]
[-6.07612610 105.16053009]
[-21.06420708 105.75839233]
[-36.05228806 106.35625458]
[-51.04036713 106.95410919]
[-60.46280289 119.43416595]
[-75.71433258 122.88741302]
[-89.59364319 115.68334198]
[-95.54735565 101.22348785]
[-90.76430511 86.33535767]
[-77.50290680 78.04866791]
[-62.02478027 80.27613831]
[-51.63822937 91.96603394]
[-36.65014648 91.36817169]
[-21.66206741 90.77030945]
[-6.67398691 90.17244720]
[5.73478365 81.93402100]
[19.83237839 89.11513519]
[34.82045746 88.51727295]
[49.80854034 87.91941071]
[55.07596207 73.87468719]
[44.17752457 63.56818390]
[33.27908707 53.26168060]
[26.92896461 51.35520172]
[23.08027649 47.15399170]
[22.20409012 42.44848633]
[11.63985920 31.79968262]
[1.07562828 21.15087891]
[-9.48860264 10.50207520]
[-20.05283356 -0.14672859]
[-30.61706543 -10.79553223]
[-46.18436050 -9.31452751]
[-59.03216934 -18.22899628]
[-63.09415436 -33.32979965]
[-56.45236588 -47.48680115]
[-42.24285889 -54.01549911]
[-27.17492294 -49.83323669]
[-18.36317825 -36.91475296]
[-19.96826172 -21.35976410]
[-9.40403080 -10.71095943]
[1.16020072 -0.06215616]
[11.72443199 10.58664703]
[22.28866386 21.23545074]
[32.85289383 31.88425446]
[43.58559418 42.36324310]
[54.48403168 52.66974640]
[65.38246918 62.97625351]
[91.96063232 56.40288544]
[114.33739471 64.83261108]
[125.84349823 81.77516937]
[139.80244446 76.28445435]
[153.76138306 70.79373169]
[167.72032166 65.30301666]
[181.67926025 59.81230164]
[188.52944946 53.75186157]
[195.90483093 54.34727478]
[209.94955444 49.07985306]
[216.54791260 34.96959686]
[230.86630249 29.82775307]
[244.27760315 36.20523834]
[258.32232666 30.93781662]
[272.36706543 25.67039490]
[286.41177368 20.40297127]
[292.45422363 8.99917126]
[304.26962280 4.90460634]
[315.33895874 9.80069733]
[329.46588135 4.75790834]
[332.34024048 -4.24394798]
[338.94149780 -10.81170750]
[347.69515991 -13.55768204]
[356.59381104 -11.98503017]
[363.65737915 -6.57243490]
[378.00930786 -10.93385792]
[392.36126709 -15.29528046]
[406.71319580 -19.65670395]
[421.06512451 -24.01812744]
[428.54953003 -37.67906952]
[443.16656494 -41.89772415]
[456.14407349 -34.67829895]
[470.49600220 -39.03972244]
[484.84793091 -43.40114594]
[499.19985962 -47.76256943]
[500.74545288 -62.85848999]
[507.93350220 -76.17669678]
[519.64129639 -85.70249939]
[534.06512451 -90.00846100]
[548.99804688 -88.46826935]
[562.16778564 -81.34759521]
[571.58221436 -69.75891876]
[585.93414307 -74.12033844]
[596.88842773 -85.53591156]
[611.31549072 -81.83350372]
[625.66741943 -86.19492340]
[640.01934814 -90.55635071]
[654.37127686 -94.91777039]
[668.72326660 -99.27919006]
[683.07519531 -103.64061737]
[693.87835693 -115.97851562]
[709.91009521 -112.52666473]
[714.67834473 -96.83602905]
[703.27789307 -85.04779816]
[687.43658447 -89.28868103]
[673.08465576 -84.92726135]
[658.73272705 -80.56583405]
[644.38079834 -76.20441437]
[630.02886963 -71.84298706]
[615.67694092 -67.48156738]
[605.74926758 -56.37795258]
[590.29559326 -59.76840591]
[575.94366455 -55.40698624]
[574.56896973 -40.53958511]
[567.58801270 -27.29529762]
[556.03692627 -17.70685959]
[541.65612793 -13.25936413]
[526.62780762 -14.66028786]
[513.24487305 -21.72715950]
[503.56127930 -33.41063309]
[489.20935059 -29.04921150]
[474.85742188 -24.68778801]
[460.50549316 -20.32636642]
[453.73916626 -7.10696983]
[439.24639893 -2.47941780]
[425.42654419 -9.66619301]
[411.07461548 -5.30477047]
[396.72268677 -0.94334745]
[382.37075806 3.41807556]
[368.01879883 7.77949858]
[355.30371094 24.02879524]
[334.50866699 18.88484192]
[320.38174438 23.92763138]
[309.76275635 37.89300537]
[291.67919922 34.44769287]
[277.63449097 39.71511841]
[263.58975220 44.98254013]
[249.54502869 50.24996185]
[243.63514709 63.87379456]
[229.46684265 69.41578674]
[215.21697998 63.12457657]
[201.17225647 68.39199829]
[187.16998291 73.77124023]
[173.21102905 79.26195526]
[159.25209045 84.75267792]
[145.29315186 90.24339294]
[131.33421326 95.73410797]
[125.55408478 118.62846375]
[105.52642059 131.13662720]
[104.57024384 146.10612488]
[103.61405945 161.07560730]
[102.65787506 176.04510498]
[112.82058716 187.85006714]
[111.63763428 203.01763916]
[100.32078552 212.63348389]
[99.36460114 227.60296631]
[98.40841675 242.57246399]
[97.45223999 257.54196167]
[96.49605560 272.51144409]
[107.93417358 283.17462158]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 195]
[7 194]
[8 193]
[9 192]
[10 191]
[13 188]
[14 187]
[15 186]
[16 185]
[19 34]
[20 33]
[21 32]
[22 31]
[23 30]
[37 59]
[38 58]
[39 57]
[41 55]
[42 54]
[43 53]
[44 52]
[60 86]
[61 85]
[62 84]
[65 83]
[66 82]
[67 81]
[68 80]
[69 79]
[70 78]
[89 183]
[90 182]
[91 181]
[92 180]
[93 179]
[95 178]
[96 177]
[99 174]
[100 173]
[101 172]
[102 171]
[105 169]
[106 168]
[111 166]
[112 165]
[113 164]
[114 163]
[115 162]
[118 159]
[119 158]
[120 157]
[121 156]
[128 149]
[129 148]
[131 146]
[132 145]
[133 144]
[134 143]
[135 142]
[136 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
