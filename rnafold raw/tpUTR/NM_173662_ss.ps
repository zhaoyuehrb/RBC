%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 04:56:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACAGCAGACCCCAGAAGCAACAUACUGCAUGGUUGAAAUCCUUGGUCCAACAUUUAAUAUUAAUUUUUUUAAUUUUAGAGAUGAUCCCAAGUGUUUAGAAAACUAAGUAAACUUUGUUGUCAAGCAAUUUGUCCAUGUGGAAAGAAUUUAAAGAGAAGCUGAACAAUGGAAUAAACAAAUAAAGCAUGUUUUUUCAUCUUUCCCAUUA\
) } def
/len { sequence length } bind def

/coor [
[244.43000793 129.86344910]
[229.97056580 125.87289429]
[215.51112366 121.88233948]
[201.05168152 117.89178467]
[186.59223938 113.90123749]
[172.13279724 109.91068268]
[157.67335510 105.92012787]
[143.21391296 101.92958069]
[128.75445557 97.93902588]
[124.98346710 118.61860657]
[107.25418854 132.69279480]
[83.02809143 131.54153442]
[73.67575073 143.26901245]
[64.32340240 154.99647522]
[66.16397095 165.71759033]
[61.88795090 175.48060608]
[53.12847137 181.15861511]
[42.90956497 181.07913208]
[33.21057129 192.52157593]
[23.51157951 203.96401978]
[25.06010818 219.69226074]
[14.96909428 231.85560608]
[-0.77464050 233.23776245]
[-12.83061981 223.01872253]
[-14.04624367 207.26124573]
[-3.70030475 195.31399536]
[12.06913471 194.26502991]
[21.76812935 182.82258606]
[31.46712303 171.38014221]
[33.51792145 152.15348816]
[52.59592819 145.64413452]
[61.94827652 133.91665649]
[71.30062103 122.18918610]
[69.57707214 114.88991547]
[55.74716187 120.69799042]
[43.63101196 129.54100037]
[29.56234741 124.33786011]
[26.11585426 109.73916626]
[36.37203598 98.79335785]
[51.16278076 101.28306580]
[66.12995911 100.29137421]
[64.40641022 92.99210358]
[50.79602814 86.68674469]
[37.18564987 80.38138580]
[23.57526779 74.07602692]
[9.96488762 67.77066803]
[-0.75261748 78.46461487]
[-14.45647717 84.83455658]
[-29.48458862 86.12919617]
[-44.02149963 82.21150970]
[-56.31771851 73.57296753]
[-64.90026855 61.27197647]
[-68.74912262 46.80423737]
[-67.41838837 31.92087555]
[-81.02877045 25.61551666]
[-94.63915253 19.31015968]
[-108.24953461 13.00480080]
[-121.85990906 6.69944239]
[-137.63404846 7.91894674]
[-145.92982483 -4.45156097]
[-159.54020691 -10.75691891]
[-173.15057373 -17.06227684]
[-186.76095581 -23.36763573]
[-200.37133789 -29.67299461]
[-215.86769104 -25.52053642]
[-228.68994141 -35.16259766]
[-229.00196838 -51.20261765]
[-216.56440735 -61.33606339]
[-200.91828918 -57.78942108]
[-194.06597900 -43.28337479]
[-180.45559692 -36.97801590]
[-166.84521484 -30.67265892]
[-153.23484802 -24.36730003]
[-139.62446594 -18.06194115]
[-124.82382965 -19.73244667]
[-115.55455017 -6.91093826]
[-101.94417572 -0.60557985]
[-88.33379364 5.69977856]
[-74.72341156 12.00513744]
[-61.11303329 18.31049538]
[-50.62001419 7.67179966]
[-37.09492874 1.25298238]
[-22.16189766 -0.15380903]
[-7.62142944 3.64043212]
[4.76666069 12.19644070]
[13.49624157 24.49744225]
[17.49796867 39.06995773]
[16.27024651 54.16028595]
[29.88062668 60.46564484]
[43.49100876 66.77100372]
[57.10138702 73.07636261]
[70.71176910 79.38172150]
[89.50373840 69.42868805]
[108.40777588 72.42507935]
[107.73480225 57.44018555]
[107.06182861 42.45529175]
[106.38885498 27.47039413]
[105.71588135 12.48549843]
[92.04677582 5.48185444]
[83.72428131 -7.42673635]
[82.98711395 -22.76792717]
[90.03356934 -36.41501617]
[102.96818542 -44.69700623]
[118.31161499 -45.38607788]
[131.93655396 -38.29688263]
[140.17794800 -25.33637047]
[140.81892395 -9.99085999]
[133.68705750 3.61178708]
[120.70077515 11.81252575]
[121.37374878 26.79742241]
[122.04672241 41.78231812]
[122.71969604 56.76721191]
[123.39266968 71.75211334]
[132.74501038 83.47958374]
[147.20445251 87.47013092]
[161.66389465 91.46068573]
[176.12333679 95.45124054]
[190.58279419 99.44179535]
[205.04223633 103.43234253]
[219.50167847 107.42289734]
[233.96112061 111.41345215]
[248.42056274 115.40400696]
[252.59706116 109.07942200]
[257.96871948 103.74858093]
[264.30609131 99.63273621]
[271.33969116 96.90137482]
[278.77166748 95.66525269]
[286.28820801 95.97188568]
[293.57290649 97.80377197]
[300.32009888 101.07928467]
[306.24761963 105.65632629]
[311.10861206 111.33847809]
[314.70181274 117.88343811]
[316.87994385 125.01330566]
[317.55566406 132.42646790]
[316.70510864 139.81024170]
[330.40829468 145.91130066]
[344.11145020 152.01234436]
[353.22482300 152.64410400]
[357.97293091 158.30853271]
[371.58331299 164.61389160]
[385.19369507 170.91925049]
[398.80407715 177.22460938]
[412.41445923 183.52996826]
[426.02484131 189.83532715]
[439.63522339 196.14067078]
[451.14160156 188.55082703]
[464.78747559 187.64498901]
[477.00125122 193.55303955]
[484.63906860 204.63543701]
[485.79388428 217.93655396]
[499.30841064 224.44480896]
[512.82293701 230.95306396]
[526.33746338 237.46133423]
[539.85198975 243.96958923]
[555.64263916 242.98619080]
[563.75238037 255.47941589]
[579.54302979 254.49601746]
[587.65283203 266.98922729]
[601.16735840 273.49749756]
[614.68188477 280.00573730]
[625.38745117 270.77813721]
[638.76098633 266.34140015]
[652.77282715 267.33407593]
[665.30969238 273.57333374]
[674.49340820 284.08761597]
[678.96228027 297.26760864]
[678.07269287 311.11276245]
[691.48840332 317.82247925]
[705.76385498 311.43927002]
[720.78826904 315.77526855]
[729.46759033 328.78308105]
[727.70367432 344.32086182]
[716.32940674 355.05212402]
[700.71533203 355.90991211]
[688.23400879 346.48919678]
[684.77868652 331.23812866]
[671.36303711 324.52844238]
[658.91180420 334.54376221]
[643.28265381 338.13980103]
[627.59301758 334.54724121]
[614.99511719 324.43576050]
[608.04278564 309.79003906]
[608.17364502 293.52029419]
[594.65905762 287.01202393]
[581.14453125 280.50378418]
[566.32055664 281.95266724]
[557.24414062 268.99395752]
[542.42016602 270.44284058]
[533.34375000 257.48413086]
[519.82922363 250.97586060]
[506.31466675 244.46760559]
[492.80014038 237.95935059]
[479.28561401 231.45109558]
[465.08691406 239.68899536]
[448.61074829 237.82205200]
[436.37234497 226.38917542]
[433.32986450 209.75105286]
[419.71948242 203.44569397]
[406.10910034 197.14033508]
[392.49871826 190.83497620]
[378.88833618 184.52961731]
[365.27795410 178.22427368]
[351.66757202 171.91891479]
[338.01040649 165.71553040]
[324.30722046 159.61448669]
[310.60403442 153.51342773]
[292.00860596 167.03561401]
[268.89761353 166.66508484]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 122]
[2 121]
[3 120]
[4 119]
[5 118]
[6 117]
[7 116]
[8 115]
[9 114]
[12 33]
[13 32]
[14 31]
[18 29]
[19 28]
[20 27]
[42 92]
[43 91]
[44 90]
[45 89]
[46 88]
[54 80]
[55 79]
[56 78]
[57 77]
[58 76]
[60 74]
[61 73]
[62 72]
[63 71]
[64 70]
[94 113]
[95 112]
[96 111]
[97 110]
[98 109]
[136 207]
[137 206]
[138 205]
[140 204]
[141 203]
[142 202]
[143 201]
[144 200]
[145 199]
[146 198]
[151 194]
[152 193]
[153 192]
[154 191]
[155 190]
[157 188]
[159 186]
[160 185]
[161 184]
[168 178]
[169 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
