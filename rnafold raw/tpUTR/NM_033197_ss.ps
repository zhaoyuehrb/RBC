%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 14:06:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACUUGGAUGGCAGCCAUCAGGGAAGGCUGGGUCCCAGCUGGGAGUAUGGGUGUGAGCUCUAUAGACCAUCCCUCUCUGCAAUCAAUAAACACUUGCCUGUGAUGCCUGC\
) } def
/len { sequence length } bind def

/coor [
[69.22545624 379.88687134]
[56.59189606 388.34036255]
[41.68402100 391.31082153]
[26.77516556 388.34527588]
[14.13882828 379.89593506]
[5.70195532 367.25125122]
[2.75111055 352.33947754]
[5.73627520 337.43453979]
[14.20223427 324.80932617]
[26.85799026 316.38909912]
[41.77363205 313.45788574]
[44.69998550 298.74609375]
[47.62633896 284.03433228]
[50.55269623 269.32254028]
[44.06872177 259.00418091]
[46.48831177 246.64967346]
[57.03916931 239.06867981]
[60.37698364 224.44476318]
[58.77431107 217.11846924]
[64.01892853 209.46026611]
[67.76557159 194.93571472]
[71.51222229 180.41116333]
[75.25886536 165.88661194]
[70.94578552 151.63014221]
[81.88480377 140.19998169]
[85.63144684 125.67543793]
[89.37809753 111.15088654]
[82.30714417 97.92206573]
[68.14889526 92.96788025]
[53.99064255 88.01369476]
[39.83239365 83.05950928]
[25.67414474 78.10532379]
[8.72687149 78.58102417]
[3.57828498 62.42774582]
[17.67501640 53.00869751]
[30.62833023 63.94707108]
[44.78657913 68.90125275]
[58.94482803 73.85544586]
[73.10308075 78.80963135]
[87.26132965 83.76381683]
[91.23402405 86.45182800]
[94.59259796 89.69621277]
[97.93041229 75.07229614]
[101.26822662 60.44837570]
[104.60604095 45.82445526]
[107.94385529 31.20053673]
[102.07234955 13.81813908]
[114.34246826 1.35814071]
[117.26882172 -13.35363865]
[120.19517517 -28.06541824]
[123.12152863 -42.77719879]
[116.76483154 -59.98808289]
[128.68066406 -72.78731537]
[131.19325256 -87.57537842]
[133.70584106 -102.36344147]
[136.21844482 -117.15150452]
[128.14482117 -131.01499939]
[134.08399963 -145.91819763]
[149.47994995 -150.42868042]
[162.52220154 -141.08634949]
[163.20588684 -125.05787659]
[151.00650024 -114.63891602]
[148.49391174 -99.85084534]
[145.98132324 -85.06278229]
[143.46871948 -70.27471924]
[150.23953247 -60.14228058]
[148.16740417 -47.72476196]
[137.83331299 -39.85084152]
[134.90695190 -25.13906288]
[131.98060608 -10.42728329]
[129.05424500 4.28449535]
[135.53822327 14.60284233]
[133.11862183 26.95736122]
[122.56777191 34.53835297]
[119.22995758 49.16226959]
[115.89214325 63.78619003]
[112.55432892 78.41011047]
[109.21651459 93.03402710]
[118.75096130 81.45411682]
[131.74476624 73.96004486]
[146.54272461 71.50642395]
[161.25984192 74.40579987]
[174.02140808 82.28884888]
[183.20181274 94.15140533]
[187.63163757 108.48237610]
[186.74658203 123.45624542]
[180.65939331 137.16558838]
[170.14547729 147.86407471]
[156.54414368 154.18890381]
[141.58793640 155.33439636]
[127.18205261 151.15463257]
[115.16154480 142.18205261]
[107.05760956 129.55960083]
[103.90264893 114.89752960]
[100.15599823 129.42208862]
[96.40935516 143.94664001]
[100.45445251 159.24198914]
[89.78342438 169.63325500]
[86.03677368 184.15780640]
[82.29013062 198.68235779]
[78.54347992 213.20690918]
[75.00090027 227.78257751]
[71.66308594 242.40649414]
[77.53458405 259.78890991]
[65.26447296 272.24890137]
[62.33811951 286.96066284]
[59.41176605 301.67245483]
[56.48540878 316.38424683]
[69.14393616 324.80029297]
[77.61404419 337.42272949]
[80.60411072 352.32669067]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 108]
[12 107]
[13 106]
[14 105]
[17 103]
[18 102]
[20 101]
[21 100]
[22 99]
[23 98]
[25 96]
[26 95]
[27 94]
[28 40]
[29 39]
[30 38]
[31 37]
[32 36]
[42 78]
[43 77]
[44 76]
[45 75]
[46 74]
[48 71]
[49 70]
[50 69]
[51 68]
[53 65]
[54 64]
[55 63]
[56 62]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
