%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 14:47:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGUUUUGAGAGGGUGGAUGGGUUACUUGCCCACCAGAAACAGCCCUAGUCCCAACUCCUUGCGUUCCUUUGGCCCCUCCCUGCCUACCUAGAAUCUGCCUGAAAGGGCUGGAGAGGGGCAGUAUUGGGGGACUGUGCUAGCUUUACCCCCGCAGGACAUACACAGGAGCCUUUGAUCUCAUUAAAGAGAUGUGAACCAGCUACUUGUG\
) } def
/len { sequence length } bind def

/coor [
[97.41551208 128.85346985]
[89.58264160 127.03110504]
[82.55260468 123.12553406]
[70.72633362 132.35263062]
[58.90006256 141.57972717]
[47.07379532 150.80683899]
[44.99791336 166.24472046]
[32.87294769 175.43383789]
[18.16807175 173.35966492]
[6.34180307 182.58676147]
[-0.16958882 199.81126404]
[-17.63100624 201.56222534]
[-29.31858635 210.96437073]
[-41.00616837 220.36653137]
[-52.69374847 229.76867676]
[-64.38133240 239.17082214]
[-75.56330109 249.16900635]
[-86.20931244 259.73605347]
[-90.09542084 268.00259399]
[-97.09336853 270.37969971]
[-107.89552307 280.78707886]
[-118.69767761 291.19445801]
[-129.49983215 301.60180664]
[-140.30198669 312.00918579]
[-142.03697205 327.95816040]
[-155.66470337 336.42364502]
[-170.73115540 330.91168213]
[-175.67861938 315.65054321]
[-166.71185303 302.34729004]
[-150.70936584 301.20703125]
[-139.90721130 290.79965210]
[-129.10505676 280.39227295]
[-118.30289459 269.98492432]
[-107.50074005 259.57754517]
[-96.77635956 249.09004211]
[-86.13035583 238.52299500]
[-101.13031769 238.55493164]
[-112.72171783 229.03445435]
[-115.60512543 214.31419373]
[-108.46227264 201.12406921]
[-94.55879211 195.49440002]
[-80.25115204 199.99900818]
[-72.08062744 212.57846069]
[-73.78347778 227.48324585]
[-62.09590149 218.08110046]
[-50.40831757 208.67893982]
[-38.72073746 199.27679443]
[-27.03315735 189.87464905]
[-25.41861916 177.88632202]
[-15.75845051 169.95758057]
[-2.88529539 170.76049805]
[8.94097424 161.53340149]
[10.50538921 146.76559448]
[22.36746597 137.23953247]
[37.84669495 138.98056030]
[49.67296600 129.75346375]
[61.49923325 120.52636719]
[73.32550812 111.29927063]
[74.56044769 86.14246368]
[95.02627563 71.46118164]
[96.36450958 56.52099609]
[97.70274353 41.58081055]
[99.04097748 26.64062500]
[100.37921143 11.70044041]
[96.31423950 26.13913727]
[86.02403259 37.05297089]
[71.84919739 41.95949173]
[57.01390839 39.74267578]
[44.89258575 30.90675735]
[38.24232101 17.46153450]
[38.57577133 2.46524215]
[45.81709671 -10.67109013]
[58.31919479 -18.95949173]
[73.23834229 -20.51469612]
[69.69866943 -35.09107208]
[66.15899658 -49.66744614]
[62.61932373 -64.24382019]
[59.07965469 -78.82019806]
[55.53998184 -93.39657593]
[52.00030899 -107.97294617]
[48.35222244 -122.52256775]
[44.59592056 -137.04463196]
[33.64931107 -148.46751404]
[37.95291519 -162.72683716]
[34.19661713 -177.24890137]
[30.44031525 -191.77095032]
[26.68401337 -206.29301453]
[12.39963150 -212.06039429]
[4.34440231 -224.98194885]
[5.42959976 -239.99148560]
[15.03001881 -251.34797668]
[11.27371883 -265.87005615]
[7.51741791 -280.39208984]
[-6.67405462 -286.95989990]
[-13.27682114 -301.13516235]
[-9.17325783 -316.22470093]
[3.69905925 -325.10375977]
[19.26221466 -323.57986450]
[30.16776276 -312.37258911]
[31.26643753 -296.77365112]
[22.03947639 -284.14840698]
[25.79577827 -269.62634277]
[29.55207825 -255.10427856]
[43.45496750 -249.82719421]
[51.68191528 -237.22634888]
[50.90240860 -222.01957703]
[41.20607376 -210.04931641]
[44.96237564 -195.52725220]
[48.71867371 -181.00520325]
[52.47497559 -166.48313904]
[63.15290833 -156.09896851]
[59.11798096 -140.80093384]
[62.87427902 -126.27886963]
[67.59262848 -120.59037781]
[66.57668304 -111.51261902]
[70.11635590 -96.93624878]
[73.65602875 -82.35987091]
[77.19570160 -67.78349304]
[80.73537445 -53.20711899]
[84.27504730 -38.63074493]
[87.81472015 -24.05436897]
[94.73846436 -21.17135239]
[92.80835724 -36.04665756]
[104.72576141 -45.15574265]
[118.57312775 -39.38940811]
[120.50290680 -24.51405907]
[108.58594513 -15.40531921]
[115.50968933 -12.52230167]
[128.34863281 -20.27869415]
[141.18757629 -28.03508568]
[154.02650452 -35.79147720]
[166.86544800 -43.54786682]
[168.06979370 -60.41931152]
[178.98463440 -73.12236023]
[195.15821838 -76.77984619]
[210.17277527 -70.14354706]
[222.89482117 -78.09023285]
[230.11424255 -92.81476593]
[246.49186707 -93.65471649]
[255.17979431 -79.74601746]
[247.24061584 -65.39673615]
[230.84149170 -65.36819458]
[218.11946106 -57.42151260]
[218.42578125 -44.07429123]
[212.04574585 -32.22358322]
[200.55168152 -25.01552391]
[186.88903809 -24.42347527]
[174.62184143 -30.70892715]
[161.78289795 -22.95253563]
[148.94395447 -15.19614410]
[136.10502625 -7.43975306]
[123.26608276 0.31663838]
[115.31939697 13.03867435]
[113.98116302 27.97885895]
[112.64292908 42.91904449]
[111.30469513 57.85923004]
[109.96646118 72.79941559]
[117.55554962 76.95645905]
[123.57829285 83.16948700]
[127.49733734 90.88416290]
[128.96302795 99.41217804]
[127.84456635 107.99263763]
[124.24176788 115.85997772]
[134.23994446 127.04195404]
[144.23811340 138.22392273]
[154.23628235 149.40589905]
[164.23445129 160.58787537]
[174.23262024 171.76985168]
[184.31376648 182.87709045]
[194.47731018 193.90896606]
[204.64085388 204.94084167]
[224.13417053 210.07632446]
[227.54679871 229.10894775]
[238.03430176 239.83332825]
[248.52178955 250.55770874]
[266.36462402 255.10911560]
[270.05050659 272.26666260]
[280.69650269 282.83370972]
[291.34252930 293.40075684]
[301.98852539 303.96780396]
[312.63452148 314.53485107]
[328.43579102 314.22540283]
[339.76971436 325.23983765]
[339.91207886 341.04348755]
[328.77844238 352.26031494]
[312.97418213 352.23559570]
[301.87567139 340.98397827]
[302.06747437 325.18084717]
[291.42147827 314.61380005]
[280.77548218 304.04675293]
[270.12945557 293.47970581]
[259.48345947 282.91265869]
[247.38987732 282.64410400]
[238.43403625 273.92767334]
[237.79740906 261.04519653]
[227.30992126 250.32083130]
[216.82241821 239.59645081]
[206.63594055 240.40187073]
[197.49572754 235.36154175]
[192.53637695 225.92834473]
[193.60897827 215.10438538]
[183.44543457 204.07250977]
[173.28189087 193.04063416]
[166.43783569 190.25123596]
[163.05064392 181.76802063]
[153.05247498 170.58604431]
[143.05430603 159.40406799]
[133.05613708 148.22210693]
[123.05796051 137.04013062]
[113.05979156 125.85815430]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 58]
[4 57]
[5 56]
[6 55]
[9 52]
[10 51]
[12 48]
[13 47]
[14 46]
[15 45]
[16 44]
[17 36]
[18 35]
[20 34]
[21 33]
[22 32]
[23 31]
[24 30]
[60 157]
[61 156]
[62 155]
[63 154]
[64 153]
[74 121]
[75 120]
[76 119]
[77 118]
[78 117]
[79 116]
[80 115]
[81 113]
[82 112]
[84 110]
[85 109]
[86 108]
[87 107]
[91 103]
[92 102]
[93 101]
[128 152]
[129 151]
[130 150]
[131 149]
[132 148]
[136 143]
[137 142]
[163 210]
[164 209]
[165 208]
[166 207]
[167 206]
[168 205]
[169 203]
[170 202]
[171 201]
[173 197]
[174 196]
[175 195]
[177 192]
[178 191]
[179 190]
[180 189]
[181 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
