%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 12:01:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCCUCCUGGGCAUGUUUGUCUGUGUGCUGUAACCUGAAGUCAAACCUUAAGAUAAUGGAUAAUCUUCGGCCAAUUUAUGCAGAGUCAGCCAUUCCUGUUCUCUUUGCCUUGAUGUUGUGUUGUUAUCAUUUAAGAUUUUUUUUUUUUGGUAAUUAUUUUGAGUGGCAAAAUAAAGAAUAGCAAUUA\
) } def
/len { sequence length } bind def

/coor [
[133.52400208 155.15922546]
[125.40453339 167.77168274]
[112.90703583 176.06703186]
[98.13136292 178.65145874]
[83.56011200 175.09075928]
[71.64155579 165.98318481]
[64.37825012 152.85897827]
[62.99058533 137.92330933]
[67.71171570 123.68565369]
[77.74839020 112.53822327]
[91.41353607 106.35417938]
[76.56300354 104.24189758]
[61.71247482 102.12960815]
[52.75628662 104.02143860]
[46.63346863 99.85681915]
[31.82009697 97.49798584]
[23.72195625 106.23262024]
[12.52465916 109.92725372]
[1.05438852 107.77146149]
[-7.85236597 100.41633606]
[-12.05021191 89.78389740]
[-26.77699280 86.93400574]
[-41.50377655 84.08410645]
[-56.23055649 81.23420715]
[-70.95733643 78.38431549]
[-85.68412018 75.53441620]
[-100.41090393 72.68452454]
[-115.13768005 69.83462524]
[-122.64437866 81.94985962]
[-133.81410217 90.75415039]
[-147.29084778 95.20463562]
[-161.44732666 94.78543854]
[-174.58155823 89.56736755]
[-185.12141418 80.19698334]
[-191.81280518 67.81652832]
[-193.86892700 53.92470932]
[-208.54629517 50.83042526]
[-223.22367859 47.73614502]
[-237.90104675 44.64186096]
[-252.57843018 41.54757690]
[-267.25579834 38.45329666]
[-276.61297607 50.46182632]
[-290.20071411 57.18942261]
[-305.30020142 57.34970474]
[-318.91595459 50.96444321]
[-328.37017822 39.34860992]
[-331.82913208 24.83995628]
[-346.50650024 21.74567223]
[-356.70477295 33.23005676]
[-371.28396606 38.06146240]
[-386.32238770 34.94026566]
[-397.77474976 24.70605850]
[-402.56042480 10.11178589]
[-399.39212036 -4.91676521]
[-389.12203979 -16.33698845]
[-374.51284790 -21.07690430]
[-359.49429321 -17.86149406]
[-348.10632324 -7.55569220]
[-343.41223145 7.06829548]
[-328.73486328 10.16257763]
[-319.71316528 -1.71490443]
[-306.37429810 -8.52550888]
[-291.33963013 -8.87068462]
[-277.58990479 -2.62842083]
[-267.87451172 9.01193810]
[-264.16152954 23.77591705]
[-249.48414612 26.87020111]
[-234.80676270 29.96448326]
[-220.12939453 33.05876541]
[-205.45201111 36.15304947]
[-190.77464294 39.24732971]
[-182.02923584 26.04246330]
[-168.85624695 17.17992592]
[-153.25384521 14.03963947]
[-137.60237122 17.13083649]
[-124.30126953 26.00973320]
[-115.40116882 39.34298706]
[-112.28778839 55.10784149]
[-97.56100464 57.95774078]
[-82.83422089 60.80763626]
[-68.10744476 63.65753174]
[-53.38066101 66.50743103]
[-38.65387726 69.35732269]
[-23.92709732 72.20722198]
[-9.20031548 75.05712128]
[5.30456591 63.91156006]
[23.66779709 66.94066620]
[34.17892838 82.68461609]
[48.99229813 85.04344940]
[63.82476044 87.27908325]
[78.67529297 89.39136505]
[93.52581787 91.50364685]
[108.51753235 92.00222015]
[123.47558594 90.88127136]
[138.43363953 89.76032257]
[151.61701965 81.01336670]
[164.88691711 87.77792358]
[179.84497070 86.65696716]
[194.80302429 85.53601837]
[209.76107788 84.41506958]
[224.71914673 83.29411316]
[239.67720032 82.17316437]
[254.63525391 81.05221558]
[271.54489136 67.90862274]
[289.76824951 77.57611847]
[304.65185547 75.71096039]
[319.53543091 73.84580231]
[334.41900635 71.98065186]
[349.30261230 70.11549377]
[364.18618774 68.25033569]
[367.05453491 54.20223236]
[374.11303711 41.74675751]
[384.65924072 32.09662628]
[397.65182495 26.18670464]
[411.81344604 24.58343315]
[425.75634766 27.43057823]
[438.11834717 34.43643570]
[447.69580078 44.90366364]
[453.56103516 57.79867935]
[468.47357178 56.18116760]
[483.38610840 54.56365585]
[488.96411133 50.95774460]
[494.66741943 50.75505829]
[498.82000732 53.14871216]
[513.77807617 52.02776337]
[528.73614502 50.90681076]
[543.69421387 49.78585815]
[558.65222168 48.66490555]
[573.61029053 47.54395676]
[588.56835938 46.42300415]
[596.77789307 33.38807678]
[610.92333984 27.75247955]
[625.50244141 31.48272514]
[634.97601318 42.94523239]
[649.93408203 41.82427979]
[664.89215088 40.70332718]
[679.85021973 39.58237839]
[693.08764648 29.90237236]
[707.97814941 36.77294540]
[709.20361328 53.12623596]
[695.50347900 62.13938522]
[680.97113037 54.54043579]
[666.01306152 55.66138458]
[651.05505371 56.78233719]
[636.09698486 57.90328979]
[628.43756104 70.64973450]
[614.57733154 76.51121521]
[599.74993896 73.04682922]
[589.68933105 61.38106155]
[574.73126221 62.50201416]
[559.77319336 63.62296295]
[544.81512451 64.74391937]
[529.85705566 65.86486816]
[514.89904785 66.98581696]
[499.94097900 68.10677338]
[485.00360107 69.47618866]
[470.09106445 71.09370422]
[455.17855835 72.71121216]
[451.61721802 88.03874207]
[443.01092529 101.24449921]
[430.38354492 110.72375488]
[415.24896240 115.31709290]
[399.42947388 114.45227814]
[384.83648682 108.21540070]
[373.23944092 97.34275055]
[366.05136108 83.13392639]
[351.16775513 84.99908447]
[336.28417969 86.86423492]
[321.40057373 88.72939301]
[306.51699829 90.59455109]
[291.63342285 92.45970154]
[287.38150024 100.29167175]
[279.88232422 105.35677338]
[270.75543213 106.40793610]
[262.04373169 103.08207703]
[255.75621033 96.01026917]
[240.79815674 97.13122559]
[225.84008789 98.25217438]
[210.88203430 99.37312317]
[195.92398071 100.49407959]
[180.96592712 101.61502838]
[166.00785828 102.73597717]
[153.89439392 111.40275574]
[139.55459595 104.71837616]
[124.59654236 105.83933258]
[109.63848114 106.96028137]
[122.86312866 114.03903961]
[132.13676453 125.82884979]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 92]
[12 91]
[13 90]
[15 89]
[16 88]
[21 85]
[22 84]
[23 83]
[24 82]
[25 81]
[26 80]
[27 79]
[28 78]
[36 71]
[37 70]
[38 69]
[39 68]
[40 67]
[41 66]
[47 60]
[48 59]
[93 186]
[94 185]
[95 184]
[97 182]
[98 181]
[99 180]
[100 179]
[101 178]
[102 177]
[103 176]
[105 171]
[106 170]
[107 169]
[108 168]
[109 167]
[110 166]
[119 158]
[120 157]
[121 156]
[124 155]
[125 154]
[126 153]
[127 152]
[128 151]
[129 150]
[130 149]
[134 145]
[135 144]
[136 143]
[137 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
