%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 08:09:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUUAUCUAACUGGUCUAAACUUCAAAUAUCAUUUUACCUUUGAAGAAAACCAGAAAACAUUCAAAAGAACUUCAACAAAUCAUCACGUAACAGGAUCUUCAGAAAAACUACCCUGUGACUAUGAAGAAAAUAUAUAUUGCUAGCCCAAAAAUCCCAGGGGCAAAAUAAAGUUCAACAAAAGUGCAAAAUAUGACAAAAAUAGGUACAUUUUUGGUGCCAAUUUAUUUUAAAUUAAAAAAUAUGCAAUCCUGAA\
) } def
/len { sequence length } bind def

/coor [
[38.25469589 229.86596680]
[28.61785316 249.05836487]
[15.47030354 266.03506470]
[-0.69552296 280.16244507]
[-19.27457237 290.91351318]
[-39.57181549 297.88763428]
[-60.82823944 300.82543945]
[-82.24924469 299.61846924]
[-103.03433228 294.31317139]
[-122.40703583 285.10913086]
[-139.64392090 272.35153198]
[-150.41259766 282.79354858]
[-161.18127441 293.23556519]
[-171.94995117 303.67758179]
[-182.71862793 314.11956787]
[-179.34289551 326.12252808]
[-181.36784363 338.35260010]
[-188.35038757 348.50823975]
[-198.92044067 354.70465088]
[-211.04928589 355.82348633]
[-222.43891907 351.71414185]
[-233.46159363 361.88766479]
[-244.48426819 372.06118774]
[-255.50694275 382.23471069]
[-266.52960205 392.40823364]
[-277.55227661 402.58175659]
[-288.57495117 412.75531006]
[-284.06533813 427.33700562]
[-286.33758545 442.43002319]
[-294.94052124 455.03765869]
[-308.16604614 462.65664673]
[-323.38818359 463.77420044]
[-337.58459473 458.16845703]
[-347.93658447 446.95242310]
[-352.38873291 432.35305786]
[-350.05706787 417.26910400]
[-341.40457153 404.69543457]
[-328.14913940 397.12860107]
[-312.92272949 396.07101440]
[-298.74847412 401.73263550]
[-287.72579956 391.55908203]
[-276.70312500 381.38555908]
[-265.68045044 371.21203613]
[-254.65779114 361.03851318]
[-243.63511658 350.86499023]
[-232.61244202 340.69146729]
[-235.47789001 323.24331665]
[-227.20402527 307.43853760]
[-210.94786072 299.71627808]
[-193.16064453 303.35089111]
[-182.39195251 292.90887451]
[-171.62327576 282.46688843]
[-160.85459900 272.02487183]
[-150.08592224 261.58285522]
[-155.99044800 253.96821594]
[-161.21215820 245.86938477]
[-165.71156311 237.34741211]
[-169.45460510 228.46656799]
[-172.41294861 219.29383850]
[-174.56419373 209.89839172]
[-175.89196777 200.35113525]
[-176.38619995 190.72409058]
[-176.04302979 181.08988953]
[-174.86494446 171.52125549]
[-172.86074829 162.09039307]
[-170.04545593 152.86851501]
[-166.44023132 143.92521667]
[-162.07217407 135.32803345]
[-156.97416687 127.14189911]
[-151.18460083 119.42863464]
[-144.74705505 112.24649811]
[-137.71006775 105.64977264]
[-130.12666321 99.68830109]
[-122.05400085 94.40715790]
[-113.55294800 89.84626770]
[-104.68761444 86.04015350]
[-95.52485657 83.01761627]
[-86.13378143 80.80156708]
[-76.58525085 79.40882874]
[-66.95129395 78.85000610]
[-57.30460739 79.12941742]
[-47.71799850 80.24505615]
[-38.26381302 82.18860626]
[-29.01342583 84.94548798]
[-20.03666496 88.49501038]
[-11.40131378 92.81046295]
[-3.17257881 97.85938263]
[4.58738804 103.60375214]
[11.81996822 110.00029755]
[18.47051620 117.00082397]
[24.48876953 124.55258179]
[29.82923698 132.59863281]
[43.17329788 125.74764252]
[56.51735687 118.89665222]
[69.86141968 112.04566193]
[83.20547485 105.19467163]
[88.53784180 91.17447662]
[83.11921692 77.18739319]
[77.70059204 63.20030975]
[72.28196716 49.21322632]
[66.86334229 35.22614288]
[61.44471359 21.23906136]
[46.27539825 19.95330238]
[33.22180176 12.24028301]
[24.84578705 -0.32405365]
[22.76411819 -15.21793365]
[27.33663368 -29.47982407]
[37.60540009 -40.29730988]
[32.18677521 -54.28439331]
[17.62968826 -60.43799591]
[11.76503181 -75.11386871]
[18.07219696 -89.60507965]
[32.80925751 -95.31424713]
[47.23297501 -88.85422516]
[52.78601456 -74.05763245]
[46.17385864 -59.70301819]
[51.59248352 -45.71593475]
[66.46887970 -44.63973618]
[79.45618439 -37.18055725]
[87.95175171 -24.77143669]
[90.22634125 -9.84339428]
[85.77584839 4.65074539]
[75.43180084 15.82043552]
[80.85042572 29.80751991]
[86.26905060 43.79460144]
[91.68767548 57.78168488]
[97.10630035 71.76876831]
[102.52492523 85.75585175]
[98.57469940 71.28533936]
[102.70118713 56.86410522]
[113.70797729 46.67338943]
[128.40377808 43.66785812]
[142.52775574 48.71892548]
[151.98484802 60.36210251]
[154.03308105 75.22160339]
[148.07861328 88.98910522]
[135.84785461 97.67292023]
[120.88935089 98.75576782]
[135.88223267 99.21768951]
[150.87512207 99.67961884]
[165.86801147 100.14154053]
[178.25683594 77.82020569]
[202.71783447 67.61737823]
[229.17384338 75.04283142]
[237.99061584 62.90757751]
[246.80740356 50.77232361]
[255.62417603 38.63706589]
[248.78378296 24.94518471]
[249.10145569 9.64297295]
[256.50418091 -3.75323057]
[269.29086304 -12.16507626]
[284.52322388 -13.65958405]
[298.70098877 -7.89332628]
[308.56619263 3.80865264]
[311.85189819 18.75732422]
[307.80307007 33.51759338]
[297.35009766 44.69765472]
[282.89498901 49.72841644]
[267.75942993 47.45384598]
[258.94265747 59.58909988]
[250.12586975 71.72435760]
[241.30909729 83.85961151]
[247.32562256 97.60011292]
[262.22299194 99.35170746]
[277.12039185 101.10329437]
[292.01776123 102.85488892]
[306.91513062 104.60647583]
[321.81253052 106.35807037]
[336.70989990 108.10965729]
[351.60726929 109.86125183]
[362.92227173 97.27079773]
[379.35110474 93.94877625]
[394.36776733 101.01231384]
[402.12747192 115.49282837]
[417.04528809 117.06075287]
[431.57864380 110.80834961]
[443.42742920 119.83362579]
[458.34524536 121.40155792]
[473.26306152 122.96948242]
[488.18090820 124.53740692]
[503.09872437 126.10533905]
[518.01654053 127.67326355]
[532.93438721 129.24119568]
[547.85223389 130.80911255]
[555.46539307 119.09266663]
[567.32415771 111.82889557]
[581.08898926 110.38407135]
[594.07293701 114.98300171]
[603.76605225 124.67630005]
[608.32055664 137.53570557]
[623.21789551 139.28729248]
[638.11529541 141.03887939]
[649.37219238 130.18453979]
[664.97595215 129.15698242]
[677.55902100 138.44140625]
[681.18005371 153.65397644]
[674.12927246 167.61178589]
[659.73583984 173.72439575]
[644.79595947 169.10559082]
[636.36370850 155.93626404]
[621.46630859 154.18467712]
[606.56896973 152.43309021]
[597.21887207 165.62797546]
[582.40173340 172.33837891]
[566.13000488 170.64294434]
[552.86285400 160.91091919]
[546.28430176 145.72694397]
[531.36645508 144.15901184]
[516.44860840 142.59109497]
[501.53079224 141.02316284]
[486.61297607 139.45524597]
[471.69515991 137.88731384]
[456.77731323 136.31938171]
[441.85949707 134.75146484]
[428.39315796 141.11601257]
[415.47735596 131.97859192]
[400.55953979 130.41065979]
[392.59713745 141.10777283]
[380.29296875 146.52357483]
[366.81137085 145.14855957]
[355.67758179 137.23495483]
[349.85568237 124.75862885]
[334.95831299 123.00703430]
[320.06094360 121.25544739]
[305.16354370 119.50386047]
[290.26617432 117.75226593]
[275.36877441 116.00067902]
[260.47140503 114.24908447]
[245.57403564 112.49749756]
[243.79301453 120.47929382]
[240.53877258 127.91954041]
[235.95195007 134.55139160]
[230.22053528 140.14160156]
[223.57214355 144.49874878]
[216.26515198 147.47973633]
[208.57858276 148.99438477]
[200.80148315 149.00810242]
[193.22210693 147.54226685]
[186.11715698 144.67274475]
[179.74172974 140.52619934]
[174.32014465 135.27467346]
[170.03811646 129.12854004]
[167.03636169 122.32815552]
[165.40608215 115.13442993]
[150.41319275 114.67250061]
[135.42031860 114.21057892]
[120.42742920 113.74864960]
[90.05646515 118.53873444]
[76.71240997 125.38972473]
[63.36834717 132.24070740]
[50.02428436 139.09170532]
[36.68022537 145.94268799]
[43.21861267 166.41383362]
[45.69543839 187.75706482]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 54]
[12 53]
[13 52]
[14 51]
[15 50]
[21 46]
[22 45]
[23 44]
[24 43]
[25 42]
[26 41]
[27 40]
[92 252]
[93 251]
[94 250]
[95 249]
[96 248]
[97 128]
[98 127]
[99 126]
[100 125]
[101 124]
[102 123]
[108 117]
[109 116]
[138 247]
[139 246]
[140 245]
[141 244]
[144 162]
[145 161]
[146 160]
[147 159]
[163 229]
[164 228]
[165 227]
[166 226]
[167 225]
[168 224]
[169 223]
[170 222]
[174 217]
[175 216]
[177 214]
[178 213]
[179 212]
[180 211]
[181 210]
[182 209]
[183 208]
[184 207]
[190 202]
[191 201]
[192 200]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
