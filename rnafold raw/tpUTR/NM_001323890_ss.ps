%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 02:05:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAAUACAGUCCUUAUUUGUAUAACAAAUGUGAGAUAUUUGAAAAUAUUUUACCAUUAUACAUCAUGUGGACUUAUUUUAUAUUAAAGAAGAUUAUAUUUUGGCUAAGAAACGGAA\
) } def
/len { sequence length } bind def

/coor [
[203.57945251 220.27159119]
[208.30969238 206.00825500]
[215.06639099 192.58569336]
[202.79183960 183.96388245]
[190.51730347 175.34207153]
[178.24276733 166.72026062]
[165.96821594 158.09844971]
[158.59181213 156.81228638]
[153.48583984 149.08015442]
[141.44515991 140.13464355]
[129.40447998 131.18913269]
[117.36380768 122.24361420]
[105.32313538 113.29810333]
[91.45766449 111.49799347]
[85.73135376 98.74256897]
[73.69068146 89.79705811]
[61.65000534 80.85154724]
[43.36837006 79.21686554]
[36.92010117 62.95456314]
[24.64556122 54.33275223]
[12.37101936 45.71093750]
[0.09647735 37.08912659]
[-12.17806435 28.46731758]
[-24.45260620 19.84550667]
[-36.72714615 11.22369480]
[-46.65446091 15.70570087]
[-57.46459579 15.59259319]
[-67.14887238 10.97397327]
[-73.93668365 2.77026010]
[-76.61912537 -7.44989061]
[-74.76390076 -17.76929092]
[-86.31140900 -27.34295464]
[-97.85891724 -36.91661835]
[-109.40642548 -46.49028015]
[-120.95393372 -56.06394196]
[-132.50144958 -65.63760376]
[-144.04895020 -75.21126556]
[-155.59646606 -84.78492737]
[-167.14398193 -94.35859680]
[-178.69148254 -103.93225861]
[-194.94006348 -106.14942932]
[-200.89289856 -121.42999268]
[-190.42623901 -134.05461121]
[-174.30728149 -131.03616333]
[-169.11782837 -115.47976685]
[-157.57031250 -105.90610504]
[-146.02279663 -96.33244324]
[-134.47529602 -86.75877380]
[-122.92778015 -77.18511200]
[-111.38027191 -67.61145020]
[-99.83276367 -58.03778839]
[-88.28525543 -48.46412659]
[-76.73774719 -38.89046478]
[-65.19023132 -29.31680107]
[-46.11268234 -32.66964722]
[-30.35792351 -20.89304352]
[-28.10533714 -1.05084693]
[-15.83079433 7.57096434]
[-3.55625319 16.19277573]
[8.71828842 24.81458664]
[20.99283028 33.43639755]
[33.26737213 42.05820847]
[45.54191208 50.68001938]
[57.59040833 48.91735458]
[67.91072083 56.10968399]
[70.59551239 68.81087494]
[82.63619232 77.75638580]
[94.67686462 86.70189667]
[108.54233551 88.50200653]
[114.26864624 101.25743103]
[126.30931854 110.20294189]
[138.34999084 119.14845276]
[150.39067078 128.09396362]
[162.43135071 137.03947449]
[174.59002686 145.82391357]
[186.86457825 154.44572449]
[199.13911438 163.06753540]
[211.41365051 171.68934631]
[223.68820190 180.31115723]
[234.02267456 169.40168762]
[245.83549500 160.11326599]
[258.87490845 152.64385986]
[272.86291504 147.15269470]
[287.50143433 143.75680542]
[302.47839355 142.52859497]
[317.47457886 143.49421692]
[332.17031860 146.63310242]
[346.25241089 151.87835693]
[359.42068481 159.11814880]
[371.39443970 168.19818115]
[381.91845703 178.92491150]
[390.76843262 191.06968689]
[397.75573730 204.37365723]
[402.73141479 218.55325317]
[405.58938599 233.30619812]
[406.26879883 248.31806946]
[404.75509644 263.26889038]
[401.08059692 277.83993530]
[395.32360840 291.72067261]
[387.60684204 304.61523438]
[378.09475708 316.24871826]
[366.99014282 326.37322998]
[354.52966309 334.77288818]
[340.97894287 341.26870728]
[326.62680054 345.72222900]
[311.77914429 348.03848267]
[296.75247192 348.16815186]
[281.86706543 346.10842896]
[267.44018555 341.90322876]
[253.77940369 335.64218140]
[241.17585754 327.45877075]
[229.89817810 317.52740479]
[220.18679810 306.05978394]
[212.24867249 293.30029297]
[206.25302124 279.52096558]
[202.32763672 265.01547241]
[200.55619812 250.09301758]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 79]
[4 78]
[5 77]
[6 76]
[7 75]
[9 74]
[10 73]
[11 72]
[12 71]
[13 70]
[15 68]
[16 67]
[17 66]
[19 63]
[20 62]
[21 61]
[22 60]
[23 59]
[24 58]
[25 57]
[31 54]
[32 53]
[33 52]
[34 51]
[35 50]
[36 49]
[37 48]
[38 47]
[39 46]
[40 45]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
