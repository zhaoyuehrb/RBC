%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 14:39:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCGCCUGGCAGCCAUUGCAGAGUCAGGGGUAGAGCGGCAAGUACUUUUGGGAGACCAGAUACCCAAAUUCGCCGUUGCCACUUUACCACCCGCCUGAAUCCUGGGAUUCUAGUAUGCAAUAAGAGAUGCCCUGUACUGAUGCAAAAUUUAAUAAAGUUUGUCACAGAGAAUCUUUGUA\
) } def
/len { sequence length } bind def

/coor [
[177.32986450 336.83261108]
[165.55232239 329.82827759]
[155.98860168 319.99688721]
[149.29951477 308.00823975]
[145.94970703 294.68151855]
[146.17543030 280.92929077]
[149.96781921 267.69512939]
[157.07310486 255.88867188]
[167.00955200 246.32327271]
[159.96748352 233.07905579]
[152.92541504 219.83483887]
[141.43789673 215.98924255]
[135.46879578 204.98915100]
[138.70596313 192.48489380]
[131.89610291 179.11979675]
[119.22406006 171.29237366]
[119.85289764 155.48367310]
[113.04303741 142.11857605]
[106.23317719 128.75347900]
[99.42332458 115.38837433]
[89.28946686 104.32921600]
[76.56874847 96.38042450]
[60.76539230 95.62905121]
[54.07220078 82.32302094]
[41.35147858 74.37423706]
[28.63075638 66.42544556]
[15.91003513 58.47665787]
[3.18931341 50.52786636]
[-9.86602211 43.14151382]
[-23.23111916 36.33165741]
[-36.59621811 29.52179909]
[-49.96131516 22.71194077]
[-63.32641220 15.90208340]
[-76.69151306 9.09222603]
[-90.05661011 2.28236866]
[-105.86531067 2.91120648]
[-113.69273376 -9.76083946]
[-127.05783081 -16.57069588]
[-140.42292786 -23.38055420]
[-153.78802490 -30.19041061]
[-167.15312195 -37.00027084]
[-180.63504028 -43.57583618]
[-194.22966003 -49.91511154]
[-207.76618958 -42.56198883]
[-222.86045837 -44.56612396]
[-233.75148010 -54.95118332]
[-236.40721130 -69.58283234]
[-250.00183105 -75.92210388]
[-263.59643555 -82.26137543]
[-277.19107056 -88.60065460]
[-290.78567505 -94.93992615]
[-304.38031006 -101.27919769]
[-316.91537476 -92.40409088]
[-332.21008301 -91.00154114]
[-346.15023804 -97.44882965]
[-354.98602295 -110.01165771]
[-356.34063721 -125.31069946]
[-349.84967041 -139.23059082]
[-337.25921631 -148.02693176]
[-321.95599365 -149.33357239]
[-308.05651855 -142.79902649]
[-299.29968262 -130.18104553]
[-298.04101562 -114.87381744]
[-284.44641113 -108.53453827]
[-270.85177612 -102.19526672]
[-257.25717163 -95.85599518]
[-243.66255188 -89.51672363]
[-230.06793213 -83.17744446]
[-217.15237427 -90.54808044]
[-202.19635010 -88.88045502]
[-190.95867920 -78.60581207]
[-187.89038086 -63.50972748]
[-174.29576111 -57.17045212]
[-169.55714417 -57.94414902]
[-164.28503418 -55.72958755]
[-160.34326172 -50.36536789]
[-146.97816467 -43.55550766]
[-133.61306763 -36.74565125]
[-120.24797821 -29.93579483]
[-106.88288116 -23.12593651]
[-92.03013611 -24.24186134]
[-83.24674988 -11.08272934]
[-69.88165283 -4.27287197]
[-56.51655579 2.53698564]
[-43.15145874 9.34684372]
[-29.78635979 16.15670013]
[-16.42126274 22.96655846]
[-3.05616474 29.77641487]
[-4.97800922 14.90004158]
[5.32504320 3.99833918]
[20.28614998 5.07781553]
[28.91746902 17.34567451]
[24.87992096 31.79206467]
[11.13810253 37.80714417]
[23.85882378 45.75593567]
[36.57954407 53.70472336]
[49.30026627 61.65351105]
[62.02098846 69.60230255]
[76.91447449 69.78512573]
[84.51753998 83.65970612]
[97.23825836 91.60849762]
[99.08482361 87.44120026]
[102.80575562 83.89262390]
[108.15622711 81.62074280]
[120.59178925 73.23284912]
[133.02735901 64.84495544]
[136.16497803 49.58739471]
[148.89588928 41.25802612]
[163.42230225 44.34329605]
[175.85786438 35.95540237]
[188.29344177 27.56751060]
[191.43106079 12.30995178]
[204.16197205 3.98058438]
[218.68838501 7.06585455]
[231.12394714 -1.32203901]
[243.55950928 -9.70993233]
[253.30967712 -23.57970619]
[269.33654785 -18.05011559]
[268.45971680 -1.11885667]
[251.94740295 2.72563100]
[239.51184082 11.11352444]
[227.07627869 19.50141907]
[224.49520874 34.12583542]
[212.00326538 42.80950165]
[196.68133545 40.00307465]
[184.24575806 48.39096832]
[171.81019592 56.77886200]
[169.22912598 71.40328217]
[156.73718262 80.08694458]
[141.41525269 77.28051758]
[128.97969055 85.66841125]
[116.54412079 94.05630493]
[112.78842163 108.57852173]
[119.59827423 121.94361877]
[126.40813446 135.30871582]
[133.21798706 148.67381287]
[146.37712097 157.45719910]
[145.26119995 172.30993652]
[152.07106018 185.67503357]
[167.73834229 195.32600403]
[166.16963196 212.79277039]
[173.21170044 226.03697205]
[180.25376892 239.28118896]
[196.39991760 236.24916077]
[212.67614746 238.33833313]
[227.49948120 245.33395386]
[239.43180847 256.54467773]
[247.31941223 270.87078857]
[250.40449524 286.91217041]
[248.39799500 303.10510254]
[241.50660706 317.87460327]
[230.41159058 329.78781128]
[237.91159058 342.77819824]
[245.41159058 355.76858521]
[252.91159058 368.75897217]
[260.41159058 381.74932861]
[267.91159058 394.73971558]
[281.51239014 402.82238770]
[281.17532349 417.71316528]
[288.67532349 430.70355225]
[302.27609253 438.78619385]
[301.93902588 453.67697144]
[309.43902588 466.66735840]
[322.59487915 477.36129761]
[315.96078491 492.96337891]
[299.13192749 490.90762329]
[296.44866943 474.16735840]
[288.94866943 461.17697144]
[275.88433838 454.02349854]
[275.68493652 438.20355225]
[268.18493652 425.21316528]
[255.12060547 418.05966187]
[254.92121887 402.23971558]
[247.42121887 389.24932861]
[239.92121887 376.25897217]
[232.42121887 363.26858521]
[224.92121887 350.27819824]
[217.42121887 337.28781128]
[204.18641663 340.68811035]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 143]
[10 142]
[11 141]
[14 139]
[15 138]
[17 136]
[18 135]
[19 134]
[20 133]
[21 101]
[22 100]
[24 98]
[25 97]
[26 96]
[27 95]
[28 94]
[29 88]
[30 87]
[31 86]
[32 85]
[33 84]
[34 83]
[35 82]
[37 80]
[38 79]
[39 78]
[40 77]
[41 76]
[42 73]
[43 72]
[47 68]
[48 67]
[49 66]
[50 65]
[51 64]
[52 63]
[104 132]
[105 131]
[106 130]
[109 127]
[110 126]
[111 125]
[114 122]
[115 121]
[116 120]
[152 178]
[153 177]
[154 176]
[155 175]
[156 174]
[157 173]
[159 171]
[160 170]
[162 168]
[163 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
