%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 03:58:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAAGAUCCAGCCGGCCUUGGGAGCCUGGAGGAGCAAAGACUGGGGUCUUUUGCGAAAGGGAUUGCAGGUUCAGAAGGCAUCUUACCAUGGCUGGGGAAUUGUCUGGUGGUGGGGGGCAGGGGACAGAGGCCAUGAAGGAGCAAGUUUUGUAUUUGUGACCUCAGCUUUGGGAAUAAAGGAUCUUUUGAAGGCCAA\
) } def
/len { sequence length } bind def

/coor [
[163.92501831 301.38470459]
[172.62980652 288.88885498]
[185.66792297 281.01943970]
[183.76902771 266.14010620]
[181.87014771 251.26078796]
[179.97125244 236.38146973]
[178.07237244 221.50215149]
[176.17347717 206.62281799]
[174.27459717 191.74349976]
[172.37570190 176.86418152]
[142.69165039 160.42588806]
[140.06475830 130.87414551]
[126.95701599 123.58119965]
[113.84927368 116.28824615]
[89.16422272 123.40747833]
[69.79238129 99.97156525]
[54.80937195 100.68529510]
[39.82636261 101.39902496]
[24.84335136 102.11275482]
[9.86034203 102.82648468]
[-0.74178922 114.23842621]
[-15.94685936 114.74880981]
[-26.76107025 104.57097626]
[-41.74407959 105.28470612]
[-56.72709274 105.99842834]
[-71.71009827 106.71215820]
[-86.69310760 107.42588806]
[-101.67612457 108.13961792]
[-116.65913391 108.85334778]
[-130.07551575 117.23851776]
[-143.15652466 110.11557007]
[-158.13954163 110.82929993]
[-171.79602051 128.68191528]
[-193.91482544 130.59831238]
[-210.03343201 115.73374176]
[-224.88075256 117.86846161]
[-239.72807312 120.00318909]
[-254.57539368 122.13790894]
[-269.42272949 124.27262878]
[-284.25262451 126.52507782]
[-299.06420898 128.89509583]
[-313.87579346 131.26512146]
[-326.25582886 142.01997375]
[-341.66955566 136.42089844]
[-344.26062012 120.22774506]
[-331.36361694 110.09863281]
[-316.24581909 116.45352936]
[-301.43423462 114.08351135]
[-286.62265015 111.71349335]
[-280.50802612 107.54790497]
[-271.55743408 109.42530823]
[-256.71011353 107.29058838]
[-241.86279297 105.15586853]
[-227.01547241 103.02114105]
[-212.16815186 100.88642120]
[-209.99421692 93.15194702]
[-205.62501526 86.36947632]
[-199.42970276 81.14873505]
[-191.94264221 77.96595001]
[-183.81726074 77.12046051]
[-175.76905823 78.70666504]
[-168.51261902 82.60396576]
[-162.69815063 88.48566437]
[-158.85327148 95.84629059]
[-143.87025452 95.13256073]
[-131.52555847 86.79843903]
[-117.37286377 93.87033844]
[-102.38984680 93.15660858]
[-87.40683746 92.44287872]
[-72.42382812 91.72914886]
[-57.44081879 91.01541901]
[-42.45780945 90.30168915]
[-27.47480011 89.58796692]
[-17.67702103 78.42825317]
[-2.49228549 77.49098969]
[9.14661312 87.84346771]
[24.12962341 87.12974548]
[39.11263275 86.41601562]
[54.09564209 85.70228577]
[69.07865143 84.98855591]
[54.24984741 82.72879791]
[44.76443481 71.10868073]
[45.51975632 56.12771225]
[56.12583923 45.52059174]
[71.10673523 44.76379776]
[82.72777557 54.24806595]
[84.98855591 69.07865143]
[85.70228577 54.09564209]
[86.41601562 39.11263275]
[87.12974548 24.12962341]
[80.05784607 9.97692585]
[88.39196777 -2.36777449]
[89.10569763 -17.35078430]
[89.81942749 -32.33379364]
[90.53315735 -47.31680298]
[91.24688721 -62.29981613]
[91.96060944 -77.28282166]
[81.14557648 -88.80716705]
[81.73062897 -104.60062408]
[93.36866760 -115.29321289]
[109.15505981 -114.54122162]
[119.72400665 -102.79077911]
[118.80514526 -87.01322174]
[106.94361877 -76.56909943]
[106.22989655 -61.58608627]
[105.51616669 -46.60307693]
[104.80243683 -31.62006569]
[104.08870697 -16.63705635]
[103.37497711 -1.65404582]
[110.49792480 11.42696571]
[102.11275482 24.84335136]
[101.39902496 39.82636261]
[100.68529510 54.80937195]
[99.97156525 69.79238129]
[114.77603912 77.08589935]
[122.16516876 89.98524475]
[121.14222717 103.18050385]
[134.24996948 110.47345734]
[147.35771179 117.76640320]
[154.72120667 110.67893219]
[164.44297791 106.29634094]
[175.51432800 105.39566803]
[186.67585754 108.37435150]
[196.56066895 115.17209625]
[203.86071777 125.24655914]
[207.49609375 137.60925293]
[221.41728210 130.09187317]
[234.02020264 138.03013611]
[249.01831055 138.26811218]
[264.01641846 138.50610352]
[279.01452637 138.74409485]
[294.01263428 138.98208618]
[299.98156738 136.09907532]
[305.65628052 136.59652710]
[309.48083496 139.47311401]
[324.46383667 140.18684387]
[339.44683838 140.90055847]
[348.17843628 138.18084717]
[354.66134644 141.74635315]
[369.63116455 142.69770813]
[385.92944336 134.13813782]
[400.15325928 144.40899658]
[415.13626099 145.12272644]
[430.11926270 145.83645630]
[445.10229492 146.55018616]
[460.08529663 147.26391602]
[475.06829834 147.97764587]
[487.85879517 138.29350281]
[503.36871338 142.39501953]
[509.70013428 157.13586426]
[501.99615479 171.20812988]
[486.16662598 173.81675720]
[474.35458374 162.96066284]
[459.37155151 162.24693298]
[444.38854980 161.53320312]
[429.40554810 160.81947327]
[414.42254639 160.10574341]
[399.43951416 159.39201355]
[390.27444458 167.29707336]
[377.77941895 166.81843567]
[368.67980957 157.66751099]
[353.70999146 156.71614075]
[338.73312378 155.88357544]
[323.75012207 155.16984558]
[308.76708984 154.45611572]
[293.77465820 153.98019409]
[278.77655029 153.74220276]
[263.77844238 153.50422668]
[248.78031921 153.26623535]
[233.78221130 153.02824402]
[220.93377686 160.56263733]
[207.25810242 152.60736084]
[202.25733948 158.19683838]
[217.23326111 159.04620361]
[225.90669250 171.28433228]
[221.74649048 185.69589233]
[207.88531494 191.42892456]
[194.76065063 184.16647339]
[192.25579834 169.37580872]
[187.25503540 174.96528625]
[189.15391541 189.84461975]
[191.05281067 204.72393799]
[192.95169067 219.60325623]
[194.85057068 234.48257446]
[196.74946594 249.36190796]
[198.64834595 264.24121094]
[200.54724121 279.12054443]
[215.14384460 283.46325684]
[226.70794678 293.37240601]
[233.23599243 307.13119507]
[233.59696960 322.35583496]
[227.72831726 336.40856934]
[216.64683533 346.85464478]
[202.27244568 351.88424683]
[187.09561157 350.62594604]
[173.74578857 343.29776001]
[164.53593445 331.16934204]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 187]
[4 186]
[5 185]
[6 184]
[7 183]
[8 182]
[9 181]
[10 180]
[12 119]
[13 118]
[14 117]
[16 80]
[17 79]
[18 78]
[19 77]
[20 76]
[23 73]
[24 72]
[25 71]
[26 70]
[27 69]
[28 68]
[29 67]
[31 65]
[32 64]
[35 55]
[36 54]
[37 53]
[38 52]
[39 51]
[40 49]
[41 48]
[42 47]
[87 114]
[88 113]
[89 112]
[90 111]
[92 109]
[93 108]
[94 107]
[95 106]
[96 105]
[97 104]
[126 172]
[128 170]
[129 169]
[130 168]
[131 167]
[132 166]
[135 165]
[136 164]
[137 163]
[139 162]
[140 161]
[142 158]
[143 157]
[144 156]
[145 155]
[146 154]
[147 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
