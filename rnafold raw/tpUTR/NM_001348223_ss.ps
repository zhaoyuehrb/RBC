%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 10:01:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAGAUAAACACAGAACCUACUCAUAUUUUAACAACAGGUAUGACUAAUGAAAAGGGUAAAGGUCUUGAGGUCAGAAUAGUGAGUUUAAGUAUAUUUUAUUCCCCUCAUUUUCUGGAAUCUUUAAUGAUGCCUUUUCAUAAAAGAUCAAUAUCUGAUUAAAUGAUGACUAAUGUUUCUGCCAAUUUG\
) } def
/len { sequence length } bind def

/coor [
[84.85021210 653.08679199]
[69.79088593 654.14477539]
[55.00479507 651.09948730]
[41.58915329 644.17681885]
[30.53949356 633.89056396]
[22.67577744 621.00396729]
[18.58154106 606.47326660]
[18.56060600 591.37689209]
[22.61452675 576.83489990]
[30.44247246 563.92657471]
[41.46356201 553.60968018]
[54.85995102 546.64984131]
[69.63754272 543.56353760]
[70.63414001 528.59667969]
[71.63073730 513.62982178]
[72.62733459 498.66293335]
[73.62393188 483.69610596]
[66.74932098 470.48287964]
[75.38640594 457.22726440]
[61.31578064 446.58004761]
[56.39609909 429.47134399]
[62.77333450 412.68276978]
[78.07627869 402.98687744]
[78.57485199 387.99514771]
[79.07342529 373.00344849]
[79.57199860 358.01171875]
[69.23996735 347.34472656]
[69.53202820 332.13391113]
[80.79061127 321.36904907]
[81.28918457 306.37734985]
[81.78775787 291.38562012]
[82.28633118 276.39392090]
[82.78490448 261.40219116]
[75.14567566 254.58103943]
[72.47588348 244.46624756]
[75.89402771 234.34695435]
[84.49717712 227.65264893]
[85.49377441 212.68579102]
[86.49037170 197.71893311]
[87.48696899 182.75207520]
[88.48356628 167.78521729]
[89.48015594 152.81835938]
[90.47675323 137.85150146]
[91.34893036 122.87687683]
[92.09661865 107.89552307]
[92.71976471 92.90847778]
[93.21834564 77.91676331]
[82.92196655 60.60063171]
[93.79960632 44.62751007]
[93.79960632 29.62751007]
[93.79960632 14.62751102]
[93.79960632 -0.37248901]
[93.79960632 -15.37248898]
[93.79960632 -30.37248993]
[93.79960632 -45.37248993]
[93.79960632 -60.37248993]
[93.79960632 -75.37248993]
[79.73499298 -78.94837189]
[66.94715881 -85.78919220]
[56.18069839 -95.49148560]
[48.06127167 -107.48530579]
[43.05924988 -121.06774139]
[41.46246338 -135.44409180]
[43.35964584 -149.77432251]
[48.63550568 -163.22225952]
[56.97773743 -175.00425720]
[67.89549255 -184.43493652]
[80.74826813 -190.96704102]
[94.78347015 -194.22315979]
[95.03279114 -209.22108459]
[84.32479095 -220.53375244]
[84.79129028 -235.74023438]
[95.64218140 -245.87896729]
[95.89150238 -260.87689209]
[96.14082336 -275.87481689]
[96.39014435 -290.87274170]
[96.63946533 -305.87066650]
[96.88878632 -320.86859131]
[93.89799500 -329.52005005]
[97.26896667 -336.11318970]
[97.76753998 -351.10488892]
[98.26611328 -366.09661865]
[98.76468658 -381.08831787]
[99.26325989 -396.08004761]
[99.76183319 -411.07174683]
[88.27823639 -418.71459961]
[82.12389374 -430.93890381]
[82.81285858 -444.49923706]
[90.05799866 -455.85421753]
[101.87401581 -462.09146118]
[102.62170410 -477.07281494]
[103.36939240 -492.05416870]
[104.11708069 -507.03552246]
[94.46195221 -519.84796143]
[98.59861755 -535.34851074]
[113.35377502 -541.64654541]
[127.40853882 -533.91064453]
[129.98129272 -518.07525635]
[119.09843445 -506.28784180]
[118.35074615 -491.30648804]
[117.60305786 -476.32513428]
[116.85536957 -461.34378052]
[129.95739746 -451.46804810]
[134.64476013 -435.57153320]
[128.88273621 -419.85522461]
[114.75354767 -410.57318115]
[114.25496674 -395.58145142]
[113.75639343 -380.58975220]
[113.25782013 -365.59805298]
[112.75924683 -350.60632324]
[112.26067352 -335.61462402]
[111.88671875 -320.61929321]
[111.63739777 -305.62133789]
[111.38807678 -290.62341309]
[111.13874817 -275.62548828]
[110.88942719 -260.62756348]
[110.64010620 -245.62963867]
[121.14801025 -235.13584900]
[121.10881805 -219.92227173]
[110.03071594 -208.97177124]
[109.78139496 -193.97383118]
[124.74814606 -189.82072449]
[138.14399719 -181.93727112]
[149.05699158 -170.85348511]
[156.74249268 -157.31747437]
[160.67396545 -142.24497986]
[160.57904053 -126.65732574]
[156.45841980 -111.61234283]
[148.58619690 -98.13249969]
[137.49157715 -87.13542938]
[123.92343140 -79.37147522]
[108.79960632 -75.37248993]
[108.79960632 -60.37248993]
[108.79960632 -45.37248993]
[108.79960632 -30.37248993]
[108.79960632 -15.37248898]
[108.79960632 -0.37248901]
[108.79960632 14.62751102]
[108.79960632 29.62751007]
[108.79960632 44.62751007]
[116.66133118 51.19099426]
[119.66584778 61.21144867]
[116.58593750 71.43877411]
[108.21005249 78.41533661]
[107.71147919 93.40705109]
[110.61673737 100.94349670]
[107.07797241 108.64321136]
[106.33028412 123.62456512]
[109.03186035 132.37063599]
[105.44361115 138.84809875]
[104.44701385 153.81495667]
[103.45041656 168.78181458]
[102.45381927 183.74867249]
[101.45722961 198.71553040]
[100.46063232 213.68238831]
[99.46403503 228.64923096]
[109.17916107 246.29803467]
[97.77661133 261.90078735]
[97.27803802 276.89248657]
[96.77946472 291.88421631]
[96.28089142 306.87591553]
[95.78231812 321.86761475]
[106.30081177 333.35671997]
[105.58161926 348.55334473]
[94.56370544 358.51031494]
[94.06513214 373.50201416]
[93.56655884 388.49374390]
[93.06798553 403.48544312]
[103.87530518 409.81085205]
[110.92059326 420.07577515]
[112.91391754 432.29205322]
[109.53665161 444.12509155]
[101.49061584 453.34008789]
[90.35326385 458.22384644]
[97.15658569 472.50759888]
[88.59078979 484.69268799]
[87.59419250 499.65954590]
[86.59759521 514.62640381]
[85.60099792 529.59326172]
[84.60440063 544.56011963]
[98.84233093 549.57849121]
[111.19766998 558.25305176]
[120.75358582 569.94006348]
[126.80095673 583.77233887]
[128.89103699 598.72344971]
[126.86870575 613.68377686]
[120.88405609 627.54333496]
[111.38118744 639.27355957]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 180]
[14 179]
[15 178]
[16 177]
[17 176]
[19 174]
[23 168]
[24 167]
[25 166]
[26 165]
[29 162]
[30 161]
[31 160]
[32 159]
[33 158]
[37 156]
[38 155]
[39 154]
[40 153]
[41 152]
[42 151]
[43 150]
[44 148]
[45 147]
[46 145]
[47 144]
[49 140]
[50 139]
[51 138]
[52 137]
[53 136]
[54 135]
[55 134]
[56 133]
[57 132]
[69 121]
[70 120]
[73 117]
[74 116]
[75 115]
[76 114]
[77 113]
[78 112]
[80 111]
[81 110]
[82 109]
[83 108]
[84 107]
[85 106]
[90 102]
[91 101]
[92 100]
[93 99]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
