%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 07:50:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCAAUCAUAAAAUGCACACCUUUAUUCAGAACUUUAGUAUUAAAUCAGUUCUUAAUUUCAUUUUUAAGUAUUGUUUUACUCCUUUUUAUUCAUACGUAAAAUUUUGGAUUAAUUUGUGAAAAUGUAAUUAUAAGCUGAGACCGGUGGCUCUCUUCUUAAAAGCACCAUAUUAAAACUUGGAAAACUAA\
) } def
/len { sequence length } bind def

/coor [
[43.37844086 192.63871765]
[34.22030640 186.37687683]
[25.74899864 179.21315002]
[18.05297470 171.22232056]
[11.21259022 162.48782349]
[5.29926682 153.10089111]
[0.37474820 143.15950012]
[-3.50954700 132.76747131]
[-6.31306124 122.03329468]
[-8.00652218 111.06906891]
[-8.57224751 99.98926544]
[-8.00433159 88.90957642]
[-6.30870199 77.94567871]
[-3.50306487 67.21206665]
[0.38328531 56.82080078]
[5.30977011 46.88038635]
[11.22494984 37.49461365]
[-0.41410390 28.03245354]
[-12.05315781 18.57029533]
[-23.69221115 9.10813808]
[-39.20321274 10.53873158]
[-50.87207413 0.77695459]
[-52.14033890 -14.01923084]
[-63.77939224 -23.48138809]
[-79.36822510 -26.18302536]
[-84.36301422 -40.21517944]
[-96.00206757 -49.67733765]
[-107.64112091 -59.13949585]
[-119.28017426 -68.60165405]
[-130.91923523 -78.06381226]
[-142.55828857 -87.52597046]
[-154.19734192 -96.98812866]
[-165.83639526 -106.45028687]
[-181.42521667 -109.15192413]
[-186.42001343 -123.18407440]
[-198.05906677 -132.64624023]
[-209.69812012 -142.10839844]
[-221.33717346 -151.57055664]
[-233.05364990 -160.93667603]
[-244.84675598 -170.20611572]
[-256.63986206 -179.47555542]
[-268.43298340 -188.74501038]
[-281.14788818 -196.70309448]
[-294.63937378 -203.25894165]
[-308.13088989 -209.81478882]
[-321.62240601 -216.37063599]
[-337.41638184 -215.44290161]
[-345.48208618 -227.96463013]
[-358.97360229 -234.52047729]
[-372.46511841 -241.07633972]
[-385.95663452 -247.63218689]
[-401.75061035 -246.70445251]
[-409.81631470 -259.22616577]
[-423.30783081 -265.78201294]
[-436.79931641 -272.33786011]
[-450.29083252 -278.89373779]
[-463.78234863 -285.44958496]
[-477.40853882 -278.02618408]
[-492.79132080 -280.06320190]
[-504.01571655 -290.77731323]
[-506.76571655 -306.04876709]
[-499.98388672 -320.00537109]
[-486.27795410 -327.28048706]
[-470.91818237 -325.07672119]
[-459.81066895 -314.24145508]
[-457.22650146 -298.94107056]
[-443.73498535 -292.38522339]
[-430.24346924 -285.82937622]
[-416.75198364 -279.27352905]
[-403.26046753 -272.71768188]
[-388.43148804 -274.11434937]
[-379.40078735 -261.12368774]
[-365.90927124 -254.56784058]
[-352.41775513 -248.01199341]
[-338.92623901 -241.45614624]
[-324.09725952 -242.85279846]
[-315.06655884 -229.86215210]
[-301.57504272 -223.30630493]
[-288.08352661 -216.75045776]
[-274.59204102 -210.19461060]
[-282.48019409 -222.95301819]
[-284.58599854 -237.80445862]
[-280.55560303 -252.25283813]
[-271.06631470 -263.86981201]
[-257.71307373 -270.70285034]
[-242.74014282 -271.60357666]
[-228.66404724 -266.42056274]
[-217.85057068 -256.02493286]
[-212.11717224 -242.16390991]
[-212.42744446 -227.16712952]
[-218.72924805 -213.55509949]
[-229.96343994 -203.61563110]
[-244.24185181 -199.01925659]
[-259.16351318 -200.53811646]
[-247.37042236 -191.26867676]
[-235.57731628 -181.99922180]
[-223.78419495 -172.72978210]
[-216.57025146 -171.06526184]
[-211.87501526 -163.20960999]
[-200.23596191 -153.74745178]
[-188.59690857 -144.28529358]
[-176.95785522 -134.82313538]
[-162.20152283 -132.79829407]
[-156.37423706 -118.08934021]
[-144.73518372 -108.62718201]
[-133.09613037 -99.16502380]
[-121.45706940 -89.70286560]
[-109.81801605 -80.24070740]
[-98.17896271 -70.77854919]
[-86.53990936 -61.31639099]
[-74.90085602 -51.85423279]
[-60.14452744 -49.82939148]
[-54.31723404 -35.12044144]
[-42.67818069 -25.65828323]
[-27.93470383 -27.43746567]
[-15.99625587 -18.00729370]
[-14.23005295 -2.53091574]
[-2.59099936 6.93124247]
[9.04805374 16.39340019]
[20.68710709 25.85555840]
[35.83153152 12.41951847]
[53.20716858 2.02875829]
[72.20985413 -4.95542336]
[92.17883301 -8.29017735]
[112.41976166 -7.85955048]
[132.22885132 -3.67851615]
[150.91728210 4.10754585]
[167.83528137 15.22790432]
[182.39454651 29.29589272]
[194.08886719 45.82234573]
[202.51159668 64.23262787]
[207.36987305 83.88658142]
[208.49478149 104.10081482]
[223.40913391 105.70145416]
[238.32348633 107.30209351]
[253.23783875 108.90273285]
[265.46994019 99.25839233]
[280.57241821 101.09413147]
[289.69143677 112.81501007]
[304.60580444 114.41564941]
[319.52014160 116.01628876]
[334.43450928 117.61692810]
[349.36151123 119.09485626]
[364.30017090 120.44997406]
[380.62078857 115.85929108]
[389.55004883 130.27124023]
[378.17318726 142.84118652]
[362.94506836 135.38864136]
[348.00640869 134.03352356]
[341.04901123 136.56463623]
[332.83386230 132.53128052]
[317.91952515 130.93063354]
[303.00515747 129.33000183]
[288.09078979 127.72936249]
[276.69229126 137.24826050]
[261.54421997 135.83744812]
[251.63719177 123.81708527]
[236.72283936 122.21644592]
[221.80848694 120.61580658]
[206.89413452 119.01516724]
[204.10430908 130.82572937]
[200.01385498 142.25117493]
[194.67387390 153.14875793]
[188.15109253 163.38232422]
[180.52699280 172.82402039]
[171.89682007 181.35588074]
[162.36840820 188.87133789]
[170.11628723 201.71540833]
[177.86418152 214.55949402]
[193.21849060 214.18455505]
[206.69549561 221.55110168]
[214.66993713 234.67756653]
[214.99673462 250.03297424]
[207.58798218 263.48681641]
[194.43659973 271.42007446]
[179.08023071 271.69876099]
[165.64967346 264.24786377]
[157.75767517 251.07167053]
[157.52714539 235.71450806]
[165.02009583 222.30737305]
[157.27221680 209.46330261]
[149.52433777 196.61921692]
[139.40583801 201.16873169]
[128.87588501 204.66191101]
[118.04443359 207.06227112]
[107.02457428 208.34477234]
[95.93137360 208.49598694]
[84.88064575 207.51435852]
[73.98778534 205.41014099]
[63.36653137 202.20529175]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 120]
[18 119]
[19 118]
[20 117]
[23 114]
[24 113]
[26 111]
[27 110]
[28 109]
[29 108]
[30 107]
[31 106]
[32 105]
[33 104]
[35 102]
[36 101]
[37 100]
[38 99]
[39 97]
[40 96]
[41 95]
[42 94]
[43 80]
[44 79]
[45 78]
[46 77]
[48 75]
[49 74]
[50 73]
[51 72]
[53 70]
[54 69]
[55 68]
[56 67]
[57 66]
[133 160]
[134 159]
[135 158]
[136 157]
[139 154]
[140 153]
[141 152]
[142 151]
[143 149]
[144 148]
[167 182]
[168 181]
[169 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
