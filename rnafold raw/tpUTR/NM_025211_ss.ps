%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 05:59:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACAUUAGCCUUUGAAGUCAACACAAAGUUUAAAACUUCCAGGAUUUUGCAAAGUUGUAUAUAUUUAAUGCUGUGCAACUGCUAAACUAUGCAGUUUUUCUUGAAGGAACUAAAAGCAACUAGCUCCCUAAUGGUCUAUAAUUUUAUUUCUUUUGGCUUAAAGUGAAAAAGAAGAAAUAGAGAAUUCCAGCAGAAUUCAGUGGUUGUCUACUAUCCAUACUUCUUAUCACUUUAGUUUUUCAUCAGUCAAUAAA\
AUUAAUUUACUCUUCCACUAA\
) } def
/len { sequence length } bind def

/coor [
[217.48249817 100.75445557]
[213.97764587 94.26344299]
[211.39921570 87.34839630]
[209.79722595 80.14083862]
[194.79747009 80.22589874]
[179.79771423 80.31095886]
[164.79794312 80.39601898]
[149.79818726 80.48108673]
[134.79843140 80.56614685]
[109.61865234 164.28167725]
[100.99566650 176.55538940]
[92.37267303 188.82910156]
[93.82185364 201.62008667]
[86.41883850 211.65795898]
[74.55700684 213.90208435]
[65.79537201 226.07720947]
[57.03373337 238.25234985]
[48.27209854 250.42747498]
[39.51046371 262.60260010]
[38.60224152 284.03707886]
[19.36753845 291.57470703]
[11.02514553 304.04083252]
[2.68275356 316.50695801]
[4.37845135 332.46014404]
[-7.13778210 343.62957764]
[-23.03167915 341.44699097]
[-31.11079979 327.58673096]
[-25.17753792 312.68115234]
[-9.78338051 308.16458130]
[-1.44098818 295.69845581]
[6.90140390 283.23229980]
[3.79947352 274.98486328]
[4.83438110 266.09625244]
[9.90103149 258.55429077]
[17.97885704 254.10321045]
[27.33533478 253.84095764]
[36.09696960 241.66583252]
[44.85860443 229.49070740]
[53.62024307 217.31558228]
[62.38187790 205.14045715]
[63.21263504 187.59469604]
[80.09896088 180.20611572]
[88.72195435 167.93240356]
[97.34494019 155.65869141]
[93.46070862 149.24287415]
[80.62895203 157.01113892]
[72.86088562 144.17926025]
[85.69224548 136.41122437]
[81.80801392 129.99540710]
[66.93541718 131.94627380]
[52.06282043 133.89714050]
[37.19022369 135.84800720]
[24.51355743 145.31440735]
[10.88809109 139.29811096]
[-3.98450565 141.24896240]
[-18.85710144 143.19982910]
[-28.47874641 155.44979858]
[-43.58946609 157.21638489]
[-55.20864105 147.96812439]
[-70.08123779 149.91899109]
[-79.50822449 162.60392761]
[-95.15567017 164.82495117]
[-107.74022675 155.26437378]
[-109.79569244 139.59432983]
[-100.10260773 127.11155701]
[-84.41169739 125.22187805]
[-72.03210449 135.04640198]
[-57.15950775 133.09553528]
[-48.31858826 121.16348267]
[-33.26345062 118.97316742]
[-20.80796623 128.32723999]
[-5.93537045 126.37637329]
[8.93722630 124.42550659]
[20.55010223 115.09864807]
[35.23935699 120.97541046]
[50.11195374 119.02454376]
[64.98455048 117.07367706]
[79.85714722 115.12281799]
[81.97656250 100.27330017]
[68.24356079 94.23966980]
[54.51055908 88.20603943]
[40.77755737 82.17240906]
[27.04455757 76.13877869]
[13.71307850 84.07926178]
[-1.73651457 82.63368225]
[-13.36353683 72.35788727]
[-16.69716263 57.20313263]
[-10.45554256 42.99673080]
[2.96129107 35.20133591]
[18.39429283 36.81443405]
[29.90915871 47.21575546]
[33.07818604 62.40578079]
[46.81118774 68.43940735]
[60.54418945 74.47303772]
[74.27719116 80.50666809]
[88.01019287 86.54029846]
[93.14553070 81.07419586]
[82.21333313 70.80351257]
[71.28113556 60.53282547]
[60.34893417 50.26213837]
[49.41690445 39.99127197]
[59.68795395 29.05941200]
[70.61962128 39.32994080]
[81.55181885 49.60062790]
[92.48401642 59.87131119]
[103.41622162 70.14199829]
[108.55156708 64.67590332]
[101.67358398 51.34572983]
[94.79560089 38.01556396]
[81.59181976 29.29945374]
[82.63191986 14.44120884]
[75.75394440 1.11103976]
[68.87596130 -12.21912861]
[53.51792908 -14.43508244]
[42.41902924 -25.27915764]
[39.84700775 -40.58158875]
[46.79087067 -54.45827484]
[60.58055115 -61.57334900]
[75.91364288 -59.19092178]
[86.89425659 -48.22708130]
[89.30011749 -32.89765167]
[82.20613098 -19.09710884]
[89.08411407 -5.76693964]
[95.96208954 7.56322908]
[108.67391968 15.32587433]
[108.12577057 31.13758278]
[115.00375366 44.46775055]
[121.88172913 57.79792023]
[134.71336365 65.56638336]
[149.71313477 65.48132324]
[164.71289062 65.39626312]
[179.71264648 65.31120300]
[194.71240234 65.22614288]
[209.71215820 65.14108276]
[218.08193970 43.02354813]
[235.14912415 26.71074677]
[257.54812622 19.37299156]
[280.88192749 22.41530991]
[300.58526611 35.20854568]
[312.81787109 55.21910477]
[327.55596924 52.42844009]
[342.29409790 49.63777542]
[357.03222656 46.84711075]
[371.77035522 44.05644989]
[386.50845337 41.26578522]
[401.24658203 38.47512054]
[415.98471069 35.68445587]
[430.72283936 32.89379120]
[445.46093750 30.10312843]
[459.15856934 17.76968575]
[475.48400879 24.25230598]
[490.18951416 21.29467392]
[498.95596313 8.41882038]
[513.91156006 5.62884521]
[526.13269043 14.06563854]
[540.83825684 11.10800552]
[555.54376221 8.15037155]
[570.79681396 -6.93622017]
[590.01965332 0.63160521]
[604.61608887 -2.82456732]
[619.21246338 -6.28073978]
[633.80883789 -9.73691177]
[648.40527344 -13.19308472]
[663.00164795 -16.64925766]
[677.59808350 -20.10543060]
[692.19445801 -23.56160164]
[706.79083252 -27.01777458]
[714.19732666 -37.54648972]
[726.39715576 -40.14019775]
[736.75860596 -33.94505692]
[751.39324951 -37.23546219]
[766.02789307 -40.52587128]
[780.66253662 -43.81628036]
[795.29724121 -47.10668945]
[809.93188477 -50.39709854]
[810.86987305 -65.86128235]
[816.70428467 -80.40088654]
[826.94091797 -92.48948669]
[840.61737061 -100.82112885]
[856.39361572 -104.45096588]
[872.68243408 -102.90131378]
[887.80950928 -96.22130585]
[900.18530273 -84.99301147]
[914.11560059 -90.55597687]
[928.04589844 -96.11894989]
[941.97619629 -101.68191528]
[955.90649414 -107.24488831]
[969.83679199 -112.80785370]
[977.46063232 -126.92368317]
[993.27514648 -129.62226868]
[1005.14868164 -118.83349609]
[1003.97302246 -102.83358002]
[990.64990234 -93.89629364]
[975.39978027 -98.87755585]
[961.46948242 -93.31458282]
[947.53918457 -87.75161743]
[933.60888672 -82.18864441]
[919.67858887 -76.62567139]
[905.74829102 -71.06270599]
[908.78924561 -56.37418747]
[923.78320312 -56.79943848]
[938.77716064 -57.22468567]
[953.77117920 -57.64993668]
[968.76513672 -58.07518387]
[982.43774414 -67.13014221]
[996.99316406 -59.57562637]
[997.45806885 -43.18306732]
[983.35418701 -34.81573105]
[969.19036865 -43.08121490]
[954.19641113 -42.65596390]
[939.20245361 -42.23071671]
[924.20843506 -41.80546570]
[909.21447754 -41.38021851]
[902.43011475 -26.34965706]
[891.41760254 -14.30653191]
[877.35131836 -6.37688637]
[861.68328857 -3.25659323]
[845.99322510 -5.15134287]
[831.82946777 -11.76655197]
[820.55627441 -22.34717941]
[813.22229004 -35.76244354]
[798.58764648 -32.47203445]
[783.95294189 -29.18162346]
[769.31829834 -25.89121437]
[754.68365479 -22.60080719]
[740.04901123 -19.31039810]
[727.78118896 -6.73880243]
[710.24700928 -12.42137527]
[695.65063477 -8.96520329]
[681.05419922 -5.50903034]
[666.45782471 -2.05285788]
[651.86145020 1.40331459]
[637.26501465 4.85948706]
[622.66864014 8.31565952]
[608.07220459 11.77183247]
[593.47583008 15.22800446]
[590.13562012 23.38185501]
[583.32806396 29.19007111]
[574.48297119 31.26774216]
[565.53521729 29.03146935]
[558.50140381 22.85589409]
[543.79583740 25.81352806]
[529.09033203 28.77116203]
[521.08123779 41.27674484]
[506.20986938 44.48569107]
[493.14715576 36.00019455]
[478.44165039 38.95782852]
[471.50326538 48.83699799]
[459.30514526 51.43888092]
[448.25161743 44.84124756]
[433.51348877 47.63191223]
[418.77536011 50.42257690]
[404.03726196 53.21324158]
[389.29913330 56.00390625]
[374.56100464 58.79456711]
[359.82287598 61.58523178]
[345.08477783 64.37590027]
[330.34664917 67.16655731]
[315.60852051 69.95722198]
[315.45645142 77.26942444]
[314.29800415 84.49423981]
[312.15435791 91.49376678]
[309.06555176 98.13426971]
[305.08959961 104.28874969]
[300.30160522 109.83936310]
[294.79214478 114.67967987]
[288.66561890 118.71670532]
[282.03842163 121.87271881]
[275.03646851 124.08670807]
[267.79302979 125.31559753]
[260.44604492 125.53504181]
[253.13555908 124.73994446]
[246.00108337 122.94456482]
[239.17887878 120.18224335]
[232.79937744 116.50481415]
[226.98464966 111.98159027]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 134]
[5 133]
[6 132]
[7 131]
[8 130]
[9 129]
[10 44]
[11 43]
[12 42]
[15 40]
[16 39]
[17 38]
[18 37]
[19 36]
[21 31]
[22 30]
[23 29]
[49 78]
[50 77]
[51 76]
[52 75]
[54 73]
[55 72]
[56 71]
[59 68]
[60 67]
[79 96]
[80 95]
[81 94]
[82 93]
[83 92]
[107 128]
[108 127]
[109 126]
[111 124]
[112 123]
[113 122]
[140 259]
[141 258]
[142 257]
[143 256]
[144 255]
[145 254]
[146 253]
[147 252]
[148 251]
[149 250]
[151 247]
[152 246]
[155 243]
[156 242]
[157 241]
[159 236]
[160 235]
[161 234]
[162 233]
[163 232]
[164 231]
[165 230]
[166 229]
[167 228]
[170 226]
[171 225]
[172 224]
[173 223]
[174 222]
[175 221]
[183 199]
[184 198]
[185 197]
[186 196]
[187 195]
[188 194]
[200 213]
[201 212]
[202 211]
[203 210]
[204 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
