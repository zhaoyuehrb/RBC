%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 10:03:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAGCAGCUGCACGUCCGAGGCUUGGGGAGGACCCAGGACUGUGUGGGUUUCUUACCUGCCUGAGCCACCUCAGGGAAUCUUCCAGCCUAAUGCAGGCAUUUCUGCACCUUUGGGGUCAUGCUUUGUAGCAGUGUCUCCCUUGCGACCUCGCAAUAAAUUGGCCCCACGGGGUGAUUUUGACAGUC\
) } def
/len { sequence length } bind def

/coor [
[89.55391693 249.17222595]
[80.42175293 251.39549255]
[76.94445801 265.98687744]
[73.46715546 280.57824707]
[69.98985291 295.16961670]
[72.19964600 311.97894287]
[56.65898132 318.75567627]
[45.84500885 305.69830322]
[55.39846802 291.69232178]
[58.87577057 277.10095215]
[62.35307312 262.50955200]
[65.83037567 247.91818237]
[53.68064880 231.50186157]
[57.61130142 211.16206360]
[75.50128937 200.14738464]
[77.99623108 185.35633850]
[80.49116516 170.56527710]
[61.82953644 162.47454834]
[46.11409378 149.56170654]
[34.55784607 132.82344055]
[28.05275917 113.55168915]
[13.10508728 114.80352783]
[-1.84258497 116.05536652]
[-16.79025650 117.30720520]
[-31.73793030 118.55903625]
[-46.68560028 119.81087494]
[-61.63327408 121.06271362]
[-76.58094788 122.31455231]
[-89.68725586 131.17655945]
[-103.01584625 124.52841949]
[-117.96352386 125.78025818]
[-132.91119385 127.03209686]
[-147.77735901 129.03140259]
[-162.52465820 131.77314758]
[-177.27195740 134.51489258]
[-192.01925659 137.25663757]
[-206.76655579 139.99839783]
[-213.31718445 154.06497192]
[-226.90119934 161.56524658]
[-242.29525757 159.61521912]
[-253.58003235 148.96470642]
[-256.41629028 133.70903015]
[-249.71343994 119.71434021]
[-236.04885864 112.36186981]
[-220.67686462 114.47878265]
[-209.50830078 125.25109100]
[-194.76100159 122.50934601]
[-180.01370239 119.76759338]
[-165.26640320 117.02584839]
[-150.51910400 114.28410339]
[-162.15753174 104.82116699]
[-163.84968567 89.91692352]
[-154.62892151 78.08572388]
[-139.76275635 76.08639526]
[-127.74382019 85.06108856]
[-125.43817902 99.88282776]
[-134.16302490 112.08442688]
[-119.21535492 110.83258820]
[-104.26768494 109.58074951]
[-92.23053741 100.80827332]
[-77.83278656 107.36688232]
[-62.88511276 106.11504364]
[-47.93743896 104.86320496]
[-32.98976517 103.61136627]
[-18.04209518 102.35952759]
[-3.09442234 101.10769653]
[11.85324955 99.85585785]
[26.80092239 98.60401917]
[27.54335785 89.50767517]
[29.41176414 80.57437897]
[32.37710190 71.94296265]
[36.39329147 63.74754333]
[41.39792633 56.11548615]
[47.31322861 49.16538620]
[54.04727554 43.00525284]
[61.49542618 37.73081207]
[54.95492935 24.23185539]
[48.41442871 10.73289776]
[34.54645538 1.98010504]
[35.46289062 -14.39341545]
[50.22098541 -21.54399109]
[63.63887405 -12.11572075]
[61.91338730 4.19239759]
[68.45388794 17.69135475]
[74.99438477 31.19031334]
[82.43344116 28.92630577]
[90.07067108 27.46406364]
[89.56944275 12.47243977]
[89.06822205 -2.51918387]
[88.56699371 -17.51080704]
[77.87945557 -29.47558975]
[80.71226501 -45.26655960]
[94.89233398 -52.77023697]
[109.54193115 -46.23044205]
[113.42313385 -30.66394424]
[103.55861664 -18.01203156]
[104.05984497 -3.02040839]
[104.56106567 11.97121525]
[105.06229401 26.96283913]
[117.69223022 28.95748520]
[129.78251648 33.11909103]
[140.96435547 39.32071686]
[150.89669800 47.37320328]
[159.27658081 57.03092194]
[165.84837341 67.99929810]
[170.41165161 79.94377136]
[172.82722473 92.50000000]
[187.82722473 92.50000000]
[202.82722473 92.50000000]
[217.82722473 92.50000000]
[232.82722473 92.50000000]
[247.82722473 92.50000000]
[262.82669067 92.37467194]
[277.82461548 92.12402344]
[292.82250977 91.87337494]
[307.82040405 91.62272644]
[322.81832886 91.37208557]
[337.81622314 91.12143707]
[352.81411743 90.87078857]
[367.81204224 90.62014008]
[374.92700195 82.35988617]
[385.20516968 79.44977570]
[395.17535400 82.62100220]
[401.60742188 90.59212494]
[416.60534668 90.84277344]
[431.60324097 91.09342194]
[446.60116577 91.34406281]
[461.59906006 91.59471130]
[475.52658081 84.08908844]
[488.12280273 92.03797913]
[503.12069702 92.28862762]
[518.12017822 92.41395569]
[533.12017822 92.41395569]
[541.72167969 89.27954102]
[548.37030029 92.54138184]
[563.36822510 92.79203033]
[578.36608887 93.04267120]
[587.58734131 80.56275940]
[602.39312744 75.91851807]
[617.09027100 80.89575958]
[626.02752686 93.58062744]
[625.76818848 109.09553528]
[616.41210938 121.47468567]
[601.55688477 125.95803833]
[586.91455078 120.82165527]
[578.11547852 108.04058075]
[563.11755371 107.78993225]
[548.11962891 107.53928375]
[533.12017822 107.41395569]
[518.12017822 107.41395569]
[511.41796875 110.56424713]
[502.87005615 107.28653717]
[487.87216187 107.03588867]
[475.01736450 114.55944061]
[461.34841919 106.59262085]
[446.35049438 106.34197235]
[431.35260010 106.09132385]
[416.35470581 105.84067535]
[401.35678101 105.59002686]
[385.20516968 116.19979095]
[368.06268311 105.61804962]
[353.06478882 105.86869049]
[338.06686401 106.11933899]
[323.06896973 106.36998749]
[308.07104492 106.62063599]
[293.07315063 106.87128448]
[278.07525635 107.12193298]
[263.07733154 107.37258148]
[256.42871094 110.63441467]
[247.82722473 107.50000000]
[232.82722473 107.50000000]
[217.82722473 107.50000000]
[202.82722473 107.50000000]
[187.82722473 107.50000000]
[172.82722473 107.50000000]
[168.56901550 125.65819550]
[159.86088562 142.15124512]
[147.26795959 155.90879822]
[131.60746765 166.03804016]
[113.89574432 171.88157654]
[95.28221893 173.06022644]
[92.78728485 187.85127258]
[90.29234314 202.64233398]
[97.99830627 208.61045837]
[102.96178436 216.93135071]
[104.53305054 226.43315125]
[102.53672028 235.79553223]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 12]
[3 11]
[4 10]
[5 9]
[15 183]
[16 182]
[17 181]
[21 68]
[22 67]
[23 66]
[24 65]
[25 64]
[26 63]
[27 62]
[28 61]
[30 59]
[31 58]
[32 57]
[33 50]
[34 49]
[35 48]
[36 47]
[37 46]
[76 85]
[77 84]
[78 83]
[87 99]
[88 98]
[89 97]
[90 96]
[107 175]
[108 174]
[109 173]
[110 172]
[111 171]
[112 170]
[113 168]
[114 167]
[115 166]
[116 165]
[117 164]
[118 163]
[119 162]
[120 161]
[124 159]
[125 158]
[126 157]
[127 156]
[128 155]
[130 153]
[131 152]
[132 150]
[133 149]
[135 148]
[136 147]
[137 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
