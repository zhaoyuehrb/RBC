%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 14:05:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUGGUUCCUCCAACAAGCAGUGAGGCUGCUACAUGUCUGGUCUUUACCGUCAACUCUGUUGAGAUGAAUUCCACACCACUGCAGCCAAAGAUACUUCAACAGCGACCUCACAUGGGGUGCUGCGAGAACUGGGUUGCUCCUAAGGAUGUUGGCAAAGCGCUUUGAGUUUACUAGAAGUUUCAUUAAAAUUUGUUGGUAAGUUA\
) } def
/len { sequence length } bind def

/coor [
[93.83371735 363.43786621]
[91.32917786 378.22729492]
[88.82463837 393.01672363]
[95.04187775 408.19165039]
[84.79596710 420.99606323]
[68.62702942 418.25793457]
[63.16827774 402.79397583]
[74.03520966 390.51217651]
[76.53974915 375.72274780]
[79.04428101 360.93331909]
[68.08525848 339.92007446]
[83.55369568 321.03878784]
[84.46815491 306.06668091]
[85.38261414 291.09457397]
[86.29707336 276.12246704]
[87.21153259 261.15039062]
[88.12599945 246.17828369]
[89.04045868 231.20617676]
[89.95491791 216.23408508]
[79.16563416 198.64230347]
[91.26438141 180.95828247]
[91.49312592 165.96002197]
[91.72187805 150.96177673]
[91.95062256 135.96351624]
[92.17937469 120.96525574]
[82.58631897 109.43384552]
[67.79689026 106.92931366]
[53.00745773 104.42477417]
[38.21802902 101.92023468]
[23.42859650 99.41569519]
[8.63916492 96.91115570]
[0.29038933 108.13705444]
[-12.02229786 114.63886261]
[-25.86877441 115.19780731]
[-38.54383469 109.76176453]
[-47.59570694 99.44429016]
[-51.30028152 86.29701233]
[-66.04979706 83.56723022]
[-81.02760315 88.66389465]
[-92.13426971 78.73961639]
[-106.88378143 76.00983429]
[-121.63330078 73.28005219]
[-134.56317139 81.96660614]
[-149.48239136 78.98810577]
[-157.68402100 66.60792542]
[-172.43353271 63.87813950]
[-187.18304443 61.14835358]
[-201.93257141 58.41857147]
[-216.91036987 63.51523590]
[-228.01702881 53.59095764]
[-237.02893066 55.10663223]
[-242.96992493 50.70544052]
[-257.67608643 47.75104523]
[-272.38226318 44.79665375]
[-287.08843994 41.84225845]
[-301.79461670 38.88786316]
[-318.51437378 41.69609451]
[-325.84133911 26.40715027]
[-313.17819214 15.13411713]
[-298.84020996 24.18168831]
[-284.13403320 27.13608360]
[-269.42788696 30.09047699]
[-254.72169495 33.04487228]
[-240.01551819 35.99926758]
[-225.28724670 38.84143829]
[-211.36442566 33.54952240]
[-199.20278931 43.66905212]
[-184.45326233 46.39883423]
[-169.70375061 49.12862015]
[-154.95422363 51.85840607]
[-142.86508179 43.23355865]
[-127.86808014 45.79183578]
[-118.90351868 58.53053284]
[-104.15399933 61.26031494]
[-89.40447998 63.99010086]
[-75.48166656 58.69818115]
[-63.32001495 68.81771088]
[-48.57049561 71.54749298]
[-38.38442993 59.00564957]
[-23.17618942 53.27801132]
[-7.06222582 56.01605606]
[5.54464912 66.56599426]
[11.14370346 82.12172699]
[25.93313408 84.62626648]
[40.72256470 87.13079834]
[55.51199722 89.63533783]
[70.30142975 92.13987732]
[85.09085846 94.64441681]
[70.64101410 90.61924744]
[61.67860794 78.59114838]
[61.95425797 63.59367752]
[71.35260773 51.90304184]
[85.94061279 48.41157913]
[99.61341095 54.58041000]
[106.64916992 67.82798004]
[104.10293579 82.61150360]
[108.16903687 68.17311859]
[112.23513794 53.73474121]
[106.37497711 44.56547928]
[106.52766418 33.90424728]
[112.40119934 25.26991653]
[121.85513306 21.37957954]
[126.35965729 7.07191563]
[130.86418152 -7.23574829]
[135.36871338 -21.54341125]
[134.96105957 -30.67278671]
[140.05256653 -36.03397751]
[144.77474976 -50.27128601]
[149.49694824 -64.50859070]
[154.21913147 -78.74589539]
[158.94132996 -92.98320770]
[155.10153198 -108.92648315]
[167.17369080 -120.02580261]
[182.73901367 -114.86313629]
[185.78521729 -98.74939728]
[173.17863464 -88.26100922]
[168.45643616 -74.02370453]
[163.73425293 -59.78639984]
[159.01205444 -45.54909134]
[154.28987122 -31.31178665]
[149.67637634 -17.03888512]
[145.17184448 -2.73122191]
[140.66731262 11.57644176]
[136.16279602 25.88410568]
[141.72880554 44.39946365]
[126.67351532 57.80084229]
[122.60741425 72.23922729]
[118.54131317 86.67760468]
[119.92369080 87.71279144]
[121.24987030 88.87798309]
[122.50830841 90.17022705]
[137.50132751 89.71278381]
[152.49435425 89.25534058]
[167.48738098 88.79789734]
[176.26612854 76.13931274]
[190.64726257 71.13566589]
[205.04682922 75.50788116]
[214.00352478 87.37867737]
[228.99655151 86.92123413]
[243.98956299 86.46379089]
[258.98260498 86.00634766]
[264.80194092 82.85497284]
[270.48532104 83.08410645]
[274.43829346 85.77062225]
[289.43829346 85.77062225]
[304.43829346 85.77062225]
[319.43829346 85.77062225]
[328.02386475 82.64022064]
[334.66659546 85.88674164]
[349.66485596 86.11549377]
[364.66311646 86.34423828]
[379.66137695 86.57299042]
[392.13195801 76.48021698]
[407.76641846 80.07794189]
[414.57128906 94.60629272]
[407.32650757 108.92036438]
[391.58963013 112.03961945]
[379.43261719 101.57124329]
[364.43435669 101.34249878]
[349.43609619 101.11374664]
[334.43786621 100.88500214]
[319.43829346 100.77062225]
[304.43829346 100.77062225]
[289.43829346 100.77062225]
[274.43829346 100.77062225]
[259.44003296 100.99936676]
[244.44700623 101.45681000]
[229.45399475 101.91425323]
[214.46096802 102.37169647]
[206.24462891 114.76644897]
[192.13838196 120.00838470]
[177.47895813 115.89076996]
[167.94482422 103.79092407]
[152.95179749 104.24836731]
[137.95877075 104.70581055]
[122.96575165 105.16325378]
[137.41342163 109.19625092]
[144.18040466 122.58309937]
[138.86105347 136.60823059]
[124.91853333 142.14051819]
[111.43019867 135.57814026]
[107.17762756 121.19400787]
[106.94888306 136.19226074]
[106.72013092 151.19052124]
[106.49138641 166.18876648]
[106.26263428 181.18702698]
[113.67540741 187.02572632]
[117.51151276 195.49601746]
[117.02497864 204.64395142]
[112.45146179 212.42227173]
[104.92701721 217.14854431]
[104.01255798 232.12063599]
[103.09809875 247.09274292]
[102.18363953 262.06484985]
[101.26917267 277.03692627]
[100.35471344 292.00903320]
[99.44025421 306.98114014]
[98.52579498 321.95324707]
[103.86315918 325.33737183]
[108.01619720 330.04733276]
[110.67124176 335.69332886]
[111.63733673 341.81631470]
[110.85983276 347.92544556]
[108.42297363 353.53723145]
[104.54139709 358.21398926]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 10]
[2 9]
[3 8]
[12 198]
[13 197]
[14 196]
[15 195]
[16 194]
[17 193]
[18 192]
[19 191]
[21 186]
[22 185]
[23 184]
[24 183]
[25 182]
[26 88]
[27 87]
[28 86]
[29 85]
[30 84]
[31 83]
[37 78]
[38 77]
[40 75]
[41 74]
[42 73]
[45 70]
[46 69]
[47 68]
[48 67]
[50 65]
[52 64]
[53 63]
[54 62]
[55 61]
[56 60]
[96 128]
[97 127]
[98 126]
[102 124]
[103 123]
[104 122]
[105 121]
[107 120]
[108 119]
[109 118]
[110 117]
[111 116]
[131 176]
[132 175]
[133 174]
[134 173]
[138 169]
[139 168]
[140 167]
[141 166]
[144 165]
[145 164]
[146 163]
[147 162]
[149 161]
[150 160]
[151 159]
[152 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
