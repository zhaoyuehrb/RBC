%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 14:03:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACAUUAGGUCCACAUGAAUAGCAGAACUGACUUUGAAGGAAGGAAGCGUUGUUUCCCAAGUUUCACAAUGUGAUUGUACAUGACUUCUGAAAUUAAAAAGAGAGCAUG\
) } def
/len { sequence length } bind def

/coor [
[90.39265442 124.01739502]
[79.56289673 118.24796295]
[73.77365112 132.08575439]
[67.98440552 145.92355347]
[72.71649170 161.25283813]
[63.56327057 174.42851257]
[47.54632187 175.34330750]
[36.95247269 163.29550171]
[39.90841675 147.52711487]
[54.14661026 140.13430786]
[59.93585205 126.29651642]
[65.72509766 112.45871735]
[63.60947800 97.60866547]
[54.18617630 85.93812561]
[44.76287842 74.26759338]
[35.33957672 62.59705353]
[25.91627693 50.92651749]
[26.94615746 65.89112091]
[23.41455841 80.46945190]
[15.65040970 93.30370331]
[4.37685823 103.19850159]
[-9.35608864 109.23225403]
[-24.26935577 110.84298706]
[-38.97393799 107.88066864]
[-52.10025787 100.62121582]
[-62.42574692 89.74076080]
[-68.98870087 76.25270081]
[-71.17784119 61.41331100]
[-68.78928375 46.60470200]
[-62.04549408 33.20615005]
[-51.57458115 22.46557236]
[-38.35179901 15.38334179]
[-23.60870171 12.61909008]
[-8.71844959 14.43027878]
[4.93209219 20.64821243]
[16.07201004 30.69435501]
[12.70463848 16.07721519]
[9.33726692 1.46007371]
[5.96989632 -13.15706730]
[2.60252500 -27.77420807]
[-12.99895191 -34.12384033]
[-21.70186996 -48.35209274]
[-20.27723694 -64.80411530]
[-9.47638893 -77.07642365]
[-13.25605965 -91.59242249]
[-17.03573036 -106.10841370]
[-20.81540108 -120.62440491]
[-24.59507179 -135.14039612]
[-28.37474251 -149.65640259]
[-38.21709824 -163.46090698]
[-27.67671394 -176.74008179]
[-11.99862099 -170.28765869]
[-13.85874939 -153.43606567]
[-10.07907867 -138.92007446]
[-6.29940748 -124.40407562]
[-2.51973653 -109.88808441]
[1.25993454 -95.37209320]
[5.03960562 -80.85609436]
[17.94083786 -77.11938477]
[27.35969925 -67.39197540]
[30.73253250 -54.16633224]
[27.06447792 -40.90666199]
[17.21966553 -31.14157867]
[20.58703804 -16.52443886]
[23.95440865 -1.90729749]
[27.32177925 12.70984364]
[30.68914986 27.32698441]
[34.74813080 30.41646767]
[37.33267212 35.39260101]
[37.58681488 41.50321960]
[47.01011276 53.17375565]
[56.43341446 64.84429169]
[65.85671234 76.51482391]
[75.28001404 88.18536377]
[83.00526428 79.35227966]
[93.48650360 74.73994446]
[104.65122986 74.99861145]
[114.39949036 79.83999634]
[120.99880219 88.13620758]
[123.39120483 98.17246246]
[121.35797882 107.99839783]
[132.89399719 117.58590698]
[144.43002319 127.17340851]
[155.96603394 136.76091003]
[171.49160767 135.49818420]
[183.05419922 145.38562012]
[184.16233826 160.19465637]
[195.69834900 169.78215027]
[207.23437500 179.36965942]
[218.77038574 188.95716858]
[233.15010071 183.56089783]
[248.29878235 186.09327698]
[260.14154053 195.87309265]
[265.49270630 210.26963806]
[262.91284180 225.41032410]
[253.09594727 237.22235107]
[238.68269348 242.52836609]
[223.55018616 239.90107727]
[211.76898193 230.04719543]
[206.50817871 215.61738586]
[209.18289185 200.49317932]
[197.64686584 190.90568542]
[186.11085510 181.31817627]
[174.57482910 171.73066711]
[159.81297302 173.35026550]
[147.97721863 163.79150391]
[146.37854004 148.29693604]
[134.84251404 138.70942688]
[123.30649567 129.12191772]
[111.77047729 119.53442383]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 12]
[3 11]
[4 10]
[13 74]
[14 73]
[15 72]
[16 71]
[17 70]
[36 67]
[37 66]
[38 65]
[39 64]
[40 63]
[44 58]
[45 57]
[46 56]
[47 55]
[48 54]
[49 53]
[81 110]
[82 109]
[83 108]
[84 107]
[87 104]
[88 103]
[89 102]
[90 101]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
