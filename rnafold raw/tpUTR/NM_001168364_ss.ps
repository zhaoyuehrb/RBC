%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 09:23:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACAGGUAGUAGCUGGGUGUGACGCAAGAGUGAAACAGAAAGCCUGGCAGCCACGGUUUCCUGGGAUUAAAGUCAAAGCAUUAUGAAUAUGGCACUAAAGUGACUGAGCUACCAGACCAAUGAUCCUGUAAGGCAGCCACAGAACUAAAAAACAACAAUUAUUAUUAAACUGCUCUGGAUUCUCAA\
) } def
/len { sequence length } bind def

/coor [
[109.77879333 235.54902649]
[117.86579895 222.60441589]
[130.77297974 214.45779419]
[129.01304626 199.56140137]
[127.25312042 184.66499329]
[125.36811829 169.78390503]
[123.35819244 154.91918945]
[121.34825897 140.05445862]
[119.33832550 125.18972778]
[117.32839203 110.32499695]
[105.28041840 117.45530701]
[92.96920013 114.70771027]
[80.99893951 123.74723053]
[69.02867889 132.78674316]
[69.18190002 148.19073486]
[60.33874512 160.58638000]
[46.06113052 165.34176636]
[31.89072609 160.83203125]
[19.92046738 169.87155151]
[7.95020866 178.91107178]
[5.63121843 194.31431580]
[-6.63709736 203.31115723]
[-21.30744934 201.00543213]
[-33.27770615 210.04495239]
[-45.24796677 219.08447266]
[-51.13835144 234.38922119]
[-67.37773895 236.67272949]
[-77.26042938 223.58593750]
[-70.61996460 208.59138489]
[-54.28748322 207.11421204]
[-42.31722641 198.07469177]
[-30.34696770 189.03517151]
[-28.54994392 174.29385376]
[-16.53917122 164.95597839]
[-1.08931088 166.94081116]
[10.88094711 157.90129089]
[22.85120583 148.86177063]
[22.39154816 133.99816895]
[30.87265015 121.56696320]
[45.21514511 116.45362091]
[59.98916245 120.81649017]
[71.95941925 111.77696991]
[83.92967987 102.73744965]
[92.14271545 83.54297638]
[115.13613129 86.66672516]
[114.38045502 71.68576813]
[113.62477875 56.70481873]
[112.86910248 41.72386551]
[104.44638824 28.33100891]
[111.53268433 15.23010445]
[110.77700806 0.24915181]
[110.02133179 -14.73180103]
[109.01409149 -29.69794464]
[107.75557709 -44.64505768]
[106.49705505 -59.59216690]
[105.23854065 -74.53927612]
[93.44831848 -84.71908569]
[92.38493347 -99.89550781]
[102.16248322 -111.07295227]
[100.90396881 -126.02005768]
[98.89403534 -140.88479614]
[96.13779449 -155.62937927]
[93.38154602 -170.37397766]
[90.62530518 -185.11857605]
[75.79100800 -188.31533813]
[63.34430695 -196.92478943]
[55.16417313 -209.60939026]
[52.47095871 -224.41932678]
[55.64442825 -239.09222412]
[64.17056274 -251.39874268]
[76.72450256 -259.48129272]
[73.96826172 -274.22589111]
[71.21202087 -288.97048950]
[68.45577240 -303.71508789]
[65.69953156 -318.45968628]
[46.82633209 -329.35870361]
[42.18158340 -350.36251831]
[54.37442017 -367.74002075]
[50.39080811 -382.20138550]
[36.93080521 -390.04141235]
[33.09686279 -404.76403809]
[40.65407944 -417.54776001]
[36.67046738 -432.00912476]
[24.62007332 -443.13208008]
[28.49109459 -459.06781006]
[44.30135727 -463.42300415]
[55.78661728 -451.71740723]
[51.13182449 -435.99273682]
[55.11543655 -421.53137207]
[68.15287018 -414.42077637]
[72.39882660 -399.81164551]
[64.85216522 -386.18499756]
[68.83577728 -371.72363281]
[77.37680817 -370.23214722]
[85.00318146 -366.01684570]
[90.86801910 -359.51345825]
[94.30953217 -351.41342163]
[94.92565155 -342.59057617]
[92.62078094 -334.00677490]
[87.61930847 -326.60714722]
[80.44412994 -321.21594238]
[83.20037079 -306.47134399]
[85.95661163 -291.72674561]
[88.71286011 -276.98214722]
[91.46910095 -262.23754883]
[106.09506226 -259.23577881]
[118.49107361 -250.84030151]
[126.75070190 -238.30461121]
[129.58932495 -223.52186584]
[126.54378510 -208.73881531]
[118.04767609 -196.21447754]
[105.36990356 -187.87481689]
[108.12614441 -173.13021851]
[110.88238525 -158.38563538]
[113.63863373 -143.64103699]
[123.09514618 -155.28466797]
[137.99836731 -156.98587036]
[149.83566284 -147.77293396]
[151.84565735 -132.90820312]
[142.88024902 -120.88233948]
[128.06042480 -118.56442261]
[115.85107422 -127.27857208]
[117.10959625 -112.33146667]
[128.61846924 -102.94629669]
[130.10771179 -87.80573273]
[120.18565369 -75.79779816]
[121.44416809 -60.85068512]
[122.70268250 -45.90357208]
[123.96119690 -30.95646095]
[126.98289490 -27.23354912]
[127.68419647 -21.56745338]
[125.00228119 -15.48747921]
[125.75795746 -0.50652641]
[126.51364136 14.47442627]
[134.88229370 26.79574394]
[127.85005188 40.96818542]
[128.60572815 55.94913864]
[129.36140442 70.93009186]
[130.11708069 85.91104126]
[132.46568298 71.09604645]
[137.70295715 57.04005814]
[145.62127686 44.30034256]
[155.90669250 33.38199615]
[168.15141296 24.71789551]
[181.86999512 18.65154648]
[196.51852417 15.42345810]
[211.51623535 15.16161728]
[226.26852417 17.87640190]
[240.19050598 23.46018219]
[252.73020935 31.69157791]
[263.39047241 42.24423981]
[271.74865723 54.69978714]
[277.47338867 68.56439972]
[280.33770752 83.28838348]
[280.22802734 98.28797913]
[277.14874268 112.96850586]
[271.22186279 126.74792480]
[262.68243408 139.07992554]
[251.86900330 149.47557068]
[239.21028137 157.52272034]
[225.20814514 162.90232849]
[210.41773987 165.40112305]
[195.42546082 164.91999817]
[180.82569885 161.47805786]
[167.19729614 155.21176147]
[155.08056641 146.36953735]
[144.95590210 135.30195618]
[137.22471619 122.44781494]
[132.19313049 108.31506348]
[134.20304871 123.17979431]
[136.21298218 138.04452515]
[138.22291565 152.90925598]
[140.23284912 167.77398682]
[144.49194336 175.87884521]
[142.14952087 182.90507507]
[143.90945435 197.80146790]
[145.66938782 212.69786072]
[160.11965942 217.61233521]
[171.00059509 228.31597900]
[176.15174866 242.68359375]
[174.55036926 257.86248779]
[166.51438904 270.83883667]
[153.63938904 279.03622437]
[138.48168945 280.82702637]
[124.05087280 275.85568237]
[113.21218109 265.10928345]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 177]
[4 176]
[5 175]
[6 173]
[7 172]
[8 171]
[9 170]
[10 169]
[12 43]
[13 42]
[14 41]
[18 37]
[19 36]
[20 35]
[23 32]
[24 31]
[25 30]
[45 139]
[46 138]
[47 137]
[48 136]
[50 134]
[51 133]
[52 132]
[53 129]
[54 128]
[55 127]
[56 126]
[59 123]
[60 122]
[61 115]
[62 114]
[63 113]
[64 112]
[71 105]
[72 104]
[73 103]
[74 102]
[75 101]
[78 93]
[79 92]
[82 89]
[83 88]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
