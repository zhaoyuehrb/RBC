%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 12:57:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUCAUUGAACAUUUGUUCCGUGUCUGGCCAGCCCUGGAGGGUUGACCCCUGGUCUCAGUGCUUUCCAAUUCGAACUUUUUCCAAUCUUAGGUAUCUACUUUAGAGUCUUCUCCAAUGUCCAAAAGGCUAGGGGGUUGGAGGUGGGGACUCUGGAAAAGCAGCCCCCAUUUCCUCGGGUACCAAUAAAUAAAACAUGCAGGCUGACCGGCGUUUUUUUCUUA\
) } def
/len { sequence length } bind def

/coor [
[104.71889496 325.16201782]
[91.97047424 317.25775146]
[82.19978333 305.87646484]
[76.31684875 292.07821655]
[74.86965179 277.14743042]
[68.93560791 290.92376709]
[63.00156784 304.70010376]
[64.64828491 320.43536377]
[52.50723648 329.06347656]
[46.57319641 342.83981323]
[40.63915253 356.61611938]
[34.70511246 370.39245605]
[37.15375137 386.60775757]
[24.16818428 396.62310791]
[9.10685158 390.13555908]
[7.46355963 373.81893921]
[20.92878723 364.45840454]
[26.86282921 350.68209839]
[32.79687119 336.90576172]
[38.73091125 323.12942505]
[36.65975189 308.37954712]
[49.22524261 298.76605225]
[55.15928268 284.98971558]
[61.09332275 271.21340942]
[59.67984772 261.62307739]
[66.46184540 253.05842590]
[68.97443390 238.27035522]
[71.48703003 223.48228455]
[73.99962616 208.69422913]
[68.50354004 194.85072327]
[78.44313812 182.54158020]
[80.95572662 167.75352478]
[83.46832275 152.96545410]
[85.98091888 138.17738342]
[88.49350739 123.38932037]
[84.49977875 113.86866760]
[85.39002228 105.27018738]
[70.44309998 106.53094482]
[55.49617386 107.79170227]
[40.54925156 109.05245972]
[25.60232925 110.31321716]
[10.65540695 111.57397461]
[-4.29151487 112.83473206]
[-19.23843765 114.09548950]
[-36.66638565 128.18830872]
[-55.85968781 118.17913055]
[-70.71240234 120.27598572]
[-85.56512451 122.37284088]
[-100.41783905 124.46969604]
[-115.25622559 132.67082214]
[-127.24452972 120.68262482]
[-119.04352570 105.84416962]
[-102.51469421 109.61698151]
[-87.66197968 107.52012634]
[-72.80925751 105.42327118]
[-57.95654297 103.32641602]
[-54.67859268 96.18529510]
[-48.77915192 90.85417175]
[-41.16599655 88.25313568]
[-33.05066681 88.87431335]
[-25.75571632 92.69068909]
[-20.49919510 99.14856720]
[-5.55227280 97.88780975]
[9.39464951 96.62705231]
[24.34157181 95.36629486]
[39.28849411 94.10553741]
[54.23541641 92.84477997]
[69.18234253 91.58402252]
[84.12926483 90.32326508]
[70.40766144 84.26374817]
[56.68606567 78.20422363]
[41.71577835 77.26058197]
[27.56843376 72.27533722]
[15.31368923 63.62540817]
[5.87809849 51.96480560]
[-0.02493279 38.17516708]
[-1.94908786 23.29908943]
[0.25111470 8.46133041]
[6.40932178 -5.21626043]
[16.05992508 -16.69954681]
[28.47325897 -25.12030220]
[42.71078110 -29.84184837]
[57.69601822 -30.50720024]
[72.29596710 -27.06605148]
[85.40675354 -19.77858162]
[96.03710175 -9.19577885]
[103.38327026 3.88221073]
[106.88983154 18.46658707]
[106.29165649 33.45465469]
[101.63418579 47.71278000]
[102.19169617 62.70241547]
[102.74920654 77.69204712]
[109.44635773 64.27011871]
[116.14350891 50.84819031]
[111.36579895 36.02215958]
[118.34886169 22.50581932]
[132.51266479 18.04236794]
[139.20980835 4.62043905]
[134.43209839 -10.20559216]
[141.41516113 -23.72193336]
[155.57896423 -28.18538475]
[162.27610779 -41.60731506]
[168.97326660 -55.02924347]
[175.67041016 -68.45117188]
[182.36756897 -81.87310028]
[189.06471252 -95.29502869]
[195.76187134 -108.71695709]
[202.45901489 -122.13888550]
[209.15615845 -135.56082153]
[215.85331726 -148.98274231]
[222.26664734 -162.54258728]
[228.39331055 -176.23432922]
[234.51997375 -189.92608643]
[240.64663696 -203.61782837]
[246.77330017 -217.30958557]
[252.89996338 -231.00132751]
[259.02661133 -244.69308472]
[265.15328979 -258.38482666]
[263.72741699 -274.14166260]
[275.98828125 -282.59863281]
[282.11492920 -296.29037476]
[288.24160767 -309.98211670]
[279.71600342 -322.83972168]
[279.51800537 -338.26583862]
[287.71081543 -351.33801270]
[301.68008423 -357.88497925]
[316.96829224 -355.81762695]
[328.69705200 -345.79565430]
[333.12371826 -331.01702881]
[328.83578491 -316.19754028]
[317.20150757 -306.06604004]
[301.93334961 -303.85546875]
[295.80667114 -290.16372681]
[289.68002319 -276.47198486]
[291.54412842 -261.69445801]
[278.84503174 -252.25816345]
[272.71838379 -238.56640625]
[266.59170532 -224.87466431]
[260.46505737 -211.18292236]
[254.33837891 -197.49116516]
[248.21171570 -183.79942322]
[242.08505249 -170.10766602]
[235.95838928 -156.41592407]
[236.86132812 -153.01673889]
[236.16853333 -149.01214600]
[233.61369324 -145.15425110]
[229.27523804 -142.28559875]
[222.57809448 -128.86366272]
[215.88093567 -115.44173431]
[209.18379211 -102.01980591]
[202.48664856 -88.59787750]
[195.78948975 -75.17594910]
[189.09234619 -61.75402069]
[182.39518738 -48.33209229]
[175.69804382 -34.91016388]
[169.00088501 -21.48823357]
[173.95147705 -7.48726130]
[167.35081482 6.21988678]
[152.63174438 11.31758976]
[145.93458557 24.73951912]
[150.88517761 38.74049377]
[144.28451538 52.44763947]
[129.56544495 57.54534149]
[122.86828613 70.96726990]
[116.17114258 84.38919830]
[123.24208832 97.61801910]
[138.12275696 99.50636292]
[153.00341797 101.39471436]
[163.53341675 89.99739838]
[178.75807190 86.99918365]
[192.82321167 93.55293274]
[200.32048035 107.13861084]
[198.36703491 122.53223419]
[187.71401978 133.81465149]
[172.45773315 136.64753723]
[158.46452332 129.94158936]
[151.11506653 116.27537537]
[136.23440552 114.38703156]
[121.35374451 112.49868011]
[133.50743103 121.29003143]
[145.66111755 130.08139038]
[157.81480408 138.87272644]
[169.96850586 147.66407776]
[184.43432617 151.63143921]
[196.71488953 160.24467468]
[205.37145996 172.49472046]
[209.38992310 186.94644165]
[208.29946899 201.90675354]
[202.22787476 215.62300110]
[191.88642883 226.48829651]
[178.48667908 233.22970581]
[163.59844971 235.05746460]
[148.96595764 231.75744629]
[136.30345154 223.71624756]
[127.09438324 211.87593079]
[122.41763306 197.62364197]
[122.82064819 182.63131714]
[117.93587494 168.44895935]
[113.05110931 154.26661682]
[108.16634369 140.08427429]
[103.28157043 125.90191650]
[100.76898193 140.68998718]
[98.25638580 155.47804260]
[95.74379730 170.26611328]
[93.23120117 185.05418396]
[98.54756927 199.95541382]
[88.78768921 211.20681763]
[86.27509308 225.99488831]
[83.76250458 240.78294373]
[81.24990845 255.57101440]
[90.58398438 243.82899475]
[103.02491760 235.44906616]
[117.41397858 231.21174622]
[132.41098022 231.51167297]
[146.61911011 236.32092285]
[158.71505737 245.19157410]
[167.57217407 257.29739380]
[172.36557007 271.51089478]
[172.64874268 286.50823975]
[168.39535522 300.89254761]
[160.00154114 313.32412720]
[148.24909973 322.64508057]
[134.23265076 327.98727417]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 24]
[6 23]
[7 22]
[9 20]
[10 19]
[11 18]
[12 17]
[26 210]
[27 209]
[28 208]
[29 207]
[31 205]
[32 204]
[33 203]
[34 202]
[35 201]
[37 69]
[38 68]
[39 67]
[40 66]
[41 65]
[42 64]
[43 63]
[44 62]
[46 56]
[47 55]
[48 54]
[49 53]
[92 165]
[93 164]
[94 163]
[97 160]
[98 159]
[101 156]
[102 155]
[103 154]
[104 153]
[105 152]
[106 151]
[107 150]
[108 149]
[109 148]
[110 147]
[111 143]
[112 142]
[113 141]
[114 140]
[115 139]
[116 138]
[117 137]
[118 136]
[120 134]
[121 133]
[122 132]
[166 179]
[167 178]
[168 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
