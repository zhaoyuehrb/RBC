%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 21:22:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUGCCUGGCGGGACCGACUGGCCCGGCGGCGUGGCCCCGCCCCGCCCUGCCCUUCCCUGGCCCAAUCCCCCACGACUAGGGGCCGACUCUUUCCUGGACUGACUUCGAGACAUUCCCGAUCGCGCAUUUUCCUGGAGGGCGCGAACGGCGCCCCUGCACACACUGUUUAGACCCGCUGGCUGAGCCGGGCAGCCCCAGCCUAGGCCUUGACUCCCGCUGCCUGCUGAGGGGCAAUAAACCAGAACCAAAGUC\
G\
) } def
/len { sequence length } bind def

/coor [
[177.36264038 249.29261780]
[191.95759583 252.75489807]
[205.48371887 259.24121094]
[195.71762085 247.85598755]
[185.95152283 236.47076416]
[176.18542480 225.08554077]
[166.41932678 213.70031738]
[156.65322876 202.31509399]
[146.88713074 190.92987061]
[137.12103271 179.54464722]
[127.35492706 168.15942383]
[117.58882904 156.77420044]
[102.67951965 158.42112732]
[95.63385010 171.66342163]
[88.58817291 184.90573120]
[87.32714081 193.92262268]
[81.37458801 198.26606750]
[74.16757202 211.42124939]
[75.07580566 227.79522705]
[61.20345306 236.54107666]
[46.82119751 228.66181946]
[46.72426987 212.26295471]
[61.01238251 204.21423340]
[68.21939850 191.05905151]
[75.34587860 177.86006165]
[82.39154816 164.61775208]
[89.43721771 151.37545776]
[78.41771698 141.19850159]
[65.77642822 149.27302551]
[53.13514328 157.34754944]
[40.59350586 165.57598877]
[28.15338707 173.95712280]
[15.71326923 182.33825684]
[3.27314997 190.71939087]
[-3.84874439 204.84700012]
[-18.72715378 205.54139709]
[-31.16727257 213.92254639]
[-43.60739136 222.30368042]
[-53.36508942 236.16815186]
[-69.38893890 230.62985229]
[-68.50292206 213.69908142]
[-51.98852921 209.86355591]
[-39.54840851 201.48242188]
[-27.10828972 193.10128784]
[-20.87619591 179.57315063]
[-5.10798645 178.27928162]
[7.33213282 169.89814758]
[19.77225113 161.51699829]
[32.21237183 153.13586426]
[33.98611832 148.73002625]
[38.53057861 145.37875366]
[45.06062317 144.70625305]
[57.70190430 136.63172913]
[70.34319305 128.55720520]
[69.15634918 121.15171051]
[54.34535217 123.52539062]
[39.53432083 125.89884186]
[37.16109848 111.08776855]
[51.97167587 108.71439362]
[66.78266907 106.34071350]
[65.59583282 98.93521881]
[51.06435394 95.21552277]
[36.53287506 91.49583435]
[22.00139427 87.77614594]
[7.46991539 84.05644989]
[-7.06156445 80.33676147]
[-23.01033401 90.60346985]
[-41.08088303 86.00157928]
[-49.86904144 69.91899109]
[-64.48710632 66.55564880]
[-77.74898529 75.15204620]
[-93.18746948 71.77140045]
[-101.64318085 58.41937637]
[-98.09949493 43.01749802]
[-84.65881348 34.70342636]
[-69.29526520 38.40975189]
[-61.12376022 51.93758011]
[-46.50569534 55.30092621]
[-38.40408325 47.31620026]
[-27.34297371 44.18876648]
[-16.02659225 46.80298996]
[-7.27954769 54.62464142]
[-3.34187293 65.80528259]
[11.18960667 69.52497101]
[25.72108650 73.24466705]
[40.25256729 76.96435547]
[54.78404617 80.68404388]
[69.31552124 84.40373993]
[74.53717804 79.02002716]
[63.56791687 68.78892517]
[53.00621033 58.13761520]
[63.44908524 47.36977768]
[74.41898346 57.60107422]
[84.98047638 68.25259399]
[90.20212555 62.86888123]
[86.04015350 48.45784378]
[81.87818146 34.04680634]
[70.61562347 22.93531609]
[74.51775360 8.56094170]
[70.35578156 -5.85009575]
[66.19380951 -20.26113319]
[51.05566788 -33.60131073]
[56.58229828 -52.14824677]
[52.06928253 -66.45323944]
[34.69087601 -71.70849609]
[24.05767441 -86.22959137]
[24.29030800 -104.06840515]
[35.10574341 -118.05780792]
[30.24438095 -132.24819946]
[25.38301849 -146.43858337]
[13.59082127 -156.98632812]
[16.78571510 -171.53424072]
[11.92435265 -185.72462463]
[1.07103956 -198.74929810]
[10.58220100 -212.78404236]
[26.70141792 -207.52978516]
[26.11474228 -190.58599854]
[30.97610474 -176.39559937]
[42.42058563 -166.86286926]
[39.57340622 -151.29995728]
[44.43477249 -137.10955811]
[49.29613495 -122.91917419]
[61.26887512 -121.12051392]
[71.40711975 -114.37158966]
[77.76110077 -103.89688873]
[79.07780457 -91.64414215]
[75.04759979 -79.92226410]
[66.37427521 -70.96625519]
[70.88729095 -56.66126251]
[80.30828094 -52.79703522]
[86.18354797 -44.21329117]
[86.38455200 -33.59409714]
[80.60485077 -24.42310333]
[84.76682281 -10.01206684]
[88.92878723 4.39897060]
[99.89366150 14.47968864]
[96.28922272 29.88483620]
[100.45118713 44.29587555]
[104.61315918 58.70691299]
[119.54149628 60.17146683]
[126.42476654 46.84402847]
[133.30804443 33.51659393]
[140.19131470 20.18915939]
[147.07458496 6.86172247]
[153.95785522 -6.46571350]
[150.47381592 -22.12588692]
[160.65693665 -34.52281952]
[176.69557190 -34.14664078]
[186.28627014 -21.28592873]
[182.07186890 -5.80631638]
[167.28529358 0.41756010]
[160.40202332 13.74499607]
[153.51875305 27.07243156]
[146.63548279 40.39986801]
[139.75219727 53.72730255]
[132.86892700 67.05474091]
[137.85552979 72.65686035]
[149.05978394 62.68365860]
[160.26402283 52.71044922]
[171.46827698 42.73724365]
[182.67251587 32.76403809]
[190.24665833 19.81674767]
[204.90077209 23.01943588]
[206.38301086 37.94602203]
[192.64572144 43.96828461]
[181.44148254 53.94149017]
[170.23722839 63.91469955]
[159.03298950 73.88790131]
[147.82873535 83.86110687]
[152.81533813 89.46323395]
[166.85057068 84.17054749]
[180.88578796 78.87786102]
[194.92100525 73.58517456]
[201.82192993 67.64614868]
[209.16027832 68.31472015]
[223.25914001 63.19398880]
[233.38883972 50.29742813]
[249.58187866 52.88925171]
[255.18025208 68.30321503]
[244.42483521 80.68275452]
[228.37986755 77.29286194]
[214.28100586 82.41358948]
[200.21369934 87.62039185]
[186.17846680 92.91307831]
[172.14324951 98.20576477]
[158.10803223 103.49845886]
[128.97406006 147.00810242]
[138.74015808 158.39332581]
[148.50625610 169.77854919]
[158.27235413 181.16377258]
[168.03845215 192.54899597]
[177.80455017 203.93421936]
[187.57064819 215.31944275]
[197.33674622 226.70466614]
[207.10284424 238.08988953]
[216.86894226 249.47511292]
[228.37269592 259.10131836]
[241.30152893 266.70693970]
[254.27659607 274.23336792]
[267.29742432 281.68038940]
[280.31826782 289.12738037]
[293.33911133 296.57440186]
[299.89419556 296.92691040]
[304.59704590 300.05206299]
[306.58401489 304.36593628]
[319.41891479 312.12902832]
[332.25378418 319.89212036]
[345.08868408 327.65521240]
[360.25320435 324.09500122]
[373.15902710 332.15069580]
[376.45968628 346.62969971]
[389.29458618 354.39279175]
[405.15344238 351.96868896]
[416.83825684 362.96163940]
[415.38540649 378.93878174]
[401.90942383 387.64382935]
[386.74792480 382.39898682]
[381.53149414 367.22769165]
[368.69659424 359.46459961]
[354.34042358 363.26397705]
[341.21340942 355.57394409]
[337.32559204 340.49011230]
[324.49072266 332.72702026]
[311.65582275 324.96392822]
[298.82092285 317.20083618]
[285.89208984 309.59524536]
[272.87124634 302.14822388]
[259.85043335 294.70123291]
[246.82958984 287.25421143]
[239.48458862 286.66326904]
[233.69590759 279.63577271]
[220.76707458 272.03015137]
[229.53625488 284.19982910]
[235.51791382 297.95556641]
[238.43856812 312.66848755]
[238.16473389 327.66598511]
[234.70890808 342.26245117]
[228.22908020 355.79064941]
[219.02148438 367.63211060]
[207.50701904 377.24548340]
[194.21209717 384.19134521]
[179.74447632 388.15213013]
[164.76553345 388.94680786]
[149.96005249 386.53900146]
[136.00483704 381.03878784]
[123.53786469 372.69766235]
[113.12905884 361.89688110]
[105.25424957 349.13024902]
[100.27343750 334.98132324]
[98.41431427 320.09698486]
[99.76187134 305.15765381]
[104.25451660 290.84625244]
[111.68685150 277.81704712]
[121.71911621 266.66564941]
[133.89270020 257.90185547]
[147.65106201 251.92628479]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 196]
[4 195]
[5 194]
[6 193]
[7 192]
[8 191]
[9 190]
[10 189]
[11 188]
[12 187]
[13 27]
[14 26]
[15 25]
[17 24]
[18 23]
[28 54]
[29 53]
[30 52]
[31 49]
[32 48]
[33 47]
[34 46]
[36 44]
[37 43]
[38 42]
[61 88]
[62 87]
[63 86]
[64 85]
[65 84]
[66 83]
[69 78]
[70 77]
[95 139]
[96 138]
[97 137]
[99 135]
[100 134]
[101 133]
[103 129]
[104 128]
[108 122]
[109 121]
[110 120]
[112 118]
[113 117]
[140 156]
[141 155]
[142 154]
[143 153]
[144 152]
[145 151]
[170 186]
[171 185]
[172 184]
[173 183]
[175 182]
[176 181]
[197 232]
[198 231]
[199 229]
[200 228]
[201 227]
[202 226]
[205 225]
[206 224]
[207 223]
[208 222]
[211 219]
[212 218]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
