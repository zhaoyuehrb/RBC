%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 18:59:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUUUCCUGAAGAGAAGUUCUCUUUAUGAAUUAAGAGUACAAAAUCCUCUGAGAUGAAGCAACCUAUCCAGUUCUAUGGAAUGAAUGGAGAAUCUUUCAGAAAGACCAUCAUUGGGUAGGGCAAACUGAUUUUUUUCCUUUCCCCCAAAAGAGUAUGAAAAAUAAAUGUCUUGUUUAUUAUCAUUAUCA\
) } def
/len { sequence length } bind def

/coor [
[123.69340515 148.07261658]
[111.40641785 156.67668152]
[98.71208191 148.68582153]
[101.15712738 133.88648987]
[102.97921753 118.99756622]
[95.48147583 119.18162537]
[86.74430847 131.37432861]
[78.00714874 143.56701660]
[76.25809479 159.29124451]
[62.55550003 165.12976074]
[53.81833649 177.32246399]
[45.08116913 189.51516724]
[36.34400558 201.70787048]
[27.60683823 213.90057373]
[18.86967278 226.09327698]
[10.13250732 238.28596497]
[1.39534235 250.47866821]
[-2.91585183 266.87530518]
[-19.86516571 267.27163696]
[-24.93804550 251.09443665]
[-10.79735756 241.74150085]
[-2.06019258 229.54879761]
[6.67697287 217.35610962]
[15.41413879 205.16340637]
[24.15130424 192.97070312]
[32.88846970 180.77799988]
[41.62563324 168.58529663]
[50.36280060 156.39260864]
[51.48691177 141.54048157]
[65.81444550 134.82986450]
[74.55161285 122.63715363]
[83.28877258 110.44445801]
[79.43300629 104.01148987]
[64.43501282 104.25695038]
[71.72146606 91.14556122]
[67.86569214 84.71260071]
[52.99402237 86.67049408]
[38.12234879 88.62838745]
[23.25067520 90.58628082]
[16.76854515 104.58576202]
[3.73450065 112.83907318]
[-11.69234467 112.71262360]
[-24.58934021 104.24674225]
[-30.84110069 90.14287567]
[-28.45271301 74.90151215]
[-18.18630219 63.38611603]
[-3.31784296 59.27120972]
[11.40819263 63.86983871]
[21.29278183 75.71460724]
[36.16445541 73.75671387]
[51.03612900 71.79882050]
[65.90779877 69.84092712]
[76.25090790 58.97721863]
[77.47672272 44.02738953]
[78.70253754 29.07756233]
[79.92835999 14.12773418]
[73.34470367 -0.25858083]
[82.09620667 -12.31098270]
[83.32202148 -27.26081085]
[84.54784393 -42.21063995]
[84.30241394 -57.20863342]
[82.58811188 -72.11035156]
[78.94858551 -77.66101074]
[78.70716095 -83.35920715]
[81.06974030 -87.52661133]
[79.84392548 -102.47643280]
[78.61811066 -117.42626190]
[77.39229584 -132.37609863]
[76.16647339 -147.32592773]
[74.94065857 -162.27575684]
[73.71484375 -177.22558594]
[72.48902893 -192.17541504]
[71.26321411 -207.12522888]
[70.03739929 -222.07505798]
[61.33536148 -228.63438416]
[57.76198196 -238.69615173]
[60.27234268 -248.84808350]
[67.80032349 -255.78671265]
[67.06430817 -270.76864624]
[66.32829285 -285.75057983]
[65.59227753 -300.73251343]
[54.16456985 -311.31765747]
[53.63156891 -326.52194214]
[63.79331207 -337.35128784]
[50.97375870 -345.89324951]
[45.70369720 -360.17889404]
[49.80752945 -374.65725708]
[61.50981140 -383.83300781]
[60.77379608 -398.81494141]
[60.03778076 -413.79687500]
[59.30176544 -428.77880859]
[58.56575012 -443.76074219]
[49.22927475 -457.24267578]
[56.48040390 -471.95162964]
[72.85980225 -472.75628662]
[81.51773834 -458.82888794]
[73.54768372 -444.49676514]
[74.28369904 -429.51483154]
[75.01971436 -414.53289795]
[75.75572968 -399.55096436]
[76.49174500 -384.56903076]
[89.03705597 -376.58447266]
[94.54025269 -362.57809448]
[90.69580841 -347.84466553]
[78.77524567 -338.08731079]
[89.94951630 -328.30612183]
[90.90936279 -313.12280273]
[80.57421112 -301.46853638]
[81.31022644 -286.48660278]
[82.04624176 -271.50466919]
[82.78225708 -256.52273560]
[94.42913055 -241.09945679]
[84.98722839 -223.30088806]
[86.21304321 -208.35105896]
[87.43885803 -193.40122986]
[88.66467285 -178.45140076]
[89.89048767 -163.50157166]
[91.11630249 -148.55174255]
[92.34212494 -133.60191345]
[93.56793976 -118.65208435]
[94.79375458 -103.70225525]
[96.01956940 -88.75242615]
[97.48983002 -73.82465363]
[99.20413208 -58.92293549]
[106.00314331 -72.29355621]
[117.87226868 -81.46546173]
[132.52549744 -84.67213440]
[147.14060974 -81.29596710]
[158.90272522 -71.98721313]
[165.54641724 -58.53874969]
[165.79214478 -43.54076385]
[159.59254456 -29.88188171]
[148.14169312 -20.19282150]
[133.64501953 -16.33970642]
[118.89460754 -19.06464958]
[106.73139954 -27.84282494]
[99.49766541 -40.98482513]
[98.27185059 -26.03499413]
[97.04603577 -11.08516693]
[103.71736908 2.23183632]
[94.87818909 15.35354996]
[93.65236664 30.30337906]
[92.42655182 45.25320816]
[91.20073700 60.20303726]
[100.73755646 48.62508011]
[114.19596863 42.00154495]
[129.18783569 41.50774765]
[143.05293274 47.23130798]
[153.33096313 58.15661240]
[158.19812012 72.34500885]
[156.79078674 87.27884674]
[149.35865784 100.30817413]
[137.22174072 109.12047577]
[146.54664612 120.86978149]
[162.00123596 122.81748962]
[171.29064941 134.86579895]
[169.33856201 149.58737183]
[178.66346741 161.33666992]
[187.98837280 173.08596802]
[197.31327820 184.83528137]
[210.02424622 187.08595276]
[217.54827881 197.07746887]
[216.28253174 209.11775208]
[225.41395569 221.01805115]
[234.54537964 232.91836548]
[243.67680359 244.81866455]
[252.80821228 256.71896362]
[261.93963623 268.61926270]
[271.07107544 280.51956177]
[286.72515869 284.03073120]
[293.61032104 298.52120972]
[286.44482422 312.87515259]
[270.72543335 316.08142090]
[258.51071167 305.68045044]
[259.17077637 289.65097046]
[250.03933716 277.75067139]
[240.90791321 265.85037231]
[231.77650452 253.95007324]
[222.64508057 242.04977417]
[213.51365662 230.14947510]
[204.38223267 218.24917603]
[187.83470154 212.42631531]
[185.56398010 194.16018677]
[176.23907471 182.41088867]
[166.91416931 170.66157532]
[157.58924866 158.91227722]
[142.80897522 157.47045898]
[133.18481445 145.68783569]
[134.79734802 130.19468689]
[125.47244263 118.44538879]
[117.97470093 118.62944794]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 32]
[7 31]
[8 30]
[10 28]
[11 27]
[12 26]
[13 25]
[14 24]
[15 23]
[16 22]
[17 21]
[36 52]
[37 51]
[38 50]
[39 49]
[53 144]
[54 143]
[55 142]
[56 141]
[58 139]
[59 138]
[60 137]
[61 124]
[62 123]
[65 122]
[66 121]
[67 120]
[68 119]
[69 118]
[70 117]
[71 116]
[72 115]
[73 114]
[74 113]
[78 111]
[79 110]
[80 109]
[81 108]
[84 105]
[88 101]
[89 100]
[90 99]
[91 98]
[92 97]
[153 190]
[154 189]
[157 186]
[158 185]
[159 184]
[160 183]
[163 181]
[164 180]
[165 179]
[166 178]
[167 177]
[168 176]
[169 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
