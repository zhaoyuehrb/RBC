%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 13:35:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGGGAACUGAGAAGUCAAGAUCCUCCCUGGAGGACAGGACUGAAAACCUUGCCAAGCUGUACACAGUUGCUGAUACCCUGUGCAACAGCUCUCAUUUCCUGGCAAGCUCUUUCACAACCCUACAUAUUUCUGAUCAUGUGCUGCCUUUUACUGCUGAAUUAAAACAGAUAUUUCACGAA\
) } def
/len { sequence length } bind def

/coor [
[245.51666260 233.58564758]
[243.15864563 214.80828857]
[230.96279907 206.07550049]
[218.76695251 197.34272766]
[206.57112122 188.60993958]
[194.37527466 179.87716675]
[178.98533630 185.55499268]
[163.08175659 180.90322876]
[152.97683716 167.56217957]
[152.80364990 150.66105652]
[140.45889282 142.14009094]
[128.11413574 133.61912537]
[115.76937866 125.09815216]
[103.42462158 116.57717896]
[88.42685699 116.31826782]
[75.79534149 124.40807343]
[63.16382980 132.49786377]
[50.53231430 140.58767700]
[47.03275299 155.76629639]
[34.10735703 163.79057312]
[19.65842056 160.36073303]
[14.10130119 167.64370728]
[6.73832512 168.47895813]
[-6.03094149 176.34953308]
[-18.80020905 184.22009277]
[-31.56947517 192.09066772]
[-44.33874130 199.96122742]
[-51.64597321 214.64239502]
[-68.02832031 215.38452148]
[-76.63302612 201.42417908]
[-68.60830688 187.12257385]
[-52.20930862 187.19197083]
[-39.44004059 179.32139587]
[-26.67077637 171.45083618]
[-13.90150928 163.58026123]
[-1.13224232 155.70970154]
[11.56862068 147.72921753]
[14.49674129 133.17030334]
[27.19164848 124.78616333]
[42.44251251 127.95616150]
[55.07402802 119.86635590]
[67.70554352 111.77655792]
[80.33705139 103.68675995]
[66.19937134 108.69933319]
[52.35007858 102.93763733]
[45.93959808 89.37644958]
[50.27767563 75.01744843]
[63.12454987 67.27420044]
[77.84735107 70.14457703]
[86.84523010 82.14856720]
[80.80731964 68.41744232]
[74.76940918 54.68632507]
[68.73149872 40.95520401]
[62.69359207 27.22408485]
[56.65568542 13.49296379]
[50.61777496 -0.23815602]
[43.53255844 -13.45933914]
[35.44275665 -26.09085274]
[27.35295486 -38.72236633]
[19.26315498 -51.35387802]
[11.17335415 -63.98539352]
[3.08355403 -76.61690521]
[-13.45646191 -84.68340302]
[-13.60876179 -102.22069550]
[-21.91538429 -114.71069336]
[-30.22200775 -127.20069122]
[-38.52863312 -139.69068909]
[-46.83525467 -152.18067932]
[-62.05202103 -150.53491211]
[-76.28636932 -156.16003418]
[-86.26734924 -167.76341248]
[-89.70140839 -182.67871094]
[-85.79941559 -197.47846985]
[-75.45803070 -208.76184082]
[-61.05361938 -213.93595886]
[-45.89621735 -211.81187439]
[-33.46887970 -202.87768555]
[-26.62732124 -189.18638611]
[-26.94367981 -173.88414001]
[-34.34525681 -160.48730469]
[-26.03863525 -147.99731445]
[-17.73201180 -135.50730896]
[-9.42538834 -123.01731873]
[-1.11876500 -110.52732086]
[10.68922997 -107.82714844]
[17.70832443 -97.46707916]
[15.71506691 -84.70670319]
[23.80486870 -72.07519531]
[31.89466858 -59.44367981]
[39.98447037 -46.81216431]
[48.07426834 -34.18065262]
[56.16407013 -21.54913902]
[57.90349960 -36.44794464]
[67.32618713 -48.11897659]
[81.52361298 -52.95973587]
[96.11346436 -49.47602081]
[106.59227753 -38.74314880]
[109.72554779 -24.07404518]
[104.54613495 -9.99662971]
[92.65276337 -0.85618484]
[77.71656799 0.52590239]
[64.34889221 -6.27606440]
[70.38680267 7.45505571]
[76.42471313 21.18617630]
[82.46262360 34.91729736]
[88.50052643 48.64841461]
[94.53843689 62.37953568]
[100.57634735 76.11065674]
[110.03567505 81.45018768]
[115.05915070 89.62915802]
[115.34577942 97.97362518]
[111.94559479 104.23242188]
[124.29035187 112.75339508]
[136.63510132 121.27436066]
[148.97985840 129.79533386]
[161.32463074 138.31629944]
[173.96499634 132.78311157]
[187.58009338 134.21365356]
[198.61824036 142.12705994]
[204.25334167 154.36543274]
[203.10806274 167.68132019]
[215.30389404 176.41410828]
[227.49974060 185.14688110]
[239.69558716 193.87966919]
[251.89141846 202.61244202]
[263.04833984 198.41778564]
[274.72363281 200.12435913]
[284.02203369 207.19168091]
[288.69442749 217.76455688]
[287.68161011 229.15888977]
[299.56875610 238.30741882]
[311.45590210 247.45596313]
[323.42156982 256.50155640]
[335.46487427 265.44354248]
[347.50814819 274.38552856]
[360.37564087 273.27737427]
[370.22677612 280.99450684]
[372.10586548 292.96063232]
[383.99301147 302.10916138]
[395.88015747 311.25769043]
[407.76733398 320.40621948]
[416.50119019 323.17080688]
[419.77890015 329.81668091]
[431.50637817 339.16903687]
[443.23382568 348.52139282]
[449.74465942 349.89117432]
[453.94030762 353.77264404]
[455.19735718 358.40457153]
[466.59503174 368.15612793]
[477.99270630 377.90768433]
[489.39038086 387.65924072]
[500.78805542 397.41079712]
[516.30407715 400.50320435]
[520.94482422 414.65640259]
[536.98669434 414.85003662]
[546.72314453 427.60076904]
[542.68518066 443.12734985]
[527.97039795 449.51910400]
[513.86669922 441.87280273]
[511.19323730 426.05407715]
[496.49243164 423.65917969]
[491.03649902 408.80847168]
[479.63882446 399.05691528]
[468.24114990 389.30535889]
[456.84347534 379.55380249]
[445.44580078 369.80224609]
[433.88150024 360.24887085]
[422.15402222 350.89651489]
[410.42654419 341.54415894]
[398.61880493 332.29339600]
[386.73162842 323.14486694]
[374.84448242 313.99633789]
[362.95733643 304.84780884]
[345.47232056 303.48593140]
[338.56616211 286.42880249]
[326.52288818 277.48681641]
[314.47958374 268.54483032]
[307.21603394 267.07800293]
[302.30737305 259.34310913]
[290.42022705 250.19458008]
[278.53308105 241.04605103]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 125]
[3 124]
[4 123]
[5 122]
[6 121]
[10 116]
[11 115]
[12 114]
[13 113]
[14 112]
[15 43]
[16 42]
[17 41]
[18 40]
[21 37]
[23 36]
[24 35]
[25 34]
[26 33]
[27 32]
[50 108]
[51 107]
[52 106]
[53 105]
[54 104]
[55 103]
[56 102]
[57 92]
[58 91]
[59 90]
[60 89]
[61 88]
[62 87]
[64 84]
[65 83]
[66 82]
[67 81]
[68 80]
[130 181]
[131 180]
[132 179]
[133 177]
[134 176]
[135 175]
[138 173]
[139 172]
[140 171]
[141 170]
[143 169]
[144 168]
[145 167]
[148 166]
[149 165]
[150 164]
[151 163]
[152 162]
[154 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
