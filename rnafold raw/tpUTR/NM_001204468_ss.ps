%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 20:25:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGCUUCAAGAGCAACUUCUCCACAUGUUGGGUGUCCAUCCUGGGGCAGGGAAGGACAGAGUGUUGGAUGGCUGGGACGGGGCCUUGCUCUUGUCGGCCAGCCCACUCCCCAGCCAGAGAGGGCUUGACCAAAUCAAAUUGAGGUGGUGACUUUUGUUGGAAAAUUGGGCUGGGAUCACGUCCUGUUUUGUAAUAAAAGCUGAAAAGUCUGCAUG\
) } def
/len { sequence length } bind def

/coor [
[102.01113129 245.83091736]
[101.35985565 230.84506226]
[100.70857239 215.85920715]
[100.05729675 200.87335205]
[99.29756165 185.89259338]
[98.42940521 170.91773987]
[97.34454346 155.95703125]
[96.04322052 141.01358032]
[94.74188995 126.07013702]
[78.28225708 115.35054779]
[73.66956329 96.25729370]
[60.01689529 90.04403687]
[46.36422729 83.83077240]
[32.71155548 77.61750793]
[26.11229515 77.87323761]
[21.12151909 75.16677094]
[18.75761795 71.02165222]
[5.29054880 64.41574097]
[-8.17651939 57.80982590]
[-21.64358711 51.20391464]
[-35.11065674 44.59800339]
[-48.57772446 37.99208832]
[-57.48701096 43.84709167]
[-67.94270325 45.46579361]
[-78.04992676 42.62260056]
[-86.00500488 35.89447021]
[-90.41726685 26.54528809]
[-90.55195618 16.28885460]
[-103.71950531 9.10445118]
[-116.88705444 1.92004895]
[-130.05459595 -5.26435375]
[-143.22215271 -12.44875622]
[-156.38969421 -19.63315964]
[-171.24804688 -21.68968773]
[-185.87197876 -18.35187531]
[-200.49589539 -15.01406097]
[-215.11981201 -11.67624664]
[-229.74372864 -8.33843231]
[-241.47619629 2.27570462]
[-255.60607910 -2.43552089]
[-270.22998047 0.90229315]
[-284.85391235 4.24010706]
[-299.47784424 7.57792091]
[-307.67294312 21.09145737]
[-323.04293823 24.77094841]
[-336.46908569 16.43341827]
[-339.98587036 1.02537668]
[-331.50686646 -12.31186008]
[-316.06250000 -15.66554546]
[-302.81564331 -7.04599762]
[-288.19171143 -10.38381195]
[-273.56781006 -13.72162533]
[-258.94387817 -17.05943871]
[-248.25743103 -27.43483353]
[-233.08154297 -22.96235085]
[-218.45762634 -26.30016518]
[-203.83370972 -29.63797951]
[-189.20979309 -32.97579193]
[-174.58586121 -36.31360626]
[-169.78570557 -50.52481461]
[-179.39050293 -62.04644012]
[-188.99530029 -73.56806946]
[-198.60009766 -85.08969116]
[-208.20489502 -96.61132050]
[-214.26156616 -99.24423218]
[-217.58381653 -103.84809113]
[-217.91511536 -108.60837555]
[-227.18232727 -120.40323639]
[-241.79229736 -126.47443390]
[-243.57135010 -141.26240540]
[-252.83856201 -153.05726624]
[-262.10577393 -164.85212708]
[-271.37298584 -176.64700317]
[-280.64019775 -188.44186401]
[-289.90740967 -200.23672485]
[-299.17462158 -212.03158569]
[-313.78460693 -218.10278320]
[-315.56365967 -232.89076233]
[-323.32257080 -237.70249939]
[-324.87817383 -244.92411804]
[-333.97366333 -256.85189819]
[-343.06915283 -268.77969360]
[-352.16464233 -280.70748901]
[-361.26010132 -292.63525391]
[-375.67239380 -301.56402588]
[-371.08227539 -317.88479614]
[-354.12866211 -317.99209595]
[-349.33233643 -301.73074341]
[-340.23684692 -289.80297852]
[-331.14135742 -277.87518311]
[-322.04586792 -265.94738770]
[-312.95037842 -254.01960754]
[-303.76879883 -242.15797424]
[-289.82168579 -236.93041992]
[-287.37976074 -221.29879761]
[-278.11254883 -209.50393677]
[-268.84533691 -197.70907593]
[-259.57812500 -185.91421509]
[-250.31091309 -174.11933899]
[-241.04370117 -162.32447815]
[-231.77648926 -150.52961731]
[-217.82937622 -145.30206299]
[-215.38746643 -129.67044067]
[-206.12025452 -117.87558746]
[-196.68325806 -106.21611786]
[-187.07846069 -94.69448853]
[-177.47366333 -83.17286682]
[-167.86886597 -71.65123749]
[-158.26406860 -60.12961197]
[-149.20529175 -32.80070877]
[-136.03775024 -25.61630630]
[-122.87020111 -18.43190384]
[-109.70265198 -11.24750042]
[-96.53510284 -4.06309795]
[-83.36755371 3.12130475]
[-65.12570190 -3.72674036]
[-47.45930862 5.19283199]
[-41.97180939 24.52502060]
[-28.50474358 31.13093376]
[-15.03767490 37.73684692]
[-1.57060683 44.34275818]
[11.89646149 50.94866943]
[25.36352921 57.55458450]
[38.92481995 63.96483994]
[52.57748795 70.17810059]
[66.23015594 76.39136505]
[79.88282776 82.60462952]
[96.54454803 73.63033295]
[114.95598602 78.00868225]
[126.54683685 68.48753357]
[138.13768005 58.96639252]
[149.72853088 49.44524765]
[151.41612244 33.96009827]
[163.30651855 24.46942139]
[178.05885315 26.17370605]
[189.64970398 16.65256119]
[201.24055481 7.13141775]
[209.64193726 -7.59450769]
[226.11811829 -3.59798312]
[226.83883667 13.34063816]
[210.76168823 18.72226715]
[199.17083740 28.24341202]
[187.57998657 37.76455688]
[186.38688660 52.56698990]
[174.76774597 62.38790131]
[159.24967957 61.03609848]
[147.65882874 70.55724335]
[136.06797791 80.07838440]
[124.47712708 89.59953308]
[125.86243439 93.80048370]
[126.53227234 98.17294312]
[126.46810913 102.59594727]
[140.37767029 108.21057129]
[154.28723145 113.82519531]
[168.19680786 119.43981934]
[182.10636902 125.05444336]
[196.01593018 130.66906738]
[209.92549133 136.28369141]
[223.83506775 141.89831543]
[237.74462891 147.51293945]
[253.43772888 145.50363159]
[262.34362793 157.44238281]
[276.25320435 163.05700684]
[290.16278076 168.67163086]
[304.07232666 174.28625488]
[317.98190308 179.90087891]
[333.67498779 177.89157104]
[342.58090210 189.83032227]
[356.49047852 195.44494629]
[370.40005493 201.05957031]
[384.30960083 206.67419434]
[398.25946045 212.18798828]
[412.24884033 217.60064697]
[428.36077881 214.54498291]
[438.85656738 227.14540100]
[432.93902588 242.43968201]
[416.69561768 244.69436646]
[406.83618164 231.59004211]
[392.84677124 226.17736816]
[385.47769165 226.69512939]
[378.69497681 220.58375549]
[364.78543091 214.96913147]
[350.87585449 209.35450745]
[336.96627808 203.73988342]
[322.26809692 206.15078735]
[312.36727905 193.81044006]
[298.45770264 188.19581604]
[284.54815674 182.58119202]
[270.63858032 176.96656799]
[256.72900391 171.35194397]
[242.03082275 173.76284790]
[232.13000488 161.42250061]
[218.22044373 155.80787659]
[204.31086731 150.19325256]
[190.40130615 144.57862854]
[176.49174500 138.96400452]
[162.58218384 133.34938049]
[148.67260742 127.73475647]
[134.76304626 122.12013245]
[120.85348511 116.50550842]
[115.81851196 121.37929535]
[109.68534088 124.76880646]
[110.98666382 139.71224976]
[112.28799438 154.65570068]
[115.75499725 160.27668762]
[115.85173798 165.95326233]
[113.40425873 170.04959106]
[114.27241516 185.02444458]
[117.89186859 193.40617371]
[115.04315186 200.22207642]
[115.69442749 215.20791626]
[116.34571075 230.19377136]
[116.99698639 245.17962646]
[126.25706482 258.71414185]
[118.92287445 273.38183594]
[102.53919220 274.09387207]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 213]
[2 212]
[3 211]
[4 210]
[5 208]
[6 207]
[7 204]
[8 203]
[9 202]
[11 127]
[12 126]
[13 125]
[14 124]
[17 123]
[18 122]
[19 121]
[20 120]
[21 119]
[22 118]
[28 115]
[29 114]
[30 113]
[31 112]
[32 111]
[33 110]
[34 59]
[35 58]
[36 57]
[37 56]
[38 55]
[40 53]
[41 52]
[42 51]
[43 50]
[60 109]
[61 108]
[62 107]
[63 106]
[64 105]
[67 104]
[68 103]
[70 101]
[71 100]
[72 99]
[73 98]
[74 97]
[75 96]
[76 95]
[78 93]
[80 92]
[81 91]
[82 90]
[83 89]
[84 88]
[129 149]
[130 148]
[131 147]
[132 146]
[135 143]
[136 142]
[137 141]
[152 200]
[153 199]
[154 198]
[155 197]
[156 196]
[157 195]
[158 194]
[159 193]
[160 192]
[162 190]
[163 189]
[164 188]
[165 187]
[166 186]
[168 184]
[169 183]
[170 182]
[171 181]
[172 179]
[173 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
