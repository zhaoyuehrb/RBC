%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 15:04:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGCACUGACUGCCCCUGGUCUUCCACCUCUCUGCCCUGAACACCCAAUCUCGGCCCCUCUCGCCACCCUCCUGCAUUUCUGUUCAGUUCGUUUAUGUUAUUUUUUACUCCCCCAUCCCCUGUGGCCCUCUAAUGACACCAUUCUUCUGGAAAAUGCUGGAGAAGCAAUAAAGGUUGUACCAGUCAGA\
) } def
/len { sequence length } bind def

/coor [
[104.95919037 285.88241577]
[91.71280670 293.96405029]
[76.24873352 292.68267822]
[64.51320648 282.53097534]
[61.01879120 267.41247559]
[67.10915375 253.14057922]
[80.44242096 245.20310974]
[81.68111420 230.25433350]
[82.91980743 215.30557251]
[84.15849304 200.35679626]
[85.39718628 185.40803528]
[86.63587189 170.45925903]
[87.87456512 155.51049805]
[82.64662170 155.56045532]
[77.31996155 155.11112976]
[71.94273376 154.14590454]
[66.56521606 152.65289307]
[61.23934555 150.62509155]
[51.08012009 161.66094971]
[40.92089844 172.69680786]
[37.86465454 188.80865479]
[22.29612923 193.96162415]
[10.23088455 182.85478210]
[14.08061028 166.91389465]
[29.88503838 162.53758240]
[40.04426193 151.50172424]
[50.20348358 140.46586609]
[46.96532822 133.70094299]
[33.43545914 140.17724609]
[22.56895256 150.51742554]
[9.37702465 143.37788391]
[12.09078407 128.62539673]
[26.95914459 126.64738464]
[40.48901367 120.17106628]
[37.25085449 113.40613556]
[22.28365135 114.39749146]
[7.31644630 115.38885498]
[-3.07231021 126.99538422]
[-18.26530647 127.78754425]
[-29.26633453 117.81192780]
[-44.23353958 118.80328369]
[-52.39038086 132.00349426]
[-66.76102448 137.85705566]
[-81.81967163 134.11314392]
[-91.77595520 122.21138000]
[-92.80149078 106.72823334]
[-84.50193024 93.61728668]
[-70.06863403 87.91996765]
[-55.05148697 91.82701111]
[-45.22489929 103.83608246]
[-30.25769424 102.84472656]
[-20.66847420 91.50530243]
[-5.50372362 90.28671265]
[6.32508755 100.42164612]
[21.29229164 99.43029022]
[36.25949478 98.43893433]
[37.71636581 88.90637970]
[40.57903671 79.77648926]
[44.75967026 71.25350952]
[50.14123917 63.52447891]
[56.58069992 56.75511169]
[63.91270828 51.08628464]
[71.95384216 46.63113022]
[80.50714111 43.47281265]
[89.36692047 41.66309738]
[98.32370758 41.22159576]
[107.16918945 42.13585663]
[115.70106506 44.36215591]
[123.72765350 47.82701492]
[131.07221985 52.42942810]
[140.86099243 41.06370544]
[150.64978027 29.69798279]
[160.43856812 18.33226013]
[163.58169556 2.82641196]
[177.75000000 -1.76797915]
[187.53878784 -13.13370228]
[197.32757568 -24.49942589]
[207.11636353 -35.86514664]
[216.90515137 -47.23087311]
[226.69393921 -58.59659576]
[227.66950989 -63.76103592]
[230.27641296 -67.63807678]
[233.74632263 -69.82058716]
[237.26092529 -70.26757812]
[247.60122681 -81.13395691]
[257.94152832 -92.00033569]
[268.28182983 -102.86671448]
[278.62213135 -113.73309326]
[271.46835327 -127.04777527]
[268.78387451 -141.90161133]
[270.81927490 -156.83766174]
[277.36270142 -170.39489746]
[287.76199341 -181.25108337]
[300.98968506 -188.35176086]
[315.74435425 -191.01260376]
[330.57879639 -188.98542786]
[344.04193115 -182.48121643]
[354.38223267 -193.34759521]
[364.72253418 -204.21397400]
[375.06283569 -215.08035278]
[385.40313721 -225.94673157]
[395.74343872 -236.81311035]
[406.08374023 -247.67948914]
[400.10766602 -258.28582764]
[397.08679199 -270.06427002]
[397.22015381 -282.20874023]
[400.49118042 -293.89022827]
[406.66931152 -304.31314087]
[415.32635498 -312.76968384]
[425.86596680 -318.68783569]
[437.56497192 -321.67007446]
[449.62271118 -321.51995850]
[461.21606445 -318.25527954]
[471.55554199 -312.10610962]
[482.59140015 -322.26535034]
[493.62725830 -332.42456055]
[504.66311646 -342.58377075]
[506.76007080 -358.48919678]
[520.57666016 -366.64285278]
[535.51391602 -360.78991699]
[540.11334229 -345.42031860]
[530.84661865 -332.32424927]
[514.82232666 -331.54791260]
[503.78646851 -321.38870239]
[492.75061035 -311.22949219]
[481.71475220 -301.07025146]
[488.52700806 -284.43261719]
[488.45022583 -266.42065430]
[481.47021484 -249.77920532]
[468.62667847 -237.05424500]
[451.85852051 -230.20324707]
[433.71118164 -230.29420471]
[416.95010376 -237.33918762]
[406.60980225 -226.47280884]
[396.26950073 -215.60643005]
[385.92919922 -204.74005127]
[375.58889771 -193.87367249]
[365.24859619 -183.00729370]
[354.90829468 -172.14091492]
[362.07208252 -159.01683044]
[364.83230591 -144.30114746]
[362.90631104 -129.43270874]
[356.47024536 -115.86922455]
[346.14306641 -104.94441223]
[332.92694092 -97.73682404]
[318.11019897 -94.96335602]
[303.14151001 -96.90799713]
[289.48849487 -103.39279175]
[279.14819336 -92.52641296]
[268.80789185 -81.66003418]
[258.46759033 -70.79365540]
[248.12730408 -59.92727661]
[238.05966187 -48.80780792]
[228.27087402 -37.44208527]
[218.48208618 -26.07636261]
[208.69329834 -14.71063900]
[198.90451050 -3.34491587]
[189.11572266 8.02080727]
[186.67276001 22.71370316]
[171.80429077 28.12104607]
[162.01550293 39.48677063]
[152.22671509 50.85249329]
[142.43794250 62.21821594]
[155.70497131 88.80190277]
[153.74139404 118.44732666]
[137.08407593 143.04895020]
[145.28829956 155.60646057]
[153.49252319 168.16395569]
[161.69674683 180.72145081]
[169.90097046 193.27894592]
[184.76953125 200.19688416]
[185.94296265 216.55400085]
[172.21415710 225.52348328]
[157.70611572 217.87831116]
[157.34347534 201.48316956]
[149.13925171 188.92567444]
[140.93502808 176.36817932]
[132.73080444 163.81068420]
[124.52658081 151.25317383]
[117.55624390 154.03906250]
[110.27949524 155.88179016]
[102.82333374 156.74919128]
[101.58464050 171.69795227]
[100.34595490 186.64672852]
[99.10726166 201.59548950]
[97.86856842 216.54426575]
[96.62988281 231.49302673]
[95.39118958 246.44178772]
[107.23614502 256.46560669]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 188]
[8 187]
[9 186]
[10 185]
[11 184]
[12 183]
[13 182]
[18 27]
[19 26]
[20 25]
[35 56]
[36 55]
[37 54]
[40 51]
[41 50]
[70 163]
[71 162]
[72 161]
[73 160]
[75 158]
[76 157]
[77 156]
[78 155]
[79 154]
[80 153]
[84 152]
[85 151]
[86 150]
[87 149]
[88 148]
[97 139]
[98 138]
[99 137]
[100 136]
[101 135]
[102 134]
[103 133]
[114 126]
[115 125]
[116 124]
[117 123]
[166 179]
[167 178]
[168 177]
[169 176]
[170 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
