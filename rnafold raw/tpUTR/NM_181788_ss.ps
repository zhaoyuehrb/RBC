%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 09:07:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAACGCGGGCUAAAACCGACCGGACAUCUAGCGGGCAGGGGAAGACUCCACUAAAGACUUCCACAAAGACCUCCCCUAAAUCUGAAGGUCUUCCUGAUCCAGUUGGGAAUGCAUCUUGUGGGAGCAGCUUCACUCCCACCACGGACCAAUGCCUUUCCCCCAUAGGCCCCAAGAAGAGCGGCUGUCACACUCAUUGAAAUGAAAUGGACCUCUAGACCA\
) } def
/len { sequence length } bind def

/coor [
[55.00534058 248.08180237]
[49.78608704 262.14450073]
[58.25220871 273.01651001]
[60.22698212 286.54446411]
[55.30064774 299.18127441]
[44.85888672 307.66677856]
[31.69510078 309.86865234]
[26.27647591 323.85574341]
[20.85785103 337.84280396]
[28.55495071 351.45489502]
[25.65078545 366.82043457]
[13.51661205 376.68429565]
[-2.11818433 376.38906860]
[-13.87133026 366.07415771]
[-16.19334984 350.60992432]
[-7.98785639 337.29812622]
[6.87076712 332.42419434]
[12.28939247 318.43710327]
[17.70801735 304.45001221]
[8.37190247 290.94354248]
[8.93432426 274.36770630]
[19.37159538 261.26501465]
[35.72338867 256.92526245]
[40.94264221 242.86254883]
[31.41547966 229.49015808]
[31.74221992 212.90798950]
[41.99218369 199.65824890]
[58.28063965 195.08650208]
[63.29946518 180.95103455]
[68.31829071 166.81556702]
[73.33712006 152.68009949]
[78.35594177 138.54463196]
[60.01744843 118.85603333]
[56.49100494 92.18196869]
[42.39157104 87.06279755]
[28.29213333 81.94362640]
[14.15666866 76.92480469]
[-0.01411210 72.00656891]
[-14.18489265 67.08834076]
[-28.35567284 62.17011261]
[-43.24630737 60.36206055]
[-58.18231964 61.74608612]
[-73.11833191 63.13011169]
[-88.05434418 64.51413727]
[-102.99035645 65.89816284]
[-116.01775360 74.87577820]
[-129.40463257 68.34580994]
[-144.34065247 69.72983551]
[-153.09478760 82.68741608]
[-168.14395142 86.93672943]
[-182.38240051 80.47136688]
[-189.08714294 66.34407806]
[-185.09243774 51.22533417]
[-172.28443909 42.25374985]
[-156.71070862 43.66542816]
[-145.72467041 54.79381943]
[-130.78866577 53.40979385]
[-118.82958984 44.53117371]
[-104.37438202 50.96215057]
[-89.43836975 49.57812500]
[-74.50235748 48.19409943]
[-59.56634521 46.81007385]
[-44.63033295 45.42604828]
[-42.37362671 38.27361679]
[-52.50531769 27.21247673]
[-37.86021423 23.96875381]
[-35.60350800 16.81632233]
[-47.04069901 7.11113310]
[-58.47788620 -2.59405613]
[-69.91507721 -12.29924488]
[-81.35226440 -22.00443459]
[-92.78945923 -31.70962334]
[-104.22664642 -41.41481400]
[-117.93266296 -34.77666092]
[-133.15391541 -34.29363251]
[-147.25323486 -40.04941559]
[-157.78782654 -51.04679108]
[-162.93251038 -65.38039398]
[-161.79594421 -80.56683350]
[-154.57502747 -93.97498322]
[-142.52084351 -103.28178406]
[-127.72185516 -106.87478638]
[-112.74206543 -104.13147736]
[-100.17681885 -95.52715302]
[-92.20311737 -82.55256653]
[-90.20245361 -67.45563507]
[-94.52145386 -52.85200119]
[-83.08426666 -43.14681244]
[-71.64707947 -33.44162369]
[-60.20988846 -23.73643494]
[-48.77269745 -14.03124523]
[-37.33551025 -4.32605648]
[-25.89831924 5.37913275]
[-23.43744278 47.99933243]
[-9.26666260 52.91756058]
[4.90411758 57.83579254]
[19.07489777 62.75402069]
[26.41914368 61.97818756]
[33.41130066 67.84419250]
[47.51073837 72.96336365]
[61.61017609 78.08252716]
[69.93927002 67.58848572]
[81.02958679 60.07159424]
[93.86243439 56.22232819]
[107.25904083 56.39426041]
[119.98887634 60.57159805]
[128.94308472 48.53739166]
[137.89729309 36.50318527]
[146.85151672 24.46898079]
[155.80572510 12.43477535]
[157.51708984 -5.90310383]
[173.89401245 -12.21760845]
[182.67625427 -24.37788010]
[191.45849609 -36.53815460]
[199.89151001 -48.94316483]
[207.96847534 -61.58288574]
[216.04545593 -74.22260284]
[216.05015564 -94.38582611]
[233.59584045 -102.52214813]
[241.31024170 -115.38636017]
[249.02464294 -128.25057983]
[256.73904419 -141.11479187]
[264.45343018 -153.97900391]
[272.16784668 -166.84323120]
[279.88223267 -179.70744324]
[273.68313599 -193.93244934]
[277.06207275 -209.07716370]
[288.71978760 -219.31813049]
[304.17364502 -220.71749878]
[317.48129272 -212.73716736]
[323.52572632 -198.44575500]
[319.98269653 -183.33857727]
[308.21456909 -173.22468567]
[292.74645996 -171.99304199]
[285.03204346 -159.12882996]
[277.31765747 -146.26461792]
[269.60324097 -133.40039062]
[261.88885498 -120.53617859]
[254.17445374 -107.67195892]
[246.46005249 -94.80774689]
[249.82046509 -85.16736603]
[247.27005005 -75.05528259]
[239.41598511 -67.86512756]
[228.68516541 -66.14563751]
[220.60820007 -53.50591278]
[212.53123474 -40.86619186]
[212.99655151 -38.10891724]
[212.40179443 -35.00178909]
[210.60847473 -31.94617844]
[207.62533569 -29.38605309]
[203.61877441 -27.75591087]
[194.83653259 -15.59563828]
[186.05429077 -3.43536615]
[187.67102051 8.54800320]
[180.46022034 18.74949074]
[167.83992004 21.38898659]
[158.88571167 33.42319107]
[149.93150330 45.45739746]
[140.97729492 57.49160385]
[132.02308655 69.52581024]
[136.84930420 74.08671570]
[141.01544189 79.41510010]
[144.39932251 85.41366577]
[146.89335632 91.96570587]
[148.40768433 98.93730164]
[148.87286377 106.18006897]
[163.35713196 110.07952118]
[177.84141541 113.97896576]
[192.32569885 117.87841034]
[206.83732605 121.67481232]
[218.68153381 111.65012360]
[234.15852356 110.53541565]
[247.31706238 118.75930786]
[253.09742737 133.15954590]
[249.27696228 148.19895935]
[237.32469177 158.09455872]
[221.83653259 159.04130554]
[208.76797485 150.67515564]
[203.14416504 136.21305847]
[195.89270020 137.61172485]
[188.42625427 132.36268616]
[173.94197083 128.46324158]
[159.45768738 124.56379700]
[144.97341919 120.66435242]
[136.71759033 133.18797302]
[146.01026917 144.96278381]
[155.30296326 156.73757935]
[163.06993103 161.53074646]
[164.64262390 168.74645996]
[173.76699829 180.65216064]
[190.93650818 187.31658936]
[192.52819824 204.79638672]
[201.82087708 216.57118225]
[211.11357117 228.34599304]
[220.40626526 240.12078857]
[235.83311462 245.68351746]
[238.46237183 261.87051392]
[225.58924866 272.02999878]
[210.45652771 265.71075439]
[208.63145447 249.41348267]
[199.33877563 237.63867188]
[190.04608154 225.86387634]
[180.75340271 214.08908081]
[168.78504944 212.36468506]
[160.94631958 202.63739014]
[161.86129761 189.77653503]
[152.73692322 177.87081909]
[143.52815247 166.03027344]
[134.23547363 154.25546265]
[124.94278717 142.48066711]
[113.92588043 145.49291992]
[102.89772797 145.79965210]
[92.49140930 143.56346130]
[87.47257996 157.69892883]
[82.45375824 171.83439636]
[77.43492889 185.96986389]
[72.41610718 200.10531616]
[81.03591156 210.85589600]
[83.20278931 224.35441589]
[78.45658112 237.05998230]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 24]
[2 23]
[7 19]
[8 18]
[9 17]
[28 217]
[29 216]
[30 215]
[31 214]
[32 213]
[34 101]
[35 100]
[36 99]
[37 97]
[38 96]
[39 95]
[40 94]
[41 63]
[42 62]
[43 61]
[44 60]
[45 59]
[47 57]
[48 56]
[67 93]
[68 92]
[69 91]
[70 90]
[71 89]
[72 88]
[73 87]
[106 160]
[107 159]
[108 158]
[109 157]
[110 156]
[112 153]
[113 152]
[114 151]
[115 146]
[116 145]
[117 144]
[119 140]
[120 139]
[121 138]
[122 137]
[123 136]
[124 135]
[125 134]
[166 184]
[167 183]
[168 182]
[169 181]
[170 179]
[185 210]
[186 209]
[187 208]
[189 207]
[190 206]
[192 203]
[193 202]
[194 201]
[195 200]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
