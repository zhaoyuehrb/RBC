%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Sep  9 23:45:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCCCCCAGGACAGGGACCCUCAUCUGCCUUACUGGUUGGCCCAAGCCCUGCCUGACUGACCACCCCCUCAGAGCACAGAUCAGGGACCUCACGCAUCUCUUUCUCAUAUACAUGGACUCUCUGUUGGCCUGCAAACACAUUUACUUCUCCUCUUAUGAGACUAUUUAUCUUUAAUAAAGCACUGGAUAUAAAUCAA\
) } def
/len { sequence length } bind def

/coor [
[97.80425262 160.47288513]
[94.73215485 175.15492249]
[91.66005707 189.83695984]
[88.58795929 204.51899719]
[94.21632385 219.92202759]
[83.48502350 232.32247925]
[67.43349457 228.96382141]
[62.57417679 213.30116272]
[73.90592194 201.44689941]
[76.97801971 186.76486206]
[80.05011749 172.08282471]
[83.12222290 157.40078735]
[56.13031769 135.07238770]
[47.60615921 103.35835266]
[32.65333557 102.16960144]
[17.70051384 100.98085785]
[3.33056593 107.60015869]
[-8.74349499 98.87855530]
[-23.69631767 97.68980408]
[-38.64913940 96.50106049]
[-53.60195923 95.31230927]
[-67.97190857 101.93161011]
[-80.04596710 93.21000671]
[-94.99879456 92.02125549]
[-109.95161438 90.83251190]
[-124.90443420 89.64376068]
[-139.85725403 88.45500946]
[-154.43443298 91.99139404]
[-167.18031311 99.89978027]
[-172.22406006 115.12935638]
[-187.32501221 120.54607391]
[-200.89900208 111.99468994]
[-202.53323364 96.03508759]
[-190.97406006 84.91011810]
[-175.08869934 87.15389252]
[-162.34281921 79.24551392]
[-165.07495117 72.26085663]
[-170.53924561 58.29155350]
[-173.27139282 51.30689621]
[-188.00032043 54.14566803]
[-202.72924805 56.98443604]
[-214.76181030 68.12667084]
[-230.34541321 63.01946259]
[-233.44897461 46.91666794]
[-220.87980652 36.38346481]
[-205.56800842 42.25550461]
[-190.83908081 39.41673660]
[-176.11015320 36.57796860]
[-175.21975708 29.13100815]
[-172.54858398 6.79013062]
[-186.19306946 0.55890554]
[-199.83753967 -5.67231989]
[-213.53102112 -11.79510403]
[-227.27265930 -17.80906105]
[-241.01428223 -23.82302094]
[-254.75590515 -29.83697891]
[-269.32302856 -24.31999588]
[-283.17330933 -30.61475945]
[-288.34313965 -44.53627014]
[-302.96832275 -38.54630661]
[-317.51293945 -44.72929764]
[-323.34793091 -59.41698837]
[-317.01153564 -73.89543152]
[-302.26296997 -79.57482147]
[-287.85232544 -73.08567810]
[-282.32919312 -58.27789688]
[-268.59478760 -63.92605972]
[-254.57313538 -58.02280807]
[-248.74194336 -43.57860565]
[-235.00032043 -37.56464767]
[-221.25869751 -31.55068970]
[-207.51707458 -25.53673172]
[-200.12103271 -25.73522568]
[-193.60632324 -19.31679916]
[-179.96183777 -13.08557415]
[-166.31735229 -6.85434914]
[-138.66850281 73.50218964]
[-123.71568298 74.69094086]
[-108.76286316 75.87969208]
[-93.81004333 77.06843567]
[-78.85722351 78.25718689]
[-65.55680084 71.55285645]
[-52.41321182 80.35948944]
[-37.46038818 81.54823303]
[-22.50756836 82.73698425]
[-7.55474567 83.92573547]
[5.74567652 77.22140503]
[18.88926315 86.02803040]
[33.84208679 87.21678162]
[48.79490662 88.40553284]
[51.55973816 79.75316620]
[55.77454376 71.70685577]
[61.31315613 64.50744629]
[68.00978851 58.37044525]
[75.66400146 53.47954941]
[84.04666138 49.98116302]
[92.90685272 47.97999954]
[101.97937012 47.53596115]
[110.99263763 48.66234207]
[119.67685699 51.32542419]
[127.77208710 55.44549179]
[135.03601074 60.89921951]
[141.25119019 67.52336121]
[154.24157715 60.02335739]
[167.23194885 52.52335739]
[180.22233582 45.02335739]
[193.21272278 37.52335739]
[206.20309448 30.02335739]
[219.19348145 22.52335739]
[218.85079956 10.01514053]
[223.83375549 -1.38402081]
[233.13897705 -9.53215218]
[244.95736694 -12.92679596]
[257.02566528 -10.98180103]
[267.05987549 -4.12751150]
[280.28167725 -11.21157742]
[293.50347900 -18.29564285]
[290.87643433 -33.18040085]
[292.97586060 -48.12813950]
[299.58374023 -61.67672348]
[310.04162598 -72.50482178]
[323.31628418 -79.56074524]
[338.10180664 -82.16459656]
[352.94796753 -80.07376099]
[366.40261841 -73.50547028]
[377.15362549 -63.11428070]
[390.37542725 -70.19834900]
[390.18087769 -85.50261688]
[397.13119507 -99.13902283]
[409.62927246 -107.97401428]
[424.80310059 -109.97737885]
[439.16586304 -104.68875122]
[449.41708374 -93.32342529]
[453.20117188 -78.49307251]
[449.64849854 -63.60559082]
[439.57546997 -52.08201981]
[425.29678345 -46.57038879]
[410.09359741 -48.33723450]
[397.45947266 -56.97654724]
[384.23767090 -49.89247894]
[386.93386841 -35.18562698]
[384.94964600 -20.34538078]
[378.46679688 -6.82675982]
[368.10894775 4.04087400]
[354.88128662 11.18453598]
[340.07330322 13.89355469]
[325.13293457 11.89024734]
[311.52496338 5.35833263]
[300.58755493 -5.07384300]
[287.36575317 2.01022291]
[274.14395142 9.09428883]
[272.56365967 26.67489624]
[260.64752197 39.90942383]
[243.02018738 43.37990570]
[226.69348145 35.51374054]
[213.70309448 43.01374054]
[200.71272278 50.51374054]
[187.72233582 58.01374054]
[174.73194885 65.51374054]
[161.74157715 73.01374054]
[148.75119019 80.51374054]
[152.91038513 90.69179535]
[154.91638184 101.75633240]
[154.58166504 113.24625397]
[151.81845093 124.66132355]
[146.64677429 135.48390198]
[139.19772339 145.20230103]
[148.09133911 157.28135681]
[156.98495483 169.36041260]
[165.87857056 181.43946838]
[174.77218628 193.51852417]
[189.63882446 190.21656799]
[204.56192017 193.25325012]
[216.95593262 202.10244751]
[224.67353821 215.23098755]
[226.37760925 230.36425781]
[221.77291870 244.88034058]
[211.65724182 256.26422119]
[197.78318787 262.54360962]
[182.55451965 262.63052368]
[168.60969543 256.50991821]
[158.36474609 245.24223328]
[153.59465027 230.77964783]
[155.12588501 215.62791443]
[162.69313049 202.41213989]
[153.79951477 190.33308411]
[144.90589905 178.25402832]
[136.01228333 166.17497253]
[127.11865997 154.09591675]
[119.79006195 155.69017029]
[122.97853851 170.34736633]
[126.16702271 185.00456238]
[133.72874451 197.95912170]
[123.74492645 209.15390015]
[110.01288605 203.11808777]
[111.50981903 188.19305420]
[108.32133484 173.53584290]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[4 9]
[14 90]
[15 89]
[16 88]
[18 86]
[19 85]
[20 84]
[21 83]
[23 81]
[24 80]
[25 79]
[26 78]
[27 77]
[28 36]
[29 35]
[39 48]
[40 47]
[41 46]
[50 76]
[51 75]
[52 74]
[53 72]
[54 71]
[55 70]
[56 69]
[59 66]
[103 161]
[104 160]
[105 159]
[106 158]
[107 157]
[108 156]
[109 155]
[115 151]
[116 150]
[117 149]
[126 140]
[127 139]
[167 189]
[168 188]
[169 187]
[170 186]
[171 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
