%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 12:02:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAUCUUGUUAAAUUGCUGAUUUUGUUGGCUAAUGCCUUCAAUGCCUCUACUCAUAACCUUUAUUGUCUUCAUCAUGUACAGAAAGAAUUAGCCUCUUAUUCUAUAAUUAUCAAGUUCUCAGUUUGUCUUUGUCCCCAAAUACUGGCUGGCAGGCUUCAUCUGAAAAACUGUAAUUGGAGAACUAGCUCAAAAUAAAUCUUGAAAUACACAUUAA\
) } def
/len { sequence length } bind def

/coor [
[142.26536560 255.78677368]
[129.06207275 248.66827393]
[117.71014404 238.86349487]
[108.74657440 226.83625793]
[102.59539032 213.15550232]
[99.54756927 198.46839905]
[99.74729156 183.46974182]
[103.18510437 168.86900330]
[109.69837952 155.35688782]
[118.97901917 143.57258606]
[130.58799744 134.07354736]
[143.97615051 127.30913544]
[158.51016235 123.59932709]
[173.50770569 123.12001801]
[186.77464294 116.12084961]
[200.04158020 109.12168121]
[185.04316711 108.90351868]
[170.04475403 108.68536377]
[155.04634094 108.46720886]
[140.04792786 108.24904633]
[125.04951477 108.03089142]
[110.05109406 107.81272888]
[95.74534607 112.32331848]
[83.58449554 121.10475922]
[71.42364502 129.88619995]
[68.77574921 145.23632812]
[56.31782532 153.96871948]
[41.70014191 151.34976196]
[29.53928947 160.13121033]
[17.37843895 168.91264343]
[11.16207409 184.08792114]
[-5.12243366 186.02359009]
[-14.72297764 172.72842407]
[-7.76334095 157.87933350]
[8.59699821 156.75180054]
[20.75784874 147.97035217]
[32.91869736 139.18891907]
[35.03058624 124.48940277]
[47.23832321 115.41053772]
[62.64220047 117.72534943]
[74.80305481 108.94390869]
[86.96390533 100.16246796]
[86.63675690 92.66960144]
[71.75456238 94.54582214]
[56.87236023 96.42204285]
[41.99016190 98.29825592]
[27.10796547 100.17447662]
[12.22576809 102.05068970]
[-2.26006699 105.94435120]
[-14.36032009 97.07959747]
[-15.01496029 82.09388733]
[-3.73382735 72.20773315]
[11.03701782 74.82383728]
[26.02610779 75.39584351]
[41.01519775 75.96785736]
[56.00428772 76.53986359]
[70.99337769 77.11186981]
[85.98246765 77.68388367]
[85.65531921 70.19101715]
[72.77539062 62.50288391]
[59.89546585 54.81474304]
[47.01553726 47.12660599]
[38.04656219 45.41636658]
[34.00534821 39.23183060]
[21.23859787 31.35718155]
[8.47184753 23.48253250]
[-4.29490280 15.60788441]
[-17.11857986 7.82628584]
[-31.33091164 14.05438995]
[-46.48248672 10.70635223]
[-56.74721909 -0.93043822]
[-58.17810822 -16.38139915]
[-50.22494888 -29.70532036]
[-35.94589233 -35.77888107]
[-20.83152580 -32.26667404]
[-10.69363403 -20.51921654]
[-9.43044281 -5.05364227]
[-2.07866955 -4.32474136]
[3.57974601 2.84113455]
[16.34649658 10.71578312]
[29.11324692 18.59043121]
[41.87999725 26.46508026]
[54.70367432 34.24668121]
[67.58360291 41.93481827]
[80.46353149 49.62295532]
[93.34346008 57.31109238]
[110.26925659 92.81431580]
[125.26766968 93.03247833]
[140.26608276 93.25063324]
[155.26449585 93.46879578]
[170.26290894 93.68695068]
[185.26132202 93.90510559]
[200.25973511 94.12326813]
[203.40437317 71.97281647]
[220.68196106 60.84301758]
[238.64999390 66.14222717]
[250.93727112 57.53858185]
[253.80813599 42.22858810]
[266.39175415 33.67830276]
[280.96978760 36.50958252]
[293.25708008 27.90593719]
[305.54437256 19.30228996]
[317.83163452 10.69864368]
[324.69815063 -3.55483508]
[339.56164551 -4.51687288]
[351.84893799 -13.12051964]
[364.13619995 -21.72416687]
[376.42349243 -30.32781219]
[388.71078491 -38.93145752]
[400.99804688 -47.53510666]
[413.28533936 -56.13875198]
[416.41796875 -61.95406342]
[421.28552246 -64.87815094]
[426.05746460 -64.80782318]
[438.58978271 -73.05045319]
[451.12210083 -81.29309082]
[463.65441895 -89.53572083]
[471.53677368 -106.17945862]
[489.08422852 -106.51134491]
[501.49533081 -114.93537903]
[513.90643311 -123.35940552]
[526.31756592 -131.78344727]
[526.35882568 -149.91818237]
[537.18511963 -164.27021790]
[554.30865479 -169.20391846]
[570.81756592 -162.92436218]
[582.97839355 -171.70581055]
[595.13922119 -180.48724365]
[607.30010986 -189.26869202]
[610.34783936 -195.12893677]
[615.17230225 -198.12351990]
[619.94476318 -198.12258911]
[632.35589600 -206.54663086]
[644.76702881 -214.97065735]
[652.40649414 -231.72727966]
[669.94726562 -232.31433105]
[682.23449707 -240.91798401]
[694.52178955 -249.52162170]
[698.71246338 -265.00769043]
[713.48950195 -271.25421143]
[727.51721191 -263.46945190]
[730.03472900 -247.62515259]
[719.11090088 -235.87573242]
[703.12542725 -237.23434448]
[690.83819580 -228.63069153]
[678.55090332 -220.02705383]
[676.14337158 -208.17491150]
[665.98028564 -200.90608215]
[653.19104004 -202.55953979]
[640.77990723 -194.13551331]
[628.36883545 -185.71148682]
[616.08154297 -177.10783386]
[603.92071533 -168.32640076]
[591.75982666 -159.54495239]
[579.59899902 -150.76351929]
[581.36376953 -138.75692749]
[577.83685303 -127.06976318]
[569.62835693 -117.93645477]
[558.24963379 -113.13031769]
[545.83502197 -113.61943817]
[534.74157715 -119.37232971]
[522.33044434 -110.94829559]
[509.91937256 -102.52426147]
[497.50823975 -94.10023499]
[494.92861938 -82.28435516]
[484.66091919 -75.16410828]
[471.89703369 -77.00341034]
[459.36471558 -68.76077271]
[446.83239746 -60.51813889]
[434.30007935 -52.27550507]
[421.88897705 -43.85147095]
[409.60168457 -35.24782562]
[397.31442261 -26.64417839]
[385.02713013 -18.04053116]
[372.73986816 -9.43688583]
[360.45257568 -0.83323902]
[348.16528320 7.77040768]
[342.17767334 21.40849686]
[326.43527222 22.98592377]
[314.14801025 31.58957100]
[301.86071777 40.19321823]
[289.57345581 48.79686356]
[287.24798584 63.46409988]
[274.90951538 72.36445618]
[259.54092407 69.82585907]
[247.25364685 78.42951202]
[247.55545044 96.90085602]
[232.25721741 111.37615967]
[240.68125916 123.78726959]
[249.10528564 136.19837952]
[257.52932739 148.60949707]
[273.04217529 148.97129822]
[285.35922241 158.40898132]
[289.74432373 173.29356384]
[284.51129150 187.90161133]
[271.67233276 196.61602783]
[256.16430664 196.08595276]
[243.95036316 186.51521301]
[239.72700500 171.58393860]
[245.11820984 157.03352356]
[236.69416809 144.62240601]
[228.27014160 132.21130371]
[219.84611511 119.80018616]
[221.28869629 134.73066711]
[222.73126221 149.66113281]
[230.56987000 162.45004272]
[235.45800781 176.63124084]
[237.16445923 191.53385925]
[235.60850525 206.45294189]
[230.86373901 220.68273926]
[223.15461731 233.55010986]
[212.84582520 244.44638062]
[200.42500305 252.85609436]
[186.47972107 258.38143921]
[171.66967773 260.76101685]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 93]
[17 92]
[18 91]
[19 90]
[20 89]
[21 88]
[22 87]
[23 42]
[24 41]
[25 40]
[28 37]
[29 36]
[30 35]
[59 86]
[60 85]
[61 84]
[62 83]
[64 82]
[65 81]
[66 80]
[67 79]
[68 77]
[96 186]
[97 185]
[100 182]
[101 181]
[102 180]
[103 179]
[105 177]
[106 176]
[107 175]
[108 174]
[109 173]
[110 172]
[111 171]
[114 170]
[115 169]
[116 168]
[117 167]
[119 164]
[120 163]
[121 162]
[122 161]
[126 155]
[127 154]
[128 153]
[129 152]
[132 151]
[133 150]
[134 149]
[136 146]
[137 145]
[138 144]
[188 203]
[189 202]
[190 201]
[191 200]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
