%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 21:39:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACCCCAGCUGGGGCCAGGCUGGGUCGCCCUGGACUGUGUGCUCAGGAGCCCUGGGAGGCUCUGGAGCCCACUGUACUUGCUCUUGAUGCCUGGCGGGGUGGGGUGGGGGGGGUGCUGGGCCCCUGCCUCUCUGCAGGUCCCUAAUAAAGCUGUGUGGCAGUCUGACUCCA\
) } def
/len { sequence length } bind def

/coor [
[-21.19476891 68.92822266]
[-24.25535774 54.37587357]
[-38.02059555 48.41615677]
[-51.78583145 42.45643997]
[-65.55107117 36.49671936]
[-79.31630707 30.53700256]
[-93.08154297 24.57728386]
[-106.84677887 18.61756516]
[-122.58509827 20.23494148]
[-131.19055176 8.07782650]
[-144.95579529 2.11810851]
[-154.86380005 6.71383047]
[-165.44499207 5.11070776]
[-173.22038269 -1.91878295]
[-175.76928711 -11.85908699]
[-189.30905151 -18.31470490]
[-202.84880066 -24.77032280]
[-216.38854980 -31.22593880]
[-229.92831421 -37.68155670]
[-243.46806335 -44.13717651]
[-257.00781250 -50.59279251]
[-276.98419189 -48.07003784]
[-287.30023193 -64.39990234]
[-301.06546021 -70.35961914]
[-314.83071899 -76.31934357]
[-327.11285400 -72.30506897]
[-338.46780396 -77.57966614]
[-343.02023315 -88.81105042]
[-356.67495728 -95.01973724]
[-366.66479492 -90.60469055]
[-377.21514893 -92.39968872]
[-384.86160278 -99.56920624]
[-387.22958374 -109.55416107]
[-400.64987183 -116.25457001]
[-414.13046265 -122.83286285]
[-427.67022705 -129.28848267]
[-443.45687866 -128.24363708]
[-451.61523438 -140.70521545]
[-465.15499878 -147.16082764]
[-478.69473267 -153.61645508]
[-494.48141479 -152.57160950]
[-502.63973999 -165.03318787]
[-516.17950439 -171.48880005]
[-529.71923828 -177.94441223]
[-543.25903320 -184.40003967]
[-559.04571533 -183.35520935]
[-567.20404053 -195.81677246]
[-580.74377441 -202.27238464]
[-594.28356934 -208.72801208]
[-607.82330322 -215.18362427]
[-621.36303711 -221.63923645]
[-634.90283203 -228.09486389]
[-649.71423340 -222.58145142]
[-664.05108643 -229.23200989]
[-669.40759277 -244.10087585]
[-662.60583496 -258.36660767]
[-647.68115234 -263.56564331]
[-633.48809814 -256.61343384]
[-628.44720459 -241.63461304]
[-614.90740967 -235.17900085]
[-601.36767578 -228.72338867]
[-587.82794189 -222.26776123]
[-574.28814697 -215.81214905]
[-560.74841309 -209.35652161]
[-545.93017578 -210.86311340]
[-536.80340576 -197.93978882]
[-523.26367188 -191.48417664]
[-509.72387695 -185.02856445]
[-496.18414307 -178.57293701]
[-481.36593628 -180.07952881]
[-472.23913574 -167.15620422]
[-458.69937134 -160.70059204]
[-445.15960693 -154.24496460]
[-430.34140015 -155.75155640]
[-421.21459961 -142.82823181]
[-407.67483521 -136.37261963]
[-400.25735474 -136.33206177]
[-393.94946289 -129.67486572]
[-380.52917480 -122.97445679]
[-361.39135742 -125.58784485]
[-350.46627808 -108.67449188]
[-336.81152344 -102.46579742]
[-319.47918701 -105.11586761]
[-308.87100220 -90.08457947]
[-295.10574341 -84.12486267]
[-281.34051514 -78.16513824]
[-272.17413330 -82.77861786]
[-261.76565552 -81.54006195]
[-253.60200500 -74.62007141]
[-250.55221558 -64.13254547]
[-237.01245117 -57.67692947]
[-223.47270203 -51.22131348]
[-209.93293762 -44.76569748]
[-196.39318848 -38.31007767]
[-182.85342407 -31.85446167]
[-169.31367493 -25.39884377]
[-150.22647095 -28.35931396]
[-138.99607849 -11.64712906]
[-125.23083496 -5.68741083]
[-110.47709656 -7.73106575]
[-100.88706207 4.85232878]
[-87.12182617 10.81204700]
[-73.35659027 16.77176476]
[-59.59135056 22.73148346]
[-45.82611465 28.69120216]
[-32.06087494 34.65092087]
[-18.29563904 40.61063766]
[-5.58951139 32.88455582]
[9.40702915 34.13666153]
[20.92538643 44.09561920]
[24.41127396 59.10077667]
[38.17650986 65.06049347]
[51.94174957 71.02021027]
[65.70698547 76.97993469]
[79.47222137 82.93965149]
[95.15421295 69.59284973]
[118.57201385 70.46366882]
[137.35974121 88.84615326]
[152.32945251 89.79888916]
[167.29916382 90.75161743]
[182.26887512 91.70434570]
[194.07150269 81.53891754]
[209.23934937 82.71837616]
[218.85778809 94.03301239]
[233.82749939 94.98574066]
[248.79721069 95.93847656]
[263.76693726 96.89120483]
[278.73663330 97.84394073]
[290.43209839 87.21417999]
[306.21420288 88.05118561]
[316.71972656 99.85837555]
[315.71591187 115.63075256]
[303.79830933 126.01084900]
[288.03741455 124.84033203]
[277.78390503 112.81365204]
[262.81420898 111.86092377]
[247.84448242 110.90818787]
[232.87477112 109.95545959]
[217.90505981 109.00272369]
[206.92980957 119.00669861]
[191.73481750 118.25374603]
[181.31614685 106.67406464]
[166.34643555 105.72132874]
[151.37672424 104.76860046]
[136.40701294 103.81586456]
[132.63737488 110.29967499]
[147.30003357 113.46292877]
[148.82243347 128.38546753]
[135.10061646 134.44450378]
[125.09808350 123.26730347]
[121.32844543 129.75111389]
[129.56265259 142.28897095]
[137.79685974 154.82682800]
[146.03105164 167.36468506]
[154.26525879 179.90254211]
[168.01397705 189.82267761]
[162.28755188 205.78025818]
[145.36836243 204.69511414]
[141.72740173 188.13674927]
[133.49319458 175.59889221]
[125.25899506 163.06103516]
[117.02479553 150.52317810]
[108.79058838 137.98532104]
[91.00746918 134.77081299]
[78.01241302 124.39345551]
[72.10788727 110.39461517]
[73.51250458 96.70488739]
[59.74726868 90.74517059]
[45.98202896 84.78545380]
[32.21679306 78.82572937]
[18.45155525 72.86601257]
[5.12420464 80.59181213]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 107]
[3 106]
[4 105]
[5 104]
[6 103]
[7 102]
[8 101]
[10 99]
[11 98]
[15 96]
[16 95]
[17 94]
[18 93]
[19 92]
[20 91]
[21 90]
[23 86]
[24 85]
[25 84]
[28 82]
[29 81]
[33 79]
[34 78]
[35 76]
[36 75]
[38 73]
[39 72]
[40 71]
[42 69]
[43 68]
[44 67]
[45 66]
[47 64]
[48 63]
[49 62]
[50 61]
[51 60]
[52 59]
[111 171]
[112 170]
[113 169]
[114 168]
[115 167]
[118 145]
[119 144]
[120 143]
[121 142]
[124 139]
[125 138]
[126 137]
[127 136]
[128 135]
[151 163]
[152 162]
[153 161]
[154 160]
[155 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
