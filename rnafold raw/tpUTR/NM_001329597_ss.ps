%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 06:03:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUCUUCAUGUAUUCUGGAGAACACCAUUCCUGAUUUCCCACAAACUGCACUACAUCAGUAUAACUGCAUUUCUAGUUUCUAUAUAGUGCAAUAGAGCAUAGAUUCUAUAAAUUCUUACUUGUCUAAGACAAGUAAAUCUGUGUUAAACAAGUAGUAAUAAAAGUUAAUUCAAUCUAAUUUUUCUCUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[59.80268478 244.45581055]
[44.76398087 260.84851074]
[24.19742966 269.22131348]
[2.06608558 267.99813843]
[-4.06453753 281.68811035]
[-10.19515991 295.37808228]
[-16.32578278 309.06805420]
[-22.45640564 322.75802612]
[-28.58702850 336.44799805]
[-21.59999275 350.43783569]
[-25.29035759 365.63372803]
[-37.91564560 374.86065674]
[-53.51458359 373.76193237]
[-64.72182465 362.85635376]
[-66.24565887 347.29321289]
[-57.36657715 334.42089844]
[-42.27700424 330.31738281]
[-36.14638138 316.62741089]
[-30.01576042 302.93743896]
[-23.88513756 289.24746704]
[-17.75451469 275.55749512]
[-11.62389088 261.86749268]
[-18.40653038 256.70220947]
[-24.22811127 250.46664429]
[-28.92174149 243.33702087]
[-32.35243607 235.51522827]
[-34.42100143 227.22308350]
[-35.06689453 218.69604492]
[-34.27000046 210.17658997]
[-32.05126190 201.90724182]
[-28.47210503 194.12370300]
[-23.63277626 187.04814148]
[-17.66950798 180.88282776]
[-10.75069523 175.80436707]
[-3.07213902 171.95864868]
[5.14849424 169.45663452]
[13.67784500 168.37118530]
[22.27348137 168.73489380]
[30.69079590 170.53915405]
[38.68995667 173.73435974]
[47.34878540 161.48590088]
[56.00761795 149.23744202]
[64.66645050 136.98899841]
[73.32527924 124.74053955]
[67.06298828 115.45276642]
[63.92308426 104.70009613]
[64.20322418 93.50186157]
[67.87686157 82.91963959]
[56.36886215 73.29851532]
[44.86086655 63.67739487]
[33.35286713 54.05627060]
[21.84487152 44.43515015]
[10.33687496 34.81402588]
[-1.17112124 25.19290161]
[-16.72137833 22.27741241]
[-21.52297020 8.17798138]
[-33.03096771 -1.44314206]
[-41.63524246 -4.55296612]
[-44.64577484 -11.31443214]
[-55.99646759 -21.12064362]
[-66.79866028 -19.70216942]
[-76.39723969 -24.37407303]
[-81.72110748 -33.37252808]
[-81.21618652 -43.59574509]
[-92.24338531 -53.76436996]
[-103.27057648 -63.93299484]
[-114.29777527 -74.10162354]
[-125.32497406 -84.27024841]
[-141.10418701 -83.38024902]
[-152.83526611 -93.97067261]
[-153.55839539 -109.75840759]
[-142.84452820 -121.37687683]
[-127.05003357 -121.93303680]
[-115.54549408 -111.09693909]
[-115.15634918 -95.29743958]
[-104.12915039 -85.12881470]
[-93.10195160 -74.96018982]
[-82.07476044 -64.79156494]
[-71.04756165 -54.62294006]
[-51.92898560 -51.78594971]
[-46.19025421 -32.47133636]
[-34.83956146 -22.66512489]
[-23.40984344 -12.95113850]
[-11.90184689 -3.33001542]
[2.82528090 -1.10269356]
[8.45000172 13.68490505]
[19.95799828 23.30602837]
[31.46599579 32.92715073]
[42.97399139 42.54827499]
[54.48198700 52.16939926]
[65.98998260 61.79052353]
[77.49797821 71.41164398]
[88.33084869 64.31013489]
[101.34787750 61.30703735]
[115.00257111 63.04548264]
[127.57306671 69.58756256]
[137.37899780 80.37342834]
[148.07113647 69.85305023]
[158.76327515 59.33267593]
[169.45539856 48.81230164]
[180.14753723 38.29192734]
[190.83967590 27.77155304]
[201.53179932 17.25117874]
[212.22393799 6.73080397]
[222.91607666 -3.78957057]
[233.60820007 -14.30994511]
[218.81974792 -11.79966927]
[204.52784729 -16.35396957]
[193.91831970 -26.95764732]
[189.35614014 -41.24703217]
[191.85826111 -56.03687286]
[200.86694336 -68.03035736]
[214.37403870 -74.55402374]
[229.36869812 -74.15367126]
[242.50845337 -66.91854858]
[250.86430359 -54.46142960]
[252.57365417 -39.55914688]
[247.25474548 -25.53250313]
[259.64181519 -33.99185944]
[272.02886963 -42.45121384]
[284.41592407 -50.91056824]
[296.80297852 -59.36992645]
[309.19006348 -67.82927704]
[321.57711792 -76.28863525]
[333.96417236 -84.74799347]
[343.63433838 -98.67367554]
[359.69274902 -93.23645782]
[358.91342163 -76.30043030]
[342.42352295 -72.36093140]
[330.03646851 -63.90157318]
[317.64941406 -55.44221878]
[305.26235962 -46.98286438]
[292.87527466 -38.52350616]
[280.48822021 -30.06415176]
[268.10116577 -21.60479736]
[255.71409607 -13.14544106]
[244.12858582 -3.61781144]
[233.43644714 6.90256310]
[222.74430847 17.42293739]
[212.05218506 27.94331169]
[201.36004639 38.46368790]
[190.66790771 48.98406219]
[179.97578430 59.50443649]
[169.28364563 70.02481079]
[158.59150696 80.54518127]
[147.89938354 91.06555939]
[162.32633972 86.95914459]
[176.75331116 82.85272980]
[188.88410950 74.02982330]
[203.64393616 71.35633850]
[218.09872437 75.36372375]
[229.37504578 85.25535583]
[235.23132324 99.06492615]
[234.50340271 114.04724884]
[227.33596802 127.22404480]
[215.15383911 135.97593689]
[200.37864685 138.56315613]
[185.94750977 134.47140503]
[174.72784424 124.51222229]
[160.76728821 119.02561951]
[146.80673218 113.53900909]
[156.42785645 125.04701233]
[166.04898071 136.55500793]
[175.67010498 148.06300354]
[185.29122925 159.57099915]
[194.91233826 171.07899475]
[204.53346252 182.58699036]
[214.15458679 194.09498596]
[229.62605286 192.90611267]
[242.82386780 201.06684875]
[248.67318726 215.43920898]
[244.92483521 230.49674988]
[233.02014160 240.44953918]
[217.53669739 241.47050476]
[204.42819214 233.16708374]
[198.73512268 218.73210144]
[202.64659119 203.71611023]
[193.02546692 192.20811462]
[183.40434265 180.70011902]
[173.78321838 169.19212341]
[164.16210938 157.68412781]
[154.54098511 146.17613220]
[144.91986084 134.66813660]
[135.29873657 123.16013336]
[124.36303711 132.67655945]
[111.28321838 137.64553833]
[97.79653168 137.77673340]
[85.57373047 133.39936829]
[76.91490173 145.64782715]
[68.25607300 157.89627075]
[59.59724045 170.14472961]
[50.93841171 182.39318848]
[63.25505829 201.06388855]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 22]
[5 21]
[6 20]
[7 19]
[8 18]
[9 17]
[40 192]
[41 191]
[42 190]
[43 189]
[44 188]
[48 92]
[49 91]
[50 90]
[51 89]
[52 88]
[53 87]
[54 86]
[56 84]
[57 83]
[59 82]
[60 81]
[64 79]
[65 78]
[66 77]
[67 76]
[68 75]
[97 146]
[98 145]
[99 144]
[100 143]
[101 142]
[102 141]
[103 140]
[104 139]
[105 138]
[106 137]
[118 136]
[119 135]
[120 134]
[121 133]
[122 132]
[123 131]
[124 130]
[125 129]
[161 184]
[162 183]
[163 182]
[164 181]
[165 180]
[166 179]
[167 178]
[168 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
