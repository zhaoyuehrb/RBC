%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 05:13:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUCUCUGCCACUUGAAUAUUUUUUUUUAUUGUAUAUAGUCAGCAAAAAAUUAUGGUUUGCAUAAAUGGAAAUGUACAUGAAUUUUAAAAAUUUUAAGAUAUUUUUAAUUUAAUAAAAUUUAUAUAACUAUAUUGUAUUUAUUUCCCUUAAUUCUUAUAAAUUAAAAACAUCAGAAAAUGAAUUAUUAAAUAAAAGACAGUGUUUUCUUUUCUGGA\
) } def
/len { sequence length } bind def

/coor [
[98.44972992 581.80865479]
[91.43788910 595.41351318]
[78.90005493 604.19201660]
[63.71733093 606.12683105]
[49.37859726 600.77337646]
[39.17879105 589.36187744]
[35.46174622 574.51458740]
[39.08161926 559.64331055]
[49.20658875 548.16534424]
[63.51000977 542.71826172]
[65.23549652 527.81781006]
[66.96098328 512.91735840]
[51.70492554 500.66619873]
[46.91943741 481.54516602]
[54.71962357 463.28628540]
[72.09461975 453.38186646]
[72.95880127 438.40679932]
[73.82298279 423.43170166]
[74.68715668 408.45660400]
[75.55133820 393.48153687]
[76.41551971 378.50643921]
[77.27970123 363.53137207]
[70.28849030 350.37945557]
[78.80799866 337.04797363]
[79.67218018 322.07290649]
[80.53635406 307.09780884]
[81.40053558 292.12271118]
[82.26471710 277.14764404]
[83.12889862 262.17254639]
[83.99307251 247.19746399]
[84.85725403 232.22238159]
[85.72143555 217.24729919]
[75.65272522 206.33140564]
[76.31580353 191.13221741]
[87.83365631 180.64524841]
[88.69783783 165.67016602]
[89.56201935 150.69508362]
[81.21092987 148.22772217]
[73.39167023 144.39526367]
[66.32557678 139.30616760]
[60.21264267 133.10450745]
[55.22591019 125.96580505]
[51.50652695 118.09213257]
[49.15977097 109.70635986]
[34.17378616 110.35465240]
[19.18780327 111.00293732]
[4.20181942 111.65122986]
[-10.78416443 112.29952240]
[-18.46711731 125.67770386]
[-32.17372513 132.75813293]
[-47.53025436 131.28147888]
[-59.63649750 121.71891785]
[-64.62938690 107.12184906]
[-60.91572571 92.14813232]
[-49.68051529 81.57582855]
[-34.50887680 78.77851868]
[-20.24202347 84.64881897]
[-11.43245602 97.31353760]
[3.55352759 96.66524506]
[18.53951263 96.01696014]
[33.52549744 95.36866760]
[48.51147842 94.72037506]
[50.35992813 85.34375000]
[53.90084076 76.46683502]
[59.01349258 68.39227295]
[65.52356720 61.39536667]
[73.20910645 55.71467590]
[81.80806732 51.54387665]
[91.02728271 49.02517700]
[90.59501648 34.03140640]
[90.16274261 19.03763771]
[89.73047638 4.04386711]
[89.29820251 -10.94990349]
[88.86593628 -25.94367409]
[88.21764374 -40.92965698]
[87.35346222 -55.90474319]
[86.48928833 -70.87982941]
[85.62510681 -85.85491180]
[84.76092529 -100.83000183]
[82.71376801 -115.68965149]
[79.49649048 -130.34056091]
[76.27922058 -144.99147034]
[73.06194305 -159.64237976]
[69.84466553 -174.29328918]
[66.62738800 -188.94419861]
[63.41011047 -203.59510803]
[60.19283295 -218.24601746]
[56.97555923 -232.89692688]
[43.11133575 -235.62678528]
[31.36977386 -243.41024780]
[23.50473976 -255.04508972]
[20.67592621 -268.75683594]
[23.27794838 -282.46932983]
[30.88566780 -294.11917114]
[42.32324219 -301.96612549]
[39.31742477 -316.66186523]
[36.31161118 -331.35763550]
[33.30579376 -346.05337524]
[30.29997826 -360.74911499]
[27.29416275 -375.44488525]
[18.19649506 -389.75112915]
[29.42516708 -402.45361328]
[44.73964691 -395.18017578]
[41.98991394 -378.45068359]
[44.99572754 -363.75494385]
[48.00154495 -349.05920410]
[51.00736237 -334.36343384]
[54.01317596 -319.66769409]
[57.01899338 -304.97195435]
[72.58769989 -301.36047363]
[85.06750488 -291.28350830]
[91.92717743 -276.71963501]
[91.74698639 -260.56393433]
[84.51226044 -246.05250549]
[71.62646484 -236.11419678]
[74.84374237 -221.46328735]
[78.06101990 -206.81237793]
[81.27829742 -192.16146851]
[84.49557495 -177.51055908]
[87.71285248 -162.85964966]
[90.93012238 -148.20874023]
[94.14739990 -133.55783081]
[97.36467743 -118.90692902]
[102.91703033 -132.84146118]
[114.25070953 -142.66734314]
[128.83175659 -146.18769836]
[143.40019226 -142.61546326]
[154.69882202 -132.74931335]
[160.20155334 -118.79510498]
[158.67807007 -103.87267303]
[150.46900940 -91.31833649]
[137.40971375 -83.93897247]
[122.41996765 -83.38443756]
[108.85113525 -89.77870178]
[99.73600769 -101.69418335]
[100.60018921 -86.71909332]
[101.46437073 -71.74401093]
[102.32855225 -56.76892090]
[103.19272614 -41.79383850]
[106.09563446 -38.00742340]
[106.65422058 -32.35849380]
[103.85970306 -26.37594223]
[104.29197693 -11.38217258]
[104.72424316 3.61159778]
[105.15651703 18.60536766]
[105.58878326 33.59913635]
[106.02104950 48.59290695]
[133.20251465 55.34630203]
[154.62916565 76.34329224]
[169.40544128 73.76222992]
[184.18170166 71.18115997]
[198.95797729 68.60009766]
[213.73423767 66.01903534]
[228.51051331 63.43796539]
[237.38996887 50.36392212]
[252.92890930 47.48001480]
[265.90835571 56.49721146]
[268.62780762 72.06577301]
[259.47387695 84.94914246]
[243.87744141 87.50385284]
[231.09156799 78.21423340]
[216.31530762 80.79530334]
[201.53903198 83.37636566]
[186.76277161 85.95742798]
[171.98649597 88.53849792]
[157.21023560 91.11956024]
[156.40119934 98.57579803]
[171.31365967 100.19387817]
[183.41921997 109.05139160]
[169.69558716 115.10635376]
[154.78311157 113.48827362]
[153.97407532 120.94450378]
[167.85285950 126.63479614]
[181.73164368 132.32507324]
[197.02674866 127.48366547]
[210.26744080 136.54257202]
[211.29658508 152.55256653]
[199.32472229 163.23217773]
[183.53562927 160.38890076]
[176.04135132 146.20385742]
[162.16256714 140.51358032]
[148.28378296 134.82328796]
[134.90679932 144.98585510]
[119.84791565 150.59568787]
[104.53710175 151.55924988]
[103.67292786 166.53434753]
[102.80874634 181.50942993]
[113.04380035 193.25172424]
[111.95407104 208.42626953]
[100.69651794 218.11146545]
[99.83234406 233.08656311]
[98.96816254 248.06164551]
[98.10398102 263.03674316]
[97.23979950 278.01181030]
[96.37562561 292.98690796]
[95.51144409 307.96197510]
[94.64726257 322.93707275]
[93.78308105 337.91217041]
[100.71247864 352.13516235]
[92.25478363 364.39553833]
[91.39060211 379.37063599]
[90.52642822 394.34570312]
[89.66224670 409.32080078]
[88.79806519 424.29589844]
[87.93388367 439.27096558]
[87.06970215 454.24606323]
[96.47887421 459.12268066]
[103.70552826 466.82208252]
[107.94612885 476.45108032]
[108.74153900 486.90405273]
[106.02660370 496.99002075]
[100.13468933 505.56826782]
[91.75696564 511.67736816]
[81.86141205 514.64288330]
[80.13592529 529.54327393]
[78.41043091 544.44372559]
[91.09044647 553.01550293]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 216]
[11 215]
[12 214]
[16 206]
[17 205]
[18 204]
[19 203]
[20 202]
[21 201]
[22 200]
[24 198]
[25 197]
[26 196]
[27 195]
[28 194]
[29 193]
[30 192]
[31 191]
[32 190]
[35 187]
[36 186]
[37 185]
[44 62]
[45 61]
[46 60]
[47 59]
[48 58]
[69 147]
[70 146]
[71 145]
[72 144]
[73 143]
[74 142]
[75 139]
[76 138]
[77 137]
[78 136]
[79 135]
[80 123]
[81 122]
[82 121]
[83 120]
[84 119]
[85 118]
[86 117]
[87 116]
[88 115]
[95 109]
[96 108]
[97 107]
[98 106]
[99 105]
[100 104]
[149 166]
[150 165]
[151 164]
[152 163]
[153 162]
[154 161]
[172 182]
[173 181]
[174 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
