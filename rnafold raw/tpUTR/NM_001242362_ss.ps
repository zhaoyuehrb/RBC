%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 17:00:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAACUGCAGCGAUCUUACUGGCCAAGCCAGAGCGCCUCCUCUCAGAUUCCUUCUCGACACAGCACCCUAGGCGGCUUCUUCCUGUCAGUCGGAGGUGGCAUGCAAGAUGAAGCUCUCUUUGCUCUUCCUGCUUUCAUUUUGUGCUUUUCCUUGUGUUUUCAUGUUUUGGGUAUCAGUGUUACAUUAAAGUUGCAAAAUUAA\
) } def
/len { sequence length } bind def

/coor [
[22.92582893 762.94165039]
[14.92067719 749.98638916]
[12.88339710 734.89440918]
[17.16696167 720.28033447]
[27.02921867 708.67620850]
[40.76147079 702.09246826]
[40.29726791 687.09967041]
[39.83306885 672.10687256]
[39.36886597 657.11401367]
[38.90466690 642.12121582]
[38.44046783 627.12841797]
[31.45186996 624.40637207]
[26.00778770 638.38354492]
[25.14916039 653.35894775]
[10.64132690 657.16986084]
[2.53396225 644.54962158]
[12.03059196 632.93945312]
[17.47467422 618.96228027]
[10.48607731 616.24023438]
[0.00329653 626.96923828]
[-10.47948360 637.69824219]
[-20.96226501 648.42724609]
[-31.44504547 659.15625000]
[-38.18951416 674.71093750]
[-55.00337601 672.53601074]
[-57.56799316 655.77716064]
[-42.17403793 648.67346191]
[-31.69125938 637.94445801]
[-21.20847893 627.21545410]
[-10.72569752 616.48645020]
[-0.24291682 605.75744629]
[6.47370005 592.34527588]
[8.78581905 577.52453613]
[11.09793758 562.70379639]
[13.41005611 547.88305664]
[15.72217560 533.06231689]
[3.38328552 524.68273926]
[-4.12463093 511.72357178]
[-5.26607323 496.72830200]
[0.23876522 482.66711426]
[11.34790707 472.34851074]
[25.89437485 467.85830688]
[28.20649338 453.03759766]
[30.51861191 438.21685791]
[32.83073044 423.39611816]
[35.14284897 408.57537842]
[37.45496750 393.75466919]
[25.33579826 387.86413574]
[15.35481930 378.78634644]
[8.32710838 367.24981689]
[4.83017302 354.18435669]
[5.15650415 340.64614868]
[9.28913403 327.73229980]
[16.90224457 316.49209595]
[27.38683319 307.84152222]
[39.89942551 302.48883057]
[53.42992783 300.87643433]
[56.19959259 286.13433838]
[58.96925354 271.39227295]
[61.73891830 256.65017700]
[64.50858307 241.90811157]
[67.27824402 227.16603088]
[70.04791260 212.42393494]
[59.62593079 205.27012634]
[52.65988922 194.66575623]
[50.21512985 182.16816711]
[52.68985748 169.62884521]
[59.75080490 158.91909790]
[70.37760925 151.65080261]
[83.01013947 148.93388367]
[86.23469543 134.28457642]
[89.45925140 119.63526154]
[92.68380737 104.98595428]
[74.34850311 104.15552521]
[58.52533722 88.20879364]
[52.22700119 74.59516144]
[45.92866135 60.98152924]
[33.11193848 51.70563889]
[34.79007721 36.90587234]
[28.49174118 23.29224205]
[22.19340515 9.67861080]
[15.89506817 -3.93502069]
[9.59673214 -17.54865265]
[-5.65179205 -20.42304611]
[-16.27406502 -31.73440933]
[-18.18560410 -47.13329315]
[-10.65138626 -60.69851303]
[3.43153024 -67.21396637]
[18.64797592 -64.17432404]
[29.14691544 -52.74839401]
[30.89129448 -37.32967758]
[23.21036339 -23.84698868]
[29.50869942 -10.23335743]
[35.80703735 3.38027430]
[42.10537338 16.99390602]
[48.40370941 30.60753632]
[60.76993561 38.90968704]
[59.54229355 54.68319321]
[65.84062958 68.29682159]
[72.13896942 81.91045380]
[79.58850098 82.77901459]
[94.48757935 84.51614380]
[101.93711853 85.38470459]
[111.19843292 73.58521271]
[120.45975494 61.78572845]
[129.72108459 49.98624039]
[138.98240662 38.18675232]
[148.24372864 26.38726234]
[157.50505066 14.58777523]
[166.76637268 2.78828692]
[176.02769470 -9.01120090]
[185.28901672 -20.81068993]
[194.45875549 -32.68148804]
[203.53636169 -44.62288284]
[195.31329346 -57.35696411]
[191.94447327 -72.13623810]
[193.83670044 -87.17602539]
[200.76148987 -100.66020966]
[211.88262939 -110.96049500]
[225.85719299 -116.83309174]
[240.99768066 -117.56884003]
[255.47581482 -113.07889557]
[267.54327393 -103.90544891]
[275.74285889 -91.15623474]
[279.08444214 -76.37078094]
[277.16452026 -61.33450317]
[270.21487427 -47.86310959]
[259.07476807 -37.58332825]
[245.08941650 -31.73649979]
[229.94758606 -31.02865601]
[215.47776794 -35.54526901]
[206.40014648 -23.60387421]
[204.85389709 -16.37183762]
[197.08850098 -11.54936695]
[187.82717896 0.25012067]
[178.56585693 12.04960918]
[169.30453491 23.84909630]
[160.04321289 35.64858627]
[150.78189087 47.44807434]
[141.52056885 59.24756241]
[132.25924683 71.04705048]
[122.99792480 82.84653473]
[113.73660278 94.64602661]
[107.33311462 108.21051025]
[104.10855865 122.85982513]
[100.88400269 137.50912476]
[97.65944672 152.15843201]
[110.90553284 163.69892883]
[116.45757294 180.27291870]
[112.87275696 197.28958130]
[101.22604370 210.08348083]
[84.78999329 215.19360352]
[82.02033234 229.93568420]
[79.25066376 244.67776489]
[76.48100281 259.41986084]
[73.71133423 274.16192627]
[70.94167328 288.90402222]
[68.17200470 303.64608765]
[82.59034729 311.93872070]
[93.28360748 324.64529419]
[98.97386932 340.22000122]
[98.99045563 356.77600098]
[93.34892273 372.31384277]
[82.74707794 384.96313477]
[68.47870636 393.20761108]
[52.27569962 396.06677246]
[49.96358109 410.88751221]
[47.65146255 425.70825195]
[45.33934402 440.52896118]
[43.02722549 455.34970093]
[40.71510696 470.17044067]
[53.20264053 478.87808228]
[60.64085388 492.09017944]
[61.60109329 507.15997314]
[55.94636154 521.09497070]
[44.84786987 531.15148926]
[30.54290771 535.37445068]
[28.23078918 550.19519043]
[25.91867065 565.01593018]
[23.60655212 579.83666992]
[21.29443169 594.65740967]
[26.10596466 580.45001221]
[37.20959473 570.36492920]
[51.81295776 566.93829346]
[66.24356842 571.03186035]
[76.87239075 581.61621094]
[81.02645874 596.02954102]
[77.66110229 610.64715576]
[67.62264252 621.79296875]
[53.43328094 626.66418457]
[53.89748383 641.65704346]
[54.36168289 656.64984131]
[54.82588577 671.64263916]
[55.29008484 686.63549805]
[55.75428391 701.62829590]
[69.86752319 707.34985352]
[80.42876434 718.32165527]
[85.60820770 732.64270020]
[84.50848389 747.83184814]
[77.32012177 761.25750732]
[65.28855133 770.59350586]
[50.49831772 774.22241211]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 195]
[7 194]
[8 193]
[9 192]
[10 191]
[11 190]
[19 31]
[20 30]
[21 29]
[22 28]
[23 27]
[32 181]
[33 180]
[34 179]
[35 178]
[36 177]
[42 171]
[43 170]
[44 169]
[45 168]
[46 167]
[47 166]
[57 158]
[58 157]
[59 156]
[60 155]
[61 154]
[62 153]
[63 152]
[70 147]
[71 146]
[72 145]
[73 144]
[75 100]
[76 99]
[77 98]
[79 96]
[80 95]
[81 94]
[82 93]
[83 92]
[103 143]
[104 142]
[105 141]
[106 140]
[107 139]
[108 138]
[109 137]
[110 136]
[111 135]
[112 134]
[113 132]
[114 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
