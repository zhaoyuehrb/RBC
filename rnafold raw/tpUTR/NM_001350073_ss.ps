%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 05:22:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCUCCUCCAGCUUUGGCUUUGGGAAGCCAGACUCCAGGGACUGAAAAGGAGCAACAAGGAGAGGGUCUGCUUGAGAAAUGCCAGAUGCUUGGUCCCCAGGAACUAAGGCGACAGAGUGCAGGGUGGGGGCAAGACUGGGCUGUAGGGGAGCUGGACUACUUUAGUCUUCCUAAAGGACAAAAUAAACAGUAUUUUAUGCAGGCA\
) } def
/len { sequence length } bind def

/coor [
[244.25984192 256.44500732]
[233.45393372 246.04153442]
[222.64804077 235.63804626]
[211.84214783 225.23455811]
[201.03623962 214.83106995]
[190.23034668 204.42758179]
[179.42443848 194.02409363]
[168.61854553 183.62060547]
[154.08357239 180.36730957]
[149.50836182 165.22207642]
[138.70245361 154.81858826]
[127.89656067 144.41510010]
[117.09066010 134.01161194]
[102.10620117 134.69433594]
[92.29111481 146.03735352]
[82.47602844 157.38037109]
[72.66094208 168.72338867]
[62.84585190 180.06640625]
[53.03076172 191.40942383]
[43.21567535 202.75244141]
[33.40058517 214.09545898]
[30.84119797 230.29365540]
[15.43847752 235.92288208]
[3.03742313 225.19227600]
[6.39517689 209.14056396]
[22.05756950 204.28036499]
[31.87265778 192.93734741]
[41.68774414 181.59432983]
[51.50283432 170.25131226]
[61.31792068 158.90829468]
[71.13301086 147.56527710]
[80.94809723 136.22225952]
[90.76319122 124.87924194]
[82.87239838 112.12245941]
[68.34026337 115.83957672]
[53.80812073 119.55669403]
[39.27598190 123.27381134]
[36.31840134 138.24763489]
[27.14994621 150.45018005]
[13.59102154 157.45863342]
[-1.66623890 157.88143921]
[-15.59249401 151.63467407]
[-25.42267609 139.95861816]
[-29.20499611 125.17156219]
[-26.18847084 110.20950317]
[-16.97203255 98.04315186]
[-3.38561368 91.08815765]
[11.87319279 90.72543335]
[25.77474022 97.02700043]
[35.55886841 108.74167633]
[50.09100342 105.02455902]
[64.62314606 101.30744171]
[79.15528107 97.59032440]
[79.83729553 90.12139893]
[67.58256531 81.47144318]
[81.20131683 75.18354797]
[81.88333130 67.71461487]
[68.26475525 61.42697144]
[54.64618683 55.13932419]
[41.02761459 48.85167694]
[25.25507736 50.09169769]
[16.94322014 37.73199463]
[3.32464957 31.44434547]
[-10.29392147 25.15669823]
[-27.20882988 24.00680542]
[-30.78638840 7.43461800]
[-15.85221386 -0.59076649]
[-4.00627422 11.53812599]
[9.61229706 17.82577515]
[23.23086929 24.11342239]
[38.02931213 22.42366409]
[47.31526184 35.23310471]
[60.93383408 41.52075195]
[74.55240631 47.80839920]
[88.17097473 54.09604645]
[94.93176270 50.84924698]
[81.42423248 44.32648087]
[78.10197449 29.69902039]
[87.46666718 17.98140717]
[102.46665955 17.99705696]
[111.80688477 29.73418617]
[108.45334625 44.35564423]
[115.21413422 41.10884476]
[118.82086945 26.54891777]
[122.42760468 11.98899078]
[126.03433990 -2.57093596]
[119.88719940 -11.54909992]
[119.70159912 -22.20880508]
[125.29736328 -31.02451897]
[134.62187195 -35.21319962]
[138.66882324 -49.65695953]
[142.71577454 -64.10071564]
[146.76272583 -78.54447937]
[146.06474304 -87.65542603]
[150.98223877 -93.17584229]
[155.24792480 -107.55652618]
[159.51361084 -121.93720245]
[163.77929688 -136.31788635]
[168.04499817 -150.69856262]
[172.31068420 -165.07923889]
[160.03030396 -179.75578308]
[159.08052063 -198.71847534]
[169.66424561 -214.30029297]
[187.35765076 -220.31022644]
[190.96438599 -234.87016296]
[194.57112122 -249.43008423]
[186.67314148 -262.85617065]
[190.53829956 -277.57061768]
[203.38668823 -285.01739502]
[198.32511902 -300.61587524]
[209.50254822 -312.61578369]
[225.42056274 -308.67260742]
[229.70410156 -292.84277344]
[217.94660950 -281.41067505]
[225.83325195 -268.82748413]
[222.38291931 -254.01025391]
[209.13104248 -245.82334900]
[205.52430725 -231.26341248]
[201.91757202 -216.70349121]
[210.58793640 -209.67546082]
[216.03300476 -199.87403870]
[217.43211365 -188.69760132]
[214.54495239 -177.75717163]
[207.75190735 -168.64413452]
[198.00428772 -162.69886780]
[186.69136047 -160.81355286]
[182.42567444 -146.43287659]
[178.15998840 -132.05220032]
[173.89430237 -117.67151642]
[169.62861633 -103.29084015]
[165.36291504 -88.91015625]
[161.20648193 -74.49752808]
[157.15953064 -60.05376434]
[153.11257935 -45.61000443]
[149.06562805 -31.16624641]
[155.21734619 -12.83667278]
[140.59426880 1.03579938]
[136.98753357 15.59572601]
[133.38079834 30.15565300]
[129.77406311 44.71557999]
[127.49414825 123.20571136]
[138.30004883 133.60920715]
[149.10594177 144.01269531]
[159.91184998 154.41618347]
[175.21972656 158.41360474]
[179.02203369 172.81471252]
[189.82792664 183.21820068]
[200.63383484 193.62167358]
[211.43972778 204.02516174]
[222.24563599 214.42864990]
[233.05152893 224.83213806]
[243.85742188 235.23562622]
[254.66333008 245.63911438]
[283.77075195 233.34193420]
[317.83306885 255.94670105]
[332.51931763 258.99853516]
[347.20559692 262.05038452]
[361.89184570 265.10220337]
[376.57812500 268.15405273]
[391.26437378 271.20590210]
[408.00238037 268.50857544]
[415.22781372 283.84576416]
[402.49020386 295.03460693]
[388.21252441 285.89215088]
[373.52627563 282.84033203]
[358.83999634 279.78848267]
[344.15374756 276.73663330]
[329.46749878 273.68478394]
[314.78121948 270.63296509]
[309.01467896 284.48022461]
[321.52612305 292.75454712]
[334.03753662 301.02883911]
[350.43038940 301.48315430]
[357.99435425 316.03372192]
[348.94824219 329.71215820]
[332.59793091 328.44729614]
[325.76324463 313.54028320]
[313.25180054 305.26596069]
[300.74038696 296.99166870]
[294.81631470 301.59115601]
[304.01531982 313.43930054]
[313.21432495 325.28744507]
[322.41333008 337.13558960]
[334.82327271 345.56134033]
[330.64459229 359.96752930]
[315.65219116 360.44497681]
[310.56518555 346.33456421]
[301.36618042 334.48645020]
[292.16717529 322.63830566]
[282.96817017 310.79016113]
[277.04409790 315.38967896]
[281.95989990 329.56127930]
[286.87570190 343.73291016]
[291.79150391 357.90454102]
[302.69473267 370.88745117]
[293.23751831 384.95858765]
[277.09823608 379.76626587]
[277.61987305 362.82034302]
[272.70407104 348.64871216]
[267.78826904 334.47708130]
[262.87249756 320.30545044]
[250.62359619 313.73425293]
[241.38555908 304.50677490]
[235.61962891 293.73574829]
[233.41926575 282.56915283]
[234.52969360 272.07739258]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 153]
[2 152]
[3 151]
[4 150]
[5 149]
[6 148]
[7 147]
[8 146]
[10 144]
[11 143]
[12 142]
[13 141]
[14 33]
[15 32]
[16 31]
[17 30]
[18 29]
[19 28]
[20 27]
[21 26]
[34 53]
[35 52]
[36 51]
[37 50]
[57 75]
[58 74]
[59 73]
[60 72]
[62 70]
[63 69]
[64 68]
[83 140]
[84 139]
[85 138]
[86 137]
[90 135]
[91 134]
[92 133]
[93 132]
[95 131]
[96 130]
[97 129]
[98 128]
[99 127]
[100 126]
[104 119]
[105 118]
[106 117]
[109 114]
[155 169]
[156 168]
[157 167]
[158 166]
[159 165]
[160 164]
[170 179]
[171 178]
[172 177]
[191 201]
[192 200]
[193 199]
[194 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
