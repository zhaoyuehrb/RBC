%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 00:04:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUGCCUCGCACCUGCUGAGCCGCACUGCUGCCCCUGGCCUCACCGGCCUCAGGAGACGGUGGGGCCGCUGCAUUUCGGGGUGGUCUUGGGAAUCCCAGGCCCUAGGGGUCACAUUUGCUCAGGAAGUGGGUAUCAAAUUGAGGUGGGGGUGUCAGAGGAGGCAAAGGGGUCCCAGCUGCGGUCAGGACUGUGGUGGGAUUCCCGCCUCGGCAGCGUCACUGCCCAGUAGCUGCUCAAUAAAGGCUGUGUGUGU\
GGAAUCUGA\
) } def
/len { sequence length } bind def

/coor [
[100.13047028 527.60919189]
[107.06579590 513.90527344]
[119.93267822 505.51846313]
[119.04406738 490.54479980]
[118.15545654 475.57113647]
[117.26685333 460.59750366]
[116.28949738 445.62936401]
[107.66722870 433.48416138]
[114.40418243 419.16900635]
[113.33812714 404.20693970]
[112.27207184 389.24487305]
[111.20601654 374.28280640]
[110.05128479 359.32730103]
[108.80793762 344.37893677]
[107.56458282 329.43054199]
[92.89968872 318.43383789]
[90.92964935 299.88787842]
[103.37736511 285.57211304]
[101.77996826 270.65740967]
[100.18257141 255.74272156]
[98.58516693 240.82801819]
[96.98777008 225.91331482]
[87.93910217 214.08239746]
[94.16277313 199.53672791]
[92.56537628 184.62202454]
[90.87960052 169.71705627]
[89.10549927 154.82234192]
[87.33140564 139.92761230]
[85.55730438 125.03290558]
[78.08298492 112.02772522]
[66.10643005 102.99655914]
[54.12986755 93.96538544]
[42.09998703 85.00537109]
[29.96473312 76.18859100]
[17.77742958 67.44390106]
[5.59012604 58.69920731]
[-6.59717703 49.95451355]
[-22.32032394 48.19575119]
[-28.15037727 34.48955917]
[-40.33768082 25.74486542]
[-52.52498245 17.00017357]
[-64.71228790 8.25548172]
[-76.89958954 -0.48921084]
[-89.48771667 -8.64636421]
[-102.44835663 -16.19763947]
[-115.40899658 -23.74891472]
[-131.22804260 -24.01081657]
[-138.32984924 -37.10331726]
[-151.29048157 -44.65459061]
[-167.10952759 -44.91649246]
[-174.21133423 -58.00899506]
[-187.17198181 -65.56027222]
[-202.27598572 -61.75152969]
[-215.31234741 -69.59422302]
[-218.85032654 -84.01706696]
[-231.81097412 -91.56834412]
[-244.77160645 -99.11961365]
[-259.87561035 -95.31087494]
[-272.91198730 -103.15357208]
[-276.44995117 -117.57641602]
[-289.41061401 -125.12768555]
[-302.37124634 -132.67897034]
[-315.33187866 -140.23023987]
[-329.26541138 -145.78515625]
[-343.86636353 -149.22196960]
[-358.46734619 -152.65876770]
[-373.06832886 -156.09556580]
[-387.66928101 -159.53237915]
[-402.27026367 -162.96917725]
[-416.87124634 -166.40597534]
[-431.47219849 -169.84278870]
[-446.67803955 -165.47320557]
[-457.29397583 -175.92076111]
[-471.63735962 -168.73417664]
[-486.13793945 -175.59802246]
[-489.67211914 -191.24696350]
[-479.52877808 -203.67645264]
[-463.48901367 -203.35165405]
[-453.85717773 -190.52172852]
[-439.69567871 -195.13713074]
[-428.03540039 -184.44375610]
[-413.43441772 -181.00695801]
[-398.83346558 -177.57014465]
[-384.23248291 -174.13334656]
[-369.63150024 -170.69654846]
[-355.03054810 -167.25973511]
[-340.42956543 -163.82293701]
[-325.82858276 -160.38612366]
[-319.37762451 -173.92810059]
[-331.24627686 -183.10061646]
[-343.11492920 -192.27313232]
[-354.98358154 -201.44564819]
[-371.21353149 -206.34715271]
[-370.99645996 -223.29971313]
[-354.64633179 -227.78407288]
[-345.81106567 -213.31430054]
[-333.94241333 -204.14178467]
[-322.07376099 -194.96926880]
[-310.20510864 -185.79675293]
[-299.44250488 -196.24502563]
[-308.25927734 -208.38027954]
[-317.07604980 -220.51553345]
[-325.89282227 -232.65078735]
[-334.70959473 -244.78604126]
[-348.91122437 -254.04621887]
[-343.94430542 -270.25628662]
[-326.99276733 -269.97088623]
[-322.57434082 -253.60281372]
[-313.75756836 -241.46755981]
[-304.94079590 -229.33230591]
[-296.12402344 -217.19705200]
[-287.30725098 -205.06179810]
[-288.35421753 -171.22422791]
[-307.78060913 -153.19088745]
[-294.81997681 -145.63960266]
[-281.85931396 -138.08833313]
[-268.89868164 -130.53704834]
[-254.60681152 -134.57167053]
[-241.35531616 -127.09823608]
[-237.22033691 -112.08026123]
[-224.25968933 -104.52898407]
[-211.29905701 -96.97770691]
[-197.00718689 -101.01232910]
[-183.75567627 -93.53889465]
[-179.62069702 -78.52091217]
[-166.66006470 -70.96963501]
[-151.76805115 -71.24785614]
[-143.73921204 -57.61523438]
[-130.77856445 -50.06395721]
[-115.88656616 -50.34217453]
[-107.85771942 -36.70955658]
[-94.89707947 -29.15828133]
[-81.93643951 -21.60700607]
[-86.98101044 -35.73330688]
[-82.84711456 -50.15242386]
[-71.08415222 -59.46008682]
[-56.10085297 -60.16778946]
[-43.51295853 -52.01028442]
[-38.03839493 -38.04500198]
[-41.72902679 -23.50611496]
[-53.20160675 -13.84278774]
[-68.15489960 -12.67651367]
[-55.96759415 -3.93182182]
[-43.78029251 4.81287050]
[-31.59298897 13.55756283]
[-19.40568542 22.30225563]
[-4.55425644 23.43553734]
[2.14751506 37.76721191]
[14.33481789 46.51190186]
[26.52212143 55.25659561]
[38.70942307 64.00128937]
[45.95193100 65.34286499]
[50.98854446 72.92259216]
[58.21463394 74.34992981]
[63.16103745 81.98883057]
[75.13759613 91.01999664]
[87.11415863 100.05117035]
[85.12472534 87.74860382]
[95.18278503 74.80030060]
[115.47531128 71.94394684]
[129.68521118 67.13990021]
[143.89509583 62.33584976]
[158.10499573 57.53180313]
[172.31489563 52.72775269]
[176.54678345 42.75313187]
[185.37701416 36.86008835]
[195.77365112 36.78309631]
[204.32188416 42.30711365]
[218.64167786 37.84130478]
[232.96147156 33.37549210]
[247.28126526 28.90968132]
[261.60107422 24.44387054]
[275.92086792 19.97806168]
[290.24066162 15.51224995]
[304.56045532 11.04643917]
[318.88024902 6.58062887]
[326.11199951 1.05600369]
[333.39633179 2.14784241]
[347.76806641 -2.14789605]
[362.13980103 -6.44363499]
[376.51150513 -10.73937321]
[390.88323975 -15.03511238]
[405.25497437 -19.33085060]
[419.62670898 -23.62658882]
[430.48617554 -35.91495132]
[446.50198364 -32.38981628]
[451.19839478 -16.67753983]
[439.74420166 -4.94156694]
[423.92245483 -9.25485897]
[409.55072021 -4.95912027]
[395.17898560 -0.66338176]
[380.80725098 3.63235688]
[366.43551636 7.92809534]
[352.06381226 12.22383404]
[337.69207764 16.51957321]
[323.34603882 20.90042496]
[309.02624512 25.36623573]
[294.70645142 29.83204460]
[280.38665771 34.29785538]
[266.06686401 38.76366806]
[251.74707031 43.22947693]
[237.42727661 47.69528961]
[223.10748291 52.16109848]
[208.78768921 56.62690735]
[196.71525574 71.75561523]
[177.11894226 66.93765259]
[162.90904236 71.74169922]
[148.69914246 76.54574585]
[134.48925781 81.34979248]
[120.27935791 86.15383911]
[119.30200958 101.12196350]
[132.76654053 107.73302460]
[146.23109436 114.34409332]
[159.69563293 120.95515442]
[173.16017151 127.56621552]
[188.74632263 123.76470947]
[201.34759521 133.69383240]
[201.29737854 149.73680115]
[188.63418579 159.58683777]
[173.07214355 155.68782043]
[166.54910278 141.03076172]
[153.08456421 134.41969299]
[139.62002563 127.80863190]
[126.15548706 121.19757080]
[112.69094849 114.58650970]
[100.45201874 123.25880432]
[102.22612000 138.15351868]
[104.00021362 153.04823303]
[105.77431488 167.94294739]
[109.88453674 176.06242371]
[107.48007965 183.02462769]
[109.07747650 197.93933105]
[118.24040222 210.83705139]
[111.90247345 224.31591797]
[113.49987030 239.23062134]
[115.09726715 254.14532471]
[116.69467163 269.06002808]
[118.29206848 283.97473145]
[128.78843689 289.47238159]
[135.27421570 299.24536133]
[136.24240112 310.81457520]
[131.56851196 321.31100464]
[122.51296234 328.18719482]
[123.75631714 343.13555908]
[124.99967194 358.08395386]
[128.81858826 366.34442139]
[126.16808319 373.21673584]
[127.23413849 388.17880249]
[128.30020142 403.14086914]
[129.36625671 418.10293579]
[138.06477356 431.31832886]
[131.25157166 444.56332397]
[134.97229004 452.86846924]
[132.24050903 459.70889282]
[133.12911987 474.68252563]
[134.01773071 489.65618896]
[134.90634155 504.62985229]
[148.67485046 511.43600464]
[157.18229675 524.22344971]
[158.14021301 539.55242920]
[151.29093933 553.29956055]
[138.47688293 561.76690674]
[123.14496613 562.67675781]
[109.41939545 555.78442383]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 257]
[4 256]
[5 255]
[6 254]
[7 252]
[9 250]
[10 249]
[11 248]
[12 247]
[13 245]
[14 244]
[15 243]
[18 238]
[19 237]
[20 236]
[21 235]
[22 234]
[24 232]
[25 231]
[26 229]
[27 228]
[28 227]
[29 226]
[30 157]
[31 156]
[32 155]
[33 153]
[34 151]
[35 150]
[36 149]
[37 148]
[39 146]
[40 145]
[41 144]
[42 143]
[43 142]
[44 133]
[45 132]
[46 131]
[48 129]
[49 128]
[51 126]
[52 125]
[55 122]
[56 121]
[57 120]
[60 117]
[61 116]
[62 115]
[63 114]
[64 88]
[65 87]
[66 86]
[67 85]
[68 84]
[69 83]
[70 82]
[71 81]
[73 79]
[89 99]
[90 98]
[91 97]
[92 96]
[100 112]
[101 111]
[102 110]
[103 109]
[104 108]
[160 210]
[161 209]
[162 208]
[163 207]
[164 206]
[168 204]
[169 203]
[170 202]
[171 201]
[172 200]
[173 199]
[174 198]
[175 197]
[176 196]
[178 195]
[179 194]
[180 193]
[181 192]
[182 191]
[183 190]
[184 189]
[211 225]
[212 224]
[213 223]
[214 222]
[215 221]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
