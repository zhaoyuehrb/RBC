%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 04:30:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCCUUAGUACCCUUCUACCAGGCCCUCACUCCCCUUCCCCAUGUUGUCGAUGGGGCCAGAGAUGAAGGGAAGUGGACUAAAGUAUUAAACCCUCUAGCUCCCAUUGGCUGAAGACACUGAAGUAGCCCACCCCUGCAGGCAGGUCCUGAUUGAAGGGGAGGCUUGUACUGCUUUGUUGAAUAAAUGAGUUUUACGAACCAGGGCA\
) } def
/len { sequence length } bind def

/coor [
[137.80195618 327.62615967]
[131.26469421 341.12667847]
[124.72743225 354.62719727]
[118.19017029 368.12774658]
[111.65290833 381.62826538]
[105.11564636 395.12878418]
[98.57838440 408.62930298]
[102.06735992 421.04769897]
[96.34330750 432.15823364]
[84.96012878 436.25375366]
[78.22068024 449.65447998]
[71.48122406 463.05523682]
[76.68135834 477.97952271]
[69.73022461 492.17306519]
[54.75179672 497.21511841]
[40.63251877 490.11431885]
[35.74910736 475.08343506]
[42.99880219 461.04000854]
[58.08048630 456.31579590]
[64.81993866 442.91503906]
[71.55938721 429.51431274]
[69.60549927 412.07510376]
[85.07785797 402.09204102]
[91.61511993 388.59152222]
[98.15238190 375.09100342]
[104.68964386 361.59048462]
[111.22690582 348.08993530]
[117.76416779 334.58941650]
[124.30142975 321.08889771]
[115.09619904 305.76336670]
[117.04098511 287.78027344]
[129.59852600 274.47094727]
[126.46514893 259.80184937]
[123.33177185 245.13278198]
[120.19839478 230.46369934]
[117.06501770 215.79461670]
[113.93164062 201.12553406]
[110.79826355 186.45645142]
[107.66489410 171.78736877]
[104.53151703 157.11830139]
[89.61415100 156.34863281]
[75.40261841 151.74942017]
[62.86277390 143.63325500]
[52.84682846 132.55168152]
[46.03548431 119.25786591]
[42.89165878 104.65524292]
[43.62900162 89.73624420]
[48.19740677 75.51478577]
[56.28639984 62.95738602]
[46.21040726 51.84548569]
[36.13441086 40.73358536]
[26.05841637 29.62168312]
[15.98242188 18.50978279]
[5.90642786 7.39788198]
[-4.16956663 -3.71401882]
[-14.24556065 -14.82591915]
[-24.32155609 -25.93782043]
[-34.48077774 -36.97367859]
[-44.72265625 -47.93287277]
[-59.79827499 -52.73249054]
[-62.83538437 -67.31416321]
[-73.07726288 -78.27336121]
[-83.31913757 -89.23255157]
[-93.56101990 -100.19174194]
[-96.67819214 -85.51921082]
[-110.02340698 -78.67047119]
[-123.76126862 -84.69302368]
[-127.76699829 -99.14826965]
[-119.08838654 -111.38271332]
[-104.12202454 -112.37979126]
[-113.51210022 -124.07707977]
[-130.93295288 -125.66046143]
[-141.60911560 -139.08839417]
[-139.31710815 -155.74858093]
[-148.88194275 -167.30340576]
[-158.44677734 -178.85823059]
[-168.01161194 -190.41305542]
[-183.48869324 -189.29971313]
[-196.64649963 -197.52476501]
[-202.42559814 -211.92552185]
[-198.60379028 -226.96458435]
[-186.65066528 -236.85913086]
[-171.16241455 -237.80451965]
[-158.09458923 -229.43721008]
[-152.47206116 -214.97460938]
[-156.45678711 -199.97789001]
[-146.89195251 -188.42306519]
[-137.32711792 -176.86824036]
[-127.76227570 -165.31341553]
[-114.89000702 -165.91123962]
[-103.85932922 -158.88058472]
[-98.81831360 -146.59957886]
[-101.81481171 -133.46714783]
[-92.42473602 -121.76986694]
[-82.60182953 -110.43362427]
[-72.35994720 -99.47442627]
[-62.11806870 -88.51523590]
[-51.87619019 -77.55604553]
[-37.53313828 -73.54029846]
[-33.76346588 -58.17475128]
[-23.52158546 -47.21555710]
[-16.65673447 -44.47457886]
[-13.20965481 -36.01381302]
[-3.13366032 -24.90191460]
[6.94233418 -13.79001331]
[17.01832771 -2.67811251]
[27.09432220 8.43378830]
[37.17031860 19.54568863]
[47.24631119 30.65758896]
[57.32230759 41.76948929]
[67.39830017 52.88138962]
[80.61526489 46.08092880]
[95.13674927 42.90899277]
[109.98550415 43.57904816]
[124.16227722 48.04599762]
[136.71302795 56.00923157]
[147.74888611 45.85000992]
[158.78474426 35.69078445]
[162.97985840 27.57487679]
[170.06367493 25.46333504]
[181.25099182 15.47113895]
[192.43830872 5.47894335]
[193.10339355 -12.00107288]
[205.95133972 -23.36859322]
[222.70899963 -21.95583916]
[233.74485779 -32.11506271]
[244.78071594 -42.27428818]
[255.81657410 -52.43350983]
[254.91790771 -68.04524994]
[264.30590820 -80.55122375]
[279.54788208 -84.04649353]
[293.44699097 -76.88069916]
[299.44052124 -62.43730545]
[294.69851685 -47.53604889]
[281.46002197 -39.21284485]
[265.97579956 -41.39765167]
[254.93994141 -31.23842812]
[243.90408325 -21.07920456]
[232.86822510 -10.91998100]
[234.14213562 1.90304339]
[227.70126343 13.28817272]
[215.70233154 18.96802711]
[202.43049622 16.66625786]
[191.24317932 26.65845490]
[180.05587769 36.65065002]
[168.94396973 46.72664642]
[157.90811157 56.88586807]
[146.87225342 67.04508972]
[153.83053589 80.37075806]
[157.08334351 95.04762268]
[156.40675354 110.06538391]
[151.84735107 124.39028931]
[143.71897888 137.03627014]
[132.58116150 147.13281250]
[119.20059204 153.98492432]
[122.33396912 168.65399170]
[125.46734619 183.32307434]
[128.60072327 197.99215698]
[131.73410034 212.66123962]
[134.86747742 227.33032227]
[138.00085449 241.99940491]
[141.13423157 256.66848755]
[144.26760864 271.33755493]
[158.80706787 276.46554565]
[168.52336121 288.26425171]
[170.72901917 303.25457764]
[164.92561340 317.10702515]
[173.95983887 329.08126831]
[182.99406433 341.05554199]
[197.48220825 347.41195679]
[198.97105408 362.23196411]
[208.00527954 374.20620728]
[217.03950500 386.18048096]
[231.52766418 392.53689575]
[233.01651001 407.35690308]
[242.05073547 419.33114624]
[251.08496094 431.30538940]
[260.11920166 443.27966309]
[269.15341187 455.25390625]
[283.64157104 461.61032104]
[285.13040161 476.43032837]
[294.16464233 488.40457153]
[303.19885254 500.37884521]
[312.23309326 512.35308838]
[327.91763306 514.29498291]
[337.56912231 526.80993652]
[335.46151733 542.47308350]
[322.84518433 551.99169922]
[307.20523071 549.71862793]
[297.82052612 537.00238037]
[300.25885010 521.38732910]
[291.22460938 509.41305542]
[282.19036865 497.43881226]
[273.15615845 485.46453857]
[259.31417847 479.96463013]
[257.17916870 464.28811646]
[248.14492798 452.31387329]
[239.11070251 440.33963013]
[230.07647705 428.36535645]
[221.04225159 416.39111328]
[207.20028687 410.89117432]
[205.06526184 395.21469116]
[196.03103638 383.24044800]
[186.99681091 371.26617432]
[173.15484619 365.76623535]
[171.01980591 350.08975220]
[161.98558044 338.11550903]
[152.95135498 326.14126587]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 29]
[2 28]
[3 27]
[4 26]
[5 25]
[6 24]
[7 23]
[10 21]
[11 20]
[12 19]
[32 163]
[33 162]
[34 161]
[35 160]
[36 159]
[37 158]
[38 157]
[39 156]
[40 155]
[49 111]
[50 110]
[51 109]
[52 108]
[53 107]
[54 106]
[55 105]
[56 104]
[57 103]
[58 101]
[59 100]
[61 98]
[62 97]
[63 96]
[64 95]
[70 94]
[71 93]
[74 89]
[75 88]
[76 87]
[77 86]
[116 148]
[117 147]
[118 146]
[120 145]
[121 144]
[122 143]
[125 139]
[126 138]
[127 137]
[128 136]
[167 208]
[168 207]
[169 206]
[171 204]
[172 203]
[173 202]
[175 200]
[176 199]
[177 198]
[178 197]
[179 196]
[181 194]
[182 193]
[183 192]
[184 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
