%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 02:33:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACUCCAGAUCCUGGCUAAGAGGGAAAUAGCUCCUUGGGACACAAACAAGAAAUGUGGACAAGGAGGGACAUUUGCAUACUCCUACUGUCUGUGUGGUCACAGCUAGUUUCUGUCAGCUGGGCUCUCUGGGAGAAAGCUGGCUGUUGUCCAAUGCCUUCCUUGGCAGCCAAGUGGAUAAAACCUUUAGGAGCCCCAGCUCAA\
) } def
/len { sequence length } bind def

/coor [
[161.99067688 434.87136841]
[163.51002502 415.70541382]
[172.24888611 398.54449463]
[186.90383911 386.00177002]
[181.67671204 371.94198608]
[176.44956970 357.88223267]
[171.22244263 343.82244873]
[161.07246399 342.21780396]
[152.43882751 336.49728394]
[146.91882324 327.63876343]
[145.56689453 317.20758057]
[148.69393921 307.08016968]
[155.79895020 299.10638428]
[151.22998047 284.81915283]
[146.66101074 270.53195190]
[142.09204102 256.24475098]
[137.52305603 241.95751953]
[123.34479523 237.47256470]
[114.42059326 225.35552979]
[114.34161377 210.12901306]
[123.34774017 197.63116455]
[118.77876282 183.34394836]
[114.20979309 169.05673218]
[109.64081573 154.76953125]
[105.07184601 140.48231506]
[100.50287628 126.19509888]
[90.47961426 125.42698669]
[81.14028931 120.83321381]
[73.93657684 112.83589172]
[70.09265900 102.40256500]
[70.40328217 90.93228149]
[55.43964005 91.97605133]
[40.47600174 93.01982880]
[25.51235962 94.06359863]
[10.54872036 95.10737610]
[-4.41492033 96.15115356]
[-19.37856102 97.19492340]
[-26.99082947 108.31118774]
[-39.43463898 112.94400024]
[-52.08665085 109.61128235]
[-60.38263702 99.74710083]
[-75.36064148 100.55918884]
[-90.33863831 101.37126923]
[-105.31664276 102.18335724]
[-112.85288239 115.64472961]
[-126.48126221 122.87458038]
[-141.85302734 121.56588745]
[-154.06307983 112.13625336]
[-159.21525574 97.59463501]
[-155.66551208 82.58121490]
[-144.54655457 71.88671875]
[-129.40640259 68.92372131]
[-115.07621765 74.63770294]
[-106.12872314 87.20535278]
[-91.15072632 86.39327240]
[-76.17272186 85.58118439]
[-61.19472122 84.76910400]
[-50.51245499 71.78330994]
[-33.40690994 70.51322174]
[-20.42233467 82.23128510]
[-5.45869446 81.18750763]
[9.50494576 80.14373779]
[24.46858597 79.09996033]
[39.43222809 78.05619049]
[54.39586639 77.01241302]
[69.35950470 75.96864319]
[80.71645355 66.16967010]
[83.94100952 51.52036667]
[87.16556549 36.87105560]
[90.39012909 22.22174835]
[93.61468506 7.57244062]
[87.11245728 8.91862679]
[79.86457825 8.21419048]
[72.43005371 5.25635862]
[65.41171265 -0.01740574]
[59.42288971 -7.52130747]
[52.49951935 -20.82795906]
[45.57614899 -34.13460922]
[38.65278244 -47.44126129]
[31.72941208 -60.74790955]
[16.42390633 -60.73879242]
[2.87270212 -67.85380554]
[-5.81023216 -80.45798492]
[-7.62962246 -95.65496826]
[-2.16738582 -109.95261383]
[9.32129574 -120.06541443]
[24.19640732 -123.66953278]
[39.03975677 -119.93675995]
[50.44044876 -109.72486877]
[55.77869415 -95.38047028]
[53.82779694 -80.19980621]
[45.03606415 -67.67127991]
[51.95943069 -54.36462784]
[58.88280106 -41.05797958]
[65.80616760 -27.75132751]
[72.72953796 -14.44467640]
[80.20238495 -13.80706882]
[88.77957916 -26.11283112]
[95.14808655 -12.53185463]
[102.62093353 -11.89424706]
[111.69854736 -23.83564377]
[120.77616119 -35.77703857]
[129.85377502 -47.71843719]
[138.93138123 -59.65983200]
[148.00900269 -71.60122681]
[157.08660889 -83.54262543]
[166.16423035 -95.48401642]
[175.24183655 -107.42541504]
[184.31944275 -119.36681366]
[193.39706421 -131.30821228]
[202.38200378 -143.31948853]
[211.27372742 -155.39993286]
[213.22290039 -171.10061646]
[226.99873352 -176.76414490]
[235.89045715 -188.84458923]
[244.78219604 -200.92503357]
[253.67391968 -213.00547791]
[252.51069641 -225.85530090]
[260.17062378 -235.73516846]
[272.11386108 -237.68011475]
[273.64306641 -254.00779724]
[288.65869141 -260.60046387]
[301.71395874 -250.67611694]
[299.37869263 -234.44409180]
[284.05526733 -228.60249329]
[282.78775024 -211.10208130]
[265.75436401 -204.11375427]
[256.86264038 -192.03330994]
[247.97090149 -179.95286560]
[239.07917786 -167.87242126]
[237.76600647 -153.03581238]
[223.35417175 -146.50819397]
[214.46244812 -134.42774963]
[213.02830505 -127.17266083]
[205.33845520 -122.23059082]
[196.26084900 -110.28919983]
[187.18322754 -98.34780121]
[178.10562134 -86.40640259]
[169.02799988 -74.46501160]
[159.95039368 -62.52361298]
[150.87278748 -50.58221817]
[141.79516602 -38.64082336]
[132.71755981 -26.69942665]
[123.63993835 -14.75802994]
[114.56232452 -2.81663418]
[108.26399231 10.79699707]
[105.03943634 25.44630623]
[101.81488037 40.09561539]
[98.59032440 54.74492264]
[95.36576080 69.39423370]
[107.02880859 70.55182648]
[117.16931152 75.89302063]
[124.38651276 84.46021271]
[127.76733398 94.86772156]
[126.99914551 105.52380371]
[122.38894653 114.87362671]
[114.79009247 121.62612152]
[119.35906219 135.91334534]
[123.92803192 150.20054626]
[128.49700928 164.48776245]
[133.06597900 178.77497864]
[137.63494873 193.06219482]
[152.22174072 198.01515198]
[160.99258423 210.46206665]
[160.75523376 225.50891113]
[151.81027222 237.38854980]
[156.37924194 251.67576599]
[160.94822693 265.96298218]
[165.51719666 280.25018311]
[170.08616638 294.53741455]
[188.40577698 302.77349854]
[194.67532349 321.53442383]
[185.28221130 338.59533691]
[190.50933838 352.65509033]
[195.73648071 366.71487427]
[200.96360779 380.77462769]
[212.06271362 379.80075073]
[223.08909607 381.32974243]
[233.48599243 385.27993774]
[242.72940063 391.44757080]
[250.35452271 399.51715088]
[255.97914124 409.07775879]
[259.32272339 419.64392090]
[260.22042847 430.68014526]
[258.63134766 441.62823486]
[254.64009094 451.93539429]
[248.45257568 461.08221436]
[240.38520813 468.60879517]
[230.84878540 474.13787842]
[234.74975586 488.62176514]
[238.65072632 503.10562134]
[242.55169678 517.58947754]
[254.53837585 528.78106689]
[250.57641602 544.69445801]
[234.74154663 548.95928955]
[223.32331848 537.18829346]
[228.06782532 521.49047852]
[224.16685486 507.00659180]
[220.26588440 492.52273560]
[216.36491394 478.03884888]
[197.33044434 476.46856689]
[180.31056213 467.73272705]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 176]
[5 175]
[6 174]
[7 173]
[13 170]
[14 169]
[15 168]
[16 167]
[17 166]
[21 162]
[22 161]
[23 160]
[24 159]
[25 158]
[26 157]
[31 66]
[32 65]
[33 64]
[34 63]
[35 62]
[36 61]
[37 60]
[41 57]
[42 56]
[43 55]
[44 54]
[67 150]
[68 149]
[69 148]
[70 147]
[71 146]
[76 96]
[77 95]
[78 94]
[79 93]
[80 92]
[100 145]
[101 144]
[102 143]
[103 142]
[104 141]
[105 140]
[106 139]
[107 138]
[108 137]
[109 136]
[110 135]
[111 133]
[112 132]
[114 130]
[115 129]
[116 128]
[117 127]
[120 125]
[189 200]
[190 199]
[191 198]
[192 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
