%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 05:59:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGUCGAAGGCUUAUGCCGAGCCAGAAGCCGAAGCCACUUGCCCUCCUGGAGGAGACCUGCAAGCUCCCUGAGCGGUGGGCGGGCCUCGUCCGCAGGUCUCAUCCCACACUCUUGAGAAGCCUUGGUCACUACAGUGGUCGCACAUGUUCCUCUUCCUGUUCCUGUUGACAUGUCGUUGUUUAAAUAAAUCUCACUUGCCACCAGU\
) } def
/len { sequence length } bind def

/coor [
[99.01361084 120.46595001]
[92.85742188 134.14443970]
[86.70122528 147.82295227]
[80.54503632 161.50144958]
[81.93691254 177.26130676]
[69.65782928 185.69181824]
[75.85238647 197.65341187]
[74.05223846 210.80662537]
[65.13671875 220.37905884]
[52.52531815 223.02807617]
[46.16323853 236.61203003]
[39.80115891 250.19599915]
[41.74136353 266.47994995]
[28.44885635 276.08419800]
[13.59783363 269.12869263]
[12.46575260 252.76866150]
[26.21720123 243.83392334]
[32.57928085 230.24995422]
[38.94136047 216.66600037]
[32.54516602 201.11312866]
[39.51269531 185.43731689]
[55.97933578 179.53562927]
[54.14712524 164.75413513]
[66.86653900 155.34524536]
[73.02272797 141.66674805]
[79.17892456 127.98825836]
[85.33511353 114.30975342]
[79.81860352 103.54106903]
[81.33946228 91.53758240]
[70.89426422 80.77199554]
[60.44906998 70.00641632]
[50.00387192 59.24082565]
[39.55867386 48.47524261]
[24.39586639 43.95862198]
[21.08638000 29.43634224]
[10.64118099 18.67075729]
[-4.93041468 18.26683426]
[-15.36997032 7.20020294]
[-14.88892937 -7.64244509]
[-25.33412743 -18.40803146]
[-35.77932358 -29.17361641]
[-49.94857788 -22.14377975]
[-65.57740784 -19.83907890]
[-81.13439178 -22.47320747]
[-95.09889984 -29.77650833]
[-106.10971069 -41.02353287]
[-113.09772491 -55.10507202]
[-115.38975525 -70.63756561]
[-112.77333832 -86.09900665]
[-105.51640320 -99.97811127]
[-116.12300873 -110.58471680]
[-126.72960663 -121.19131470]
[-141.95890808 -125.47841644]
[-145.48735046 -139.94905090]
[-156.09394836 -150.55564880]
[-166.70054626 -161.16226196]
[-177.30714417 -171.76885986]
[-187.91375732 -182.37545776]
[-198.52035522 -192.98205566]
[-209.12695312 -203.58866882]
[-219.73355103 -214.19526672]
[-230.34016418 -224.80186462]
[-236.88737488 -212.85954285]
[-251.25596619 -205.10473633]
[-270.79434204 -205.40623474]
[-283.63104248 -213.16629028]
[-296.46777344 -220.92636108]
[-309.30447388 -228.68643188]
[-325.98730469 -231.70626831]
[-327.70376587 -248.57310486]
[-311.97125244 -254.89167786]
[-301.54443359 -241.52314758]
[-288.70770264 -233.76307678]
[-275.87097168 -226.00302124]
[-263.03427124 -218.24295044]
[-257.73095703 -223.54624939]
[-261.61328125 -238.03512573]
[-247.12435913 -234.15284729]
[-241.82106018 -239.45614624]
[-249.58113098 -252.29287720]
[-257.34118652 -265.12957764]
[-265.10125732 -277.96630859]
[-272.86132812 -290.80303955]
[-288.03140259 -296.02301025]
[-293.27267456 -311.18576050]
[-284.56448364 -324.65969849]
[-268.58700562 -326.10876465]
[-257.59680176 -314.42138672]
[-260.02459717 -298.56311035]
[-252.26454163 -285.72637939]
[-244.50447083 -272.88964844]
[-236.74440002 -260.05294800]
[-228.98434448 -247.21621704]
[-219.73355103 -235.40846252]
[-209.12695312 -224.80186462]
[-198.52035522 -214.19526672]
[-187.91375732 -203.58866882]
[-177.30714417 -192.98205566]
[-166.70054626 -182.37545776]
[-156.09394836 -171.76885986]
[-145.48735046 -161.16226196]
[-134.88073730 -150.55564880]
[-120.41010284 -147.02720642]
[-116.12300873 -131.79791260]
[-105.51640320 -121.19131470]
[-94.90980530 -110.58471680]
[-82.37174988 -117.36824036]
[-68.41442871 -120.34588623]
[-54.16786575 -119.26737976]
[-40.78808975 -114.21123505]
[-29.36333656 -105.57910919]
[-20.82553101 -94.06388092]
[-15.87427235 -80.59404755]
[-14.91951656 -66.25888062]
[-18.04764557 -52.22032166]
[-25.01373863 -39.61881638]
[-14.56854153 -28.85322952]
[-4.12334299 -18.08764267]
[10.72706223 -18.12017250]
[21.47333717 -7.35113287]
[21.40676689 8.22555923]
[31.85196495 18.99114418]
[46.26766205 22.73773956]
[50.32426071 38.03004456]
[60.76945877 48.79563141]
[71.21465302 59.56121445]
[81.65985107 70.32680511]
[92.10504913 81.09238434]
[111.38346863 82.96343231]
[120.48962402 100.05834961]
[134.43293762 105.58864594]
[148.37623596 111.11893463]
[158.09799194 106.23420715]
[168.68504333 107.48188782]
[176.66883850 114.21002197]
[179.56773376 124.01145172]
[193.33764648 129.96035767]
[207.10757446 135.90925598]
[220.87748718 141.85815430]
[234.64739990 147.80705261]
[249.18400574 151.50666809]
[264.12246704 152.86415100]
[272.95446777 150.52383423]
[279.27569580 154.35661316]
[294.19192505 155.93955994]
[309.10818481 157.52250671]
[324.02441406 159.10545349]
[338.94064331 160.68841553]
[353.85690308 162.27136230]
[368.77313232 163.85430908]
[374.92349243 150.03300476]
[385.04531860 138.79006958]
[398.14706421 131.22698975]
[412.94506836 128.08471680]
[427.98962402 129.67108154]
[441.80679321 135.83068848]
[453.04293823 145.96006775]
[460.59722900 159.06684875]
[463.72961426 173.86697388]
[462.13314819 188.91046143]
[455.96429443 202.72351074]
[445.82739258 213.95286560]
[432.71554565 221.49836731]
[417.91333008 224.62081909]
[402.87091064 223.01428223]
[389.06201172 216.83616638]
[377.83944702 206.69174194]
[370.30270386 193.57484436]
[367.19018555 178.77053833]
[352.27395630 177.18759155]
[337.35769653 175.60464478]
[322.44146729 174.02169800]
[307.52523804 172.43875122]
[292.60897827 170.85580444]
[277.69274902 169.27285767]
[262.76495361 167.80259705]
[247.82652283 166.44511414]
[260.52246094 174.43342590]
[270.63381958 185.51316833]
[277.43084717 198.88478088]
[280.42309570 213.58329773]
[279.39462280 228.54800415]
[274.41958618 242.69894409]
[265.85708618 255.01492310]
[254.32499695 264.60714722]
[240.65553284 270.78341675]
[225.83518982 273.09796143]
[210.93345642 271.38381958]
[197.02572632 265.76461792]
[185.11566162 256.64593506]
[176.06275940 244.68580627]
[170.52032471 230.74732971]
[168.88832092 215.83636475]
[171.28453064 201.02900696]
[177.53602600 187.39379883]
[187.19166565 175.91474915]
[199.55465698 167.42024231]
[213.73280334 162.52330017]
[228.69850159 161.57696533]
[214.92858887 155.62806702]
[201.15867615 149.67916870]
[187.38874817 143.73027039]
[173.61883545 137.78137207]
[154.62884521 141.41658020]
[142.84594727 125.06224823]
[128.90263367 119.53195190]
[114.95932770 114.00166321]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 27]
[2 26]
[3 25]
[4 24]
[6 22]
[10 19]
[11 18]
[12 17]
[29 128]
[30 127]
[31 126]
[32 125]
[33 124]
[35 122]
[36 121]
[39 118]
[40 117]
[41 116]
[50 106]
[51 105]
[52 104]
[54 102]
[55 101]
[56 100]
[57 99]
[58 98]
[59 97]
[60 96]
[61 95]
[62 94]
[65 75]
[66 74]
[67 73]
[68 72]
[79 93]
[80 92]
[81 91]
[82 90]
[83 89]
[130 207]
[131 206]
[132 205]
[136 203]
[137 202]
[138 201]
[139 200]
[140 199]
[141 177]
[142 176]
[144 175]
[145 174]
[146 173]
[147 172]
[148 171]
[149 170]
[150 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
