%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 03:46:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGUCCGUUCUGUCCCUCACACUGUGACCUGACCAGCCCCACCGGCCCAUCCUGGUCAUGUUACUGCAUUUGUGGCCGGCCUCCCCUGGAUCAUGUCAUUCAAUUCCAGUCACCUCUUCUGCAAUCAUGACCUCUUGAUGUCUCCAUGGUGACCUCCUUGGGGGUCACUGACCCUGCUUGGUGGGGUCCCCCUUGUAACAAUAAAAUCUAUUUAAACUUUA\
) } def
/len { sequence length } bind def

/coor [
[241.78993225 358.62466431]
[236.04968262 344.76647949]
[230.30943298 330.90829468]
[224.56918335 317.05010986]
[218.82893372 303.19189453]
[206.72328186 303.19512939]
[195.43246460 299.47662354]
[186.04911804 292.53961182]
[179.43600464 283.19134521]
[176.14720154 272.45086670]
[176.38339233 261.43890381]
[179.98469543 251.26092529]
[186.46009827 242.89631653]
[178.12654114 230.42427063]
[164.62231445 224.14054871]
[163.38867188 208.36750793]
[155.05513000 195.89546204]
[146.72157288 183.42341614]
[138.38801575 170.95137024]
[130.05445862 158.47932434]
[121.72090912 146.00727844]
[101.33448029 150.85948181]
[80.72164917 147.08305359]
[63.37951279 135.31866455]
[52.25027847 117.56224060]
[49.22209549 96.82627106]
[34.55280304 93.69387817]
[19.88351059 90.56148529]
[5.21421909 87.42909241]
[-9.45507240 84.29669952]
[-24.56674004 88.98158264]
[-35.39765930 78.75708008]
[-50.06695175 75.62468719]
[-64.73624420 72.49229431]
[-79.42713928 69.46284485]
[-94.13891602 66.53649139]
[-108.85070038 63.61013412]
[-123.56247711 60.68378067]
[-133.24514771 73.76522064]
[-147.61286926 81.28557587]
[-163.76385498 81.78330231]
[-178.46110535 75.20946503]
[-188.78109741 62.92731857]
[-192.69537354 47.42997742]
[-207.44674683 44.71023560]
[-222.19812012 41.99049377]
[-236.94949341 39.27075195]
[-251.70086670 36.55101013]
[-266.45223999 33.83126831]
[-281.22232056 31.21503639]
[-296.01037598 28.70244408]
[-307.94665527 40.69302368]
[-324.51388550 43.17818451]
[-339.14947510 35.37392807]
[-346.17510986 20.53277779]
[-360.99694824 18.22782707]
[-375.81881714 15.92287636]
[-390.64065552 13.61792469]
[-403.25100708 23.14446068]
[-418.89239502 20.88116264]
[-428.28506470 8.17080784]
[-425.85653687 -7.44577742]
[-413.04757690 -16.70355034]
[-397.45755005 -14.11003685]
[-388.33569336 -1.20392370]
[-373.51385498 1.10102725]
[-358.69201660 3.40597820]
[-343.87014771 5.71092892]
[-335.37948608 -4.58524323]
[-322.80996704 -9.38217449]
[-309.40451050 -7.32788086]
[-298.67846680 1.14706707]
[-293.49780273 13.91437912]
[-278.70971680 16.42697144]
[-271.59567261 14.45041180]
[-263.73248291 19.07989693]
[-248.98112488 21.79963684]
[-234.22975159 24.51937866]
[-219.47837830 27.23912048]
[-204.72700500 29.95886230]
[-189.97563171 32.67860413]
[-182.35386658 21.09237480]
[-170.85649109 13.26005459]
[-157.19969177 10.39068413]
[-143.43725586 12.94949627]
[-131.65174866 20.58284950]
[-123.63935089 32.16669846]
[-120.63612366 45.97200012]
[-105.92434692 48.89835739]
[-91.21256256 51.82471085]
[-76.50078583 54.75106430]
[-69.33408356 52.97480774]
[-61.60385132 57.82300186]
[-46.93455887 60.95539474]
[-32.26526642 64.08778381]
[-18.20284653 59.17885971]
[-6.32268047 69.62741089]
[8.34661102 72.75980377]
[23.01590347 75.89219666]
[37.68519592 79.02458954]
[52.35448456 82.15698242]
[55.94141006 74.55773163]
[60.73027420 67.65255737]
[66.59043884 61.62983704]
[73.36202240 56.65387344]
[80.86031342 52.86041260]
[88.88073730 50.35294342]
[97.20449829 49.19986725]
[105.60453033 49.43264389]
[113.85166168 51.04492188]
[121.72090912 53.99271393]
[130.05445862 41.52067184]
[138.38801575 29.04862595]
[146.72157288 16.57658195]
[155.05513000 4.10453796]
[163.38867188 -8.36750603]
[155.01298523 -21.02149391]
[152.12785339 -35.87811279]
[155.14237976 -50.66751099]
[163.56668091 -63.14223480]
[176.09121704 -71.41876984]
[190.79026794 -74.26187134]
[205.41802979 -71.26886749]
[213.75157166 -83.74091339]
[222.08512878 -96.21295929]
[224.24757385 -105.07778931]
[230.62403870 -108.80035400]
[239.13168335 -121.15429688]
[247.63934326 -133.50823975]
[242.34652710 -148.09472656]
[246.67060852 -162.99714661]
[258.94891357 -172.48519897]
[274.46014404 -172.91053772]
[287.23995972 -164.10960388]
[292.37423706 -149.46656799]
[287.88873291 -134.61193848]
[275.50823975 -125.25763702]
[259.99328613 -125.00058746]
[251.48562622 -112.64664459]
[242.97798157 -100.29270172]
[234.55717468 -87.87940216]
[226.22361755 -75.40735626]
[217.89007568 -62.93531418]
[226.25303650 -50.56640244]
[229.25144958 -35.89823914]
[226.39785767 -21.15979004]
[218.09655762 -8.60288239]
[205.58653259 -0.15816508]
[190.75672913 2.86170983]
[175.86071777 -0.03395263]
[167.52717590 12.43809128]
[159.19361877 24.91013527]
[150.86006165 37.38217926]
[142.52650452 49.85422516]
[134.19296265 62.32626724]
[143.21723938 73.15341187]
[148.92459106 86.04103088]
[150.87699890 100.00000000]
[148.92459106 113.95896912]
[143.21723938 126.84658813]
[134.19296265 137.67373657]
[142.52650452 150.14578247]
[150.86006165 162.61781311]
[159.19361877 175.08985901]
[167.52717590 187.56190491]
[175.86071777 200.03395081]
[189.96101379 207.20976257]
[190.59858704 222.09071350]
[198.93212891 234.56275940]
[222.41470337 232.66517639]
[242.49020386 247.27928162]
[248.49325562 272.68359375]
[262.50698853 278.03292847]
[276.52072144 283.38226318]
[290.53445435 288.73156738]
[304.54818726 294.08090210]
[318.56192017 299.43023682]
[332.57565308 304.77954102]
[346.58938599 310.12887573]
[363.54333496 310.12866211]
[368.23684692 326.41998291]
[353.88150024 335.43997192]
[341.24005127 324.14260864]
[327.22631836 318.79327393]
[313.21258545 313.44396973]
[299.19885254 308.09463501]
[285.18511963 302.74530029]
[271.17138672 297.39599609]
[257.15765381 292.04666138]
[243.14392090 286.69735718]
[232.68711853 297.45166016]
[238.42736816 311.30984497]
[244.16761780 325.16802979]
[249.90788269 339.02624512]
[255.64813232 352.88442993]
[270.42898560 350.03643799]
[285.48056030 350.22244263]
[300.18652344 353.43484497]
[313.94467163 359.54208374]
[326.19161987 368.29409790]
[336.42581177 379.33245850]
[344.22824097 392.20520020]
[349.27935791 406.38516235]
[351.37231445 421.29165649]
[350.42141724 436.31433105]
[346.46563721 450.83801270]
[339.66693115 464.26791382]
[330.30368042 476.05410767]
[318.75933838 485.71398926]
[305.50662231 492.85195923]
[291.08825684 497.17572021]
[276.09460449 498.50823975]
[261.13967896 496.79495239]
[246.83589172 492.10598755]
[233.76895142 484.63339233]
[222.47393799 474.68313599]
[213.41339111 462.66265869]
[206.95832825 449.06423950]
[203.37306213 434.44470215]
[202.80444336 419.40270996]
[205.27572632 404.55422974]
[210.68571472 390.50729370]
[218.81289673 377.83709717]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 195]
[2 194]
[3 193]
[4 192]
[5 191]
[13 169]
[14 168]
[16 166]
[17 165]
[18 164]
[19 163]
[20 162]
[21 161]
[26 101]
[27 100]
[28 99]
[29 98]
[30 97]
[32 95]
[33 94]
[34 93]
[35 91]
[36 90]
[37 89]
[38 88]
[44 81]
[45 80]
[46 79]
[47 78]
[48 77]
[49 76]
[50 74]
[51 73]
[55 68]
[56 67]
[57 66]
[58 65]
[111 155]
[112 154]
[113 153]
[114 152]
[115 151]
[116 150]
[123 143]
[124 142]
[125 141]
[127 140]
[128 139]
[129 138]
[172 190]
[173 189]
[174 188]
[175 187]
[176 186]
[177 185]
[178 184]
[179 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
