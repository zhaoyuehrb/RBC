%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 19:18:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUGCCUUGUAGAGAUGCAGCCUGCCCAGCUGAAUCUUGGCUUCUGGACCUUGACCUUCAGAACUUCUCUUGGUGUGGAACCAUUACGCCCAGGGUUCACUCCCCUCUCAUCGUCCGGCCUUCUCCCUUCAUCUUGAUCUGGGAAGAAUGAAAUGAACUCAGCUACACUCUCUGA\
) } def
/len { sequence length } bind def

/coor [
[45.70435333 277.96484375]
[39.50617218 291.62435913]
[33.30798721 305.28390503]
[27.10980415 318.94342041]
[20.91162300 332.60293579]
[14.71343899 346.26245117]
[16.05689430 362.02651978]
[3.75197601 370.41928101]
[-2.44620681 384.07879639]
[1.82792854 399.54202271]
[-7.71305037 412.43966675]
[-23.75012016 412.87774658]
[-33.98101425 400.52023315]
[-30.55746651 384.84674072]
[-16.10572815 377.88061523]
[-9.90754509 364.22109985]
[-11.69433594 349.43405151]
[1.05391765 340.06427002]
[7.25210047 326.40475464]
[13.45028305 312.74523926]
[19.64846611 299.08572388]
[25.84664917 285.42617798]
[32.04483032 271.76666260]
[18.23282623 257.20922852]
[12.06902599 238.06407166]
[14.80585957 218.09202576]
[25.94323158 201.23440552]
[43.31933594 190.83522034]
[63.53017426 188.97785950]
[67.98783112 174.65551758]
[72.44548798 160.33319092]
[76.90314484 146.01084900]
[81.36080170 131.68852234]
[85.81845856 117.36618042]
[82.38842773 110.93108368]
[81.44434357 104.24622345]
[82.75405884 98.17278290]
[85.81492615 93.38980103]
[89.94726562 90.31833649]
[94.40563202 89.08634949]
[90.20287323 74.68715668]
[86.00011444 60.28796005]
[81.79735565 45.88876724]
[77.97671509 42.24099731]
[76.14225769 37.92054367]
[76.21500397 33.80487061]
[77.77612305 30.61048317]
[74.34568024 16.00801659]
[70.91522980 1.40554893]
[67.48477936 -13.19691753]
[54.33285522 -21.54344368]
[51.06190872 -36.40129089]
[59.10009766 -48.88820648]
[55.66965103 -63.49067307]
[52.23920441 -78.09313965]
[37.17929077 -78.02283478]
[22.48843002 -81.30413818]
[8.90270138 -87.76934052]
[-2.89791441 -97.09130096]
[-12.32358265 -108.79998016]
[-18.90408516 -122.30612946]
[-22.31228638 -136.93096924]
[-22.38038826 -151.94032288]
[-19.10818863 -166.58139038]
[-12.66293716 -180.12060547]
[-3.37078261 -191.88031006]
[8.29972649 -201.27273560]
[21.76126862 -207.82931519]
[18.33082199 -222.43177795]
[14.90037537 -237.03424072]
[11.46992874 -251.63671875]
[0.78163326 -263.30166626]
[5.40319586 -277.46112061]
[1.97274899 -292.06359863]
[-1.45769787 -306.66604614]
[-4.88814449 -321.26852417]
[-8.31859207 -335.87100220]
[-11.74903870 -350.47344971]
[-15.17948532 -365.07592773]
[-28.00521278 -374.71334839]
[-28.32302284 -390.75326538]
[-15.88911819 -400.89120483]
[-0.24172652 -397.35018921]
[6.61581230 -382.84661865]
[-0.57701868 -368.50637817]
[2.85342813 -353.90390015]
[6.28387499 -339.30142212]
[9.71432209 -324.69897461]
[13.14476871 -310.09649658]
[16.57521629 -295.49404907]
[20.00566292 -280.89157104]
[30.44858932 -270.27108765]
[26.07239532 -255.06715393]
[29.50284195 -240.46469116]
[32.93328857 -225.86222839]
[36.36373520 -211.25976562]
[51.33660126 -211.38305664]
[65.96849823 -208.16966248]
[79.52490997 -201.77760315]
[91.32458496 -192.52452087]
[100.77373505 -180.87199402]
[107.39598846 -167.40235901]
[110.85632324 -152.78974915]
[110.97805786 -137.76629639]
[107.75189209 -123.08542633]
[101.33646393 -109.48410797]
[92.05062866 -97.64585876]
[80.35755920 -88.16637421]
[66.84167480 -81.52359009]
[70.27211761 -66.92111969]
[73.70256805 -52.31865311]
[86.45999146 -44.71709061]
[90.14696503 -29.95698357]
[82.08724976 -16.62736511]
[85.51770020 -2.02489805]
[88.94814301 12.57756901]
[92.37859344 27.18003464]
[96.19654846 41.68600845]
[100.39930725 56.08520126]
[104.60206604 70.48439789]
[108.80482483 84.88359070]
[120.35233307 94.45725250]
[135.28091431 95.91922760]
[150.20950317 97.38121033]
[165.13809204 98.84318542]
[180.07905579 100.17262268]
[195.03123474 101.36941528]
[209.98341370 102.56620789]
[227.74769592 93.08102417]
[243.20896912 104.66270447]
[258.19421387 105.32807159]
[273.17944336 105.99344635]
[289.27117920 100.65565491]
[298.85501099 114.64088440]
[288.06939697 127.72166443]
[272.51406860 120.97868347]
[257.52883911 120.31330872]
[242.54359436 119.64793396]
[235.62615967 127.22047424]
[225.46539307 129.77262878]
[215.37557983 126.22193909]
[208.78662109 117.51838684]
[193.83444214 116.32159424]
[178.88226318 115.12480164]
[171.94215393 117.73355865]
[163.67611694 113.77176666]
[148.74752808 112.30979156]
[133.81893921 110.84781647]
[118.89035797 109.38584137]
[131.29051208 117.82598877]
[145.37657166 122.98184967]
[154.67559814 134.75164795]
[156.43258667 149.64839172]
[150.12701416 163.25866699]
[137.62701416 171.55021667]
[122.63590240 172.06652832]
[109.59504700 164.65463257]
[102.36802673 151.51042175]
[103.09532928 136.52998352]
[100.14079285 121.82383728]
[95.68313599 136.14617920]
[91.22547913 150.46850586]
[86.76782227 164.79084778]
[82.31016541 179.11317444]
[77.85250854 193.43551636]
[86.45025635 199.11511230]
[93.55133057 206.56713867]
[98.79894257 215.41023254]
[101.93096924 225.19325256]
[102.79306793 235.41842651]
[101.34629822 245.56652832]
[97.66879272 255.12339783]
[91.95162964 263.60586548]
[84.48883057 270.58624268]
[75.66232300 275.71389771]
[65.92232513 278.73281860]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 23]
[2 22]
[3 21]
[4 20]
[5 19]
[6 18]
[8 16]
[9 15]
[29 165]
[30 164]
[31 163]
[32 162]
[33 161]
[34 160]
[40 121]
[41 120]
[42 119]
[43 118]
[47 117]
[48 116]
[49 115]
[50 114]
[53 111]
[54 110]
[55 109]
[68 96]
[69 95]
[70 94]
[71 93]
[73 91]
[74 90]
[75 89]
[76 88]
[77 87]
[78 86]
[79 85]
[122 149]
[123 148]
[124 147]
[125 146]
[126 144]
[127 143]
[128 142]
[130 138]
[131 137]
[132 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
