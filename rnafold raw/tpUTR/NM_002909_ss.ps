%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 06:14:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCAACUGGAAAAUACAUGUCUAGAACUGAUCCAGCAAUUACAACGGAGUCAAAAAUUAAACCGGACCAUCUCUCCAACUCAACUCAACCUGGACACUCUCUUCUCUGCUGAGUUUGCCUUGUUAAUCUUCAAUAGUUUUACCUACCCCAGUCUUUGGAACCCUAAAUAAUAAAAAUAAACAUGUUUCCACUAUUGUGCUGUC\
) } def
/len { sequence length } bind def

/coor [
[104.71767426 392.65478516]
[114.61721802 380.03024292]
[114.15753937 365.03729248]
[113.69786835 350.04434204]
[113.23819733 335.05139160]
[97.22314453 322.35696411]
[95.75444031 301.67938232]
[110.21843719 286.42242432]
[108.84114075 271.48580933]
[107.46384430 256.54916382]
[106.08655548 241.61251831]
[104.70925903 226.67588806]
[102.24136353 224.15132141]
[100.87602997 220.30415344]
[101.22235107 215.66673279]
[103.62813568 211.02362061]
[102.93876648 196.03947449]
[102.24938965 181.05532837]
[101.56001282 166.07118225]
[100.87063599 151.08702087]
[100.18126678 136.10287476]
[72.55429840 113.60887146]
[80.04526520 84.66664886]
[71.41548920 72.39771271]
[62.78570938 60.12876892]
[54.15592957 47.85982895]
[45.52614975 35.59088898]
[36.89636612 23.32194901]
[28.26658821 11.05300903]
[19.63680840 -1.21593153]
[4.39372587 0.04727369]
[-9.34432316 -6.44601583]
[-17.93060875 -18.86141396]
[-19.14152718 -33.80764008]
[-12.75168037 -47.26258087]
[-21.38146019 -59.53152084]
[-35.23260498 -57.56147385]
[-48.51755524 -61.73256683]
[-58.65996552 -71.17613983]
[-63.71873093 -84.00690460]
[-62.75934601 -97.69918060]
[-56.02598953 -109.58397675]
[-64.46674347 -121.98371887]
[-72.90749359 -134.38346863]
[-81.34825134 -146.78320312]
[-88.76787567 -152.11950684]
[-89.82164001 -159.43827820]
[-98.07138824 -171.96591187]
[-92.95597839 -157.86511230]
[-92.82772064 -142.86566162]
[-97.70124054 -128.67944336]
[-107.02033997 -116.92552948]
[-119.72142029 -108.94539642]
[-134.35491943 -105.64981842]
[-149.25070190 -107.41490936]
[-162.70872498 -114.03922272]
[-173.19302368 -124.76673126]
[-179.50703430 -138.37310791]
[-180.93013000 -153.30545044]
[-177.29989624 -167.85952759]
[-169.03063965 -180.37429810]
[-157.06614685 -189.42144775]
[-142.77191162 -193.96842957]
[-127.77935028 -193.49629211]
[-113.79737854 -188.05761719]
[-126.13208008 -196.59313965]
[-138.46678162 -205.12866211]
[-153.50010681 -200.82359314]
[-167.76240540 -207.23614502]
[-174.51947021 -221.33848572]
[-170.58082581 -236.47192383]
[-157.80618286 -245.49092102]
[-142.22732544 -244.13697815]
[-131.20011902 -233.04937744]
[-129.93127441 -217.46336365]
[-117.59656525 -208.92784119]
[-105.26186371 -200.39231873]
[-98.78591156 -204.17546082]
[-109.98408508 -214.15548706]
[-103.95277405 -227.88949585]
[-89.02718353 -226.39723206]
[-85.83401489 -211.74171448]
[-79.35806274 -215.52484131]
[-80.73535156 -230.46148682]
[-82.11264801 -245.39811707]
[-83.48994446 -260.33474731]
[-84.86723328 -275.27139282]
[-86.24452972 -290.20800781]
[-95.21627045 -303.23947144]
[-88.68026733 -316.62341309]
[-100.55103302 -326.70916748]
[-101.73503113 -341.87664795]
[-92.04663849 -353.13146973]
[-93.42393494 -368.06811523]
[-94.80122375 -383.00473022]
[-108.20754242 -390.81820679]
[-114.43002319 -405.03298950]
[-111.07598877 -420.18325806]
[-99.43513489 -430.44335938]
[-83.98360443 -431.86813354]
[-70.66283417 -423.90969849]
[-64.59492493 -409.62823486]
[-68.11312103 -394.51525879]
[-79.86459351 -384.38201904]
[-78.48729706 -369.44540405]
[-77.11000824 -354.50875854]
[-65.52688599 -345.21536255]
[-63.91733932 -330.08712769]
[-73.74362946 -318.00070190]
[-64.87039948 -306.03762817]
[-71.30789185 -291.58532715]
[-69.93059540 -276.64868164]
[-68.55330658 -261.71203613]
[-67.17601013 -246.77540588]
[-65.79872131 -231.83877563]
[-64.42142487 -216.90214539]
[-65.77670288 -198.63430786]
[-74.13621521 -185.72633362]
[-85.54374695 -180.21565247]
[-77.29399872 -167.68801880]
[-68.94850922 -155.22396851]
[-60.50775146 -142.82421875]
[-52.06699753 -130.42446899]
[-43.62624359 -118.02472687]
[-27.54787827 -119.61467743]
[-12.77599430 -112.84152222]
[-3.38058639 -99.46726990]
[-2.00266218 -83.08669281]
[-9.11252022 -68.16130066]
[-0.48274019 -55.89236069]
[14.34012032 -57.35810089]
[27.99729919 -51.16638184]
[36.77961731 -38.88887024]
[38.24702072 -23.76460266]
[31.90574837 -9.84571171]
[40.53553009 2.42322898]
[49.16530991 14.69216919]
[57.79508972 26.96110916]
[66.42486572 39.23004913]
[75.05464935 51.49898911]
[83.68442535 63.76792908]
[92.31420898 76.03687286]
[98.76062012 73.30069733]
[106.10743713 72.37650299]
[113.82730865 73.54218292]
[121.31185913 76.91861725]
[127.91896820 82.44735718]
[133.02578735 89.88251495]
[136.08332825 98.79829407]
[151.08288574 98.91322327]
[166.08244324 99.02816010]
[178.47608948 88.84105682]
[194.13739014 92.32004547]
[201.05232239 106.79634094]
[193.91636658 121.16497040]
[178.20358276 124.40354919]
[165.96751404 114.02772522]
[150.96794128 113.91278839]
[135.96838379 113.79785156]
[130.76763916 119.20176697]
[143.87590027 126.49379730]
[156.98414612 133.78584290]
[170.09239197 141.07788086]
[183.20063782 148.36991882]
[198.16059875 149.46531677]
[211.43267822 156.45471191]
[220.79971313 168.17045593]
[224.69685364 182.65536499]
[222.47303772 197.48959351]
[214.49980164 210.19500732]
[202.10911560 218.64904785]
[187.37094116 221.43942261]
[172.74739075 218.09994507]
[160.68145752 209.18853760]
[153.18884277 196.19390869]
[151.52122498 181.28688049]
[143.73246765 168.46755981]
[135.94369507 155.64823914]
[128.15492249 142.82891846]
[120.36615753 130.00958252]
[115.16541290 135.41349792]
[115.85478973 150.39764404]
[116.54416656 165.38180542]
[117.23353577 180.36595154]
[117.92291260 195.35009766]
[118.61228943 210.33424377]
[119.64589691 225.29859924]
[121.02318573 240.23522949]
[122.40048218 255.17185974]
[123.77777863 270.10848999]
[125.15506744 285.04513550]
[134.10153198 288.82650757]
[141.01290894 295.56811523]
[144.96784973 304.31225586]
[145.46070862 313.83853149]
[142.46580505 322.83419800]
[136.43525696 330.07498169]
[128.23115540 334.59170532]
[128.69082642 349.58468628]
[129.15049744 364.57763672]
[129.61016846 379.57058716]
[140.26451111 391.56494141]
[137.38793945 407.34799194]
[123.18713379 414.81234741]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 201]
[3 200]
[4 199]
[5 198]
[8 191]
[9 190]
[10 189]
[11 188]
[12 187]
[16 186]
[17 185]
[18 184]
[19 183]
[20 182]
[21 181]
[23 142]
[24 141]
[25 140]
[26 139]
[27 138]
[28 137]
[29 136]
[30 135]
[35 130]
[36 129]
[42 124]
[43 123]
[44 122]
[45 121]
[47 120]
[48 119]
[65 77]
[66 76]
[67 75]
[83 116]
[84 115]
[85 114]
[86 113]
[87 112]
[88 111]
[90 109]
[93 106]
[94 105]
[95 104]
[149 159]
[150 158]
[151 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
