%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 03:30:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACCUGCUAUCCACUGGGAGAGGCUAUCAGCCAGUCCUGGGACUUGGAGACCCAGCAUCCUUUGCAUUACUUUUUCCUUCAGGAUGAUCUAGAGCAGCAUGGAGCUGUUGGUAGAAUAUUAGUUUUUAACCAUACAUUGUCCCAAAAGUGUCUGUGCAUUGUGCAAAAAGUAAACUUAGGAAACAUUUGGUAUUAAAUAAAUUUACACUUUUCUUUGCAGUA\
) } def
/len { sequence length } bind def

/coor [
[91.04146576 203.27203369]
[80.08474731 191.88230896]
[80.47444916 176.08282471]
[91.97937775 165.24713135]
[92.19068909 150.24862671]
[92.40200043 135.25010681]
[92.61331177 120.25160217]
[85.75173187 117.22360992]
[72.02856445 111.16764069]
[65.16698456 108.13965607]
[54.22956467 118.40477753]
[43.29214096 128.66990662]
[32.35471725 138.93502808]
[21.71082687 149.50421143]
[11.36891460 160.36904907]
[1.02700186 171.23390198]
[-9.31491089 182.09873962]
[-19.65682220 192.96359253]
[-29.99873543 203.82843018]
[-29.78341293 219.40377808]
[-40.42635727 230.27494812]
[-55.27639771 230.38424683]
[-65.61830902 241.24908447]
[-75.96022034 252.11393738]
[-86.30213165 262.97879028]
[-92.84309387 278.62014771]
[-109.68389893 276.66476440]
[-112.46694183 259.94079590]
[-97.16697693 252.63685608]
[-86.82506561 241.77201843]
[-76.48315430 230.90718079]
[-66.14124298 220.04232788]
[-66.76400757 205.20495605]
[-56.43060684 194.03912354]
[-40.86357880 193.48652649]
[-30.52166748 182.62167358]
[-20.17975426 171.75683594]
[-9.83784294 160.89198303]
[0.50406969 150.02714539]
[10.84598255 139.16229248]
[10.91646481 136.36824036]
[12.09307194 133.43353271]
[14.43495464 130.77783203]
[17.84902763 128.83450317]
[22.08959389 127.99760437]
[33.02701569 117.73248291]
[43.96443939 107.46735382]
[54.90185928 97.20223236]
[71.32509613 92.75833893]
[87.32206726 94.14285278]
[75.96069336 84.34901428]
[64.59932709 74.55516815]
[53.10112000 64.92234802]
[41.46834946 55.45246887]
[29.83558083 45.98258591]
[18.20281219 36.51270294]
[9.58007717 33.52560806]
[6.47409916 26.82655716]
[-5.02411032 17.19373894]
[-16.52231979 7.56092167]
[-36.51880646 4.96620131]
[-42.33224106 -13.48063564]
[-54.09726334 -22.78570175]
[-65.86228180 -32.09077072]
[-77.62730408 -41.39583588]
[-93.25099945 -43.88796997]
[-98.43370056 -57.85181427]
[-110.19872284 -67.15688324]
[-121.96374512 -76.46194458]
[-137.45414734 -74.82327271]
[-149.25299072 -84.42752838]
[-150.71975708 -99.20535278]
[-162.48478699 -108.51042175]
[-178.10847473 -111.00255585]
[-183.29118347 -124.96640015]
[-195.05619812 -134.27146912]
[-206.82122803 -143.57653809]
[-223.11656189 -145.41874695]
[-229.41989136 -160.55810547]
[-219.24688721 -173.42053223]
[-203.06265259 -170.77426147]
[-197.51615906 -155.34155273]
[-185.75112915 -146.03648376]
[-173.98611450 -136.73141479]
[-159.20393372 -134.90484619]
[-153.17971802 -120.27544403]
[-141.41468811 -110.97037506]
[-126.69642639 -112.94730377]
[-114.63246918 -103.67824554]
[-112.65867615 -88.22696686]
[-100.89365387 -78.92189789]
[-89.12863159 -69.61683655]
[-74.34645081 -67.79026031]
[-68.32223511 -53.16085815]
[-56.55721664 -43.85578918]
[-44.79219437 -34.55072403]
[-33.02717590 -25.24565697]
[-23.03633690 -27.33796692]
[-13.33756351 -23.50955582]
[-7.21695375 -14.79830647]
[-6.88950157 -3.93728805]
[4.60870790 5.69552994]
[16.10691643 15.32834816]
[27.67269325 24.87993431]
[39.30546188 34.34981537]
[50.93823242 43.81969833]
[62.57100296 53.28958130]
[67.32090759 53.70391083]
[71.86329651 57.10078812]
[74.39317322 63.19380188]
[85.75453949 72.98764038]
[97.11590576 82.78148651]
[88.29196930 70.65143585]
[87.03757477 55.70397568]
[93.71642303 42.27293015]
[106.39205933 34.25244522]
[121.38935852 33.96796036]
[134.36006165 41.50195694]
[141.54345703 54.67004776]
[140.85684204 69.65432739]
[132.49928284 82.11029053]
[118.89636230 88.42611694]
[133.58448792 85.38327026]
[148.27261353 82.34043121]
[162.96073914 79.29758453]
[169.41860962 65.31180573]
[182.71803284 57.89701843]
[197.65669250 59.71369934]
[208.53094482 69.85710144]
[223.21907043 66.81426239]
[237.90719604 63.77141571]
[252.59532166 60.72856903]
[254.85169983 46.67043304]
[261.75540161 34.25222397]
[272.45980835 24.95486450]
[285.66650391 19.87912750]
[299.78265381 19.61534500]
[313.11325073 24.17480659]
[324.06451416 32.99085999]
[331.33447266 44.98925400]
[346.06402588 42.15362930]
[360.79354858 39.31800461]
[366.35498047 29.98315048]
[375.93621826 25.34119606]
[386.27362061 26.70536995]
[393.99063110 33.38685608]
[408.79421997 30.96731567]
[423.59777832 28.54777718]
[438.40136719 26.12823868]
[448.35641479 11.73858356]
[465.30541992 9.05800724]
[478.67773438 19.26354408]
[493.44573975 16.63570023]
[508.27621460 2.97374535]
[526.14990234 10.36380672]
[540.83801270 7.32096291]
[555.52618408 4.27811861]
[570.21429443 1.23527455]
[584.49755859 -7.89841986]
[597.22833252 3.29820132]
[589.99346924 18.63096237]
[573.25714111 15.92340279]
[558.56903076 18.96624565]
[543.88085938 22.00909042]
[529.19274902 25.05193520]
[524.38061523 34.05403900]
[515.21752930 39.03004837]
[504.60934448 38.12752914]
[496.07357788 31.40372086]
[481.30557251 34.03156281]
[475.48571777 45.52190781]
[463.93939209 51.65620804]
[450.77407837 49.99866104]
[440.82089233 40.93181229]
[426.01733398 43.35135269]
[411.21374512 45.77088928]
[396.41018677 48.19042969]
[382.36889648 61.49170685]
[363.62918091 54.04754257]
[348.89965820 56.88316727]
[334.17010498 59.71879196]
[331.22009277 75.29283142]
[322.49673462 88.57365417]
[309.31185913 97.51023865]
[293.66891479 100.70889282]
[277.95864868 97.65055847]
[264.59371948 88.77474976]
[255.63816833 75.41669464]
[240.95004272 78.45954132]
[226.26191711 81.50238800]
[211.57379150 84.54522705]
[205.62423706 98.17391205]
[192.63677979 105.77586365]
[177.48619080 104.25488281]
[166.00358582 93.98571014]
[151.31546021 97.02855682]
[136.62733459 100.07140350]
[121.93920135 103.11424255]
[136.28807068 107.48576355]
[150.63693237 111.85727692]
[165.44979858 109.49533081]
[180.18693542 112.29120636]
[193.10548401 119.91426849]
[202.67768860 131.46298218]
[207.77151489 145.57159424]
[207.78457642 160.57159424]
[202.71530151 174.68904114]
[193.16320801 186.25439453]
[180.25793457 193.89993286]
[165.52569580 196.72145081]
[150.70874023 194.38528442]
[137.55934143 187.16770935]
[127.63256836 175.92230225]
[122.10239410 161.97894287]
[121.62227631 146.99038696]
[114.61705017 133.72665405]
[107.61182404 120.46290588]
[107.40051270 135.46142578]
[107.18920135 150.45993042]
[106.97789001 165.45845032]
[118.17298889 176.61395264]
[118.11743164 192.41813660]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 220]
[5 219]
[6 218]
[7 217]
[10 48]
[11 47]
[12 46]
[13 45]
[14 40]
[15 39]
[16 38]
[17 37]
[18 36]
[19 35]
[22 32]
[23 31]
[24 30]
[25 29]
[50 112]
[51 111]
[52 110]
[53 107]
[54 106]
[55 105]
[56 104]
[58 103]
[59 102]
[60 101]
[62 97]
[63 96]
[64 95]
[65 94]
[67 92]
[68 91]
[69 90]
[72 87]
[73 86]
[75 84]
[76 83]
[77 82]
[122 198]
[123 197]
[124 196]
[125 195]
[129 191]
[130 190]
[131 189]
[132 188]
[140 181]
[141 180]
[142 179]
[146 177]
[147 176]
[148 175]
[149 174]
[152 170]
[153 169]
[155 165]
[156 164]
[157 163]
[158 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
