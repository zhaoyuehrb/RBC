%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 01:49:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAAGGGCAACCACCCAGAACCCAGAAAAUGCAGAUUCACUCAGUUUAAUCUUGAAUGUGGAAACAGUUCACCUCCUCCCUUCAUCACGUCUCCGUGUGCUUAGAGCAGUUUCGUUUUCUCAGUUGGAUGCCCUGUGUCUCUGUGAGUGGGGUGGAGCAAAGGGAACCAAUGCCGAAGACCGAGGGCAGGGGAGGGAGGCGGGGGUGGACAGGGAGGCAGCUUGUGAAUUUUUGUUUUACUGUUUAACUUUAUUA\
AAAAAGAAAAAAAAAAGAGAAUAAAAUGUUUUGACCCUUCCUGGCCCUUUGCUCUGG\
) } def
/len { sequence length } bind def

/coor [
[251.58769226 478.42752075]
[264.10092163 469.40408325]
[263.19815063 454.43127441]
[262.29534912 439.45846558]
[261.39254761 424.48565674]
[260.48977661 409.51284790]
[259.58697510 394.54003906]
[258.68420410 379.56723022]
[246.05523682 371.05328369]
[240.55319214 358.23068237]
[242.69480896 345.73413086]
[230.55070496 336.92953491]
[218.40660095 328.12493896]
[206.26251221 319.32034302]
[194.11840820 310.51574707]
[181.97430420 301.71115112]
[172.47926331 317.04067993]
[156.24945068 317.13708496]
[144.65727234 326.65661621]
[133.06510925 336.17614746]
[121.47293091 345.69567871]
[124.97141266 356.27685547]
[125.10806274 367.39404297]
[121.88610077 378.00732422]
[115.62217712 387.12872314]
[106.91533661 393.91415405]
[96.58975220 397.74163818]
[85.61670685 398.26821899]
[75.02325439 395.46057129]
[65.79607391 389.59680176]
[59.45462036 404.09152222]
[44.63615799 405.59567261]
[32.67123795 414.64224243]
[26.32978630 429.13696289]
[11.51132393 430.64111328]
[-0.45359513 439.68768311]
[-12.41851425 448.73428345]
[-24.38343430 457.78085327]
[-36.34835434 466.82745361]
[-38.34257507 471.53765869]
[-41.59988403 474.72387695]
[-45.34202576 476.16101074]
[-48.81243515 475.95980835]
[-61.04429245 484.64205933]
[-63.44138336 500.26351929]
[-76.23166656 509.54705811]
[-91.82689667 506.98495483]
[-100.97469330 494.09722900]
[-98.24784088 478.52996826]
[-85.26412201 469.51892090]
[-69.72655487 472.41021729]
[-57.49469757 463.72796631]
[-45.39493942 454.86251831]
[-33.43001938 445.81594849]
[-21.46509933 436.76934814]
[-9.50018024 427.72277832]
[2.46473885 418.67617798]
[7.95038080 404.82855225]
[23.62465477 402.67733765]
[35.58957291 393.63073730]
[41.07521439 379.78311157]
[56.74948883 377.63189697]
[53.43879700 358.95162964]
[60.17212296 341.12701416]
[75.13581848 329.19818115]
[94.17643738 326.58419800]
[111.95339966 334.10351562]
[123.54557037 324.58398438]
[135.13774109 315.06445312]
[146.72990417 305.54489136]
[150.24028015 289.39862061]
[167.62858582 283.50900269]
[161.90573120 269.64361572]
[149.89793396 260.83102417]
[151.78486633 245.12274170]
[146.06201172 231.25735474]
[140.33915710 217.39198303]
[134.61628723 203.52659607]
[128.89343262 189.66120911]
[123.17057037 175.79582214]
[117.44771576 161.93043518]
[111.72485352 148.06506348]
[106.00199127 134.19967651]
[87.55015564 134.75950623]
[70.31139374 125.47675323]
[59.43478394 107.86594391]
[44.96226120 103.92310333]
[30.48973465 99.98025513]
[16.01721001 96.03741455]
[0.30572844 100.73649597]
[-11.43217850 89.28426361]
[-7.12155819 73.46179199]
[8.80319309 69.54588318]
[19.96005630 81.56488800]
[34.43257904 85.50772858]
[48.90510559 89.45057678]
[63.37762833 93.39342499]
[68.96103668 79.47129822]
[55.77458954 72.32163239]
[42.58814621 65.17197418]
[29.40170097 58.02231216]
[12.59562588 55.78799820]
[10.09023762 39.02019119]
[25.50919151 31.97092247]
[36.55136490 44.83586502]
[49.73780823 51.98552704]
[62.92425156 59.13518906]
[76.11069489 66.28485107]
[81.52454376 66.76902008]
[86.53025055 67.99675751]
[83.83496857 53.24089813]
[81.13968658 38.48503494]
[78.44440460 23.72917366]
[75.74912262 8.97331238]
[72.97982788 -5.76883698]
[70.13658142 -20.49690437]
[67.29332733 -35.22496796]
[64.45008087 -49.95303726]
[61.60683441 -64.68109894]
[47.70997238 -71.32816315]
[40.47634125 -84.72696686]
[42.49556732 -99.63960266]
[52.78559875 -110.37521362]
[49.94235229 -125.10327911]
[47.09910202 -139.83134460]
[44.25585556 -154.55940247]
[41.41260529 -169.28747559]
[31.19975471 -181.37086487]
[36.38433075 -195.33399963]
[31.70813179 -203.11756897]
[33.58723831 -210.22412109]
[30.89195633 -224.97998047]
[28.19667435 -239.73583984]
[25.50139236 -254.49171448]
[15.41033363 -266.67700195]
[20.73479652 -280.58740234]
[18.03951645 -295.34326172]
[13.44167328 -303.17337036]
[15.39201164 -310.26071167]
[12.84496880 -325.04287720]
[10.29792500 -339.82504272]
[7.75088215 -354.60720825]
[-6.83193779 -359.25479126]
[-17.57629204 -370.15512085]
[-22.01320839 -384.80340576]
[-19.12311363 -399.83358765]
[-9.57013035 -411.79180908]
[4.45053387 -417.93017578]
[19.71703339 -416.83813477]
[32.72124100 -408.76663208]
[40.47488022 -395.57043457]
[41.19622803 -380.28192139]
[34.71951675 -366.41430664]
[22.53305244 -357.15426636]
[25.08009529 -342.37207031]
[27.62714005 -327.58990479]
[30.17418289 -312.80773926]
[32.79537582 -298.03854370]
[35.49065781 -283.28268433]
[45.38893509 -272.15283203]
[40.25725555 -257.18698120]
[42.95253754 -242.43112183]
[45.64781570 -227.67526245]
[48.34309769 -212.91940308]
[51.11240005 -198.17726135]
[61.12188339 -187.14732361]
[56.14067459 -172.13072205]
[58.98392105 -157.40266418]
[61.82717133 -142.67459106]
[64.67041779 -127.94652557]
[67.51366425 -113.21846008]
[81.06035614 -107.08452606]
[88.48537445 -93.99509430]
[86.75894165 -78.86655426]
[76.33489990 -67.52435303]
[79.17814636 -52.79628372]
[82.02139282 -38.06821823]
[84.86464691 -23.34015274]
[87.70789337 -8.61208534]
[92.03781891 -2.67189074]
[90.50498962 6.27803135]
[93.20027161 21.03389359]
[95.89555359 35.78975296]
[98.59083557 50.54561615]
[101.28611755 65.30147552]
[115.19506073 68.77899170]
[126.51338196 77.57942200]
[133.31138611 90.20238495]
[134.43006897 104.49575806]
[129.67871094 118.02264404]
[119.86737823 128.47680664]
[125.59024048 142.34219360]
[131.31309509 156.20758057]
[137.03594971 170.07296753]
[142.75881958 183.93835449]
[148.48167419 197.80372620]
[154.20454407 211.66911316]
[159.92739868 225.53450012]
[165.65025330 239.39988708]
[178.06739807 249.20422363]
[175.77111816 263.92077637]
[181.49397278 277.78613281]
[190.77890015 289.56707764]
[202.92300415 298.37167358]
[215.06710815 307.17626953]
[227.21119690 315.98083496]
[239.35530090 324.78543091]
[251.49938965 333.59002686]
[276.90588379 330.47137451]
[291.49835205 356.02697754]
[305.39227295 361.68017578]
[319.28619385 367.33337402]
[333.18014526 372.98657227]
[347.07406616 378.63980103]
[360.96798706 384.29299927]
[374.86190796 389.94619751]
[388.75585938 395.59939575]
[397.04565430 386.45486450]
[407.70965576 380.28860474]
[419.72296143 377.67608643]
[431.93618774 378.85208130]
[443.18554688 383.68957520]
[452.40359497 391.71334839]
[458.72061157 402.14669800]
[461.54660034 413.98645020]
[460.62634277 426.09954834]
[474.34378052 432.16848755]
[488.93286133 426.70986938]
[502.75784302 433.06005859]
[507.87188721 447.00216675]
[521.58929443 453.07110596]
[535.30676270 459.14004517]
[549.02416992 465.20898438]
[562.74163818 471.27792358]
[576.45904541 477.34686279]
[590.17645264 483.41580200]
[603.89392090 489.48474121]
[617.61132812 495.55368042]
[626.67163086 496.15478516]
[631.43554688 501.75299072]
[645.09136963 507.95932007]
[657.71630859 495.63943481]
[674.08453369 489.15875244]
[691.65026855 489.49566650]
[707.69293213 496.57064819]
[719.73846436 509.26257324]
[725.94061279 525.58654785]
[725.36431885 543.00396729]
[739.20080566 548.79638672]
[753.03735352 554.58874512]
[766.87384033 560.38110352]
[781.40087891 554.15692139]
[796.04296875 560.10540771]
[802.11322021 574.69744873]
[796.01025391 589.27581787]
[781.35485840 595.19146729]
[766.84179688 588.93469238]
[761.08142090 574.21759033]
[747.24493408 568.42523193]
[733.40844727 562.63287354]
[719.57196045 556.84045410]
[711.48577881 566.37261963]
[701.04223633 573.27386475]
[689.06872559 576.98553467]
[676.51721191 577.20214844]
[664.38836670 573.89642334]
[653.65209961 567.32238770]
[645.16986084 557.99572754]
[639.62542725 546.65362549]
[637.46990967 534.19616699]
[638.88500977 521.61511230]
[625.22918701 515.40881348]
[611.54241943 509.27111816]
[597.82495117 503.20217896]
[584.10754395 497.13323975]
[570.39007568 491.06430054]
[556.67266846 484.99536133]
[542.95526123 478.92642212]
[529.23779297 472.85748291]
[515.52038574 466.78854370]
[501.80294800 460.71960449]
[488.04602051 466.31271362]
[474.04815674 460.35336304]
[468.27484131 445.88592529]
[454.55740356 439.81698608]
[441.45904541 451.80371094]
[424.37362671 456.82717896]
[406.76672363 453.81951904]
[392.23117065 443.34686279]
[383.75402832 427.50357056]
[383.10263062 409.49334717]
[369.20870972 403.84011841]
[355.31478882 398.18692017]
[341.42086792 392.53372192]
[327.52691650 386.88052368]
[313.63299561 381.22732544]
[299.73907471 375.57409668]
[285.84512329 369.92089844]
[273.65701294 378.66442871]
[274.55978394 393.63723755]
[275.46258545 408.61004639]
[276.36535645 423.58285522]
[277.26815796 438.55566406]
[278.17092896 453.52847290]
[279.07373047 468.50128174]
[292.58050537 475.95587158]
[299.89276123 489.54019165]
[298.67721558 504.91958618]
[289.32168579 517.18652344]
[274.81155396 522.42669678]
[259.77691650 518.96795654]
[249.01525879 507.91397095]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 305]
[3 304]
[4 303]
[5 302]
[6 301]
[7 300]
[8 299]
[11 208]
[12 207]
[13 206]
[14 205]
[15 204]
[16 203]
[18 70]
[19 69]
[20 68]
[21 67]
[30 62]
[32 60]
[33 59]
[35 57]
[36 56]
[37 55]
[38 54]
[39 53]
[43 52]
[44 51]
[72 202]
[73 201]
[75 199]
[76 198]
[77 197]
[78 196]
[79 195]
[80 194]
[81 193]
[82 192]
[83 191]
[86 97]
[87 96]
[88 95]
[89 94]
[98 108]
[99 107]
[100 106]
[101 105]
[110 185]
[111 184]
[112 183]
[113 182]
[114 181]
[115 179]
[116 178]
[117 177]
[118 176]
[119 175]
[123 171]
[124 170]
[125 169]
[126 168]
[127 167]
[129 165]
[131 164]
[132 163]
[133 162]
[134 161]
[136 159]
[137 158]
[139 157]
[140 156]
[141 155]
[142 154]
[210 298]
[211 297]
[212 296]
[213 295]
[214 294]
[215 293]
[216 292]
[217 291]
[226 285]
[227 284]
[230 281]
[231 280]
[232 279]
[233 278]
[234 277]
[235 276]
[236 275]
[237 274]
[238 273]
[240 272]
[241 271]
[248 261]
[249 260]
[250 259]
[251 258]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
