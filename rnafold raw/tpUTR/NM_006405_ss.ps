%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 07:15:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUCUGUAUGGCAGAACUAUUGCUGUUCUCUCCCUUUCUUCAUGCCCUGUUGAACUCUCCUACCAGCUUCUCUUCUGAUUGACUGAAUUGUGUGAUGGCAUUGUUGCCUUCCCUUUUGCCCUUUGGGCAUUCCUUCCCCAGAGAGGGCCUGGAAAUUAUAAAUCUCUAUCACAUAAGGAUUAUAUAUUUGAACUUUUUAAGUUGCCUUUAGUUUUGGUCCUGAUUUUUCUUUUUACAAUUACCAAAAUAAAAUUU\
AUUAAGAAAAAGGCUCA\
) } def
/len { sequence length } bind def

/coor [
[69.04515076 250.07684326]
[65.96025085 264.75619507]
[62.87535477 279.43554688]
[59.79045486 294.11489868]
[56.70555496 308.79425049]
[53.62065887 323.47360229]
[50.53575897 338.15295410]
[53.19537354 354.89700317]
[37.84195709 362.08789062]
[26.68184090 349.32513428]
[35.85640717 335.06805420]
[38.94130325 320.38870239]
[42.02620316 305.70935059]
[45.11110306 291.02999878]
[48.19599915 276.35064697]
[51.28089905 261.67129517]
[54.36579895 246.99194336]
[43.18295288 237.15277100]
[38.39465332 222.94262695]
[41.38177109 208.14588928]
[51.44022369 196.75622559]
[65.94374847 191.89877319]
[69.02864838 177.21940613]
[72.11354828 162.54005432]
[59.43569946 154.52307129]
[47.49610138 163.60305786]
[35.55650711 172.68304443]
[23.61691284 181.76301575]
[29.48274231 195.65701294]
[31.70817757 210.57337952]
[30.15332413 225.57449341]
[24.91592407 239.71734619]
[16.32520294 252.11293030]
[4.92118216 261.98202515]
[-8.57927227 268.70425415]
[-23.32751083 271.85708618]
[-38.39644623 271.24227905]
[-52.83883667 266.89852905]
[-65.74681091 259.09884644]
[-76.30897522 248.33355713]
[-83.86138153 235.27937317]
[-87.92926788 220.75686646]
[-88.25693512 205.67895508]
[-84.82377625 190.99343872]
[-77.84561157 177.62347412]
[-67.76109314 166.40950012]
[-55.20413589 158.05642700]
[-40.96408463 153.08935547]
[-25.93608284 151.82051086]
[-11.06480122 154.32965088]
[2.71493912 160.45906067]
[14.53693104 169.82342529]
[26.47652626 160.74343872]
[38.41612244 151.66346741]
[50.35571671 142.58348083]
[48.47716904 135.32255554]
[33.95531464 139.07965088]
[19.43346024 142.83673096]
[4.91154385 146.59358215]
[1.15493286 132.07160950]
[15.67636776 128.31488037]
[30.19822121 124.55779266]
[44.72007751 120.80069733]
[42.84152985 113.53977203]
[27.99645042 111.38951874]
[13.15137005 109.23925781]
[-1.70583701 107.17446136]
[-18.58282852 114.58226013]
[-32.04696655 103.30246735]
[-46.93759918 101.49441528]
[-59.22233963 111.43728638]
[-74.93066406 109.69827271]
[-84.74309540 97.30909729]
[-82.83809662 81.62003326]
[-70.34587097 71.93914032]
[-54.67783356 74.00990295]
[-45.12954712 86.60378265]
[-30.23891449 88.41183472]
[-20.54898834 81.20960999]
[-8.14965916 82.56954193]
[0.27344605 92.30561829]
[7.29231787 90.08139801]
[15.30162334 94.39418030]
[30.14670372 96.54443359]
[44.99178314 98.69468689]
[54.28764725 77.90577698]
[70.24249268 64.24263763]
[88.82468414 59.23614120]
[106.01632690 62.46304703]
[104.46556854 47.54342270]
[102.91481018 32.62379837]
[101.36405182 17.70417786]
[99.81329346 2.78455424]
[98.26252747 -12.13506889]
[96.71176910 -27.05469131]
[95.16101074 -41.97431564]
[88.73062134 -55.52606964]
[78.15457916 -66.16313934]
[67.57853699 -76.80021667]
[57.00249481 -87.43728638]
[41.04148102 -91.20267487]
[36.58167267 -106.98374176]
[48.21093369 -118.54627991]
[63.96607971 -113.99574280]
[67.63956451 -98.01332855]
[78.21560669 -87.37625885]
[88.79165649 -76.73918915]
[99.36769867 -66.10211182]
[105.77486420 -70.00059509]
[97.97790527 -82.81494141]
[90.18093872 -95.62928009]
[82.38417053 -108.44374084]
[95.19875336 -116.24031067]
[102.99527740 -103.42624664]
[110.79224396 -90.61190033]
[118.58921051 -77.79756165]
[124.99637604 -81.69604492]
[120.41040039 -95.97780609]
[115.82442474 -110.25957489]
[111.23844910 -124.54133606]
[106.65246582 -138.82310486]
[96.05311584 -152.05526733]
[105.83396149 -165.90341187]
[121.84853363 -160.33836365]
[120.93423462 -143.40908813]
[125.52021027 -129.12731934]
[130.10618591 -114.84555054]
[134.69216919 -100.56378937]
[139.27813721 -86.28202057]
[154.21463013 -87.66099548]
[156.10832214 -102.54097748]
[158.00201416 -117.42095947]
[159.89572144 -132.30094910]
[148.76634216 -142.95191956]
[146.07408142 -157.93875122]
[152.64512634 -171.47703552]
[165.77095032 -178.46636963]
[167.66465759 -193.34635925]
[169.55834961 -208.22634888]
[160.91360474 -221.74107361]
[166.22610474 -236.87899780]
[181.42054749 -242.02760315]
[194.84107971 -233.23731995]
[196.19259644 -217.25129700]
[184.43833923 -206.33264160]
[182.54463196 -191.45266724]
[180.65093994 -176.57267761]
[191.60771179 -166.51847839]
[194.57832336 -151.76586914]
[188.21809387 -137.93109131]
[174.77569580 -130.40724182]
[172.88200378 -115.52725983]
[170.98831177 -100.64727783]
[169.09460449 -85.76729584]
[177.89033508 -97.91782379]
[190.70416260 -90.12003326]
[200.43443298 -78.70417023]
[206.10380554 -64.81682587]
[207.14285278 -49.85285950]
[203.44721985 -35.31524277]
[195.38809204 -22.66413689]
[183.77491760 -13.17022133]
[169.77415466 -7.78706312]
[154.79200745 -7.05534744]
[140.33329773 -11.04856777]
[127.85026550 -19.36564445]
[118.59440613 -31.17534637]
[110.08063507 -43.52507401]
[111.63139343 -28.60544968]
[113.18215179 -13.68582726]
[114.73291016 1.23379529]
[116.28366852 16.15341759]
[117.83443451 31.07304192]
[119.38519287 45.99266434]
[120.93595123 60.91228485]
[132.77026367 70.12905884]
[147.61534119 67.97880554]
[162.46043396 65.82855225]
[177.30551147 63.67829895]
[192.15058899 61.52804565]
[206.99566650 59.37779236]
[221.84074402 57.22753906]
[232.62710571 41.61819458]
[251.08618164 38.93457413]
[265.37115479 50.42481613]
[280.16281128 47.93349838]
[285.78851318 32.36683655]
[298.43142700 21.83011818]
[314.57165527 19.13328743]
[329.77749634 24.92056656]
[339.92242432 37.51981354]
[354.68441772 34.85844803]
[369.44644165 32.19707870]
[384.20846558 29.53571129]
[398.97048950 26.87434387]
[413.48553467 18.11368370]
[425.92199707 29.63630295]
[418.29244995 44.77651978]
[401.63183594 41.63636017]
[386.86984253 44.29772949]
[372.10781860 46.95909500]
[357.34579468 49.62046432]
[342.58377075 52.28182983]
[338.82812500 65.39188385]
[329.75259399 75.65931702]
[317.08117676 81.04785156]
[303.25817871 80.45622253]
[290.97671509 73.94278717]
[282.65411377 62.72516251]
[267.86245728 65.21647644]
[263.44110107 75.68717957]
[254.43116760 82.81031799]
[242.98689270 84.73606110]
[231.91600037 80.87517548]
[223.99099731 72.07261658]
[209.14591980 74.22286987]
[194.30084229 76.37312317]
[179.45576477 78.52337646]
[164.61068726 80.67363739]
[149.76559448 82.82389069]
[134.92051697 84.97414398]
[143.05158997 107.41368103]
[136.19931030 133.54808044]
[113.42742157 153.36021423]
[122.43856049 165.35185242]
[131.44969177 177.34349060]
[140.46083069 189.33512878]
[149.47195435 201.32678223]
[158.48309326 213.31842041]
[167.49423218 225.31005859]
[176.50535583 237.30169678]
[191.90307617 239.65718079]
[200.87081909 251.94677734]
[198.53033447 266.61163330]
[207.54147339 278.60327148]
[215.16905212 283.55996704]
[216.58636475 290.78515625]
[225.45890808 302.87969971]
[234.33145142 314.97421265]
[243.20399475 327.06875610]
[258.46224976 325.31329346]
[272.54760742 331.43685913]
[281.67120361 343.79223633]
[283.37884521 359.05590820]
[277.21115112 373.12200928]
[264.82723999 382.20684814]
[249.55830383 383.86663818]
[235.51159668 377.65487671]
[226.46562195 365.24255371]
[224.85371399 349.96847534]
[231.10945129 335.94131470]
[222.23690796 323.84677124]
[213.36436462 311.75222778]
[204.49182129 299.65768433]
[195.54983521 287.61441040]
[186.53869629 275.62274170]
[171.80168152 273.79080200]
[162.49229431 261.75793457]
[164.51371765 246.31283569]
[155.50259399 234.32119751]
[146.49145508 222.32954407]
[137.48031616 210.33790588]
[128.46919250 198.34626770]
[119.45805359 186.35462952]
[110.44691467 174.36299133]
[101.43578339 162.37133789]
[86.79290009 165.62495422]
[83.70800018 180.30430603]
[80.62310791 194.98365784]
[91.94448853 205.26828003]
[96.56743622 219.74327087]
[93.34577179 234.49072266]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 17]
[2 16]
[3 15]
[4 14]
[5 13]
[6 12]
[7 11]
[22 269]
[23 268]
[24 267]
[25 55]
[26 54]
[27 53]
[28 52]
[64 85]
[65 84]
[66 83]
[67 81]
[69 78]
[70 77]
[89 175]
[90 174]
[91 173]
[92 172]
[93 171]
[94 170]
[95 169]
[96 168]
[97 108]
[98 107]
[99 106]
[100 105]
[117 129]
[118 128]
[119 127]
[120 126]
[121 125]
[130 154]
[131 153]
[132 152]
[133 151]
[137 147]
[138 146]
[139 145]
[176 221]
[177 220]
[178 219]
[179 218]
[180 217]
[181 216]
[182 215]
[185 210]
[186 209]
[191 203]
[192 202]
[193 201]
[194 200]
[195 199]
[224 266]
[225 265]
[226 264]
[227 263]
[228 262]
[229 261]
[230 260]
[231 259]
[234 256]
[235 255]
[237 254]
[238 253]
[239 252]
[240 251]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
