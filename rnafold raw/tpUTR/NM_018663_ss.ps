%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 18:32:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGACCGCUGGGAGAACAUCAGGUGCACUGUGGACGUGGGUCUGGGGGUCUCACCCGCCCAGCGAGAGCAGAACCAAUCCAGUCAGGAUGUCACUGACUCUAAAUCAGGUGAUUCAAGAUGCCCAAAAAUGAUGGAUAGAGAAACAGAAAUCUCUGAAUGUCAGAACCCUGUCUUUUAAAAAGGCAGUCGCUGCCUUCAGGUGGUGCUGCCCCAGAAACUUAAAAUUUAGUCGAGGCAGUUUCAAUUGUUACUGUG\
GACCGAAUUAGGAUCACAAUAAACGAUAAUGCAGGUUCUUCAAUGGUGA\
) } def
/len { sequence length } bind def

/coor [
[86.56691742 361.20187378]
[83.20803070 345.51437378]
[93.48979950 333.19915771]
[93.48979950 318.19915771]
[93.48979950 303.19915771]
[93.48979950 288.19915771]
[83.21253967 280.47531128]
[79.18550110 268.06176758]
[83.08572388 255.40437317]
[93.70817566 247.17214966]
[93.86267090 232.17294312]
[94.01717377 217.17373657]
[94.17167664 202.17453003]
[94.32617950 187.17533875]
[94.48068237 172.17613220]
[94.63518524 157.17692566]
[90.34679413 154.03254700]
[86.54100800 150.58833313]
[83.23655701 146.90240479]
[76.11881256 160.10610962]
[69.00106812 173.30981445]
[72.20777893 189.02911377]
[61.80716324 201.24414062]
[45.77767563 200.58454895]
[36.41576767 187.55633545]
[40.90309525 172.15362549]
[55.79736710 166.19206238]
[62.91511154 152.98835754]
[70.03285980 139.78466797]
[52.03588867 113.42733002]
[53.73227310 81.55693817]
[40.79370117 73.96791077]
[27.85512733 66.37888336]
[14.91655350 58.78985596]
[1.97797990 51.20083237]
[-6.95810032 49.57279587]
[-11.05420399 43.46641541]
[-23.91392326 35.74452591]
[-36.77364349 28.02263260]
[-49.63336182 20.30074120]
[-74.99026489 29.41629791]
[-98.67319489 6.63388348]
[-113.52840424 4.55478764]
[-128.38362122 2.47569132]
[-143.23883057 0.39659527]
[-157.97824097 6.14641953]
[-169.51022339 -3.28027844]
[-184.36543274 -5.35937452]
[-199.22064209 -7.43847084]
[-214.07586670 -9.51756668]
[-224.13398743 3.63574243]
[-239.37120056 9.87243938]
[-255.57893372 7.57260466]
[-268.33221436 -2.53989816]
[-274.19769287 -17.62139511]
[-289.07354736 -19.54737091]
[-303.94937134 -21.47334480]
[-318.82522583 -23.39932060]
[-327.61700439 -9.68056488]
[-341.46810913 -1.21000326]
[-357.56985474 0.35443085]
[-372.68316650 -5.25080776]
[-383.79013062 -16.85211754]
[-388.69656372 -32.08406830]
[-403.59146118 -33.85671997]
[-418.48635864 -35.62936783]
[-433.38125610 -37.40201950]
[-448.28506470 -39.09793472]
[-463.19741821 -40.71707153]
[-478.10977173 -42.33620834]
[-485.75494385 -30.65496445]
[-497.62487793 -23.43243599]
[-511.38156128 -22.02469254]
[-524.34387207 -26.64897346]
[-534.01000977 -36.35243225]
[-538.54040527 -49.20785141]
[-553.43530273 -50.98049927]
[-568.33013916 -52.75315094]
[-583.22503662 -54.52579880]
[-596.66906738 -45.77145386]
[-611.84967041 -50.96069336]
[-617.12164307 -66.11278534]
[-608.44079590 -79.60433197]
[-592.46624756 -81.08578491]
[-581.45239258 -69.42069244]
[-566.55749512 -67.64804077]
[-551.66259766 -65.87538910]
[-536.76776123 -64.10273743]
[-527.39013672 -77.29048157]
[-512.55010986 -83.97486877]
[-496.27230835 -82.23880768]
[-483.02441406 -72.46320343]
[-476.49063110 -57.24856567]
[-461.57827759 -55.62942886]
[-446.66592407 -54.01029205]
[-439.71215820 -56.40009308]
[-431.60858154 -52.29690933]
[-416.71371460 -50.52425766]
[-401.81881714 -48.75160599]
[-386.92391968 -46.97895813]
[-380.07073975 -59.01133728]
[-369.12023926 -67.55715179]
[-355.69992065 -71.30454254]
[-341.82034302 -69.65795135]
[-329.57379150 -62.83243942]
[-320.81906128 -51.82630539]
[-316.89926147 -38.27516174]
[-302.02340698 -36.34918594]
[-287.14758301 -34.42321014]
[-272.27172852 -32.49723434]
[-264.73339844 -43.85327148]
[-252.98670959 -50.89646530]
[-239.28691101 -52.20832825]
[-226.29289246 -47.47715759]
[-216.55116272 -37.56966019]
[-211.99676514 -24.37277985]
[-197.14155579 -22.29368401]
[-182.28634644 -20.21458817]
[-167.43112183 -18.13549232]
[-153.75425720 -24.03402710]
[-141.15974426 -14.45861816]
[-126.30452728 -12.37952137]
[-111.44931030 -10.30042553]
[-96.59410095 -8.22132969]
[-91.30447388 -13.53826904]
[-101.93817139 -24.11769867]
[-91.35856628 -34.75122833]
[-80.72521973 -24.17214775]
[-75.43559265 -29.48908806]
[-77.59116364 -44.33339691]
[-79.74674225 -59.17770386]
[-81.90231323 -74.02201080]
[-84.05789185 -88.86632538]
[-96.43924713 -98.31829071]
[-98.41384888 -113.40323639]
[-89.32653809 -125.14871979]
[-91.48210907 -139.99302673]
[-93.63768768 -154.83734131]
[-95.79325867 -169.68164062]
[-97.94883728 -184.52595520]
[-100.10440826 -199.37026978]
[-113.90054321 -206.47282410]
[-120.85697937 -220.34321594]
[-118.29884338 -235.64796448]
[-107.20977783 -246.50210571]
[-91.85375977 -248.73199463]
[-78.13549042 -241.48017883]
[-71.32992554 -227.53514099]
[-74.05394745 -212.25904846]
[-85.26010132 -201.52583313]
[-83.10453033 -186.68153381]
[-80.94895172 -171.83721924]
[-78.79338074 -156.99291992]
[-76.63780212 -142.14860535]
[-74.48223114 -127.30429840]
[-62.42951584 -118.62860107]
[-60.03199387 -103.60507202]
[-69.21357727 -91.02189636]
[-67.05800629 -76.17758942]
[-64.90242767 -61.33327866]
[-62.74685669 -46.48897171]
[-60.59128189 -31.64466286]
[-45.38885117 -21.41835022]
[-39.14474487 -6.43820810]
[-41.91146851 7.44102192]
[-29.05175018 15.16291428]
[-16.19203186 22.88480568]
[-3.33231187 30.60669708]
[9.56700611 38.26225662]
[22.50557899 45.85128403]
[35.44415283 53.44031143]
[48.38272858 61.02933502]
[61.32130051 68.61836243]
[67.62392426 62.14978790]
[74.99100494 56.92565536]
[83.18033600 53.11772156]
[91.92266846 50.85118866]
[100.93056488 50.20057297]
[109.90786743 51.18726349]
[118.55941772 53.77882385]
[126.60076904 57.89004517]
[133.76753235 63.38576126]
[145.48123169 54.01617050]
[157.19493103 44.64657593]
[168.90863037 35.27698135]
[180.62232971 25.90738869]
[185.33798218 18.14422417]
[192.50527954 16.50235939]
[204.31486511 7.25391579]
[216.12445068 -1.99452841]
[227.93403625 -11.24297237]
[239.74362183 -20.49141693]
[251.55319214 -29.73986053]
[263.36279297 -38.98830414]
[268.98336792 -54.39418793]
[285.18011475 -56.96268082]
[295.29122925 -44.05154037]
[288.91522217 -28.94263840]
[272.61123657 -27.17872047]
[260.80163574 -17.93027687]
[248.99206543 -8.68183231]
[237.18247986 0.56661195]
[225.37289429 9.81505585]
[213.56330872 19.06349945]
[201.75372314 28.31194305]
[189.99192810 37.62108612]
[178.27822876 46.99068069]
[166.56452942 56.36027145]
[154.85083008 65.72986603]
[143.13713074 75.09945679]
[145.18441772 79.04247284]
[146.87219238 83.15223694]
[148.18702698 87.39604950]
[149.11846924 91.74014282]
[164.11668396 91.50839233]
[179.11488342 91.27664948]
[194.11309814 91.04489899]
[209.11131287 90.81314850]
[224.10951233 90.58140564]
[228.78408813 76.17906952]
[237.88380432 64.07643127]
[250.42158508 55.58627701]
[265.03744507 51.62956619]
[280.14593506 52.63548660]
[294.10824585 58.49493027]
[305.40979004 68.57230377]
[312.82470703 81.77448273]
[315.54867554 96.66941071]
[313.28619385 111.64138031]
[306.28271484 125.06635284]
[295.29791260 135.48808289]
[281.52331543 141.77610779]
[266.45309448 143.24835205]
[251.72196960 139.74510193]
[238.92787170 131.64636230]
[229.45857239 119.83064270]
[224.34126282 105.57961273]
[209.34304810 105.81136322]
[194.34484863 106.04310608]
[179.34663391 106.27485657]
[164.34841919 106.50660706]
[149.35021973 106.73834991]
[149.81289673 119.83871460]
[146.66203308 133.47590637]
[158.08065796 143.20294189]
[169.49928284 152.92996216]
[180.91790771 162.65699768]
[192.33651733 172.38401794]
[203.75514221 182.11103821]
[221.18951416 180.40870667]
[234.18829346 191.64006042]
[235.00096130 208.46075439]
[246.51916504 218.06965637]
[258.03738403 227.67855835]
[269.55557251 237.28744507]
[281.07379150 246.89634705]
[296.62713623 249.79531860]
[301.44369507 263.88964844]
[312.96188354 273.49853516]
[328.67749023 271.82662964]
[340.91967773 281.82186890]
[342.42532349 297.55429077]
[332.30120850 309.69009399]
[316.55377197 311.02932739]
[304.52566528 300.77746582]
[303.35299683 285.01675415]
[291.83477783 275.40786743]
[277.10531616 273.19616699]
[271.46487427 258.41455078]
[259.94668579 248.80564880]
[248.42846680 239.19676208]
[236.91026306 229.58786011]
[225.39205933 219.97895813]
[212.87753296 222.92283630]
[200.76573181 218.06309509]
[193.54481506 206.95994568]
[194.02812195 193.52966309]
[182.60949707 183.80264282]
[171.19087219 174.07560730]
[159.77224731 164.34858704]
[148.35362244 154.62156677]
[136.93499756 144.89453125]
[130.10984802 148.00375366]
[136.32829285 161.65406799]
[146.46043396 172.71479797]
[139.07188416 185.76889038]
[124.37355042 182.77572632]
[122.67798615 167.87251282]
[116.45954132 154.22219849]
[109.63438416 157.33142090]
[109.47988892 172.33062744]
[109.32538605 187.32983398]
[109.17088318 202.32904053]
[109.01638031 217.32824707]
[108.86187744 232.32745361]
[108.70737457 247.32664490]
[121.18290710 259.62365723]
[120.88549805 276.79989624]
[108.48979950 288.19915771]
[108.48979950 303.19915771]
[108.48979950 318.19915771]
[108.48979950 333.19915771]
[118.77156830 345.51437378]
[115.41268921 361.20187378]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 302]
[4 301]
[5 300]
[6 299]
[10 296]
[11 295]
[12 294]
[13 293]
[14 292]
[15 291]
[16 290]
[19 29]
[20 28]
[21 27]
[31 173]
[32 172]
[33 171]
[34 170]
[35 169]
[37 168]
[38 167]
[39 166]
[40 165]
[42 124]
[43 123]
[44 122]
[45 121]
[47 119]
[48 118]
[49 117]
[50 116]
[55 110]
[56 109]
[57 108]
[58 107]
[64 100]
[65 99]
[66 98]
[67 97]
[68 95]
[69 94]
[70 93]
[76 88]
[77 87]
[78 86]
[79 85]
[129 162]
[130 161]
[131 160]
[132 159]
[133 158]
[136 155]
[137 154]
[138 153]
[139 152]
[140 151]
[141 150]
[182 210]
[183 209]
[184 208]
[185 207]
[186 206]
[188 205]
[189 204]
[190 203]
[191 202]
[192 201]
[193 200]
[194 199]
[214 242]
[215 241]
[216 240]
[217 239]
[218 238]
[219 237]
[244 282]
[245 281]
[246 280]
[247 279]
[248 278]
[249 277]
[252 273]
[253 272]
[254 271]
[255 270]
[256 269]
[258 267]
[259 266]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
