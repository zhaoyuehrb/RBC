%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 17:09:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCCCGGGUGGCAUCCCUGUGACCCCUCCCCAGUGCCUCUCCUGGCCCUGGAAGUUGCCACUCCAGUGCCCACCAGCCUUGUCCUAAUAAAAUUAAGUUGCAUCAUUUUGUCUGA\
) } def
/len { sequence length } bind def

/coor [
[246.64407349 247.64762878]
[239.56318665 231.78292847]
[241.42283630 214.42091370]
[229.07807922 205.89994812]
[219.07394409 208.65946960]
[209.01486206 205.31991577]
[202.37576294 196.77595520]
[201.59295654 185.76232910]
[189.72337341 176.59101868]
[177.85379028 167.41970825]
[165.98419189 158.24838257]
[154.11460876 149.07707214]
[142.12297058 140.06594849]
[130.01142883 131.21661377]
[117.89990234 122.36727905]
[104.35308838 128.31523132]
[89.64524841 126.71105957]
[77.69917297 117.98262787]
[71.70108795 104.45794678]
[73.25077057 89.74425507]
[61.13923264 80.89492798]
[49.02769470 72.04559326]
[33.32027817 70.15148163]
[27.60848808 56.39558411]
[12.19190311 58.62418747]
[0.03514392 49.47717285]
[-1.99448287 34.76608276]
[-14.10601997 25.91675186]
[-27.03400040 27.11580086]
[-36.96173859 19.38803673]
[-38.84623337 7.35642576]
[-50.71582031 -1.81488645]
[-62.58540344 -10.98619843]
[-74.45498657 -20.15751076]
[-90.10588837 -22.47265434]
[-95.44630432 -36.37694168]
[-107.31588745 -45.54825592]
[-119.18547058 -54.71956635]
[-134.82754517 -52.46095276]
[-147.43502808 -61.99126053]
[-149.52813721 -77.65633392]
[-139.86506653 -90.16235352]
[-124.17874146 -92.08972931]
[-111.77558136 -82.29497528]
[-110.01416016 -66.58914948]
[-98.14457703 -57.41783905]
[-86.27499390 -48.24652481]
[-71.47308350 -46.58737564]
[-65.28367615 -32.02709579]
[-53.41409302 -22.85578346]
[-41.54450607 -13.68447113]
[-29.67492294 -4.51315880]
[-12.23352909 -3.17039299]
[-5.25668812 13.80521488]
[6.85484886 22.65454674]
[21.48695374 20.11739922]
[33.89583588 28.91934776]
[36.45781708 44.28404617]
[51.29893494 45.54519653]
[57.87702560 59.93405533]
[69.98856354 68.78338623]
[82.10009766 77.63272095]
[95.64691162 71.68476868]
[110.35475159 73.28894043]
[122.30082703 82.01737213]
[128.29890442 95.54205322]
[126.74922943 110.25574493]
[138.86076355 119.10507202]
[150.97230530 127.95440674]
[159.87252808 130.54096985]
[163.28591919 137.20748901]
[175.15551758 146.37879944]
[187.02510071 155.55010986]
[198.89468384 164.72143555]
[210.76426697 173.89274597]
[230.76725769 175.54873657]
[237.59904480 193.55519104]
[249.94380188 202.07615662]
[261.16390991 195.39604187]
[274.03735352 193.50839233]
[286.61166382 196.66320801]
[296.99362183 204.34851074]
[303.63421631 215.37295532]
[305.55972290 228.05049133]
[302.51437378 240.45809937]
[317.98522949 238.64421082]
[329.89202881 248.11430359]
[331.52597046 262.87457275]
[343.39553833 272.04589844]
[355.26513672 281.21722412]
[367.13470459 290.38851929]
[379.00430298 299.55984497]
[390.87387085 308.73114014]
[402.74346924 317.90246582]
[416.63137817 311.46939087]
[431.91754150 312.23883057]
[445.08929443 320.03393555]
[453.11984253 333.06347656]
[454.16384888 348.33334351]
[447.98141479 362.33462524]
[435.99319458 371.84994507]
[420.95401001 374.69274902]
[406.31976318 370.20977783]
[395.45327759 359.43118286]
[390.85159302 344.83383179]
[393.57214355 329.77203369]
[381.70257568 320.60073853]
[369.83297729 311.42941284]
[357.96340942 302.25811768]
[346.09381104 293.08679199]
[334.22424316 283.91549683]
[322.35464478 274.74417114]
[307.65969849 276.88757324]
[295.49160767 267.75564575]
[293.34304810 252.32768250]
[277.78109741 259.43658447]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 78]
[4 77]
[8 75]
[9 74]
[10 73]
[11 72]
[12 71]
[13 69]
[14 68]
[15 67]
[20 62]
[21 61]
[22 60]
[24 58]
[27 55]
[28 54]
[31 52]
[32 51]
[33 50]
[34 49]
[36 47]
[37 46]
[38 45]
[85 115]
[88 112]
[89 111]
[90 110]
[91 109]
[92 108]
[93 107]
[94 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
