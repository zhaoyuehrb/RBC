%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 18:59:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAACCAAUACCAAACGAGCGCGCGAACCUUGAAAUGUCACGGGCUUCUACGGACAGGAGCCCGCCUGAGCGCAAAGCUUUCUGGGAGUUGUAGUUCUUAUCCCGCGUGGAAUGUUGGGAGAUUGAGUUUUCGGGAAGUAGCGGAUGGGACGGUGGGAGCAUGGGCUUAGGAUGUGAAUGCCAGGGAGCAAUAAAGGUAUCCGUGGUAUCGGCA\
) } def
/len { sequence length } bind def

/coor [
[244.32353210 433.73507690]
[236.59712219 433.94458008]
[228.94601440 432.80316162]
[221.60479736 430.34356689]
[214.79895020 426.63894653]
[208.73789978 421.80065918]
[203.60864258 415.97512817]
[199.56990051 409.33914185]
[196.74728394 402.09472656]
[195.22929382 394.46282959]
[195.06466675 386.67663574]
[196.26069641 378.97448730]
[198.78302002 371.59255981]
[202.55654907 364.75756836]
[207.46777344 358.67984009]
[213.36808777 353.54690552]
[206.77493286 340.07360840]
[200.18177795 326.60028076]
[193.58862305 313.12695312]
[181.04461670 305.09594727]
[181.92864990 289.29943848]
[175.33549500 275.82614136]
[162.79150391 267.79510498]
[163.67552185 251.99861145]
[149.54667664 247.42576599]
[142.66833496 233.85581970]
[147.56056213 219.06718445]
[140.96740723 205.59385681]
[134.37425232 192.12054443]
[124.13011932 191.53045654]
[114.98319244 186.70469666]
[108.61436462 178.45429993]
[106.22525787 168.22627258]
[108.31196594 157.84991455]
[114.56385040 149.20971680]
[108.57027435 135.45919800]
[102.57669830 121.70866394]
[96.58312225 107.95812988]
[90.71235657 112.35830688]
[82.79685211 114.12310028]
[67.82270050 115.00341797]
[52.84855652 115.88372803]
[37.87441254 116.76404572]
[22.90026474 117.64435577]
[7.92611885 118.52467346]
[-7.04802704 119.40499115]
[-22.02217293 120.28530121]
[-36.99631882 121.16561890]
[-47.30788422 133.14256287]
[-63.07424545 134.23683167]
[-74.94149780 123.79920959]
[-75.86901093 108.02216339]
[-65.30651093 96.26592255]
[-49.52054214 95.50526428]
[-37.87663269 106.19146729]
[-22.90248680 105.31115723]
[-7.92834139 104.43083954]
[7.04580450 103.55052948]
[22.01995087 102.67021179]
[36.99409485 101.78990173]
[51.96824265 100.90958405]
[66.94239044 100.02927399]
[81.91653442 99.14895630]
[91.96440125 88.01161194]
[91.30399323 73.02615356]
[79.27402496 66.30046082]
[72.19390106 54.60194397]
[71.82117462 41.04111862]
[78.14629364 29.16244316]
[89.42299652 22.01790619]
[88.98265076 7.02437019]
[88.54230499 -7.96916485]
[80.21265411 -14.95938110]
[77.16664124 -25.16925049]
[80.17825317 -35.16023636]
[88.02239227 -41.70436478]
[88.02239227 -56.70436478]
[88.02239227 -71.70436096]
[88.02239227 -86.70436096]
[88.02239227 -101.70436096]
[88.02239227 -116.70436096]
[88.02239227 -131.70436096]
[88.02239227 -146.70436096]
[88.02239227 -161.70436096]
[88.02239227 -176.70436096]
[88.02239227 -191.70436096]
[88.02239227 -206.70436096]
[88.02239227 -221.70436096]
[88.02239227 -236.70436096]
[84.89355469 -245.28373718]
[88.13410950 -251.92416382]
[88.35430145 -266.92254639]
[88.57450104 -281.92092896]
[88.79470062 -296.91931152]
[89.01489258 -311.91769409]
[86.76862335 -315.62762451]
[85.90515137 -319.47265625]
[86.29736328 -323.00195312]
[87.68486786 -325.85208130]
[89.71407318 -327.78298950]
[90.81410980 -342.74258423]
[91.91414642 -357.70220947]
[93.01418304 -372.66180420]
[94.11421967 -387.62142944]
[95.10442352 -402.58871460]
[95.98473358 -417.56286621]
[96.86505127 -432.53698730]
[91.75868988 -448.70367432]
[105.87998962 -458.08584595]
[118.80467224 -447.11367798]
[111.83919525 -431.65667725]
[110.95888519 -416.68252563]
[110.07856750 -401.70840454]
[112.82341766 -394.84820557]
[109.07382965 -386.52139282]
[107.97379303 -371.56176758]
[106.87375641 -356.60217285]
[105.77371979 -341.64254761]
[104.67368317 -326.68295288]
[104.01328278 -311.69747925]
[103.79308319 -296.69909668]
[103.57288361 -281.70071411]
[103.35269165 -266.70233154]
[103.13249207 -251.70396423]
[103.02239227 -236.70436096]
[103.02239227 -221.70436096]
[103.02239227 -206.70436096]
[103.02239227 -191.70436096]
[103.02239227 -176.70436096]
[103.02239227 -161.70436096]
[103.02239227 -146.70436096]
[103.02239227 -131.70436096]
[103.02239227 -116.70436096]
[103.02239227 -101.70436096]
[103.02239227 -86.70436096]
[103.02239227 -71.70436096]
[103.02239227 -56.70436478]
[103.02239227 -41.70436478]
[113.88821411 -25.70837402]
[103.53583527 -8.40951157]
[103.97618866 6.58402348]
[104.41653442 21.57755852]
[118.26480103 30.39443398]
[124.18753052 45.88372421]
[119.66515350 62.01088333]
[106.28945160 72.36575317]
[106.94985199 87.35121155]
[110.33365631 101.96455383]
[116.32723236 115.71508789]
[122.32080078 129.46562195]
[128.31437683 143.21614075]
[147.37904358 149.56455994]
[155.49972534 167.60998535]
[147.84757996 185.52738953]
[154.44073486 199.00070190]
[161.03388977 212.47402954]
[175.71310425 217.68540955]
[182.20756531 231.44319153]
[177.14884949 245.40545654]
[190.16442871 254.40019226]
[188.80882263 269.23297119]
[195.40197754 282.70629883]
[208.41755676 291.70101929]
[207.06193542 306.53381348]
[213.65509033 320.00711060]
[220.24824524 333.48043823]
[226.84140015 346.95376587]
[250.01957703 346.52041626]
[270.23361206 357.73480225]
[282.06674194 377.51638794]
[282.38589478 400.49905396]
[271.17098999 420.48684692]
[280.02334595 432.59616089]
[288.87573242 444.70547485]
[304.24105835 447.26361084]
[313.04614258 459.67028809]
[310.51266479 474.30300903]
[319.36502075 486.41235352]
[328.21740723 498.52166748]
[337.06976318 510.63098145]
[345.92214966 522.74029541]
[354.77450562 534.84960938]
[369.16500854 541.42407227]
[370.42990112 556.26489258]
[379.28225708 568.37420654]
[388.13464355 580.48352051]
[397.07565308 592.52752686]
[406.10482788 604.50561523]
[421.72952271 605.14068604]
[433.25558472 615.70874023]
[435.24081421 631.21978760]
[426.74780273 644.35003662]
[411.78671265 648.89971924]
[397.42169189 642.72070312]
[390.43551636 628.73046875]
[394.12677002 613.53479004]
[385.09759521 601.55670166]
[378.56265259 598.10839844]
[376.02532959 589.33587646]
[367.17294312 577.22656250]
[358.32058716 565.11724854]
[344.56326294 559.40893555]
[342.66519165 543.70196533]
[333.81283569 531.59265137]
[324.96044922 519.48333740]
[316.10809326 507.37402344]
[307.25570679 495.26470947]
[298.40335083 483.15539551]
[283.69174194 481.12945557]
[274.54168701 468.97500610]
[276.76641846 453.55786133]
[267.91403198 441.44854736]
[259.06167603 429.33923340]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 167]
[17 166]
[18 165]
[19 164]
[21 162]
[22 161]
[24 159]
[27 156]
[28 155]
[29 154]
[35 151]
[36 150]
[37 149]
[38 148]
[40 63]
[41 62]
[42 61]
[43 60]
[44 59]
[45 58]
[46 57]
[47 56]
[48 55]
[64 147]
[65 146]
[70 142]
[71 141]
[72 140]
[76 138]
[77 137]
[78 136]
[79 135]
[80 134]
[81 133]
[82 132]
[83 131]
[84 130]
[85 129]
[86 128]
[87 127]
[88 126]
[89 125]
[91 124]
[92 123]
[93 122]
[94 121]
[95 120]
[100 119]
[101 118]
[102 117]
[103 116]
[104 115]
[105 113]
[106 112]
[107 111]
[172 213]
[173 212]
[174 211]
[177 208]
[178 207]
[179 206]
[180 205]
[181 204]
[182 203]
[184 201]
[185 200]
[186 199]
[187 197]
[188 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
