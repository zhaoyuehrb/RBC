%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 02:59:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACAGCUGCCAGCCCCAACCGCUGCCAUUUCACACUCACCCUCCACCCUCCCCACCCCCUCGGGGCAGAGUUUGCACAAAGUCCCCCCCAUAAUACAGGGGGAGCCACUUGGGCAGGAGGCAGGGAGGGGUCCAUUCCCCCUGGUGGGGCUGGUGGGGAGCUGUAGUUGCCCCCUACCUCUCCCACCUCUUGCUCUUCAAUAAAAUGAUCUUAAACUGCU\
) } def
/len { sequence length } bind def

/coor [
[67.61322021 206.04611206]
[51.22898102 205.34696960]
[43.88325500 190.68502808]
[53.13269806 177.14324951]
[53.77219391 162.15689087]
[54.41168976 147.17053223]
[39.92741394 143.27107239]
[32.95656586 156.55291748]
[33.39434433 172.36807251]
[20.62864685 180.04180908]
[13.65779877 193.32363892]
[6.68695164 206.60548401]
[-0.28389597 219.88732910]
[5.81881666 234.28492737]
[1.18976200 249.22164917]
[-11.98536205 257.64483643]
[-27.48566437 255.57731628]
[-37.99237442 243.99531555]
[-38.54454803 228.36747742]
[-28.88146591 216.07281494]
[-13.56573677 212.91647339]
[-6.59488869 199.63464355]
[0.37595883 186.35279846]
[7.34680653 173.07095337]
[6.41042519 158.20581055]
[19.67472458 149.58207703]
[26.64557266 136.30023193]
[14.16042423 144.61413574]
[2.53259063 135.13819885]
[-5.18934679 122.27850342]
[-8.08885288 107.56140900]
[-5.82177782 92.73371887]
[1.34279358 79.55537415]
[12.55448055 69.59053040]
[26.48254204 64.02194977]
[41.47382355 63.51057434]
[55.74897385 68.11710358]
[67.61391449 77.29508209]
[82.10774994 81.15885162]
[71.24060059 70.81935883]
[60.37344742 60.47986984]
[49.50629807 50.14038467]
[34.17507935 46.23342896]
[30.28778076 31.85503769]
[14.71248341 32.07383347]
[3.83893585 21.43331528]
[3.72633195 6.58330202]
[-7.14081955 -3.75618601]
[-18.00797081 -14.09567451]
[-33.33919144 -18.00262833]
[-37.22649002 -32.38101959]
[-48.09363937 -42.72050858]
[-58.96079254 -53.05999756]
[-69.82794189 -63.39948654]
[-81.19586182 -73.18572235]
[-93.03641510 -82.39448547]
[-104.87696838 -91.60324097]
[-116.71752167 -100.81200409]
[-128.55807495 -110.02076721]
[-140.39863586 -119.22953033]
[-164.22129822 -120.32332611]
[-172.28726196 -141.99047852]
[-184.86926270 -150.15707397]
[-197.45124817 -158.32368469]
[-210.03324890 -166.49029541]
[-225.30314636 -163.41326904]
[-237.94673157 -171.87460327]
[-240.78610229 -186.45108032]
[-253.36810303 -194.61767578]
[-269.15618896 -195.64100647]
[-275.61932373 -209.06028748]
[-288.20129395 -217.22689819]
[-300.78329468 -225.39349365]
[-317.17944336 -225.70706177]
[-324.86801147 -240.19216919]
[-315.93966675 -253.94776917]
[-299.57910156 -252.82328796]
[-292.61669922 -237.97549438]
[-280.03469849 -229.80888367]
[-267.45269775 -221.64228821]
[-252.56457520 -221.20307922]
[-245.20149231 -207.19967651]
[-232.61950684 -199.03306580]
[-218.14993286 -202.37481689]
[-205.27366638 -194.27195740]
[-201.86663818 -179.07228088]
[-189.28465271 -170.90568542]
[-176.70265198 -162.73907471]
[-164.12066650 -154.57246399]
[-158.42123413 -157.62451172]
[-152.00773621 -158.77941895]
[-145.49960327 -157.89341736]
[-139.53544617 -155.02139282]
[-134.71026611 -150.41465759]
[-131.51626587 -144.49922180]
[-130.29264832 -137.83650208]
[-131.18986511 -131.07008362]
[-119.34931183 -121.86132050]
[-107.50875854 -112.65255737]
[-95.66820526 -103.44379425]
[-83.82765198 -94.23503876]
[-71.98709869 -85.02627563]
[-73.98967743 -99.89199829]
[-66.06991577 -112.63080597]
[-51.85248184 -117.41249084]
[-37.84431839 -112.04859161]
[-30.45660210 -98.99402618]
[-33.07049179 -84.22353363]
[-44.48968506 -74.49716949]
[-59.48845673 -74.26663971]
[-48.62130356 -63.92714691]
[-37.75415421 -53.58766174]
[-26.88700104 -43.24817276]
[-12.33307266 -40.08076859]
[-7.66848326 -24.96282578]
[3.19866848 -14.62333775]
[14.06581974 -4.28384972]
[28.90305710 -4.90992403]
[40.07118607 5.42098093]
[40.62726974 20.98788643]
[55.18119812 24.15528870]
[59.84578705 39.27323151]
[70.71293640 49.61272049]
[81.58008575 59.95220947]
[92.44724274 70.29169464]
[107.40937042 69.22644043]
[116.70205688 57.45164108]
[125.99474335 45.67683792]
[135.28742981 33.90203476]
[144.58012390 22.12723541]
[141.22686768 6.85340977]
[148.52171326 -6.97840643]
[163.02026367 -12.83725262]
[177.87673950 -7.95676184]
[186.07637024 5.35864830]
[183.74752808 20.82184792]
[171.98983765 31.13158607]
[156.35491943 31.41992188]
[147.06222534 43.19472504]
[137.76954651 54.96952438]
[128.47685242 66.74433136]
[119.18416595 78.51912689]
[125.87024689 91.94657898]
[140.86683655 91.62675476]
[155.86341858 91.30693817]
[170.86001587 90.98711395]
[185.85659790 90.66729736]
[200.85319519 90.34747314]
[215.84979248 90.02764893]
[226.74809265 78.89820099]
[241.96131897 78.78749084]
[252.50439453 89.24594879]
[267.50097656 88.92612457]
[282.49755859 88.60630035]
[297.49417114 88.28648376]
[312.49075317 87.96665955]
[327.48733521 87.64684296]
[342.48391724 87.32701874]
[356.11599731 79.29724121]
[369.00534058 86.76141357]
[384.00192261 86.44159698]
[393.65417480 74.13842010]
[408.96713257 70.96858215]
[422.71044922 78.42879486]
[428.39498901 92.99656677]
[423.33670044 107.79344177]
[409.92391968 115.83278656]
[394.48974609 113.31867218]
[384.32174683 101.43818665]
[369.32516479 101.75800323]
[356.76574707 109.76491547]
[342.80374146 102.32360840]
[327.80715942 102.64343262]
[312.81057739 102.96324921]
[297.81399536 103.28307343]
[282.81738281 103.60289764]
[267.82080078 103.92271423]
[252.82421875 104.24253845]
[242.73660278 115.14096832]
[227.53248596 115.67894745]
[216.16960144 105.02423859]
[201.17301941 105.34406281]
[186.17642212 105.66388702]
[171.17984009 105.98370361]
[156.18324280 106.30352783]
[141.18666077 106.62334442]
[126.19006348 106.94316864]
[122.51727295 113.48232269]
[135.83134460 120.39140320]
[149.14541626 127.30048370]
[163.66044617 131.08390808]
[165.11936951 146.01278687]
[151.61145020 152.53475952]
[140.82817078 142.10877991]
[127.99992371 134.33470154]
[115.17167664 126.56063843]
[111.49888611 133.09979248]
[119.02964020 146.07237244]
[126.56039429 159.04495239]
[141.89819336 162.85646057]
[149.97680664 176.43997192]
[146.00334167 191.73660278]
[132.33518982 199.67115784]
[117.08141327 195.53619385]
[109.29180908 181.78491211]
[113.58782196 166.57569885]
[106.05706024 153.60313416]
[98.52630615 140.63055420]
[91.24423981 142.42541504]
[94.83397675 156.98954773]
[98.42371368 171.55368042]
[102.01345062 186.11779785]
[97.84021759 200.52558899]
[87.44931793 189.70753479]
[83.85958862 175.14340210]
[80.26985168 160.57928467]
[76.68011475 146.01515198]
[69.39805603 147.81002808]
[68.75855255 162.79638672]
[68.11905670 177.78274536]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 220]
[5 219]
[6 218]
[7 27]
[8 26]
[10 24]
[11 23]
[12 22]
[13 21]
[39 125]
[40 124]
[41 123]
[42 122]
[44 120]
[47 117]
[48 116]
[49 115]
[51 113]
[52 112]
[53 111]
[54 110]
[55 102]
[56 101]
[57 100]
[58 99]
[59 98]
[60 97]
[62 89]
[63 88]
[64 87]
[65 86]
[68 83]
[69 82]
[71 80]
[72 79]
[73 78]
[126 142]
[127 141]
[128 140]
[129 139]
[130 138]
[143 187]
[144 186]
[145 185]
[146 184]
[147 183]
[148 182]
[149 181]
[152 178]
[153 177]
[154 176]
[155 175]
[156 174]
[157 173]
[158 172]
[160 170]
[161 169]
[197 208]
[198 207]
[199 206]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
