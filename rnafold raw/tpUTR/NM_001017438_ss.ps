%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 12:43:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUACUUGUCCCUGGAGGAUUAUCACACCCCAAAUGCAUAAUCUCGUUAAUGAUUGAGGAGAGAAAAGGAUCAGAUUGCUGUUUUCUACAAUGGAGCAGGAUAUUGCUGAAGUCUCCUGGCAUAUGUUACCGAAUCAAAUAGCCUUCCAGAGGCUAAGAAAUUUCUGUUAGUAAAAGAUGUUCUUUUUCCCA\
) } def
/len { sequence length } bind def

/coor [
[-84.99989319 312.18704224]
[-87.44107819 326.98706055]
[-95.59882355 339.57479858]
[-108.11084747 347.84820557]
[-122.88773346 350.42568970]
[-137.46188354 346.87686157]
[-149.39746094 337.79666138]
[-145.52520752 323.30508423]
[-155.87106323 334.16616821]
[-166.21691895 345.02728271]
[-163.56764221 360.20251465]
[-170.28352356 373.86816406]
[-183.60096741 380.87600708]
[-198.31513977 378.72399902]
[-208.66099548 389.58508301]
[-219.00685120 400.44619751]
[-222.66709900 408.83111572]
[-229.60925293 411.39767456]
[-240.12963867 422.08981323]
[-236.62814331 437.11456299]
[-241.82701111 451.63952637]
[-254.06729126 461.02990723]
[-269.44317627 462.28918457]
[-283.04824829 455.01559448]
[-290.54122925 441.53009033]
[-289.53106689 426.13583374]
[-280.34014893 413.74508667]
[-265.90124512 408.31167603]
[-250.82176208 411.56942749]
[-240.30139160 400.87728882]
[-229.86793518 390.10034180]
[-219.52207947 379.23922729]
[-209.17622375 368.37814331]
[-212.04023743 353.78585815]
[-205.68737793 340.14379883]
[-192.36398315 332.77221680]
[-177.07800293 334.68142700]
[-166.73214722 323.82031250]
[-156.38629150 312.95922852]
[-158.83059692 305.86871338]
[-173.55609131 303.01220703]
[-163.71922302 291.68771362]
[-166.16354370 284.59719849]
[-181.00451660 282.41876221]
[-195.84548950 280.24032593]
[-210.68646240 278.06192017]
[-225.46400452 283.71301270]
[-236.93266296 274.20938110]
[-251.77363586 272.03094482]
[-266.61459351 269.85250854]
[-281.45556641 267.67407227]
[-298.00488281 271.35601807]
[-306.12423706 256.47271729]
[-294.07025146 244.55058289]
[-279.27716064 252.83311462]
[-264.43618774 255.01153564]
[-249.59519958 257.18997192]
[-234.75422668 259.36840820]
[-221.03822327 253.56149292]
[-208.50802612 263.22094727]
[-193.66705322 265.39935303]
[-178.82608032 267.57778931]
[-163.98510742 269.75622559]
[-149.36895752 266.38458252]
[-136.98188782 257.92523193]
[-124.59483337 249.46588135]
[-112.20777130 241.00651550]
[-99.82070923 232.54716492]
[-87.43364716 224.08781433]
[-75.04658508 215.62844849]
[-62.65951920 207.16909790]
[-56.51279068 193.60197449]
[-40.75304794 192.20875549]
[-28.36598587 183.74940491]
[-26.07639694 165.59736633]
[-10.99574566 154.68458557]
[7.58847857 158.30683899]
[19.69511414 149.45080566]
[31.80175018 140.59477234]
[43.90838623 131.73873901]
[56.01502228 122.88269806]
[68.12165833 114.02666473]
[60.29281616 88.03099823]
[74.00491333 59.51047134]
[107.45355988 45.74958420]
[104.55699158 31.03190994]
[101.66042328 16.31423759]
[98.76384735 1.59656489]
[95.86727905 -13.12110806]
[86.87613678 -27.49454308]
[98.19885254 -40.11327362]
[113.45888519 -32.72626495]
[110.58495331 -16.01767731]
[113.48152161 -1.30000412]
[116.37808990 13.41766834]
[119.27465820 28.13534164]
[122.17123413 42.85301208]
[137.10047913 44.30816269]
[142.78457642 30.42684364]
[148.46868896 16.54552460]
[154.15278625 2.66420627]
[159.83688354 -11.21711254]
[157.90606689 -26.92005730]
[169.88919067 -35.76617050]
[175.57328796 -49.64749146]
[181.25740051 -63.52880859]
[176.40916443 -78.82175446]
[185.46215820 -92.06648254]
[201.47171021 -93.10276794]
[212.15664673 -81.13565826]
[209.32041931 -65.34530640]
[195.13871765 -57.84470749]
[189.45462036 -43.96339035]
[183.77050781 -30.08207130]
[186.10789490 -15.37201118]
[173.71820068 -5.53301144]
[168.03410339 8.34830666]
[162.35000610 22.22962570]
[156.66589355 36.11094284]
[150.98179626 49.99226379]
[154.80169678 56.44659042]
[166.44502258 46.98968887]
[178.08834839 37.53279114]
[189.73167419 28.07588959]
[201.37500000 18.61898994]
[213.01832581 9.16209030]
[219.57962036 -4.32677460]
[232.13099670 -12.54035091]
[247.11848450 -13.15292358]
[260.29830933 -5.99103975]
[267.93850708 6.91737795]
[267.87573242 21.91724586]
[260.12777710 34.76128006]
[246.88850403 41.81262589]
[231.90499878 41.07410431]
[218.01229858 46.73033524]
[204.11959839 52.38656235]
[190.22689819 58.04278946]
[176.33419800 63.69902039]
[162.44149780 69.35524750]
[166.26139832 75.80957794]
[181.16513062 77.50628662]
[196.06886292 79.20298767]
[210.97259521 80.89969635]
[225.87632751 82.59640503]
[240.78005981 84.29311371]
[255.68379211 85.98982239]
[272.10519409 81.77391052]
[280.70223999 96.38647461]
[269.04061890 108.69271088]
[253.98707581 100.89354706]
[239.08334351 99.19684601]
[224.17962646 97.50013733]
[209.27589417 95.80342865]
[194.37216187 94.10671997]
[179.46842957 92.41001129]
[164.56469727 90.71330261]
[159.67607117 104.89432526]
[172.45932007 112.74215698]
[185.24256897 120.58998871]
[201.64143372 120.49141693]
[209.69158936 134.77871704]
[201.11174011 148.75434875]
[184.72808838 148.04136658]
[177.39474487 133.37324524]
[164.61149597 125.52541351]
[151.82824707 117.67758179]
[126.66295624 140.05288696]
[97.20556641 141.37763977]
[76.97769165 126.13330078]
[64.87105560 134.98933411]
[52.76442337 143.84536743]
[40.65778732 152.70140076]
[28.55114937 161.55744934]
[16.44451332 170.41348267]
[16.94334412 182.30851746]
[11.68599033 192.85647583]
[2.08511257 199.48284912]
[-9.40305805 200.63322449]
[-19.90662956 196.13647461]
[-32.29369354 204.59582520]
[-39.32642746 218.76802063]
[-54.20016479 219.55616760]
[-66.58722687 228.01551819]
[-78.97428894 236.47486877]
[-91.36135101 244.93423462]
[-103.74841309 253.39358521]
[-116.13547516 261.85293579]
[-128.52253723 270.31228638]
[-140.90960693 278.77163696]
[-125.98329926 277.28652954]
[-111.04146576 278.60620117]
[-97.87510681 285.79281616]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 39]
[9 38]
[10 37]
[14 33]
[15 32]
[16 31]
[18 30]
[19 29]
[43 63]
[44 62]
[45 61]
[46 60]
[48 58]
[49 57]
[50 56]
[51 55]
[64 190]
[65 189]
[66 188]
[67 187]
[68 186]
[69 185]
[70 184]
[71 183]
[73 181]
[74 180]
[77 175]
[78 174]
[79 173]
[80 172]
[81 171]
[82 170]
[85 97]
[86 96]
[87 95]
[88 94]
[89 93]
[98 120]
[99 119]
[100 118]
[101 117]
[102 116]
[104 114]
[105 113]
[106 112]
[141 157]
[142 156]
[143 155]
[144 154]
[145 153]
[146 152]
[147 151]
[158 167]
[159 166]
[160 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
