%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 09:07:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUGGAACAUUGCUACCAUAAUUAAGAGUAGAUUUGUGAAGAUUUCUUCAGAAUCUCAUGCUUUCUGGUAGUAUUGGAGGAGGGGGUUGGUUAAAAUGAAAAUUCACUUUUCAUAGUCAAGUAACUCAGAACUUUUAUGGAAACGCAUUUGCAAAGUUCUAUGGCUGUCACCUUAAUUACUCAAUAAACUUGCUGGUGUUCUGUGGACGUA\
) } def
/len { sequence length } bind def

/coor [
[93.05118561 130.62120056]
[81.62302399 125.46036530]
[73.12560272 116.23915863]
[58.80605698 120.70576477]
[55.34957123 135.60542297]
[44.96784592 146.70121765]
[30.52214813 151.08164978]
[15.92111683 147.66612244]
[5.06326294 137.46942139]
[-9.25628376 141.93603516]
[-20.12646484 153.43167114]
[-34.58034897 149.83520508]
[-48.89989471 154.30181885]
[-63.21944046 158.76841736]
[-77.53898621 163.23503113]
[-91.85853577 167.70164490]
[-106.17808533 172.16824341]
[-120.49762726 176.63485718]
[-134.81716919 181.10145569]
[-137.25935364 191.48426819]
[-143.74087524 199.85330200]
[-153.03968811 204.74003601]
[-163.44731140 205.32235718]
[-173.08274841 201.56210327]
[-180.23231506 194.19996643]
[-194.73541260 198.02879333]
[-209.23851013 201.85763550]
[-220.60655212 212.86119080]
[-234.88720703 208.62892151]
[-249.39030457 212.45774841]
[-263.86477661 216.39343262]
[-278.30984497 220.43574524]
[-292.75488281 224.47807312]
[-307.19995117 228.52038574]
[-321.64501953 232.56271362]
[-336.09005737 236.60502625]
[-343.50952148 241.93054199]
[-350.77801514 240.59877014]
[-365.28112793 244.42759705]
[-379.78424072 248.25643921]
[-394.28732300 252.08526611]
[-408.79043579 255.91410828]
[-420.04153442 267.84494019]
[-435.93496704 263.80383301]
[-440.12094116 247.94792175]
[-428.29327393 236.58842468]
[-412.61926270 241.41099548]
[-398.11618042 237.58216858]
[-383.61306763 233.75332642]
[-369.10995483 229.92449951]
[-354.60684204 226.09565735]
[-340.13238525 222.15997314]
[-325.68731689 218.11766052]
[-311.24227905 214.07533264]
[-296.79721069 210.03302002]
[-282.35214233 205.99069214]
[-267.90710449 201.94837952]
[-262.31372070 197.11940002]
[-253.21914673 197.95465088]
[-238.71603394 194.12580872]
[-228.38536072 183.39611816]
[-213.06735229 187.35453796]
[-198.56425476 183.52569580]
[-184.06114197 179.69686890]
[-175.51826477 162.18734741]
[-156.55923462 156.52059937]
[-139.28378296 166.78192139]
[-124.96423340 162.31530762]
[-110.64469147 157.84869385]
[-96.32514191 153.38209534]
[-82.00559998 148.91548157]
[-67.68605042 144.44888306]
[-53.36650467 139.98226929]
[-39.04695511 135.51565552]
[-29.20100403 124.33950806]
[-13.72289085 127.61648560]
[0.59665537 123.14987946]
[3.73185062 108.58841705]
[13.80171967 97.47743988]
[28.17605019 92.86821747]
[43.02500153 96.09396362]
[54.33944702 106.38622284]
[68.65899658 101.91960907]
[74.70640564 81.39414978]
[92.50000000 69.50912476]
[92.50000000 54.50912476]
[92.50000000 39.50912476]
[92.50000000 24.50912476]
[92.50000000 9.50912476]
[92.50000000 -5.49087572]
[84.76270294 -19.29104805]
[92.50000000 -32.01831818]
[92.50000000 -47.01831818]
[78.68157959 -56.77392960]
[73.45326233 -72.68587494]
[78.68753052 -88.42079163]
[92.13335419 -97.83940887]
[91.91211700 -112.83777618]
[91.69088745 -127.83615112]
[91.46965790 -142.83451843]
[91.24842834 -157.83288574]
[91.02719879 -172.83125305]
[90.80596924 -187.82962036]
[80.34368134 -199.99186707]
[83.47082520 -215.72718811]
[97.78852844 -222.96481323]
[112.31346130 -216.15263367]
[115.90335083 -200.51638794]
[105.80433655 -188.05085754]
[106.02556610 -173.05249023]
[106.24679565 -158.05412292]
[106.46802521 -143.05574036]
[106.68925476 -128.05737305]
[106.91049194 -113.05901337]
[107.13172150 -98.06063843]
[118.71281433 -91.42002869]
[125.55554962 -79.83131409]
[125.78069305 -66.26680756]
[119.22251892 -54.26742172]
[107.50000000 -47.01831818]
[107.50000000 -32.01831818]
[115.23729706 -19.29104805]
[107.50000000 -5.49087572]
[107.50000000 9.50912476]
[107.50000000 24.50912476]
[107.50000000 39.50912476]
[107.50000000 54.50912476]
[107.50000000 69.50912476]
[117.72818756 74.08369446]
[125.69900513 81.95825195]
[130.39750671 92.13010406]
[131.22541809 103.30404663]
[145.33337402 108.39968872]
[160.94128418 105.81056213]
[170.28324890 117.41130066]
[184.39120483 122.50694275]
[198.49916077 127.60257721]
[212.60711670 132.69821167]
[226.71507263 137.79385376]
[240.82304382 142.88949585]
[254.93099976 147.98512268]
[269.03894043 153.08076477]
[283.14691162 158.17640686]
[292.27972412 158.14820862]
[297.42443848 163.45262146]
[311.45568848 168.75578308]
[325.48696899 174.05894470]
[335.16162109 167.15283203]
[346.84899902 165.78765869]
[357.63290405 170.18759155]
[364.87860107 179.15274048]
[366.87643433 190.38369751]
[380.74520874 196.09838867]
[394.61395264 201.81307983]
[408.48269653 207.52777100]
[417.60784912 207.90357971]
[422.51284790 213.43037415]
[436.29580688 219.34899902]
[450.07876587 225.26760864]
[463.38302612 217.50209045]
[478.53173828 219.04153442]
[489.73666382 229.08708191]
[492.84066772 243.63023376]
[506.62362671 249.54884338]
[520.40661621 255.46746826]
[536.14001465 253.80313110]
[544.78167725 265.93450928]
[558.56463623 271.85314941]
[570.82116699 262.59710693]
[586.06555176 260.72531128]
[600.19720459 266.74127197]
[609.41479492 279.02673340]
[611.23876953 294.27691650]
[605.17852783 308.38964844]
[592.86425781 317.56866455]
[577.60845947 319.34484863]
[563.51477051 313.24041748]
[554.37438965 300.89743042]
[552.64605713 285.63610840]
[538.86309814 279.71746826]
[524.11553955 281.80514526]
[514.48797607 269.25042725]
[500.70501709 263.33181763]
[486.92205811 257.41320801]
[474.23904419 265.17715454]
[459.23883057 263.96981812]
[447.69079590 254.04525757]
[444.16015625 239.05056763]
[430.37719727 233.13195801]
[416.59423828 227.21333313]
[402.76800537 221.39653015]
[388.89926147 215.68183899]
[375.03051758 209.96714783]
[361.16174316 204.25245667]
[344.71475220 212.29310608]
[327.31561279 205.64289856]
[320.18380737 188.09020996]
[306.15252686 182.78704834]
[292.12127686 177.48390198]
[278.05126953 172.28436279]
[263.94332886 167.18872070]
[249.83535767 162.09307861]
[235.72740173 156.99745178]
[221.61944580 151.90180969]
[207.51148987 146.80616760]
[193.40353394 141.71054077]
[179.29556274 136.61489868]
[165.18760681 131.51925659]
[150.58879089 134.47285461]
[140.23773193 122.50764465]
[126.12978363 117.41201019]
[117.23278809 126.24832153]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 83]
[4 82]
[9 77]
[10 76]
[12 74]
[13 73]
[14 72]
[15 71]
[16 70]
[17 69]
[18 68]
[19 67]
[25 64]
[26 63]
[27 62]
[29 60]
[30 59]
[31 57]
[32 56]
[33 55]
[34 54]
[35 53]
[36 52]
[38 51]
[39 50]
[40 49]
[41 48]
[42 47]
[85 128]
[86 127]
[87 126]
[88 125]
[89 124]
[90 123]
[92 121]
[93 120]
[97 115]
[98 114]
[99 113]
[100 112]
[101 111]
[102 110]
[103 109]
[132 211]
[133 210]
[135 208]
[136 207]
[137 206]
[138 205]
[139 204]
[140 203]
[141 202]
[142 201]
[143 200]
[145 199]
[146 198]
[147 197]
[152 194]
[153 193]
[154 192]
[155 191]
[157 190]
[158 189]
[159 188]
[163 184]
[164 183]
[165 182]
[167 180]
[168 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
