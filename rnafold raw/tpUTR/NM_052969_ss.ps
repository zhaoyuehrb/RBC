%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 18:28:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAUUGCACAUGAGAUGGCACACAUAUUUAUGCUGUAUCAAGUUCACGAUCAUCUUACGAUAUCAAGCUGAAAAUGUCACCACUACCUGGACAGUUGCACAUGUUUUACUGGGAAUAUUUUUUUCUGUUUUUCUGUAUGCUCUGUGCUAGUAGGGUGGAUUCAGUAAUAAAUAUGUGAAAGCUUUUGUUUCAA\
) } def
/len { sequence length } bind def

/coor [
[91.85221100 563.24603271]
[87.87339783 577.94604492]
[78.25451660 589.75268555]
[64.66210175 596.62042236]
[49.45112991 597.35943604]
[35.25698471 591.84167480]
[24.53888893 581.02301025]
[19.15382004 566.77801514]
[20.03477287 551.57458496]
[27.02911568 538.04687500]
[38.92503738 528.53863525]
[53.66149902 524.69720459]
[56.06766891 509.89141846]
[58.47383881 495.08569336]
[60.88000488 480.27993774]
[63.28617477 465.47418213]
[65.69234467 450.66842651]
[67.74005127 435.80883789]
[69.42809296 420.90414429]
[71.11613464 405.99942017]
[62.10891342 388.89797974]
[74.30272675 372.85671997]
[75.50972748 357.90536499]
[76.71672058 342.95401001]
[77.92372131 328.00265503]
[79.13072205 313.05130005]
[80.33771515 298.09991455]
[81.54471588 283.14855957]
[82.75171661 268.19720459]
[83.95871735 253.24584961]
[85.16571045 238.29449463]
[86.37271118 223.34312439]
[87.45923615 208.38253784]
[88.42520905 193.41366577]
[89.39118195 178.44480896]
[90.35715485 163.47593689]
[83.45553589 150.27682495]
[92.06548309 137.00355530]
[93.03145599 122.03469849]
[93.99742889 107.06583405]
[86.47986603 108.81108093]
[77.94677734 106.54637146]
[63.35420227 103.07407379]
[48.76163101 99.60177612]
[34.16905975 96.12947083]
[25.23684311 102.36566162]
[14.56640911 102.64318085]
[5.69520617 97.11197662]
[1.43129849 87.80792236]
[-13.04183483 83.86730957]
[-27.51496887 79.92670441]
[-36.63103485 80.69147491]
[-42.18854141 75.80426788]
[-56.59631348 71.63101196]
[-71.00408173 67.45774841]
[-86.78854370 71.90554810]
[-98.34222412 60.26748657]
[-93.77970123 44.51580811]
[-77.79449463 40.85448837]
[-66.83081818 53.04997635]
[-52.42304993 57.22323608]
[-38.01527786 61.39649963]
[-23.57435799 65.45356750]
[-9.10122395 69.39418030]
[5.37190914 73.33478546]
[23.64662170 67.04005432]
[37.64136124 81.53690338]
[52.23393250 85.00920105]
[66.82649994 88.48149872]
[81.41907501 91.95380402]
[67.75135040 85.77372742]
[59.91772842 72.98176575]
[60.62528992 57.99845886]
[69.62952423 46.00163651]
[83.81880951 41.13706207]
[98.28972626 45.08580017]
[108.04152679 56.48327637]
[109.70424652 71.39083862]
[102.70305634 84.65708923]
[112.09583282 72.96197510]
[121.48861694 61.26685715]
[130.88139343 49.57174301]
[133.82089233 40.90877914]
[140.52090454 37.76547623]
[150.10087585 26.22319794]
[159.68084717 14.68091869]
[169.26081848 3.13863873]
[167.98794556 -12.38610172]
[177.86781311 -23.95514488]
[192.67613220 -25.07295418]
[195.53607178 -40.63352203]
[209.61827087 -45.48543167]
[219.19822693 -57.02771378]
[228.77819824 -68.56999207]
[238.35816956 -80.11227417]
[237.94581604 -93.01258087]
[246.17373657 -102.43058777]
[258.21493530 -103.67090607]
[267.97961426 -115.05735779]
[277.74429321 -126.44380188]
[280.85452271 -141.95628357]
[295.01306152 -146.58068848]
[304.77774048 -157.96714783]
[298.12692261 -172.80953979]
[298.60964966 -189.00854492]
[306.07861328 -203.32545471]
[318.99490356 -212.91992188]
[334.74465942 -215.91348267]
[350.16799927 -211.75715637]
[359.74798584 -223.29943848]
[362.60791016 -238.86001587]
[376.69012451 -243.71192932]
[386.27008057 -255.25419617]
[395.85006714 -266.79647827]
[405.43002319 -278.33877563]
[415.00997925 -289.88104248]
[414.96362305 -305.92401123]
[427.56726074 -315.85012817]
[443.15249634 -312.04489136]
[449.76367188 -297.42733765]
[442.32922363 -283.21084595]
[426.55227661 -280.30108643]
[416.97229004 -268.75878906]
[407.39233398 -257.21652222]
[397.81237793 -245.67424011]
[388.23239136 -234.13195801]
[386.05767822 -219.39697266]
[371.29025269 -213.71948242]
[361.71029663 -202.17720032]
[368.09970093 -189.85501099]
[369.31137085 -175.98426819]
[365.12933350 -162.65817261]
[356.15402222 -151.90039062]
[343.71630859 -145.35775757]
[329.68038940 -144.04817200]
[316.16418457 -148.20246887]
[306.39950562 -136.81602478]
[303.98770142 -122.11798096]
[289.13073730 -116.67913055]
[279.36605835 -105.29268646]
[269.60137939 -93.90623474]
[267.30972290 -76.51324463]
[249.90045166 -70.53230286]
[240.32048035 -58.99002457]
[230.74050903 -47.44774628]
[221.16055298 -35.90546417]
[218.98582458 -21.17047691]
[204.21841431 -15.49298668]
[205.84764099 -0.73218822]
[196.29661560 11.10979462]
[180.80308533 12.71860600]
[171.22312927 24.26088524]
[161.64315796 35.80316544]
[152.06318665 47.34544373]
[142.57650757 58.96451950]
[133.18373108 70.65963745]
[123.79095459 82.35475159]
[114.39817047 94.04986572]
[108.96629333 108.03180695]
[108.00032043 123.00067139]
[107.03434753 137.96952820]
[113.86687469 152.23933411]
[105.32601929 164.44190979]
[104.36004639 179.41078186]
[103.39407349 194.37963867]
[102.42810059 209.34851074]
[105.00086212 218.12736511]
[101.32407379 224.55012512]
[100.11707306 239.50149536]
[98.91007233 254.45285034]
[97.70307159 269.40420532]
[96.49607849 284.35556030]
[95.28907776 299.30691528]
[94.08207703 314.25830078]
[92.87508392 329.20965576]
[91.66808319 344.16101074]
[90.46108246 359.11236572]
[89.25408173 374.06372070]
[96.77913666 381.94079590]
[98.68017578 392.44418335]
[94.56609344 402.05493164]
[86.02085114 407.68746948]
[84.33280945 422.59216309]
[82.64476013 437.49688721]
[84.74292755 442.30560303]
[84.77453613 446.96987915]
[83.14304352 450.72393799]
[80.49810028 453.07458496]
[78.09192657 467.88034058]
[75.68576050 482.68609619]
[73.27959442 497.49185181]
[70.87342072 512.29760742]
[68.46725464 527.10333252]
[81.22886658 535.41363525]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 193]
[13 192]
[14 191]
[15 190]
[16 189]
[17 188]
[18 184]
[19 183]
[20 182]
[22 178]
[23 177]
[24 176]
[25 175]
[26 174]
[27 173]
[28 172]
[29 171]
[30 170]
[31 169]
[32 168]
[33 166]
[34 165]
[35 164]
[36 163]
[38 161]
[39 160]
[40 159]
[42 70]
[43 69]
[44 68]
[45 67]
[49 65]
[50 64]
[51 63]
[53 62]
[54 61]
[55 60]
[79 158]
[80 157]
[81 156]
[82 155]
[84 154]
[85 153]
[86 152]
[87 151]
[90 148]
[92 146]
[93 145]
[94 144]
[95 143]
[98 141]
[99 140]
[100 139]
[102 137]
[103 136]
[109 129]
[110 128]
[112 126]
[113 125]
[114 124]
[115 123]
[116 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
