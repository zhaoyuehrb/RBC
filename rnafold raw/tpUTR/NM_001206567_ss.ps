%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 14:02:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCUGGAUGUCAUUGACGAUAAUGUUUAUGGAGAUAAGGUCUAAGUGCCUAAAAAAAUGUACAUAUACCUGGUUGAAAUACAACACUAUACAUACACACCACCAUAUAUACUAGCUGUUAAUCCUAUGGAAUGGGGUAUUGGGAGUGCUUUUUUAAUUUUUCAUAGUUUUUUUUUAAUAAAAUGGCAUAUUUUGCAUCUACAACUUCUAUAAUUUGAAAAAAUAAAUAAACAUUAUCUUUUUUGUGAAAGGAA\
) } def
/len { sequence length } bind def

/coor [
[83.48260498 549.72424316]
[75.69568634 535.29174805]
[84.53027344 521.47576904]
[84.71506500 506.47689819]
[84.89985657 491.47802734]
[76.05700684 486.36059570]
[70.07750702 477.97708130]
[68.08753204 467.79156494]
[70.50924683 457.61715698]
[76.97341156 449.29306030]
[86.37397003 444.35229492]
[87.11286926 429.37051392]
[87.85176849 414.38873291]
[88.59066772 399.40692139]
[81.48970795 386.31396484]
[89.89740753 372.91168213]
[90.63630676 357.92990112]
[80.58747864 341.39114380]
[91.84626007 324.64788818]
[92.21582794 309.65246582]
[92.58538818 294.65701294]
[92.95494843 279.66156006]
[93.32450867 264.66610718]
[93.69406891 249.67066956]
[94.06363678 234.67521667]
[94.43319702 219.67977905]
[94.80275726 204.68432617]
[95.17231750 189.68887329]
[95.54187775 174.69343567]
[95.91144562 159.69798279]
[90.09741211 154.96015930]
[82.58389282 167.94271851]
[75.30943298 181.06072998]
[60.38589478 179.54806519]
[55.89163971 165.23718262]
[67.27095032 155.46424866]
[78.46935272 145.48448181]
[72.65531921 140.74665833]
[58.04324341 144.13592529]
[43.43116379 147.52519226]
[28.81908607 150.91445923]
[17.12405777 161.56983948]
[2.97767830 156.90837097]
[-11.63440037 160.29763794]
[-23.32942772 170.95301819]
[-37.47580719 166.29154968]
[-52.08788681 169.68081665]
[-66.69996643 173.07008362]
[-81.31204224 176.45936584]
[-85.71065521 191.17492676]
[-96.88874817 201.70799255]
[-111.83949280 205.22523499]
[-126.54119110 200.78053284]
[-137.03918457 189.56947327]
[-140.50953674 174.60777283]
[-136.01876831 159.92007446]
[-124.77485657 149.45729065]
[-109.80236053 146.03384399]
[-95.12881470 150.57063293]
[-84.70131683 161.84727478]
[-70.08923340 158.45800781]
[-55.47715759 155.06874084]
[-40.86507797 151.67947388]
[-30.21520424 141.26652527]
[-15.02367020 145.68556213]
[-0.41159096 142.29629517]
[10.23828316 131.88334656]
[25.42981720 136.30238342]
[40.04189682 132.91311646]
[54.65397644 129.52384949]
[69.26605225 126.13457489]
[60.50933456 110.59133148]
[59.24487305 92.55715942]
[45.29143524 87.05248260]
[31.33799553 81.54779816]
[17.38455582 76.04311371]
[2.15538001 81.08809662]
[-11.20494747 72.20658875]
[-12.44752884 56.21172714]
[-0.61916071 45.37340164]
[15.20644474 48.00584793]
[22.88923645 62.08967590]
[36.84267807 67.59436035]
[50.79611588 73.09904480]
[64.74955750 78.60372162]
[70.70673370 74.04718018]
[61.10052109 62.52673340]
[51.49430847 51.00628662]
[41.88809967 39.48583603]
[28.65427399 32.42426300]
[27.43456841 17.47393227]
[39.34879303 8.36068535]
[53.45854568 13.45135403]
[56.80960464 28.07262993]
[65.41342926 40.35978699]
[74.01725006 52.64694214]
[82.62107849 64.93409729]
[88.57825470 60.37755585]
[86.91846466 45.46966934]
[85.25867462 30.56178093]
[73.19911194 20.70253372]
[71.72821808 5.56017256]
[81.20182037 -5.87601662]
[79.54203033 -20.78390312]
[77.88224030 -35.69179153]
[73.83258820 -43.84743118]
[76.29499817 -50.79340363]
[74.81899261 -65.72061157]
[73.34298706 -80.64781189]
[71.86698151 -95.57501984]
[62.80929184 -108.54685974]
[69.25667572 -121.97372437]
[67.78067017 -136.90092468]
[66.30466461 -151.82812500]
[55.23053741 -166.55638123]
[63.11899948 -182.24577332]
[61.45920944 -197.15367126]
[59.79941940 -212.06155396]
[58.13962936 -226.96943665]
[45.02248764 -235.48263550]
[40.49581146 -250.45071411]
[46.69696045 -264.80618286]
[60.69794083 -271.77087402]
[75.88791656 -268.05621338]
[85.09465027 -255.41618347]
[83.97100067 -239.81903076]
[73.04751587 -228.62922668]
[74.70730591 -213.72134399]
[76.36709595 -198.81346130]
[78.02688599 -183.90556335]
[87.26509857 -176.12376404]
[88.78437042 -163.73721313]
[81.23187256 -153.30413818]
[82.70787811 -138.37692261]
[84.18387604 -123.44972229]
[93.13599396 -111.54557037]
[86.79418945 -97.05101776]
[88.27018738 -82.12381744]
[89.74619293 -67.19660950]
[91.22219849 -52.26940918]
[92.79012299 -37.35158157]
[94.44991302 -22.44369316]
[96.10970306 -7.53580713]
[107.86666870 1.53664804]
[109.76229858 16.63172150]
[100.16655731 28.90199089]
[101.82634735 43.80987930]
[103.48613739 58.71776581]
[119.86470795 63.85019684]
[132.69029236 75.14313507]
[139.79196167 90.60375214]
[140.00071716 107.54098511]
[133.34162903 123.03390503]
[121.01884460 134.43544006]
[136.01173401 133.97351074]
[151.00462341 133.51159668]
[164.55996704 125.35298157]
[177.51948547 132.69467163]
[192.51235962 132.23274231]
[207.50524902 131.77082825]
[222.49813843 131.30889893]
[237.49102783 130.84696960]
[252.48391724 130.38504028]
[267.47680664 129.92312622]
[275.93023682 126.53884888]
[282.65698242 129.54901123]
[297.65441895 129.27182007]
[312.65185547 128.99464417]
[327.64929199 128.71745300]
[330.52807617 113.94276428]
[336.41369629 100.09493256]
[345.04663086 87.77831268]
[356.04754639 77.52986908]
[368.93392944 69.79578400]
[383.14126587 64.91204834]
[398.04776001 63.08982468]
[413.00152588 64.40634918]
[427.34912109 68.80165863]
[440.46414185 76.08129883]
[451.77450562 85.92494965]
[460.78738403 97.90050507]
[467.11080933 111.48303986]
[470.47058105 126.07781982]
[485.46801758 125.80063629]
[500.46545410 125.52345276]
[508.95996094 122.24358368]
[515.64910889 125.33638763]
[530.64880371 125.24398804]
[542.90045166 114.88655090]
[558.60833740 118.14873505]
[565.72271729 132.52807617]
[558.78607178 146.99395752]
[543.11956787 150.44941711]
[530.74121094 140.24369812]
[515.74151611 140.33610535]
[500.74264526 140.52088928]
[485.74520874 140.79808044]
[470.74777222 141.07525635]
[467.92959595 155.78422546]
[462.11236572 169.59114075]
[453.54815674 181.89155579]
[442.60925293 192.14642334]
[429.77218628 199.90571594]
[415.59680176 204.82818604]
[400.70190430 206.69636536]
[385.73828125 205.42620850]
[371.36016846 201.07078552]
[358.19680786 193.81816101]
[346.82467651 183.98321533]
[337.74252319 171.99400330]
[331.34924316 158.37312317]
[327.92648315 143.71488953]
[312.92904663 143.99208069]
[297.93161011 144.26925659]
[282.93417358 144.54644775]
[267.93872070 144.91600037]
[252.94583130 145.37792969]
[237.95295715 145.83985901]
[222.96006775 146.30178833]
[207.96717834 146.76370239]
[192.97428894 147.22563171]
[177.98139954 147.68756104]
[165.49844360 155.81312561]
[151.46653748 148.50447083]
[136.47366333 148.96640015]
[121.48077393 149.42832947]
[110.90689087 160.06755066]
[110.53733063 175.06298828]
[110.16776276 190.05844116]
[109.79820251 205.05389404]
[109.42864227 220.04933167]
[109.05908203 235.04478455]
[108.68952179 250.04022217]
[108.31995392 265.03567505]
[107.95039368 280.03112793]
[107.58083344 295.02658081]
[107.21127319 310.02200317]
[106.84171295 325.01745605]
[114.75997162 332.42297363]
[117.25938416 342.74716187]
[113.75253296 352.54144287]
[105.61809540 358.66879272]
[104.87919617 373.65060425]
[111.92730713 387.81515503]
[103.57245636 400.14584351]
[102.83355713 415.12762451]
[102.09465790 430.10940552]
[101.35575867 445.09118652]
[115.61243439 459.28491211]
[114.80099487 479.07928467]
[99.89871979 491.66281128]
[99.71392822 506.66168213]
[99.52912903 521.66052246]
[108.02063751 535.69000244]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 253]
[4 252]
[5 251]
[11 248]
[12 247]
[13 246]
[14 245]
[16 243]
[17 242]
[19 238]
[20 237]
[21 236]
[22 235]
[23 234]
[24 233]
[25 232]
[26 231]
[27 230]
[28 229]
[29 228]
[30 227]
[38 71]
[39 70]
[40 69]
[41 68]
[43 66]
[44 65]
[46 63]
[47 62]
[48 61]
[49 60]
[73 85]
[74 84]
[75 83]
[76 82]
[98 148]
[99 147]
[100 146]
[103 143]
[104 142]
[105 141]
[107 140]
[108 139]
[109 138]
[110 137]
[112 135]
[113 134]
[114 133]
[116 130]
[117 129]
[118 128]
[119 127]
[154 226]
[155 225]
[156 224]
[158 222]
[159 221]
[160 220]
[161 219]
[162 218]
[163 217]
[164 216]
[166 215]
[167 214]
[168 213]
[169 212]
[183 198]
[184 197]
[185 196]
[187 195]
[188 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
