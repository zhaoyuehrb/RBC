%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 19:55:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCGGGGCCCUCCCUCCUGCACUGGCCUUGGACGGUAUUGCCUGUCAGUGAAAUAAAUAAAGUCCUGACCCCAGUGCACAGACAUAGAGGCACAGAUUGCAGUCAGACA\
) } def
/len { sequence length } bind def

/coor [
[79.34401703 265.77645874]
[73.01727295 268.91778564]
[66.16190338 270.55502319]
[59.12949753 270.61132812]
[52.27911377 269.09082031]
[44.23454285 281.75119019]
[36.18997574 294.41156006]
[38.26332855 310.32006836]
[27.01507187 321.75930786]
[11.07390881 319.95407104]
[2.66853309 306.28918457]
[8.24682999 291.24719238]
[23.52960777 286.36697388]
[31.57417679 273.70663452]
[39.61874771 261.04626465]
[30.78764534 238.66346741]
[40.61989975 216.45039368]
[63.55608368 207.77580261]
[67.74502563 193.37257385]
[71.93396759 178.96936035]
[76.12290955 164.56613159]
[80.31185150 150.16291809]
[84.09152222 135.64692688]
[87.45890045 121.02977753]
[90.82627106 106.41263580]
[93.98645782 91.74931335]
[96.93882751 77.04273224]
[99.89120483 62.33615112]
[102.84358215 47.62957001]
[105.79595184 32.92299271]
[90.64077759 22.41746521]
[81.49676514 6.46119261]
[80.10218811 -11.82666492]
[86.68521881 -28.89225197]
[99.92790985 -41.43763351]
[117.22980499 -47.05810928]
[118.50189209 -62.00407028]
[119.77398682 -76.95003510]
[121.04607391 -91.89599609]
[122.31816101 -106.84195709]
[123.59024811 -121.78791809]
[113.72852325 -131.08988953]
[111.10982513 -144.19183350]
[116.47901917 -156.21282959]
[127.64745331 -162.80746460]
[129.34197998 -177.71144104]
[131.03651428 -192.61541748]
[132.73104858 -207.51939392]
[134.42558289 -222.42337036]
[132.26564026 -231.45339966]
[136.38478088 -237.72296143]
[138.50039673 -252.57302856]
[126.04951477 -261.47439575]
[119.17182922 -275.14758301]
[119.44778442 -290.45059204]
[126.81397247 -303.86691284]
[139.57768250 -312.31359863]
[154.80592346 -313.84960938]
[168.99934387 -308.12200928]
[178.89640808 -296.44696045]
[182.22283936 -281.50732422]
[178.21424866 -266.73605347]
[167.79179382 -255.52754211]
[153.35044861 -250.45739746]
[151.23483276 -235.60734558]
[149.32955933 -220.72883606]
[147.63502502 -205.82485962]
[145.94050598 -190.92088318]
[144.24597168 -176.01690674]
[142.55143738 -161.11293030]
[153.56584167 -148.49186707]
[152.08572388 -131.46893311]
[138.53620911 -120.51583099]
[137.26412964 -105.56987000]
[135.99203491 -90.62390900]
[134.71994019 -75.67794800]
[133.44786072 -60.73198318]
[132.17576599 -45.78601837]
[143.09745789 -41.08065414]
[152.23863220 -33.44344711]
[158.83290100 -23.50018883]
[162.32331848 -12.07060051]
[162.40931702 -0.10074352]
[159.07263184 11.41527367]
[152.57975769 21.51786613]
[143.46057129 29.36192322]
[132.46527100 34.28750992]
[120.50253296 35.87536621]
[117.55015564 50.58194351]
[114.59778595 65.28852844]
[111.64540863 79.99510193]
[108.69303894 94.70168304]
[110.33354187 102.72430420]
[105.44341278 109.78000641]
[102.07603455 124.39714813]
[98.70866394 139.01429749]
[100.33383942 145.66893005]
[98.52291107 151.25167847]
[94.71507263 154.35185242]
[90.52613068 168.75508118]
[86.33718872 183.15829468]
[82.14824677 197.56152344]
[77.95930481 211.96473694]
[83.72463989 216.28340149]
[88.36327362 221.77424622]
[91.64374542 228.15248108]
[93.40476990 235.08930969]
[93.56321716 242.22889709]
[92.11796570 249.20660400]
[89.14962006 255.66764832]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 15]
[6 14]
[7 13]
[18 103]
[19 102]
[20 101]
[21 100]
[22 99]
[23 96]
[24 95]
[25 94]
[26 92]
[27 91]
[28 90]
[29 89]
[30 88]
[36 78]
[37 77]
[38 76]
[39 75]
[40 74]
[41 73]
[45 70]
[46 69]
[47 68]
[48 67]
[49 66]
[51 65]
[52 64]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
