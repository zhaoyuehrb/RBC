%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 16:52:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACAGAAGAACCUUACUAUGAUAAUCUACUUGGAAUGUGGAUAAAUGUAAAAAGAAGAAAAGUUAGAAGAGCAAUAUGUUUCCUUCUCUGUAACAGUGUCCUAACAGUGAAAAUCAGAGUUAUUUGUUAAUUUUUAAGGAAAUUAUAUACUUAAUAUGUAUUGAUUAAAAGAAACAUUUCAGAAAUAAAAUUUCAACAUUGUUCAUUUUCUCUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[-36.26089859 381.74511719]
[-33.86056137 366.29284668]
[-22.05530739 356.03759766]
[-22.48560333 341.04376221]
[-22.91589928 326.04995728]
[-23.34619522 311.05612183]
[-26.67814064 304.46417236]
[-23.67356682 295.84445190]
[-23.88873672 280.84600830]
[-24.10390663 265.84756470]
[-38.18319321 261.38613892]
[-50.15558624 252.73789978]
[-62.32867050 261.50238037]
[-74.50175476 270.26684570]
[-77.17105865 285.61325073]
[-89.64115143 294.32827759]
[-104.25516510 291.68893433]
[-116.42825317 300.45339966]
[-128.60133362 309.21786499]
[-140.77442932 317.98236084]
[-140.97216797 333.38583374]
[-150.09542847 345.57678223]
[-164.47766113 350.00567627]
[-178.54165649 345.17428589]
[-190.71473694 353.93878174]
[-202.88783264 362.70324707]
[-215.06091309 371.46771240]
[-227.23399353 380.23217773]
[-239.40708923 388.99664307]
[-240.38452148 404.60366821]
[-251.20265198 415.89532471]
[-266.75350952 417.54010010]
[-279.69442749 408.76135254]
[-283.91510010 393.70413208]
[-277.42269897 379.47799683]
[-263.28268433 372.80014038]
[-248.17155457 376.82357788]
[-235.99847412 368.05911255]
[-223.82537842 359.29461670]
[-211.65229797 350.53015137]
[-199.47921753 341.76568604]
[-187.30612183 333.00122070]
[-187.42704773 318.13098145]
[-178.66494751 305.89620972]
[-164.20968628 301.11096191]
[-149.53889465 305.80926514]
[-137.36581421 297.04479980]
[-125.19272614 288.28030396]
[-113.01963806 279.51583862]
[-110.88725281 264.81930542]
[-98.66686249 255.75746155]
[-83.26622772 258.09375000]
[-71.09314728 249.32928467]
[-58.92005920 240.56481934]
[-61.95504379 232.93853760]
[-63.60504150 224.89089966]
[-63.81634140 216.67150879]
[-62.57989502 208.53578186]
[-59.93168259 200.73690796]
[-55.95166397 193.51811218]
[-50.76136780 187.10493469]
[-44.52018356 181.69827271]
[-37.42046738 177.46801758]
[-29.68160248 174.54777527]
[-21.54324341 173.03065491]
[-13.25787735 172.96621704]
[-5.08299303 174.35894775]
[2.72691655 177.16801453]
[9.92828083 181.30842590]
[20.42015648 170.58833313]
[30.91203117 159.86822510]
[41.40390396 149.14813232]
[51.89577866 138.42802429]
[62.38765717 127.70793152]
[72.87953186 116.98783112]
[60.21289825 86.84784698]
[81.13568115 51.74908066]
[129.91844177 46.02725983]
[130.34873962 31.03343201]
[130.77903748 16.03960609]
[131.20933533 1.04577887]
[131.63963318 -13.94804764]
[132.06993103 -28.94187546]
[132.50022888 -43.93570328]
[132.93051147 -58.92952728]
[131.64105225 -73.87400055]
[128.64877319 -88.57251740]
[125.65649414 -103.27102661]
[122.66421509 -117.96954346]
[119.67194366 -132.66806030]
[102.95169830 -139.69435120]
[93.87989044 -155.21708679]
[95.92855835 -172.92083740]
[108.08909607 -185.73324585]
[104.67639923 -200.33987427]
[94.00229645 -212.01779175]
[98.64106750 -226.17163086]
[95.22837067 -240.77825928]
[91.81568146 -255.38488770]
[80.21134186 -266.97244263]
[84.70511627 -282.74386597]
[100.67419434 -286.47488403]
[111.69096375 -274.32733154]
[106.42230988 -258.79757690]
[109.83499908 -244.19094849]
[113.24769592 -229.58432007]
[123.67770386 -218.95115662]
[119.28302765 -203.75256348]
[122.69571686 -189.14593506]
[134.45191956 -186.14508057]
[143.87390137 -178.38650513]
[149.13618469 -167.29396057]
[149.18556213 -154.94445801]
[143.95138550 -143.67930603]
[134.37045288 -135.66032410]
[137.36273193 -120.96181488]
[140.35501099 -106.26330566]
[143.34729004 -91.56478882]
[146.33955383 -76.86627960]
[150.75172424 -91.20269775]
[159.74789429 -103.20555878]
[172.27018738 -111.46341705]
[186.84605408 -115.00517273]
[201.76145935 -113.41435242]
[215.26243591 -106.87802124]
[225.76135254 -96.16481781]
[232.02359009 -82.53454590]
[233.31275940 -67.59004211]
[229.47724915 -53.08870316]
[220.96809387 -40.73579407]
[208.78593445 -31.98394394]
[194.36331177 -27.86231995]
[179.39622498 -28.85560226]
[165.64474487 -34.84698486]
[154.72595215 -45.13191605]
[147.92434692 -58.49923325]
[147.49404907 -43.50540543]
[147.06375122 -28.51157951]
[146.63345337 -13.51775169]
[146.20315552 1.47607493]
[145.77285767 16.46990204]
[145.34257507 31.46372795]
[144.91227722 46.45755386]
[157.08535767 55.22202682]
[171.16844177 50.05804062]
[185.25152588 44.89405441]
[199.33460999 39.73006439]
[213.41769409 34.56607819]
[227.50077820 29.40209007]
[235.52352905 15.50911140]
[251.40843201 13.26200485]
[262.96994019 24.38455772]
[261.33905029 40.34450150]
[247.76684570 48.89873123]
[232.66476440 43.48517227]
[218.58168030 48.64916229]
[204.49859619 53.81314850]
[190.41551208 58.97713470]
[176.33242798 64.14112091]
[162.24934387 69.30511475]
[162.35693359 76.80433655]
[177.35539246 76.58917236]
[192.35385132 76.37400055]
[207.35229492 76.15882874]
[222.35076904 75.94389343]
[222.56547546 90.94235229]
[207.56747437 91.15728760]
[192.56901550 91.37245941]
[177.57055664 91.58762360]
[162.57209778 91.80279541]
[162.67968750 99.30202484]
[176.90510559 104.05989075]
[191.13053894 108.81776428]
[207.08338928 105.01795197]
[218.15240479 117.11789703]
[212.95074463 132.67022705]
[196.82940674 135.67602539]
[186.37266541 123.04319000]
[172.14724731 118.28531647]
[157.92181396 113.52745056]
[154.31243896 120.10182190]
[143.48429871 139.82493591]
[155.13470459 149.27310181]
[166.78512573 158.72126770]
[178.43554688 168.16943359]
[190.08595276 177.61759949]
[206.19657898 182.89814758]
[205.58224487 199.84097290]
[189.13150024 203.94088745]
[180.63778687 189.26800537]
[168.98738098 179.81985474]
[157.33695984 170.37168884]
[145.68653870 160.92352295]
[134.03613281 151.47535706]
[116.23062897 151.79992676]
[101.08088684 146.84355164]
[89.95879364 138.12882996]
[83.59963226 127.47970581]
[73.10775757 138.19979858]
[62.61588287 148.91990662]
[52.12400818 159.63999939]
[41.63212967 170.36010742]
[31.14025688 181.08020020]
[20.64838219 191.80030823]
[29.33727074 213.78660583]
[26.24959755 237.14900208]
[12.23715878 256.00207520]
[-9.10545063 265.63238525]
[-8.89027977 280.63082886]
[-8.67510986 295.62930298]
[-8.35236835 310.62582397]
[-7.92207241 325.61965942]
[-7.49177647 340.61346436]
[-7.06148005 355.60729980]
[5.31247520 365.16864014]
[8.59503746 380.45782471]
[1.23628068 394.25573730]
[-13.28921509 400.04745483]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 214]
[4 213]
[5 212]
[6 211]
[8 210]
[9 209]
[10 208]
[12 54]
[13 53]
[14 52]
[17 49]
[18 48]
[19 47]
[20 46]
[24 42]
[25 41]
[26 40]
[27 39]
[28 38]
[29 37]
[69 204]
[70 203]
[71 202]
[72 201]
[73 200]
[74 199]
[75 198]
[78 143]
[79 142]
[80 141]
[81 140]
[82 139]
[83 138]
[84 137]
[85 136]
[86 119]
[87 118]
[88 117]
[89 116]
[90 115]
[94 109]
[95 108]
[97 106]
[98 105]
[99 104]
[144 160]
[145 159]
[146 158]
[147 157]
[148 156]
[149 155]
[171 180]
[172 179]
[173 178]
[182 194]
[183 193]
[184 192]
[185 191]
[186 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
