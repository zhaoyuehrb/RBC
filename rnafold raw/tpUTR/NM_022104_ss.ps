%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 11:09:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAUCCUGCGGGGAGGAGGAGCCCCAGGGGUGCUAGUCUGGACUGCUGGGACUCGGGCCCCUGGGGCCUCAGAGGGACCCCGGCUGCCACUGACAUAUGAAGAUUAUGGUUCUGCCAGGGCUCCCCUCCCUGCCUGUCCCCAAGUCCUCACCUCAAACUCCCUCCAAGUCCCAUGUAUAUAGGUCCUGAUGCCUUCCCAACCCCGCCCCUCACCCUGUUGCCACCUUGUUUCAUUUGUAAAAGGAAAUACAGAA\
ACCCCCCCAAGAA\
) } def
/len { sequence length } bind def

/coor [
[301.03817749 226.94366455]
[294.97155762 213.22518921]
[292.32604980 198.46032715]
[293.25207520 183.48893738]
[297.69702148 169.16264343]
[305.40795898 156.29637146]
[315.94635010 145.62197876]
[328.71270752 137.74667358]
[342.98654175 133.11729431]
[328.06039429 131.63069153]
[313.13424683 130.14408875]
[298.20809937 128.65748596]
[283.28195190 127.17089081]
[268.35580444 125.68428802]
[253.42964172 124.19768524]
[238.50349426 122.71109009]
[223.57733154 121.22448730]
[216.63453674 123.68005371]
[208.48590088 119.63237000]
[193.57814026 117.97155762]
[178.67036438 116.31074524]
[163.76258850 114.64993286]
[148.85481262 112.98911285]
[133.94703674 111.32830048]
[119.03926849 109.66748810]
[106.22389221 130.00376892]
[74.52391052 130.74942017]
[61.50443268 138.19879150]
[48.48495483 145.64816284]
[35.46547318 153.09753418]
[22.44599342 160.54690552]
[9.42651463 167.99627686]
[1.29097927 181.56549072]
[-13.59838676 181.17047119]
[-21.73392105 194.73968506]
[-36.62328720 194.34465027]
[-49.64276886 201.79402161]
[-62.66224670 209.24339294]
[-75.68172455 216.69276428]
[-88.70120239 224.14215088]
[-96.83673859 237.71136475]
[-111.72610474 237.31632996]
[-117.30911255 252.35659790]
[-132.59341431 257.23199463]
[-145.85421753 248.20256042]
[-146.91894531 232.19487000]
[-134.97085571 221.48867798]
[-119.17547607 224.29685974]
[-111.97118378 211.26046753]
[-96.15058136 211.12266541]
[-83.13109589 203.67329407]
[-70.11161804 196.22392273]
[-57.09214020 188.77455139]
[-44.07266235 181.32518005]
[-36.86836624 168.28878784]
[-21.04776001 168.15098572]
[-13.84346485 155.11459351]
[1.97714174 154.97679138]
[14.99662113 147.52742004]
[28.01609993 140.07804871]
[41.03557968 132.62867737]
[54.05506134 125.17930603]
[67.07453918 117.72993469]
[64.20189667 103.00757599]
[49.33697891 100.99903107]
[34.47206116 98.99049377]
[19.60714340 96.98195648]
[4.73075104 95.06025696]
[-10.15660954 93.22544861]
[-25.04397011 91.39064789]
[-39.92295837 98.28613281]
[-53.17657089 88.62829590]
[-51.17062759 72.35229492]
[-35.96866608 66.20148468]
[-23.20916748 76.50328827]
[-8.32180786 78.33808899]
[6.56555319 80.17288971]
[13.56381702 77.88014221]
[21.61568260 82.11704254]
[36.48059845 84.12557983]
[51.34551620 86.13411713]
[66.21043396 88.14265442]
[72.72996521 74.63356018]
[61.90881348 64.24593353]
[51.08766556 53.85830688]
[31.30067253 49.88923264]
[26.80657196 31.06194115]
[15.74576759 20.92988205]
[4.68496370 10.79782200]
[-6.37584019 0.66576308]
[-14.78591061 -2.80620170]
[-17.50577354 -9.64979267]
[-28.44749451 -19.91033554]
[-39.38921738 -30.17087746]
[-50.39066696 -40.36735153]
[-65.86945343 -38.14447784]
[-79.12839508 -46.43511200]
[-83.90701294 -61.32466507]
[-77.94900513 -75.78274536]
[-64.06755066 -82.98268890]
[-48.81705093 -79.52490997]
[-39.39832687 -67.04205322]
[-40.25860977 -51.42815399]
[-33.22845459 -49.23513794]
[-29.12867546 -41.11259842]
[-18.18695259 -30.85205650]
[-7.24523115 -20.59151459]
[3.75621915 -10.39504051]
[14.81702328 -0.26298147]
[25.87782669 9.86907768]
[36.93862915 20.00113678]
[47.02222824 18.63722038]
[56.39740753 23.12636757]
[61.88374710 32.21206665]
[61.47529221 43.03715897]
[72.29644012 53.42478561]
[83.11759186 63.81240845]
[113.13969421 72.31767273]
[120.70008087 94.75971222]
[135.60784912 96.42052460]
[150.51562500 98.08134460]
[165.42340088 99.74215698]
[180.33117676 101.40296936]
[195.23895264 103.06378174]
[210.14672852 104.72460175]
[225.06393433 106.29833221]
[239.99009705 107.78493500]
[254.91624451 109.27153778]
[269.84240723 110.75813293]
[284.76855469 112.24473572]
[299.69470215 113.73133850]
[314.62084961 115.21793365]
[329.54699707 116.70453644]
[344.47314453 118.19113922]
[359.46063232 117.57817078]
[374.21554565 114.87766266]
[388.97042847 112.17714691]
[403.72534180 109.47663879]
[406.22171021 99.24550629]
[411.94342041 90.44957733]
[420.22412109 84.06697083]
[430.11465454 80.79743195]
[440.49172974 80.98570251]
[450.18566895 84.58532715]
[458.11209106 91.16671753]
[463.39328003 99.96830750]
[478.25820923 97.95976257]
[493.12310791 95.95122528]
[507.98803711 93.94268799]
[512.60900879 80.76027679]
[522.40667725 70.89657593]
[535.43328857 66.23176575]
[549.13366699 67.62043762]
[560.84637451 74.73564911]
[568.32061768 86.14359283]
[583.20794678 84.30879211]
[598.09533691 82.47399139]
[612.98266602 80.63918304]
[616.29589844 67.88663483]
[623.71862793 57.03909302]
[634.35369873 49.36939240]
[646.92864990 45.76858521]
[659.94775391 46.64245605]
[671.87030029 51.86591721]
[681.29241943 60.80038071]
[687.11291504 72.37175751]
[702.03912354 70.88515472]
[716.96527100 69.39855194]
[731.89141846 67.91195679]
[735.84338379 57.21467972]
[743.45489502 48.79148865]
[753.60644531 43.82445908]
[764.82592773 42.99151230]
[775.50207520 46.37410355]
[784.11572266 53.45101547]
[789.45617676 63.17824173]
[804.42529297 62.21540451]
[819.39434814 61.25256729]
[827.72308350 57.58982468]
[834.54364014 60.36693192]
[849.52294922 59.57897949]
[864.50219727 58.79102325]
[879.48150635 58.00306702]
[894.46081543 57.21511459]
[901.22760010 48.75578690]
[911.31854248 45.46598434]
[921.34796143 48.19678497]
[928.08758545 55.82019043]
[943.08117676 55.38229752]
[958.07482910 54.94440842]
[974.77429199 43.61274338]
[991.35314941 53.60300827]
[1006.33239746 52.81505203]
[1012.17572021 38.71476364]
[1023.56402588 28.55257797]
[1038.23608398 24.34620285]
[1053.27880859 26.93081856]
[1065.70532227 35.79324722]
[1073.04858398 49.17384720]
[1073.85034180 64.41589355]
[1067.95153809 78.49305725]
[1056.52331543 88.61032104]
[1041.83483887 92.75888824]
[1026.80236816 90.11505127]
[1014.41076660 81.20375824]
[1007.12036133 67.79434204]
[992.14105225 68.58229828]
[986.04644775 76.73060608]
[976.27355957 80.27129364]
[965.94763184 77.81651306]
[958.51269531 69.93801117]
[943.51910400 70.37590790]
[928.52545166 70.81379700]
[912.81781006 82.12453461]
[895.24877930 72.19440460]
[880.26947021 72.98236084]
[865.29016113 73.77030945]
[850.31091309 74.55826569]
[835.33160400 75.34622192]
[820.35717773 76.22163391]
[805.38812256 77.18447113]
[790.41900635 78.14730835]
[781.31628418 94.50973511]
[764.03582764 102.10248566]
[745.53356934 97.67008209]
[733.37799072 82.83810425]
[718.45184326 84.32470703]
[703.52569580 85.81130981]
[688.59954834 87.29790497]
[683.25622559 103.35723877]
[671.37927246 115.49285889]
[655.33416748 121.21820068]
[638.34729004 119.33039093]
[623.85693359 110.16262054]
[614.81750488 95.52655029]
[599.93011475 97.36135101]
[585.04278564 99.19615173]
[570.15539551 101.03095245]
[564.20251465 116.07075500]
[551.39727783 126.10610199]
[535.18420410 128.31690979]
[519.98590088 122.00432587]
[509.99658203 108.80760193]
[495.13165283 110.81614685]
[480.26675415 112.82468414]
[465.40182495 114.83322144]
[457.25381470 132.65791321]
[439.83847046 141.96012878]
[420.20596313 138.77435303]
[406.42584229 124.23154449]
[391.67095947 126.93205261]
[376.91604614 129.63256836]
[362.16113281 132.33308411]
[376.75985718 135.77937317]
[390.12731934 142.58462524]
[401.50308228 152.36174011]
[410.24008179 164.55455017]
[415.84133911 178.46949768]
[417.98825073 193.31507874]
[416.55865479 208.24679565]
[411.63391113 222.41529846]
[403.49411011 235.01466370]
[392.60229492 245.32817078]
[379.57803345 252.76918030]
[365.16217041 256.91439819]
[350.17474365 257.52807617]
[335.46823120 254.57525635]
[321.87924194 248.22393799]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 134]
[10 133]
[11 132]
[12 131]
[13 130]
[14 129]
[15 128]
[16 127]
[17 126]
[19 125]
[20 124]
[21 123]
[22 122]
[23 121]
[24 120]
[25 119]
[27 63]
[28 62]
[29 61]
[30 60]
[31 59]
[32 58]
[34 56]
[36 54]
[37 53]
[38 52]
[39 51]
[40 50]
[42 48]
[64 82]
[65 81]
[66 80]
[67 79]
[68 77]
[69 76]
[70 75]
[83 117]
[84 116]
[85 115]
[87 111]
[88 110]
[89 109]
[90 108]
[92 107]
[93 106]
[94 105]
[95 103]
[135 253]
[136 252]
[137 251]
[138 250]
[146 246]
[147 245]
[148 244]
[149 243]
[155 238]
[156 237]
[157 236]
[158 235]
[166 229]
[167 228]
[168 227]
[169 226]
[176 222]
[177 221]
[178 220]
[180 219]
[181 218]
[182 217]
[183 216]
[184 215]
[188 213]
[189 212]
[190 211]
[192 207]
[193 206]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
