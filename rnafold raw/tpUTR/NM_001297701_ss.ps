%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 02:37:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGCCAGGGCCGGGACCCCUCGGAUUCCCAGGUUCCUGCCCCUUUGGGGCUGCUGUGACUCCGCGACCUAGGAACCGUGGGCAAAGGGGGCUCCCCUGGGUUAUUUAUUUUCCCAAUAAUUUUGUGUGAGCUACAGAAGACCCCAUACCAAAUAAACAAAAAAAUCUUUCCUUG\
) } def
/len { sequence length } bind def

/coor [
[18.94868469 514.53161621]
[12.36129284 501.05551147]
[8.05083847 486.68817139]
[6.13185692 471.81143188]
[6.65534019 456.82055664]
[9.60737801 442.11392212]
[14.91124916 428.07864380]
[3.52704906 437.84594727]
[-7.85715151 447.61322021]
[-19.24135208 457.38052368]
[-24.67678261 472.23873901]
[-39.37426758 474.65393066]
[-50.75846863 484.42123413]
[-62.14266968 494.18853760]
[-73.52687073 503.95581055]
[-84.91107178 513.72308350]
[-96.29527283 523.49041748]
[-95.75376129 532.96350098]
[-99.59377289 541.48937988]
[-106.83029938 547.19091797]
[-115.74695587 548.87805176]
[-124.30220032 546.29406738]
[-136.19566345 555.43438721]
[-141.95655823 570.78833008]
[-158.17607117 573.20892334]
[-168.16896057 560.20611572]
[-161.65541077 545.15600586]
[-145.33598328 543.54089355]
[-133.44252014 534.40057373]
[-127.31092072 514.71221924]
[-106.06256104 512.10620117]
[-94.67835999 502.33889771]
[-83.29415894 492.57162476]
[-71.90995789 482.80432129]
[-60.52576065 473.03701782]
[-49.14155960 463.26974487]
[-44.52040100 449.11013794]
[-29.00864410 445.99630737]
[-17.62444305 436.22903442]
[-6.24024248 426.46173096]
[5.14395809 416.69445801]
[5.54010010 413.43890381]
[6.91566944 410.22085571]
[9.26915836 407.33892822]
[12.50790977 405.09072876]
[16.49846268 390.63128662]
[20.48901558 376.17184448]
[24.47956657 361.71240234]
[28.47011948 347.25296021]
[32.33072662 332.75827026]
[36.06107330 318.22952271]
[31.73200035 303.97790527]
[42.65818024 292.53549194]
[46.38853073 278.00674438]
[50.11887741 263.47799683]
[53.84922791 248.94923401]
[57.57957458 234.42048645]
[53.25049973 220.16888428]
[64.17668152 208.72645569]
[67.90702820 194.19770813]
[71.63737488 179.66896057]
[75.23716736 165.10731506]
[78.70610809 150.51394653]
[82.17504883 135.92057800]
[85.64399719 121.32720947]
[89.11293793 106.73384094]
[87.23294067 91.85211945]
[80.24375153 78.57991791]
[73.25457001 65.30771637]
[66.26538849 52.03551483]
[52.98919678 43.43009567]
[53.90504837 28.56367493]
[41.17499542 17.36626244]
[48.41077805 2.03395033]
[65.14695740 4.74255037]
[67.17724609 21.57449150]
[79.95352936 29.23059273]
[79.53759003 45.04632950]
[86.52677155 58.31853104]
[93.51595306 71.59073639]
[100.50514221 84.86293793]
[107.88461304 83.52375793]
[112.94426727 69.40285492]
[122.64355469 80.84540558]
[130.02302551 79.50622559]
[131.90303040 64.62451172]
[133.78302002 49.74278641]
[135.66302490 34.86106873]
[137.54301453 19.97934723]
[133.52952576 3.50730348]
[148.24679565 -4.90925598]
[160.40856934 6.90291643]
[152.42474365 21.85934639]
[150.54473877 36.74106598]
[148.66474915 51.62278748]
[146.78474426 66.50450897]
[144.90473938 81.38623047]
[158.75003052 87.15756226]
[167.99673462 75.34661865]
[177.24343872 63.53567123]
[175.52809143 48.05357361]
[185.07380676 36.20732117]
[199.84419250 34.66740799]
[199.34005737 18.63227654]
[211.65533447 8.35057545]
[227.34281921 11.70954323]
[234.36839294 26.13246727]
[227.34265137 40.55531693]
[211.65513611 43.91411209]
[213.70492554 58.62240982]
[204.49569702 70.73210907]
[189.05438232 72.78237915]
[179.80767822 84.59332275]
[170.56097412 96.40426636]
[172.94538879 111.21353912]
[168.84864807 125.64325714]
[159.03817749 136.99028015]
[145.35182190 143.12895203]
[130.35342407 142.90931702]
[116.85267639 136.37252808]
[107.37867737 124.74310303]
[103.70630646 110.20278168]
[100.23736572 124.79615021]
[96.76842499 139.38952637]
[93.29947662 153.98289490]
[89.83053589 168.57626343]
[90.89096832 177.68342590]
[86.16612244 183.39930725]
[82.43577576 197.92805481]
[78.70542908 212.45680237]
[82.76768494 227.74760437]
[72.10832214 238.15084839]
[68.37797546 252.67959595]
[64.64762878 267.20834351]
[60.91727829 281.73709106]
[57.18692780 296.26583862]
[61.24918365 311.55664062]
[50.58982086 321.95986938]
[46.85947418 336.48861694]
[47.75624847 345.61334229]
[42.92956161 351.24349976]
[38.93901062 365.70294189]
[34.94845581 380.16238403]
[30.95790482 394.62182617]
[26.96735191 409.08126831]
[37.40555191 398.30889893]
[49.45521927 389.37551880]
[62.79616928 382.51846313]
[77.07391357 377.91998291]
[91.90905762 375.70223999]
[106.90741730 375.92416382]
[121.67045593 378.57989502]
[135.80587769 383.59881592]
[148.93811035 390.84759521]
[160.71817017 400.13360596]
[170.83306885 411.21011353]
[179.01402283 423.78277588]
[185.04364014 437.51751709]
[188.76171875 452.04940796]
[190.06947327 466.99230957]
[188.93211365 481.94912720]
[185.37989807 496.52246094]
[179.50720215 510.32504272]
[171.47007751 522.99011230]
[161.48208618 534.18121338]
[149.80862427 543.60089111]
[136.75987244 550.99884033]
[122.68255615 556.17852783]
[107.95075226 559.00238037]
[92.95589447 559.39520264]
[78.09643555 557.34667969]
[63.76720810 552.91125488]
[50.34897232 546.20666504]
[38.19827271 537.41119385]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 41]
[8 40]
[9 39]
[10 38]
[12 36]
[13 35]
[14 34]
[15 33]
[16 32]
[17 31]
[22 29]
[23 28]
[45 145]
[46 144]
[47 143]
[48 142]
[49 141]
[50 139]
[51 138]
[53 136]
[54 135]
[55 134]
[56 133]
[57 132]
[59 130]
[60 129]
[61 128]
[62 126]
[63 125]
[64 124]
[65 123]
[66 122]
[67 81]
[68 80]
[69 79]
[70 78]
[72 76]
[85 97]
[86 96]
[87 95]
[88 94]
[89 93]
[98 114]
[99 113]
[100 112]
[103 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
