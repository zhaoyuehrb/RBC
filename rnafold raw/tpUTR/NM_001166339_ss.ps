%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 14:12:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUCCAGGGACCGGGGAGGCCUGAGGUCAUCGGCCUGAGAGAAGAACACCGGACCCAGGGGAGAUGUGGAUUUUCAGCGGGAACUUUAUUCCAAUGCUAAUGGCAGACACCAGGCAGGAGGAGAGGAACCAUUUGUGCAGAUCAUCUAGAAGAACCUGGACCAUUCUUGAUGGAGCUGAAUACAGUGAUCACGUUGUCCUCCUAGGAGCAGGGGUGGGGGGAGGGGGGUGGGGUCCUUCUAGGAGUCCUUGGAG\
AAAAGUAAGAAACCAGGAGCGUUUCCAGUUCCACCCUUUCCUGCG\
) } def
/len { sequence length } bind def

/coor [
[305.10498047 464.15237427]
[306.38037109 444.14276123]
[294.36584473 435.16213989]
[282.35131836 426.18151855]
[270.33682251 417.20089722]
[258.32229614 408.22030640]
[245.05613708 412.46267700]
[230.71476746 405.47296143]
[221.30134583 417.15145874]
[211.88792419 428.82998657]
[209.25148010 444.42996216]
[195.24032593 449.48336792]
[185.82690430 461.16189575]
[176.41348267 472.84039307]
[167.00006104 484.51889038]
[157.64772034 496.24636841]
[163.92817688 511.56655884]
[161.62461853 527.86804199]
[151.46182251 540.70062256]
[136.29701233 546.60955811]
[120.31702423 544.06530762]
[111.21149445 555.98547363]
[102.16830444 567.95294189]
[100.02153015 583.62780762]
[86.17544556 589.11737061]
[77.13225555 601.08489990]
[68.08906555 613.05236816]
[59.04586792 625.01983643]
[50.00267410 636.98730469]
[45.27754974 653.26953125]
[28.32363319 653.23638916]
[23.66213799 636.93591309]
[38.03519058 627.94415283]
[47.07838440 615.97662354]
[56.12157822 604.00915527]
[65.16477203 592.04168701]
[74.20796967 580.07421875]
[75.70790863 565.25531006]
[90.20082092 558.90972900]
[99.24401093 546.94226074]
[100.76210022 539.74658203]
[108.44457245 534.89770508]
[102.44233704 522.65924072]
[102.28763580 508.96289062]
[108.06739044 496.47201538]
[118.70903015 487.63989258]
[132.17907715 484.22811890]
[145.87159729 486.95535278]
[147.53955078 479.79290771]
[155.32154846 475.10546875]
[164.73497009 463.42697144]
[174.14839172 451.74847412]
[183.56181335 440.06994629]
[185.52494812 425.30529785]
[200.20941162 419.41656494]
[209.62283325 407.73803711]
[219.03625488 396.05953979]
[221.06526184 381.19741821]
[215.12672424 367.42300415]
[209.18820190 353.64862061]
[203.17785645 339.90542603]
[197.09588623 326.19375610]
[191.01391602 312.48208618]
[184.86047363 298.80236816]
[178.63571167 285.15493774]
[172.41096497 271.50750732]
[166.18621826 257.86007690]
[159.96145630 244.21263123]
[153.73670959 230.56520081]
[148.12951660 225.80685425]
[147.51904297 216.74269104]
[141.43707275 203.03102112]
[135.35508728 189.31936646]
[128.84683228 175.80484009]
[121.91867828 162.50067139]
[114.99051666 149.19651794]
[108.06236267 135.89236450]
[101.13420105 122.58819580]
[94.20604706 109.28404236]
[84.43162537 97.90596008]
[72.32403564 89.05122375]
[57.61872482 93.64033508]
[43.19944000 88.74772644]
[34.52853775 76.44815826]
[34.76001358 61.57924652]
[22.65242386 52.72451401]
[10.54483509 43.86978149]
[-1.56275415 35.01504898]
[-17.26932335 33.11392975]
[-22.97497940 19.35548782]
[-35.08256912 10.50075436]
[-47.19015884 1.64602149]
[-59.29774475 -7.20871115]
[-65.74153900 -8.28608990]
[-70.05528259 -11.89158058]
[-71.56304932 -16.37679100]
[-83.48317719 -25.48231316]
[-95.40330505 -34.58783722]
[-107.32343292 -43.69335938]
[-113.74333191 -44.90500641]
[-117.98088074 -48.59975052]
[-119.39469910 -53.11545563]
[-131.12217712 -62.46780014]
[-142.84963989 -71.82015228]
[-158.52452087 -69.80179596]
[-170.98429871 -79.52442169]
[-172.83682251 -95.21975708]
[-162.98300171 -107.57604980]
[-147.26895142 -109.26251984]
[-135.01753235 -99.27862549]
[-133.49729919 -83.54762268]
[-121.76982117 -74.19527435]
[-110.04235077 -64.84292603]
[-98.21791077 -55.61348724]
[-86.29778290 -46.50796509]
[-74.37765503 -37.40244293]
[-62.45752716 -28.29691696]
[-50.44301224 -19.31629944]
[-38.33542633 -10.46156693]
[-26.22783661 -1.60683441]
[-14.12024689 7.24789858]
[0.72030646 8.51566792]
[7.29197884 22.90746117]
[19.39956665 31.76219368]
[31.50715637 40.61692810]
[43.61474609 49.47166061]
[57.71426392 44.74497223]
[72.06318665 49.28065491]
[81.09554291 61.53911591]
[81.17877197 76.94364166]
[93.28636169 85.79837036]
[100.07722473 82.61494446]
[93.69699860 69.03949738]
[87.31677246 55.46405411]
[80.93655396 41.88860703]
[74.55632782 28.31315994]
[68.17610168 14.73771381]
[61.87616730 1.12482274]
[75.45784760 -5.24211788]
[81.89158630 8.30815697]
[88.24506378 21.89614487]
[94.59853363 35.48413086]
[100.95200348 49.07212067]
[107.30547333 62.66010666]
[113.65894318 76.24809265]
[120.44980621 73.06466675]
[121.38854218 58.09407425]
[122.32727051 43.12347412]
[123.26600647 28.15287781]
[124.20473480 13.18228054]
[113.56404877 1.49676716]
[114.38629150 -14.28611755]
[126.18365479 -24.80266762]
[141.95697021 -23.81360054]
[152.34819031 -11.90571308]
[151.19242859 3.85625815]
[139.17533875 14.12101364]
[138.23660278 29.09161186]
[137.29786682 44.06220627]
[136.35913086 59.03280640]
[135.42041016 74.00340271]
[150.07836914 77.18840790]
[155.43682861 63.17816162]
[160.79528809 49.16792297]
[166.15374756 35.15768051]
[171.51222229 21.14743805]
[171.52307129 4.19349432]
[187.81744385 -0.48939961]
[196.82806396 13.87183666]
[185.52246094 26.50590134]
[180.16400146 40.51614380]
[174.80552673 54.52638626]
[169.44706726 68.53662872]
[164.08860779 82.54686737]
[137.14009094 100.70739746]
[107.51020050 102.35588074]
[114.43836212 115.66004181]
[121.36652374 128.96420288]
[128.29467773 142.26835632]
[135.22283936 155.57250977]
[142.15100098 168.87667847]
[147.37861633 154.81709290]
[160.97610474 148.48399353]
[175.10205078 153.52957153]
[181.61026001 167.04412842]
[176.74755859 181.23406982]
[163.31819153 187.91629028]
[149.06675720 183.23739624]
[155.14872742 196.94905090]
[161.23069763 210.66070557]
[167.38414001 224.34043884]
[173.60890198 237.98788452]
[179.83364868 251.63531494]
[186.05839539 265.28274536]
[192.28315735 278.93017578]
[198.50790405 292.57760620]
[204.88510132 299.04779053]
[204.72557068 306.40011597]
[210.80754089 320.11178589]
[216.88952637 333.82345581]
[223.19885254 340.35980225]
[222.96258545 347.71008301]
[228.90112305 361.48449707]
[234.83966064 375.25888062]
[260.35485840 375.11553955]
[267.30291748 396.20578003]
[279.31744385 405.18640137]
[291.33193970 414.16702271]
[303.34646606 423.14764404]
[315.36096191 432.12823486]
[324.53259277 427.01425171]
[334.84130859 425.22430420]
[345.12493896 426.93460083]
[354.23257446 431.92822266]
[361.15335083 439.62228394]
[365.12869263 449.13577271]
[365.73526001 459.39041138]
[362.93005371 469.23294067]
[378.51608276 471.95077515]
[383.49627686 485.98809814]
[395.12551880 495.46234131]
[406.75473022 504.93658447]
[418.38397217 514.41082764]
[430.01318359 523.88507080]
[441.64239502 533.35931396]
[453.27163696 542.83355713]
[464.90084839 552.30773926]
[476.53005981 561.78198242]
[488.69332886 549.90338135]
[509.85675049 547.69165039]
[532.06854248 560.66168213]
[546.40979004 565.05810547]
[560.75109863 569.45446777]
[576.21295166 566.10168457]
[586.11352539 577.22949219]
[600.45477295 581.62585449]
[614.79608154 586.02221680]
[629.13732910 590.41864014]
[646.05297852 589.28015137]
[651.82971191 605.21960449]
[638.11236572 615.18304443]
[624.74090576 604.75988770]
[610.39965820 600.36352539]
[596.05841064 595.96710205]
[581.71716309 591.57073975]
[567.28106689 595.23797607]
[556.35467529 583.79571533]
[542.01342773 579.39935303]
[527.67218018 575.00292969]
[520.33056641 588.08428955]
[512.98962402 601.16442871]
[524.21331787 611.11578369]
[535.43695068 621.06713867]
[549.09124756 614.38665771]
[564.26300049 613.44500732]
[578.63861084 618.38574219]
[590.02587891 628.45544434]
[596.68835449 642.11853027]
[597.61004639 657.29150391]
[592.65039062 671.66058350]
[582.56573486 683.03460693]
[568.89392090 689.67907715]
[553.71978760 690.58081055]
[539.35723877 685.60229492]
[527.99645996 675.50268555]
[521.36999512 661.82214355]
[520.48822021 646.64678955]
[525.48559570 632.29077148]
[514.26196289 622.33947754]
[503.03826904 612.38812256]
[491.11816406 621.49365234]
[497.76708984 634.93951416]
[504.41604614 648.38537598]
[511.06500244 661.83123779]
[517.71398926 675.27709961]
[532.94921875 678.80139160]
[542.31341553 691.32519531]
[541.38500977 706.93518066]
[530.60241699 718.26080322]
[515.05682373 719.95446777]
[502.08837891 711.21636963]
[497.82040405 696.17248535]
[504.26809692 681.92608643]
[497.61914062 668.48016357]
[490.97018433 655.03430176]
[484.32122803 641.58843994]
[477.67227173 628.14257812]
[457.24111938 598.08959961]
[467.05584717 573.41125488]
[455.42660522 563.93701172]
[443.79739380 554.46276855]
[432.16818237 544.98852539]
[420.53894043 535.51428223]
[408.90972900 526.04003906]
[397.28048706 516.56579590]
[385.65127563 507.09155273]
[374.02206421 497.61734009]
[359.26782227 495.57717896]
[353.45581055 480.86218262]
[334.85867310 487.09313965]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 210]
[3 209]
[4 208]
[5 207]
[6 206]
[8 57]
[9 56]
[10 55]
[12 53]
[13 52]
[14 51]
[15 50]
[16 48]
[21 42]
[22 40]
[23 39]
[25 37]
[26 36]
[27 35]
[28 34]
[29 33]
[58 204]
[59 203]
[60 202]
[61 200]
[62 199]
[63 198]
[64 196]
[65 195]
[66 194]
[67 193]
[68 192]
[69 191]
[71 190]
[72 189]
[73 188]
[74 181]
[75 180]
[76 179]
[77 178]
[78 177]
[79 176]
[80 131]
[81 130]
[85 126]
[86 125]
[87 124]
[88 123]
[90 121]
[91 120]
[92 119]
[93 118]
[96 117]
[97 116]
[98 115]
[99 114]
[102 113]
[103 112]
[104 111]
[146 161]
[147 160]
[148 159]
[149 158]
[150 157]
[162 174]
[163 173]
[164 172]
[165 171]
[166 170]
[218 299]
[220 297]
[221 296]
[222 295]
[223 294]
[224 293]
[225 292]
[226 291]
[227 290]
[228 289]
[231 249]
[232 248]
[233 247]
[235 245]
[236 244]
[237 243]
[238 242]
[251 270]
[252 269]
[253 268]
[271 287]
[272 286]
[273 285]
[274 284]
[275 283]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
