%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 03:23:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAAUGGGAAAAAGAAGGAGACUAAACUUUAUACUUCAUUUUUAAUAUCCAAUUUUUUAAUAGAAAAAUAUGAAGCCAUGUCUCACUGUUUAAAUAAAACUUCAUGGACAUUUCAUGUCAGGAUUGCAAGCAUUAGCUAUCACAGCAAAGGAUUCCUAGCCUAUUCUUACUUACUCUACAGUGUCUUAAGCAAUAUUAAAGGUUCCUUUUCCCA\
) } def
/len { sequence length } bind def

/coor [
[121.71361542 263.41339111]
[112.81306458 276.27084351]
[97.71666718 280.34918213]
[83.55248260 273.72274780]
[77.00839996 259.52032471]
[81.17433929 244.44786072]
[94.08327484 235.62213135]
[95.38459778 220.67868042]
[96.68592834 205.73524475]
[97.98725128 190.79179382]
[99.28858185 175.84834290]
[100.58990479 160.90490723]
[101.89123535 145.96145630]
[92.86761475 144.77850342]
[84.38252258 141.86761475]
[76.75796509 137.39375305]
[70.27234650 131.58001709]
[65.15035248 124.69702911]
[61.55533218 117.05060577]
[59.58436584 108.96833801]
[44.59418869 109.51111603]
[29.60401344 110.05390167]
[14.61383724 110.59668732]
[-0.37633947 111.13947296]
[-7.63023901 124.60528564]
[-20.56496239 132.57960510]
[-35.65418243 133.00605774]
[-48.84265518 125.87021637]
[-56.63607788 113.17659760]
[-71.62625122 113.71937561]
[-86.61643219 114.26216125]
[-101.60660553 114.80494690]
[-116.59678650 115.34772491]
[-131.58695984 115.89051056]
[-146.57713318 116.43329620]
[-163.16314697 127.89562225]
[-179.83488464 118.09561157]
[-194.80307007 119.07214355]
[-209.77124023 120.04867554]
[-224.73196411 121.13352966]
[-239.68443298 122.32665253]
[-254.63690186 123.51977539]
[-262.78347778 136.59417725]
[-276.90155029 142.29797363]
[-291.49844360 138.63812256]
[-301.02725220 127.22146606]
[-315.97970581 128.41458130]
[-323.95779419 141.72360229]
[-338.24819946 147.77043152]
[-353.35595703 144.22994995]
[-363.47186279 132.46354675]
[-364.70611572 116.99563599]
[-356.58410645 103.77394867]
[-342.22897339 97.88249969]
[-327.16049194 101.58666229]
[-317.17285156 113.46211243]
[-302.22036743 112.26898956]
[-294.62258911 99.48573303]
[-280.79077148 93.55743408]
[-265.94683838 96.95022583]
[-255.83003235 108.56730652]
[-240.87756348 107.37418365]
[-225.92507935 106.18106079]
[-219.51039124 102.51725006]
[-210.74777222 105.08049774]
[-195.77960205 104.10396576]
[-180.81141663 103.12743378]
[-174.79374695 94.87586975]
[-165.02313232 91.21967316]
[-154.63867188 93.59113312]
[-147.11991882 101.44311523]
[-132.12974548 100.90033722]
[-117.13956451 100.35755157]
[-102.14939117 99.81476593]
[-87.15921021 99.27198792]
[-72.16903687 98.72920227]
[-57.17885971 98.18641663]
[-50.32389832 84.96238708]
[-37.68605423 76.89139557]
[-22.60550690 76.22542572]
[-9.12792397 83.24337006]
[-0.91912287 96.14929199]
[14.07105350 95.60650635]
[29.06122971 95.06372833]
[44.05140686 94.52094269]
[59.04158401 93.97815704]
[65.58050537 76.99667358]
[78.76951599 64.45958710]
[96.06040192 58.78915024]
[97.36172485 43.84570694]
[98.66305542 28.90226173]
[99.96437836 13.95881557]
[101.26570892 -0.98462903]
[93.80461121 -8.89143562]
[91.96216583 -19.38267517]
[96.10853577 -28.95555878]
[104.65430450 -34.54757690]
[106.38771057 -49.44708252]
[108.12111664 -64.34658813]
[98.58609772 -76.66410828]
[100.55626678 -91.74963379]
[112.35789490 -100.76390076]
[114.09130096 -115.66341400]
[106.39931488 -132.39634705]
[117.41787720 -146.05743408]
[118.93540192 -160.98048401]
[120.45292664 -175.90351868]
[121.97045135 -190.82655334]
[123.48797607 -205.74960327]
[125.00550079 -220.67263794]
[120.59259796 -237.04220581]
[135.10083008 -245.81419373]
[147.54627991 -234.30128479]
[139.92854309 -219.15510559]
[138.41101074 -204.23207092]
[136.89349365 -189.30903625]
[135.37596130 -174.38598633]
[133.85844421 -159.46295166]
[132.34091187 -144.53991699]
[139.73855591 -134.97261047]
[138.59934998 -122.53018188]
[128.99081421 -113.93000793]
[127.25740051 -99.03050232]
[136.67440796 -87.54765320]
[135.12873840 -72.41274261]
[123.02062225 -62.61318588]
[121.28721619 -47.71367645]
[119.55381012 -32.81417084]
[128.49682617 -15.66746330]
[116.20915222 0.31669772]
[114.90782166 15.26014233]
[113.60649872 30.20358849]
[112.30516815 45.14703369]
[111.00384521 60.09047699]
[116.34872437 61.96614838]
[121.38752747 64.55387115]
[126.02593231 67.80519104]
[130.17707825 71.65924835]
[142.79054260 63.54133606]
[155.40400696 55.42342377]
[160.19541931 40.11257935]
[175.20480347 34.44707108]
[188.91824341 42.77299500]
[190.81597900 58.70341110]
[179.44219971 70.01786804]
[163.52192688 68.03688812]
[150.90846252 76.15480042]
[138.29499817 84.27271271]
[142.87756348 97.82692719]
[142.62988281 112.64756012]
[137.23829651 127.00633240]
[150.40583801 134.19073486]
[163.57339478 141.37513733]
[176.74093628 148.55953979]
[189.30989075 145.67712402]
[200.12800598 151.92854309]
[203.67085266 163.49168396]
[216.73301697 170.86596680]
[229.79518127 178.24023438]
[243.01879883 170.55368042]
[258.21405029 170.51834106]
[271.29980469 178.04354858]
[278.81167603 191.02153015]
[278.81887817 205.91668701]
[291.88104248 213.29095459]
[304.94320679 220.66523743]
[318.00537109 228.03950500]
[331.12054443 235.31903076]
[344.28811646 242.50343323]
[357.45565796 249.68785095]
[370.62319946 256.87225342]
[387.31564331 251.63232422]
[402.33633423 259.92483521]
[406.62368774 276.18905640]
[419.89389038 283.18206787]
[433.16406250 290.17510986]
[446.43423462 297.16812134]
[462.79135132 295.99484253]
[471.76071167 309.72372437]
[464.11541748 324.23171997]
[447.72027588 324.59420776]
[439.44119263 310.43829346]
[426.17102051 303.44528198]
[412.90084839 296.45227051]
[399.63067627 289.45922852]
[387.97964478 294.95608521]
[375.09738159 292.70651245]
[365.72396851 283.31082153]
[363.43881226 270.03979492]
[350.27124023 262.85540771]
[337.10369873 255.67098999]
[323.93615723 248.48658752]
[316.56225586 248.04249573]
[310.63107300 241.10166931]
[297.56890869 233.72740173]
[284.50677490 226.35311890]
[271.44461060 218.97885132]
[258.68746948 226.66786194]
[243.69474792 226.94082642]
[230.49114990 219.62431335]
[222.67120361 206.59568787]
[222.42089844 191.30239868]
[209.35874939 183.92813110]
[196.29658508 176.55384827]
[178.78099060 177.66658020]
[169.55653381 161.72709656]
[156.38899231 154.54269409]
[143.22143555 147.35829163]
[130.05389404 140.17388916]
[116.83467865 147.26278687]
[115.53334808 162.20622253]
[114.23202515 177.14967346]
[112.93069458 192.09312439]
[111.62937164 207.03656006]
[110.32804108 221.98001099]
[109.02671814 236.92344666]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 216]
[8 215]
[9 214]
[10 213]
[11 212]
[12 211]
[13 210]
[20 86]
[21 85]
[22 84]
[23 83]
[24 82]
[29 77]
[30 76]
[31 75]
[32 74]
[33 73]
[34 72]
[35 71]
[37 67]
[38 66]
[39 65]
[40 63]
[41 62]
[42 61]
[46 57]
[47 56]
[89 134]
[90 133]
[91 132]
[92 131]
[93 130]
[97 128]
[98 127]
[99 126]
[102 123]
[103 122]
[105 119]
[106 118]
[107 117]
[108 116]
[109 115]
[110 114]
[138 148]
[139 147]
[140 146]
[151 209]
[152 208]
[153 207]
[154 206]
[157 204]
[158 203]
[159 202]
[164 197]
[165 196]
[166 195]
[167 194]
[168 192]
[169 191]
[170 190]
[171 189]
[174 185]
[175 184]
[176 183]
[177 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
