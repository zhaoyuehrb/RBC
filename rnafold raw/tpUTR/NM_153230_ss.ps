%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 04:46:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGCACUCUACAGAUGAAGAAAGCUGGGAGCACUUUGAACUUGAAAAUCAUUUCUCUUAGAACUACACUUGGGCACUGCCGGCCCUUUUGCUCCUCUCUCUCCCCUCCACUUUUUUUUUUUGUCAGCUCCAUGACAACAUGACCAGCUCAGCAAAGGCUGAGACUGCCCAUGACCUGAAGGCUCCAGGUGGCUUUAAAGCGCUAUGUUUACCAACUA\
) } def
/len { sequence length } bind def

/coor [
[150.93322754 248.44032288]
[164.17623901 255.47828674]
[157.52984619 242.03114319]
[150.88346863 228.58401489]
[144.23707581 215.13687134]
[138.45883179 210.53605652]
[137.59335327 201.44883728]
[131.14053345 187.90774536]
[121.24830627 185.37625122]
[114.23269653 177.65766907]
[112.58632660 167.13569641]
[117.09052277 157.24337769]
[111.02880859 143.52273560]
[104.96710205 129.80210876]
[90.33229065 130.18861389]
[76.54438019 123.47434235]
[66.99011230 110.60025787]
[64.33144379 94.08438873]
[69.79513550 77.53797150]
[82.75971985 64.87593842]
[68.04012299 61.98916245]
[53.00887299 66.92595673]
[42.00857162 56.88391495]
[27.28897667 53.99713898]
[14.26729488 62.54544830]
[-0.61934680 59.40816116]
[-8.68860340 46.94129944]
[-23.40820122 44.05452347]
[-38.12779617 41.16775131]
[-52.84739304 38.28097916]
[-67.56699371 35.39420319]
[-82.28659058 32.50743103]
[-97.00618744 29.62065697]
[-112.00579834 29.72824478]
[-126.68247223 32.82587051]
[-135.32580566 45.78467178]
[-150.25416565 48.71702957]
[-162.55513000 40.39707184]
[-177.23181152 43.49469376]
[-183.92518616 59.03144455]
[-198.41751099 67.43186188]
[-214.89575195 65.55548859]
[-226.88562012 54.33898544]
[-241.51634216 57.64682388]
[-256.14706421 60.95466232]
[-270.26290894 70.34503937]
[-283.19396973 59.38035583]
[-276.23745728 43.91933060]
[-259.45492554 46.32393265]
[-244.82418823 43.01609421]
[-230.19345093 39.70825958]
[-226.08366394 27.00927734]
[-216.15707397 17.92533875]
[-202.93325806 14.90704918]
[-189.84103394 18.84668350]
[-180.32943726 28.81802177]
[-165.65275574 25.72039795]
[-157.76316833 13.13906574]
[-142.92306519 9.78855991]
[-129.78009033 18.14919662]
[-115.10342407 15.05157185]
[-113.29248810 7.77348661]
[-127.84866333 4.15161848]
[-142.40483093 0.52974981]
[-156.96099854 -3.09211874]
[-171.51710510 -6.71422863]
[-167.89476013 -21.27027702]
[-153.33912659 -17.64828873]
[-138.78295898 -14.02641964]
[-124.22679138 -10.40455151]
[-109.67062378 -6.78268242]
[-107.85968781 -14.06076717]
[-119.37337494 -23.67508125]
[-130.88705444 -33.28939438]
[-142.40074158 -42.90370941]
[-157.76135254 -39.97353745]
[-171.38642883 -47.64758301]
[-176.84265137 -62.30240250]
[-171.55375671 -77.01843262]
[-158.01698303 -84.84721375]
[-142.62399292 -82.09223938]
[-132.64288330 -70.05432129]
[-132.78643799 -54.41739655]
[-121.27274323 -44.80308151]
[-109.75905609 -35.18876648]
[-98.24537659 -25.57445335]
[-90.86794281 -14.51530933]
[-88.07494354 -3.10237432]
[-89.45024109 7.12802887]
[-94.11941528 14.90105915]
[-79.39981842 17.78783226]
[-64.68022156 20.67460632]
[-49.96062088 23.56138039]
[-35.24102402 26.44815445]
[-20.52142715 29.33492851]
[-5.80182981 32.22170258]
[6.37852859 23.72614670]
[21.34741592 26.44405937]
[30.17574883 39.27754211]
[44.89534760 42.16431427]
[58.87375641 37.02103806]
[70.92690277 47.26956558]
[85.64649963 50.15633774]
[74.11283112 40.56600571]
[62.57915878 30.97567177]
[48.83675385 24.96349525]
[38.07310104 14.51630592]
[31.65361786 0.95937973]
[30.39264870 -13.98752499]
[34.45015335 -28.42832375]
[43.31141663 -40.53113174]
[55.85234833 -48.76065445]
[70.48207092 -52.07293701]
[85.34473419 -50.04780197]
[98.55494690 -42.94214630]
[108.43692780 -31.65735626]
[113.73709869 -17.62495804]
[113.78311157 -2.62502813]
[108.56794739 11.44161129]
[107.46185303 26.40077400]
[106.35575104 41.35993576]
[114.49825287 28.76232719]
[122.64074707 16.16471863]
[130.78324890 3.56711102]
[138.92573547 -9.03049755]
[147.06823730 -21.62810516]
[143.50445557 -37.02534866]
[151.94274902 -50.38838959]
[167.37680054 -53.78918076]
[180.64988708 -45.21009064]
[183.88729858 -29.74093819]
[175.16836548 -16.55930138]
[159.66584778 -13.48560905]
[151.52334595 -0.88800031]
[143.38085938 11.70960808]
[135.23835754 24.30721664]
[127.09585571 36.90482330]
[118.95336151 49.50243378]
[127.63029480 61.73807144]
[142.21206665 58.22069931]
[156.79383850 54.70332718]
[171.37561035 51.18595886]
[179.64364624 37.98454285]
[194.48175049 34.62515259]
[207.01632690 42.58881378]
[221.59809875 39.07144165]
[236.17987061 35.55407333]
[250.73603821 31.93220329]
[265.26586914 28.20602417]
[279.79568481 24.47984314]
[294.32550049 20.75366402]
[308.85531616 17.02748489]
[323.38513184 13.30130482]
[334.72030640 1.45033050]
[350.58477783 5.60372591]
[354.65853882 21.48883247]
[342.75082397 32.76441574]
[327.11129761 27.83112144]
[312.58148193 31.55730057]
[298.05166626 35.28348160]
[283.52185059 39.00966263]
[268.99203491 42.73583984]
[254.46221924 46.46202087]
[248.76731873 51.16561508]
[239.69725037 50.13584518]
[225.11546326 53.65321732]
[210.53369141 57.17058563]
[203.00827026 69.97306824]
[188.27038574 73.74790192]
[174.89299011 65.76773071]
[160.31121826 69.28510284]
[145.72944641 72.80247498]
[131.14767456 76.31983948]
[135.84103394 95.23966217]
[130.74359131 112.49168396]
[118.68772888 123.74040222]
[124.74944305 137.46102905]
[130.81115723 151.18165588]
[147.60583496 162.33770752]
[144.68164062 181.45492554]
[151.13444519 194.99601746]
[157.68421936 208.49047852]
[164.33059692 221.93762207]
[170.97698975 235.38476562]
[177.62338257 248.83189392]
[187.17048645 255.69775391]
[187.94023132 266.12353516]
[202.23449707 272.90472412]
[203.28536987 287.76220703]
[211.96229553 299.99786377]
[220.63923645 312.23348999]
[229.31617737 324.46911621]
[237.99310303 336.70477295]
[253.51011658 336.74816895]
[266.01824951 345.93112183]
[270.70782471 360.72259521]
[265.77566528 375.43493652]
[253.11824036 384.41098022]
[237.60261536 384.19924927]
[225.19485474 374.88113403]
[220.66598511 360.03967285]
[225.75747681 345.38168335]
[217.08053589 333.14605713]
[208.40359497 320.91043091]
[199.72666931 308.67480469]
[191.04972839 296.43914795]
[177.37609863 290.53314209]
[175.70460510 274.80047607]
[175.60763550 289.80017090]
[169.22755432 303.37567139]
[157.74130249 313.02273560]
[143.26773071 316.96176147]
[128.47679138 314.46612549]
[116.09696960 305.99618530]
[108.41196442 293.11437988]
[106.83942413 278.19705200]
[111.66944122 263.99597168]
[122.01102448 253.13079834]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 185]
[3 184]
[4 183]
[5 182]
[7 181]
[8 180]
[12 178]
[13 177]
[14 176]
[20 103]
[21 102]
[23 100]
[24 99]
[27 96]
[28 95]
[29 94]
[30 93]
[31 92]
[32 91]
[33 90]
[34 61]
[35 60]
[38 57]
[39 56]
[43 51]
[44 50]
[45 49]
[72 86]
[73 85]
[74 84]
[75 83]
[121 138]
[122 137]
[123 136]
[124 135]
[125 134]
[126 133]
[139 173]
[140 172]
[141 171]
[142 170]
[145 167]
[146 166]
[147 165]
[148 163]
[149 162]
[150 161]
[151 160]
[152 159]
[153 158]
[187 208]
[189 206]
[190 205]
[191 204]
[192 203]
[193 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
