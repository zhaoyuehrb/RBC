%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 01:51:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGCCCCUACAGCCCUCACUGUGAACCCUGAGGCCGGCAGCCCAGCAAAUCUGUGGGCAGAGAGUGGAGAAUCUUGGUGGAUGAGGCUGCGGCGGCGGCAGGAGCAUCUAGAAACGGGAGCGAGCUGGACUGGAACCCUUCCCCUUCCUGGCCACCGCUCUUCGGGCGGCAGCAACCUGAGAUUAAACACCAGACACCCUUGCAGCCAA\
) } def
/len { sequence length } bind def

/coor [
[69.62930298 150.86816406]
[62.83593369 146.36578369]
[54.20167923 158.63157654]
[45.56742096 170.89736938]
[36.93316650 183.16316223]
[28.48336411 195.55673218]
[20.21990967 208.07533264]
[11.95645523 220.59393311]
[9.84031200 229.48068237]
[3.47457647 233.23672485]
[-4.97522449 245.63029480]
[-13.42502499 258.02389526]
[-8.35248566 272.56951904]
[-12.76593399 287.14260864]
[-24.77225876 296.21520996]
[-39.64069366 296.47521973]
[-48.09049606 308.86880493]
[-56.54029465 321.26235962]
[-60.46707535 337.75531006]
[-77.40249634 338.54766846]
[-82.85209656 322.49343872]
[-68.93387604 312.81256104]
[-60.48407745 300.41897583]
[-52.03427505 288.02542114]
[-57.22430420 274.08978271]
[-53.16525650 259.59881592]
[-41.21196365 250.16630554]
[-25.81860733 249.57408142]
[-17.36880684 237.18049622]
[-8.91900539 224.78692627]
[-0.56214345 212.33047485]
[7.70131111 199.81188965]
[15.96476555 187.29328918]
[15.90118217 182.51712036]
[18.83780289 177.65046692]
[24.66737556 174.52890015]
[33.30163193 162.26310730]
[41.93588638 149.99731445]
[50.57014465 137.73152161]
[42.97318649 124.79760742]
[28.05535698 126.36553955]
[13.13752842 127.93346405]
[-1.78029954 129.50138855]
[-16.69812775 131.06932068]
[-24.90639687 135.07888794]
[-31.85060501 132.54740906]
[-46.79021835 133.89199829]
[-59.88135910 143.76893616]
[-74.87298584 137.12188721]
[-76.34299469 120.78875732]
[-62.77916718 111.57167053]
[-48.13480759 118.95237732]
[-33.19519424 117.60778809]
[-18.26605415 116.15148926]
[-3.34822655 114.58356476]
[11.56960201 113.01563263]
[26.48743057 111.44770813]
[41.40525818 109.87978363]
[42.51500320 87.76404572]
[51.58937836 67.83188629]
[67.19054413 52.81006622]
[87.00215149 44.68071747]
[108.17220306 44.42085266]
[127.72335815 51.88821793]
[136.89923096 40.02215195]
[146.07508850 28.15608597]
[141.88151550 13.33312607]
[147.15859985 -0.94993442]
[159.68600464 -9.28827286]
[174.54338074 -8.65860939]
[183.71925354 -20.52467537]
[192.89511108 -32.39073944]
[202.07098389 -44.25680542]
[211.24684143 -56.12287140]
[220.42269897 -67.98893738]
[229.59857178 -79.85500336]
[238.77442932 -91.72106934]
[241.54876709 -100.42482758]
[248.17739868 -103.69464874]
[247.51150513 -116.57612610]
[255.54316711 -126.15153503]
[267.54855347 -127.63783264]
[277.07528687 -139.22409058]
[275.73098755 -154.74279785]
[285.55749512 -166.35719299]
[300.36050415 -167.54316711]
[309.88723755 -179.12940979]
[319.41397095 -190.71566772]
[328.94070435 -202.30192566]
[338.46743774 -213.88818359]
[347.46478271 -225.89018250]
[355.91458130 -238.28376770]
[364.36437988 -250.67735291]
[372.81417847 -263.07092285]
[381.26397705 -275.46450806]
[382.64505005 -291.22531128]
[396.20742798 -297.38250732]
[404.65722656 -309.77609253]
[413.10702515 -322.16967773]
[421.46389771 -334.62612915]
[429.72735596 -347.14471436]
[437.99078369 -359.66329956]
[446.25424194 -372.18191528]
[454.51770020 -384.70050049]
[448.68341064 -394.56991577]
[446.96154785 -405.85290527]
[449.56307983 -416.91336060]
[456.07482910 -426.16192627]
[465.52456665 -432.28424072]
[476.52603149 -434.42779541]
[487.48226929 -432.32052612]
[496.29904175 -444.45578003]
[505.11581421 -456.59103394]
[506.18566895 -463.11663818]
[509.84197998 -467.46859741]
[514.38232422 -468.95211792]
[523.55822754 -480.81817627]
[532.73406982 -492.68423462]
[530.92608643 -508.15579224]
[540.40075684 -520.05895996]
[555.16168213 -521.68725586]
[557.48284912 -537.33721924]
[571.38916016 -542.67230225]
[580.56506348 -554.53839111]
[579.96496582 -570.57019043]
[592.21850586 -580.92541504]
[607.92578125 -577.66040039]
[615.03753662 -563.27978516]
[608.09820557 -548.81512451]
[592.43109131 -545.36254883]
[583.25524902 -533.49645996]
[581.59039307 -518.69519043]
[567.02777100 -512.51135254]
[569.16552734 -497.81561279]
[560.02893066 -485.65100098]
[544.60015869 -483.50839233]
[535.42425537 -471.64230347]
[526.24841309 -459.77624512]
[517.25109863 -447.77426147]
[508.43429565 -435.63897705]
[499.61752319 -423.50372314]
[506.41226196 -406.09408569]
[501.30126953 -387.96188354]
[486.17532349 -376.48211670]
[467.03631592 -376.43704224]
[458.77285767 -363.91845703]
[450.50939941 -351.39987183]
[442.24594116 -338.88125610]
[433.98248291 -326.36267090]
[432.92105103 -319.04803467]
[425.50061035 -313.71987915]
[417.05081177 -301.32629395]
[408.60101318 -288.93270874]
[407.82434082 -274.05838013]
[393.65756226 -267.01470947]
[385.20776367 -254.62112427]
[376.75796509 -242.22753906]
[368.30816650 -229.83396912]
[359.85836792 -217.44038391]
[374.76034546 -219.15243530]
[386.59387207 -209.93464661]
[388.58090210 -195.06684875]
[379.58328247 -183.06504822]
[364.75473022 -180.80372620]
[352.58877563 -189.57809448]
[350.05371094 -204.36145020]
[340.52697754 -192.77519226]
[331.00024414 -181.18893433]
[321.47351074 -169.60267639]
[311.94674683 -158.01641846]
[313.64392090 -143.26329041]
[304.14752197 -131.37745667]
[288.66156006 -129.69734192]
[279.13482666 -118.11109161]
[277.19741821 -100.66970825]
[259.90487671 -94.34230042]
[250.64050293 -82.54520416]
[241.46463013 -70.67913818]
[232.28877258 -58.81307220]
[223.11289978 -46.94700623]
[213.93704224 -35.08094025]
[204.76118469 -23.21487617]
[195.58531189 -11.34881020]
[186.40945435 0.51725531]
[190.75677490 14.73832130]
[185.83837891 28.96060371]
[173.34237671 37.66137314]
[157.94114685 37.33195114]
[148.76528931 49.19801712]
[139.58943176 61.06408310]
[144.69244385 66.74938965]
[148.98156738 73.10066223]
[152.37033081 80.00173187]
[154.78877258 87.32524109]
[156.18490601 94.93503571]
[156.52584839 102.68864441]
[155.79849243 110.43999481]
[154.00993347 118.04213715]
[151.18746948 125.35003662]
[147.37817383 132.22332764]
[142.64811707 138.52905273]
[137.08126831 144.14416504]
[130.77799988 148.95797729]
[123.85323334 152.87432861]
[116.43442535 155.81350708]
[108.65916443 157.71382141]
[100.67264557 158.53294373]
[92.62493896 158.24877930]
[84.66820526 156.86004639]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 39]
[3 38]
[4 37]
[5 36]
[6 33]
[7 32]
[8 31]
[10 30]
[11 29]
[12 28]
[16 24]
[17 23]
[18 22]
[40 58]
[41 57]
[42 56]
[43 55]
[44 54]
[46 53]
[47 52]
[64 190]
[65 189]
[66 188]
[70 184]
[71 183]
[72 182]
[73 181]
[74 180]
[75 179]
[76 178]
[77 177]
[79 176]
[82 174]
[83 173]
[86 170]
[87 169]
[88 168]
[89 167]
[90 166]
[91 159]
[92 158]
[93 157]
[94 156]
[95 155]
[97 153]
[98 152]
[99 151]
[100 149]
[101 148]
[102 147]
[103 146]
[104 145]
[111 141]
[112 140]
[113 139]
[116 138]
[117 137]
[118 136]
[121 133]
[123 131]
[124 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
