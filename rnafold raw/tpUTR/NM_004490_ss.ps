%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 20:09:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAAGCCAGAAGUGACUUAUUAAACUAUUGAAGGAAAAGGACUCAAGAAAAAUAAUAAAAGACCAUAAAUAAGGGCGAAAACAUUACCAUGUGAAAAGAAUGUAUUUCACCUGCAAGUUACAAAAAAAUAGUUUGUGCAUUGCAAAUAAGCAAAGACUUGGAUUGACUUUACAUUCAUCAUUUAAAAUUCAUUAGUUAAAAUUAAACCUUAGGAAAAAAAUGA\
) } def
/len { sequence length } bind def

/coor [
[82.25224304 499.61236572]
[78.59256744 484.90243530]
[80.18778229 469.82824707]
[86.84526062 456.21011353]
[97.76107788 445.69244385]
[111.61708832 439.54537964]
[110.56607819 424.58224487]
[101.64617920 416.42019653]
[100.64296722 403.96923828]
[108.63711548 393.85504150]
[107.79605865 378.87863159]
[106.95500183 363.90222168]
[92.29779816 360.88299561]
[78.91133118 354.16738892]
[67.71080017 344.20782471]
[59.46371078 331.67877197]
[54.73724365 317.43090820]
[53.85929108 302.43365479]
[56.89569855 287.70889282]
[63.64536285 274.26165771]
[73.65354919 263.01123047]
[86.24253082 254.72851562]
[100.55744171 249.98316956]
[99.71638489 235.00677490]
[98.87532806 220.03036499]
[98.03427124 205.05397034]
[97.19321442 190.07756042]
[88.75446320 177.80413818]
[95.70581055 163.59184265]
[94.86475372 148.61544800]
[94.02369690 133.63903809]
[93.18264008 118.66264343]
[86.74066925 132.20889282]
[80.29869843 145.75515747]
[73.85671997 159.30140686]
[74.67247772 174.27920532]
[72.30128479 189.09060669]
[66.85047150 203.06517029]
[58.56676483 215.57037354]
[47.82511139 226.04019165]
[35.11171722 234.00068665]
[21.00204468 239.09156799]
[6.13474512 241.08239746]
[-8.81723118 239.88305664]
[-23.17710114 235.54783630]
[-36.29488373 228.27296448]
[-47.57682037 218.38772583]
[-56.51224518 206.33956909]
[-62.69670868 192.67382812]
[-65.85028076 178.00907898]
[-65.83022308 163.00909424]
[-62.63743210 148.35282898]
[-56.41643524 134.70368958]
[-47.44881439 122.67946625]
[-36.14048004 112.82444000]
[-23.00328445 105.58468628]
[-8.63186932 101.28788757]
[6.32326126 100.12854767]
[21.18518257 102.15913391]
[35.28052139 107.28741455]
[50.11348343 105.05509949]
[64.94644165 102.82278442]
[79.77940369 100.59047699]
[65.69203186 95.43820953]
[52.88990021 104.20662689]
[37.37978745 103.74186707]
[25.12564468 94.22264099]
[20.83944130 79.30929565]
[26.16930962 64.73629761]
[39.06580734 56.10727692]
[54.56996536 56.74026489]
[66.72012329 66.39186096]
[70.84429169 81.35083771]
[84.93167114 86.50309753]
[89.18549347 80.32612610]
[76.83155060 71.81847382]
[64.47773743 63.31063843]
[72.98576355 50.95695496]
[85.33919525 59.46453094]
[97.69313812 67.97218323]
[101.94696808 61.79520798]
[92.10961151 50.47150040]
[82.27224731 39.14778900]
[72.43489075 27.82407761]
[56.76298141 22.99466705]
[53.37369537 6.94958067]
[65.75363922 -3.80537033]
[81.16739655 1.79358518]
[83.75860596 17.98672104]
[93.59596252 29.31043243]
[103.43331909 40.63414001]
[113.27067566 51.95785141]
[120.77049255 51.90525818]
[116.03533173 37.67226028]
[128.10848999 28.77063751]
[140.30523682 37.50216293]
[135.77012634 51.80007172]
[143.26994324 51.74747849]
[152.94750977 40.28691864]
[162.62509155 28.82635880]
[172.30267334 17.36579704]
[181.98025513 5.90523672]
[191.65783691 -5.55532360]
[201.33541870 -17.01588440]
[199.54830933 -34.42229843]
[210.68728638 -47.47558594]
[227.48333740 -48.41041946]
[236.99923706 -60.00557709]
[246.51513672 -71.60073090]
[246.02885437 -84.48355865]
[254.18553162 -93.94407654]
[266.20318604 -95.27061462]
[269.19506836 -110.80635071]
[283.31793213 -115.53857422]
[292.99551392 -126.99913025]
[302.67309570 -138.45968628]
[312.35067749 -149.92025757]
[322.02825928 -161.38081360]
[331.70584106 -172.84136963]
[339.86364746 -185.42906189]
[346.37191772 -198.94360352]
[352.88015747 -212.45812988]
[359.38842773 -225.97267151]
[365.89666748 -239.48719788]
[359.30065918 -253.66557312]
[363.41137695 -268.75317383]
[376.28793335 -277.62609863]
[391.85034180 -276.09481812]
[402.75057983 -264.88235474]
[403.84182739 -249.28291321]
[394.60885620 -236.66203308]
[379.41122437 -232.97894287]
[372.90295410 -219.46440125]
[366.39471436 -205.94987488]
[359.88644409 -192.43534851]
[353.37817383 -178.92080688]
[359.07440186 -174.04196167]
[373.22091675 -179.02951050]
[370.46679688 -164.28424072]
[376.16302490 -159.40539551]
[388.51696777 -167.91304016]
[400.87091064 -176.42068481]
[413.22485352 -184.92834473]
[415.84356689 -200.51416016]
[428.76443481 -209.61509705]
[444.32168579 -206.83172607]
[453.28552246 -193.81536865]
[450.33782959 -178.28840637]
[437.22741699 -169.46270752]
[421.73248291 -172.57440186]
[409.37854004 -164.06674194]
[397.02459717 -155.55909729]
[384.67065430 -147.05145264]
[357.22668457 -147.69013977]
[343.16638184 -163.16378784]
[333.48880005 -151.70323181]
[323.81124878 -140.24267578]
[314.13366699 -128.78211975]
[304.45608521 -117.32154846]
[294.77850342 -105.86099243]
[292.47879028 -91.14498901]
[277.66372681 -85.59303284]
[275.49288940 -68.17478943]
[258.11029053 -62.08483505]
[248.59440613 -50.48967743]
[239.07850647 -38.89451981]
[242.12315369 -26.37979507]
[237.33508301 -14.21379089]
[226.25274658 -6.91696262]
[212.79597473 -7.33830452]
[203.11839294 4.12225580]
[193.44081116 15.58281612]
[183.76322937 27.04337692]
[174.08566284 38.50393677]
[164.40808105 49.96449661]
[154.73049927 61.42506027]
[168.96081543 66.16826630]
[180.67756653 75.53404236]
[188.43901062 88.36992645]
[191.29011536 103.09647369]
[188.88003540 117.90158844]
[181.50534058 130.96351624]
[170.07347107 140.67498779]
[155.99113464 145.84100342]
[140.99114990 145.82589722]
[126.91923523 140.63151550]
[115.50696564 130.89704895]
[108.15904236 117.82158661]
[109.00009918 132.79798889]
[109.84115601 147.77438354]
[110.68221283 162.75079346]
[119.18112183 176.09542847]
[112.16961670 189.23651123]
[113.01067352 204.21290588]
[113.85173035 219.18931580]
[114.69278717 234.16571045]
[115.53384399 249.14212036]
[130.29006958 252.25486755]
[143.72724915 259.07595825]
[154.93215942 269.13510132]
[163.14500427 281.74206543]
[167.81095886 296.03424072]
[168.61769104 311.03552246]
[165.51618958 325.72299194]
[158.72377014 339.09664917]
[148.70878601 350.24765015]
[136.15840149 358.41983032]
[121.93140411 363.06118774]
[122.77246094 378.03756714]
[123.61351776 393.01397705]
[134.05421448 408.18743896]
[125.52921295 423.53121948]
[126.58022308 438.49435425]
[141.15948486 442.64416504]
[153.43838501 451.53259277]
[161.93417358 464.08636475]
[165.62095642 478.78955078]
[164.05352783 493.86666870]
[157.42115784 507.49703979]
[146.52474976 518.03479004]
[132.68008423 524.20739746]
[117.55897522 525.26953125]
[102.98738098 521.09283447]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 213]
[7 212]
[10 210]
[11 209]
[12 208]
[23 197]
[24 196]
[25 195]
[26 194]
[27 193]
[29 191]
[30 190]
[31 189]
[32 188]
[63 74]
[64 73]
[81 92]
[82 91]
[83 90]
[84 89]
[98 176]
[99 175]
[100 174]
[101 173]
[102 172]
[103 171]
[104 170]
[107 166]
[108 165]
[109 164]
[112 162]
[114 160]
[115 159]
[116 158]
[117 157]
[118 156]
[119 155]
[120 136]
[121 135]
[122 134]
[123 133]
[124 132]
[140 153]
[141 152]
[142 151]
[143 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
