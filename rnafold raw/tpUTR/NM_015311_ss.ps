%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 09:48:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAACCUAACCAGGCCAGGCGGGUGCCCUUGGACAGCUUGGAAGGCGUUUGCCCUUACCCUGGGCAGGGGUAGAGAGACAAGGAACAAUAAAAGUGCUACAGCUCA\
) } def
/len { sequence length } bind def

/coor [
[162.12451172 189.97737122]
[149.13841248 184.22692871]
[138.89123535 174.34997559]
[132.64076233 161.53022766]
[131.16398621 147.31439209]
[134.66061401 133.42543030]
[122.37332916 124.82178497]
[110.08604431 116.21813202]
[95.79880524 118.63078308]
[83.92967987 110.31993866]
[81.31030273 96.06914520]
[69.02302551 87.46549988]
[56.73574448 78.86185455]
[44.44846344 70.25820923]
[32.16118240 61.65456009]
[15.34861946 68.08827972]
[-1.84320378 63.29955292]
[-12.71772099 49.34536743]
[-13.15337181 31.81491852]
[-25.92012215 23.94027138]
[-38.68687057 16.06562233]
[-51.45362091 8.19097328]
[-64.22037506 0.31632459]
[-76.98712158 -7.55832434]
[-89.75387573 -15.43297291]
[-102.52062225 -23.30762100]
[-115.28736877 -31.18227005]
[-128.05412292 -39.05691910]
[-143.86158752 -39.71633911]
[-150.63208008 -52.98320770]
[-163.39881897 -60.85785294]
[-179.20628357 -61.51727676]
[-185.97677612 -74.78414154]
[-198.74353027 -82.65879059]
[-215.14254761 -82.59464264]
[-223.16268921 -96.89881134]
[-214.55352783 -110.85639954]
[-198.17141724 -110.10903168]
[-190.86888123 -95.42553711]
[-178.10212708 -87.55088806]
[-163.20782471 -87.45471954]
[-155.52416992 -73.62460327]
[-142.75743103 -65.74995422]
[-127.86312866 -65.65377808]
[-120.17947388 -51.82366943]
[-107.41272736 -43.94902039]
[-94.64597321 -36.07437134]
[-81.87922668 -28.19972229]
[-69.11247253 -20.32507324]
[-56.34572220 -12.45042515]
[-43.57897186 -4.57577658]
[-30.81222343 3.29887199]
[-18.04547310 11.17352104]
[-5.27872324 19.04817009]
[5.30332375 12.75211143]
[17.63648224 11.60725880]
[29.33326721 15.89803410]
[38.10237503 24.85051155]
[42.19749451 36.77122116]
[40.76483154 49.36727905]
[53.05211258 57.97092438]
[65.33939362 66.57456970]
[77.62667084 75.17821503]
[89.91395569 83.78186798]
[104.20119476 81.36921692]
[116.07032013 89.68006134]
[118.68969727 103.93085480]
[130.97697449 112.53450012]
[143.26425171 121.13814545]
[156.69815063 112.43749237]
[172.39888000 109.53367615]
[187.98103333 112.83809662]
[201.08856201 121.82121277]
[209.75099182 135.09709167]
[212.67970276 150.63722229]
[209.45948792 166.08042908]
[221.99180603 174.32305908]
[234.52412415 182.56570435]
[248.23829651 175.79307556]
[263.40100098 176.78770447]
[275.94665527 185.18252563]
[282.56161499 198.63980103]
[281.55923462 213.50119019]
[294.09155273 221.74382019]
[309.87316895 222.86271667]
[316.25491333 236.32089233]
[328.78723145 244.56352234]
[343.71499634 239.90559387]
[358.12435913 245.98043823]
[365.21170044 259.91970825]
[361.63058472 275.14172363]
[349.07189941 284.45910645]
[333.46548462 283.47244263]
[322.18017578 272.64764404]
[320.54461670 257.09585571]
[308.01229858 248.85321045]
[293.12710571 248.32388306]
[285.84893799 234.27613831]
[273.31661987 226.03350830]
[260.06765747 232.84019470]
[245.09092712 232.09637451]
[232.41358948 223.90177917]
[225.49465942 210.37309265]
[226.28147888 195.09800720]
[213.74916077 186.85537720]
[201.21685791 178.61274719]
[189.84339905 186.96749878]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 69]
[7 68]
[8 67]
[11 64]
[12 63]
[13 62]
[14 61]
[15 60]
[19 54]
[20 53]
[21 52]
[22 51]
[23 50]
[24 49]
[25 48]
[26 47]
[27 46]
[28 45]
[30 43]
[31 42]
[33 40]
[34 39]
[76 106]
[77 105]
[78 104]
[83 99]
[84 98]
[86 96]
[87 95]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
