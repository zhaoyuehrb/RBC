%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 07:11:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUACUUGGAAUCCUGUGUCCUGUCUCGUGGCAACAAGGCUAUGUUCUGUUAGGAGUUACCUUAAACUGUGUAAAAAUAUUUUUUUUUAAUCUGCUGCCAUAUUGUAGCUCAAUACAAUGUGAAUUUGUUUUUCGUUUUGGGGUUUUUUUUUUUUGUAAUAAAUGUGUUUCCGUUCACAUACCCUUUA\
) } def
/len { sequence length } bind def

/coor [
[153.92892456 278.00262451]
[152.06976318 263.09692383]
[152.98153687 248.09941101]
[156.63467407 233.52096558]
[162.90615845 219.85842896]
[171.58375549 207.57772827]
[182.37312317 197.09794617]
[174.09175110 184.59120178]
[165.81036377 172.08445740]
[157.52899170 159.57769775]
[149.24761963 147.07095337]
[140.96623230 134.56420898]
[132.68486023 122.05744934]
[124.40348053 109.55070496]
[121.41954041 120.91902161]
[113.01039124 131.05923462]
[99.85591125 137.40797424]
[83.81230164 137.82398987]
[67.65402222 131.10691833]
[53.65631485 136.49803162]
[39.65860748 141.88914490]
[25.66089821 147.28027344]
[21.53771400 165.94915771]
[7.12508059 178.28202820]
[-11.65782547 179.45101929]
[-27.23845100 169.16542053]
[-40.94842148 175.25120544]
[-54.65839386 181.33699036]
[-68.36836243 187.42276001]
[-82.07833099 193.50854492]
[-95.78829956 199.59432983]
[-101.23388672 214.43080139]
[-115.61037445 220.99526978]
[-130.38845825 215.39312744]
[-136.80055237 200.94802856]
[-131.04248047 186.23001099]
[-116.53040314 179.97099304]
[-101.87408447 185.88435364]
[-88.16411591 179.79856873]
[-74.45413971 173.71279907]
[-60.74417114 167.62701416]
[-47.03420258 161.54122925]
[-33.32423019 155.45545959]
[-33.09180450 144.26872253]
[-28.67282104 133.93324280]
[-20.67313957 125.96379089]
[-10.22637749 121.54390717]
[1.16664469 121.35031128]
[11.85349083 125.44949341]
[20.26978111 133.28256226]
[34.26749039 127.89144135]
[48.26519775 122.50032806]
[62.26290894 117.10920715]
[62.88937378 102.12229919]
[49.39041519 95.58179474]
[35.89145660 89.04129791]
[22.39249992 82.50080109]
[7.54676819 87.92111206]
[-6.74805641 81.18067169]
[-12.01110840 66.27846527]
[-5.11991167 52.05569839]
[9.83710861 46.95049667]
[23.98621750 53.99168015]
[28.93300056 69.00183868]
[42.43195724 75.54234314]
[55.93091583 82.08283997]
[69.42987061 88.62333679]
[79.85775757 77.84098053]
[65.03114319 73.06509399]
[58.13347626 59.50497437]
[62.77792740 45.39949036]
[55.79001236 32.12662125]
[48.80209732 18.85375404]
[41.81418228 5.58088493]
[34.82626724 -7.69198370]
[27.83835411 -20.96485329]
[12.67127991 -25.40730858]
[5.16123629 -39.31323624]
[9.76379967 -54.43249512]
[23.74835014 -61.79509354]
[38.81809998 -57.03293991]
[46.03244019 -42.97132874]
[41.11122131 -27.95276642]
[48.09913635 -14.67989826]
[55.08705139 -1.40702951]
[62.07496643 11.86583900]
[69.06288147 25.13870811]
[76.05079651 38.41157532]
[90.30845642 42.56545639]
[97.58427429 55.92648697]
[93.13063049 70.85307312]
[100.62958527 70.97839355]
[100.86045837 55.98017120]
[101.13079071 40.98260498]
[116.12870026 41.23308182]
[115.89790344 56.23147964]
[115.62748718 71.22904205]
[123.12644196 71.35436249]
[130.55397034 58.32240677]
[137.98149109 45.29045105]
[145.40901184 32.25849533]
[152.83654785 19.22654152]
[160.26406860 6.19458532]
[167.69158936 -6.83737040]
[175.11911011 -19.86932564]
[182.54664612 -32.90128326]
[178.13002014 -48.07589722]
[185.81019592 -61.88859177]
[201.03065491 -66.14453125]
[214.76138306 -58.31874847]
[218.85615540 -43.05413818]
[210.88565063 -29.40692520]
[195.57859802 -25.47375679]
[188.15107727 -12.44180107]
[180.72354126 0.59015441]
[173.29602051 13.62211037]
[165.86849976 26.65406609]
[158.44096375 39.68602371]
[151.01344299 52.71797943]
[143.58592224 65.74993134]
[136.15840149 78.78189087]
[148.92451477 70.90621948]
[157.00875854 58.27114868]
[168.83033752 49.03803635]
[183.04731750 44.25497818]
[198.04583740 44.46492386]
[212.12336731 49.64403915]
[223.68188477 59.20442200]
[231.40930176 72.06081390]
[234.42846680 86.75382996]
[232.39663696 101.61558533]
[225.54447937 114.95903778]
[214.64979553 125.26951599]
[200.94931030 131.37661743]
[185.99822998 132.58708191]
[171.49372864 128.76353455]
[159.08230591 120.33997345]
[150.17387390 108.27472687]
[136.91023254 101.26932526]
[145.19160461 113.77607727]
[153.47299194 126.28282166]
[161.75436401 138.78958130]
[170.03573608 151.29632568]
[178.31712341 163.80307007]
[186.59849548 176.30982971]
[194.87986755 188.81657410]
[208.74012756 182.97453308]
[223.43399048 179.77976990]
[238.46072388 179.33963013]
[253.30851746 181.66763306]
[267.47192383 186.68307495]
[280.46905518 194.21374512]
[291.85803223 204.00190735]
[301.25192261 215.71308899]
[308.33197021 228.94754028]
[312.85827637 243.25384521]
[314.67816162 258.14431763]
[313.73104858 273.11166382]
[310.05068970 287.64624023]
[303.76382446 301.25338745]
[295.08590698 313.47030640]
[284.31365967 323.88180542]
[292.59503174 336.38854980]
[300.87643433 348.89529419]
[309.15780640 361.40203857]
[317.43917847 373.90881348]
[332.94686890 374.44821167]
[345.15505981 384.02630615]
[349.36944580 398.96011353]
[343.96948242 413.50726318]
[331.03161621 422.07412720]
[315.53067017 421.36651611]
[303.42712402 411.65655518]
[299.37500000 396.67791748]
[304.93243408 382.19018555]
[296.65106201 369.68344116]
[288.36965942 357.17666626]
[280.08828735 344.66992188]
[271.80691528 332.16317749]
[258.01620483 338.01611328]
[243.38093567 341.23608398]
[228.39918518 341.71197510]
[213.58116150 339.42617798]
[199.43173218 334.45504761]
[186.43327332 326.96649170]
[175.02922058 317.21429443]
[165.60888672 305.52947998]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 146]
[8 145]
[9 144]
[10 143]
[11 142]
[12 141]
[13 140]
[14 139]
[19 53]
[20 52]
[21 51]
[22 50]
[26 43]
[27 42]
[28 41]
[29 40]
[30 39]
[31 38]
[54 67]
[55 66]
[56 65]
[57 64]
[68 91]
[71 88]
[72 87]
[73 86]
[74 85]
[75 84]
[76 83]
[98 121]
[99 120]
[100 119]
[101 118]
[102 117]
[103 116]
[104 115]
[105 114]
[106 113]
[162 179]
[163 178]
[164 177]
[165 176]
[166 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
