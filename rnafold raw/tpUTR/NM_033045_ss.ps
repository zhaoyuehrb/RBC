%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 18:38:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCCCAGCCCCAGACAGCUGCUGCCCAGAGAAGAACCAGCUCCACGGCUCCUGCUUCUGCCCCCAGGGUUCGUGGGCUCUGGGCUUGACGGUCUCCAGCUCCCCUUUCUGCCAGGAAGCCACCCCUUAGCACUCCCCCGAUUAUUCUGCCUGGCCCCAUGUCCUCUUGGAGGAUUUUUCUGCCAUGUAGAUGCUCCAUUAGCAGUUCCAGCUAAGCUGGCU\
) } def
/len { sequence length } bind def

/coor [
[77.86236572 408.02905273]
[80.32427979 388.80435181]
[80.53559113 373.80584717]
[80.74690247 358.80734253]
[80.95821381 343.80880737]
[77.91214752 337.08230591]
[81.27963257 328.60089111]
[81.70220947 313.60684204]
[82.12479401 298.61279297]
[67.41200256 292.99594116]
[55.49272919 282.66189575]
[47.82094574 268.84692383]
[45.34082031 253.21339417]
[48.37054825 237.64965820]
[56.56166077 224.04206848]
[68.93899536 214.04626465]
[84.01675415 208.88578796]
[84.22806549 193.88728333]
[84.43937683 178.88877869]
[84.65068817 163.89025879]
[84.86199951 148.89175415]
[85.07331085 133.89323425]
[85.28462219 118.89472198]
[74.56654358 108.40077972]
[59.57584763 108.92897034]
[44.58514786 109.45715332]
[29.59445000 109.98533630]
[14.60375309 110.51352692]
[-0.38694501 111.04170990]
[-15.37764263 111.56989288]
[-30.36834145 112.09808350]
[-17.90437317 120.44371033]
[-11.19918823 133.86163330]
[-12.00780678 148.83981323]
[-20.11857986 161.45787048]
[-33.40858841 168.41313171]
[-48.39929199 167.88513184]
[-61.16701126 160.01205444]
[-68.36991882 146.85461426]
[-68.12271118 131.85665894]
[-60.49009705 118.94374847]
[-47.46916199 111.49554443]
[-62.38550949 109.91361237]
[-77.30185699 108.33167267]
[-92.21820831 106.74973297]
[-107.13455963 105.16780090]
[-122.05091095 103.58586121]
[-136.96725464 102.00392151]
[-151.50646973 108.24267578]
[-163.34677124 99.20627594]
[-178.26310730 97.62433624]
[-193.17945862 96.04240417]
[-208.09580994 94.46046448]
[-223.01216125 92.87852478]
[-231.98657227 105.34270477]
[-245.99729919 111.63515472]
[-261.27554321 110.06325531]
[-273.71151733 101.04981995]
[-279.96002197 87.01943970]
[-278.34024048 71.74620056]
[-269.28787231 59.33852768]
[-255.23797607 53.13402939]
[-239.96987915 54.80168152]
[-227.59065247 63.89289474]
[-221.43022156 77.96218109]
[-206.51387024 79.54411316]
[-191.59751892 81.12605286]
[-176.68118286 82.70799255]
[-161.76483154 84.28992462]
[-148.29254150 77.93802643]
[-135.38531494 87.08757782]
[-120.46897125 88.66950989]
[-105.55261993 90.25144958]
[-90.63626862 91.83338928]
[-75.71992493 93.41532135]
[-60.80357361 94.99726105]
[-45.88722229 96.57920074]
[-30.89652634 97.10738373]
[-15.90582848 96.57920074]
[-0.91513056 96.05101013]
[14.07556725 95.52282715]
[29.06626511 94.99464417]
[44.05696106 94.46645355]
[59.04766083 93.93827057]
[74.03836060 93.41008759]
[78.81415558 87.62719727]
[64.86285400 82.11709595]
[65.79210663 67.14590454]
[80.31771088 63.40335083]
[88.36573792 76.06141663]
[93.14153290 70.27853394]
[90.82632446 55.45828247]
[88.51112366 40.63803101]
[78.73652649 28.19745827]
[84.41669464 14.42847157]
[82.10148621 -0.39177883]
[79.78628540 -15.21202946]
[67.89884186 -29.28039742]
[74.86686707 -45.39076996]
[72.34311676 -60.17693329]
[57.91181564 -65.43365479]
[48.05460358 -77.21206665]
[45.42302322 -92.34383392]
[50.72495651 -106.75858307]
[62.53420639 -116.57882690]
[77.67414856 -119.16296387]
[92.07221222 -113.81587982]
[101.85538483 -101.97589874]
[104.39205933 -86.82793427]
[98.99986267 -72.44670105]
[87.12928009 -62.70068741]
[89.65303802 -47.91452026]
[99.33573914 -40.67304230]
[101.56347656 -28.38154602]
[94.60653687 -17.52723312]
[96.92173767 -2.70698309]
[99.23694611 12.11326790]
[108.84593964 23.49379539]
[103.33137512 38.32282639]
[105.64657593 53.14307785]
[107.96178436 67.96332550]
[106.45082855 53.03961945]
[114.39125061 40.31367874]
[128.46012878 35.11109924]
[142.76985168 39.60908127]
[151.33203125 51.92528534]
[150.56355286 66.90558624]
[140.78599548 78.28096771]
[126.08985138 81.29086304]
[140.92604065 79.08010864]
[155.76223755 76.86935425]
[170.59841919 74.65859222]
[156.75892639 68.87342072]
[146.41307068 58.01232910]
[141.30679321 43.90821838]
[142.30181885 28.94125557]
[149.23023987 15.63723183]
[160.92282104 6.24129534]
[175.40635681 2.33908176]
[190.23663330 4.58911753]
[202.91094971 12.61169338]
[211.29042053 25.05294037]
[213.96092224 39.81330490]
[210.47181702 54.40186691]
[201.41191101 66.35669708]
[188.31355286 73.65926361]
[203.30424500 74.18744659]
[218.29495239 74.71563721]
[233.28564453 75.24382019]
[248.27635193 75.77200317]
[262.34042358 68.52544403]
[274.78735352 76.70610046]
[289.77804565 77.23428345]
[304.76873779 77.76247406]
[319.75942993 78.29065704]
[327.21774292 63.82548141]
[340.19241333 54.09747314]
[356.05395508 51.01467514]
[371.61532593 55.14478302]
[383.77236938 65.61138153]
[390.12295532 80.27935028]
[405.11959839 80.59629822]
[420.11624146 80.91325378]
[435.11291504 81.23020935]
[450.10955811 81.54715729]
[465.10620117 81.86411285]
[481.06954956 76.15380859]
[490.97579956 89.91254425]
[480.49707031 103.24044037]
[464.78924561 96.86076355]
[449.79260254 96.54380798]
[434.79595947 96.22686005]
[419.79928589 95.90990448]
[404.80264282 95.59294891]
[389.80599976 95.27600098]
[384.14236450 107.93559265]
[374.05072021 117.51177216]
[361.03100586 122.53563690]
[347.03598022 122.21835327]
[334.17803955 116.57480621]
[324.41058350 106.42633057]
[319.23126221 93.28135681]
[304.24053955 92.75316620]
[289.24984741 92.22498322]
[274.25915527 91.69680023]
[261.26733398 98.98114014]
[247.74815369 90.76270294]
[232.75746155 90.23451996]
[217.76676941 89.70633698]
[202.77606201 89.17814636]
[187.78536987 88.64996338]
[172.80917358 89.49478912]
[157.97299194 91.70554352]
[143.13679504 93.91629791]
[128.30061340 96.12705231]
[126.70124054 103.92609406]
[123.12016296 110.54717255]
[118.07672119 115.53703308]
[112.17700958 118.63431549]
[106.04962921 119.77971649]
[100.28313446 119.10603333]
[100.07182312 134.10455322]
[99.86051178 149.10305786]
[99.64920044 164.10157776]
[99.43788910 179.10008240]
[99.22657776 194.09858704]
[99.01526642 209.09710693]
[112.51900482 213.87449646]
[123.87095642 222.57472229]
[131.96992493 234.33714294]
[136.03544617 248.00488281]
[135.68295288 262.23864746]
[130.96012878 275.64794922]
[122.34093475 286.92687988]
[110.67813110 294.98141479]
[97.11883545 299.03536987]
[96.69625854 314.02941895]
[96.27367401 329.02346802]
[95.95672607 344.02014160]
[95.74541473 359.01864624]
[95.53410339 374.01715088]
[95.32279205 389.01565552]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 222]
[3 221]
[4 220]
[5 219]
[7 218]
[8 217]
[9 216]
[17 207]
[18 206]
[19 205]
[20 204]
[21 203]
[22 202]
[23 201]
[24 85]
[25 84]
[26 83]
[27 82]
[28 81]
[29 80]
[30 79]
[31 78]
[42 77]
[43 76]
[44 75]
[45 74]
[46 73]
[47 72]
[48 71]
[50 69]
[51 68]
[52 67]
[53 66]
[54 65]
[91 121]
[92 120]
[93 119]
[95 117]
[96 116]
[97 115]
[99 112]
[100 111]
[129 195]
[130 194]
[131 193]
[132 192]
[146 191]
[147 190]
[148 189]
[149 188]
[150 187]
[152 185]
[153 184]
[154 183]
[155 182]
[161 175]
[162 174]
[163 173]
[164 172]
[165 171]
[166 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
