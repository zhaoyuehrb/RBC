%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 21:44:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUUUGCUCCCAGGAAAGGAGAGGAAGAGCUAUAUAUAUGUGCCGACAUGUGGCAGACACACAGUAAAUAAUGGCUGACCAGCAUGAGGGCAGUACUGUCAGAAAUUUCUUUGAGCUGUGAGAUGGAUUUAUUUUUAAAUGCUACUUUGUAAAGGUGACCUUUAAAAAAUAAAAGGAAAAUAAAGAAUGUUAGUUUCA\
) } def
/len { sequence length } bind def

/coor [
[83.03770447 304.44891357]
[72.35844421 314.98236084]
[57.41812897 316.31912231]
[45.03854370 307.84884644]
[40.87237549 293.43685913]
[33.64607239 306.58148193]
[33.77803421 322.40213013]
[20.86637688 329.82763672]
[13.64007187 342.97225952]
[6.41376734 356.11685181]
[-0.70907873 369.31777954]
[-7.72802591 382.57427979]
[-2.84195900 397.60430908]
[-10.08917332 411.64901733]
[-25.17002487 416.37588501]
[-39.13731003 408.98059082]
[-43.70449066 393.85061646]
[-36.16193771 379.96228027]
[-20.98451042 375.55532837]
[-13.96556282 362.29885864]
[-13.61366653 354.90982056]
[-6.73083305 348.89053345]
[0.49547204 335.74594116]
[7.72177696 322.60134888]
[7.07293940 307.72088623]
[20.50147057 299.35516357]
[27.72777557 286.21057129]
[34.22086334 272.68872070]
[39.96111679 258.83053589]
[45.70136642 244.97235107]
[51.44161987 231.11415100]
[57.18186951 217.25596619]
[62.92212296 203.39776611]
[62.57708740 196.00842285]
[68.86290741 189.36811829]
[74.82012939 175.60180664]
[80.77735138 161.83547974]
[86.73456573 148.06916809]
[69.56328583 137.06788635]
[58.83317184 120.65826416]
[55.89236069 102.06951904]
[60.62683868 84.66830444]
[47.83723831 76.83082581]
[35.04763412 68.99334717]
[22.25803185 61.15586853]
[7.07309389 64.62796021]
[-5.78573370 56.49744797]
[-9.00226307 41.99953461]
[-21.79186630 34.16205597]
[-34.58146667 26.32457733]
[-47.37107086 18.48709869]
[-60.22183228 10.75031090]
[-73.13296509 3.11468983]
[-86.04409790 -4.52093124]
[-99.01479340 -12.05491447]
[-112.04426575 -19.48679352]
[-125.07373810 -26.91867447]
[-140.89451599 -27.03522682]
[-148.11631775 -40.06192780]
[-161.14578247 -47.49380493]
[-173.68226624 -38.78750992]
[-188.75610352 -36.39125443]
[-203.37438965 -40.78082657]
[-214.63465881 -51.08466721]
[-220.30116272 -65.25694275]
[-219.24882507 -80.48374176]
[-211.68658447 -93.74176788]
[-199.11592102 -102.39862823]
[-184.03276062 -104.73550415]
[-169.43186951 -100.28839874]
[-158.21226501 -89.94029236]
[-152.60160828 -75.74581146]
[-153.71391296 -60.52328110]
[-140.68443298 -53.09140015]
[-125.79561615 -53.50642395]
[-117.64186096 -39.94814682]
[-104.61238861 -32.51626587]
[-91.58291626 -25.08438683]
[-84.20859528 -24.50057030]
[-78.40847015 -17.43206215]
[-65.49734497 -9.79644012]
[-52.58621216 -2.16081929]
[-45.22196960 -1.46124303]
[-39.53359222 5.69749689]
[-26.74398994 13.53497505]
[-13.95438671 21.37245369]
[-1.16478467 29.20993233]
[13.21322536 25.49396515]
[26.29534912 33.26008987]
[30.09551048 48.36626434]
[42.88511276 56.20374298]
[55.67471313 64.04122162]
[68.46431732 71.87870026]
[83.41774750 52.42540359]
[110.00270081 42.35088348]
[113.73304749 27.82213402]
[117.46339417 13.29338741]
[113.40113831 -1.99741554]
[124.06050110 -12.40064812]
[127.67662811 -26.95824623]
[131.17831421 -41.54379272]
[134.67999268 -56.12934494]
[138.18167114 -70.71488953]
[141.68334961 -85.30043793]
[133.21296692 -98.64316559]
[136.73973083 -114.04892731]
[150.17124939 -122.37776184]
[165.53886414 -118.68832397]
[173.72523499 -105.16948700]
[169.87353516 -89.84174347]
[156.26889038 -81.79875946]
[152.76721191 -67.21321106]
[149.26553345 -52.62766266]
[145.76385498 -38.04211426]
[142.26217651 -23.45656586]
[143.75891113 -16.21216774]
[138.58924866 -8.67030048]
[142.91831970 5.58130932]
[131.99214172 17.02373505]
[128.26179504 31.55248260]
[124.53144073 46.08123016]
[130.42132568 50.72443390]
[139.70791626 38.94482422]
[151.48738098 48.23159790]
[142.20108032 60.01084518]
[148.09095764 64.65405273]
[156.66654968 51.35857773]
[171.53498840 52.24106598]
[184.79147339 45.22211838]
[198.04795837 38.20317078]
[211.30444336 31.18422508]
[224.56092834 24.16527748]
[232.81230164 9.99323273]
[249.20812988 10.32367897]
[256.88177490 24.81668091]
[247.93927002 38.56308365]
[231.57987976 37.42176437]
[218.32339478 44.44070816]
[205.06690979 51.45965576]
[191.81042480 58.47860336]
[178.55393982 65.49755096]
[170.92652893 78.29098511]
[155.10989380 77.91053009]
[158.49691772 92.52313232]
[173.48951721 92.99429321]
[188.48211670 93.46545410]
[203.47471619 93.93661499]
[218.46731567 94.40778351]
[233.45991516 94.87894440]
[249.48114014 89.33310699]
[259.24536133 103.19298553]
[248.63014221 116.41241455]
[232.98875427 109.87153625]
[217.99615479 109.40037537]
[203.00355530 108.92921448]
[188.01095581 108.45805359]
[173.01835632 107.98689270]
[158.02575684 107.51573181]
[149.37712097 122.32182312]
[137.47840881 132.89353943]
[150.01551819 141.12887573]
[162.55264282 149.36421204]
[175.08975220 157.59956360]
[187.62686157 165.83489990]
[202.09407043 160.22424316]
[217.08750916 164.22126770]
[226.84190369 176.28906250]
[227.60649109 191.78727722]
[219.08724976 204.75657654]
[204.56002808 210.20996094]
[189.61083984 206.05050659]
[179.98793030 193.87762451]
[179.39151001 178.37200928]
[166.85440063 170.13667297]
[154.31729126 161.90133667]
[141.78018188 153.66598511]
[129.24307251 145.43064880]
[122.05752563 147.57957458]
[129.11164856 160.81738281]
[141.36318970 169.47183228]
[144.49674988 184.14086914]
[136.85064697 197.04579163]
[122.47945404 201.34336853]
[109.00395966 194.75465393]
[103.56996155 180.77354431]
[109.05840302 166.81457520]
[107.68643188 151.87744141]
[100.50088501 154.02638245]
[94.54367065 167.79269409]
[88.58644867 181.55902100]
[82.62922668 195.32533264]
[76.78031158 209.13801575]
[71.04006195 222.99621582]
[65.29981232 236.85440063]
[59.55955887 250.71260071]
[53.81930923 264.57080078]
[48.07905960 278.42898560]
[61.92927551 272.66952515]
[76.28042603 277.03353882]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 27]
[6 26]
[8 24]
[9 23]
[10 22]
[11 20]
[12 19]
[28 197]
[29 196]
[30 195]
[31 194]
[32 193]
[33 192]
[35 191]
[36 190]
[37 189]
[38 188]
[42 93]
[43 92]
[44 91]
[45 90]
[48 87]
[49 86]
[50 85]
[51 84]
[52 82]
[53 81]
[54 80]
[55 78]
[56 77]
[57 76]
[59 74]
[60 73]
[95 121]
[96 120]
[97 119]
[99 117]
[100 115]
[101 114]
[102 113]
[103 112]
[104 111]
[126 143]
[128 141]
[129 140]
[130 139]
[131 138]
[132 137]
[144 158]
[145 157]
[146 156]
[147 155]
[148 154]
[149 153]
[160 177]
[161 176]
[162 175]
[163 174]
[164 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
