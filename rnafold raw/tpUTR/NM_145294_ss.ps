%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 15:26:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGCAGCAGGGACUGUGGUGGUGGGCAUCACGCCUGGUCAUGCCAGGCACCUGGACACAGGCUUGGCAGAGGCGCCAGGUUGUCAAUGGCCUCAUGCUGGGACAGGCCAGGAUUCACGUAAAUCGCCUGGAGCAAGCUGUUGUAAAUUUGGCGCCCUGUGAAUACUUUCAUACCUGUUGCCCUUUUGCCUAAGAAAUCUUUAAUGUUUCUAUCUUGUAAUAAACAUGGGCAUUUAUUGC\
) } def
/len { sequence length } bind def

/coor [
[188.88050842 249.69116211]
[190.01718140 239.66252136]
[193.34724426 230.12355042]
[198.71023560 221.54830933]
[188.70722961 210.37065125]
[178.70422363 199.19300842]
[168.70121765 188.01535034]
[158.69821167 176.83770752]
[148.69520569 165.66004944]
[138.69219971 154.48240662]
[128.68919373 143.30474854]
[119.56280518 149.09559631]
[109.26641083 152.94860840]
[98.21440125 154.62791443]
[86.86845398 153.98675537]
[75.71828461 150.97692871]
[66.93317413 163.13513184]
[58.14806366 175.29333496]
[49.36295319 187.45153809]
[40.57784271 199.60974121]
[31.79273224 211.76792908]
[32.91387939 227.77175903]
[21.00358963 238.52000427]
[5.19841957 235.76751709]
[-2.37725687 221.62577820]
[4.08797026 206.94313049]
[19.63453102 202.98281860]
[28.41964340 190.82463074]
[37.20475388 178.66642761]
[45.98986435 166.50822449]
[54.77497482 154.35002136]
[63.56008530 142.19181824]
[53.63014603 130.94921875]
[40.47989655 138.16523743]
[27.32964706 145.38125610]
[14.17939949 152.59727478]
[1.02915156 159.81330872]
[-12.12109661 167.02932739]
[-25.27134514 174.24534607]
[-36.24854660 187.16577148]
[-51.70282745 180.19429016]
[-49.28197098 163.41407776]
[-32.48736572 161.09509277]
[-19.33711815 153.87907410]
[-6.18687057 146.66305542]
[6.96337795 139.44703674]
[20.11362648 132.23100281]
[33.26387405 125.01498413]
[46.41412354 117.79896545]
[47.93092346 115.06707764]
[49.57598114 112.48158264]
[34.64761353 113.94575500]
[19.71924400 115.40993500]
[4.79087496 116.87410736]
[-8.22075748 126.85556793]
[-23.26512718 120.32877350]
[-24.86587524 104.00794220]
[-11.37629128 94.68253326]
[3.32669902 101.94573975]
[18.25506783 100.48156738]
[33.18343735 99.01738739]
[48.11180496 97.55321503]
[58.49835587 68.75923920]
[83.29579163 50.81320190]
[80.57347870 36.06230545]
[70.46010590 23.89553452]
[75.75907135 9.97539616]
[73.03675079 -4.77550173]
[70.31443787 -19.52639961]
[67.59211731 -34.27729797]
[62.96589279 -42.12955093]
[64.93177032 -49.23814011]
[62.40196609 -64.02326965]
[59.87216187 -78.80840302]
[57.34235764 -93.59352875]
[54.81255722 -108.37866211]
[52.28275299 -123.16379547]
[49.75294876 -137.94892883]
[47.22314453 -152.73405457]
[44.69334030 -167.51918030]
[42.16353989 -182.30432129]
[39.63373566 -197.08944702]
[27.01760101 -206.22569275]
[24.66263962 -221.25595093]
[33.45040131 -233.22720337]
[30.92059708 -248.01232910]
[28.39079285 -262.79745483]
[25.86098862 -277.58261108]
[23.33118629 -292.36773682]
[20.80138206 -307.15286255]
[18.27157974 -321.93798828]
[9.95037174 -326.29537964]
[4.63595152 -333.87329102]
[3.41070628 -342.90893555]
[6.42314863 -351.36962891]
[12.88252449 -357.41000366]
[10.93270969 -372.28271484]
[8.98289394 -387.15545654]
[7.03307915 -402.02819824]
[-1.11140454 -406.70758057]
[-6.12548828 -414.48748779]
[-6.99653053 -423.56411743]
[-3.65560389 -431.90054321]
[3.03499341 -437.68377686]
[1.66814852 -452.62136841]
[0.30130351 -467.55895996]
[-1.06554151 -482.49655151]
[-2.43238640 -497.43414307]
[-5.41993380 -501.66537476]
[-6.40141916 -506.16921997]
[-5.60634661 -510.14068604]
[-3.54892540 -512.98065186]
[-4.33071041 -527.96026611]
[-5.11249495 -542.93988037]
[-5.89427996 -557.91949463]
[-17.80312729 -568.30963135]
[-18.79364967 -584.08288574]
[-8.27818966 -595.88122559]
[7.50461960 -596.70489502]
[19.19111633 -586.06530762]
[19.84790802 -570.27465820]
[9.08533287 -558.70129395]
[9.86711788 -543.72167969]
[10.64890289 -528.74206543]
[11.43068790 -513.76245117]
[12.50520802 -498.80099487]
[13.87205315 -483.86340332]
[15.23889828 -468.92581177]
[16.60574341 -453.98822021]
[17.97258759 -439.05062866]
[31.28108406 -423.26190186]
[21.90581322 -403.97799683]
[23.85562897 -389.10528564]
[25.80544281 -374.23254395]
[27.75525856 -359.35980225]
[41.67087173 -344.10348511]
[33.05670929 -324.46780396]
[35.58651352 -309.68264771]
[38.11631775 -294.89752197]
[40.64612198 -280.11239624]
[43.17592239 -265.32727051]
[45.70572662 -250.54214478]
[48.23553085 -235.75700378]
[60.50351715 -227.38848877]
[63.27971649 -212.43029785]
[54.41886520 -199.61924744]
[56.94866943 -184.83412170]
[59.47847366 -170.04899597]
[62.00827789 -155.26385498]
[64.53807831 -140.47872925]
[67.06788635 -125.69359589]
[69.59768677 -110.90846252]
[72.12748718 -96.12333679]
[74.65729523 -81.33820343]
[77.18709564 -66.55307007]
[79.71690369 -51.76794434]
[82.34301758 -36.99961472]
[85.06533051 -22.24871635]
[87.78765106 -7.49781847]
[90.50996399 7.25307941]
[100.42861938 18.36476707]
[95.32437134 33.33998871]
[98.04669189 48.09088516]
[108.88414764 48.81949997]
[119.33316040 51.78588867]
[128.93685913 56.86035156]
[137.27536011 63.82101059]
[143.98405457 72.36353302]
[148.76963806 82.11441040]
[151.42285156 92.64730072]
[151.82769775 103.50167084]
[149.96646118 114.20294189]
[145.92054749 124.28321838]
[139.86683655 133.30174255]
[149.86985779 144.47940063]
[159.87286377 155.65704346]
[169.87586975 166.83470154]
[179.87887573 178.01234436]
[189.88188171 189.19000244]
[199.88488770 200.36764526]
[209.88789368 211.54528809]
[229.15750122 204.88136292]
[249.35437012 207.31320190]
[266.41305542 218.31025696]
[276.91778564 235.62197876]
[278.78631592 255.73835754]
[271.68267822 274.60150146]
[282.66259766 284.82113647]
[293.64254761 295.04077148]
[304.62246704 305.26043701]
[315.60241699 315.48007202]
[326.58233643 325.69970703]
[338.50738525 334.79876709]
[351.26367188 342.69036865]
[364.01995850 350.58197021]
[376.77624512 358.47354126]
[389.53253174 366.36514282]
[402.28881836 374.25674438]
[417.08151245 369.18624878]
[431.65396118 374.85876465]
[439.12548828 388.59594727]
[435.96829224 403.91149902]
[423.67306519 413.57388306]
[408.04525757 413.02081299]
[396.46383667 402.51345825]
[394.39721680 387.01303101]
[381.64093018 379.12142944]
[368.88464355 371.22982788]
[356.12835693 363.33825684]
[343.37207031 355.44665527]
[330.61581421 347.55505371]
[338.03616333 360.59109497]
[340.30947876 375.41781616]
[337.13562012 390.07821655]
[328.93353271 402.63711548]
[316.78588867 411.43679810]
[302.29614258 415.31579590]
[287.37683105 413.76202393]
[273.99725342 406.98065186]
[263.92349243 395.86669922]
[258.48522949 381.88723755]
[258.40029907 366.88748169]
[263.67990112 352.84735107]
[273.62716675 341.62005615]
[286.92904663 334.68756104]
[301.82983398 332.96496582]
[316.36270142 336.67962646]
[305.38275146 326.45999146]
[294.40283203 316.24035645]
[283.42291260 306.02072144]
[272.44296265 295.80105591]
[261.46304321 285.58142090]
[252.93124390 290.77117920]
[243.45280457 293.94882202]
[233.49569702 294.95245361]
[223.55261230 293.72775269]
[214.11659241 290.33062744]
[205.65663147 284.92492676]
[198.59426880 277.77444458]
[193.28263855 269.22998047]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 181]
[5 180]
[6 179]
[7 178]
[8 177]
[9 176]
[10 175]
[11 174]
[16 32]
[17 31]
[18 30]
[19 29]
[20 28]
[21 27]
[33 49]
[34 48]
[35 47]
[36 46]
[37 45]
[38 44]
[39 43]
[51 62]
[52 61]
[53 60]
[54 59]
[64 163]
[65 162]
[67 160]
[68 159]
[69 158]
[70 157]
[72 156]
[73 155]
[74 154]
[75 153]
[76 152]
[77 151]
[78 150]
[79 149]
[80 148]
[81 147]
[82 146]
[85 143]
[86 142]
[87 141]
[88 140]
[89 139]
[90 138]
[91 137]
[96 135]
[97 134]
[98 133]
[99 132]
[104 130]
[105 129]
[106 128]
[107 127]
[108 126]
[112 125]
[113 124]
[114 123]
[115 122]
[187 232]
[188 231]
[189 230]
[190 229]
[191 228]
[192 227]
[193 211]
[194 210]
[195 209]
[196 208]
[197 207]
[198 206]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
