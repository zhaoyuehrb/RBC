%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 09:31:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGACGGGAGACAGAGUGAAGCAUCAACCUACUUAGAAGCUGAAACGUGGGUAAGGAUUUAGCAUGCUGGAAAUAAUAGACAGCAAUCAAACGAAGACACUGUUCCCAGCUACCAGCUAUGCCAAACCUUGGCAUUUUUGGUAUUUUUGUGUAUAAGCUUUUAAGGUCUGACUGACAAAUUCUGUAUUAAGGUGUCAUAGCUAUGACAUUUGUUAAAAAUAAACUCUGCACUUAUUUUGAUUUGA\
) } def
/len { sequence length } bind def

/coor [
[369.19927979 633.16094971]
[379.35516357 621.90777588]
[392.74880981 614.80950928]
[390.65704346 599.95605469]
[377.43923950 593.14221191]
[370.68838501 579.69268799]
[373.18072510 564.67132568]
[384.16720581 553.87298584]
[382.07540894 539.01959229]
[379.98361206 524.16613770]
[377.89181519 509.31271362]
[372.30615234 495.39147949]
[363.55120850 483.21154785]
[354.79629517 471.03158569]
[346.04135132 458.85162354]
[337.28643799 446.67169189]
[328.53152466 434.49172974]
[319.77658081 422.31176758]
[304.96951294 423.92916870]
[291.24966431 417.87759399]
[282.34210205 405.69064331]
[280.71997070 390.58218384]
[286.91842651 376.59909058]
[278.16348267 364.41915894]
[269.33126831 352.29510498]
[260.42214966 340.22750854]
[251.51301575 328.15988159]
[242.52732849 316.14916992]
[233.46543884 304.19583130]
[224.40354919 292.24249268]
[215.34164429 280.28918457]
[211.94129944 279.44461060]
[208.77587891 276.92486572]
[206.62211609 272.85574341]
[206.17245483 267.70254517]
[197.57315063 255.41223145]
[188.97384644 243.12191772]
[180.37454224 230.83158875]
[171.77523804 218.54127502]
[163.17593384 206.25096130]
[154.57662964 193.96063232]
[145.97731018 181.67031860]
[131.10682678 181.59043884]
[118.99148560 172.66394043]
[114.40183258 158.14537048]
[119.29780579 143.53936768]
[110.69850159 131.24903870]
[102.09919739 118.95872498]
[61.39091492 115.02632904]
[47.81201553 108.65345764]
[34.23311996 102.28057861]
[20.65422249 95.90770721]
[4.29968262 102.14822388]
[-11.19778633 94.76444244]
[-16.44336700 78.77440643]
[-30.10222054 72.57474518]
[-44.74276733 77.89378357]
[-58.50646973 71.41188049]
[-63.48713303 57.42157745]
[-77.14598846 51.22192001]
[-90.80484009 45.02226639]
[-106.43446350 57.41267014]
[-126.11840820 60.09373093]
[-144.34614563 52.39659500]
[-156.05644226 36.54640198]
[-158.04263306 17.01972961]
[-172.06788635 11.70065689]
[-186.09312439 6.38158369]
[-200.11836243 1.06251025]
[-214.14361572 -4.25656319]
[-225.55755615 5.94051933]
[-240.40573120 9.65401459]
[-255.27615356 6.03058815]
[-266.75170898 -4.09712219]
[-272.19537354 -18.40184402]
[-270.35626221 -33.59645462]
[-261.65695190 -46.18934631]
[-248.09652710 -53.28676605]
[-232.79104614 -53.25777435]
[-219.25759888 -46.10903549]
[-210.60607910 -33.48327637]
[-208.82453918 -18.28180695]
[-194.79928589 -12.96273327]
[-180.77404785 -7.64366007]
[-166.74880981 -2.32458687]
[-152.72355652 2.99448657]
[-146.05622864 -4.93432665]
[-137.43888855 -10.72190285]
[-127.53716278 -13.90722847]
[-117.11974335 -14.23082733]
[-106.99873352 -11.65586472]
[-97.96636200 -6.37192106]
[-90.73292542 1.21891546]
[-85.87097168 10.53262901]
[-83.76998138 20.84819794]
[-84.60518646 31.36341286]
[-70.94633484 37.56306839]
[-57.28747940 43.76272202]
[-43.47778320 38.30123138]
[-29.53744888 44.39398575]
[-23.90256500 58.91589355]
[-10.24371147 65.11554718]
[1.05244863 58.94533157]
[14.03458118 60.42266464]
[23.94633675 69.23143768]
[27.02709770 82.32880402]
[40.60599518 88.70168304]
[54.18489075 95.07456207]
[67.76378632 101.44743347]
[74.31391144 97.79422760]
[87.41414642 90.48780823]
[93.96426392 86.83459473]
[95.67758179 71.93276978]
[97.39089966 57.03093719]
[99.10421753 42.12910461]
[100.81753540 27.22727585]
[102.53085327 12.32544518]
[92.97924042 0.02079453]
[94.92906952 -15.06737328]
[106.71853638 -24.09754753]
[108.43185425 -38.99937820]
[110.14517212 -53.90120697]
[111.85848999 -68.80303955]
[113.57180786 -83.70487213]
[115.28512573 -98.60669708]
[116.99843597 -113.50852966]
[112.80083466 -129.93461609]
[127.42297363 -138.51538086]
[139.71620178 -126.84006500]
[131.90026855 -111.79521179]
[130.18695068 -96.89337921]
[128.47363281 -81.99155426]
[126.76031494 -67.08972168]
[125.04699707 -52.18789291]
[123.33368683 -37.28606033]
[121.62036896 -22.38423157]
[131.05284119 -10.91409302]
[129.52757263 4.22288847]
[117.43268585 14.03876305]
[115.71936798 28.94059372]
[114.00605011 43.84242249]
[112.29273224 58.74425507]
[110.57941437 73.64608002]
[108.86609650 88.54791260]
[118.39799500 76.96590424]
[133.23573303 74.76558685]
[145.71856689 83.08298492]
[149.40156555 97.62380981]
[142.38319397 110.88059998]
[128.28704834 116.00884247]
[114.38951874 110.35942078]
[122.98882294 122.64974213]
[131.58813477 134.94006348]
[146.98753357 135.34577942]
[159.05419922 144.63281250]
[163.28848267 159.07354736]
[158.26763916 173.07101440]
[166.86694336 185.36132812]
[175.46624756 197.65165710]
[184.06555176 209.94197083]
[192.66485596 222.23228455]
[201.26416016 234.52261353]
[209.86346436 246.81292725]
[218.46276855 259.10324097]
[227.29498291 271.22726440]
[236.35687256 283.18060303]
[245.41876221 295.13394165]
[254.48065186 307.08728027]
[262.13980103 312.02011108]
[263.58062744 319.25076294]
[272.48977661 331.31835938]
[281.39889526 343.38598633]
[288.99468994 348.41583252]
[290.34344482 355.66421509]
[299.09835815 367.84417725]
[314.32772827 366.42498779]
[328.13153076 372.77731323]
[336.84445190 385.10415649]
[338.20831299 400.03720093]
[331.95654297 413.55685425]
[340.71145630 425.73678589]
[349.46640015 437.91674805]
[358.22131348 450.09671021]
[366.97625732 462.27667236]
[375.73117065 474.45660400]
[384.48608398 486.63656616]
[388.44885254 480.88565063]
[394.68338013 476.24401855]
[402.84725952 473.40789795]
[412.40853882 472.96777344]
[422.67733765 475.36053467]
[436.41394043 481.38595581]
[450.15054321 487.41140747]
[463.88714600 493.43682861]
[477.62371826 499.46224976]
[491.36032104 505.48770142]
[505.09692383 511.51312256]
[518.83355713 517.53857422]
[532.57012939 523.56396484]
[548.80133057 521.22314453]
[558.73022461 534.27496338]
[552.14276123 549.29284668]
[535.81555176 550.82769775]
[526.54467773 537.30059814]
[512.80810547 531.27514648]
[499.07150269 525.24969482]
[485.33489990 519.22430420]
[471.59829712 513.19885254]
[457.86169434 507.17343140]
[444.12509155 501.14797974]
[430.38848877 495.12255859]
[416.65188599 489.09713745]
[410.67523193 493.62808228]
[419.84149170 505.50155640]
[429.00775146 517.37506104]
[438.17401123 529.24853516]
[451.87817383 535.34735107]
[453.59872437 550.24835205]
[441.64501953 559.30975342]
[427.76284790 553.62774658]
[425.59240723 538.78674316]
[416.63558960 526.75445557]
[407.67874146 514.72222900]
[398.72189331 502.68997192]
[392.74523926 507.22091675]
[394.83703613 522.07434082]
[396.92883301 536.92779541]
[399.02062988 551.78118896]
[412.56207275 559.12530518]
[419.10607910 572.87408447]
[416.33230591 587.66497803]
[405.51046753 597.86425781]
[407.60226440 612.71771240]
[422.43539429 615.84082031]
[435.30416870 623.85144043]
[444.65463257 635.78228760]
[449.35766602 650.19256592]
[448.84533691 665.34228516]
[443.17950439 679.40197754]
[433.04440308 690.67382812]
[419.66381836 697.79675293]
[404.65359497 699.91064453]
[389.82623291 696.76019287]
[376.97222900 688.72589111]
[367.64376831 676.77783203]
[362.96731567 662.35888672]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 233]
[4 232]
[8 228]
[9 227]
[10 226]
[11 225]
[12 186]
[13 185]
[14 184]
[15 183]
[16 182]
[17 181]
[18 180]
[23 175]
[24 174]
[25 172]
[26 171]
[27 170]
[28 168]
[29 167]
[30 166]
[31 165]
[35 164]
[36 163]
[37 162]
[38 161]
[39 160]
[40 159]
[41 158]
[42 157]
[46 153]
[47 152]
[48 151]
[49 109]
[50 108]
[51 107]
[52 106]
[55 102]
[56 101]
[59 98]
[60 97]
[61 96]
[66 86]
[67 85]
[68 84]
[69 83]
[70 82]
[112 144]
[113 143]
[114 142]
[115 141]
[116 140]
[117 139]
[120 136]
[121 135]
[122 134]
[123 133]
[124 132]
[125 131]
[126 130]
[191 212]
[192 211]
[193 210]
[194 209]
[195 208]
[196 207]
[197 206]
[198 205]
[199 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
