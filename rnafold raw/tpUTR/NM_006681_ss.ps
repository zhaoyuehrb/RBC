%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 00:18:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGGAUGCCAGCUAAUUUUCCACAGAGCAAUGCUAUGGAAUACAAAAUGUACUGACAUUUUGUUUUCUUCUGAAAAAAAUCCUUGCUAAAUGUACUCUGUUGAAAAUCCCUGUGUUGUCAAUGUUCUCAGUUGUAACAAUGUUGUAAAUGUUCAAUUUGUUGAAAAUUAAAAAAUCUAAAAAUAUU\
) } def
/len { sequence length } bind def

/coor [
[56.27244568 238.40222168]
[63.70812988 225.02427673]
[76.51549530 216.64395142]
[75.01406097 201.71928406]
[73.51261902 186.79461670]
[72.01118469 171.86994934]
[70.50975037 156.94528198]
[63.10808182 126.75471497]
[73.33734131 104.35611725]
[91.92669678 97.47115326]
[78.65383148 90.48323822]
[65.38095856 83.49532318]
[53.04972076 88.94290924]
[40.02384186 86.32563019]
[31.02174187 76.82038116]
[29.17204475 64.05692291]
[16.01779556 56.84819412]
[2.86354637 49.63946915]
[-10.29070282 42.43074036]
[-23.44495201 35.22201538]
[-36.59920120 28.01329041]
[-52.41966629 28.16640282]
[-59.86244202 15.26468372]
[-73.01669312 8.05595779]
[-86.17093658 0.84723121]
[-99.32518768 -6.36149502]
[-112.47943878 -13.57022190]
[-125.63368225 -20.77894783]
[-114.33576965 -10.91198158]
[-108.85421753 3.05056310]
[-110.42188263 17.96842003]
[-118.68617249 30.48646736]
[-131.78839111 37.78931808]
[-146.78178406 38.23450851]
[-160.29423523 31.72192192]
[-169.28669739 19.71627235]
[-171.73672485 4.91771221]
[-167.09397888 -9.34432888]
[-181.74142456 -12.57732582]
[-196.38887024 -15.81032372]
[-211.03631592 -19.04332161]
[-226.17977905 -14.46226883]
[-236.94027710 -24.76086426]
[-251.58772278 -27.99386215]
[-266.23516846 -31.22686005]
[-280.88262939 -34.45985794]
[-295.53005981 -37.69285583]
[-310.17752075 -40.92585373]
[-324.82495117 -44.15884781]
[-339.47241211 -47.39184570]
[-354.11987305 -50.62484360]
[-369.58370972 -45.16580963]
[-381.86569214 -56.03251648]
[-378.33111572 -72.04622650]
[-362.61608887 -76.73340607]
[-350.88687134 -65.27229309]
[-336.23941040 -62.03929520]
[-321.59197998 -58.80629730]
[-306.94451904 -55.57329941]
[-292.29705811 -52.34030151]
[-277.64962769 -49.10730362]
[-263.00216675 -45.87430573]
[-248.35472107 -42.64131165]
[-233.70727539 -39.40831375]
[-219.61149597 -44.22061157]
[-207.80331421 -33.69076920]
[-193.15586853 -30.45777130]
[-178.50842285 -27.22477341]
[-163.86097717 -23.99177742]
[-158.34082031 -29.06896210]
[-169.64517212 -38.92854309]
[-180.94953918 -48.78812790]
[-192.25390625 -58.64770889]
[-203.55827332 -68.50729370]
[-217.10319519 -74.95204163]
[-222.17820740 -89.06742859]
[-215.83802795 -102.66162109]
[-201.76216125 -107.84525299]
[-188.11952209 -101.61001587]
[-182.82757568 -87.57440186]
[-173.94580078 -75.48663330]
[-165.06404114 -63.39886475]
[-156.18226624 -51.31110001]
[-147.30049133 -39.22333145]
[-141.78033447 -44.30051422]
[-143.77963257 -59.16667938]
[-145.77893066 -74.03283691]
[-157.61042786 -84.86775970]
[-156.37245178 -100.86297607]
[-143.01467896 -109.74832916]
[-127.78405762 -104.70774078]
[-122.36420441 -89.60791016]
[-130.91278076 -76.03214264]
[-128.91346741 -61.16598129]
[-126.91416931 -46.29981995]
[-118.42495728 -33.93319702]
[-105.27071381 -26.72447014]
[-92.11646271 -19.51574326]
[-78.96221161 -12.30701733]
[-65.80796051 -5.09829140]
[-52.65371323 2.11043501]
[-37.77412796 1.44170463]
[-29.39047432 14.85904026]
[-16.23622513 22.06776619]
[-3.08197641 29.27649307]
[10.07227230 36.48521805]
[23.22652245 43.69394684]
[36.38077164 50.90267181]
[52.29797363 45.50082779]
[67.50084686 53.42992401]
[72.36887360 70.22245026]
[85.64174652 77.21036530]
[98.91461182 84.19828033]
[113.91461182 84.19828033]
[127.18748474 77.21036530]
[140.46035767 70.22245026]
[153.73321533 63.23453903]
[167.00608826 56.24662399]
[173.15699768 49.46600342]
[180.55964661 49.25493622]
[193.94741821 42.48978424]
[207.33520508 35.72463226]
[220.72299194 28.95948029]
[224.11518860 13.69425869]
[236.55743408 4.22196388]
[252.17489624 5.01512432]
[263.59347534 15.69923401]
[265.42166138 31.22958183]
[256.79626465 44.27321625]
[241.78990173 48.67132568]
[227.48814392 42.34726334]
[214.10035706 49.11241531]
[200.71257019 55.87756729]
[187.32479858 62.64271927]
[173.99400330 69.51949310]
[160.72113037 76.50740814]
[147.44827271 83.49532318]
[134.17539978 90.48323822]
[120.90252686 97.47115326]
[120.52669525 104.96173096]
[135.52491760 105.19261169]
[149.05227661 98.71105957]
[161.54086304 107.01981354]
[160.78892517 122.00095367]
[147.53112793 129.01742554]
[134.72103882 121.21441650]
[119.77503204 119.94288635]
[119.39920044 127.43346405]
[131.90596008 135.71484375]
[144.41270447 143.99621582]
[160.19075012 145.16394043]
[166.53083801 158.64179993]
[179.03759766 166.92317200]
[191.54434204 175.20455933]
[204.05110168 183.48593140]
[216.55784607 191.76730347]
[232.95043945 192.23088074]
[240.50614929 206.78570557]
[231.45231628 220.45904541]
[215.10273743 219.18492126]
[208.27647400 204.27406311]
[195.76971436 195.99267578]
[183.26296997 187.71130371]
[170.75621033 179.42993164]
[158.24946594 171.14854431]
[143.36598206 170.57316589]
[136.13133240 156.50296021]
[123.62458038 148.22158813]
[111.11782837 139.94021606]
[104.69697571 143.81611633]
[116.03768158 153.63388062]
[110.20487976 167.45336914]
[95.25932312 166.17648315]
[91.85527039 151.56793213]
[85.43441772 155.44384766]
[86.93585205 170.36851501]
[88.43728638 185.29318237]
[89.93872833 200.21784973]
[91.44016266 215.14251709]
[105.66013336 220.80387878]
[115.61151886 232.43264771]
[119.00756073 247.35664368]
[115.06787872 262.14642334]
[104.69777679 273.40341187]
[90.28023529 278.54080200]
[75.12828827 276.37811279]
[62.72375488 267.41229248]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 179]
[4 178]
[5 177]
[6 176]
[7 175]
[10 113]
[11 112]
[12 111]
[16 108]
[17 107]
[18 106]
[19 105]
[20 104]
[21 103]
[23 101]
[24 100]
[25 99]
[26 98]
[27 97]
[28 96]
[38 69]
[39 68]
[40 67]
[41 66]
[43 64]
[44 63]
[45 62]
[46 61]
[47 60]
[48 59]
[49 58]
[50 57]
[51 56]
[85 95]
[86 94]
[87 93]
[114 139]
[115 138]
[116 137]
[117 136]
[118 135]
[120 134]
[121 133]
[122 132]
[123 131]
[148 169]
[149 168]
[150 167]
[152 165]
[153 164]
[154 163]
[155 162]
[156 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
