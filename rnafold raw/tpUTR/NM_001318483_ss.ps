%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 01:36:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCCAUAGGUGUGGCAACUACUGCCUCUGUCUAAUCCAUUUCCAGAUGGGAAGGUGUCCCAUCCUAUGGCUGAGCAGCUCUCCUUAAGAGUGCUAAUCCGAUUUCCUGUCUCCCGCAGACUGGGCAAUUCUCAGACUGGUAGAUGAGAAGAGAUGGAAGAGAAGAAAGGAGAGCAUGAAGCUUGUUUUUACUUAUGCAUUUAUUUCCACAGAGUCGUAAUGACAGCAAAAGCUCCUACCAGUUUGAAGAU\
) } def
/len { sequence length } bind def

/coor [
[92.62435913 138.60971069]
[82.93867493 135.41215515]
[74.40178680 129.83020020]
[62.64094543 139.14054871]
[50.88010406 148.45089722]
[39.11926270 157.76124573]
[27.35842133 167.07159424]
[15.59757805 176.38194275]
[3.83673644 185.69229126]
[-7.86561012 195.07606506]
[-19.50900269 204.53288269]
[-25.34304237 219.23915100]
[-40.10029984 221.25723267]
[-51.74369049 230.71405029]
[-63.38708496 240.17086792]
[-75.03047943 249.62768555]
[-80.86451721 264.33395386]
[-95.62177277 266.35202026]
[-107.26516724 275.80883789]
[-109.96116638 281.79989624]
[-114.57707977 285.05899048]
[-119.32040405 285.35226440]
[-125.52071381 299.90789795]
[-140.32386780 301.55596924]
[-152.20031738 310.71838379]
[-164.01918030 319.95495605]
[-175.78002930 329.26528931]
[-187.54087830 338.57565308]
[-199.30171204 347.88598633]
[-195.48219299 362.62814331]
[-197.99545288 377.64825439]
[-206.40606689 390.34396362]
[-219.25685120 398.51568604]
[-234.32133484 400.74765015]
[-248.98947144 396.65310669]
[-260.71997070 386.94146729]
[-267.48040771 373.29534912]
[-268.09948730 358.07904053]
[-262.47000122 343.92880249]
[-251.56726074 333.29629517]
[-237.28022766 328.02368164]
[-222.08422852 329.02441406]
[-208.61206055 336.12515259]
[-196.85122681 326.81478882]
[-185.09037781 317.50445557]
[-173.32952881 308.19409180]
[-170.04444885 301.59545898]
[-161.36273193 298.84191895]
[-149.48628235 289.67950439]
[-144.13545227 275.77923584]
[-128.48283386 273.47579956]
[-116.72198486 264.16546631]
[-105.07859039 254.70863342]
[-100.07736969 240.67877197]
[-84.48729706 237.98428345]
[-72.84390259 228.52746582]
[-61.20051193 219.07064819]
[-49.55711746 209.61383057]
[-44.55589294 195.58396912]
[-28.96582031 192.88948059]
[-17.32242775 183.43266296]
[-14.12018108 176.79344177]
[-5.47361231 173.93145752]
[6.28722954 164.62110901]
[18.04807091 155.31076050]
[29.80891418 146.00041199]
[41.56975555 136.69006348]
[53.33059692 127.37970734]
[65.09143829 118.06935883]
[60.06210327 111.90957642]
[56.18503189 104.48334503]
[53.75931168 96.01963806]
[53.03614044 86.81487274]
[40.01458359 79.36913300]
[26.99302483 71.92339325]
[13.97146606 64.47766113]
[4.99399853 62.94169235]
[0.83436441 56.85636520]
[-12.09298325 49.24823380]
[-25.02033234 41.64010239]
[-37.94768143 34.03196716]
[-53.77622986 36.64664459]
[-65.59242249 25.79504776]
[-64.33188629 9.80159283]
[-50.96159363 0.93509078]
[-35.73809052 5.99716282]
[-30.33954811 21.10462189]
[-17.41219902 28.71275330]
[-4.48485136 36.32088470]
[8.44249630 43.92901611]
[21.41720390 51.45610046]
[34.43876266 58.90183640]
[47.46031952 66.34757233]
[60.48188019 73.79331207]
[66.39131927 69.17502594]
[53.95460129 60.78884506]
[58.08720398 46.36935806]
[73.07799530 45.84385300]
[78.21019745 59.93846512]
[84.11963654 55.32017899]
[80.04125214 40.88526535]
[75.96286774 26.45034790]
[71.88448334 12.01543331]
[67.71585083 -2.39367723]
[63.45711899 -16.77641678]
[59.19838715 -31.15915871]
[47.86140442 -42.19470596]
[51.66683960 -56.59498215]
[47.40811157 -70.97772217]
[43.14937973 -85.36045837]
[38.89065170 -99.74320221]
[25.53550148 -108.63249207]
[24.30224419 -124.62807465]
[36.13692474 -135.45950317]
[51.96099472 -132.81784058]
[59.63557816 -118.72953033]
[53.27339172 -104.00193024]
[57.53211975 -89.61919403]
[61.79085159 -75.23645020]
[66.04958344 -60.85371017]
[77.08195496 -50.84691238]
[73.58113098 -35.41788864]
[77.83985901 -21.03514671]
[82.09858704 -6.65240717]
[86.99838257 -1.14552104]
[86.31940460 7.93705034]
[90.39778137 22.37196732]
[94.47616577 36.80688095]
[98.55455017 51.24179840]
[127.61623383 65.68972015]
[138.63192749 92.74162292]
[153.63162231 92.83549500]
[168.63133240 92.92936707]
[183.63104248 93.02323914]
[198.63075256 93.11711121]
[213.63044739 93.21097565]
[228.63015747 93.30484772]
[243.62986755 93.39871979]
[258.62957764 93.49259186]
[273.62927246 93.58646393]
[288.62899780 93.68033600]
[303.62869263 93.77420807]
[319.65570068 67.98325348]
[361.01940918 74.61716461]
[375.31967163 70.08917236]
[382.53366089 64.52927399]
[389.82733154 65.59521484]
[404.18313599 61.24655914]
[418.53894043 56.89790344]
[432.89474487 52.54924774]
[447.22305298 48.11083603]
[461.52331543 43.58284378]
[475.82354736 39.05485153]
[490.12380981 34.52686310]
[504.42407227 29.99886894]
[515.24481201 18.45670700]
[529.71398926 21.99113274]
[540.53479004 10.44897079]
[555.00396729 13.98339653]
[569.30419922 9.45540428]
[583.60449219 4.92741251]
[594.42523193 -6.61474943]
[608.89440918 -3.08032417]
[623.19470215 -7.60831594]
[637.49493408 -12.13630772]
[651.79516602 -16.66429901]
[666.09545898 -21.19229126]
[676.91619873 -32.73445511]
[691.38537598 -29.20002747]
[705.68566895 -33.72801971]
[719.98590088 -38.25601196]
[723.92041016 -53.17322159]
[735.31060791 -63.57835388]
[750.52191162 -66.15117645]
[764.70050049 -60.07070160]
[773.32196045 -47.27719498]
[773.63525391 -31.85301399]
[765.54040527 -18.71995735]
[751.62048340 -12.06873894]
[736.31726074 -14.02173710]
[724.51391602 -23.95575714]
[710.21362305 -19.42776489]
[695.91339111 -14.89977264]
[686.11547852 -3.68148303]
[670.62341309 -6.89203644]
[656.32318115 -2.36404467]
[642.02294922 2.16394734]
[627.72265625 6.69193888]
[613.42242432 11.21993065]
[603.62451172 22.43822098]
[588.13244629 19.22766685]
[573.83221436 23.75565910]
[559.53198242 28.28365135]
[549.73400879 39.50194168]
[534.24200439 36.29138947]
[524.44409180 47.50967789]
[508.95205688 44.29912567]
[494.65179443 48.82711792]
[480.35156250 53.35510635]
[466.05130005 57.88309860]
[451.75103760 62.41109085]
[446.33712769 67.41340637]
[437.24340820 66.90505219]
[422.88757324 71.25370789]
[408.53176880 75.60236359]
[394.17596436 79.95101929]
[379.84765625 84.38943481]
[365.54739380 88.91741943]
[363.91775513 96.23822784]
[378.55929565 99.49779510]
[375.29949951 114.13929749]
[360.65841675 110.87984467]
[359.02877808 118.20064545]
[370.05792236 128.36714172]
[381.08709717 138.53363037]
[397.11083984 139.32051086]
[406.36895752 152.42268372]
[401.75942993 167.78926086]
[386.81826782 173.63232422]
[373.00708008 165.46958923]
[370.92059326 149.56278992]
[359.89144897 139.39630127]
[348.86227417 129.22981262]
[337.33816528 138.83161926]
[345.34701538 151.51461792]
[353.35586548 164.19760132]
[368.11553955 171.34489441]
[369.03561401 187.71820068]
[355.16961670 196.47409058]
[340.78164673 188.60523987]
[340.67285156 172.20645142]
[332.66400146 159.52346802]
[324.65515137 146.84046936]
[304.95074463 129.03739929]
[303.53482056 108.77391815]
[288.53512573 108.68004608]
[273.53540039 108.58617401]
[258.53570557 108.49230194]
[243.53599548 108.39842987]
[228.53628540 108.30455780]
[213.53657532 108.21068573]
[198.53688049 108.11681366]
[183.53717041 108.02294159]
[168.53746033 107.92906952]
[153.53775024 107.83519745]
[138.53805542 107.74132538]
[135.24882507 117.39625549]
[129.58619690 125.87984467]
[121.93144226 132.62086487]
[112.79998016 137.16543579]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 69]
[4 68]
[5 67]
[6 66]
[7 65]
[8 64]
[9 63]
[10 61]
[11 60]
[13 58]
[14 57]
[15 56]
[16 55]
[18 53]
[19 52]
[22 51]
[24 49]
[25 48]
[26 46]
[27 45]
[28 44]
[29 43]
[73 94]
[74 93]
[75 92]
[76 91]
[78 90]
[79 89]
[80 88]
[81 87]
[100 129]
[101 128]
[102 127]
[103 126]
[104 124]
[105 123]
[106 122]
[108 120]
[109 119]
[110 118]
[111 117]
[131 246]
[132 245]
[133 244]
[134 243]
[135 242]
[136 241]
[137 240]
[138 239]
[139 238]
[140 237]
[141 236]
[142 235]
[144 208]
[145 207]
[147 206]
[148 205]
[149 204]
[150 203]
[151 201]
[152 200]
[153 199]
[154 198]
[155 197]
[157 195]
[159 193]
[160 192]
[161 191]
[163 189]
[164 188]
[165 187]
[166 186]
[167 185]
[169 183]
[170 182]
[171 181]
[213 223]
[214 222]
[215 221]
[224 233]
[225 232]
[226 231]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
