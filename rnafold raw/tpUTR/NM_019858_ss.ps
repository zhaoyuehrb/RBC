%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 05:24:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAAGCAGGCCUGCUGAACUCAGAGGAGAAAGCCUGAGUGAGUAACACCUCAUUCUGGCCGAGAGUAGGGCAGCUGCCUCCAGACUCUGGGGAGACGGGCGCUAGAUUUGGGGCUCAGAAGGCCCUGCUCUCUCCCAUCCAAGUGACCAGAUGCCCUACUCAGCUUCCAUCACCCCUAGCAAUAUGUAUUAAAGUCUGAAGUGUUGCCAUGG\
) } def
/len { sequence length } bind def

/coor [
[145.29214478 223.87586975]
[132.73585510 212.40240479]
[126.43885803 196.54254150]
[127.71352386 179.47047424]
[136.35157776 164.62582397]
[127.71305847 152.36303711]
[119.07453918 140.10025024]
[110.43601990 127.83747101]
[106.95950317 131.89541626]
[102.52230835 135.47279358]
[97.19896698 138.37677002]
[91.09954834 140.42716980]
[82.82303619 152.93713379]
[74.54651642 165.44711304]
[72.42239380 174.32795715]
[66.05655670 178.07818604]
[57.59813309 190.46588135]
[49.13970947 202.85357666]
[48.44303894 219.23791504]
[33.78221512 226.58586121]
[20.23903275 217.33847046]
[21.74556160 201.00866699]
[36.75201035 194.39515686]
[45.21043396 182.00746155]
[53.66885757 169.61975098]
[62.03654861 157.17059326]
[70.31306458 144.66062927]
[78.58958435 132.15065002]
[74.45132446 125.89567566]
[65.11120605 137.63288879]
[51.06220245 132.37687683]
[51.71960831 117.39128876]
[66.17480469 113.38570404]
[62.03654861 107.13072205]
[47.28606415 109.85527802]
[32.53557968 112.57982635]
[20.37034225 122.69504547]
[6.44940090 117.39819336]
[-8.30108452 120.12274170]
[-23.05156898 122.84729767]
[-37.80205536 125.57184601]
[-52.55253983 128.29640198]
[-67.30302429 131.02095032]
[-82.05351257 133.74551392]
[-90.80549622 146.90522766]
[-106.31566620 149.94001770]
[-119.38212585 141.04939270]
[-122.25276947 125.50800323]
[-113.22449493 112.53627014]
[-97.65361786 109.83010864]
[-84.77806091 118.99501801]
[-70.02758026 116.27046967]
[-55.27709198 113.54591370]
[-40.52660751 110.82136536]
[-25.77612114 108.09680939]
[-11.02563667 105.37226105]
[3.72484827 102.64770508]
[14.83503151 92.72737122]
[29.81102562 97.82934570]
[44.56151199 95.10478973]
[59.31199646 92.38024139]
[66.51738739 81.03855133]
[76.40746307 73.39035034]
[87.43088531 69.87078094]
[98.06673431 70.33355713]
[100.89898682 55.60337067]
[103.73123169 40.87318802]
[106.56347656 26.14299965]
[109.39572144 11.41281414]
[112.22796631 -3.31737137]
[115.06021881 -18.04755783]
[117.89246368 -32.77774429]
[120.72470856 -47.50793076]
[123.55695343 -62.23811722]
[118.56452942 -77.25098419]
[128.56578064 -88.28839111]
[131.39802551 -103.01857758]
[134.23027039 -117.74876404]
[125.77637482 -126.10236359]
[122.43743896 -137.38366699]
[124.93167114 -148.75862122]
[132.52676392 -157.42744446]
[143.24977112 -161.31369019]
[146.51121521 -175.95483398]
[133.77973938 -184.14840698]
[124.63687897 -196.18087769]
[120.17076111 -210.58830261]
[120.90198517 -225.62609863]
[126.72300720 -239.48023987]
[136.91348267 -250.48608398]
[150.22932434 -257.32843018]
[165.05456543 -259.19857788]
[168.31600952 -273.83972168]
[171.57746887 -288.48086548]
[174.83891296 -303.12200928]
[178.10037231 -317.76315308]
[181.36181641 -332.40429688]
[180.17327881 -341.45794678]
[184.77937317 -347.23477173]
[188.25440979 -361.82669067]
[191.72944641 -376.41860962]
[195.20448303 -391.01055908]
[183.43505859 -381.71102905]
[168.51683044 -380.14691162]
[155.07452393 -386.80303955]
[147.27529907 -399.61602783]
[147.53698730 -414.61373901]
[155.77844238 -427.14682007]
[169.44477844 -433.32998657]
[184.29936218 -431.24636841]
[195.73718262 -421.54193115]
[200.21246338 -407.22601318]
[205.57093811 -421.23626709]
[210.92939758 -435.24652100]
[216.28785706 -449.25674438]
[221.64631653 -463.26699829]
[227.00479126 -477.27722168]
[221.80082703 -492.45281982]
[230.54212952 -505.90530396]
[246.52313232 -507.31506348]
[257.48455811 -495.60070801]
[255.01774597 -479.74841309]
[241.01502991 -471.91876221]
[235.65657043 -457.90853882]
[230.29809570 -443.89828491]
[224.93963623 -429.88806152]
[219.58117676 -415.87780762]
[214.22271729 -401.86755371]
[209.79640198 -387.53552246]
[206.32136536 -372.94360352]
[202.84632874 -358.35168457]
[199.37129211 -343.75973511]
[196.00296021 -329.14282227]
[192.74151611 -314.50167847]
[189.48005676 -299.86056519]
[186.21859741 -285.21942139]
[182.95715332 -270.57827759]
[179.69569397 -255.93713379]
[192.32537842 -247.95112610]
[201.47790527 -236.10374451]
[206.03334045 -221.81311035]
[205.42350769 -206.79812622]
[199.70268250 -192.87181091]
[189.54351807 -181.72230530]
[176.15788269 -174.70828247]
[161.15235901 -172.69337463]
[157.89089966 -158.05224609]
[168.62284851 -143.21914673]
[165.03999329 -124.93908691]
[148.96044922 -114.91651917]
[146.12820435 -100.18633270]
[143.29595947 -85.45614624]
[148.49096680 -71.49687958]
[138.28713989 -59.40586853]
[135.45489502 -44.67568207]
[132.62265015 -29.94549751]
[129.79040527 -15.21531105]
[126.95815277 -0.48512489]
[124.12590790 14.24506092]
[121.29366302 28.97524643]
[118.46141815 43.70543289]
[115.62917328 58.43561935]
[112.79692078 73.16580200]
[129.06457520 93.74811554]
[122.69879913 119.19895172]
[131.33732605 131.46173096]
[139.97584534 143.72451782]
[148.61436462 155.98730469]
[161.45669556 152.89048767]
[174.55549622 154.33772278]
[186.35469055 160.13525391]
[195.46002197 169.57383728]
[200.80377197 181.51542664]
[201.76997375 194.53039551]
[198.26528931 207.06864929]
[190.72761536 217.64425659]
[199.00411987 230.15422058]
[214.38775635 230.96060181]
[226.20861816 240.55854797]
[230.06562805 255.10458374]
[224.68217468 268.96664429]
[232.95869446 281.47662354]
[241.23521423 293.98657227]
[249.51171875 306.49655151]
[257.78823853 319.00650024]
[266.06475830 331.51647949]
[274.34127808 344.02645874]
[289.16369629 340.76138306]
[304.16406250 343.07513428]
[317.31369019 350.65481567]
[326.83422852 362.47528076]
[331.43811035 376.93795776]
[330.50265503 392.08685303]
[324.15438843 405.87322998]
[313.25189209 416.43258667]
[299.26962280 422.33685303]
[284.09854126 422.78753662]
[269.79046631 417.72366333]
[258.28039551 407.83007812]
[251.12498474 394.44485474]
[249.29196167 379.37817383]
[253.02920532 364.66772461]
[261.83129883 352.30294800]
[253.55479431 339.79299927]
[245.27827454 327.28302002]
[237.00175476 314.77307129]
[228.72523499 302.26309204]
[220.44873047 289.75311279]
[212.17221069 277.24316406]
[197.30883789 276.77627563]
[185.42991638 267.53747559]
[181.21969604 252.90438843]
[186.49415588 238.43074036]
[178.21763611 225.92077637]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 168]
[6 167]
[7 166]
[8 165]
[12 28]
[13 27]
[14 26]
[16 25]
[17 24]
[18 23]
[34 61]
[35 60]
[36 59]
[38 57]
[39 56]
[40 55]
[41 54]
[42 53]
[43 52]
[44 51]
[65 163]
[66 162]
[67 161]
[68 160]
[69 159]
[70 158]
[71 157]
[72 156]
[73 155]
[74 154]
[76 152]
[77 151]
[78 150]
[83 147]
[84 146]
[92 138]
[93 137]
[94 136]
[95 135]
[96 134]
[97 133]
[99 132]
[100 131]
[101 130]
[102 129]
[112 128]
[113 127]
[114 126]
[115 125]
[116 124]
[117 123]
[176 214]
[177 213]
[181 209]
[182 208]
[183 207]
[184 206]
[185 205]
[186 204]
[187 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
