%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 14:56:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCCCACCUGGACCUUAUCAAAACUACUCACUCCACCUGGGCCCCUGCUGAAGCCCUAUUUUGAAAUUUCCCUUUUGUAGAGCUUUUUUCCUUUCCUAAGCCCUGUAAAUAAACGAAGGCACUUCUUUGGAAGGUUAUGGAGUCUGUUUGACUAGUGCUAAAGGAAACAAUUCAUGCGGAUGUAUAAAACUCGCUCUUUUUUUUUUAAUUUUUAACCUAAGCAGAAUUUUCAUAUUAAAAACUCACUUUUUUGAC\
AGAA\
) } def
/len { sequence length } bind def

/coor [
[73.33152008 277.75274658]
[74.50840759 262.79898071]
[67.03152466 262.21054077]
[59.42712784 275.14007568]
[51.82272720 288.06964111]
[44.21833038 300.99917603]
[47.96505737 316.11868286]
[40.06893158 329.12277222]
[25.63169289 332.60150146]
[18.02729416 345.53106689]
[10.42289639 358.46060181]
[2.81849861 371.39013672]
[13.02202511 382.54269409]
[19.48345947 396.20803833]
[21.62825584 411.17102051]
[19.26569939 426.10119629]
[12.60586834 439.67092896]
[2.24094939 450.67367554]
[-10.90741539 458.13101196]
[-25.67008209 461.37985229]
[-40.73436737 460.13134766]
[-54.76075745 454.49649048]
[-66.50204468 444.97631836]
[-74.91419983 432.41735840]
[-79.24921417 417.93637085]
[-79.12162018 402.82098389]
[-74.54277802 388.41522217]
[-65.91981506 376.00009155]
[-54.01949310 366.67947388]
[-39.89997864 361.28219604]
[-24.81676674 360.28814697]
[-10.11104584 363.78573608]
[-2.50664854 350.85620117]
[5.09774923 337.92666626]
[12.70214748 324.99710083]
[8.72620964 310.68881226]
[16.25396347 297.46807861]
[31.28878593 293.39477539]
[38.89318466 280.46524048]
[46.49758148 267.53567505]
[54.10197830 254.60614014]
[40.74402618 230.18818665]
[43.21568298 203.69985962]
[59.30834198 184.08157349]
[82.44912720 177.18914795]
[84.07712555 162.27775574]
[85.70512390 147.36636353]
[87.33312225 132.45497131]
[88.96112061 117.54357147]
[79.35792542 106.02060699]
[64.39732361 104.93408966]
[49.43672943 103.84756470]
[34.47613144 102.76104736]
[19.51553535 101.67452240]
[5.19116402 108.39188385]
[-6.94222546 99.75301361]
[-21.90282249 98.66648865]
[-36.86341858 97.57997131]
[-51.82401657 96.49344635]
[-57.74555588 110.42951965]
[-67.87313843 121.68611145]
[-81.10820007 129.04219055]
[-96.01509857 131.69981384]
[-110.97685242 129.37071228]
[-124.37051392 122.30754089]
[-134.74324036 111.27644348]
[-140.96989441 97.47399139]
[-142.37501526 82.39737701]
[-138.80622864 67.68199158]
[-130.65061951 54.92406082]
[-118.79286957 45.50746155]
[-104.51919556 40.45363998]
[-89.37792206 40.31079483]
[-75.01144409 45.09442139]
[-62.97813797 54.28562546]
[-54.58328247 66.88742065]
[-50.73749542 81.53285217]
[-35.77689743 82.61936951]
[-20.81630135 83.70589447]
[-5.85570335 84.79241180]
[7.39858580 77.99733734]
[20.60205650 86.71392822]
[35.56265640 87.80044556]
[50.52325058 88.88697052]
[65.48384857 89.97348785]
[80.44444275 91.06001282]
[91.05104828 80.45341492]
[89.96452332 65.49281311]
[88.87800598 50.53221893]
[87.79148102 35.57162094]
[86.70496368 20.61102295]
[85.61843872 5.65042543]
[84.53191376 -9.31017208]
[83.44539642 -24.27076912]
[80.92628479 -27.72250748]
[79.73729706 -31.42285347]
[79.79534149 -34.92868042]
[80.88359070 -37.86806488]
[82.68566895 -39.97731781]
[82.32321167 -54.97293854]
[81.96075439 -69.96855927]
[73.89225006 -83.57773590]
[81.31975555 -96.48825836]
[80.95729828 -111.48387909]
[80.59484100 -126.47949982]
[80.05122375 -141.46965027]
[79.32652283 -156.45213318]
[78.60182190 -171.43461609]
[77.87712097 -186.41709900]
[77.15242004 -201.39958191]
[76.42771912 -216.38206482]
[68.03272247 -229.79229736]
[75.14608765 -242.87852478]
[74.42138672 -257.86102295]
[58.95140457 -267.36639404]
[52.36426544 -284.11694336]
[57.13147736 -301.30981445]
[71.15397644 -312.08428955]
[70.06745911 -327.04489136]
[68.98093414 -342.00549316]
[65.24805450 -350.30798340]
[67.97277832 -357.15322876]
[67.06710052 -372.12585449]
[66.16142273 -387.09848022]
[65.25574493 -402.07110596]
[55.76715469 -415.44641113]
[62.85120010 -430.23654175]
[79.22042847 -431.22671509]
[88.03557587 -417.39828491]
[80.22837830 -402.97680664]
[81.13405609 -388.00415039]
[82.03973389 -373.03152466]
[82.94541168 -358.05889893]
[83.94152832 -343.09201050]
[85.02805328 -328.13140869]
[86.11457825 -313.17080688]
[97.23276520 -308.38275146]
[105.31703186 -299.27590942]
[108.79427338 -287.53033447]
[106.94889832 -275.34777832]
[100.06911469 -265.03903198]
[89.40387726 -258.58572388]
[90.12857819 -243.60322571]
[98.47174072 -231.26463318]
[91.41020203 -217.10676575]
[92.13490295 -202.12428284]
[92.85960388 -187.14179993]
[93.58430481 -172.15931702]
[94.30900574 -157.17683411]
[95.03370667 -142.19435120]
[97.88234711 -138.39570618]
[98.39519501 -132.77445984]
[95.59046173 -126.84195709]
[95.95291901 -111.84633636]
[96.31537628 -96.85071564]
[104.35795593 -84.31411743]
[96.95637512 -70.33101654]
[97.31883240 -55.33539581]
[97.68128967 -40.33977509]
[98.40599060 -25.35729027]
[99.49251556 -10.39669418]
[100.57903290 4.56390333]
[101.66555786 19.52449989]
[102.75208282 34.48509979]
[103.83860016 49.44569397]
[104.92512512 64.40629578]
[106.01164246 79.36688995]
[112.07926941 83.77527618]
[118.29825592 70.12521362]
[122.08792877 55.61182785]
[136.21138000 50.55931854]
[148.34698486 59.37561798]
[147.90734863 74.36917877]
[135.27473450 82.45935822]
[124.21453094 92.59205627]
[130.28215027 97.00045013]
[144.84628296 93.41071320]
[159.41041565 89.82097626]
[173.97453308 86.23123932]
[177.57542419 71.35534668]
[187.68572998 59.86447525]
[201.98219299 54.39913559]
[217.17956543 56.21522522]
[229.78562927 64.89542389]
[236.90359497 78.44508362]
[236.89779663 93.75058746]
[229.76956177 107.29485321]
[217.15693665 115.96549988]
[201.95817566 117.77007294]
[187.66587830 112.29389954]
[177.56427002 100.79537201]
[163.00013733 104.38510132]
[148.43601990 107.97483826]
[133.87188721 111.56457520]
[148.37413025 115.39669800]
[162.87635803 119.22882843]
[177.37860107 123.06095123]
[191.88082886 126.89307404]
[206.29846191 131.03215027]
[219.14976501 138.76803589]
[229.55570984 149.57156372]
[236.80450439 162.70378113]
[240.40032959 177.26640320]
[240.09722900 192.26333618]
[235.91590881 206.66877747]
[228.14241028 219.49736023]
[217.30842590 229.87159729]
[204.15502930 237.08189392]
[189.58192444 240.63502502]
[174.58593750 240.28796387]
[160.19282532 236.06445312]
[147.38706970 228.25338745]
[137.04461670 217.38905334]
[129.87290955 204.21458435]
[126.36250305 189.63113403]
[126.75330353 174.63749695]
[121.03310394 160.77101135]
[115.31290436 146.90454102]
[109.59270477 133.03805542]
[103.87251282 119.17156982]
[102.24451447 134.08296204]
[100.61651611 148.99435425]
[98.98851776 163.90574646]
[97.36051941 178.81713867]
[105.48092651 181.42288208]
[113.01530457 185.74993896]
[119.59701538 191.66450500]
[124.89044952 198.95445251]
[128.60769653 207.33659363]
[130.52362061 216.46751404]
[130.48843384 225.95756531]
[128.43710327 235.38754272]
[124.39508820 244.32710266]
[118.47998047 252.35447693]
[110.89899445 259.07617188]
[116.38714600 273.03610229]
[121.87528992 286.99606323]
[127.36344147 300.95602417]
[132.85159302 314.91595459]
[138.33973694 328.87591553]
[143.82788086 342.83587646]
[158.41540527 348.91696167]
[164.35301208 363.56347656]
[158.11802673 378.08590698]
[143.40954590 383.86831665]
[128.95387268 377.48013306]
[123.32727814 362.71133423]
[129.86793518 348.32400513]
[124.37978363 334.36407471]
[118.89163971 320.40411377]
[113.40348816 306.44415283]
[107.91534424 292.48422241]
[102.42719269 278.52426147]
[96.93904114 264.56430054]
[89.46216583 263.97586060]
[88.28527832 278.92962646]
[87.10839081 293.88339233]
[85.93125916 308.83712769]
[70.97753906 307.65972900]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 41]
[4 40]
[5 39]
[6 38]
[9 35]
[10 34]
[11 33]
[12 32]
[45 224]
[46 223]
[47 222]
[48 221]
[49 220]
[50 86]
[51 85]
[52 84]
[53 83]
[54 82]
[56 80]
[57 79]
[58 78]
[59 77]
[87 167]
[88 166]
[89 165]
[90 164]
[91 163]
[92 162]
[93 161]
[94 160]
[99 159]
[100 158]
[101 157]
[103 155]
[104 154]
[105 153]
[106 150]
[107 149]
[108 148]
[109 147]
[110 146]
[111 145]
[113 143]
[114 142]
[118 136]
[119 135]
[120 134]
[122 133]
[123 132]
[124 131]
[125 130]
[176 194]
[177 193]
[178 192]
[179 191]
[235 254]
[236 253]
[237 252]
[238 251]
[239 250]
[240 249]
[241 248]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
