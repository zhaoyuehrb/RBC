%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 19:22:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCACCCCAGACAAGGCCCCGCUUCCUCACGUGACAUCCAGCACUUGGUCAGACCCUAGCCAGGGACCGGACACCUGCCCCGCCCAGGCUGGGACAGGCUGCAGGUCUCAGGAUAUGCUGAGGCCUGGGCGUUCCCUGCCCUGUGCUGACUCUGUUGCUCUGUGAAUAAACACCCUGGCCCAUGAGGGCAGCCCAA\
) } def
/len { sequence length } bind def

/coor [
[134.96278381 789.14916992]
[132.43110657 774.13220215]
[136.23255920 759.38537598]
[145.70852661 747.46368408]
[159.21722412 740.43267822]
[158.26104736 725.46319580]
[157.30487061 710.49371338]
[156.22935486 695.53228760]
[155.03457642 680.57995605]
[145.69920349 676.26379395]
[138.94966125 668.39672852]
[136.05813599 658.35833740]
[137.61231995 647.94635010]
[143.39746094 639.05450439]
[152.42315674 633.32812500]
[151.94482422 618.33575439]
[151.46649170 603.34338379]
[150.98815918 588.35101318]
[134.68455505 584.00836182]
[120.49514771 574.84692383]
[109.80465698 561.74761963]
[103.66040802 545.97637939]
[102.66970825 529.06164551]
[106.93982697 512.64630127]
[116.06653595 498.32815552]
[129.17231750 487.50439453]
[144.99075317 481.23529053]
[143.79597473 466.28292847]
[142.60121155 451.33059692]
[141.40643311 436.37826538]
[139.85437012 421.45877075]
[137.94589233 406.58065796]
[136.03742981 391.70257568]
[134.12895203 376.82446289]
[132.22047424 361.94638062]
[130.31199646 347.06829834]
[115.18091583 336.77941895]
[112.31481934 318.38446045]
[123.99185944 303.47738647]
[121.60990906 288.66772461]
[119.22795868 273.85806274]
[116.84601593 259.04837036]
[114.46406555 244.23870850]
[112.08211517 229.42904663]
[99.89835358 220.93836975]
[97.27175140 205.95318604]
[106.26016235 193.23130798]
[103.87821198 178.42163086]
[99.70731354 172.30982971]
[101.57832336 163.35697937]
[99.43283844 148.51121521]
[97.28735352 133.66543579]
[76.59315491 124.34830475]
[66.46762848 104.03739929]
[71.48267365 81.90351868]
[60.91844559 71.25471497]
[50.35421371 60.60591507]
[39.78998184 49.95711136]
[29.22574997 39.30830765]
[18.66152000 28.65950203]
[8.09728813 18.01069832]
[-7.11479187 13.66291904]
[-10.58551502 -0.82167053]
[-21.14974594 -11.47047424]
[-31.71397781 -22.11927795]
[-39.98969650 -26.01371193]
[-42.36007309 -33.02313232]
[-57.50088882 -37.61293793]
[-60.74019241 -52.15103149]
[-71.13327026 -62.96694183]
[-86.48564911 -60.71218872]
[-100.21565247 -67.94176483]
[-107.04380035 -81.87574768]
[-104.34453583 -97.15625000]
[-93.15577698 -107.90759277]
[-77.77983856 -109.99567413]
[-64.12907410 -102.61757660]
[-57.45248795 -88.61033630]
[-60.31735611 -73.36002350]
[-49.92427826 -62.54410934]
[-35.52684784 -58.72792816]
[-31.54416084 -43.41620636]
[-21.06517410 -32.68350983]
[-10.50094318 -22.03470612]
[0.06328816 -11.38590145]
[14.51974392 -7.79979563]
[18.74609184 7.44646788]
[29.31032372 18.09527206]
[39.87455368 28.74407578]
[50.43878555 39.39287949]
[61.00301743 50.04168320]
[71.56724548 60.69048691]
[82.13147736 71.33928680]
[87.09996796 68.78606415]
[92.42134857 67.08671570]
[97.95004272 66.28771973]
[103.53481293 66.41093445]
[109.02288818 67.45298767]
[116.13994598 54.24892044]
[123.25700378 41.04484558]
[124.57691956 31.99432564]
[130.59428406 27.68828964]
[137.92098999 14.59938812]
[145.24771118 1.51048708]
[152.57441711 -11.57841396]
[159.90112305 -24.66731453]
[167.22782898 -37.75621414]
[174.55455017 -50.84511566]
[181.88125610 -63.93401718]
[189.20796204 -77.02291870]
[196.53466797 -90.11181641]
[192.00105286 -105.25189209]
[199.57437134 -119.12345123]
[214.76153564 -123.49675751]
[228.55224609 -115.77719116]
[232.76473999 -100.54464722]
[224.89981079 -86.83631897]
[209.62356567 -82.78511047]
[202.29685974 -69.69620514]
[194.97015381 -56.60730743]
[187.64344788 -43.51840591]
[180.31672668 -30.42950630]
[172.99002075 -17.34060478]
[165.66331482 -4.25170422]
[158.33660889 8.83719635]
[151.00990295 21.92609787]
[143.68318176 35.01499939]
[136.46107483 48.16190338]
[129.34402466 61.36597443]
[122.22695923 74.57004547]
[129.47879028 83.51602173]
[133.30342102 94.37840271]
[133.25622559 105.89435577]
[129.34269714 116.72502899]
[122.01779175 125.61126709]
[112.13312531 131.51995850]
[114.27861023 146.36572266]
[116.42409515 161.21150208]
[118.68788147 176.03968811]
[121.06983185 190.84936523]
[133.59405518 200.11120605]
[135.79872131 215.16424561]
[126.89178467 227.04708862]
[129.27372742 241.85676575]
[131.65568542 256.66644287]
[134.03762817 271.47610474]
[136.41958618 286.28576660]
[138.80152893 301.09542847]
[149.61956787 306.05874634]
[156.62242126 315.53417969]
[158.16044617 327.09472656]
[153.96569824 337.84799194]
[145.19009399 345.15982056]
[147.09857178 360.03790283]
[149.00704956 374.91601562]
[150.91551208 389.79409790]
[152.82398987 404.67218018]
[154.73246765 419.55029297]
[157.91268921 423.71856689]
[159.05389404 428.23818970]
[158.36511230 432.27075195]
[156.35877991 435.18347168]
[157.55354309 450.13583374]
[158.74832153 465.08816528]
[159.94308472 480.04049683]
[172.94158936 482.44104004]
[184.97261047 487.89096069]
[195.33294678 496.06625366]
[203.41833496 506.48370361]
[208.75874329 518.52947998]
[211.04568481 531.49542236]
[210.15003967 544.62060547]
[206.12931824 557.13580322]
[199.22401428 568.30895996]
[189.84318542 577.48767090]
[178.54031372 584.13739014]
[165.98052979 587.87268066]
[166.45886230 602.86505127]
[166.93719482 617.85742188]
[167.41552734 632.84979248]
[182.77641296 645.78399658]
[183.67771912 665.53967285]
[169.98692322 679.38519287]
[171.18170166 694.33752441]
[174.98852539 702.65393066]
[172.27435303 709.53753662]
[173.23054504 724.50701904]
[174.18672180 739.47650146]
[188.48019409 744.73162842]
[199.39596558 755.35076904]
[205.04278564 769.49407959]
[204.44233704 784.71118164]
[197.69862366 798.36553955]
[185.98005676 808.09155273]
[171.31692505 812.20404053]
[156.24974060 809.99060059]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 188]
[6 187]
[7 186]
[8 184]
[9 183]
[15 180]
[16 179]
[17 178]
[18 177]
[27 165]
[28 164]
[29 163]
[30 162]
[31 158]
[32 157]
[33 156]
[34 155]
[35 154]
[36 153]
[39 148]
[40 147]
[41 146]
[42 145]
[43 144]
[44 143]
[47 140]
[48 139]
[50 138]
[51 137]
[52 136]
[55 93]
[56 92]
[57 91]
[58 90]
[59 89]
[60 88]
[61 87]
[63 85]
[64 84]
[65 83]
[67 82]
[69 80]
[70 79]
[98 130]
[99 129]
[100 128]
[102 127]
[103 126]
[104 125]
[105 124]
[106 123]
[107 122]
[108 121]
[109 120]
[110 119]
[111 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
