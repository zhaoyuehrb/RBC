%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 22:52:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUUAUUACAAAUAAUAGAGGAAGACAGGAAGAGCAGAGUCCUUUCUCCUAGACAGGUAGCAGUGACUCCAUUUUAAUAUUACAAGUGAGGAAAUCAAGGCACAUCAGUAUGG\
) } def
/len { sequence length } bind def

/coor [
[126.86786652 170.27139282]
[118.55052185 172.90972900]
[109.98363495 174.56727600]
[101.28244019 175.22171021]
[92.56399536 174.86425781]
[83.94558716 173.49971008]
[75.54314423 171.14642334]
[67.46969604 167.83605957]
[59.83385849 163.61314392]
[52.73834229 158.53448486]
[46.27860260 152.66842651]
[40.54153824 146.09384155]
[35.60432053 138.89920044]
[31.53337097 131.18127441]
[28.38344955 123.04388428]
[26.19693184 114.59650421]
[25.00323105 105.95277405]
[24.81840515 97.22896576]
[25.64493942 88.54243469]
[27.47171783 80.01002502]
[13.48028469 74.60264587]
[-0.51114821 69.19525909]
[-14.50258064 63.78787231]
[-23.77429962 63.59613419]
[-28.79900551 58.03696442]
[-42.63751602 52.24942398]
[-58.35443497 54.06300354]
[-67.11087036 42.01418304]
[-80.94937897 36.22664261]
[-94.78789520 30.43910027]
[-108.62640381 24.65155983]
[-121.27009583 33.49127960]
[-136.68663025 34.06919861]
[-149.95664978 26.20090103]
[-156.84573364 12.39713478]
[-155.15560913 -2.93737030]
[-145.42559814 -14.90942764]
[-130.76048279 -19.69879913]
[-115.83986664 -15.77721214]
[-105.42486572 -4.39603138]
[-102.83885956 10.81304932]
[-89.00035095 16.60058975]
[-75.16184235 22.38813019]
[-61.32332993 28.17567062]
[-46.59623718 25.94812965]
[-36.84997559 38.41091537]
[-23.01146507 44.19845581]
[-9.09519577 49.79644012]
[4.89623690 55.20382690]
[18.88766861 60.61120987]
[32.87910080 66.01859283]
[47.32960510 46.28054047]
[67.34877014 32.22206879]
[90.82004547 25.32952881]
[115.26188660 26.33164978]
[138.09013367 35.12248230]
[156.89123535 50.77259445]
[169.67742920 71.62735748]
[184.06455994 67.38350677]
[191.53077698 61.88285446]
[198.90289307 63.22600174]
[213.40057373 59.37670898]
[221.36512756 45.99000931]
[236.12268066 42.29280853]
[248.83576965 49.96828461]
[263.33346558 46.11899567]
[277.83114624 42.26970291]
[290.49093628 28.98478127]
[307.22967529 34.05858612]
[321.61679077 29.81473160]
[336.00393677 25.57087326]
[336.17492676 10.45590878]
[340.79510498 -3.93663239]
[349.45367432 -16.32697487]
[361.38070679 -25.61337662]
[375.51568604 -30.97010040]
[390.60168457 -31.92082596]
[405.29730225 -28.38101768]
[418.29580688 -20.66543198]
[428.44137573 -9.46013451]
[434.83187866 4.23850822]
[436.89907837 19.21242142]
[434.45916748 34.13013458]
[427.72909546 47.66517639]
[417.30725098 58.61402130]
[404.12042236 66.00309753]
[389.34109497 69.17538452]
[374.28350830 67.84880066]
[360.28649902 62.14130020]
[348.59472656 52.56039429]
[340.24780273 39.95801163]
[325.86065674 44.20186615]
[311.47351074 48.44572449]
[305.35269165 58.97776413]
[293.29464722 62.57831955]
[281.68041992 56.76739120]
[267.18273926 60.61668396]
[252.68505859 64.46597290]
[245.45381165 77.43688965]
[230.80592346 81.54714203]
[217.24986267 73.87439728]
[202.75218201 77.72368622]
[188.30842590 81.77063751]
[173.92127991 86.01449585]
[175.04344177 94.66780853]
[175.15609741 103.39284515]
[174.25773621 112.07225037]
[172.36044312 120.58924866]
[169.48973083 128.82926941]
[165.68423462 136.68148804]
[160.99514771 144.04025269]
[155.48551941 150.80656433]
[149.22949219 156.88943481]
[142.31123352 162.20700073]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 51]
[21 50]
[22 49]
[23 48]
[25 47]
[26 46]
[28 44]
[29 43]
[30 42]
[31 41]
[58 104]
[59 103]
[61 102]
[62 101]
[65 98]
[66 97]
[67 96]
[69 93]
[70 92]
[71 91]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
