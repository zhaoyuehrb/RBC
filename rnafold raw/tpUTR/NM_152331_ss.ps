%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 05:46:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCAUUUGUCUGUUGUUGACAUGAGAGAUUCAAGAUCAGAUUCUAGUGUUCAGUAACCCUAUGUGAAUCAGAUGUCUCCUGGAUAACAUUAAAGCCAUGUCUUUGUCAUUAA\
) } def
/len { sequence length } bind def

/coor [
[199.98123169 403.61465454]
[211.11344910 393.38891602]
[204.65892029 379.84866333]
[198.85848999 375.09814453]
[198.21903992 365.84106445]
[192.14338684 352.12661743]
[186.06774902 338.41213989]
[179.99211121 324.69769287]
[168.75192261 319.99374390]
[163.61802673 308.50076294]
[167.87843323 296.22906494]
[162.18637085 282.35101318]
[156.49432373 268.47296143]
[150.80226135 254.59489441]
[145.11019897 240.71682739]
[139.41815186 226.83877563]
[133.72608948 212.96070862]
[121.73789215 204.12147522]
[123.65971375 188.41741943]
[113.75967407 185.26310730]
[107.15233612 176.95935059]
[106.26596069 166.16255188]
[111.64572906 156.50546265]
[106.73374176 142.33251953]
[101.82174683 128.15957642]
[96.90975952 113.98663330]
[86.46583557 104.69060516]
[88.91729736 90.92536163]
[84.00531006 76.75241852]
[79.09331512 62.57947159]
[68.89131927 58.32262802]
[62.90632248 49.29289627]
[62.95805359 38.68126678]
[68.78289795 30.07710075]
[64.66615295 15.65307808]
[60.54941177 1.22905481]
[56.23257065 -13.13635063]
[51.71646118 -27.44036102]
[40.18328857 -38.27071762]
[43.72973633 -52.73695374]
[39.21362305 -67.04096222]
[25.77803421 -70.45807648]
[15.88938522 -80.01861572]
[12.08172703 -93.12252045]
[15.25606537 -106.28227234]
[24.46995735 -116.05101013]
[20.35321617 -130.47503662]
[5.73283863 -135.67350769]
[-3.01191664 -148.49182129]
[-2.51851177 -164.00105286]
[7.02332830 -176.23757935]
[21.94457245 -180.49623108]
[36.50769806 -175.13946533]
[45.11288452 -162.22705078]
[44.45126343 -146.72409058]
[34.77724075 -134.59178162]
[38.89398193 -120.16775513]
[54.43313217 -115.07997131]
[64.01515198 -101.62752533]
[63.73950195 -84.94834900]
[53.51763535 -71.55707550]
[58.03374481 -57.25306320]
[69.24389648 -47.44582748]
[66.02046967 -31.95647240]
[70.53658295 -17.65246010]
[75.62282562 -12.14406681]
[74.97343445 -2.88768578]
[79.09017944 11.53633690]
[83.20691681 25.96036148]
[98.07752991 38.18852615]
[93.26625824 57.66748047]
[98.17825317 71.84042358]
[103.09024048 86.01336670]
[113.53416443 95.30939484]
[111.08270264 109.07463837]
[115.99468994 123.24758148]
[120.90668488 137.42053223]
[125.81867218 151.59347534]
[141.65206909 163.91751099]
[137.53776550 182.72537231]
[149.93310547 192.55726624]
[147.60415649 207.26866150]
[153.29620361 221.14671326]
[158.98826599 235.02478027]
[164.68032837 248.90283203]
[170.37237549 262.78088379]
[176.06443787 276.65893555]
[181.75648499 290.53701782]
[196.56654358 301.36895752]
[193.70657349 318.62203979]
[199.78221130 332.33651733]
[205.85786438 346.05096436]
[211.93350220 359.76544189]
[218.19918823 373.39413452]
[224.65371704 386.93438721]
[239.60734558 384.72521973]
[254.54753113 387.02349854]
[268.14581299 393.62487793]
[279.19305420 403.94232178]
[286.70690918 417.05847168]
[290.01928711 431.80703735]
[288.83560181 446.87655640]
[283.26116943 460.92706299]
[273.79162598 472.70919800]
[261.26898193 481.17532349]
[246.80679321 485.57263184]
[231.69099426 485.51010132]
[217.26567078 480.99331665]
[204.81352234 472.42385864]
[195.44178772 460.56375122]
[189.98377991 446.46762085]
[188.92483521 431.38882446]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 95]
[3 94]
[5 93]
[6 92]
[7 91]
[8 90]
[11 88]
[12 87]
[13 86]
[14 85]
[15 84]
[16 83]
[17 82]
[19 80]
[23 78]
[24 77]
[25 76]
[26 75]
[28 73]
[29 72]
[30 71]
[34 69]
[35 68]
[36 67]
[37 65]
[38 64]
[40 62]
[41 61]
[46 57]
[47 56]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
