%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 18:24:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCACGCAUAGUGUCACGCACCUGUGAUCCCAGCUACUUAGGAGGUUGAGGCUGGGAGGAUCACUUGAGCCCAGGAGUCUGAGGCUUUAGUGAUCUAAGAUCAUGCCACUGCACUCCAGCCUGGGCAACAGAGUGAGACCCUGUUUCUAAAAAAAAAUAAAGAUAAUUUAGCUAACUUUACA\
) } def
/len { sequence length } bind def

/coor [
[247.86888123 564.87725830]
[249.70271301 549.96777344]
[253.46699524 535.42523193]
[259.09732056 521.49847412]
[266.49731445 508.42581177]
[275.54040527 496.43090820]
[286.07177734 485.71899414]
[297.91131592 476.47341919]
[290.30007935 463.54791260]
[282.68884277 450.62237549]
[275.07763672 437.69683838]
[261.95236206 430.65576172]
[261.61721802 414.83810425]
[254.00598145 401.91256714]
[246.39474487 388.98706055]
[236.28286743 387.31826782]
[228.60687256 380.20001221]
[226.07707214 369.81527710]
[229.76773071 359.55026245]
[222.60469055 346.37106323]
[215.44165039 333.19189453]
[208.16575623 320.07467651]
[200.77752686 307.02038574]
[193.38931274 293.96612549]
[186.00108337 280.91183472]
[173.21070862 279.23608398]
[163.58244324 270.36135864]
[160.79019165 257.36883545]
[166.07467651 244.96359253]
[158.91163635 231.78440857]
[151.74859619 218.60522461]
[144.58555603 205.42604065]
[137.42251587 192.24685669]
[130.14662170 179.12963867]
[122.75839996 166.07536316]
[116.16831970 179.55018616]
[101.56363678 182.97117615]
[89.67478943 173.82485962]
[89.23681641 158.83125305]
[100.57151794 149.00656128]
[115.35173798 151.56976318]
[109.10986328 137.93014526]
[102.86799622 124.29053497]
[96.62612915 110.65091705]
[90.26741028 97.06538391]
[83.79232025 83.53493500]
[70.85588074 74.42674255]
[72.34114075 59.60637665]
[59.40470123 50.49818420]
[60.88996124 35.67781830]
[54.41487122 22.14736557]
[47.93977737 8.61691189]
[41.34878540 -4.85746431]
[34.64237595 -18.27477074]
[27.93597031 -31.69207573]
[9.76241016 -36.97427368]
[1.34184802 -53.56677246]
[7.59051228 -70.75431061]
[0.42747378 -83.93349457]
[-6.73556471 -97.11267853]
[-13.89860249 -110.29186249]
[-21.06164169 -123.47104645]
[-28.22467995 -136.65022278]
[-35.38771820 -149.82940674]
[-42.55075455 -163.00859070]
[-55.93891907 -171.43875122]
[-55.21856308 -186.31593323]
[-62.38159943 -199.49511719]
[-69.54463959 -212.67430115]
[-76.70767975 -225.85348511]
[-83.87071228 -239.03266907]
[-91.14661407 -252.14988708]
[-98.53483582 -265.20416260]
[-105.92305756 -278.25842285]
[-120.32109070 -286.10882568]
[-120.45092010 -302.50747681]
[-106.17897797 -310.58483887]
[-92.18702698 -302.03161621]
[-92.86877441 -285.64666748]
[-85.48055267 -272.59237671]
[-78.09233856 -259.53811646]
[-72.04639435 -255.25486755]
[-70.69152832 -246.19570923]
[-63.52849197 -233.01652527]
[-56.36545563 -219.83734131]
[-49.20241547 -206.65815735]
[-42.03937912 -193.47897339]
[-29.16356277 -185.99147034]
[-29.37157249 -170.17163086]
[-22.20853424 -156.99244690]
[-15.04549599 -143.81326294]
[-7.88245726 -130.63407898]
[-0.71941912 -117.45489502]
[6.44361925 -104.27571106]
[13.60665703 -91.09652710]
[20.76969528 -77.91734314]
[32.18021011 -77.12397003]
[41.88499832 -70.84651184]
[47.40074539 -60.55307007]
[47.24961853 -48.75589371]
[41.35327530 -38.39848328]
[48.05968475 -24.98117638]
[54.76609039 -11.56387138]
[60.58351898 -6.97507095]
[61.47023010 2.14181948]
[67.94532013 15.67227268]
[74.42041779 29.20272636]
[86.89371490 37.34312820]
[85.87159729 53.13128281]
[98.34488678 61.27168655]
[97.32276917 77.05983734]
[103.79786682 90.59029388]
[109.85634613 95.93978882]
[110.26573944 104.40904999]
[116.50760651 118.04866028]
[122.74948120 131.68827820]
[128.99134827 145.32789612]
[135.81268311 158.68713379]
[143.20089722 171.74140930]
[150.16893005 177.68704224]
[150.60169983 185.08381653]
[157.76473999 198.26300049]
[164.92778015 211.44218445]
[172.09082031 224.62136841]
[179.25386047 237.80055237]
[196.10743713 242.44383240]
[204.23941040 257.53652954]
[199.05537415 273.52362061]
[206.44358826 286.57791138]
[213.83180237 299.63217163]
[221.22003174 312.68646240]
[228.18806458 318.63208008]
[228.62083435 326.02886963]
[235.78387451 339.20803833]
[242.94691467 352.38723755]
[260.59466553 362.09616089]
[259.32028198 381.37582397]
[266.93151855 394.30136108]
[274.54272461 407.22686768]
[288.21240234 415.19247437]
[288.00314331 430.08563232]
[295.61437988 443.01113892]
[303.22561646 455.93667603]
[310.83682251 468.86221313]
[324.66479492 462.99340820]
[339.14050293 458.97982788]
[354.01626587 456.89007568]
[369.03750610 456.75994873]
[383.94723511 458.59164429]
[398.49029541 462.35385132]
[412.41784668 467.98217773]
[425.49160767 475.38034058]
[437.48779297 484.42169189]
[448.20120239 494.95153809]
[457.44845581 506.78976440]
[465.07138062 519.73370361]
[470.93948364 533.56195068]
[474.95239258 548.03784180]
[477.04144287 562.91369629]
[477.17086792 577.93493652]
[475.33843994 592.84460449]
[471.57553101 607.38751221]
[465.94656372 621.31475830]
[458.54779053 634.38818359]
[449.50585938 646.38391113]
[438.97549438 657.09686279]
[427.13684082 666.34356689]
[414.19253540 673.96582031]
[400.36401367 679.83331299]
[385.88790894 683.84552002]
[371.01196289 685.93383789]
[355.99069214 686.06256104]
[341.08114624 684.22943115]
[326.53845215 680.46582031]
[312.61141968 674.83618164]
[299.53839111 667.43676758]
[287.54302979 658.39428711]
[276.83065796 647.86340332]
[267.58450317 636.02435303]
[259.96282959 623.07965088]
[254.09602356 609.25085449]
[250.08448792 594.77453613]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 144]
[9 143]
[10 142]
[11 141]
[13 139]
[14 138]
[15 137]
[19 135]
[20 134]
[21 133]
[22 131]
[23 130]
[24 129]
[25 128]
[29 125]
[30 124]
[31 123]
[32 122]
[33 121]
[34 119]
[35 118]
[41 117]
[42 116]
[43 115]
[44 114]
[45 112]
[46 111]
[48 109]
[50 107]
[51 106]
[52 105]
[53 103]
[54 102]
[55 101]
[58 96]
[59 95]
[60 94]
[61 93]
[62 92]
[63 91]
[64 90]
[65 89]
[67 87]
[68 86]
[69 85]
[70 84]
[71 83]
[72 81]
[73 80]
[74 79]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
