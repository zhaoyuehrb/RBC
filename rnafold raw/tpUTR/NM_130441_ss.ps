%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 10:06:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAAAUAUUCUCCCUGGAAAUGUGUUUGGGUUGGCAUCCACCGUUGUAGAAAGCUAAAUUGAUUUUUUAAUUUAUGUGUAAGUUUUGUACAAGGAAUGCCCCUAAAAUGUUUCAGCAGGCUGUCACCUAUUACACUUAUGAUAUAAUCCAUUCACACAUUCAUUUAUUCAUUUAUUCAUU\
) } def
/len { sequence length } bind def

/coor [
[128.37255859 359.04232788]
[133.16716003 344.82925415]
[139.59410095 331.27584839]
[147.56481934 318.56887817]
[156.96952820 306.88333130]
[167.67864990 296.38024902]
[179.54464722 287.20431519]
[192.40406799 279.48193359]
[206.07975769 273.31945801]
[220.38328552 268.80184937]
[235.11763000 265.99130249]
[250.07978821 264.92654419]
[265.06365967 265.62222290]
[279.86361694 268.06900024]
[268.80932617 257.92984009]
[257.75500488 247.79067993]
[246.70071411 237.65151978]
[235.47305298 227.70468140]
[224.07537842 217.95312500]
[212.67770386 208.20155334]
[201.28002930 198.44999695]
[189.88233948 188.69844055]
[178.48466492 178.94686890]
[167.08699036 169.19531250]
[159.94192505 167.23085022]
[155.57862854 159.17573547]
[144.35096741 149.22889709]
[133.12330627 139.28204346]
[121.89563751 129.33520508]
[110.66797638 119.38837433]
[99.44031525 109.44152832]
[94.24074554 108.56246948]
[89.91241455 104.82053375]
[88.00440979 98.95236206]
[77.12676239 88.62390900]
[66.24911499 78.29546356]
[55.37147522 67.96701050]
[44.49382782 57.63856506]
[33.62220001 58.54821777]
[24.24455452 53.41696548]
[19.35473061 44.15917969]
[20.36038399 33.95871735]
[9.84571934 23.26096725]
[1.57555342 19.32045555]
[-0.75612158 12.28665257]
[-11.08456993 1.40900767]
[-21.41301918 -9.46863651]
[-31.74146652 -20.34628105]
[-42.06991577 -31.22392654]
[-57.18311310 -35.90386200]
[-60.33573914 -50.46099854]
[-70.66418457 -61.33864594]
[-80.99263763 -72.21628571]
[-91.32108307 -83.09393311]
[-101.64952850 -93.97158051]
[-111.97798157 -104.84922028]
[-122.94435883 -115.08340454]
[-134.50865173 -124.63677979]
[-146.07295227 -134.19015503]
[-157.63725281 -143.74354553]
[-169.20155334 -153.29692078]
[-180.76585388 -162.85029602]
[-192.33015442 -172.40367126]
[-208.58259583 -174.59231567]
[-214.56225586 -189.86241150]
[-204.11776733 -202.50538635]
[-187.99353027 -199.51522827]
[-182.77676392 -183.96797180]
[-171.21247864 -174.41459656]
[-159.64817810 -164.86120605]
[-148.08387756 -155.30783081]
[-136.51957703 -145.75445557]
[-124.95528412 -136.20108032]
[-113.39098358 -126.64770508]
[-114.70701599 -141.58985901]
[-106.23020172 -153.96498108]
[-91.82181549 -158.13609314]
[-78.04498291 -152.20323181]
[-71.17517853 -138.86885071]
[-74.34165192 -124.20687103]
[-86.10205841 -114.89596558]
[-101.10033417 -115.17767334]
[-90.77188873 -104.30002594]
[-80.44343567 -93.42238617]
[-70.11499023 -82.54473877]
[-59.78654099 -71.66709137]
[-49.45809174 -60.78944778]
[-35.08365631 -56.88755417]
[-31.19227028 -41.55237579]
[-20.86382294 -30.67473030]
[-10.53537369 -19.79708481]
[-0.20692544 -8.91944122]
[10.12152290 1.95820379]
[20.54346848 12.74630165]
[31.05813217 23.44404984]
[50.01014709 27.20273972]
[54.82227707 46.76092148]
[65.69992065 57.08937073]
[76.57756805 67.41781616]
[87.45520782 77.74626923]
[98.33285522 88.07471466]
[109.38715363 98.21386719]
[120.61481476 108.16071320]
[131.84248352 118.10755157]
[143.07014465 128.05438232]
[154.29780579 138.00123596]
[165.52546692 147.94807434]
[176.83854675 157.79763794]
[188.23623657 167.54919434]
[199.63391113 177.30076599]
[211.03158569 187.05232239]
[222.42926025 196.80387878]
[233.82693481 206.55545044]
[245.22460938 216.30700684]
[251.68429565 217.90071106]
[255.74343872 221.92468262]
[256.83987427 226.59722900]
[267.89416504 236.73637390]
[278.94845581 246.87553406]
[290.00277710 257.01467896]
[295.21701050 257.61431885]
[299.47821045 260.05731201]
[314.36883545 258.24926758]
[329.25949097 256.44122314]
[344.15011597 254.63316345]
[359.04074097 252.82511902]
[363.47244263 238.25529480]
[373.45199585 226.75187683]
[387.25036621 220.30790710]
[402.47692871 220.03985596]
[416.49356079 225.99414062]
[426.87182617 237.13916016]
[431.81359863 251.54397583]
[430.46273804 266.71286011]
[423.05322266 280.01770020]
[410.86883545 289.15338135]
[396.02056885 292.53707886]
[381.08099365 289.58251953]
[368.63848877 280.80163574]
[360.84878540 267.71575928]
[345.95816040 269.52380371]
[331.06753540 271.33184814]
[316.17691040 273.13989258]
[301.28625488 274.94796753]
[314.74319458 281.57449341]
[327.33099365 289.73214722]
[338.87622070 299.30856323]
[349.21987915 310.17172241]
[358.21945190 322.17205811]
[365.75094604 335.14419556]
[371.71060181 348.90948486]
[376.01632690 363.27822876]
[378.60879517 378.05249023]
[379.45230103 393.02874756]
[378.53524780 408.00070190]
[375.87020874 422.76205444]
[371.49395752 437.10946655]
[365.46673584 450.84527588]
[357.87161255 463.78027344]
[348.81320190 475.73623657]
[338.41629028 486.54846191]
[326.82412720 496.06802368]
[314.19641113 504.16372681]
[300.70709229 510.72409058]
[286.54199219 515.65869141]
[271.89630127 518.89959717]
[256.97174072 520.40216064]
[241.97393799 520.14562988]
[227.10949707 518.13354492]
[212.58320618 514.39367676]
[198.59516907 508.97750854]
[185.33810425 501.95965576]
[172.99464417 493.43679810]
[161.73481750 483.52639771]
[151.71377563 472.36489868]
[143.06954956 460.10614014]
[135.92123413 446.91897583]
[130.36730957 432.98504639]
[126.48427582 418.49636841]
[124.32563782 403.65249634]
[123.92112732 388.65795898]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 120]
[15 119]
[16 118]
[17 117]
[18 114]
[19 113]
[20 112]
[21 111]
[22 110]
[23 109]
[24 108]
[26 107]
[27 106]
[28 105]
[29 104]
[30 103]
[31 102]
[34 101]
[35 100]
[36 99]
[37 98]
[38 97]
[42 95]
[43 94]
[45 93]
[46 92]
[47 91]
[48 90]
[49 89]
[51 87]
[52 86]
[53 85]
[54 84]
[55 83]
[56 82]
[57 74]
[58 73]
[59 72]
[60 71]
[61 70]
[62 69]
[63 68]
[122 144]
[123 143]
[124 142]
[125 141]
[126 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
