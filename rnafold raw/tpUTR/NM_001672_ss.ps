%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 16:56:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCCCCCACUCCCGGCCGCGAGCAGGCAGGGCUUCGGGGACGCGGGGCGCUUCUCGGGCGGGUGAUCCCUAACAGGGCGGCUUCCCAGGGCUGCAGGCGGGCGGAGGUUCCAGGAGAUGGGACUUCAGGGAGACCUGGCUUGGGCUAAAAUCGAAAUACAAUAUAUAUAGGCUG\
) } def
/len { sequence length } bind def

/coor [
[-4.59028769 350.20175171]
[-16.59840584 359.19091797]
[-28.60652542 368.18008423]
[-40.61464310 377.16925049]
[-52.62276077 386.15841675]
[-64.63088226 395.14758301]
[-76.63899994 404.13674927]
[-76.55048370 419.54125977]
[-85.44561768 431.89965820]
[-99.74308014 436.59503174]
[-113.89441681 432.02581787]
[-125.90253448 441.01498413]
[-137.91065979 450.00415039]
[-149.91877747 458.99331665]
[-161.68193054 468.30072021]
[-173.19169617 477.91973877]
[-184.70146179 487.53872681]
[-196.21122742 497.15774536]
[-207.54747009 506.98065186]
[-218.70658875 517.00433350]
[-219.30212402 532.79742432]
[-230.94725037 543.48229980]
[-246.73313904 542.71978760]
[-257.29428101 530.96234131]
[-256.36495972 515.18542480]
[-244.49650574 504.74914551]
[-228.73027039 505.84524536]
[-217.57116699 495.82153320]
[-216.42639160 491.15457153]
[-212.31806946 487.16915894]
[-205.83024597 485.64797974]
[-194.32046509 476.02896118]
[-182.81069946 466.40997314]
[-171.30093384 456.79095459]
[-170.63204956 453.29794312]
[-168.21855164 449.96163940]
[-164.15576172 447.60745239]
[-158.90794373 446.98519897]
[-146.89982605 437.99603271]
[-134.89170837 429.00686646]
[-122.88358307 420.01770020]
[-123.28080750 405.15228271]
[-114.74757385 392.75680542]
[-100.38372803 387.70376587]
[-85.62816620 392.12863159]
[-73.62004852 383.13946533]
[-61.61192703 374.15029907]
[-49.60380936 365.16113281]
[-37.59569168 356.17196655]
[-25.58757210 347.18280029]
[-13.57945251 338.19363403]
[-12.46324635 333.53576660]
[-9.31301785 329.36419678]
[-4.38268328 326.57034302]
[1.60400879 312.81680298]
[7.59070110 299.06329346]
[13.57739258 285.30975342]
[19.56408501 271.55621338]
[25.55077744 257.80270386]
[31.53746986 244.04916382]
[37.40117264 230.24276733]
[43.14142609 216.38456726]
[48.88167572 202.52636719]
[54.62192917 188.66818237]
[50.28207397 177.35522461]
[54.97664261 165.75080872]
[66.68880463 160.29791260]
[72.67549133 146.54438782]
[78.66218567 132.79086304]
[84.64888000 119.03733063]
[90.63556671 105.28380585]
[82.46036530 117.86021423]
[68.49942017 123.34583282]
[53.94956207 119.69869232]
[44.22683716 108.27640533]
[42.95043182 93.33081055]
[50.59547806 80.42526245]
[64.31649017 74.36369324]
[63.51362610 59.38519287]
[62.71076202 44.40669632]
[61.90789795 29.42819595]
[61.10503387 14.44969845]
[60.30216980 -0.52880013]
[59.49930573 -15.50729847]
[50.10276031 -28.94742393]
[57.28817749 -43.68858337]
[73.66381836 -44.56633759]
[82.38382721 -30.67772484]
[74.47780609 -16.31016350]
[75.28067017 -1.33166444]
[76.08353424 13.64683342]
[76.88639832 28.62533188]
[77.68926239 43.60382843]
[78.49212646 58.58232880]
[79.29499054 73.56082916]
[85.97145081 76.97767639]
[92.44794464 63.44789505]
[98.92443848 49.91811371]
[101.97800446 35.23221207]
[116.83141327 33.14027023]
[123.82244110 46.41149902]
[113.69654083 57.47811890]
[106.51045990 70.64475250]
[99.32437134 83.81137848]
[106.00083160 87.22823334]
[118.61963654 79.11862183]
[131.23843384 71.00901031]
[143.85723877 62.89939499]
[156.47604370 54.78978348]
[169.09484863 46.68017197]
[181.71365356 38.57056046]
[194.33245850 30.46094704]
[206.95124817 22.35133553]
[211.75273132 7.04364681]
[226.76583862 1.38801920]
[240.47380066 9.72296524]
[242.36105347 25.65462875]
[230.97984314 36.96159744]
[215.06086731 34.97013855]
[202.44206238 43.07975006]
[189.82325745 51.18936157]
[177.20445251 59.29897308]
[164.58564758 67.40858459]
[151.96685791 75.51819611]
[139.34805298 83.62781525]
[126.72924805 91.73742676]
[114.11044312 99.84703827]
[104.38909912 111.27050018]
[98.40240479 125.02402496]
[92.41571045 138.77755737]
[86.42902374 152.53108215]
[80.44232941 166.28460693]
[82.95535278 184.51139832]
[68.48012543 194.40843201]
[62.73987198 208.26663208]
[56.99961853 222.12481689]
[51.25936890 235.98301697]
[50.86167908 245.14193726]
[45.29099655 250.03585815]
[39.30430603 263.78939819]
[33.31761169 277.54290771]
[27.33092117 291.29644775]
[21.34422874 305.04995728]
[15.35753632 318.80349731]
[9.37084389 332.55703735]
[21.15855026 323.28070068]
[34.46910477 316.36483765]
[48.83570099 312.05197144]
[63.75450516 310.49334717]
[78.70230865 311.74362183]
[93.15488434 315.75897217]
[106.60539246 322.39852905]
[118.58210754 331.42950439]
[128.66500854 342.53512573]
[136.50048828 355.32595825]
[141.81375122 369.35339355]
[144.41847229 384.12551880]
[144.22328186 399.12423706]
[141.23504639 413.82357788]
[135.55854797 427.70800781]
[127.39287567 440.29061890]
[117.02439117 451.13009644]
[104.81672668 459.84634399]
[91.19799805 466.13363647]
[76.64582062 469.77151489]
[61.67054749 470.63241577]
[46.79735565 468.68606567]
[32.54785538 464.00082397]
[19.42177582 456.74090576]
[7.87945414 447.16101074]
[-1.67431951 435.59701538]
[-8.90449333 422.45455933]
[-13.55750275 408.19448853]
[-15.47016716 393.31692505]
[-14.57540798 378.34362793]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 51]
[2 50]
[3 49]
[4 48]
[5 47]
[6 46]
[7 45]
[11 41]
[12 40]
[13 39]
[14 38]
[15 34]
[16 33]
[17 32]
[18 31]
[19 28]
[20 27]
[54 145]
[55 144]
[56 143]
[57 142]
[58 141]
[59 140]
[60 139]
[61 137]
[62 136]
[63 135]
[64 134]
[67 132]
[68 131]
[69 130]
[70 129]
[71 128]
[78 95]
[79 94]
[80 93]
[81 92]
[82 91]
[83 90]
[84 89]
[105 127]
[106 126]
[107 125]
[108 124]
[109 123]
[110 122]
[111 121]
[112 120]
[113 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
