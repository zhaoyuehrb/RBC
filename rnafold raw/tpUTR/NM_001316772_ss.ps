%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 11:35:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACAAUUUUGACAACUUUUGACCACUUGCGCUAAUAAAAAAAAAAAAAAACUACUCUUAUGUCCACUUUACAAAAGAAAACAGCAUUGUGAUUACUCCCAGGGACCGUAUUUUAUCUUCAGUGGCUGCCUGAUUUUACCCCCACAAUUAAAGUUGAAGGAAUCCUGAACAA\
) } def
/len { sequence length } bind def

/coor [
[109.83578491 329.70019531]
[107.93417358 314.82122803]
[106.03255463 299.94226074]
[103.44702911 297.49554443]
[101.93561554 293.66052246]
[102.14428711 288.96398926]
[104.45541382 284.20401001]
[103.36680603 269.24356079]
[102.27819061 254.28311157]
[101.18957520 239.32266235]
[89.78807831 229.80735779]
[88.47094727 214.65083313]
[98.52880096 202.75640869]
[97.44018555 187.79595947]
[96.35157776 172.83552551]
[95.26296234 157.87507629]
[94.17435455 142.91462708]
[93.08573914 127.95418549]
[91.99712372 112.99373627]
[85.78005219 126.64466858]
[86.79545593 141.61026001]
[85.32672882 156.53817749]
[81.41414642 171.01892090]
[75.16504669 184.65522766]
[66.75086212 197.07301331]
[56.40242004 207.93164062]
[44.40360260 216.93321228]
[31.08357048 223.83081055]
[16.80772781 228.43518066]
[1.96770191 230.62005615]
[-13.02940464 230.32545471]
[-27.77218056 227.55949402]
[-41.85619354 222.39804077]
[-54.89507294 214.98268127]
[-66.53113556 205.51684570]
[-76.44516754 194.26020813]
[-84.36520386 181.52156067]
[-90.07396698 167.65036011]
[-93.41485596 153.02714539]
[-94.29622650 138.05307007]
[-92.69388580 123.13889313]
[-88.65180969 108.69377136]
[-82.28086090 95.11396790]
[-73.75583649 82.77201080]
[-63.31058121 72.00647736]
[-51.23164749 63.11270142]
[-37.85038757 56.33465195]
[-23.53389168 51.85827637]
[-8.67489815 49.80637360]
[6.31896973 50.23522949]
[21.03639030 53.13308334]
[35.07362366 58.42043686]
[48.04558563 65.95224762]
[59.59642792 75.52188873]
[69.40916443 86.86669922]
[83.43395996 92.18695831]
[73.67671204 80.79414368]
[63.91946411 69.40133667]
[54.16222000 58.00852203]
[39.30879974 52.55998993]
[36.90656662 37.86037827]
[27.14931870 26.46756935]
[17.39207268 15.07475758]
[1.75815666 15.41342735]
[-10.40338039 5.58331871]
[-13.35023212 -9.77409267]
[-5.69098616 -23.40750504]
[8.95789623 -28.87964058]
[23.67966080 -23.60672188]
[31.52313995 -10.07846165]
[28.78488350 5.31751108]
[38.54212952 16.71032143]
[48.29937744 28.10313416]
[62.45489120 32.73677826]
[65.55503082 48.25127792]
[75.31227875 59.64408875]
[85.06951904 71.03689575]
[94.82676697 82.42971039]
[87.17784882 69.52645111]
[89.02786255 54.64097595]
[99.60260010 44.00260544]
[114.47671509 42.06333542]
[127.42562866 49.63471222]
[133.03042603 63.54823685]
[128.94558716 77.98133087]
[116.87936401 86.89435577]
[130.29966736 80.19393921]
[143.71997070 73.49352264]
[157.14025879 66.79311371]
[170.56056213 60.09269714]
[183.98086548 53.39228058]
[181.36320496 37.18070984]
[183.86376953 20.96947670]
[191.22807312 6.33340406]
[202.72966003 -5.30927277]
[217.24185181 -12.83433342]
[233.34805298 -15.52012157]
[249.47999573 -13.11673450]
[264.07055664 -5.86923599]
[275.70581055 5.50728607]
[288.87396240 -1.67601466]
[302.04211426 -8.85931492]
[315.21026611 -16.04261589]
[323.61981201 -29.44373131]
[338.49807739 -28.74625587]
[351.60046387 -36.04882431]
[364.63601685 -43.47005463]
[377.67156982 -50.89128494]
[375.74398804 -65.96951294]
[379.73815918 -80.63631439]
[389.04498291 -92.65510559]
[402.24523926 -100.19312286]
[417.32598877 -102.10086060]
[431.98751831 -98.08740234]
[443.99404907 -88.76477814]
[451.51470947 -75.55461884]
[453.40258789 -60.47137451]
[449.36984253 -45.81513214]
[440.03143311 -33.82086182]
[426.81140137 -26.31760216]
[411.72567749 -24.44954681]
[397.07476807 -28.50156212]
[385.09277344 -37.85574341]
[372.05725098 -30.43451118]
[359.02169800 -23.01328087]
[354.74926758 -16.94968987]
[345.68139648 -15.57810593]
[338.21371460 -2.69078898]
[322.39355469 -2.87446547]
[309.22540283 4.30883551]
[296.05725098 11.49213600]
[282.88909912 18.67543602]
[285.96899414 31.99643326]
[285.48208618 45.67295456]
[281.45513916 58.76562881]
[274.15838623 70.37346649]
[264.08721924 79.69584656]
[251.92869568 86.08776093]
[238.51463318 89.10440826]
[224.76466370 88.53216553]
[211.62324524 84.40369415]
[199.99476624 76.99614716]
[190.68127441 66.81258392]
[177.26097107 73.51299286]
[163.84068298 80.21340942]
[150.42037964 86.91382599]
[137.00007629 93.61424255]
[123.57978058 100.31465149]
[116.14434052 109.40787506]
[106.95757294 111.90512848]
[108.04618073 126.86557007]
[109.13479614 141.82601929]
[110.22341156 156.78646851]
[111.31201935 171.74690247]
[112.40063477 186.70735168]
[113.48924255 201.66780090]
[125.16304779 211.98089600]
[126.05393219 227.16842651]
[116.15002441 238.23405457]
[117.23863220 253.19450378]
[118.32724762 268.15493774]
[119.41586304 283.11538696]
[120.91152954 298.04064941]
[122.81314087 312.91961670]
[124.71475983 327.79858398]
[138.38751221 335.13586426]
[145.10594177 349.12307739]
[142.28666687 364.38189697]
[131.01374817 375.04495239]
[115.62187195 377.01211548]
[102.02951813 369.52697754]
[95.46322632 355.46768188]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 165]
[2 164]
[3 163]
[7 162]
[8 161]
[9 160]
[10 159]
[13 156]
[14 155]
[15 154]
[16 153]
[17 152]
[18 151]
[19 150]
[56 78]
[57 77]
[58 76]
[59 75]
[61 73]
[62 72]
[63 71]
[86 148]
[87 147]
[88 146]
[89 145]
[90 144]
[91 143]
[100 132]
[101 131]
[102 130]
[103 129]
[105 127]
[106 125]
[107 124]
[108 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
