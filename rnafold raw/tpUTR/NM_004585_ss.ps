%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 07:04:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAGCCACAAAAUCCUGUGUUAGAAGCAGCUGUGGGGGUCCCAGUGGAGAUGAGCCUCCCCCAUGCCUCCAGCAGCCUGACCCUCGUGCCCUGUCUCAGGCGUUCUCUAGAUCCUUUCCUCUGUUUCCCUCUCUCGCUGGCAAAAGUAUGAUCUAAUUGAAACAAGACUGAAGGAUCAAUAAACAGCCAUCUGCCCCUUCA\
) } def
/len { sequence length } bind def

/coor [
[92.74645233 243.56237793]
[104.95861053 234.13545227]
[103.56778717 219.20007324]
[102.17696381 204.26469421]
[100.78614044 189.32931519]
[85.54756165 188.15594482]
[70.73202515 184.40219116]
[64.64511108 198.11166382]
[58.55820465 211.82113647]
[52.47129822 225.53059387]
[58.38344574 240.18740845]
[52.12323761 254.69897461]
[37.40474319 260.45581055]
[22.96018028 254.04254150]
[17.35925674 239.26400757]
[23.92490005 224.88806152]
[38.76182938 219.44369507]
[44.84873581 205.73422241]
[50.93564606 192.02474976]
[57.02255249 178.31527710]
[46.82435608 171.78227234]
[37.60355759 163.92987061]
[29.52964211 154.90240479]
[22.75101280 144.86578369]
[17.39226532 134.00451660]
[13.55189705 122.51821899]
[11.30049515 110.61802673]
[10.67944241 98.52266693]
[-4.24473000 97.01631927]
[-19.16890144 95.50996399]
[-34.10428238 94.11914062]
[-49.04998016 92.84392548]
[-63.99567413 91.56871796]
[-78.95079041 90.40918732]
[-93.91442871 89.36540985]
[-108.87807465 88.32164001]
[-123.84171295 87.27786255]
[-138.80535889 86.23409271]
[-153.76899719 85.19031525]
[-168.73263550 84.14653778]
[-177.36843872 96.77072906]
[-191.07316589 103.33403778]
[-206.12301636 102.16412354]
[-218.48388672 93.67501831]
[-224.89277649 80.22914124]
[-233.67787170 82.75498199]
[-240.07933044 79.05167389]
[-255.02503967 77.77645874]
[-269.97073364 76.50124359]
[-284.91641235 75.22602844]
[-296.83831787 85.60119629]
[-312.59872437 84.42417145]
[-322.84725952 72.39325714]
[-321.50366211 56.64617920]
[-309.36508179 46.52540970]
[-293.63308716 48.03541183]
[-283.64120483 60.28033066]
[-268.69552612 61.55554581]
[-253.74981689 62.83076096]
[-238.80412292 64.10597229]
[-223.84899902 65.26550293]
[-215.63545227 52.83960342]
[-202.21571350 46.14879990]
[-187.14920044 47.07962418]
[-174.48838806 55.48203659]
[-167.68885803 69.18289948]
[-152.72521973 70.22667694]
[-137.76158142 71.27044678]
[-122.79793549 72.31422424]
[-107.83429718 73.35799408]
[-92.87065887 74.40177155]
[-77.90702057 75.44554138]
[-71.01122284 72.77322388]
[-62.72045898 76.62301636]
[-47.77476501 77.89823151]
[-32.82906723 79.17344666]
[-25.89274979 76.60816193]
[-17.66255188 80.58579254]
[-2.73838019 82.09214783]
[12.18579197 83.59849548]
[16.03898239 69.48947144]
[22.14273262 56.19828415]
[30.33342934 44.08118820]
[40.39152527 33.46298599]
[52.04741287 24.62829399]
[64.98866272 17.81392479]
[78.86838531 13.20253849]
[69.09637451 0.75993168]
[74.77941132 -13.00787163]
[72.46729279 -27.82860374]
[70.04055786 -42.63100052]
[67.49936676 -57.41417694]
[64.95816803 -72.19735718]
[62.41697311 -86.98052979]
[53.77467728 -101.56638336]
[65.39807892 -113.90869904]
[80.47573853 -106.15623474]
[77.20014954 -89.52172852]
[79.74134827 -74.73854828]
[82.28253937 -59.95537567]
[84.82373810 -45.17219925]
[89.05785370 -39.10874557]
[87.28802490 -30.14072227]
[89.60014343 -15.31999016]
[99.20677185 -3.93746138]
[93.68911743 10.89041996]
[117.11776733 12.32259941]
[139.36462402 19.80791473]
[158.89379883 32.82958984]
[174.35702515 50.48862457]
[184.68673706 71.56585693]
[199.25726318 68.00213623]
[213.82777405 64.43841553]
[228.39828491 60.87469101]
[242.96879578 57.31097031]
[257.53930664 53.74724579]
[272.10983276 50.18352509]
[286.68032837 46.61980057]
[294.90634155 33.39216232]
[309.73370361 29.98560333]
[322.29351807 37.90936661]
[336.86404419 34.34564209]
[351.43457031 30.78192139]
[365.97705078 27.10556030]
[380.49069214 23.31678391]
[395.00430298 19.52800560]
[409.51791382 15.73922825]
[424.03155518 11.95045090]
[428.31048584 -6.00086403]
[441.04635620 -19.23810196]
[458.65533447 -24.16081810]
[476.24505615 -19.49092674]
[488.97384644 -6.60312653]
[503.29598999 -11.06140995]
[510.68792725 -24.77260590]
[525.27612305 -29.08991623]
[538.30212402 -21.95832825]
[552.62426758 -26.41661263]
[566.94641113 -30.87489510]
[574.07238770 -44.98149490]
[589.11193848 -49.83810425]
[603.14239502 -42.56339264]
[607.83972168 -27.47330856]
[600.41711426 -13.52053547]
[585.27819824 -8.98300648]
[571.40466309 -16.55275536]
[557.08251953 -12.09447193]
[542.76037598 -7.63618851]
[536.08355713 5.62861872]
[521.62237549 10.35397625]
[507.75427246 3.26073027]
[493.43212891 7.71901369]
[492.46853638 19.46650314]
[487.58337402 30.23147202]
[479.32833862 38.74166107]
[468.65484619 43.98265457]
[456.80450439 45.31877899]
[445.16458130 42.57011032]
[435.10568237 36.03628922]
[427.82031250 26.46407127]
[413.30670166 30.25284767]
[398.79309082 34.04162598]
[384.27944946 37.83040237]
[369.76583862 41.61918259]
[364.08428955 46.35345078]
[354.99829102 45.35243607]
[340.42776489 48.91615677]
[325.85726929 52.47988129]
[318.37255859 65.30622101]
[303.64675903 69.12790680]
[290.24404907 61.19031525]
[275.67355347 64.75403595]
[261.10302734 68.31776428]
[246.53251648 71.88148499]
[231.96200562 75.44520569]
[217.39149475 79.00892639]
[202.82098389 82.57265472]
[188.25045776 86.13637543]
[189.24182129 95.97002411]
[189.14082336 105.85301208]
[187.94869995 115.66435242]
[185.68002319 125.28395081]
[182.36257935 134.59405518]
[178.03698730 143.48071289]
[172.75617981 151.83515930]
[166.58479309 159.55509949]
[159.59837341 166.54606628]
[151.88244629 172.72245789]
[143.53144836 178.00869751]
[134.64759827 182.34007263]
[125.33964539 185.66357422]
[115.72151947 187.93849182]
[117.11235046 202.87387085]
[118.50317383 217.80924988]
[119.89399719 232.74462891]
[133.63679504 239.75454712]
[141.38838196 253.09307861]
[140.67524719 268.50396729]
[131.72496033 281.06961060]
[117.39350128 286.78039551]
[102.25401306 283.81402588]
[91.13743591 273.11706543]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 195]
[3 194]
[4 193]
[5 192]
[7 20]
[8 19]
[9 18]
[10 17]
[28 80]
[29 79]
[30 78]
[31 76]
[32 75]
[33 74]
[34 72]
[35 71]
[36 70]
[37 69]
[38 68]
[39 67]
[40 66]
[45 61]
[47 60]
[48 59]
[49 58]
[50 57]
[87 106]
[89 104]
[90 103]
[91 101]
[92 100]
[93 99]
[94 98]
[111 178]
[112 177]
[113 176]
[114 175]
[115 174]
[116 173]
[117 172]
[118 171]
[121 168]
[122 167]
[123 166]
[124 164]
[125 163]
[126 162]
[127 161]
[128 160]
[133 152]
[134 151]
[137 148]
[138 147]
[139 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
