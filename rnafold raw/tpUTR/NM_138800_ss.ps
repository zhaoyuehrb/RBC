%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 06:37:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAGGAUUAAGAAAACUUACUGUUUGGGAACUCCAUAUACAAGGGAGCCCUUCACUGUUGAUACAAAGAAAUCAUACUGUUCAGGCUUUUUUGUACUUUAGUGUCACUUCAUUUUAUUGCUAUUAAAUAAAAAAUUUGUAAAAGGCAAAACUUUUUGUACAUUUUCUUACAAUUAAAAUAAUCUCUUAUGGACCAUUA\
) } def
/len { sequence length } bind def

/coor [
[54.57312012 332.85321045]
[44.38328552 334.22586060]
[38.83500671 348.16201782]
[33.28672791 362.09817505]
[34.04505157 367.28244019]
[32.85221481 371.78573608]
[30.29654694 374.97732544]
[27.13172340 376.55261230]
[20.92988586 390.21047974]
[14.72804737 403.86834717]
[8.52620983 417.52618408]
[10.65784264 433.78622437]
[-2.52075791 443.54617310]
[-17.45257759 436.76583862]
[-18.77704048 420.42025757]
[-5.13165283 411.32437134]
[1.07018495 397.66650391]
[7.27202225 384.00863647]
[13.47385979 370.35076904]
[19.35056686 356.54989624]
[24.89884567 342.61373901]
[30.44712448 328.67758179]
[21.44581032 311.40997314]
[28.13428688 292.79748535]
[46.62926102 284.97119141]
[51.51153946 270.78799438]
[56.39381790 256.60476685]
[55.27862167 254.02278137]
[55.12411499 250.84136963]
[56.16453552 247.42614746]
[58.49689484 244.22087097]
[62.05777740 241.69746399]
[67.82536316 227.85061646]
[73.59294891 214.00378418]
[79.36053467 200.15695190]
[85.12812805 186.31010437]
[90.89571381 172.46327209]
[49.18587112 89.09873199]
[36.23513794 81.53047180]
[23.28440475 73.96221924]
[10.33366966 66.39396667]
[-2.61706424 58.82570648]
[-15.56779861 51.25745392]
[-28.51853180 43.68919754]
[-41.46926498 36.12094116]
[-54.42000198 28.55268860]
[-67.37073517 20.98443222]
[-80.32147217 13.41617775]
[-93.27220154 5.84792233]
[-105.45174408 12.31340981]
[-119.12699127 11.91708088]
[-130.72656250 4.86949873]
[-137.27407837 -6.89574862]
[-137.15159607 -20.25134277]
[-149.98124695 -28.02309799]
[-165.79350281 -28.55541420]
[-172.67042542 -41.76741791]
[-185.50007629 -49.53917313]
[-198.39067078 -57.20941925]
[-211.34140015 -64.77767181]
[-224.29212952 -72.34592438]
[-237.24287415 -79.91418457]
[-251.39677429 -73.55442810]
[-266.57876587 -76.76168823]
[-276.95108032 -88.30269623]
[-278.52532959 -103.73970795]
[-270.69616699 -117.13687897]
[-256.47412109 -123.34272003]
[-241.32778931 -119.97095490]
[-231.08129883 -108.31809998]
[-229.67462158 -92.86491394]
[-216.72387695 -85.29666138]
[-203.77314758 -77.72840881]
[-190.82241821 -70.16014862]
[-183.45397949 -69.49890900]
[-177.72831726 -62.36882019]
[-164.89866638 -54.59706497]
[-150.00408936 -54.62063599]
[-142.20948792 -40.85274506]
[-129.37985229 -33.08098602]
[-114.46250916 -39.92228317]
[-98.24363708 -36.49312973]
[-87.15189362 -23.95040321]
[-85.70394897 -7.10281181]
[-72.75321198 0.46544328]
[-59.80247879 8.03369808]
[-46.85174561 15.60195351]
[-33.90101242 23.17020798]
[-20.95027733 30.73846436]
[-7.99954319 38.30672073]
[4.95119095 45.87497330]
[17.90192413 53.44322968]
[30.85265923 61.01148605]
[43.80339432 68.57974243]
[56.75412750 76.14799500]
[63.63116074 73.15526581]
[53.68843079 61.92396545]
[61.29758072 48.99721527]
[75.94300079 52.23938751]
[77.38522339 67.16980743]
[84.26225281 64.17707825]
[87.55058289 49.54195023]
[90.83890533 34.90682602]
[82.17459106 21.68921280]
[85.47601318 6.23359394]
[98.78448486 -2.29048896]
[114.20433807 1.17415202]
[122.58724213 14.57200718]
[118.95976257 29.95436668]
[105.47402954 38.19514847]
[102.18570709 52.83027649]
[98.89738464 67.46540070]
[112.29990387 74.20130920]
[122.08207703 62.82989120]
[131.86425781 51.45847702]
[141.64642334 40.08706284]
[151.42860413 28.71564865]
[161.21076965 17.34423447]
[158.50624084 1.94230258]
[166.37933350 -11.56874847]
[181.11260986 -16.80941200]
[195.74946594 -11.30520725]
[203.37884521 2.34494758]
[200.39836121 17.69586754]
[188.21533203 27.49931908]
[172.58218384 27.12640953]
[162.80001831 38.49782562]
[153.01783752 49.86923981]
[143.23567200 61.24065399]
[133.45349121 72.61206818]
[123.67131805 83.98348236]
[127.55719757 90.39830780]
[142.55386353 90.08228302]
[135.32894897 103.22795105]
[139.21482849 109.64277649]
[153.82354736 106.23902893]
[168.43225098 102.83528900]
[183.04096985 99.43154907]
[197.64968872 96.02780914]
[207.31056213 83.21971893]
[223.35102844 82.93124390]
[233.46620178 95.38365936]
[229.89659119 111.02455139]
[215.38050842 117.85556030]
[201.05343628 110.63652039]
[186.44471741 114.04026031]
[171.83599854 117.44400787]
[157.22727966 120.84774780]
[142.61857605 124.25148773]
[141.79144287 131.70573425]
[156.48150635 128.67222595]
[163.90585327 141.70599365]
[153.80412292 152.79449463]
[140.13719177 146.61424255]
[139.31005859 154.06849670]
[152.81724548 160.59197998]
[166.32443237 167.11547852]
[179.83161926 173.63896179]
[193.33880615 180.16246033]
[206.94715881 172.70643616]
[222.33479309 174.70657349]
[233.58483887 185.39376831]
[236.37142944 200.65856934]
[229.62306213 214.63137817]
[215.93461609 221.93933105]
[200.56959534 219.77239990]
[189.43614197 208.96379089]
[186.81532288 193.66964722]
[173.30813599 187.14614868]
[159.80094910 180.62266541]
[146.29376221 174.09916687]
[132.78657532 167.57568359]
[125.77556610 170.23947144]
[134.50170898 182.44006348]
[143.22785950 194.64065552]
[156.26188660 202.06452942]
[163.29286194 215.31463623]
[162.13389587 230.26980591]
[153.14547729 242.27847290]
[139.12327576 247.60559082]
[124.42866516 244.59423828]
[113.63211060 234.18106079]
[110.09169006 219.60485840]
[114.90754700 205.40080261]
[113.33055115 190.48393250]
[111.75355530 175.56706238]
[104.74255371 178.23085022]
[98.97496033 192.07769775]
[93.20737457 205.92453003]
[87.43978882 219.77137756]
[81.67220306 233.61820984]
[75.90461731 247.46504211]
[70.57702637 261.48706055]
[65.69474792 275.67025757]
[60.81246948 289.85348511]
[67.74392700 297.98635864]
[70.64693451 308.18640137]
[69.06105042 318.59054565]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 22]
[3 21]
[4 20]
[8 19]
[9 18]
[10 17]
[11 16]
[25 195]
[26 194]
[27 193]
[32 192]
[33 191]
[34 190]
[35 189]
[36 188]
[37 187]
[38 95]
[39 94]
[40 93]
[41 92]
[42 91]
[43 90]
[44 89]
[45 88]
[46 87]
[47 86]
[48 85]
[49 84]
[54 80]
[55 79]
[57 77]
[58 76]
[59 74]
[60 73]
[61 72]
[62 71]
[101 112]
[102 111]
[103 110]
[113 131]
[114 130]
[115 129]
[116 128]
[117 127]
[118 126]
[135 149]
[136 148]
[137 147]
[138 146]
[139 145]
[155 172]
[156 171]
[157 170]
[158 169]
[159 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
