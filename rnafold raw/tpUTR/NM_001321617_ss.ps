%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 10:36:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUCUCCAGCCCCGCAGCCCGGCCCGGGCGUCCUCCGCCAGCUCCUGUGACCAGCGCGUCUCCCGAUGCUCUCCGCCGUGUUCGUGUCCCCAGGCGCCCUCGCUGCAGCCCCGCCCCCGUGGGUCUCUGACUCUGUCGCUUUUCUCUAAGUAAAGAUUUCACGUCCACCGGA\
) } def
/len { sequence length } bind def

/coor [
[157.00329590 108.03879547]
[167.52372742 118.73086548]
[173.79559326 132.35671997]
[175.07580566 147.30198669]
[171.21270752 161.79598999]
[162.66395569 174.12153625]
[150.44241333 182.81831360]
[135.99604797 186.85594177]
[121.03643036 185.75607300]
[107.33592987 179.64900208]
[96.51775360 169.25827026]
[89.86361694 155.81497192]
[88.16182709 140.91259766]
[74.62207031 147.36822510]
[61.08230972 153.82383728]
[47.54255676 160.27944946]
[34.00279999 166.73507690]
[30.95300102 177.22259521]
[22.78934479 184.14257812]
[12.38086224 185.38113403]
[3.21449018 180.76766968]
[-10.55074692 186.72738647]
[-24.31598473 192.68710327]
[-27.74458313 203.05696106]
[-36.15412903 209.67596436]
[-46.60071945 210.53575134]
[-55.59352875 205.59248352]
[-69.56609344 211.04844666]
[-83.53865051 216.50439453]
[-97.51121521 221.96035767]
[-105.24310303 236.01728821]
[-121.07780457 238.59449768]
[-132.86827087 227.71496582]
[-131.56988525 211.72454834]
[-118.17864990 202.88970947]
[-102.96717072 207.98779297]
[-88.99461365 202.53184509]
[-75.02204895 197.07588196]
[-61.04948425 191.61991882]
[-50.14727783 175.67541504]
[-30.27570343 178.92185974]
[-16.51046562 172.96214294]
[-2.74522805 167.00242615]
[7.57082701 150.67256165]
[27.54718018 153.19531250]
[41.08693695 146.73970032]
[54.62669373 140.28407288]
[68.16645050 133.82846069]
[81.70620728 127.37284088]
[82.65701294 119.93335724]
[70.72206879 110.84726715]
[84.55863190 105.05438232]
[85.50943756 97.61489868]
[74.02850342 87.96149445]
[58.48649597 85.00234985]
[53.72451782 70.88948822]
[42.24358368 61.23608780]
[30.76264954 51.58268738]
[19.28171539 41.92928314]
[7.80078268 32.27588272]
[-8.43204784 29.94623947]
[-14.27893066 14.62481594]
[-3.72509336 2.07298088]
[12.37258053 5.20298576]
[17.45418358 20.79495049]
[28.93511772 30.44835091]
[40.41604996 40.10175323]
[51.89698410 49.75515366]
[63.37791824 59.40855789]
[78.09873199 61.67722702]
[83.68190765 76.48056030]
[95.16284180 86.13396454]
[109.83693695 89.24375916]
[124.24665070 85.07720184]
[138.65637207 80.91065216]
[143.54837036 76.37773132]
[149.15414429 75.20037842]
[153.66534424 76.86465454]
[168.21684265 73.22408295]
[182.76834106 69.58350372]
[190.92442322 56.31263351]
[205.73358154 52.82786560]
[218.33506775 60.68523026]
[232.88656616 57.04465866]
[247.43807983 53.40408325]
[261.98956299 49.76350784]
[265.14532471 34.17010117]
[274.70962524 21.54488564]
[288.74066162 14.34971428]
[304.43344116 13.95420361]
[318.68038940 20.37542152]
[329.98416138 10.51513481]
[341.28790283 0.65484852]
[352.59164429 -9.20543766]
[357.90509033 -24.10771561]
[372.58227539 -26.64331818]
[383.88604736 -36.50360489]
[395.18978882 -46.36389160]
[406.49353027 -56.22417831]
[411.80697632 -71.12645721]
[426.48416138 -73.66205597]
[437.78793335 -83.52234650]
[438.64761353 -100.97750854]
[451.59875488 -112.20306396]
[468.32736206 -110.63749695]
[479.45019531 -120.70142365]
[479.98870850 -136.49653625]
[491.59518433 -147.22338867]
[507.38372803 -146.51791382]
[517.98724365 -134.79869080]
[517.11492920 -119.01848602]
[505.28421021 -108.53944397]
[489.51412964 -109.57858276]
[478.39129639 -99.51466370]
[479.55194092 -86.66098785]
[472.98986816 -75.32212067]
[460.91296387 -69.76146698]
[447.64822388 -72.21859741]
[436.34445190 -62.35830688]
[431.83953857 -48.16130447]
[416.35382080 -44.92042923]
[405.05007935 -35.06014252]
[393.74633789 -25.19985580]
[382.44256592 -15.33956909]
[377.93765259 -1.14256549]
[362.45193481 2.09831119]
[351.14819336 11.95859814]
[339.84442139 21.81888390]
[328.54067993 31.67917061]
[331.90533447 40.41296387]
[332.83856201 49.72580719]
[331.27386475 58.95357132]
[344.30941772 66.37480164]
[357.34497070 73.79603577]
[369.85836792 68.75565338]
[382.79855347 71.80932617]
[391.48007202 81.62062073]
[392.89303589 94.44902039]
[405.79168701 102.10572815]
[418.69030762 109.76244354]
[431.58895874 117.41915131]
[446.83926392 113.27143860]
[460.51403809 121.19456482]
[464.50027466 136.48788452]
[456.43301392 150.07812500]
[441.09841919 153.90246582]
[427.59423828 145.69197083]
[423.93222046 130.31779480]
[411.03359985 122.66107941]
[398.13497925 115.00436401]
[385.23632812 107.34764862]
[369.15103149 112.20151520]
[354.22991943 103.76905823]
[349.92373657 86.83157349]
[336.88818359 79.41034698]
[323.85263062 71.98911285]
[309.87948608 81.64894867]
[292.91271973 83.63803864]
[276.90554810 77.40240479]
[265.63015747 64.31501007]
[251.07864380 67.95558167]
[236.52714539 71.59616089]
[221.97564697 75.23673248]
[214.55876160 88.10240173]
[199.85333252 92.00175476]
[186.40892029 84.13500977]
[171.85742188 87.77558136]
[157.30590820 91.41616058]
[142.82292175 95.32036591]
[128.41320801 99.48691559]
[114.00349426 103.65347290]
[128.55812073 100.02539825]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 49]
[14 48]
[15 47]
[16 46]
[17 45]
[21 43]
[22 42]
[23 41]
[27 39]
[28 38]
[29 37]
[30 36]
[53 72]
[54 71]
[56 69]
[57 68]
[58 67]
[59 66]
[60 65]
[73 171]
[74 170]
[75 169]
[78 168]
[79 167]
[80 166]
[83 163]
[84 162]
[85 161]
[86 160]
[91 129]
[92 128]
[93 127]
[94 126]
[96 124]
[97 123]
[98 122]
[99 121]
[101 119]
[102 118]
[105 114]
[106 113]
[132 156]
[133 155]
[134 154]
[138 151]
[139 150]
[140 149]
[141 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
