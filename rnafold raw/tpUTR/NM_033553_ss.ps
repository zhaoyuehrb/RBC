%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 03:13:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGCUUGCCCACUGCCUGCCUCCCCUCCGCAGCAGGGAAGCUCUUUUCUCCUGCAGAAAGGGCCACCCAUGAUACUCCACUCCCAGCAGCUCAACCUACCCUGGUCCAGUCGGGAGGAGCAGCCCGGGGAGGAACUGGGUGACUGGAGGCCUCGCCCCAACACUGUCCUUCCCUGCCACUUCAACCCCCAGCUAAUAAACCAGAUUCCAGAGU\
) } def
/len { sequence length } bind def

/coor [
[87.10253906 396.95861816]
[81.56444550 410.89883423]
[76.02635193 424.83905029]
[70.48825836 438.77926636]
[64.95016479 452.71945190]
[59.41207504 466.65966797]
[65.42648315 481.02856445]
[59.61148453 495.08703613]
[45.87589264 500.73229980]
[40.33779907 514.67248535]
[45.34627914 529.91369629]
[36.43279266 543.25274658]
[20.43500137 544.45697021]
[9.62504292 532.60272217]
[12.29539394 516.78344727]
[26.39758682 509.13439941]
[31.93567848 495.19421387]
[25.81878853 481.66204834]
[31.23661804 467.44580078]
[45.47186279 461.12158203]
[51.00995255 447.18136597]
[56.54804611 433.24114990]
[62.08613968 419.30093384]
[67.62422943 405.36074829]
[73.16232300 391.42053223]
[52.87996674 377.45150757]
[37.27202606 358.38867188]
[27.57231140 335.73019409]
[24.55001450 311.25881958]
[28.44872093 286.90158081]
[38.96678925 264.57809448]
[55.28067398 246.04925537]
[76.10941315 232.77836609]
[99.81520844 225.81549072]
[98.94303131 210.84086609]
[98.07086182 195.86624146]
[97.19869232 180.89161682]
[96.32651520 165.91699219]
[95.45434570 150.94236755]
[94.58217621 135.96775818]
[93.70999908 120.99312592]
[82.72483063 110.77912140]
[67.72641754 110.99727631]
[52.72800064 111.21543884]
[37.72958755 111.43359375]
[22.73117256 111.65175629]
[7.73275995 111.86991119]
[-7.26565361 112.08807373]
[-22.26406670 112.30622864]
[-31.09080887 125.06821442]
[-45.74420929 130.17286682]
[-60.58973694 125.65734100]
[-69.91898346 113.25795746]
[-70.14466095 97.74252319]
[-61.17999649 85.07704163]
[-46.47208023 80.13165283]
[-31.67641258 84.80795288]
[-22.48222542 97.30781555]
[-7.48381186 97.08966064]
[7.51460171 96.87149811]
[22.51301575 96.65334320]
[37.51142883 96.43518066]
[52.50984192 96.21702576]
[67.50825500 95.99886322]
[82.50666809 95.78070831]
[92.47860718 84.57533264]
[90.95407867 69.65300751]
[89.42955780 54.73067856]
[87.90502930 39.80835342]
[86.38050079 24.88602638]
[84.85597229 9.96369934]
[75.89030457 6.27819586]
[68.92311859 -0.37805220]
[64.88125610 -9.06129551]
[64.28111267 -18.56233788]
[67.16299438 -27.57489014]
[73.09134674 -34.87516785]
[81.22003174 -39.48804092]
[80.56574249 -54.47376251]
[79.91144562 -69.45948792]
[71.57955933 -82.90902710]
[78.75434113 -95.96168518]
[78.10004425 -110.94740295]
[77.44575500 -125.93312836]
[76.79146576 -140.91885376]
[65.42166138 -151.56616211]
[64.97159576 -166.77314758]
[75.19225311 -177.54689026]
[74.53795624 -192.53262329]
[66.20606995 -205.98216248]
[73.38085175 -219.03482056]
[72.72655487 -234.02053833]
[72.07226562 -249.00625610]
[71.41797638 -263.99197388]
[60.04817200 -274.63931274]
[59.59810638 -289.84628296]
[69.81876373 -300.62002563]
[69.16446686 -315.60574341]
[68.51017761 -330.59149170]
[57.59987640 -338.48571777]
[53.29001999 -351.03866577]
[56.94170761 -363.59609985]
[67.00705719 -371.63739014]
[66.57078552 -386.63104248]
[66.13451385 -401.62469482]
[59.63005829 -417.28125000]
[72.87415314 -427.86569214]
[86.71127319 -418.06924438]
[81.12817383 -402.06094360]
[81.56444550 -387.06729126]
[82.00070953 -372.07363892]
[94.71605682 -361.06384277]
[95.54894257 -343.92672729]
[83.49590302 -331.24575806]
[84.15019226 -316.26004028]
[84.80448151 -301.27432251]
[95.92523956 -291.43234253]
[96.80226135 -276.24401855]
[86.40370178 -264.64627075]
[87.05799103 -249.66055298]
[87.71228027 -234.67483521]
[88.36656952 -219.68910217]
[96.65166473 -207.31144714]
[89.52368164 -193.18690491]
[90.17797089 -178.20118713]
[101.29872894 -168.35922241]
[102.17575073 -153.17088318]
[91.77719116 -141.57315063]
[92.43148041 -126.58741760]
[93.08576965 -111.60169983]
[93.74005890 -96.61597443]
[102.02515411 -84.23831177]
[94.89717102 -70.11377716]
[95.55146027 -55.12805557]
[96.20575714 -40.14233017]
[112.38153076 -27.64180565]
[114.08670044 -6.97478962]
[99.77830505 8.43917274]
[101.30282593 23.36149979]
[102.82735443 38.28382492]
[104.35188293 53.20615005]
[105.87640381 68.12847900]
[107.40093231 83.05080414]
[111.10424042 83.68582916]
[114.80382538 85.14112091]
[118.31793976 87.43213654]
[132.86175537 83.76098633]
[147.40557861 80.08983612]
[154.95692444 74.95713806]
[162.18762207 76.47269440]
[176.78329468 73.01345062]
[191.37896729 69.55421448]
[205.39677429 60.01810074]
[218.44071960 70.84822083]
[211.64477539 86.38049316]
[194.83821106 84.14988708]
[180.24252319 87.60912323]
[165.64685059 91.06836700]
[151.07672119 94.63365173]
[136.53291321 98.30480194]
[121.98908997 101.97595215]
[136.51252747 105.72689056]
[151.44882202 107.10802460]
[162.96562195 116.71860504]
[166.99794006 131.16645813]
[162.12252808 145.35202026]
[150.06021118 154.26832581]
[135.06854248 154.76823425]
[122.43902588 146.67532349]
[116.62924194 132.84428406]
[108.68462372 120.12095642]
[109.55679321 135.09558105]
[110.42897034 150.07020569]
[111.30113983 165.04483032]
[112.17330933 180.01943970]
[113.04548645 194.99406433]
[113.91765594 209.96868896]
[114.78983307 224.94331360]
[122.45903778 225.49531555]
[130.05014038 226.71423340]
[137.50523376 228.59065247]
[144.76751709 231.11012268]
[151.78163147 234.25332642]
[158.49412537 237.99617004]
[164.85386658 242.30998230]
[170.81242371 247.16178894]
[176.32443237 252.51446533]
[181.34793091 258.32711792]
[185.84469604 264.55529785]
[189.78056335 271.15145874]
[193.12557983 278.06524658]
[195.85438538 285.24380493]
[197.94624329 292.63241577]
[199.38534546 300.17465210]
[200.16084290 307.81295776]
[200.26693726 315.48910522]
[199.70294189 323.14450073]
[198.47328186 330.72079468]
[196.58746338 338.16021729]
[194.05998230 345.40606689]
[190.91024780 352.40310669]
[187.16238403 359.09802246]
[182.84509277 365.43981934]
[177.99140930 371.38018799]
[172.63842773 376.87390137]
[166.82710266 381.87918091]
[160.60179138 386.35791016]
[154.01008606 390.27603149]
[147.10231018 393.60379028]
[139.93119812 396.31591797]
[132.55149841 398.39181519]
[125.01951599 399.81579590]
[117.39273834 400.57711792]
[109.72933197 400.67010498]
[102.08774567 400.09414673]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 25]
[2 24]
[3 23]
[4 22]
[5 21]
[6 20]
[9 17]
[10 16]
[34 178]
[35 177]
[36 176]
[37 175]
[38 174]
[39 173]
[40 172]
[41 171]
[42 65]
[43 64]
[44 63]
[45 62]
[46 61]
[47 60]
[48 59]
[49 58]
[66 143]
[67 142]
[68 141]
[69 140]
[70 139]
[71 138]
[78 135]
[79 134]
[80 133]
[82 131]
[83 130]
[84 129]
[85 128]
[88 125]
[89 124]
[91 122]
[92 121]
[93 120]
[94 119]
[97 116]
[98 115]
[99 114]
[103 111]
[104 110]
[105 109]
[146 161]
[147 160]
[148 159]
[150 158]
[151 157]
[152 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
