%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 16:11:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGAAGCCCUGUGGAUGUGAAGAAUGUGGAAAAACCUUUGCUGUUUCCUCAAGCCUAACUGAACAUGUAAAAAUUCACAGGAGAAAGUAACACUAUCAAUGUAAGGAAUGUGAGAAAGCCUGAACAGUUGAAUCUUUCUAGAUAUGUACAAACUCACACUGUAGAGAAACCCUGUAAAUGUAAGGGAUGUAGGAAAACACUAGUUCUUCUCUCUCUCU\
) } def
/len { sequence length } bind def

/coor [
[50.60548401 282.51110840]
[49.32185745 267.56613159]
[48.03823471 252.62117004]
[46.75460815 237.67619324]
[45.47098541 222.73121643]
[44.18735886 207.78623962]
[42.90373230 192.84126282]
[40.18344879 123.01940155]
[81.57964325 94.60925293]
[67.12837219 98.62929535]
[52.67710114 102.64933777]
[38.22582626 106.66938019]
[23.77455521 110.68941498]
[9.32328320 114.70945740]
[-5.12798834 118.72949982]
[-19.57925987 122.74954224]
[-34.03053284 126.76958466]
[-35.34026337 140.94836426]
[-41.39739990 153.80195618]
[-51.45624542 163.79574585]
[-64.29467773 169.74424744]
[-78.36265564 170.95172119]
[-91.96930695 167.29351807]
[-103.48620605 159.22853088]
[-111.54222870 147.74182129]
[-126.04943085 151.55509949]
[-140.55664062 155.36836243]
[-155.06384277 159.18164062]
[-164.73150635 189.40467834]
[-178.19247437 196.02299500]
[-191.65345764 202.64131165]
[-205.11444092 209.25962830]
[-218.57540894 215.87794495]
[-218.91510010 231.17968750]
[-226.33709717 244.56521606]
[-239.13587952 252.95864868]
[-254.37039185 254.43122864]
[-268.53982544 248.64457703]
[-278.38818359 236.92840576]
[-281.65237427 221.97502136]
[-277.58227539 207.22059631]
[-267.11322021 196.05558777]
[-252.65089417 191.04563904]
[-237.51864624 193.34199524]
[-225.19372559 202.41696167]
[-211.73275757 195.79864502]
[-198.27177429 189.18032837]
[-184.81079102 182.56201172]
[-171.34982300 175.94369507]
[-174.43356323 161.26409912]
[-189.41979980 160.62170410]
[-204.40605164 159.97929382]
[-213.95019531 172.21403503]
[-228.87223816 176.46987915]
[-243.43435669 171.11035156]
[-252.03710938 158.19631958]
[-251.37255859 142.69348145]
[-241.69624329 130.56298828]
[-226.72891235 126.46928406]
[-212.22579956 131.98646545]
[-203.76364136 144.99305725]
[-188.77740479 145.63546753]
[-173.79116821 146.27786255]
[-158.87710571 144.67443848]
[-144.36990356 140.86116028]
[-129.86270142 137.04789734]
[-115.35550690 133.23461914]
[-113.45282745 117.49922180]
[-105.63723755 103.66582489]
[-93.08025360 93.86813354]
[-77.68727112 89.63039398]
[-61.80852127 91.63031006]
[-47.88016129 99.59088135]
[-38.05057526 112.31831360]
[-23.59930229 108.29827118]
[-9.14803028 104.27822876]
[5.30324221 100.25818634]
[19.75451469 96.23814392]
[34.20578766 92.21810150]
[48.65705872 88.19806671]
[63.10832977 84.17802429]
[77.55960083 80.15798187]
[86.88800812 68.41145325]
[87.53041077 53.42521667]
[88.17281342 38.43898010]
[88.81520844 23.45273972]
[89.45761108 8.46650314]
[90.10001373 -6.51973486]
[82.77009583 -10.30616570]
[76.89363098 -16.04871178]
[72.97159576 -23.23023415]
[71.33021545 -31.21220398]
[72.09394073 -39.29145432]
[75.17621613 -46.76213074]
[80.28881073 -52.97735214]
[86.96862793 -57.40522003]
[94.61963654 -59.67431641]
[96.54212189 -74.55060577]
[98.46461487 -89.42690277]
[100.38710785 -104.30319214]
[102.20333862 -119.19282532]
[103.91320801 -134.09504700]
[105.62308502 -148.99728394]
[97.90509796 -165.71934509]
[108.90455627 -179.39698792]
[110.40145111 -194.32211304]
[111.89835358 -209.24723816]
[102.16919708 -221.41198730]
[103.89987946 -236.52687073]
[115.55707550 -245.72715759]
[105.35999298 -257.80172729]
[106.77081299 -273.54290771]
[118.95251465 -283.61175537]
[134.67790222 -282.03460693]
[144.61740112 -269.74713135]
[142.87406921 -254.03929138]
[130.48219299 -244.23025513]
[140.08010864 -232.89820862]
[138.77465820 -217.74067688]
[126.82347870 -207.75033569]
[125.32657623 -192.82521057]
[123.82967377 -177.90008545]
[131.23999023 -168.34431458]
[130.11940002 -155.90158081]
[120.52530670 -147.28741455]
[118.81543732 -132.38517761]
[117.10556793 -117.48295593]
[119.46436310 -110.48411560]
[115.26340485 -102.38069916]
[113.34091187 -87.50440979]
[111.41841888 -72.62811279]
[109.49592590 -57.75182343]
[124.56200409 -41.80902863]
[122.85498810 -19.66250420]
[105.08625031 -5.87733269]
[104.44385529 9.10890484]
[103.80145264 24.09514236]
[103.15904999 39.08137894]
[102.51664734 54.06761932]
[101.87424469 69.05385590]
[107.39980316 74.12516785]
[115.14834595 61.28149033]
[122.89689636 48.43781281]
[124.18222809 33.49298477]
[134.09829712 22.23813629]
[148.76216125 19.08044624]
[162.43174744 25.25640297]
[169.75431824 38.34762192]
[167.86248779 53.22784424]
[157.49707031 64.07026672]
[142.71788025 66.62934875]
[130.58439636 75.44857025]
[118.45092010 84.26779175]
[123.97647858 89.33910370]
[138.85276794 87.41661072]
[153.72906494 85.49411774]
[161.04713440 71.81108093]
[175.02491760 65.07303619]
[190.28765869 67.87089539]
[200.96653748 79.12883759]
[202.95530701 94.51793671]
[195.48924255 108.12078094]
[181.43917847 114.70679474]
[166.20767212 111.74352264]
[155.65155029 100.37040710]
[140.77526855 102.29290009]
[125.89897156 104.21539307]
[124.88464355 111.64648438]
[136.74136353 120.83442688]
[122.85597992 126.50866699]
[121.84165192 133.93975830]
[135.65850830 139.77880859]
[149.47535706 145.61785889]
[163.29222107 151.45692444]
[175.96875000 142.66435242]
[191.38732910 142.14387512]
[204.62794495 150.06155396]
[211.46556091 163.89088440]
[209.71833801 179.21899414]
[199.94377136 191.15470886]
[185.26092529 195.88941956]
[170.35502625 191.91227722]
[159.98249817 180.49238586]
[157.45317078 165.27377319]
[143.63630676 159.43472290]
[129.81945801 153.59567261]
[116.00260162 147.75662231]
[111.42274475 153.69587708]
[117.13002014 167.56768799]
[102.26302338 165.57441711]
[97.68316650 171.51368713]
[106.84288025 183.39221191]
[116.00260162 195.27075195]
[131.63330078 195.73484802]
[143.27433777 206.17613220]
[145.42916870 221.66453552]
[137.08035278 234.88691711]
[122.16995239 239.60006714]
[107.73818970 233.57858276]
[100.59930420 219.66563416]
[104.12406921 204.43046570]
[94.96434784 192.55194092]
[85.80463409 180.67340088]
[78.81565094 183.39445496]
[76.53998566 198.22084045]
[64.83769226 188.83657837]
[57.84870911 191.55763245]
[59.13233566 206.50260925]
[60.41595840 221.44758606]
[61.69958496 236.39256287]
[62.98321152 251.33753967]
[64.26683807 266.28250122]
[65.55046082 281.22747803]
[78.44892883 290.06851196]
[82.59700775 305.14587402]
[76.03610992 319.34054565]
[61.86408615 325.95022583]
[46.77252960 321.85400391]
[37.88721848 308.98602295]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 213]
[2 212]
[3 211]
[4 210]
[5 209]
[6 208]
[7 207]
[9 82]
[10 81]
[11 80]
[12 79]
[13 78]
[14 77]
[15 76]
[16 75]
[17 74]
[25 67]
[26 66]
[27 65]
[28 64]
[29 49]
[30 48]
[31 47]
[32 46]
[33 45]
[50 63]
[51 62]
[52 61]
[83 140]
[84 139]
[85 138]
[86 137]
[87 136]
[88 135]
[97 132]
[98 131]
[99 130]
[100 129]
[101 127]
[102 126]
[103 125]
[105 122]
[106 121]
[107 120]
[110 117]
[154 167]
[155 166]
[156 165]
[171 187]
[172 186]
[173 185]
[174 184]
[191 203]
[192 202]
[193 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
