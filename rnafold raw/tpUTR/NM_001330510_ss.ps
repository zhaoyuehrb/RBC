%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 18:47:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCAGACAAAGACUGAAUCAGGCCUUCCCUUCUUCUUGGUGGUGUUCUUGAGUAAGAUAAUCUGGACUGGCCCCCGUCUUUGCUUCCCUGCCUGCUGCUGCCCCAUUUGAUCAAGAGACCAUGGAAGUGUCAGAGAUUCAGAAUCCAAGAUUGUCUUUAAGUUUUCAACUGUAAAUAAAGUUUUUUUGUAUGCGUA\
) } def
/len { sequence length } bind def

/coor [
[67.18817902 281.53988647]
[69.53899384 266.08001709]
[81.31133270 255.78700256]
[80.83300018 240.79463196]
[72.69377899 228.32055664]
[79.98706818 214.28067017]
[79.50873566 199.28829956]
[79.03040314 184.29592896]
[78.55206299 169.30355835]
[78.07373047 154.31118774]
[77.59539795 139.31881714]
[77.11706543 124.32644653]
[71.84963989 110.28172302]
[62.35108948 98.67234802]
[52.85253525 87.06298065]
[43.35398102 75.45360565]
[33.85542679 63.84423828]
[24.35687447 52.23486710]
[14.85832119 40.62549591]
[-4.29642534 34.36817932]
[-6.61369753 15.17810154]
[-16.47763062 3.87753415]
[-26.34156418 -7.42303324]
[-36.29528809 -18.64459229]
[-46.33817291 -29.78642654]
[-56.38105392 -40.92826080]
[-66.42393494 -52.07009888]
[-76.46681976 -63.21193314]
[-75.04466248 -48.27950287]
[-81.18290710 -34.59294128]
[-93.27983093 -25.72364235]
[-108.17884064 -23.98597145]
[-121.99217224 -29.83336067]
[-131.11534119 -41.73998260]
[-133.16775513 -56.59890747]
[-127.61383057 -70.53282166]
[-115.90283966 -79.90579224]
[-101.09064484 -82.27201843]
[-87.04373169 -77.01501465]
[-95.18990326 -89.61025238]
[-103.33606720 -102.20549011]
[-111.48223114 -114.80072784]
[-119.62839508 -127.39595795]
[-126.92531586 -132.91040039]
[-127.80217743 -140.25762939]
[-135.74645996 -152.98117065]
[-143.69073486 -165.70471191]
[-151.63502502 -178.42825317]
[-159.57929993 -191.15177917]
[-167.52357483 -203.87532043]
[-175.46786499 -216.59886169]
[-189.33975220 -224.20684814]
[-189.51728821 -239.10038757]
[-197.46157837 -251.82392883]
[-205.40585327 -264.54745483]
[-213.35012817 -277.27099609]
[-217.84934998 -262.96166992]
[-231.08007812 -255.89427185]
[-245.47521973 -260.11087036]
[-252.80174255 -273.19989014]
[-248.86938477 -287.67526245]
[-235.92716980 -295.25808716]
[-221.37762451 -291.61181641]
[-228.06999207 -305.03613281]
[-234.76235962 -318.46044922]
[-239.13587952 -321.35192871]
[-241.69912720 -325.24539185]
[-242.37399292 -329.28030396]
[-241.43641663 -332.69064331]
[-247.47914124 -346.41964722]
[-253.52186584 -360.14862061]
[-267.97824097 -365.94955444]
[-273.91085815 -379.95880127]
[-268.29144287 -393.70501709]
[-280.93252563 -403.21890259]
[-278.97799683 -417.98471069]
[-285.02072144 -431.71371460]
[-296.74121094 -433.78588867]
[-305.90890503 -441.18707275]
[-310.31497192 -451.98513794]
[-308.97009277 -463.44900513]
[-302.32406616 -472.73901367]
[-307.92590332 -486.65371704]
[-322.56256104 -492.61563110]
[-328.61944580 -507.21322632]
[-322.50314331 -521.78601074]
[-307.84231567 -527.68823242]
[-293.33499146 -521.41815186]
[-287.58813477 -506.69577026]
[-294.01119995 -492.25558472]
[-288.40936279 -478.34085083]
[-271.17129517 -472.20413208]
[-263.75518799 -455.12808228]
[-271.29171753 -437.75643921]
[-265.24899292 -424.02743530]
[-253.04013062 -415.49551392]
[-254.56245422 -399.74774170]
[-240.63014221 -394.60705566]
[-234.30639648 -380.76998901]
[-239.79286194 -366.19134521]
[-233.75013733 -352.46234131]
[-227.70741272 -338.73333740]
[-221.33804321 -325.15280151]
[-214.64567566 -311.72848511]
[-207.95330811 -298.30416870]
[-200.62660217 -285.21527100]
[-192.68231201 -272.49176025]
[-184.73803711 -259.76821899]
[-176.79376221 -247.04467773]
[-163.49009705 -240.34675598]
[-162.74432373 -224.54313660]
[-154.80004883 -211.81961060]
[-146.85575867 -199.09606934]
[-138.91148376 -186.37252808]
[-130.96720886 -173.64898682]
[-123.02291870 -160.92546082]
[-115.07864380 -148.20191956]
[-107.03316498 -135.54212952]
[-98.88699341 -122.94689178]
[-90.74082947 -110.35165405]
[-82.59466553 -97.75641632]
[-74.44849396 -85.16117859]
[-65.32498932 -73.25481415]
[-55.28210068 -62.11297989]
[-45.23921967 -50.97114563]
[-35.19633484 -39.82931137]
[-25.15345192 -28.68747520]
[-18.33203125 -25.82061768]
[-15.04099655 -17.28696632]
[-5.17706299 -5.98639917]
[4.68687010 5.31416845]
[14.91675568 5.08802032]
[23.76480675 10.65204239]
[28.17483711 20.37002754]
[26.46769142 31.12694359]
[35.96624374 42.73631287]
[45.46479797 54.34568405]
[54.96335220 65.95505524]
[64.46190643 77.56442261]
[73.96045685 89.17379761]
[83.45901489 100.78316498]
[79.54843903 92.13475037]
[80.64818573 80.79476929]
[88.06121063 69.64709473]
[101.50728607 62.06115723]
[119.00539398 61.07042694]
[137.15904236 68.56266785]
[151.64276123 72.46420288]
[166.12646484 76.36574554]
[180.61018372 80.26728058]
[195.09390259 84.16881561]
[209.57762146 88.07035065]
[222.29464722 78.97028351]
[237.88180542 80.22511292]
[248.97930908 91.24234772]
[250.34725952 106.81998444]
[241.33975220 119.60273743]
[226.20985413 123.55498505]
[212.10144043 116.81060028]
[205.67608643 102.55406952]
[191.19236755 98.65253448]
[176.70864868 94.75099182]
[162.22492981 90.84945679]
[147.74122620 86.94792175]
[133.25750732 83.04638672]
[125.31287384 95.77049255]
[117.36894226 108.49346161]
[127.23287964 119.79402924]
[137.09681702 131.09458923]
[146.96073914 142.39515686]
[162.40339661 140.87718201]
[175.77194214 148.75511169]
[181.92590332 162.99969482]
[178.49896240 178.13362122]
[166.80885315 188.33758545]
[151.35064697 189.68794250]
[138.06834412 181.66546631]
[132.06925964 167.35494995]
[135.66017151 152.25909424]
[125.79624176 140.95852661]
[115.93231201 129.65795898]
[106.06837463 118.35739136]
[92.10943604 123.84810638]
[92.58776855 138.84048462]
[93.06610107 153.83285522]
[93.54443359 168.82522583]
[94.02277374 183.81759644]
[94.50110626 198.80996704]
[94.97943878 213.80233765]
[103.15287781 227.34875488]
[95.82537079 240.31628418]
[96.30370331 255.30865479]
[108.70822906 264.83032227]
[112.03976440 280.10888672]
[104.72525024 293.93032837]
[90.21839142 299.76855469]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 192]
[4 191]
[6 189]
[7 188]
[8 187]
[9 186]
[10 185]
[11 184]
[12 183]
[13 141]
[14 140]
[15 139]
[16 138]
[17 137]
[18 136]
[19 135]
[21 131]
[22 130]
[23 129]
[24 127]
[25 126]
[26 125]
[27 124]
[28 123]
[39 122]
[40 121]
[41 120]
[42 119]
[43 118]
[45 117]
[46 116]
[47 115]
[48 114]
[49 113]
[50 112]
[51 111]
[53 109]
[54 108]
[55 107]
[56 106]
[63 105]
[64 104]
[65 103]
[69 102]
[70 101]
[71 100]
[74 97]
[76 95]
[77 94]
[82 91]
[83 90]
[147 165]
[148 164]
[149 163]
[150 162]
[151 161]
[152 160]
[167 182]
[168 181]
[169 180]
[170 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
