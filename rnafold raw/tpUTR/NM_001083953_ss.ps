%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 15:37:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAAAUCUGGGGGAUUGGGAUGGGGGUAUGUGUGGAUUUUUCCUCCACUAAAUCUGCAGGAAACAUGUUGAACAUAAAUUCAAAAAUUUUAUCCCAUUCAUGCCUCCCCUA\
) } def
/len { sequence length } bind def

/coor [
[58.48945999 395.49243164]
[53.03299713 409.92260742]
[40.62757492 419.09371948]
[25.23172379 420.07925415]
[11.75820065 412.56475830]
[4.50635767 398.94805908]
[5.79023170 383.57421875]
[15.20014381 371.34896851]
[29.73342514 366.17330933]
[33.04219055 351.54278564]
[36.35095978 336.91229248]
[39.65972519 322.28176880]
[42.96849060 307.65124512]
[46.27725983 293.02072144]
[49.58602524 278.39019775]
[47.75861359 273.83810425]
[48.87379074 268.08306885]
[53.50671005 263.04934692]
[57.62345123 248.62532043]
[53.67624283 234.26325989]
[64.90389252 223.11648560]
[69.02062988 208.69247437]
[73.13737488 194.26844788]
[76.64919281 179.68533325]
[79.54997253 164.96849060]
[82.45075989 150.25164795]
[85.35154724 135.53480530]
[88.25233459 120.81796265]
[91.15312195 106.10112762]
[91.36163330 91.10257721]
[88.87106323 76.31078339]
[86.38050079 61.51898956]
[83.88993073 46.72719955]
[81.39936829 31.93540955]
[69.34347534 18.10340309]
[75.93875885 1.90616810]
[73.03797150 -12.81067371]
[70.13718414 -27.52751541]
[56.16415787 -41.92656326]
[62.84481049 -59.98291779]
[59.13061905 -74.51580811]
[55.41643143 -89.04869080]
[51.70224380 -103.58158112]
[47.98805237 -118.11446381]
[44.27386475 -132.64735413]
[33.36041260 -144.10192871]
[37.70533371 -158.34870911]
[33.99114609 -172.88159180]
[19.81877136 -179.49050903]
[13.25712299 -193.68482971]
[17.40441132 -208.76243591]
[30.30241203 -217.60412598]
[45.86108398 -216.03514099]
[56.73410034 -204.79631042]
[57.78755188 -189.19424438]
[48.52403259 -176.59577942]
[52.23822021 -162.06289673]
[62.88600922 -151.64781189]
[58.80675125 -136.36154175]
[62.52093887 -121.82865143]
[66.23513031 -107.29576874]
[69.94931793 -92.76287842]
[73.66350555 -78.22999573]
[77.37769318 -63.69710541]
[86.74517059 -59.20145798]
[92.13819122 -50.06227493]
[91.52000427 -39.24681473]
[84.85402679 -30.42830276]
[87.75481415 -15.71146107]
[90.65560150 -0.99461907]
[100.58130646 6.07286787]
[103.05358124 18.41518974]
[96.19116211 29.44484329]
[98.68172455 44.23663330]
[101.17229462 59.02842712]
[103.66285706 73.82021332]
[106.15341949 88.61200714]
[113.31757355 75.43342590]
[125.13046265 66.18920135]
[139.64480591 62.40319061]
[154.46798706 64.69948578]
[167.15652466 72.69956207]
[175.61875916 85.08465576]
[178.45976257 99.81315613]
[175.21119690 114.45716095]
[166.40856934 126.60269165]
[153.50294495 134.24761963]
[138.62174988 136.13174438]
[124.21804810 131.94447327]
[112.66620636 122.37604523]
[105.86996460 109.00191498]
[102.96917725 123.71875000]
[100.06838989 138.43559265]
[97.16760254 153.15243530]
[94.26681519 167.86927795]
[91.36602783 182.58612061]
[93.16160583 187.79121399]
[92.72584534 192.64860535]
[90.59506989 196.33702087]
[87.56139374 198.38519287]
[83.44465637 212.80920410]
[79.32791138 227.23323059]
[82.98066711 242.62699890]
[72.04747009 252.74206543]
[67.93073273 267.16607666]
[64.21654510 281.69897461]
[60.90777588 296.32949829]
[57.59901047 310.96002197]
[54.29024124 325.59051514]
[50.98147583 340.22103882]
[47.67271042 354.85156250]
[44.36394119 369.48208618]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 112]
[10 111]
[11 110]
[12 109]
[13 108]
[14 107]
[15 106]
[18 105]
[19 104]
[21 102]
[22 101]
[23 100]
[24 96]
[25 95]
[26 94]
[27 93]
[28 92]
[29 91]
[30 77]
[31 76]
[32 75]
[33 74]
[34 73]
[36 70]
[37 69]
[38 68]
[40 64]
[41 63]
[42 62]
[43 61]
[44 60]
[45 59]
[47 57]
[48 56]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
