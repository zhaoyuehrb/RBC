%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 23:15:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGCCCUAGUCUAGCAAGAGGACAUAGCACCCUCAUCUGGGAAUAGGGAAGGCACCUUGCAGAAAAUAUGAGCAAUUUGAUAUUAACUAACAUCUUCAAUGUGCCAUAGACCUUCCCACAAAGACUGUCCAAUAAUAAGAGAUGCUUAUCUAUUUUACACAAGA\
) } def
/len { sequence length } bind def

/coor [
[79.48484039 169.41821289]
[85.74345398 155.78733826]
[89.89961243 141.37461853]
[79.34241486 152.03039551]
[68.78522491 162.68617249]
[58.22802734 173.34194946]
[47.67083359 183.99774170]
[48.08334732 201.46693420]
[35.98643112 213.60511780]
[19.19028664 213.26541138]
[8.83298874 224.11558533]
[-1.52431011 234.96577454]
[-11.78031445 245.91174316]
[-21.93413734 256.95257568]
[-32.08796310 267.99340820]
[-42.24178696 279.03424072]
[-40.04940414 294.51736450]
[-48.36613083 307.75994873]
[-63.26506805 312.50924683]
[-77.71138763 306.52276611]
[-84.88397980 292.62716675]
[-81.39617157 277.38348389]
[-68.89479065 267.98937988]
[-53.28261185 268.88040161]
[-43.12878799 257.83956909]
[-32.97496414 246.79875183]
[-22.82114220 235.75791931]
[-20.59886169 228.67730713]
[-12.37448788 224.60847473]
[-2.01718926 213.75828552]
[8.34010983 202.90811157]
[6.24303198 190.17089844]
[11.96167374 178.38108826]
[23.60394478 171.95423889]
[37.01505280 173.44053650]
[47.57224655 162.78475952]
[58.12944412 152.12898254]
[68.68663788 141.47320557]
[79.24383545 130.81742859]
[66.17788696 108.38471222]
[71.32356262 84.62875366]
[89.81467438 71.54097748]
[88.42248535 56.60572433]
[87.03029633 41.67047119]
[85.63809967 26.73521805]
[84.24591064 11.79996395]
[80.70606232 6.13867521]
[80.60314178 0.40559071]
[83.09014893 -3.71469378]
[82.25406647 -18.69137383]
[81.41798401 -33.66805649]
[65.91059113 -42.99890900]
[59.13873672 -59.61328506]
[63.62591553 -76.82262421]
[77.40319824 -87.81954956]
[76.01100159 -102.75480652]
[74.61881256 -117.69006348]
[73.22662354 -132.62532043]
[71.83443451 -147.56056213]
[62.84969711 -160.58305359]
[69.37234497 -173.97351074]
[67.98015594 -188.90876770]
[66.58796692 -203.84400940]
[57.60322952 -216.86650085]
[64.12587738 -230.25695801]
[62.73368835 -245.19221497]
[61.34149551 -260.12747192]
[45.13440704 -278.40469360]
[55.08646011 -299.94583130]
[51.76806641 -314.57415771]
[48.44967270 -329.20251465]
[45.13127899 -343.83084106]
[41.81288528 -358.45916748]
[31.21433830 -370.20571899]
[35.94432068 -384.32934570]
[32.62592697 -398.95767212]
[21.09657860 -410.61984253]
[25.69200325 -426.36196899]
[41.68482208 -429.98986816]
[52.62299347 -417.77151489]
[47.25426483 -402.27606201]
[50.57265854 -387.64773560]
[60.93385315 -376.94750977]
[56.44122314 -361.77758789]
[59.75961685 -347.14923096]
[63.07801056 -332.52090454]
[66.39640808 -317.89254761]
[69.71479797 -303.26422119]
[75.63063049 -301.71765137]
[80.90355682 -298.54241943]
[85.09249878 -293.97750854]
[87.83958435 -288.37902832]
[88.90065002 -282.19274902]
[88.16677094 -275.91842651]
[85.67500305 -270.06948853]
[81.60716248 -265.13104248]
[76.27674866 -261.51965332]
[77.66893768 -246.58439636]
[79.06113434 -231.64915466]
[87.94628906 -219.69493103]
[81.52321625 -205.23620605]
[82.91540527 -190.30094910]
[84.30760193 -175.36570740]
[93.19275665 -163.41148376]
[86.76968384 -148.95275879]
[88.16187286 -134.01750183]
[89.55406952 -119.08225250]
[90.94625854 -104.14699554]
[92.33844757 -89.21174622]
[103.62223816 -84.61229706]
[111.91703033 -75.58769989]
[115.59405518 -63.81890106]
[113.89257812 -51.53398132]
[107.07629395 -41.08640671]
[96.39466095 -34.50413895]
[97.23075104 -19.52746010]
[98.06683350 -4.55077887]
[99.18116760 10.40777302]
[100.57335663 25.34302711]
[101.96554565 40.27827835]
[103.35773468 55.21353531]
[104.74993134 70.14878845]
[113.51617432 71.99860382]
[121.58776093 76.43428802]
[128.20039368 83.20057678]
[132.68214417 91.81651306]
[134.51977539 101.60841370]
[133.41351318 111.76218414]
[129.31463623 121.39097595]
[122.44163513 129.61257935]
[133.57635498 139.66334534]
[144.71107483 149.71411133]
[160.27526855 149.08668518]
[171.42428589 159.43821716]
[171.92652893 174.28016663]
[183.06126404 184.33093262]
[194.19598389 194.38169861]
[205.33070374 204.43246460]
[216.55836487 214.37930298]
[227.87799072 224.22134399]
[239.19761658 234.06340027]
[250.51725769 243.90545654]
[261.83688354 253.74751282]
[277.87670898 254.06893921]
[287.51126099 266.89682007]
[283.34973145 282.39074707]
[268.58447266 288.66506958]
[254.54216003 280.90667725]
[251.99482727 265.06713867]
[240.67520142 255.22508240]
[229.35557556 245.38302612]
[218.03593445 235.54098511]
[206.71630859 225.69892883]
[199.57649231 223.67491150]
[195.27993774 215.56718445]
[184.14521790 205.51641846]
[173.01049805 195.46565247]
[161.87576294 185.41488647]
[147.06007385 186.43008423]
[135.62469482 176.39579773]
[134.66030884 160.84884644]
[123.52558899 150.79808044]
[112.39086914 140.74731445]
[117.34391022 154.90596008]
[124.35271454 168.16781616]
[121.51702881 182.89733887]
[110.08541107 192.60908508]
[95.09123230 193.02694702]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 39]
[4 38]
[5 37]
[6 36]
[7 35]
[10 31]
[11 30]
[12 29]
[13 27]
[14 26]
[15 25]
[16 24]
[42 122]
[43 121]
[44 120]
[45 119]
[46 118]
[49 117]
[50 116]
[51 115]
[55 109]
[56 108]
[57 107]
[58 106]
[59 105]
[61 103]
[62 102]
[63 101]
[65 99]
[66 98]
[67 97]
[69 88]
[70 87]
[71 86]
[72 85]
[73 84]
[75 82]
[76 81]
[130 163]
[131 162]
[132 161]
[135 158]
[136 157]
[137 156]
[138 155]
[139 153]
[140 152]
[141 151]
[142 150]
[143 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
