%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 18:33:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACGCCCUGGCUGCAUAGAUGCUGCUGCUUAAGACCUUGGAUGAACUUCACUGACAUCAUUCUUCCCUAAGCAGUCACCAAAAAAUUUAUAUAUUUUGCUCAUAUACAUUUCCAUAUUAUAAUUAUAGAAGAUGUAUAAUCUAUUUAGAUGUUAAUUAAAGGAAACAAACAACUGAAGCUUUUGAAGGGUC\
) } def
/len { sequence length } bind def

/coor [
[129.02532959 297.01647949]
[113.23989105 296.24502563]
[102.68544006 284.48156738]
[103.62374878 268.70513916]
[115.49814606 258.27566528]
[116.23035431 243.29353333]
[116.96255493 228.31141663]
[117.69476318 213.32929993]
[118.42696381 198.34718323]
[104.10196686 193.89808655]
[96.21770477 206.65890503]
[88.33343506 219.41970825]
[95.08297729 233.29225159]
[93.23831177 248.60893250]
[83.38805389 260.48226929]
[68.67539215 265.12350464]
[53.79508209 261.05166626]
[43.49537659 249.56602478]
[41.06287384 234.33164978]
[47.27377701 220.20974731]
[60.14620590 211.70655823]
[75.57262421 211.53544617]
[83.45688629 198.77462769]
[91.34115601 186.01382446]
[84.52042389 172.65426636]
[69.56064606 171.55650330]
[54.60087204 170.45874023]
[39.64109421 169.36097717]
[24.68131638 168.26322937]
[9.72153950 167.16546631]
[-5.23823690 166.06770325]
[-20.19801331 164.96994019]
[-25.95837021 176.88006592]
[-35.40375137 186.09812927]
[-47.39243317 191.54028320]
[-60.48554611 192.57723999]
[-73.11977386 189.10697937]
[-83.79399872 181.56439209]
[-91.24767303 170.86680603]
[-94.60962677 158.30256653]
[-109.52574158 156.71844482]
[-124.44186401 155.13432312]
[-139.35798645 153.55021667]
[-154.27409363 151.96609497]
[-169.19021606 150.38198853]
[-187.21113586 159.39361572]
[-202.34956360 147.37796021]
[-214.14749146 157.89387512]
[-229.92074585 156.90396118]
[-240.31134033 144.99551392]
[-239.15470886 129.23361206]
[-227.13708496 118.96949768]
[-211.38827515 120.29270172]
[-201.25180054 132.41818237]
[-194.13421631 125.06073761]
[-183.92587280 122.79597473]
[-173.95401001 126.60987091]
[-167.60610962 135.46586609]
[-152.68998718 137.04998779]
[-137.77386475 138.63409424]
[-122.85774994 140.21821594]
[-107.94162750 141.80232239]
[-93.02551270 143.38644409]
[-84.55820465 128.78050232]
[-70.51658630 119.30781555]
[-53.69315338 116.91050720]
[-37.45918274 122.11775970]
[-25.08914757 133.92994690]
[-19.10025215 150.01016235]
[-4.14047575 151.10792542]
[10.81930161 152.20568848]
[25.77907753 153.30345154]
[40.73885345 154.40121460]
[55.69863129 155.49896240]
[70.65840912 156.59672546]
[85.61818695 157.69448853]
[57.72279739 135.80781555]
[48.81278610 104.05081940]
[59.55514908 75.49201965]
[83.07444763 60.21623611]
[79.68564606 45.60404968]
[76.29684448 30.99186134]
[72.90803528 16.37967300]
[69.51923370 1.76748621]
[58.86423874 -9.92788124]
[63.52614975 -24.07411194]
[60.13734818 -38.68629837]
[48.55197144 -50.29280853]
[53.07152939 -66.05686951]
[69.04669189 -69.76177216]
[80.04357910 -57.59622192]
[74.74953461 -42.07510376]
[78.13833618 -27.46291542]
[88.55094147 -16.81270981]
[84.13142395 -1.62131667]
[87.52022552 12.99087048]
[90.90902710 27.60305786]
[94.29782867 42.21524429]
[97.68663788 56.82743073]
[115.13521576 56.05368423]
[132.67135620 62.51495743]
[147.25752258 76.07249451]
[156.01913452 95.31265259]
[156.77377319 117.67002869]
[167.67816162 107.36983490]
[178.58256531 97.06963348]
[189.48695374 86.76943207]
[200.39135742 76.46923065]
[211.29574585 66.16902924]
[222.20014954 55.86882782]
[233.10455322 45.56863022]
[244.00894165 35.26842880]
[254.82914734 24.87982178]
[259.30184937 9.70399952]
[273.81448364 6.35247707]
[284.54977417 -4.12384939]
[295.28506470 -14.60017586]
[293.93209839 -30.17911911]
[302.95190430 -42.95320511]
[318.08560181 -46.89090347]
[332.18750000 -40.13295364]
[338.59915161 -25.87024879]
[334.29315186 -10.83720493]
[321.30267334 -2.13196659]
[305.76141357 -3.86487961]
[295.02609253 6.61144686]
[284.29080200 17.08777237]
[280.58596802 31.51425743]
[265.30548096 35.61511612]
[262.71017456 42.54731750]
[254.30914307 46.17282486]
[243.40475464 56.47302628]
[232.50035095 66.77322388]
[221.59594727 77.07342529]
[210.69155884 87.37362671]
[199.78715515 97.67382812]
[188.88276672 107.97402954]
[177.97836304 118.27423096]
[167.07397461 128.57443237]
[172.44569397 142.57958984]
[187.44122314 142.94580078]
[202.43675232 143.31201172]
[217.43228149 143.67822266]
[231.56344604 135.35704041]
[245.70016479 143.66879272]
[245.29980469 160.06304932]
[230.77420044 167.67481995]
[217.06607056 158.67375183]
[202.07054138 158.30754089]
[187.07501221 157.94132996]
[172.07948303 157.57511902]
[168.83320618 164.33616638]
[183.69978333 166.33241272]
[186.39524841 181.08824158]
[173.19454956 188.21154785]
[162.34066772 177.85826111]
[159.09440613 184.61930847]
[168.75698853 196.09251404]
[178.41955566 207.56571960]
[188.08213806 219.03892517]
[197.74472046 230.51214600]
[207.40730286 241.98535156]
[217.06988525 253.45855713]
[232.44398499 252.48735046]
[245.29185486 260.65960693]
[250.79890442 274.66445923]
[247.04823303 289.05441284]
[256.71081543 300.52761841]
[272.47683716 301.62667847]
[282.78475952 313.60678101]
[281.51904297 329.36029053]
[269.43066406 339.54098511]
[253.69140625 338.10879517]
[243.63909912 325.91345215]
[245.23759460 310.19021606]
[235.57501221 298.71697998]
[220.75682068 299.96551514]
[207.89266968 292.15667725]
[202.02471924 278.10604858]
[205.59667969 263.12115479]
[195.93409729 251.64793396]
[186.27151489 240.17472839]
[176.60893250 228.70150757]
[166.94635010 217.22830200]
[157.28376770 205.75509644]
[147.62118530 194.28189087]
[133.40908813 199.07939148]
[132.67687988 214.06150818]
[131.94467163 229.04362488]
[131.21246338 244.02574158]
[130.48027039 259.00787354]
[141.28108215 270.54553223]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 191]
[6 190]
[7 189]
[8 188]
[9 187]
[10 24]
[11 23]
[12 22]
[25 76]
[26 75]
[27 74]
[28 73]
[29 72]
[30 71]
[31 70]
[32 69]
[40 63]
[41 62]
[42 61]
[43 60]
[44 59]
[45 58]
[47 54]
[80 99]
[81 98]
[82 97]
[83 96]
[84 95]
[86 93]
[87 92]
[104 139]
[105 138]
[106 137]
[107 136]
[108 135]
[109 134]
[110 133]
[111 132]
[112 131]
[113 129]
[115 127]
[116 126]
[117 125]
[140 151]
[141 150]
[142 149]
[143 148]
[157 186]
[158 185]
[159 184]
[160 183]
[161 182]
[162 181]
[163 180]
[167 176]
[168 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
