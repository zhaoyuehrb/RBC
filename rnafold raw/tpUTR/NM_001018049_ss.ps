%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 04:33:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAGCUCCUGCCUGGUCCUGCCUCCUGGCUCACCUCCGCCUCCAGGAAGACCAGACUCCCACCCUUCCACACCUCCAGAGCAGUGGGACUUCCUCCUGCCCUUUCAAAGAAUAACCACAGCUCAGAAGACGAUGACGUGGUCAUCUGUGUCGCCAUCCCCUUCCUGCUGCACACCUGCACCACGGCCAUGGGGAGGCUGCUCCCUGGGGGCAGAGUCUCUGGCAGAGGUUAUUAAUAAACCCUUGGAGCAUG\
) } def
/len { sequence length } bind def

/coor [
[90.21247864 263.98870850]
[77.79281616 254.68647766]
[73.24500275 239.85079956]
[78.31775665 225.18632507]
[91.06050873 216.33184814]
[91.24602509 201.33299255]
[91.43154907 186.33413696]
[91.61707306 171.33528137]
[91.80259705 156.33642578]
[78.09745789 154.13117981]
[65.00228882 148.56204224]
[53.34825134 139.80229187]
[43.91630173 128.23143005]
[32.73608398 138.23156738]
[21.55586815 148.23170471]
[10.37565136 158.23184204]
[-0.80456489 168.23197937]
[-11.98478127 178.23211670]
[-17.11243629 193.19934082]
[-31.75695229 195.91732788]
[-36.05112076 203.94754028]
[-43.13784027 205.97096252]
[-54.44088364 215.83206177]
[-65.74392700 225.69316101]
[-64.50489044 241.04798889]
[-72.45195770 254.03634644]
[-86.35871124 259.78668213]
[-100.81184387 256.28738403]
[-112.11488342 266.14849854]
[-123.41793060 276.00958252]
[-121.90383148 291.45260620]
[-129.78511047 304.81918335]
[-144.03123474 310.96957397]
[-159.16430664 307.53881836]
[-169.36532593 295.84616089]
[-170.71180725 280.38760376]
[-162.68600464 267.10733032]
[-148.37397766 261.11184692]
[-133.27902222 264.70654297]
[-121.97598267 254.84544373]
[-110.67293549 244.98434448]
[-112.17955017 230.19015503]
[-104.59613800 217.19184875]
[-90.64990997 211.07987976]
[-75.60502625 214.39010620]
[-64.30197906 204.52902222]
[-52.99893570 194.66792297]
[-41.75709152 184.73712158]
[-37.42911911 170.48516846]
[-21.98491859 167.05191040]
[-10.80470276 157.05177307]
[0.37551302 147.05163574]
[11.55572891 137.05149841]
[22.73594475 127.05135345]
[33.91616058 117.05121613]
[33.68428802 109.55480194]
[19.07840538 112.97066498]
[4.47252083 116.38653564]
[-10.13336372 119.80239868]
[-24.73924828 123.21826172]
[-39.34513092 126.63413239]
[-51.10026932 135.95167542]
[-65.71134949 139.34526062]
[-80.36980438 136.16253662]
[-92.25795746 127.01530457]
[-99.09064484 113.66186523]
[-99.55448151 98.66904449]
[-93.56029510 84.91877747]
[-82.26031494 75.05417633]
[-67.82662964 70.97142792]
[-53.03371811 73.45532990]
[-40.72482300 82.02872467]
[-25.93575096 84.53537750]
[-11.14667606 87.04202271]
[3.64239764 89.54867554]
[18.43147087 92.05532074]
[33.22054672 94.56197357]
[32.98867416 87.06555939]
[21.21179199 77.77550507]
[5.58493090 75.30330658]
[0.38441992 61.34608459]
[-11.39246178 52.05603409]
[-23.16934395 42.76598358]
[-34.94622421 33.47592926]
[-50.57308578 31.00372887]
[-55.77359772 17.04650879]
[-67.55047607 7.75645828]
[-79.32736206 -1.53359294]
[-95.62504578 -3.35502219]
[-101.94767761 -18.48632431]
[-91.79108429 -31.36171150]
[-75.60349274 -28.73609161]
[-70.03730774 -13.31047440]
[-58.26042938 -4.02042341]
[-46.48354721 5.26962757]
[-31.69904709 7.07734346]
[-25.65617371 21.69904900]
[-13.87929249 30.98909950]
[-2.10241079 40.27915192]
[9.67447090 49.56920242]
[24.45897102 51.37691879]
[30.50184250 65.99862671]
[42.27872467 75.28867340]
[51.53170776 61.24706650]
[64.05168915 50.31773758]
[78.85923004 43.21627426]
[94.83207703 40.36440277]
[110.79011536 41.86613846]
[125.58246613 47.50768280]
[138.17053223 56.78053284]
[147.70082092 68.92552185]
[161.23826599 62.46506882]
[174.77571106 56.00461197]
[188.31315613 49.54415512]
[201.85060120 43.08369446]
[215.38806152 36.62323761]
[228.92550659 30.16278076]
[238.04768372 17.23620033]
[252.86642456 18.73748779]
[261.98861694 5.81090546]
[276.80734253 7.31219244]
[290.34481812 0.85173529]
[296.72009277 -5.65055180]
[304.08987427 -5.60374880]
[317.70617676 -11.89627838]
[331.32250977 -18.18880844]
[344.93881226 -24.48133850]
[351.39404297 -30.90427780]
[358.76269531 -30.76632690]
[372.45578003 -36.88996506]
[386.14889526 -43.01360703]
[396.07968140 -54.25545120]
[400.46722412 -68.59941864]
[404.85479736 -82.94338989]
[409.24234009 -97.28735352]
[413.62988281 -111.63132477]
[418.01742554 -125.97529602]
[416.86853027 -142.89027405]
[432.80441284 -148.67680359]
[442.77627563 -134.96557617]
[432.36138916 -121.58774567]
[427.97384644 -107.24378204]
[423.58630371 -92.89981079]
[419.19876099 -78.55583954]
[414.81121826 -64.21187592]
[410.42364502 -49.86790466]
[415.92004395 -44.76499176]
[426.12588501 -55.75776291]
[436.33187866 -66.75036621]
[447.32431030 -56.54417419]
[437.11865234 -45.55193329]
[426.91281128 -34.55916214]
[432.40921021 -29.45624733]
[446.38839722 -34.89521790]
[460.36758423 -40.33419037]
[467.20742798 -46.34590149]
[474.55343628 -45.75281143]
[488.59881592 -51.01847076]
[502.64419556 -56.28413010]
[516.68957520 -61.54978943]
[530.73498535 -66.81544495]
[537.93713379 -84.36115265]
[555.38757324 -90.93075562]
[571.79895020 -82.77560425]
[585.70977783 -88.38705444]
[599.58569336 -94.08442688]
[613.42602539 -99.86750031]
[623.17633057 -112.32714081]
[637.90270996 -110.09484863]
[651.74310303 -115.87792969]
[665.58343506 -121.66100311]
[679.42382812 -127.44407654]
[688.93103027 -140.80616760]
[705.22869873 -138.98458862]
[711.55120850 -123.85322571]
[701.39447021 -110.97792816]
[685.20690918 -113.60369873]
[671.36651611 -107.82062531]
[657.52618408 -102.03755188]
[643.68579102 -96.25447083]
[634.92547607 -84.20848083]
[619.20910645 -86.02713013]
[605.36877441 -80.24404907]
[600.42242432 -74.78055573]
[591.32122803 -74.47621155]
[577.41040039 -68.86476135]
[575.33874512 -57.67807007]
[568.05834961 -48.78044891]
[557.28106689 -44.44594955]
[545.62982178 -45.85375595]
[536.00061035 -52.77006149]
[521.95526123 -47.50440216]
[507.90988159 -42.23874283]
[493.86447144 -36.97308350]
[479.81909180 -31.70742607]
[465.80654907 -26.35500717]
[451.82736206 -20.91603470]
[437.84817505 -15.47706318]
[437.75540161 -0.47734994]
[451.66625977 5.13410282]
[465.57711792 10.74555588]
[479.48794556 16.35700798]
[493.39880371 21.96846199]
[507.30963135 27.57991409]
[524.26062012 27.89797020]
[528.64746094 44.27453232]
[514.12530518 53.02344131]
[501.69818115 41.49075699]
[487.78735352 35.87930679]
[473.87649536 30.26785278]
[459.96563721 24.65640068]
[446.05480957 19.04494667]
[432.14395142 13.43349457]
[407.69210815 4.68758249]
[393.95208740 -11.82319832]
[392.27252197 -29.32050514]
[378.57943726 -23.19686508]
[364.88632202 -17.07322502]
[351.23135376 -10.86502171]
[337.61502075 -4.57249165]
[323.99871826 1.72003794]
[310.38241577 8.01256752]
[296.80526733 14.38918304]
[283.26782227 20.84963989]
[275.11392212 33.31412506]
[259.32687378 32.27493668]
[251.17300415 44.73942184]
[235.38595581 43.70022964]
[221.84851074 50.16068649]
[208.31106567 56.62114334]
[194.77362061 63.08160019]
[181.23617554 69.54206085]
[167.69871521 76.00251770]
[154.16127014 82.46297455]
[156.14595032 90.58601379]
[156.91931152 98.91215515]
[156.46466064 107.26176453]
[154.79180908 115.45470428]
[151.93685913 123.31421661]
[147.96141052 130.67074585]
[142.95120239 137.36555481]
[137.01435852 143.25422668]
[130.27893066 148.20971680]
[122.89026642 152.12510681]
[115.00775146 154.91592407]
[106.80144501 156.52195740]
[106.61592865 171.52081299]
[106.43040466 186.51965332]
[106.24488068 201.51850891]
[106.05935669 216.51736450]
[118.57919312 225.68432617]
[123.28768158 240.46978760]
[118.37430573 255.18843079]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 250]
[6 249]
[7 248]
[8 247]
[9 246]
[13 55]
[14 54]
[15 53]
[16 52]
[17 51]
[18 50]
[20 48]
[22 47]
[23 46]
[24 45]
[28 41]
[29 40]
[30 39]
[78 103]
[79 102]
[81 100]
[82 99]
[83 98]
[84 97]
[86 95]
[87 94]
[88 93]
[111 234]
[112 233]
[113 232]
[114 231]
[115 230]
[116 229]
[117 228]
[119 226]
[121 224]
[122 223]
[124 222]
[125 221]
[126 220]
[127 219]
[129 218]
[130 217]
[131 216]
[132 146]
[133 145]
[134 144]
[135 143]
[136 142]
[137 141]
[153 198]
[154 197]
[155 196]
[157 195]
[158 194]
[159 193]
[160 192]
[161 191]
[164 186]
[165 185]
[166 183]
[167 182]
[169 180]
[170 179]
[171 178]
[172 177]
[199 213]
[200 212]
[201 211]
[202 210]
[203 209]
[204 208]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
