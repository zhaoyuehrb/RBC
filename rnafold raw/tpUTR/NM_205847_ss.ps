%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 21:15:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGGGCUGCCAGAAGGCCCCCAGCUCCUACCCACUCCCCUUGAGGCUGCUGCCUGCUUGGCCAGCCUCUGUCCAGAAAGGACCAGAGAAAGCCAGGCUGGAUCGUCACAUGCCGGGGAGCAAUGUGGAUGGCCUGGGGACUCCUGGGUUUUCUCCCUCCCGACUCCCUAAUAAACCCCGUGAACCUUGGAGCCAGCA\
) } def
/len { sequence length } bind def

/coor [
[99.03859711 117.23533630]
[91.77911377 130.36164856]
[84.51963043 143.48794556]
[77.26014709 156.61425781]
[70.00066376 169.74055481]
[62.84501266 182.92375183]
[55.79365158 196.16302490]
[48.74228668 209.40229797]
[42.11238098 222.85757446]
[35.91054153 236.51542664]
[29.70870590 250.17329407]
[31.84033775 266.43331909]
[18.66173744 276.19326782]
[3.72991729 269.41293335]
[2.40545440 253.06735229]
[16.05084229 243.97145081]
[22.25267982 230.31359863]
[28.45451736 216.65573120]
[27.58852386 213.97982788]
[27.73560524 210.79808044]
[29.09437561 207.49655151]
[31.71943665 204.52624512]
[35.50301743 202.35093689]
[42.55438232 189.11166382]
[49.60574341 175.87239075]
[49.97573471 168.48359680]
[56.87435532 162.48107910]
[64.13384247 149.35476685]
[71.39332581 136.22846985]
[78.65280914 123.10215759]
[85.91229248 109.97585297]
[85.08390045 94.99874878]
[76.42108154 82.75311279]
[67.75827026 70.50747681]
[59.09545135 58.26183701]
[49.95620346 46.36754608]
[40.35475922 34.84312439]
[30.75331688 23.31870461]
[21.15187263 11.79428387]
[11.55042934 0.26986212]
[7.40294027 -1.08873081]
[4.22764206 -3.46174455]
[2.22456431 -6.41707468]
[1.43215227 -9.50208282]
[1.73464549 -12.29831219]
[-7.12040472 -24.40566826]
[-15.97545528 -36.51302338]
[-24.92579842 -48.55010986]
[-33.97087479 -60.51616669]
[-41.64996719 -65.48133087]
[-43.06251144 -72.74327850]
[-51.91756439 -84.85063171]
[-61.24343872 -96.59916687]
[-71.02561188 -107.97058105]
[-85.89093018 -113.38657379]
[-88.32534790 -128.08088684]
[-98.10752869 -139.45230103]
[-107.88970184 -150.82371521]
[-117.67187500 -162.19512939]
[-127.45404816 -173.56654358]
[-137.23622131 -184.93795776]
[-147.01840210 -196.30937195]
[-160.63914490 -194.16021729]
[-173.44073486 -198.98605347]
[-182.11479187 -209.42535400]
[-184.47636414 -222.68107605]
[-180.01350403 -235.26956177]
[-189.61495972 -246.79397583]
[-199.21640015 -258.31838989]
[-208.81784058 -269.84280396]
[-218.41928101 -281.36724854]
[-228.11138916 -292.81552124]
[-237.89356995 -304.18692017]
[-247.67575073 -315.55834961]
[-263.50161743 -318.18923950]
[-271.18579102 -332.27230835]
[-264.83361816 -347.00424194]
[-249.31796265 -351.08395386]
[-236.54109192 -341.38183594]
[-236.30432129 -325.34051514]
[-226.52215576 -313.96911621]
[-216.73997498 -302.59768677]
[-209.98799133 -299.57412720]
[-206.89486694 -290.96868896]
[-197.29342651 -279.44427490]
[-187.69197083 -267.91983032]
[-178.09053040 -256.39541626]
[-168.48908997 -244.87100220]
[-152.15730286 -246.48439026]
[-137.93774414 -237.96296692]
[-131.53244019 -222.49302673]
[-135.64698792 -206.09155273]
[-125.86480713 -194.72013855]
[-116.08263397 -183.34872437]
[-106.30046082 -171.97731018]
[-96.51828766 -160.60589600]
[-86.73611450 -149.23448181]
[-76.95393372 -137.86306763]
[-62.78830719 -133.26043701]
[-59.65419769 -117.75275421]
[-49.87202454 -106.38134003]
[-46.10760498 -120.90129852]
[-32.47520828 -127.15892029]
[-19.01089478 -120.54739380]
[-15.62697697 -105.93407440]
[-24.81466866 -94.07716370]
[-39.81020737 -93.70568085]
[-30.95515633 -81.59832764]
[-22.00481415 -69.56124115]
[-12.95973778 -57.59518433]
[-6.41201687 -54.15157318]
[-3.86809874 -45.36807632]
[4.98695183 -33.26071930]
[13.84200191 -21.15336227]
[23.07485008 -9.33158112]
[32.67629242 2.19284010]
[42.27773666 13.71726131]
[51.87918091 25.24168205]
[61.48062515 36.76610565]
[65.47379303 22.30738258]
[79.20326996 16.26574707]
[92.56153870 23.08899689]
[95.71434021 37.75391388]
[86.34062195 49.46430969]
[71.34108734 49.59902191]
[80.00390625 61.84465790]
[88.66671753 74.09029388]
[97.32953644 86.33592987]
[111.81831360 83.47385406]
[126.46438599 96.37368774]
[140.17077637 102.46752930]
[153.87716675 108.56136322]
[167.58355713 114.65520477]
[181.33763123 120.64066315]
[195.13850403 126.51736450]
[208.93939209 132.39407349]
[222.74026489 138.27078247]
[236.54115295 144.14747620]
[250.34202576 150.02418518]
[262.58261108 145.93806458]
[273.95989990 151.12438965]
[278.59603882 162.30390930]
[292.30242920 168.39775085]
[306.05648804 174.38320923]
[321.78479004 172.67108154]
[330.46328735 184.77613831]
[344.26419067 190.65284729]
[358.06506348 196.52955627]
[371.86593628 202.40626526]
[385.66680908 208.28297424]
[399.46771240 214.15966797]
[408.90078735 202.37326050]
[421.16467285 193.56988525]
[435.34930420 188.40280151]
[450.40209961 187.25543213]
[465.20599365 190.21295166]
[478.66250610 197.05586243]
[489.77301025 207.27638245]
[497.71307373 220.11608887]
[501.89346313 234.62219238]
[502.00399780 249.71823120]
[498.03643799 264.28396606]
[490.28524780 277.23855591]
[479.32559204 287.62069702]
[465.97073364 294.65991211]
[451.21173096 297.83386230]
[436.14376831 296.90704346]
[421.88497925 291.94821167]
[409.49349976 283.32534790]
[399.88885498 271.67834473]
[393.78372192 257.87145996]
[391.63119507 242.92924500]
[393.59100342 227.96055603]
[379.79013062 222.08384705]
[365.98922729 216.20713806]
[352.18835449 210.33044434]
[338.38748169 204.45373535]
[324.58657837 198.57702637]
[309.84542847 200.70950317]
[300.17977905 188.18409729]
[292.78674316 188.45625305]
[286.20858765 182.10414124]
[272.50219727 176.01029968]
[255.17985535 178.79548645]
[244.46533203 163.82507324]
[230.66444397 157.94836426]
[216.86355591 152.07165527]
[203.06268311 146.19494629]
[189.26179504 140.31825256]
[175.46092224 134.44154358]
[168.06787109 134.71369934]
[161.48973083 128.36158752]
[147.78332520 122.26775360]
[134.07693481 116.17391968]
[120.37055206 110.08007812]
[129.55595398 121.93876648]
[125.20834351 136.29489136]
[110.98705292 141.06509399]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 31]
[2 30]
[3 29]
[4 28]
[5 27]
[6 25]
[7 24]
[8 23]
[9 18]
[10 17]
[11 16]
[32 128]
[33 127]
[34 126]
[35 125]
[36 119]
[37 118]
[38 117]
[39 116]
[40 115]
[45 114]
[46 113]
[47 112]
[48 110]
[49 109]
[51 108]
[52 107]
[53 101]
[54 100]
[56 98]
[57 97]
[58 96]
[59 95]
[60 94]
[61 93]
[62 92]
[67 88]
[68 87]
[69 86]
[70 85]
[71 84]
[72 82]
[73 81]
[74 80]
[130 195]
[131 194]
[132 193]
[133 192]
[134 190]
[135 189]
[136 188]
[137 187]
[138 186]
[139 185]
[142 183]
[143 182]
[144 180]
[146 178]
[147 177]
[148 176]
[149 175]
[150 174]
[151 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
