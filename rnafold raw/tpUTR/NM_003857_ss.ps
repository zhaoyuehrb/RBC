%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 00:01:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGCACUUAGCGGGCGCGCUGGGAUGUCACAGAGUUGGAGUCAUUGUUGGGGGACCGUGGGGAGAGCUUUGCCUGUUAAUAAAACGCACAAACCAUUUCACACACAGUGA\
) } def
/len { sequence length } bind def

/coor [
[81.63967133 126.74735260]
[77.24730682 112.40483093]
[69.93873596 110.72114563]
[58.67864990 120.63126373]
[47.41856384 130.54138184]
[36.29984283 140.60984802]
[25.32471466 150.83465576]
[14.34958458 161.05944824]
[3.37445498 171.28425598]
[-7.60067511 181.50904846]
[-18.57580566 191.73385620]
[-29.55093384 201.95864868]
[-33.83299637 217.78887939]
[-49.75065613 221.73352051]
[-60.92918777 209.73466492]
[-55.86907959 194.13571167]
[-39.77573395 190.98352051]
[-28.80060387 180.75871277]
[-17.82547379 170.53392029]
[-6.85034466 160.30912781]
[4.12478542 150.08432007]
[15.09991550 139.85952759]
[26.07504463 129.63471985]
[28.86456490 122.67100525]
[37.50844574 119.28130341]
[48.76852798 109.37117767]
[60.02861404 99.46105957]
[70.43141937 94.31787872]
[81.09830475 92.75072479]
[91.11194611 94.64083862]
[86.92300415 80.23762512]
[82.73406219 65.83440399]
[78.54512024 51.43118286]
[74.35617828 37.02796173]
[70.16723633 22.62474060]
[65.97828674 8.22152042]
[51.14823151 4.47763634]
[40.25521469 -6.11665344]
[36.15487671 -20.64433670]
[39.85203934 -35.17660904]
[50.25673676 -45.83530807]
[46.06779480 -60.23852921]
[41.87884903 -74.64174652]
[37.68990707 -89.04496765]
[26.40656090 -100.13535309]
[30.28177643 -114.51701355]
[26.09283257 -128.92022705]
[21.90389061 -143.32345581]
[9.69647408 -154.27383423]
[13.34039211 -170.26301575]
[29.08709526 -174.84269714]
[40.73772430 -163.30168152]
[36.30710983 -147.51239014]
[40.49605179 -133.10917664]
[44.68499756 -118.70595551]
[55.66872025 -108.64578247]
[52.09312820 -93.23390961]
[56.28207016 -78.83068848]
[60.47101212 -64.42747498]
[64.65995789 -50.02425003]
[79.15808868 -46.60813522]
[90.07231140 -36.32534790]
[94.40278625 -21.86459732]
[90.89057922 -7.08078098]
[80.38150787 4.03257751]
[84.57044983 18.43579865]
[88.75939941 32.83901978]
[92.94834137 47.24223709]
[97.13728333 61.64545822]
[101.32622528 76.04867554]
[105.51516724 90.45189667]
[104.56082153 75.48229218]
[106.90270996 60.66623306]
[112.42750549 46.72074509]
[120.86782837 34.32070923]
[131.81523132 24.06622124]
[144.73989868 16.45354462]
[159.01635742 11.85108662]
[173.95372009 10.48158360]
[188.82907104 12.41131210]
[202.92253113 17.54688263]
[215.55207825 25.63976288]
[226.10649109 36.29830170]
[234.07499695 49.00668335]
[239.07196045 63.14989090]
[240.85556030 78.04347229]
[239.33947754 92.96665955]
[234.59709167 107.19725037]
[226.85789490 120.04656219]
[216.49642944 130.89276123]
[204.01412964 139.21095276]
[190.01507568 144.59857178]
[175.17674255 146.79489136]
[160.21722412 145.69363403]
[145.86047363 141.34808350]
[132.80128479 133.96853638]
[121.67166138 123.91212463]
[113.01081085 111.66664124]
[118.80005646 125.50444031]
[124.58930206 139.34223938]
[130.37854004 153.18003845]
[144.61672974 160.57283020]
[147.57267761 176.34121704]
[136.97883606 188.38903809]
[120.96188354 187.47422791]
[111.80866241 174.29856873]
[116.54074860 158.96928406]
[110.75150299 145.13148499]
[104.96225739 131.29368591]
[99.17301941 117.45588684]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 27]
[4 26]
[5 25]
[6 23]
[7 22]
[8 21]
[9 20]
[10 19]
[11 18]
[12 17]
[30 71]
[31 70]
[32 69]
[33 68]
[34 67]
[35 66]
[36 65]
[41 60]
[42 59]
[43 58]
[44 57]
[46 55]
[47 54]
[48 53]
[98 110]
[99 109]
[100 108]
[101 107]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
