%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 12:20:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUGGUGGCCUCCUACCCUUGGUCCUACUCUAGGAAGUGUGAUUGUCACACUUAUCAUGUUGUCCAGAGGUCCAGUCUGGCUGCUGUUGUGGAGGCAAGGAAGGCAACUCAUCCCAGAAGGCAUCUGGUGCUUCUUGUAGCUUAACUACUGCCUCCUCAUUUUUCAGUAUGUGUUCUAAGUAUAAAAAGUCCUUGGUUCUCAUGGAA\
) } def
/len { sequence length } bind def

/coor [
[82.42156982 110.79995728]
[68.19810486 115.56369019]
[53.97464371 120.32741547]
[43.34611893 132.04684448]
[28.82050323 128.75204468]
[14.59703922 133.51577759]
[0.40978098 138.38626099]
[-13.74047184 143.36325073]
[-27.89072418 148.34022522]
[-42.00317383 153.42341614]
[-56.07701874 158.61253357]
[-70.15086365 163.80165100]
[-84.22470856 168.99075317]
[-70.57207489 175.20410156]
[-63.99316788 188.68438721]
[-67.49515533 203.26985168]
[-79.47731018 212.29360962]
[-94.46266174 211.63093567]
[-105.60152435 201.58474731]
[-107.80238342 186.74708557]
[-100.05878448 173.89974976]
[-114.59979248 177.58204651]
[-129.14079285 181.26432800]
[-140.61929321 192.15260315]
[-154.85650635 187.77642822]
[-162.11796570 198.43757629]
[-174.30616760 201.20458984]
[-184.76557922 195.12585449]
[-199.36029053 198.58915710]
[-201.85766602 212.50077820]
[-209.44593811 224.37365723]
[-220.95149231 232.43286133]
[-234.61811829 235.48851013]
[-248.37498474 233.11146545]
[-260.15054321 225.69317627]
[-268.18429565 214.38171387]
[-282.82940674 217.62524414]
[-297.47454834 220.86878967]
[-312.11965942 224.11231995]
[-326.76477051 227.35585022]
[-341.40988159 230.59939575]
[-356.05499268 233.84292603]
[-370.70013428 237.08647156]
[-384.85708618 246.41474915]
[-397.73983765 235.39337158]
[-390.71548462 219.96304321]
[-373.94366455 222.44134521]
[-359.29855347 219.19781494]
[-344.65341187 215.95426941]
[-330.00830078 212.71073914]
[-315.36318970 209.46720886]
[-300.71807861 206.22366333]
[-286.07296753 202.98013306]
[-271.42782593 199.73658752]
[-268.07067871 184.11425781]
[-258.20117188 171.47370911]
[-243.75503540 164.37657166]
[-227.60173035 164.28912354]
[-212.97459412 171.27961731]
[-202.82357788 183.99444580]
[-188.22888184 180.53114319]
[-176.13621521 167.81457520]
[-158.53878784 173.23542786]
[-148.10035706 162.61051941]
[-132.82307434 166.72331238]
[-118.28207397 163.04103088]
[-103.74106598 159.35874939]
[-89.41381836 154.91691589]
[-75.33997345 149.72779846]
[-61.26612854 144.53868103]
[-47.19228363 139.34957886]
[-42.00313187 134.08537292]
[-32.86770630 134.18997192]
[-18.71745300 129.21299744]
[-4.56720066 124.23601532]
[0.70049232 119.05040741]
[9.83331203 119.29231262]
[24.05677605 114.52858734]
[33.66794205 103.14988708]
[49.21091843 106.10395050]
[63.43437958 101.34022522]
[77.65784454 96.57649994]
[89.11084747 83.69844818]
[103.96191406 83.87463379]
[113.17510223 72.03752899]
[122.38829041 60.20042038]
[131.60148621 48.36331177]
[133.04309082 26.00202179]
[153.39346313 18.63481140]
[161.87870789 6.26547337]
[163.30488586 -9.49132156]
[176.88484192 -15.60965443]
[185.37010193 -27.97899246]
[193.85534668 -40.34833145]
[202.34060669 -52.71766663]
[210.82585144 -65.08700562]
[219.31109619 -77.45634460]
[227.79635620 -89.82568359]
[236.09472656 -102.32116699]
[244.20433044 -114.93996429]
[241.05827332 -130.19578552]
[249.46234131 -142.87751770]
[264.02581787 -145.78279114]
[272.13543701 -158.40159607]
[280.24505615 -171.02040100]
[288.35464478 -183.63920593]
[289.30654907 -199.43174744]
[302.69647217 -205.95550537]
[310.80609131 -218.57431030]
[302.38973999 -234.00000000]
[302.94165039 -251.47456360]
[312.21960449 -266.18777466]
[327.59191895 -274.13519287]
[344.78302002 -273.20794678]
[352.41281128 -286.12252808]
[359.94534302 -299.09408569]
[367.47787476 -312.06564331]
[375.01037598 -325.03717041]
[382.54290771 -338.00872803]
[379.83584595 -353.82174683]
[390.61828613 -365.70111084]
[406.61880493 -364.53396606]
[415.56323242 -351.21566772]
[410.59014893 -335.96286011]
[395.51446533 -330.47622681]
[387.98193359 -317.50466919]
[380.44940186 -304.53311157]
[372.91690063 -291.56155396]
[365.38436890 -278.58999634]
[364.74380493 -271.22598267]
[357.63989258 -265.48132324]
[364.91851807 -255.15258789]
[367.76004028 -242.79257202]
[365.70779419 -230.22994995]
[359.03186035 -219.33708191]
[348.69406128 -211.75099182]
[336.20956421 -208.62739563]
[323.42489624 -210.46470642]
[315.31527710 -197.84590149]
[314.94342041 -182.95593262]
[300.97344971 -175.52958679]
[292.86383057 -162.91078186]
[284.75424194 -150.29197693]
[276.64462280 -137.67318726]
[280.05178833 -123.21887970]
[272.00723267 -110.30609131]
[256.82315063 -106.83035278]
[248.71353149 -94.21154785]
[248.83578491 -89.43582153]
[245.95819092 -84.53289032]
[240.16569519 -81.34043121]
[231.68043518 -68.97109222]
[223.19519043 -56.60175323]
[214.70994568 -44.23241806]
[206.22468567 -31.86307907]
[197.73944092 -19.49374199]
[189.25418091 -7.12440395]
[188.43493652 7.74765348]
[174.24804688 14.75072384]
[165.76280212 27.12006187]
[168.82391357 34.38281631]
[168.76371765 42.35802460]
[165.51780701 49.74577332]
[159.54704285 55.31262207]
[151.77352905 58.09737015]
[143.43858337 57.57650375]
[134.22540283 69.41361237]
[125.01220703 81.25071716]
[115.79901886 93.08782959]
[115.79901886 108.08782959]
[125.01220703 119.92493439]
[134.22540283 131.76203918]
[148.80746460 137.89996338]
[150.51889038 152.69592285]
[165.95433044 154.78994751]
[175.12919617 166.92570496]
[173.03773499 181.62812805]
[182.25093079 193.46524048]
[191.46411133 205.30235291]
[200.67730713 217.13945007]
[209.89050293 228.97656250]
[224.47256470 235.11448669]
[226.18399048 249.91044617]
[235.39718628 261.74755859]
[251.07511902 265.15078735]
[258.05993652 279.59350586]
[250.99349976 293.99645996]
[235.29656982 297.31094360]
[223.01048279 286.99438477]
[223.56007385 270.96075439]
[214.34687805 259.12362671]
[200.42381287 253.83238220]
[198.05339050 238.18975830]
[188.84019470 226.35264587]
[179.62701416 214.51553345]
[170.41381836 202.67843628]
[161.20062256 190.84132385]
[146.43466187 189.25955200]
[136.92256165 177.38629150]
[138.68179321 161.90911865]
[124.75871277 156.61785889]
[122.38829041 140.97523499]
[113.17510223 129.13812256]
[103.96191406 117.30101776]
[107.12461853 131.96380615]
[98.43225098 144.18847656]
[83.54401398 146.01611328]
[72.15295410 136.25682068]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 82]
[2 81]
[3 80]
[5 78]
[6 77]
[7 75]
[8 74]
[9 73]
[10 71]
[11 70]
[12 69]
[13 68]
[21 67]
[22 66]
[23 65]
[25 63]
[28 61]
[29 60]
[36 54]
[37 53]
[38 52]
[39 51]
[40 50]
[41 49]
[42 48]
[43 47]
[84 169]
[85 168]
[86 167]
[87 166]
[89 160]
[90 159]
[92 157]
[93 156]
[94 155]
[95 154]
[96 153]
[97 152]
[98 151]
[99 148]
[100 147]
[103 144]
[104 143]
[105 142]
[106 141]
[108 139]
[109 138]
[114 131]
[115 129]
[116 128]
[117 127]
[118 126]
[119 125]
[170 204]
[171 203]
[172 202]
[174 200]
[177 197]
[178 196]
[179 195]
[180 194]
[181 193]
[183 191]
[184 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
