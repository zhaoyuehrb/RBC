%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 21:44:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCGCAUAUUCUUUAACUUCAAUAUUGUUUUCUGAAUAUGUACAUCUGAAUUAACUUAUUUCUGAUUAUUUUCUUUCUUUAUAUCCUUUAUGUCGUGUAGUUUGUAUAAUGUGUUUAAAUAUAUAUAUAUAUGAUGGCUUUGGAAGAAAAUAUGCUGCUGUAAAUUAGGAAAGGGAGAC\
) } def
/len { sequence length } bind def

/coor [
[-59.19394302 305.86849976]
[-69.61381531 316.65859985]
[-73.33837128 325.03057861]
[-80.31095123 327.54406738]
[-90.91754913 338.15066528]
[-101.52415466 348.75729370]
[-112.13075256 359.36389160]
[-122.73735809 369.97048950]
[-133.34396362 380.57708740]
[-143.95056152 391.18368530]
[-154.55715942 401.79028320]
[-151.68074036 418.44473267]
[-159.21383667 433.38836670]
[-174.01666260 440.83193970]
[-190.17749023 438.02404785]
[-200.59736633 448.81414795]
[-211.01724243 459.60424805]
[-207.37532043 474.59558105]
[-212.43806458 489.16857910]
[-224.58996582 498.67303467]
[-239.95338440 500.07614136]
[-253.62593079 492.93014526]
[-261.24472046 479.51531982]
[-260.37866211 464.11230469]
[-251.30406189 451.63610840]
[-236.91664124 446.06787109]
[-221.80734253 449.18435669]
[-211.38746643 438.39425659]
[-200.96759033 427.60415649]
[-204.49691772 414.71234131]
[-201.16160583 401.65710449]
[-191.73080444 391.88189697]
[-178.59567261 388.01953125]
[-165.16375732 391.18368530]
[-154.55715942 380.57708740]
[-143.95056152 369.97048950]
[-133.34396362 359.36389160]
[-122.73735809 348.75729370]
[-112.13075256 338.15066528]
[-101.52415466 327.54406738]
[-90.91754913 316.93746948]
[-80.40391541 306.23870850]
[-69.98403931 295.44860840]
[-67.02030945 273.19470215]
[-44.72838211 266.80703735]
[-35.28857803 255.14985657]
[-25.84877205 243.49267578]
[-29.87591362 229.17764282]
[-24.63962936 215.06930542]
[-11.95154667 206.65110779]
[3.43840671 207.32601929]
[12.87821293 195.66882324]
[22.31801796 184.01164246]
[31.75782394 172.35444641]
[33.75434494 157.59426880]
[48.45208740 151.73875427]
[57.89189148 140.08155823]
[67.33169556 128.42437744]
[76.77150726 116.76718903]
[71.50354767 102.94174957]
[73.83605194 88.33169556]
[83.14688873 76.83377075]
[96.95272064 71.51464081]
[111.57130432 73.79300690]
[110.11095428 58.28477859]
[119.85031891 46.59720612]
[134.64404297 45.30055237]
[144.08384705 33.64336395]
[153.52365112 21.98617363]
[162.96345520 10.32898426]
[172.40325928 -1.32820523]
[181.84307861 -12.98539448]
[191.28288269 -24.64258385]
[200.72268677 -36.29977417]
[210.16249084 -47.95696259]
[219.60229492 -59.61415100]
[229.04209900 -71.27133942]
[223.31394958 -81.88996887]
[221.51910400 -93.78575897]
[223.84584045 -105.55371094]
[229.99702454 -115.81189728]
[239.22784424 -123.36381531]
[250.43589783 -127.33785248]
[262.29284668 -127.28791046]
[273.40188599 -123.24331665]
[283.43884277 -134.39048767]
[268.57196045 -136.38442993]
[260.70834351 -149.15797424]
[265.62326050 -163.32991028]
[279.70703125 -168.49195862]
[292.61618042 -160.85299683]
[294.86965942 -146.02259827]
[305.83996582 -156.25257874]
[316.81027222 -166.48254395]
[327.78057861 -176.71252441]
[338.75088501 -186.94250488]
[349.72119141 -197.17247009]
[360.69149780 -207.40245056]
[371.66180420 -217.63243103]
[373.19982910 -222.67915344]
[376.22879028 -226.25782776]
[379.93222046 -228.04515076]
[383.48431396 -228.09208679]
[394.97497559 -237.73390198]
[406.46563721 -247.37571716]
[417.95629883 -257.01751709]
[429.44696045 -266.65933228]
[440.93762207 -276.30114746]
[445.51690674 -284.23797607]
[452.71401978 -286.00885010]
[464.37121582 -295.44866943]
[476.02838135 -304.88845825]
[477.43090820 -320.63040161]
[489.60733032 -330.70565796]
[505.33355713 -329.13677979]
[515.27947998 -316.85452271]
[513.54443359 -301.14578247]
[501.15774536 -291.33023071]
[485.46820068 -293.23126221]
[473.81100464 -283.79147339]
[462.15380859 -274.35165405]
[450.57943726 -264.81048584]
[439.08877563 -255.16867065]
[427.59811401 -245.52685547]
[416.10745239 -235.88504028]
[404.61679077 -226.24324036]
[393.12612915 -216.60142517]
[381.89178467 -206.66212463]
[370.92147827 -196.43214417]
[359.95117188 -186.20216370]
[348.98086548 -175.97219849]
[338.01055908 -165.74221802]
[327.04025269 -155.51223755]
[316.06994629 -145.28227234]
[305.09963989 -135.05229187]
[294.58599854 -124.35353088]
[284.54904175 -113.20635986]
[290.94012451 -96.28253937]
[287.86700439 -78.36903381]
[276.09130859 -64.41335297]
[258.79013062 -58.31397629]
[240.69929504 -61.83153534]
[231.25949097 -50.17434692]
[221.81967163 -38.51715851]
[212.37986755 -26.85996819]
[202.94006348 -15.20277786]
[193.50025940 -3.54558873]
[184.06045532 8.11160088]
[174.62065125 19.76878929]
[165.18084717 31.42597961]
[155.74104309 43.08316803]
[146.30123901 54.74035645]
[148.10870361 69.48039246]
[138.70146179 81.43691254]
[123.22849274 83.23281097]
[128.49644470 97.05825043]
[126.16394806 111.66830444]
[116.85311127 123.16622925]
[103.04727936 128.48535156]
[88.42869568 126.20699310]
[78.98888397 137.86418152]
[69.54907990 149.52137756]
[60.10927582 161.17855835]
[57.43755722 176.77255249]
[43.41501236 181.79425049]
[33.97520828 193.45144653]
[24.53540230 205.10864258]
[15.09559631 216.76582336]
[18.95551300 231.67915344]
[13.35927773 245.84020996]
[0.64792097 253.89535522]
[-14.19158268 252.93247986]
[-23.63138771 264.58966064]
[-33.07119370 276.24685669]
[-30.60619545 283.42001343]
[-30.79535675 290.93423462]
[-33.56738281 297.84756470]
[-38.53016281 303.30987549]
[-45.02552795 306.66748047]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 43]
[2 42]
[4 41]
[5 40]
[6 39]
[7 38]
[8 37]
[9 36]
[10 35]
[11 34]
[15 29]
[16 28]
[17 27]
[45 174]
[46 173]
[47 172]
[51 168]
[52 167]
[53 166]
[54 165]
[56 163]
[57 162]
[58 161]
[59 160]
[64 155]
[67 152]
[68 151]
[69 150]
[70 149]
[71 148]
[72 147]
[73 146]
[74 145]
[75 144]
[76 143]
[77 142]
[85 137]
[86 136]
[92 135]
[93 134]
[94 133]
[95 132]
[96 131]
[97 130]
[98 129]
[99 128]
[103 127]
[104 126]
[105 125]
[106 124]
[107 123]
[108 122]
[110 121]
[111 120]
[112 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
