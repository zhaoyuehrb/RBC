%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 02:48:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCCCGCGUGGCAUCCUGUGACCCCUCCCCAGUGCCUCUCCUGGCCCUGAAGGUGCCACUCCAGUGCCCACCAGCCUUGUCUUAAUAAAAUUAAGUUGUAUUGUUUCAUCUGA\
) } def
/len { sequence length } bind def

/coor [
[147.01811218 126.21211243]
[133.02667236 120.80472565]
[119.03524017 115.39734650]
[105.04380798 109.98995972]
[90.97982788 104.77418518]
[73.02619934 108.57247925]
[62.08967590 94.92254639]
[46.57397461 98.01667023]
[36.86057663 86.72512054]
[22.59472847 82.08986664]
[8.32888031 77.45461273]
[-5.93696737 72.81935120]
[-20.20281410 68.18409729]
[-34.46866226 63.54884338]
[-43.73701859 63.86371231]
[-49.05780792 58.58723450]
[-63.19172287 53.56404114]
[-77.32563782 48.54084778]
[-69.68240356 61.44747543]
[-68.15821075 76.36983490]
[-73.03421021 90.55519867]
[-83.41094208 101.38679504]
[-97.37419891 106.86652374]
[-112.34818268 105.98353577]
[-125.57065582 98.90071106]
[-134.60244751 86.92462921]
[-137.77749634 72.26451111]
[-134.51005554 57.62470245]
[-125.40291595 45.70581436]
[-112.13604736 38.70652390]
[-97.15980530 37.91748428]
[-109.17350006 28.93577576]
[-121.18719482 19.95406914]
[-136.87287903 17.88769913]
[-142.43338013 4.06995201]
[-154.44706726 -4.91175604]
[-166.46076965 -13.89346409]
[-182.06500244 -11.38679123]
[-194.82221985 -20.71573639]
[-197.16377258 -36.34560013]
[-187.70046997 -49.00346375]
[-172.04672241 -51.17963791]
[-159.48960876 -41.58304214]
[-157.47906494 -25.90716171]
[-145.46536255 -16.92545319]
[-133.45167542 -7.94374561]
[-118.62528229 -6.51980877]
[-112.20549011 7.94037151]
[-100.19178772 16.92207909]
[-88.17809296 25.90378761]
[-79.06813812 26.64887619]
[-72.30244446 34.40693283]
[-58.16852570 39.43012619]
[-44.03461456 44.45332336]
[-29.83340836 49.28299713]
[-15.56756020 53.91825104]
[-1.30171227 58.55350494]
[12.96413517 63.18876266]
[27.22998238 67.82401276]
[41.49583054 72.45927429]
[55.99114227 69.03360748]
[66.72492981 80.65670013]
[77.72875214 75.43132782]
[89.70986176 79.28012848]
[96.00302124 90.64026642]
[104.16823578 90.16237640]
[110.45119476 95.99852753]
[124.44262695 101.40590668]
[138.43406677 106.81329346]
[152.42549133 112.22068024]
[166.73745728 106.07205963]
[180.84973145 111.75522614]
[186.62329102 125.43738556]
[200.61473083 130.84477234]
[214.60615540 136.25215149]
[224.44030762 131.21786499]
[235.19313049 132.47909546]
[243.25860596 139.36528015]
[246.06985474 149.36146545]
[259.74511719 155.52484131]
[273.18566895 147.99771118]
[288.30453491 149.80696106]
[299.32861328 160.05065918]
[302.17288208 174.64683533]
[315.84814453 180.81021118]
[329.52340698 186.97358704]
[343.19866943 193.13696289]
[356.87393188 199.30033875]
[372.63452148 197.91674805]
[381.05856323 210.20025635]
[394.73382568 216.36363220]
[408.40908813 222.52700806]
[425.33377075 223.52282715]
[429.06207275 240.06175232]
[414.20159912 248.22279358]
[402.24572754 236.20227051]
[388.57046509 230.03889465]
[374.89520264 223.87551880]
[360.11273193 225.69995117]
[350.71054077 212.97560120]
[337.03527832 206.81222534]
[323.36001587 200.64884949]
[309.68475342 194.48547363]
[296.00949097 188.32209778]
[283.19009399 195.85873413]
[268.21377563 194.38417053]
[256.84451294 184.25534058]
[253.58174133 169.20010376]
[239.90647888 163.03672791]
[220.96473694 166.50042725]
[209.19877625 150.24359131]
[195.20735168 144.83621216]
[181.21591187 139.42881775]
[167.74159241 145.67208862]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 70]
[2 69]
[3 68]
[4 67]
[5 65]
[7 62]
[9 60]
[10 59]
[11 58]
[12 57]
[13 56]
[14 55]
[16 54]
[17 53]
[18 52]
[31 50]
[32 49]
[33 48]
[35 46]
[36 45]
[37 44]
[73 113]
[74 112]
[75 111]
[79 109]
[80 108]
[84 104]
[85 103]
[86 102]
[87 101]
[88 100]
[90 98]
[91 97]
[92 96]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
