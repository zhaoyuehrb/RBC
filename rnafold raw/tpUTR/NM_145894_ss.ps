%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 00:53:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUUUCCUCCACCUCCACCCCCACCCCUUAACUUGGGUACCCCUCUGGCCCUCAGAGCACCAAUAUCUCCUCCAUCACUUCCCCUAGCUCCACUCUUGUUGGCCUGGGAACUUCUUGGAACUUUAACUCCUGCCAGCCCUUCUAAGACCCACGAGCGGGGUGAGAGAAGUGUGCAAUAGUCUGGAAUAAAUAUAAAUGAAGGAGGGGC\
) } def
/len { sequence length } bind def

/coor [
[128.86401367 266.98956299]
[123.53418732 281.29183960]
[112.52069855 291.85906982]
[98.01028442 296.59304810]
[82.88399506 294.55389404]
[70.14517212 286.14642334]
[62.32311249 273.04000854]
[60.97089386 257.83691406]
[66.35700226 243.55572510]
[77.41201782 233.03196716]
[91.94095612 228.35516357]
[93.94496918 213.48963928]
[91.72328186 206.44081116]
[96.09107971 198.41833496]
[98.31620026 183.58428955]
[100.54131317 168.75024414]
[102.76643372 153.91619873]
[104.99154663 139.08215332]
[98.63053131 135.10881042]
[90.68384552 147.83085632]
[82.73696136 160.55276489]
[70.01517487 152.60568237]
[77.96180725 139.88417053]
[85.90849304 127.16213226]
[79.54747772 123.18878937]
[67.19297028 131.69561768]
[54.83845901 140.20243835]
[42.48394775 148.70927429]
[42.22586823 164.22419739]
[32.87075043 176.60408020]
[18.01582336 181.08857727]
[3.37311602 175.95333862]
[-5.42695570 163.17295837]
[-5.00058365 147.66174316]
[4.48828363 135.38407898]
[19.39098358 131.06097412]
[33.97712326 136.35475159]
[46.33163071 127.84793091]
[58.68614197 119.34110260]
[71.04064941 110.83428192]
[68.73364258 103.69791412]
[54.46083450 108.31168365]
[49.84729767 94.03879547]
[64.11963654 89.42517853]
[61.81262970 82.28881073]
[46.81637192 82.62378693]
[31.82011223 82.95876312]
[16.82385254 83.29373932]
[1.82759368 83.62871552]
[-10.25495052 94.18293762]
[-26.01354218 91.17522430]
[-33.35953903 76.91283417]
[-26.65771866 62.33664703]
[-11.04914665 58.62827301]
[1.49261761 68.63245392]
[16.48887634 68.29747772]
[31.48513603 67.96250153]
[46.48139572 67.62752533]
[61.47765350 67.29254913]
[66.00265503 61.31138229]
[52.68160248 54.41576385]
[39.36054993 47.52014160]
[26.03949928 40.62452316]
[11.74818516 36.06838989]
[4.57986069 22.89208031]
[8.51834297 8.41836834]
[21.37480927 0.69106168]
[36.00424194 4.00463486]
[44.27652359 16.51872826]
[54.53523254 27.46216774]
[64.79394531 38.40560913]
[75.05265808 49.34904861]
[79.57765198 43.36787796]
[75.82135010 28.84581947]
[72.06505585 14.32376003]
[68.30875397 -0.19829915]
[52.33066940 -4.45184946]
[40.74429321 -16.11596107]
[36.64479065 -31.94033813]
[41.05939484 -47.58218002]
[52.69205856 -58.79795074]
[48.71996307 -73.26247406]
[44.74786377 -87.72699738]
[40.77576828 -102.19152069]
[36.80367279 -116.65604401]
[32.50954819 -131.02825928]
[27.89554024 -145.30099487]
[23.28153038 -159.57373047]
[18.66752243 -173.84646606]
[14.05351257 -188.11918640]
[-0.88711548 -191.96382141]
[-11.36064053 -203.29116821]
[-14.02499866 -218.48672485]
[-8.03000355 -232.70162964]
[4.71136427 -241.39996338]
[20.13338089 -241.80613708]
[33.31493378 -233.79051208]
[40.04984283 -219.91087341]
[38.18901825 -204.59614563]
[28.32624626 -192.73320007]
[32.94025421 -178.46046448]
[37.55426407 -164.18772888]
[42.16827393 -149.91500854]
[46.78228378 -135.64227295]
[49.73815536 -133.71998596]
[51.90981293 -130.27050781]
[52.58959961 -125.67799377]
[51.26819611 -120.62814331]
[55.24029160 -106.16362000]
[59.21239090 -91.69909668]
[63.18448639 -77.23457336]
[67.15657806 -62.77004623]
[80.56889343 -60.19576645]
[91.61661530 -52.05472565]
[98.10993195 -39.88977814]
[98.73136139 -26.04809952]
[93.30268097 -13.22836590]
[82.83081055 -3.95459986]
[86.58711243 10.56745911]
[90.34341431 25.08951950]
[94.09971619 39.61157608]
[127.98741913 55.35855484]
[141.93965149 84.52824402]
[135.03248596 110.98944855]
[149.98220825 109.76247406]
[164.93194580 108.53549957]
[179.88168335 107.30852509]
[194.82186890 105.97029114]
[209.75167847 104.52087402]
[224.68148804 103.07145691]
[234.70979309 91.15210724]
[249.87138367 89.89487457]
[261.17285156 99.52879333]
[276.10266113 98.07936859]
[291.03247070 96.62995148]
[296.62493896 93.10350037]
[302.30599976 92.95326996]
[306.42736816 95.36643982]
[321.39370728 94.36218262]
[334.64489746 85.71831512]
[347.86163330 92.58615112]
[362.82797241 91.58189392]
[377.79434204 90.57762909]
[392.76068115 89.57337189]
[407.72702026 88.56911469]
[416.03799438 75.59860992]
[430.22695923 70.07350159]
[444.77648926 73.91733551]
[454.16040039 85.45337677]
[469.12673950 84.44911194]
[484.09307861 83.44485474]
[499.05941772 82.44059753]
[508.13980103 69.70951080]
[523.29205322 65.84376526]
[537.36169434 72.66864777]
[543.70550537 86.96165466]
[539.32812500 101.97406769]
[526.29638672 110.61748505]
[510.76354980 108.81074524]
[500.06369019 97.40693665]
[485.09735107 98.41120148]
[470.13098145 99.41545868]
[455.16464233 100.41971588]
[447.40609741 113.10604095]
[433.50051880 118.85924530]
[418.70062256 115.27932739]
[408.73126221 103.53545380]
[393.76492310 104.53971863]
[378.79858398 105.54397583]
[363.83224487 106.54823303]
[348.86590576 107.55249786]
[336.68521118 116.12453461]
[322.39797974 109.32852936]
[307.43164062 110.33278656]
[292.48190308 111.55976105]
[277.55209351 113.00917816]
[262.62228394 114.45860291]
[253.38494873 126.08646393]
[238.26464844 127.76906586]
[226.13090515 118.00126648]
[211.20109558 119.45068359]
[196.27128601 120.90010071]
[189.91752625 124.67521667]
[181.10865784 122.25826263]
[166.15892029 123.48523712]
[151.20918274 124.71221161]
[136.25946045 125.93918610]
[149.96733093 132.02969360]
[163.67520142 138.12020874]
[178.55160522 140.04171753]
[191.42044067 147.74841309]
[200.13693237 159.95591736]
[203.24836731 174.62966919]
[200.23619080 189.32411194]
[191.60243225 201.59025574]
[178.78601074 209.38377380]
[163.92291260 211.40580750]
[149.49028015 207.31935120]
[137.89349365 197.80545044]
[131.06526184 184.44972229]
[130.14378357 169.47702026]
[124.98468781 155.39215088]
[119.82559204 141.30726624]
[117.60047150 156.14131165]
[115.37535858 170.97535706]
[113.15023804 185.80940247]
[110.92512512 200.64344788]
[108.81050110 215.49365234]
[106.80648804 230.35917664]
[119.57832336 238.71638489]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 209]
[12 208]
[14 207]
[15 206]
[16 205]
[17 204]
[18 203]
[25 40]
[26 39]
[27 38]
[28 37]
[45 59]
[46 58]
[47 57]
[48 56]
[49 55]
[73 121]
[74 120]
[75 119]
[76 118]
[81 112]
[82 111]
[83 110]
[84 109]
[85 108]
[86 104]
[87 103]
[88 102]
[89 101]
[90 100]
[124 187]
[125 186]
[126 185]
[127 184]
[128 182]
[129 181]
[130 180]
[133 177]
[134 176]
[135 175]
[138 174]
[139 173]
[141 171]
[142 170]
[143 169]
[144 168]
[145 167]
[149 163]
[150 162]
[151 161]
[152 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
