%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 16:30:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAGGCAGAGAGUGGGGCACAGGCAGGCCCUUGGGUGCUAAGGGCUGGGCUGCAUGUGGGUAGCCCGAGCUCCUACUCUGUCUAAAGAGGGCCACAGUGGGGAGCAGGGGCACCUCUGGAGGCAGGAGAGGCCCCCCAGCAUGCUGCCCUAGUACGUGUUUAGAAUAAAAACCAGUUUGUUUUUCAACCUGGACCUCCUUGGAGGCA\
) } def
/len { sequence length } bind def

/coor [
[280.96621704 419.80575562]
[279.06817627 401.18887329]
[283.72283936 383.03631592]
[294.37512207 367.58630371]
[285.34091187 355.61206055]
[276.30667114 343.63781738]
[267.27246094 331.66354370]
[258.23822021 319.68930054]
[243.37442017 320.14239502]
[230.94696045 311.65579224]
[225.83996582 297.31103516]
[230.20936584 282.53894043]
[216.36740112 277.03900146]
[214.23236084 261.36251831]
[205.19813538 249.38827515]
[196.16390991 237.41401672]
[187.12968445 225.43975830]
[178.09545898 213.46551514]
[169.06123352 201.49125671]
[160.02700806 189.51699829]
[150.90304565 177.61097717]
[141.68984985 165.77388000]
[127.76678467 160.48262024]
[125.39636230 144.83999634]
[116.18316650 133.00288391]
[91.53237915 138.83216858]
[66.92093658 127.05209351]
[53.46992111 133.69064331]
[40.01890564 140.32917786]
[26.56789398 146.96772766]
[13.11688137 153.60626221]
[-0.33413142 160.24481201]
[-13.78514385 166.88334656]
[-27.23615646 173.52189636]
[-40.68717194 180.16043091]
[-52.21473694 192.59231567]
[-67.35192108 184.95674133]
[-64.20513153 168.29737854]
[-47.32571411 166.70942688]
[-33.87469864 160.07087708]
[-20.42368698 153.43234253]
[-6.97267437 146.79379272]
[6.47833872 140.15525818]
[19.92935181 133.51670837]
[33.38036346 126.87816620]
[46.83137894 120.23962402]
[60.28239059 113.60108185]
[58.03614044 98.77022552]
[43.22258377 96.41256714]
[28.40902519 94.05491638]
[13.59546757 91.69726562]
[-1.21808970 89.33961487]
[-16.03164673 86.98196411]
[-30.84520340 84.62431335]
[-43.48934555 94.10594177]
[-59.12258530 91.78702545]
[-68.47000122 79.04335022]
[-65.98593140 63.43549728]
[-53.14413834 54.22333908]
[-37.56342316 56.87228394]
[-28.48755264 69.81076050]
[-13.67399597 72.16841125]
[1.13956153 74.52606201]
[15.95311928 76.88371277]
[30.76667595 79.24136353]
[45.58023453 81.59901428]
[60.39379120 83.95666504]
[65.18995667 78.83282471]
[70.55897522 74.80682373]
[76.27754211 71.92277527]
[69.13832855 58.73067093]
[61.99911880 45.53856659]
[54.85990906 32.34645844]
[47.72069550 19.15435219]
[40.58148575 5.96224594]
[33.34332657 -7.17583132]
[26.00663376 -20.25913811]
[18.66993904 -33.34244537]
[1.74729633 -37.77160645]
[-6.57309818 -52.77364349]
[-1.57016122 -68.82935333]
[-9.10268211 -81.80090332]
[-16.63520241 -94.77245331]
[-24.16772270 -107.74401093]
[-39.24340057 -113.23066711]
[-44.21649933 -128.48347473]
[-35.27207947 -141.80175781]
[-19.27153778 -142.96888733]
[-8.48911858 -131.08953857]
[-11.19617271 -115.27652740]
[-3.66365170 -102.30497742]
[3.86886907 -89.33342743]
[11.40139008 -76.36187744]
[24.19650078 -74.83283997]
[33.91952515 -66.08248138]
[36.87040329 -53.13925171]
[31.75324631 -40.67913818]
[39.08993912 -27.59583282]
[46.42663574 -14.51252556]
[52.44102097 -10.21528149]
[53.77359009 -1.17696476]
[60.91280365 12.01514149]
[68.05201721 25.20724869]
[75.19122314 38.39935303]
[82.33043671 51.59146118]
[89.46964264 64.78356934]
[100.55249786 63.24703598]
[111.58415222 65.11600494]
[119.11666870 52.14445496]
[126.64919281 39.17290497]
[134.18171692 26.20135498]
[141.71423340 13.22980309]
[137.88365173 -1.86868620]
[145.70747375 -14.91637993]
[160.12518311 -18.47520828]
[167.65771484 -31.44676018]
[175.19023132 -44.41831207]
[182.72274780 -57.38986206]
[177.24139404 -72.03529358]
[182.50505066 -86.76037598]
[196.02836609 -94.61237335]
[211.42605591 -91.88381195]
[221.42781067 -79.86302948]
[221.31108093 -64.22588348]
[211.13101196 -52.35575104]
[195.69430542 -49.85734177]
[188.16178894 -36.88579178]
[180.62925720 -23.91423988]
[173.09674072 -10.94268799]
[177.15202332 3.34332657]
[169.69776917 16.60562706]
[154.68579102 20.76232338]
[147.15325928 33.73387527]
[139.62074280 46.70542526]
[132.08822632 59.67697525]
[124.55570221 72.64852905]
[133.04289246 83.89867401]
[136.67304993 97.51557159]
[134.91259766 111.49766541]
[128.02027893 123.78969574]
[137.23345947 135.62680054]
[151.81552124 141.76472473]
[153.52696228 156.56068420]
[162.74014282 168.39779663]
[170.48191833 173.24877930]
[172.00126648 180.48277283]
[181.03549194 192.45703125]
[190.06971741 204.43127441]
[199.10394287 216.40553284]
[208.13816833 228.37979126]
[217.17239380 240.35404968]
[226.20661926 252.32829285]
[240.69477844 258.68472290]
[242.18362427 273.50473022]
[257.58767700 273.35830688]
[269.97940063 282.20693970]
[274.72848511 296.48666382]
[270.21249390 310.65505981]
[279.24670410 322.62933350]
[288.28094482 334.60357666]
[297.31515503 346.57781982]
[306.34939575 358.55209351]
[318.63107300 353.66955566]
[331.72311401 351.94772339]
[344.82604980 353.48583984]
[357.14129639 358.18432617]
[367.91958618 365.75109863]
[376.50680542 375.71984863]
[382.38345337 387.47863770]
[385.19631958 400.30752563]
[384.77938843 413.42269897]
[381.16397095 426.02423096]
[374.57620239 437.34506226]
[385.14285278 447.99142456]
[395.70953369 458.63781738]
[406.27618408 469.28421021]
[421.48925781 473.62850952]
[424.96331787 488.11230469]
[435.52996826 498.75869751]
[446.09664917 509.40505981]
[462.06961060 510.90298462]
[470.73660278 524.40344238]
[465.44900513 539.55010986]
[450.26303101 544.72369385]
[436.82806396 535.95550537]
[435.45025635 519.97174072]
[424.88357544 509.32534790]
[414.31692505 498.67895508]
[399.85964966 495.09616089]
[395.62982178 479.85089111]
[385.06314087 469.20449829]
[374.49645996 458.55810547]
[363.92980957 447.91171265]
[358.56118774 451.42239380]
[352.80783081 454.25891113]
[356.59930420 468.77182007]
[360.39077759 483.28472900]
[364.18225098 497.79766846]
[376.08404541 509.07943726]
[372.00201416 524.96240234]
[356.13537598 529.10754395]
[344.80639648 517.25067139]
[349.66931152 501.58911133]
[345.87786865 487.07620239]
[342.08639526 472.56329346]
[338.29492188 458.05035400]
[319.71945190 456.95794678]
[302.63992310 449.50708008]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 162]
[5 161]
[6 160]
[7 159]
[8 158]
[12 154]
[14 152]
[15 151]
[16 150]
[17 149]
[18 148]
[19 147]
[20 146]
[21 144]
[22 143]
[24 141]
[25 140]
[27 47]
[28 46]
[29 45]
[30 44]
[31 43]
[32 42]
[33 41]
[34 40]
[35 39]
[48 67]
[49 66]
[50 65]
[51 64]
[52 63]
[53 62]
[54 61]
[70 106]
[71 105]
[72 104]
[73 103]
[74 102]
[75 101]
[76 99]
[77 98]
[78 97]
[81 93]
[82 92]
[83 91]
[84 90]
[108 136]
[109 135]
[110 134]
[111 133]
[112 132]
[115 129]
[116 128]
[117 127]
[118 126]
[173 193]
[174 192]
[175 191]
[176 190]
[178 188]
[179 187]
[180 186]
[195 206]
[196 205]
[197 204]
[198 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
