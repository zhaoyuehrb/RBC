%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 20:16:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUGUAAACAUUUUCAGUAUGUAUAGUGUAAAGAAAUAUUAAAGCCAAUCAUGAGUACGUAAAGUGAUUUUUGCUCUCCGUGUACAACUUUUAAAAUCUGACUUUGUUUUAAAAAAACAUAAACUGUUCAUUACAUUCUUCAUUUUUAUCAUUUAUAGUUUUAUGCAUGUAAUAAACUAAUAUGUCAUAAGAUGA\
) } def
/len { sequence length } bind def

/coor [
[313.37673950 339.04138184]
[310.66174316 315.90750122]
[318.00738525 293.76351929]
[306.36520386 284.30520630]
[294.72299194 274.84692383]
[283.08081055 265.38864136]
[271.43859863 255.93034363]
[259.79641724 246.47206116]
[248.15422058 237.01376343]
[237.83164978 242.71833801]
[226.15516663 244.60910034]
[214.49174500 242.44104004]
[204.21485901 236.44567871]
[196.54272461 227.30661011]
[192.39389038 216.08168030]
[192.27734375 204.08050537]
[196.23011780 192.71168518]
[185.05116272 182.71015930]
[173.87219238 172.70861816]
[162.69322205 162.70709229]
[151.35697937 152.88417053]
[139.86631775 143.24235535]
[128.37564087 133.60055542]
[116.88497925 123.95873260]
[87.94243622 137.55729675]
[53.18582535 116.32785797]
[39.85329437 123.20125580]
[26.52076340 130.07466125]
[13.18823051 136.94805908]
[-0.14430085 143.82145691]
[-13.47683239 150.69485474]
[-18.04968834 165.82312012]
[-32.01974869 173.21318054]
[-47.09882736 168.48063660]
[-54.34077072 154.43321228]
[-49.44906616 139.40501404]
[-35.32587051 132.31199646]
[-20.35023117 137.36231995]
[-7.01769876 130.48892212]
[6.31483316 123.61552429]
[19.64736557 116.74212646]
[32.97989655 109.86872864]
[46.31242752 102.99533081]
[46.72871399 95.50688934]
[31.73303413 95.14690399]
[18.18656921 101.58843994]
[5.73288059 93.22747803]
[6.56594610 78.25063324]
[19.87007332 71.32241058]
[32.61809921 79.22568512]
[47.56128311 80.53001404]
[47.97756958 73.04157257]
[35.48902130 64.73277283]
[23.00047302 56.42397308]
[10.51192474 48.11517334]
[-2.04214573 39.90570831]
[-14.66094875 31.79609489]
[-25.15120888 34.72113800]
[-35.30863953 31.45145416]
[-41.84749985 23.29872704]
[-42.79328918 13.11122608]
[-55.14844131 4.60532761]
[-67.50358582 -3.90057015]
[-79.85873413 -12.40646839]
[-92.21388245 -20.91236687]
[-104.56903839 -29.41826439]
[-120.95058441 -30.17780495]
[-128.24220276 -44.86672211]
[-118.94290924 -58.37431335]
[-102.61901093 -56.80513000]
[-96.06313324 -41.77341461]
[-83.70798492 -33.26751328]
[-71.35283661 -24.76161766]
[-58.99769211 -16.25571823]
[-46.64253998 -7.74982071]
[-34.28739166 0.75607705]
[-14.95769882 0.86296374]
[-6.55133629 19.17729187]
[6.06746674 27.28690338]
[13.40196896 28.25948715]
[18.82072639 35.62662506]
[31.30927277 43.93542480]
[43.79782104 52.24422455]
[56.28636932 60.55302811]
[63.13311005 57.49163437]
[50.98394775 48.69403458]
[52.52841949 33.77375793]
[66.22203827 27.65127182]
[78.37100983 36.44913864]
[76.82659912 51.36885071]
[83.67333984 48.30745697]
[85.80805969 33.46013641]
[87.94277954 18.61281586]
[90.07750702 3.76549363]
[92.21222687 -11.08182812]
[94.34695435 -25.92914963]
[96.48167419 -40.77647018]
[98.61639404 -55.62379456]
[100.75112152 -70.47111511]
[89.52989960 -81.18856812]
[86.78442383 -96.46083069]
[93.57039642 -110.41540527]
[107.27846527 -117.68647766]
[122.63760376 -115.47816467]
[133.74189758 -104.63961792]
[136.32153320 -89.33847046]
[129.38458252 -75.45832825]
[115.59844208 -68.33639526]
[113.46371460 -53.48907089]
[111.32899475 -38.64175034]
[109.19427490 -23.79442787]
[107.05954742 -8.94710541]
[104.92482758 5.90021610]
[102.79010773 20.74753761]
[100.65538025 35.59486008]
[98.52066040 50.44218063]
[125.92176056 65.91309357]
[135.02801514 91.40470123]
[126.52679443 112.46807098]
[138.01745605 122.10987854]
[149.50813293 131.75169373]
[160.99879456 141.39350891]
[167.44944763 142.91958618]
[171.54019165 146.88389587]
[172.69476318 151.52812195]
[183.87371826 161.52966309]
[195.05268860 171.53118896]
[206.23165894 181.53273010]
[223.55157471 175.17658997]
[241.61875916 178.46716309]
[255.45687866 190.41044617]
[261.29895020 207.64138794]
[257.61248779 225.37156677]
[269.25469971 234.82986450]
[280.89691162 244.28814697]
[292.53909302 253.74644470]
[304.18130493 263.20474243]
[315.82348633 272.66302490]
[327.46569824 282.12130737]
[333.67697144 277.18148804]
[340.54385376 273.21041870]
[347.91653442 270.29345703]
[355.63436890 268.49298096]
[363.52935791 267.84707642]
[371.42987061 268.36874390]
[379.16418457 270.04550171]
[386.56451416 272.83987427]
[393.47033691 276.69009399]
[399.73214722 281.51156616]
[405.21444702 287.19863892]
[409.79888916 293.62695312]
[413.38674927 300.65612793]
[415.90097046 308.13293457]
[417.28793335 315.89450073]
[417.51858521 323.77197266]
[416.58898926 331.59408569]
[414.52041626 339.19097900]
[411.35885620 346.39779663]
[407.17407227 353.05834961]
[402.05786133 359.02847290]
[411.14199829 370.96487427]
[420.22616577 382.90130615]
[429.31030273 394.83773804]
[438.39443970 406.77416992]
[447.47860718 418.71060181]
[456.56274414 430.64703369]
[465.64688110 442.58346558]
[474.82543945 454.44744873]
[484.09780884 466.23822021]
[493.37020874 478.02902222]
[502.64257812 489.81982422]
[511.91497803 501.61062622]
[527.26239014 500.04183960]
[541.01123047 507.03988647]
[548.77429199 520.37170410]
[548.07452393 535.78320312]
[539.13507080 548.35656738]
[524.80853271 554.07971191]
[509.66650391 551.12646484]
[498.54067993 540.43908691]
[494.98132324 525.42791748]
[500.12417603 510.88299561]
[490.85180664 499.09222412]
[481.57940674 487.30142212]
[472.30703735 475.51062012]
[463.03463745 463.71981812]
[456.42163086 460.40185547]
[453.71044922 451.66760254]
[444.62631226 439.73117065]
[435.54217529 427.79473877]
[426.45800781 415.85830688]
[417.37387085 403.92187500]
[408.28973389 391.98547363]
[399.20559692 380.04904175]
[390.12142944 368.11260986]
[367.97705078 374.83023071]
[345.03347778 371.53628540]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 139]
[4 138]
[5 137]
[6 136]
[7 135]
[8 134]
[9 133]
[17 128]
[18 127]
[19 126]
[20 125]
[21 122]
[22 121]
[23 120]
[24 119]
[26 43]
[27 42]
[28 41]
[29 40]
[30 39]
[31 38]
[52 84]
[53 83]
[54 82]
[55 81]
[56 79]
[57 78]
[61 76]
[62 75]
[63 74]
[64 73]
[65 72]
[66 71]
[91 116]
[92 115]
[93 114]
[94 113]
[95 112]
[96 111]
[97 110]
[98 109]
[99 108]
[160 195]
[161 194]
[162 193]
[163 192]
[164 191]
[165 190]
[166 189]
[167 188]
[168 186]
[169 185]
[170 184]
[171 183]
[172 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
