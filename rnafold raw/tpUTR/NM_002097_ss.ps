%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 14:31:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAACUGCACUGCUUUGUUUAAAGGACUGCAGACCAAGGAGCGAGCUUUCUCUCAGAGCAUGCUUUUCUUUAUUAAAAUUACUGAUGCAGAACAUUUGAUUCCUUAUCAUUUC\
) } def
/len { sequence length } bind def

/coor [
[66.31148529 177.72738647]
[65.84011078 162.73480225]
[74.89244080 150.77462769]
[81.72662354 137.42195129]
[69.32745361 145.86355591]
[56.92827988 154.30514526]
[44.52910614 162.74674988]
[32.12993240 171.18833923]
[25.07689667 185.35044861]
[10.20204449 186.11726379]
[3.14900732 200.27937317]
[-11.72584534 201.04620361]
[-24.12501717 209.48779297]
[-36.52418900 217.92938232]
[-48.92336273 226.37098694]
[-55.55723953 241.36843872]
[-71.88906860 242.85279846]
[-81.11807251 229.29707336]
[-73.75022888 214.64624023]
[-57.36495590 213.97181702]
[-44.96578598 205.53021240]
[-32.56661224 197.08862305]
[-20.16744041 188.64703369]
[-14.00127506 175.08871460]
[1.76044917 173.71809387]
[7.92661428 160.15979004]
[23.68833923 158.78916931]
[36.08751297 150.34756470]
[48.48668289 141.90597534]
[60.88585663 133.46438599]
[73.28502655 125.02278900]
[67.08303833 115.38894653]
[64.19835663 104.38716125]
[64.86551666 93.11708069]
[68.96669006 82.68859863]
[76.04844666 74.11252594]
[85.37129211 68.20269012]
[95.98665619 65.49878693]
[91.47054291 51.19477463]
[86.95443726 36.89076233]
[82.43832397 22.58675194]
[77.92221069 8.28274155]
[66.38904572 -2.54761338]
[69.93548584 -17.01384926]
[65.41938019 -31.31786156]
[60.90326691 -45.62187195]
[56.38715744 -59.92588425]
[51.87104797 -74.22989655]
[38.35854721 -82.87812805]
[36.83848572 -98.84900665]
[48.47691727 -109.89103699]
[64.34583282 -107.53372192]
[72.27196503 -93.58538818]
[66.17505646 -78.74600983]
[70.69116974 -64.44199371]
[75.20727539 -50.13798523]
[79.72338867 -35.83397293]
[84.23950195 -21.52996063]
[95.44964600 -11.72272491]
[92.22622681 3.76663065]
[96.74233246 18.07064247]
[101.25844574 32.37465286]
[105.77455902 46.67866516]
[110.29066467 60.98267746]
[123.83094025 67.43720245]
[137.78678894 61.93861008]
[151.74261475 56.44001389]
[165.69845581 50.94141769]
[175.70170593 38.68394470]
[190.37930298 41.21717072]
[204.33514404 35.71857452]
[218.29098511 30.21997833]
[232.24682617 24.72138214]
[246.20266724 19.22278595]
[250.99148560 4.33650827]
[264.25610352 -3.94504547]
[279.73333740 -1.71157885]
[290.11538696 9.98233318]
[290.50009155 25.61518478]
[280.70584106 37.80561829]
[265.35717773 40.79768753]
[251.70126343 33.17862320]
[237.74542236 38.67721939]
[223.78958130 44.17581558]
[209.83374023 49.67441177]
[195.87789917 55.17300797]
[186.87287903 67.03718567]
[171.19705200 64.89725494]
[157.24121094 70.39585114]
[143.28538513 75.89444733]
[129.32954407 81.39304352]
[134.18774414 92.01518250]
[135.28094482 103.76982117]
[132.40472412 115.34825134]
[125.80119324 125.43405151]
[116.14086914 132.85273743]
[124.75400543 145.13336182]
[133.36714172 157.41400146]
[141.98027039 169.69462585]
[157.46955872 173.87333679]
[163.72750854 188.64552307]
[155.95355225 202.67924500]
[140.11122131 205.20901489]
[128.35337830 194.29423523]
[129.69963074 178.30775452]
[121.08650208 166.02713013]
[112.47336578 153.74649048]
[103.86023712 141.46586609]
[105.53132629 156.37248230]
[109.76963806 170.76126099]
[104.02704620 184.61848450]
[90.85328674 191.79148865]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 31]
[5 30]
[6 29]
[7 28]
[8 27]
[10 25]
[12 23]
[13 22]
[14 21]
[15 20]
[38 64]
[39 63]
[40 62]
[41 61]
[42 60]
[44 58]
[45 57]
[46 56]
[47 55]
[48 54]
[65 91]
[66 90]
[67 89]
[68 88]
[70 86]
[71 85]
[72 84]
[73 83]
[74 82]
[96 108]
[97 107]
[98 106]
[99 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
