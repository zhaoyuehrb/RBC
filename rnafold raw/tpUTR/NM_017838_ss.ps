%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 00:53:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCUCCGGUAGCACCUGGGCACCUGCCGCUGGAAGCUAUUGGGCUGGCAGCAGGACGACUGGCUGUCCUCCUGCCCACCCACACUGACGGCAUCUUCCCAGUUCCCCAAGGCACGCCUUCUUCCCAGGCAGCUCUAACAGCCCUUUCAUGAAGGUAAUGCUAGUCUUCUGUCCAUCAGUGCCAUUUCCUGUAGAACUAAAGGCUGUUCCAAGAAUGUGGGGUGGGGAAAGUAAAUGCUAAGACUAAA\
) } def
/len { sequence length } bind def

/coor [
[-216.19985962 310.99072266]
[-229.15870667 318.54507446]
[-242.11755371 326.09942627]
[-253.24368286 336.15969849]
[-262.06045532 348.29495239]
[-264.56317139 357.05285645]
[-271.06506348 360.52636719]
[-280.03363037 372.54986572]
[-289.00222778 384.57339478]
[-297.97079468 396.59689331]
[-306.93936157 408.62039185]
[-315.90792847 420.64389038]
[-324.87652588 432.66738892]
[-333.84509277 444.69091797]
[-335.58682251 463.03427124]
[-351.98571777 469.31283569]
[-360.80252075 481.44808960]
[-362.65444946 497.16055298]
[-376.39495850 502.90924072]
[-385.13531494 515.09967041]
[-393.79888916 527.34472656]
[-402.46249390 539.58984375]
[-403.43197632 555.96032715]
[-418.21316528 563.06304932]
[-431.60043335 553.59130859]
[-429.82211304 537.28887939]
[-414.70758057 530.92626953]
[-406.04397583 518.68115234]
[-397.38040161 506.43606567]
[-396.08609009 499.17904663]
[-388.53021240 494.09246826]
[-387.30889893 479.24801636]
[-372.93777466 472.63131714]
[-364.12100220 460.49606323]
[-365.70529175 448.51977539]
[-358.48098755 438.34201050]
[-345.86859131 435.72232056]
[-336.90002441 423.69882202]
[-327.93142700 411.67532349]
[-318.96286011 399.65182495]
[-309.99429321 387.62832642]
[-301.02572632 375.60479736]
[-292.05712891 363.58129883]
[-283.08856201 351.55780029]
[-274.19570923 339.47817993]
[-265.37893677 327.34292603]
[-268.78387451 320.66036987]
[-278.99865723 300.61273193]
[-293.99865723 300.61273193]
[-308.99865723 300.61273193]
[-323.99865723 300.61273193]
[-338.99865723 300.61273193]
[-352.79882812 308.35003662]
[-365.52609253 300.61273193]
[-380.52609253 300.61273193]
[-395.52609253 300.61273193]
[-410.52609253 300.61273193]
[-425.52609253 300.61273193]
[-440.52609253 300.61273193]
[-451.52279663 311.96386719]
[-467.32620239 312.13095093]
[-478.56042480 301.01486206]
[-478.56042480 285.21060181]
[-467.32620239 274.09451294]
[-451.52279663 274.26159668]
[-440.52609253 285.61273193]
[-425.52609253 285.61273193]
[-410.52609253 285.61273193]
[-395.52609253 285.61273193]
[-380.52609253 285.61273193]
[-365.52609253 285.61273193]
[-352.79882812 277.87542725]
[-338.99865723 285.61273193]
[-323.99865723 285.61273193]
[-308.99865723 285.61273193]
[-293.99865723 285.61273193]
[-278.99865723 285.61273193]
[-262.78472900 291.02325439]
[-252.66696167 301.34936523]
[-249.67190552 313.14056396]
[-236.71305847 305.58621216]
[-223.75419617 298.03186035]
[-227.47329712 282.13522339]
[-226.09330750 265.84899902]
[-219.73797607 250.77033997]
[-209.01950073 238.38154602]
[-194.97964478 229.90435791]
[-178.98846436 226.17948914]
[-162.61054993 227.58323669]
[-147.45205688 233.98954773]
[-135.00311279 244.78118896]
[-122.23819733 236.90356445]
[-109.47328186 229.02593994]
[-96.70835876 221.14833069]
[-83.94344330 213.27070618]
[-71.32927704 205.15388489]
[-58.87033844 196.80075073]
[-46.41139984 188.44761658]
[-34.00518799 180.01637268]
[-21.65220070 171.50733948]
[-9.29921150 162.99830627]
[-9.71578503 151.62651062]
[-4.54784298 141.35409546]
[5.02876616 134.77490234]
[16.70955658 133.61201477]
[27.61553192 138.26792908]
[40.17845154 130.07202148]
[52.74137497 121.87609863]
[65.30429077 113.68018341]
[77.86721802 105.48426819]
[81.12336731 76.55378723]
[116.53637695 66.45520020]
[121.17163086 52.18935013]
[125.80688477 37.92350388]
[130.44213867 23.65765572]
[126.20455170 5.72569609]
[139.72085571 -5.48386526]
[144.17648315 -19.80683327]
[148.63211060 -34.12980270]
[153.08772278 -48.45277023]
[157.54335022 -62.77573776]
[161.99897766 -77.09870911]
[150.91981506 -87.53965759]
[145.49467468 -101.69786835]
[146.74958801 -116.74597168]
[154.38227844 -129.70372009]
[166.83267212 -138.02818298]
[181.60156250 -140.11280823]
[186.05717468 -154.43577576]
[190.51280212 -168.75874329]
[189.43870544 -175.24095154]
[191.47708130 -180.51171875]
[195.26455688 -183.38311768]
[200.07870483 -197.58959961]
[204.89286804 -211.79606628]
[199.10751343 -226.75965881]
[207.32350159 -240.53924561]
[223.23823547 -242.56431580]
[234.64328003 -231.28138733]
[232.78967285 -215.34577942]
[219.09933472 -206.98191833]
[214.28518677 -192.77543640]
[209.47102356 -178.56896973]
[204.83576965 -164.30311584]
[200.38014221 -149.98014832]
[195.92453003 -135.65718079]
[206.90464783 -125.56250000]
[212.43574524 -111.64430237]
[211.37097168 -96.64338684]
[203.86811829 -83.53891754]
[191.36882019 -74.95668030]
[176.32194519 -72.64308167]
[171.86631775 -58.32011414]
[167.41070557 -43.99714661]
[162.95507812 -29.67417717]
[158.49945068 -15.35120964]
[154.04382324 -1.02824163]
[159.38804626 9.80602264]
[155.81239319 21.76396751]
[144.70799255 28.29290962]
[140.07272339 42.55875778]
[135.43746948 56.82460403]
[130.80221558 71.09045410]
[139.99583435 82.94277954]
[154.96623230 82.00092316]
[169.93663025 81.05906677]
[184.90702820 80.11720276]
[199.87742615 79.17534637]
[214.84782410 78.23348999]
[225.27491760 66.66137695]
[240.47044373 65.91946411]
[251.43843079 75.93140411]
[266.40881348 74.98954773]
[273.30148315 61.33530045]
[286.01922607 53.01929474]
[301.09173584 52.19108200]
[314.46557617 58.97311020]
[322.59432983 71.45465088]
[337.56475830 70.51279449]
[352.53515625 69.57093811]
[359.95443726 56.04475784]
[373.51965332 48.69706726]
[388.90219116 49.87249374]
[401.19351196 59.19595718]
[406.47149658 73.69238281]
[403.05200195 88.73600006]
[392.02615356 99.52645874]
[376.91223145 102.62055206]
[362.53308105 97.03097534]
[353.47698975 84.54133606]
[338.50659180 85.48320007]
[323.53619385 86.42505646]
[317.03588867 99.82698059]
[304.61752319 108.23171997]
[289.56005859 109.29912567]
[275.90032959 102.64264679]
[267.35067749 89.95994568]
[252.38027954 90.90180206]
[242.75361633 102.20945740]
[227.58491516 103.37789154]
[215.78968811 93.20388794]
[200.81929016 94.14575195]
[185.84889221 95.08760834]
[170.87847900 96.02946472]
[155.90808105 96.97132111]
[140.93768311 97.91317749]
[136.84339905 112.34359741]
[149.08850098 121.00718689]
[161.33358765 129.67077637]
[173.57867432 138.33436584]
[190.00097656 142.54675293]
[190.49935913 159.49337769]
[174.35298157 164.66357422]
[164.91508484 150.57945251]
[152.66999817 141.91586304]
[140.42491150 133.25227356]
[128.17980957 124.58868408]
[102.94156647 129.95661926]
[86.06313324 118.04718781]
[73.50020599 126.24310303]
[60.93729019 134.43902588]
[48.37436676 142.63493347]
[35.81144714 150.83085632]
[32.60175705 169.52194214]
[17.00244904 179.73370361]
[-0.79017729 175.35128784]
[-13.14316654 183.86032104]
[-25.49615479 192.36935425]
[-30.77099419 199.79501343]
[-38.05826569 200.90655518]
[-50.51720047 209.25968933]
[-62.97613907 217.61282349]
[-65.25598907 222.25242615]
[-68.73183441 225.26736450]
[-72.59128571 226.47418213]
[-76.06582642 226.03562927]
[-88.83074188 233.91323853]
[-101.59565735 241.79086304]
[-114.36057281 249.66848755]
[-127.12549591 257.54611206]
[-123.38706207 270.76571655]
[-123.19723511 284.48971558]
[-126.56236267 297.78298950]
[-133.24678040 309.74142456]
[-142.78930664 319.55349731]
[-154.53507996 326.55529785]
[-167.68043518 330.27545166]
[-181.32797241 330.46679688]
[-194.54777527 327.12295532]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 82]
[2 81]
[3 80]
[4 46]
[5 45]
[7 44]
[8 43]
[9 42]
[10 41]
[11 40]
[12 39]
[13 38]
[14 37]
[16 34]
[17 33]
[19 31]
[20 29]
[21 28]
[22 27]
[48 77]
[49 76]
[50 75]
[51 74]
[52 73]
[54 71]
[55 70]
[56 69]
[57 68]
[58 67]
[59 66]
[91 240]
[92 239]
[93 238]
[94 237]
[95 236]
[96 232]
[97 231]
[98 230]
[99 228]
[100 227]
[101 226]
[106 223]
[107 222]
[108 221]
[109 220]
[110 219]
[112 163]
[113 162]
[114 161]
[115 160]
[117 157]
[118 156]
[119 155]
[120 154]
[121 153]
[122 152]
[128 146]
[129 145]
[130 144]
[133 143]
[134 142]
[135 141]
[164 206]
[165 205]
[166 204]
[167 203]
[168 202]
[169 201]
[172 198]
[173 197]
[178 192]
[179 191]
[180 190]
[207 217]
[208 216]
[209 215]
[210 214]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
