%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Sep  9 22:50:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGACCCAAUCUGGACUCCUUCCCCGCCUUGGGACAUCGCAGGCCGGGAAGCAGUGCCCGCCAGGCCUGGGCCAGGAGAGCUCCAGGAAGGGCACUGAGCGCUGCUGGCGCGAGGCCUCGGACAUCCGCAGGCACCAGGGAAAGUCUCCUGGGGCGAUCUGUAAAUAAACCUUUUUUUCUUUUGUUUUUUAA\
) } def
/len { sequence length } bind def

/coor [
[244.13290405 291.43972778]
[234.74012756 279.74462891]
[225.34735107 268.04949951]
[215.95457458 256.35440063]
[206.56179810 244.65927124]
[197.16902161 232.96415710]
[187.77624512 221.26904297]
[173.07664490 223.67475891]
[159.05323792 218.36436462]
[149.50769043 206.67041016]
[147.08114624 191.67012024]
[152.52413940 177.37602234]
[143.13136292 165.68090820]
[133.73858643 153.98579407]
[124.34580231 142.29067993]
[114.95302582 130.59556580]
[103.58255768 134.91470337]
[91.05516815 135.01757812]
[78.92870331 130.63966370]
[68.79749298 122.08893585]
[62.08369446 110.23616791]
[48.14596176 115.78049469]
[34.20822906 121.32482910]
[20.27049637 126.86915588]
[6.33276320 132.41348267]
[-7.60496998 137.95782471]
[-17.56796837 150.24803162]
[-32.25379944 147.76293945]
[-46.19153214 153.30728149]
[-60.12926483 158.85160828]
[-74.06700134 164.39593506]
[-80.89533997 170.48373413]
[-88.27420044 169.91532898]
[-98.43389893 182.04344177]
[-113.07778931 179.32208252]
[-123.02458191 192.36022949]
[-139.25256348 189.99705505]
[-145.06777954 174.66358948]
[-134.48803711 162.13359070]
[-118.39685822 165.29684448]
[-109.24034119 153.54919434]
[-93.59326935 155.89007568]
[-79.61132812 150.45820618]
[-65.67359161 144.91387939]
[-51.73586273 139.36953735]
[-37.79813004 133.82521057]
[-28.83205032 121.93157196]
[-13.14929962 124.02008820]
[0.78843313 118.47575378]
[14.72616577 112.93142700]
[28.66389847 107.38709259]
[42.60163116 101.84276581]
[56.53936386 96.29843140]
[60.36326218 81.79402924]
[50.97048569 70.09891510]
[41.57770538 58.40379715]
[32.18492889 46.70868301]
[22.79215050 35.01356506]
[13.39937305 23.31845093]
[4.00659513 11.62333584]
[-5.38618279 -0.07177984]
[-14.95257664 1.71636963]
[-24.45481110 -0.09917112]
[-32.59004211 -5.22641754]
[-38.25860214 -12.92231083]
[-40.71258926 -22.10015106]
[-39.65433884 -31.48295593]
[-35.27185822 -39.78113174]
[-43.89199448 -52.05685043]
[-52.51212692 -64.33256531]
[-61.13226318 -76.60828400]
[-69.75239563 -88.88400269]
[-78.47113800 -101.08988953]
[-87.28791809 -113.22514343]
[-96.20216370 -125.28897858]
[-111.49291229 -131.21560669]
[-113.73795319 -147.46035767]
[-100.62776947 -157.31202698]
[-85.64900208 -150.63604736]
[-84.21051788 -134.30010986]
[-77.67018890 -130.83679199]
[-75.15266418 -122.04192352]
[-66.33588409 -109.90666962]
[-59.85219574 -106.33841705]
[-57.47668076 -97.50414276]
[-48.85654449 -85.22842407]
[-40.23640823 -72.95270538]
[-31.61627388 -60.67698288]
[-22.99613953 -48.40126419]
[-2.64638853 -46.60549545]
[9.96102047 -30.15998077]
[6.30893278 -9.46455765]
[15.70171070 2.23055744]
[25.09448814 13.92567253]
[34.48726654 25.62078857]
[43.88004303 37.31590271]
[53.27282333 49.01102066]
[62.66559982 60.70613480]
[72.05838013 72.40125275]
[81.87956238 61.99945450]
[95.58926392 55.29120255]
[100.10945129 40.98847961]
[104.62963867 26.68575859]
[109.14982605 12.38303471]
[113.67002106 -1.91968834]
[112.67780304 -18.84457588]
[128.66658020 -24.48329163]
[138.51107788 -10.68030739]
[127.97274017 2.60050082]
[123.45255280 16.90322495]
[118.93236542 31.20594788]
[114.41217041 45.50867081]
[109.89198303 59.81139374]
[116.02984619 64.12145996]
[129.63282776 57.80016327]
[128.30555725 72.74160004]
[134.44342041 77.05166626]
[146.36209106 67.94422913]
[158.28074646 58.83678818]
[170.19941711 49.72935104]
[182.04432678 40.52619934]
[193.81472778 31.22793579]
[205.58512878 21.92966843]
[211.14054871 6.50017262]
[227.32630920 3.86325812]
[237.49188232 16.73155785]
[231.17979431 31.86726570]
[214.88339233 33.70006561]
[203.11299133 42.99833298]
[191.34260559 52.29659653]
[188.03831482 58.91870880]
[179.30685425 61.64801788]
[167.38818359 70.75545502]
[155.46952820 79.86289215]
[143.55085754 88.97032928]
[138.60568237 108.31013489]
[126.64813995 121.20278931]
[136.04092407 132.89790344]
[145.43370056 144.59301758]
[154.82647705 156.28813171]
[164.21925354 167.98324585]
[179.35110474 165.75292969]
[193.47439575 171.35913086]
[202.83308411 183.20317078]
[204.99234009 198.04209900]
[199.47135925 211.87626648]
[208.86413574 223.57138062]
[218.25691223 235.26649475]
[227.64968872 246.96160889]
[237.04246521 258.65673828]
[246.43524170 270.35183716]
[255.82801819 282.04696655]
[265.68408203 293.35437012]
[275.98748779 304.25576782]
[286.29086304 315.15716553]
[296.59426880 326.05853271]
[306.89764404 336.95993042]
[317.20101929 347.86132812]
[327.50442505 358.76269531]
[342.03439331 354.21948242]
[357.03494263 356.42645264]
[369.53857422 364.89282227]
[377.09530640 377.89501953]
[378.25259399 392.82717896]
[372.83428955 406.72351074]
[383.13769531 417.62490845]
[393.44107056 428.52627563]
[408.81155396 426.39840698]
[422.48138428 433.74114990]
[429.19418335 447.73104858]
[426.36880493 462.98873901]
[415.09164429 473.64730835]
[399.69897461 475.60830688]
[386.10961914 468.11770630]
[379.54895020 454.05578613]
[382.53967285 438.82968140]
[372.23629761 427.92828369]
[361.93292236 417.02688599]
[347.75332642 421.65341187]
[332.91009521 419.65640259]
[320.35443115 411.37893677]
[312.60620117 398.41802979]
[311.24816895 383.31695557]
[316.60302734 369.06610107]
[306.29965210 358.16470337]
[295.99624634 347.26330566]
[285.69287109 336.36193848]
[275.38949585 325.46054077]
[265.08609009 314.55914307]
[254.78271484 303.65777588]
[251.68162537 318.33370972]
[238.34901428 325.20693970]
[224.59567261 319.21981812]
[220.54202271 304.77792358]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[21 53]
[22 52]
[23 51]
[24 50]
[25 49]
[26 48]
[28 46]
[29 45]
[30 44]
[31 43]
[33 42]
[35 40]
[54 99]
[55 98]
[56 97]
[57 96]
[58 95]
[59 94]
[60 93]
[61 92]
[68 89]
[69 88]
[70 87]
[71 86]
[72 85]
[73 83]
[74 82]
[75 80]
[101 113]
[102 112]
[103 111]
[104 110]
[105 109]
[117 135]
[118 134]
[119 133]
[120 132]
[121 130]
[122 129]
[123 128]
[153 190]
[154 189]
[155 188]
[156 187]
[157 186]
[158 185]
[159 184]
[165 178]
[166 177]
[167 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
