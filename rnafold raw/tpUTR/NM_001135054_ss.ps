%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 11:37:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCACCCCAGAGUGCAGGAUCAUAGGGACAGCGGGGGCCAGGGCAGCGGCGUCGCUCCUCUGCUCAACAGGACCACAACCCCUGCCAGCAGCCCUGGGACCCUGCCAGCAGCCCUGGGAAAAGGCUGUGGCCUCAGGGCGCCUCCCAGUGCCAGAAAAUAAAGUCCUUUUGGAUUCUG\
) } def
/len { sequence length } bind def

/coor [
[51.88932419 363.12606812]
[48.02799988 377.62054443]
[44.16667557 392.11502075]
[54.05348206 404.07458496]
[54.98883057 419.56344604]
[46.61306000 432.62582397]
[32.14682770 438.23898315]
[17.15268898 434.24456787]
[7.39620209 422.17846680]
[6.62893248 406.68038940]
[15.14591122 393.70962524]
[29.67218781 388.25369263]
[33.53351212 373.75921631]
[37.39483643 359.26473999]
[31.60085678 348.62680054]
[34.71907043 336.50689697]
[45.60323715 329.55331421]
[49.71554947 315.12802124]
[53.82785797 300.70272827]
[57.94016647 286.27743530]
[62.05247498 271.85214233]
[66.16478729 257.42687988]
[70.27709198 243.00158691]
[61.47998047 228.68232727]
[65.83415222 212.10140991]
[81.12165833 203.62434387]
[84.98298645 189.12985229]
[88.84430695 174.63536072]
[92.70563507 160.14088440]
[96.56695557 145.64639282]
[100.42828369 131.15190125]
[76.06665039 113.74472046]
[79.40145111 87.59822845]
[69.60540009 76.23876953]
[59.80934525 64.87930298]
[50.01329422 53.51984406]
[40.21724319 42.16038132]
[30.42119026 30.80092239]
[12.90636349 25.15702057]
[10.27252483 7.81841516]
[0.28079307 -3.36931467]
[-9.71093845 -14.55704403]
[-19.70266914 -25.74477386]
[-29.69440079 -36.93250275]
[-39.68613434 -48.12023544]
[-49.67786407 -59.30796432]
[-62.49121475 -67.10655975]
[-77.01866913 -70.84194946]
[-91.54611969 -74.57733917]
[-106.07357025 -78.31273651]
[-121.71621704 -73.38935852]
[-133.61676025 -84.67248535]
[-129.53294373 -100.55500793]
[-113.66584778 -104.69834137]
[-102.33818054 -92.84018707]
[-87.81072235 -89.10478973]
[-73.28327179 -85.36940002]
[-58.75582123 -81.63401031]
[-54.00731277 -87.43932343]
[-65.61779022 -96.93652344]
[-56.12041473 -108.54685211]
[-44.51029587 -99.04994965]
[-39.76178360 -104.85526276]
[-46.30353165 -118.35361481]
[-52.84527588 -131.85197449]
[-59.38702393 -145.35032654]
[-72.55014801 -148.27976990]
[-81.48582458 -158.11788940]
[-83.09133148 -171.11474609]
[-77.00206757 -182.48812866]
[-83.30854797 -196.09799194]
[-89.61503601 -209.70783997]
[-95.92151642 -223.31770325]
[-111.21747589 -225.32698059]
[-122.98419952 -235.30433655]
[-127.46696472 -250.06605530]
[-123.23533630 -264.90173340]
[-111.63961792 -275.07733154]
[-96.37995911 -277.34585571]
[-82.32566071 -270.98345947]
[-73.96139526 -258.02032471]
[-73.95616913 -242.59297180]
[-82.31166077 -229.62419128]
[-76.00517273 -216.01432800]
[-69.69869232 -202.40446472]
[-63.39220810 -188.79461670]
[-47.37870026 -183.69581604]
[-39.84760666 -168.29554749]
[-45.88866806 -151.89207458]
[-39.34692383 -138.39372253]
[-32.80517578 -124.89536285]
[-26.26343155 -111.39701080]
[-38.49013519 -69.29969788]
[-28.49840355 -58.11196518]
[-18.50667191 -46.92423630]
[-8.51494026 -35.73650742]
[1.47679138 -24.54877663]
[11.46852303 -13.36104584]
[21.46025467 -2.17331624]
[33.53227234 -1.17236483]
[41.94779587 8.09015751]
[41.78065109 21.00486946]
[51.57670212 32.36433029]
[61.37275696 43.72379303]
[71.16880798 55.08325195]
[80.96485901 66.44271088]
[90.76091003 77.80217743]
[99.06421661 74.78839111]
[108.31418610 74.92847443]
[117.30084229 78.49643707]
[124.74806213 85.30031586]
[129.49258423 94.67378235]
[130.65907288 105.53587341]
[145.59077454 104.10610199]
[158.59060669 95.08863068]
[171.99743652 101.57756805]
[186.92913818 100.14779663]
[201.86083984 98.71803284]
[216.79254150 97.28826141]
[231.72425842 95.85849762]
[246.65596008 94.42872620]
[250.94837952 91.36476898]
[255.52870178 90.37179565]
[259.55331421 91.20912170]
[262.39889526 93.33397675]
[277.38479614 92.68329620]
[292.37066650 92.03262329]
[295.99566650 89.53274536]
[299.84152222 88.44323730]
[303.43261719 88.65821838]
[306.37789917 89.92671967]
[308.41125488 91.89340973]
[323.40618896 92.28389740]
[338.40109253 92.67437744]
[352.54571533 84.37608337]
[366.66897583 92.71070099]
[366.24206543 109.10428619]
[351.70416260 116.69253540]
[338.01062012 107.66929626]
[323.01568604 107.27880859]
[308.02078247 106.88832855]
[293.02133179 107.01850128]
[278.03546143 107.66918182]
[263.04959106 108.31985474]
[248.08572388 109.36043549]
[233.15402222 110.79019928]
[218.22232056 112.21997070]
[203.29061890 113.64973450]
[188.35890198 115.07950592]
[173.42720032 116.50926971]
[161.49539185 125.42447662]
[147.02053833 119.03781128]
[132.08883667 120.46757507]
[145.87811279 126.37147522]
[160.62707520 129.10423279]
[172.24900818 138.58741760]
[177.88508606 152.48829651]
[176.14891052 167.38748169]
[167.46755981 179.61999512]
[153.97651672 186.17680359]
[138.99438477 185.44505310]
[126.20652008 177.60473633]
[118.75856018 164.58444214]
[118.48316956 149.58456421]
[114.92276764 135.01322937]
[111.06144714 149.50772095]
[107.20011902 164.00219727]
[103.33879852 178.49668884]
[99.47747040 192.99118042]
[95.61614227 207.48567200]
[103.67140961 218.30058289]
[104.01339722 231.58657837]
[96.74137878 242.47756958]
[84.70238495 247.11389160]
[80.59007263 261.53918457]
[76.47776031 275.96447754]
[72.36545563 290.38973999]
[68.25314331 304.81503296]
[64.14083862 319.24032593]
[60.02852631 333.66561890]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 14]
[2 13]
[3 12]
[17 180]
[18 179]
[19 178]
[20 177]
[21 176]
[22 175]
[23 174]
[26 170]
[27 169]
[28 168]
[29 167]
[30 166]
[31 165]
[33 107]
[34 106]
[35 105]
[36 104]
[37 103]
[38 102]
[40 99]
[41 98]
[42 97]
[43 96]
[44 95]
[45 94]
[46 93]
[47 58]
[48 57]
[49 56]
[50 55]
[63 92]
[64 91]
[65 90]
[66 89]
[70 86]
[71 85]
[72 84]
[73 83]
[113 153]
[114 152]
[116 150]
[117 149]
[118 148]
[119 147]
[120 146]
[121 145]
[125 144]
[126 143]
[127 142]
[132 141]
[133 140]
[134 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
