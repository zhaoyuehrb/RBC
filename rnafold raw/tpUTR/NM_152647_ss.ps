%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 21:12:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAACCAGAAAUGAACUCUAUUCAAGAAUAAUGCAUACAAUUCAGUGGUAUCAGUUUAAUUGUAACAAUAUAUUUAAUUCAAGUCCAAUCCAUGUAAUCAGUAUUAAGAGUGUGUUUUACCAUUCAUCUUUAAAAUCUUCAAAUCAAUAAAUCUCAGUAAGUUAUUCUUAA\
) } def
/len { sequence length } bind def

/coor [
[178.26898193 332.55282593]
[173.99577332 318.17437744]
[169.72254944 303.79592896]
[165.44934082 289.41751099]
[149.64279175 287.18246460]
[136.34033203 278.25238037]
[128.22737122 264.36904907]
[126.96817780 248.28013611]
[132.86476135 233.19540405]
[144.78642273 222.14649963]
[140.25431824 207.84754944]
[126.95524597 201.23919678]
[122.15534973 186.80259705]
[129.17697144 172.89810181]
[124.64485931 158.59915161]
[120.11275482 144.30020142]
[115.58064270 130.00125122]
[98.50933838 130.04592896]
[85.59517670 122.07599640]
[74.16274261 131.78678894]
[62.73031235 141.49758911]
[60.00039291 157.30667114]
[45.86948395 164.90252686]
[31.17761421 158.45826721]
[27.19512749 142.91737366]
[36.97704315 130.20149231]
[53.01951981 130.06515503]
[64.45195007 120.35436249]
[75.88438416 110.64356232]
[73.82134247 96.91353607]
[79.02097321 84.03977203]
[70.16043091 71.93643188]
[61.29988861 59.83309555]
[52.43934631 47.72975540]
[43.57880402 35.62641907]
[34.71826172 23.52307892]
[14.62186623 16.14831352]
[13.13102150 -4.41818762]
[3.62821293 -16.02407455]
[-5.87459564 -27.62996292]
[-15.37740421 -39.23585129]
[-28.99594879 -35.38902664]
[-43.00885773 -37.02483749]
[-55.29939651 -43.86286545]
[-64.02371979 -54.83939743]
[-67.88748169 -68.27277374]
[-66.33777618 -82.12095642]
[-59.64200592 -94.29199219]
[-68.93373108 -106.06755066]
[-78.22545624 -117.84310913]
[-92.61891174 -113.14695740]
[-107.72225952 -113.65766144]
[-121.71328735 -119.29428101]
[-132.91056824 -129.35862732]
[-139.97557068 -142.62162781]
[-142.07263184 -157.47344971]
[-138.96775818 -172.11889648]
[-131.05456543 -184.79432678]
[-140.34628296 -196.56988525]
[-149.63801575 -208.34544373]
[-158.92973328 -220.12101746]
[-173.55230713 -226.16180420]
[-175.36212158 -240.94604492]
[-184.65383911 -252.72160339]
[-193.94557190 -264.49716187]
[-203.23728943 -276.27273560]
[-218.66369629 -281.83673096]
[-221.29162598 -298.02392578]
[-208.41767883 -308.18237305]
[-193.28547668 -301.86187744]
[-191.46173096 -285.56445312]
[-182.17001343 -273.78890991]
[-172.87828064 -262.01333618]
[-163.58656311 -250.23777771]
[-149.62860107 -245.03924561]
[-147.15417480 -229.41273499]
[-137.86245728 -217.63717651]
[-128.57072449 -205.86161804]
[-119.27899933 -194.08605957]
[-105.11077118 -198.83436584]
[-90.14481354 -198.44805908]
[-76.18791962 -192.95445251]
[-64.93167877 -182.99862671]
[-57.74742126 -169.76773071]
[-55.51921082 -154.84944153]
[-58.53506088 -140.04145813]
[-66.44989777 -127.13483429]
[-57.15817261 -115.35927582]
[-47.86644745 -103.58371735]
[-32.35525513 -107.35801697]
[-16.69222832 -103.98594666]
[-4.01672077 -94.09157562]
[3.10817075 -79.61140442]
[3.21381688 -63.41550064]
[-3.77151704 -48.73865891]
[5.73129177 -37.13277054]
[15.23410034 -25.52688408]
[24.73690987 -13.92099571]
[33.65761566 -14.49142361]
[41.95832825 -10.81892490]
[47.70846176 -3.61838627]
[49.50690460 5.55975342]
[46.82159805 14.66253757]
[55.68214035 26.76587486]
[64.54268646 38.86921310]
[73.40322876 50.97255325]
[82.26377106 63.07588959]
[91.12430573 75.17922974]
[113.97308350 73.35918427]
[132.65855408 91.26782990]
[146.27218628 84.96949768]
[159.88581848 78.67115784]
[173.49945068 72.37282562]
[187.11308289 66.07448578]
[193.61523438 59.60857773]
[201.02981567 59.78781128]
[214.75494385 53.73628235]
[226.80857849 41.81377029]
[241.60192871 50.09585953]
[237.73870850 66.60379028]
[220.80647278 67.46140289]
[207.08134460 73.51293182]
[193.41140747 79.68811798]
[179.79777527 85.98645020]
[166.18415833 92.28479004]
[152.57052612 98.58312988]
[138.95689392 104.88146210]
[153.92355347 105.88087463]
[167.84643555 100.29933167]
[182.78273010 101.68025970]
[195.44627380 109.71982574]
[203.05091858 122.64923096]
[203.92352295 137.62382507]
[197.87213135 151.34899902]
[186.22811890 160.80505371]
[171.55329895 163.91149902]
[157.07637024 159.98490906]
[145.98240662 149.88916016]
[140.71217346 135.84484863]
[129.87959290 125.46914673]
[134.41169739 139.76809692]
[138.94381714 154.06704712]
[143.47592163 168.36599731]
[157.22506714 175.68711853]
[161.61756897 190.25285339]
[154.55326843 203.31544495]
[159.08537292 217.61439514]
[173.16053772 219.08152771]
[185.57273865 225.78787231]
[194.45935059 236.68943787]
[198.50120544 250.11558533]
[197.11834717 264.02499390]
[190.55296326 276.31604004]
[179.82778931 285.14428711]
[184.10099792 299.52273560]
[188.37420654 313.90118408]
[192.64741516 328.27960205]
[206.26214600 335.84777832]
[210.39097595 350.49041748]
[203.09199524 363.42333984]
[207.36520386 377.80178833]
[211.63841248 392.18023682]
[215.91162109 406.55868530]
[229.27572632 415.43453979]
[230.52508545 431.42886353]
[218.70132446 442.27218628]
[202.87460327 439.64645386]
[195.18583679 425.56588745]
[201.53318787 410.83190918]
[197.25996399 396.45346069]
[192.98675537 382.07501221]
[188.71354675 367.69656372]
[175.53594971 360.84918213]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 157]
[2 156]
[3 155]
[4 154]
[10 147]
[11 146]
[14 143]
[15 142]
[16 141]
[17 140]
[19 29]
[20 28]
[21 27]
[31 108]
[32 107]
[33 106]
[34 105]
[35 104]
[36 103]
[38 98]
[39 97]
[40 96]
[41 95]
[48 89]
[49 88]
[50 87]
[58 79]
[59 78]
[60 77]
[61 76]
[63 74]
[64 73]
[65 72]
[66 71]
[110 127]
[111 126]
[112 125]
[113 124]
[114 123]
[116 122]
[117 121]
[160 172]
[161 171]
[162 170]
[163 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
