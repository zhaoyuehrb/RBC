%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 01:18:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGCUCCUGCACAGGCCCUGCACAUAGGAUGAGGGCAUCUGCUCCCACUCAGCCUAGCCCAGGGAAAGGCCCAGUGACAGGUGUGGACAGGUGCCAGCCCUGCAAGCCGCCUCUUCUCGGUAGAAGGGAGAAGGACAGAGCUCUCUUCAAUAAAUUCGUCAGGUCAAAGCAGCA\
) } def
/len { sequence length } bind def

/coor [
[83.54895782 719.87109375]
[68.47525024 723.15545654]
[54.02679062 717.74755859]
[44.81402588 705.37304688]
[43.77671814 689.98059082]
[51.24587250 676.48187256]
[64.83810425 669.18426514]
[65.91429138 654.22290039]
[66.99048615 639.26159668]
[68.06668091 624.30023193]
[56.57587814 614.86096191]
[52.80202866 600.29315186]
[58.39527893 586.13092041]
[71.40558624 577.88238525]
[72.48177338 562.92102051]
[73.55796814 547.95971680]
[74.63416290 532.99835205]
[64.72106934 521.94091797]
[65.59934998 506.75268555]
[77.26458740 496.42990112]
[78.34077454 481.46853638]
[62.61579514 474.19699097]
[50.84918213 461.43313599]
[44.85381317 445.10385132]
[45.56857681 427.68829346]
[52.91141891 411.84149170]
[65.78777313 399.98962402]
[82.25363159 393.95861816]
[82.52289581 378.96102905]
[75.01531219 366.09692383]
[82.99909210 352.43786621]
[83.26835632 337.44027710]
[83.53762054 322.44268799]
[83.80688477 307.44509888]
[84.07614899 292.44754028]
[84.34541321 277.44995117]
[81.31147766 270.68304443]
[84.75653839 262.18621826]
[85.29497528 247.19587708]
[85.83341980 232.20553589]
[86.37186432 217.21520996]
[83.45989227 210.39494324]
[87.05691528 201.96130371]
[87.86436462 186.98306274]
[88.67181396 172.00480652]
[78.56182861 161.12713623]
[79.16732025 145.92555237]
[90.64537048 135.39501953]
[91.45281982 120.41677094]
[92.26026917 105.43851471]
[89.71064758 100.81316376]
[89.95331573 95.08744049]
[93.37509918 89.94003296]
[94.71968842 75.00041962]
[96.06427765 60.06080246]
[86.75392914 42.20592880]
[98.48279572 26.85762787]
[99.29023743 11.87937546]
[100.09768677 -3.09887648]
[97.42858124 -9.20673370]
[98.15969086 -14.88507080]
[101.21251678 -18.59736252]
[102.55710602 -33.53697586]
[103.90169525 -48.47658920]
[105.24628448 -63.41620636]
[106.59087372 -78.35581970]
[107.80131531 -93.30690002]
[108.87751007 -108.26824188]
[109.95369720 -123.22959137]
[111.02989197 -138.19093323]
[98.42444611 -146.85406494]
[91.89083862 -160.57299805]
[93.09336090 -175.62025452]
[101.60922241 -187.96270752]
[115.06895447 -194.34245300]
[116.14514923 -209.30380249]
[113.63349915 -218.12176514]
[117.37731934 -224.52328491]
[118.72190857 -239.46289062]
[120.06649780 -254.40251160]
[121.41108704 -269.34213257]
[111.55835724 -281.40701294]
[113.13478088 -296.53875732]
[124.69752502 -305.85748291]
[126.04211426 -320.79708862]
[127.38670349 -335.73669434]
[125.03375244 -344.59832764]
[128.89187622 -350.93161011]
[121.77524567 -365.70608521]
[131.23432922 -379.10229492]
[147.53843689 -377.33932495]
[153.91529846 -362.23077393]
[143.80494690 -349.31906128]
[142.32632446 -334.39212036]
[140.98173523 -319.45248413]
[139.63714600 -304.51287842]
[149.35014343 -293.27929688]
[148.19935608 -278.10925293]
[136.35069275 -267.99752808]
[135.00610352 -253.05792236]
[133.66151428 -238.11830139]
[132.31692505 -223.17869568]
[131.10649109 -208.22761536]
[130.03030396 -193.26626587]
[142.43836975 -185.02580261]
[149.10008240 -171.59161377]
[148.13662720 -156.52714539]
[139.70680237 -143.88456726]
[125.99123383 -137.11474609]
[124.91504669 -122.15339661]
[123.83885193 -107.19205475]
[122.76265717 -92.23071289]
[125.42793274 -85.31031799]
[121.53048706 -77.01123047]
[120.18589783 -62.07161713]
[118.84130859 -47.13199997]
[117.49671936 -32.19238663]
[116.15213013 -17.25277328]
[115.07594299 -2.29142880]
[114.26849365 12.68682289]
[113.46104431 27.66507530]
[120.96936798 34.65613174]
[123.42414093 44.84367371]
[119.77428436 54.90098953]
[111.00389099 61.40539169]
[109.65930176 76.34500885]
[108.31471252 91.28462219]
[107.23851776 106.24596405]
[106.43107605 121.22422028]
[105.62362671 136.20246887]
[115.90309143 147.90589905]
[114.87084961 163.08447266]
[103.65006256 172.81225586]
[102.84262085 187.79049683]
[102.03517151 202.76875305]
[101.36219788 217.75364685]
[100.82375336 232.74398804]
[100.28530884 247.73431396]
[99.74687195 262.72463989]
[99.34299469 277.71920776]
[99.07373047 292.71679688]
[98.80446625 307.71438599]
[98.53520203 322.71197510]
[98.26593781 337.70953369]
[97.99667358 352.70712280]
[105.48500061 366.64398193]
[97.52047729 379.23028564]
[97.25121307 394.22787476]
[109.34519958 398.41494751]
[119.75359344 405.83129883]
[127.63787842 415.86706543]
[132.36640930 427.70184326]
[133.56495667 440.37179565]
[131.14639282 452.84811401]
[125.31681824 464.12057495]
[116.55815125 473.27935791]
[105.58826447 479.58843994]
[93.30212402 482.54473877]
[92.22592926 497.50607300]
[102.29364777 509.39215088]
[100.98910522 524.54974365]
[89.59550476 534.07452393]
[88.51931000 549.03588867]
[87.44312286 563.99725342]
[86.36692810 578.95855713]
[98.06274414 588.98425293]
[101.57147980 603.80120850]
[95.75149536 617.67895508]
[83.02802277 625.37640381]
[81.95182800 640.33776855]
[80.87564087 655.29913330]
[79.79944611 670.26043701]
[92.20729828 679.42828369]
[97.66757965 693.85705566]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 172]
[8 171]
[9 170]
[10 169]
[14 165]
[15 164]
[16 163]
[17 162]
[20 159]
[21 158]
[28 148]
[29 147]
[31 145]
[32 144]
[33 143]
[34 142]
[35 141]
[36 140]
[38 139]
[39 138]
[40 137]
[41 136]
[43 135]
[44 134]
[45 133]
[48 130]
[49 129]
[50 128]
[53 127]
[54 126]
[55 125]
[57 121]
[58 120]
[59 119]
[62 118]
[63 117]
[64 116]
[65 115]
[66 114]
[67 112]
[68 111]
[69 110]
[70 109]
[75 104]
[76 103]
[78 102]
[79 101]
[80 100]
[81 99]
[84 96]
[85 95]
[86 94]
[88 93]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
