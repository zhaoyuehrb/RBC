%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 08:48:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAAGACUGAUACCACCUGCGUGUCCCUUCCUCCCCGAGUCAGGGCGACUUCCACAGCAGCAGAACAAGUGCCUCCUGGACUGUUCACGGCAGACCAGAACGUUUCUGGCCUGGGUUUUGUGGUCAUCUAUUCUAGCAGGGAACACUAAAGGUGGAAAUAAAAGAUUUUCUAUUAUGGAAAUAAAGAGUUGGCAUGAAAGUGGCUACUGAA\
) } def
/len { sequence length } bind def

/coor [
[283.15173340 449.93087769]
[272.34069824 443.34912109]
[262.71823120 435.12170410]
[254.53242493 425.45935059]
[247.99465942 414.60989380]
[243.27398682 402.85177612]
[240.49278259 390.48696899]
[239.72364807 377.83325195]
[240.98739624 365.21594238]
[244.25262451 352.95962524]
[249.43640137 341.37979126]
[256.40637207 330.77465820]
[264.98419189 321.41754150]
[255.88220215 309.49472046]
[246.78019714 297.57189941]
[237.67819214 285.64910889]
[228.57620239 273.72628784]
[219.47419739 261.80346680]
[202.72508240 260.28112793]
[192.04939270 246.85142517]
[194.43595886 229.52120972]
[185.15829468 217.73458862]
[175.88061523 205.94795227]
[166.60293579 194.16131592]
[157.23817444 182.44375610]
[147.78684998 170.79589844]
[138.33554077 159.14804077]
[128.88421631 147.50018311]
[108.15441132 154.99156189]
[86.14270020 153.83810425]
[66.30940247 144.22114563]
[51.77235794 127.65248871]
[37.87201691 133.28990173]
[24.01382256 139.03015137]
[10.19854164 144.87292480]
[-3.61673951 150.71571350]
[-9.32342148 165.45373535]
[-23.81356812 171.76333618]
[-38.49043274 165.90115356]
[-44.64649200 151.34510803]
[-38.62946701 136.73104858]
[-24.00914764 130.72923279]
[-9.45951366 136.90042114]
[4.35576773 131.05764771]
[18.17104912 125.21487427]
[23.10674477 119.71468353]
[32.23460007 119.38956451]
[46.13494492 113.75215149]
[44.43988037 98.09250641]
[47.20494843 82.58598328]
[54.20818329 68.47738647]
[64.88739777 56.89929581]
[57.06887817 44.09809494]
[49.25035858 31.29689217]
[41.43184280 18.49568939]
[33.61332703 5.69448709]
[25.79480934 -7.10671568]
[18.65164375 -12.79869843]
[17.95690346 -20.15604782]
[10.32893658 -33.07170105]
[2.70096946 -45.98735428]
[-17.97613144 -45.47459793]
[-34.02320862 -66.60449982]
[-46.07958984 -75.52883148]
[-58.13597488 -84.45315552]
[-70.19235992 -93.37748718]
[-82.24874115 -102.30181122]
[-91.00743866 -104.89191437]
[-94.41634369 -111.44879150]
[-106.33916473 -120.55079651]
[-115.05851746 -123.27040100]
[-118.36988831 -129.87707520]
[-130.15652466 -139.15475464]
[-146.45610046 -140.95906067]
[-152.79463196 -156.08370972]
[-142.65156555 -168.96975708]
[-126.46121979 -166.36114502]
[-120.87883759 -150.94137573]
[-109.09220886 -141.66369629]
[-97.23715973 -132.47360229]
[-85.31434631 -123.37160492]
[-73.32441711 -114.35819244]
[-61.26803207 -105.43386841]
[-49.21164703 -96.50954437]
[-37.15526199 -87.58521271]
[-25.09888077 -78.66088867]
[-18.61297035 -82.42691803]
[-26.14483070 -95.39884949]
[-13.17278099 -102.93051147]
[-5.64115334 -89.95897675]
[0.84475589 -93.72500610]
[-0.92934173 -108.61972809]
[-2.70343924 -123.51444244]
[-12.01862240 -136.30264282]
[-5.84092426 -149.85569763]
[-7.61502171 -164.75041199]
[-9.38911915 -179.64512634]
[-11.16321659 -194.53984070]
[-12.93731403 -209.43455505]
[-14.71141243 -224.32926941]
[-22.58865738 -239.34211731]
[-10.34316444 -251.06747437]
[4.31386089 -242.54644775]
[0.18330440 -226.10337830]
[1.95740199 -211.20864868]
[3.73149943 -196.31393433]
[5.50559711 -181.41921997]
[7.27969456 -166.52450562]
[9.05379200 -151.62979126]
[18.24208069 -139.90696716]
[12.19127750 -125.28853607]
[13.96537495 -110.39382172]
[15.73947239 -95.49910736]
[26.09276009 -71.28189087]
[15.61662388 -53.61532211]
[23.24459076 -40.69966888]
[30.87255669 -27.78401375]
[38.59601212 -14.92523289]
[46.41452789 -2.12403011]
[54.23304367 10.67717266]
[62.05156326 23.47837448]
[69.87007904 36.27957916]
[77.68859863 49.08078003]
[87.30066681 45.87705994]
[97.33455658 44.47108078]
[107.45697784 44.90953827]
[117.33171082 47.17786789]
[126.63075256 51.20073318]
[135.04524231 56.84450150]
[142.29566956 63.92171860]
[148.14120483 72.19730377]
[152.38769531 81.39637756]
[154.89408875 91.21339417]
[155.57713318 101.32225800]
[154.41412354 111.38719940]
[151.44371033 121.07390594]
[146.76455688 130.06063843]
[140.53207397 138.04885864]
[149.98339844 149.69671631]
[159.43470764 161.34457397]
[168.88603210 172.99243164]
[176.72265625 177.68402100]
[178.38955688 184.88365173]
[187.66723633 196.67027283]
[196.94491577 208.45690918]
[206.22259521 220.24354553]
[219.69108582 220.28630066]
[230.51792908 227.96601868]
[234.88035583 240.29644775]
[231.39700317 252.70146179]
[240.49900818 264.62426758]
[249.60101318 276.54708862]
[258.70300293 288.46990967]
[267.80502319 300.39273071]
[276.90701294 312.31555176]
[294.55969238 304.17233276]
[313.65625000 300.57934570]
[333.04385376 301.74917603]
[351.55319214 307.60696411]
[368.06887817 317.79525757]
[381.59677124 331.69583130]
[391.32388306 348.46704102]
[396.66705322 367.09506226]
[397.30801392 386.45486450]
[393.21237183 405.37838745]
[406.84844971 411.62799072]
[420.48452759 417.87759399]
[434.12057495 424.12716675]
[447.75665283 430.37677002]
[461.39273071 436.62637329]
[476.11886597 430.88903809]
[490.55490112 437.32147217]
[496.13623047 452.10742188]
[489.55151367 466.47467041]
[474.70739746 471.89935303]
[460.41058350 465.16311646]
[455.14312744 450.26245117]
[441.50704956 444.01284790]
[427.87100220 437.76324463]
[414.23492432 431.51364136]
[400.59884644 425.26403809]
[386.96276855 419.01446533]
[382.48684692 425.88922119]
[377.32055664 432.26147461]
[371.51983643 438.06219482]
[365.14758301 443.22848511]
[358.27279663 447.70440674]
[364.52239990 461.34048462]
[370.77200317 474.97656250]
[383.55548096 484.29824829]
[381.82440186 499.09191895]
[394.60787964 508.41357422]
[392.87680054 523.20727539]
[399.12640381 536.84332275]
[405.37600708 550.47937012]
[419.05313110 559.52746582]
[417.78588867 575.87762451]
[402.87789917 582.71014404]
[389.66522217 572.99639893]
[391.73992920 556.72900391]
[385.49032593 543.09289551]
[379.24072266 529.45684814]
[366.90426636 521.11053467]
[368.18832397 505.34152222]
[355.85186768 496.99517822]
[357.13592529 481.22616577]
[350.88632202 467.59008789]
[344.63671875 453.95401001]
[332.40795898 457.15246582]
[319.82180786 458.35537720]
[307.20187378 457.53070068]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 155]
[14 154]
[15 153]
[16 152]
[17 151]
[18 150]
[21 146]
[22 145]
[23 144]
[24 143]
[25 141]
[26 140]
[27 139]
[28 138]
[32 48]
[33 47]
[34 45]
[35 44]
[36 43]
[52 123]
[53 122]
[54 121]
[55 120]
[56 119]
[57 118]
[59 117]
[60 116]
[61 115]
[63 86]
[64 85]
[65 84]
[66 83]
[67 82]
[69 81]
[70 80]
[72 79]
[73 78]
[91 113]
[92 112]
[93 111]
[95 109]
[96 108]
[97 107]
[98 106]
[99 105]
[100 104]
[165 182]
[166 181]
[167 180]
[168 179]
[169 178]
[170 177]
[187 208]
[188 207]
[189 206]
[191 204]
[193 202]
[194 201]
[195 200]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
