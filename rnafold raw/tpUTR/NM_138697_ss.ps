%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 02:29:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGUGGGUCAGCAGGCACGGCUGGCAGCCUUCUCUGCCCUGAGGGUCGAAGGUCGAGCAGGCCGGGGGUGUCCGGGAGGUCUUUGGGCAUCGCGGUCUGGGGUUGGGACGUGUAAGCGCCUGGGAGAGCCUAGACCAGGCUCCGGGCUGCCAAUAAAGAAGUGAAAUGCGUA\
) } def
/len { sequence length } bind def

/coor [
[99.23114014 118.09468079]
[92.44542694 131.47204590]
[85.65970612 144.84942627]
[78.87399292 158.22679138]
[72.08827972 171.60415649]
[72.74565887 187.41171265]
[60.08776474 195.26199341]
[53.42308807 208.70007324]
[46.87999725 222.19778442]
[40.33690262 235.69548035]
[42.05926132 252.00393677]
[28.63955879 261.42962646]
[13.88283920 254.27621460]
[12.96954918 237.90251160]
[26.83920288 229.15238953]
[33.38229370 215.65469360]
[39.92538834 202.15698242]
[40.01395416 194.74076843]
[46.71039200 188.47627258]
[45.56765366 173.62557983]
[58.71090698 164.81845093]
[65.49662018 151.44107056]
[72.28233337 138.06370544]
[79.06805420 124.68633270]
[85.85376740 111.30895996]
[81.64486694 105.10129547]
[73.22705841 92.68595886]
[69.01815796 86.47829437]
[54.07923889 87.83058929]
[39.14031982 89.18288422]
[24.20139885 90.53517914]
[9.26248074 91.88747406]
[-5.67643833 93.23977661]
[-12.17725468 102.01459503]
[-22.23426056 105.66941071]
[-32.42410660 103.21825409]
[-39.41856384 95.71122742]
[-54.39656448 96.52330780]
[-69.37456512 97.33539581]
[-84.35256958 98.14747620]
[-99.84112549 105.04246521]
[-110.75431061 92.06792450]
[-101.30789185 77.98951721]
[-85.16464996 83.16947937]
[-70.18664551 82.35739136]
[-55.20864868 81.54531097]
[-40.23064423 80.73322296]
[-24.88722801 68.99905396]
[-7.02873421 78.30085754]
[7.91018438 76.94855499]
[22.84910393 75.59626007]
[37.78802109 74.24396515]
[52.72694016 72.89167023]
[67.66586304 71.53937531]
[78.54160309 72.59481049]
[87.75579834 76.45561218]
[94.69158173 82.51921082]
[98.90132904 90.06035614]
[107.76187134 77.95701599]
[116.62241364 65.85367584]
[125.48295593 53.75033951]
[127.39161682 38.04468155]
[141.15280151 32.34563065]
[150.01333618 20.24229050]
[158.87387085 8.13895321]
[167.73442078 -3.96438527]
[176.59495544 -16.06772423]
[179.42164612 -30.79897881]
[175.67031860 -45.32232285]
[171.91897583 -59.84566879]
[168.16764832 -74.36901093]
[164.41632080 -88.89235687]
[160.66499329 -103.41570282]
[156.91366577 -117.93904114]
[153.16233826 -132.46238708]
[149.41099548 -146.98573303]
[145.65966797 -161.50907898]
[132.62472534 -170.86160278]
[131.95361328 -186.89060974]
[144.16114807 -197.30001831]
[159.88275146 -194.10461426]
[167.05816650 -179.75564575]
[160.18301392 -165.26040649]
[163.93434143 -150.73706055]
[167.68566895 -136.21371460]
[171.43701172 -121.69037628]
[175.18833923 -107.16703033]
[178.93966675 -92.64368439]
[182.69099426 -78.12033844]
[186.44232178 -63.59699631]
[190.19364929 -49.07365417]
[193.94499207 -34.55030823]
[207.67010498 -28.49878120]
[220.92279053 -35.52490616]
[234.04646301 -42.78915405]
[247.03683472 -50.28915405]
[260.02722168 -57.78915405]
[273.01760864 -65.28915405]
[286.00799561 -72.78915405]
[298.99835205 -80.28915405]
[311.98873901 -87.78915405]
[324.97912598 -95.28915405]
[333.06176758 -108.88993835]
[347.95257568 -108.55287933]
[360.94296265 -116.05287933]
[373.65408325 -124.01697540]
[386.06942749 -132.43478394]
[398.48477173 -140.85258484]
[403.85519409 -148.28524780]
[411.20111084 -149.30792236]
[423.76638794 -157.50021362]
[436.33166504 -165.69248962]
[443.26376343 -180.55447388]
[459.62197876 -181.71237183]
[468.57839966 -167.97503662]
[460.91943359 -153.47425842]
[444.52395630 -153.12719727]
[431.95867920 -144.93492126]
[419.39340210 -136.74263000]
[406.90255737 -128.43725586]
[394.48724365 -120.01943970]
[382.07189941 -111.60163879]
[381.42330933 -108.84067535]
[379.62292480 -106.17523193]
[376.70330811 -104.05246735]
[372.86077881 -102.89871979]
[368.44296265 -103.06249237]
[355.45257568 -95.56249237]
[348.29907227 -82.49816132]
[332.47912598 -82.29877472]
[319.48873901 -74.79877472]
[306.49835205 -67.29877472]
[293.50799561 -59.79877472]
[280.51760864 -52.29877472]
[267.52722168 -44.79877472]
[254.53683472 -37.29877472]
[241.54646301 -29.79877472]
[239.46116638 -25.46722984]
[234.61476135 -22.41653252]
[227.94891357 -22.27222633]
[214.69624329 -15.24610043]
[188.69830322 -7.20718145]
[179.83775330 4.89615679]
[170.97721863 16.99949455]
[162.11666870 29.10283279]
[153.25613403 41.20617294]
[151.98124695 56.04611588]
[137.58630371 62.61088181]
[128.72575378 74.71421814]
[119.86521149 86.81755829]
[111.00466919 98.92089844]
[122.36466217 89.12545776]
[135.77049255 82.39614868]
[150.41265869 79.13931274]
[165.40699768 79.55162048]
[179.84806824 83.60816193]
[192.86384583 91.06399536]
[203.66838074 101.46890259]
[211.60923767 114.19457245]
[216.20692444 128.47257996]
[217.18379211 143.44073486]
[214.48085022 158.19519043]
[208.26133728 171.84501648]
[198.90080261 183.56594849]
[186.96447754 192.65023804]
[173.17314148 198.54930115]
[158.35958862 200.90696716]
[143.41831970 199.58082581]
[129.25157166 194.65098572]
[116.71480560 186.41513062]
[106.56504822 175.37055969]
[99.41518402 162.18423462]
[95.69696808 147.65237427]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 25]
[2 24]
[3 23]
[4 22]
[5 21]
[7 19]
[8 17]
[9 16]
[10 15]
[28 54]
[29 53]
[30 52]
[31 51]
[32 50]
[33 49]
[37 47]
[38 46]
[39 45]
[40 44]
[58 151]
[59 150]
[60 149]
[61 148]
[63 146]
[64 145]
[65 144]
[66 143]
[67 142]
[68 92]
[69 91]
[70 90]
[71 89]
[72 88]
[73 87]
[74 86]
[75 85]
[76 84]
[77 83]
[93 141]
[94 140]
[95 137]
[96 136]
[97 135]
[98 134]
[99 133]
[100 132]
[101 131]
[102 130]
[104 128]
[105 127]
[106 122]
[107 121]
[108 120]
[110 119]
[111 118]
[112 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
