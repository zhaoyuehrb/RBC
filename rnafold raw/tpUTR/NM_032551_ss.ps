%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Sep  9 22:57:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGACCCGGUGGGAAUCCGAGCGGCUCCCUCGGGAGCGGGGACUGCUGGAACAGCGGCUAUUCUUCUGUUAUUAGUAUUUUUCUUACUGUCCAAGAUCAACUGUGGAAAUAUUUUGGUCUCUUGUGACGUUCGGUGCAGUUUCGUUGUGAAGUUUGCUAUUGAUAUUGAAAUUAUGACUUCUGUGUUUCCUGAAAUUAAACAUGUGUCAACACAGGACUUUCUGGAUCAUUCCAGAAAGUGUCAGACGUUUUCU\
CAUUGUCUUGUA\
) } def
/len { sequence length } bind def

/coor [
[223.42489624 343.51400757]
[223.24906921 328.51504517]
[223.07322693 313.51608276]
[222.80949402 298.51840210]
[222.45785522 283.52252197]
[222.10621643 268.52664185]
[219.35585022 264.66061401]
[218.98185730 259.03338623]
[221.92626953 253.17602539]
[221.92626953 238.17602539]
[221.92626953 223.17602539]
[221.92626953 208.17602539]
[221.92626953 193.17602539]
[221.92626953 178.17602539]
[221.92626953 163.17602539]
[221.92626953 148.17602539]
[196.28234863 132.66897583]
[189.96104431 106.74188995]
[175.33155823 103.42857361]
[160.70207214 100.11524963]
[146.07258606 96.80193329]
[131.44309998 93.48860931]
[116.81361389 90.17529297]
[138.59143066 120.47445679]
[104.50595856 167.74948120]
[94.40817261 178.84158325]
[84.31038666 189.93368530]
[74.21259308 201.02578735]
[64.11480713 212.11788940]
[61.14807510 228.24644470]
[45.60840225 233.48577881]
[33.48167038 222.44610596]
[37.24282455 206.48410034]
[53.02270889 202.02009583]
[63.12049484 190.92799377]
[73.21828461 179.83589172]
[83.31607056 168.74378967]
[93.41386414 157.65170288]
[85.19027710 145.10687256]
[70.99104309 149.94233704]
[56.79180908 154.77780151]
[42.59257507 159.61326599]
[28.39333916 164.44873047]
[14.31136227 169.61573792]
[0.35438290 175.11143494]
[-13.60259628 180.60713196]
[-27.55957603 186.10282898]
[-41.51655579 191.59854126]
[-55.47353363 197.09423828]
[-67.99604034 208.52328491]
[-82.44501495 199.65403748]
[-77.92225647 183.31448364]
[-60.96923447 183.13725281]
[-47.01225662 177.64155579]
[-33.05527496 172.14585876]
[-19.09829712 166.65016174]
[-5.14131784 161.15444946]
[8.81566143 155.65875244]
[10.05868053 153.18272400]
[12.34046650 151.04101562]
[15.54162979 149.62556458]
[19.40532684 149.27909851]
[23.55787468 150.24949646]
[37.75711060 145.41403198]
[51.95634460 140.57856750]
[66.15557861 135.74310303]
[80.35481262 130.90763855]
[80.44273376 123.40814972]
[65.44376373 123.23231506]
[51.12454987 127.70000458]
[42.45066833 115.46220398]
[51.40915298 103.43118286]
[65.61959076 108.23335266]
[80.61856079 108.40917969]
[80.70647430 100.90969849]
[66.62450409 95.74269104]
[52.54252243 90.57569122]
[38.46054459 85.40869141]
[24.98864555 93.34857941]
[9.57351017 90.72034454]
[-0.50630397 78.76495361]
[-0.49141642 63.12737656]
[9.61114311 51.19120026]
[25.03125381 48.59232330]
[38.48801422 56.55785370]
[43.62754822 71.32671356]
[57.70952606 76.49371338]
[71.79150391 81.66071320]
[85.87348175 86.82772064]
[95.23564148 75.10807800]
[87.08573151 62.51527023]
[78.93581390 49.92245865]
[70.71223450 37.37762833]
[62.41526794 24.88121605]
[53.97238922 12.48291969]
[45.38475037 0.18444382]
[36.79711533 -12.11403275]
[28.20948219 -24.41250801]
[19.62184715 -36.71098709]
[11.03421116 -49.00946045]
[2.44657588 -61.30793762]
[-10.07200336 -64.31868744]
[-16.97496223 -74.70999908]
[-15.02577019 -86.62649536]
[-23.46865082 -99.02479553]
[-31.91153336 -111.42308807]
[-46.90967941 -118.05541229]
[-48.39572525 -134.38708496]
[-34.84096146 -143.61749268]
[-20.18936157 -136.25117493]
[-19.51323700 -119.86596680]
[-11.07035542 -107.46767426]
[-2.62747359 -95.06937408]
[13.57440948 -88.28845978]
[14.74505234 -69.89557648]
[23.33268738 -57.59709549]
[31.92032242 -45.29862213]
[40.50795746 -33.00014496]
[49.09559250 -20.70166779]
[57.68322754 -8.40319157]
[66.27086639 3.89528489]
[70.70059967 5.59472752]
[74.12477112 10.07587910]
[74.91168213 16.58424950]
[83.20864868 29.08066177]
[89.50460815 32.90146637]
[91.52863312 41.77254486]
[99.67854309 54.36535645]
[107.82845306 66.95816803]
[120.12693024 75.54580688]
[134.75642395 78.85912323]
[149.38591003 82.17243958]
[164.01539612 85.48576355]
[178.64488220 88.79907990]
[193.27436829 92.11240387]
[200.20060730 82.95632172]
[209.79707336 76.79383087]
[220.85649109 74.33792114]
[232.00877380 75.83917999]
[239.55947876 62.87820053]
[247.11016846 49.91722488]
[254.66087341 36.95624924]
[262.21157837 23.99527168]
[269.76226807 11.03429604]
[277.31298828 -1.92667997]
[277.57418823 -17.74572945]
[290.66638184 -24.84811783]
[298.21707153 -37.80909348]
[305.76776123 -50.77006912]
[306.02896118 -66.58911896]
[319.12115479 -73.69150543]
[326.67187500 -86.65248108]
[320.29293823 -100.79776764]
[323.47961426 -115.98409271]
[335.00656128 -126.37202454]
[350.44143677 -127.96717834]
[363.84921265 -120.15619659]
[370.07431030 -105.94254303]
[366.72305298 -90.79167938]
[355.08410645 -80.52940369]
[339.63284302 -79.10178375]
[332.08215332 -66.14080811]
[332.36102295 -51.24881363]
[318.72875977 -43.21936798]
[311.17803955 -30.25839233]
[303.62734985 -17.29741669]
[303.90621948 -2.40542173]
[290.27395630 5.62402201]
[282.72326660 18.58499718]
[275.17254639 31.54597473]
[267.62185669 44.50695038]
[260.07113647 57.46792603]
[252.52044678 70.42890167]
[244.96974182 83.38987732]
[257.99807739 95.50777435]
[263.67886353 114.82221222]
[278.30834961 118.13553619]
[292.93783569 121.44885254]
[307.56732178 124.76217651]
[313.62881470 111.75850677]
[330.96554565 104.81473541]
[345.94906616 104.11164856]
[360.93255615 103.40856934]
[375.91607666 102.70548248]
[390.89959717 102.00239563]
[405.88311768 101.29931641]
[420.86660767 100.59622955]
[424.37487793 98.17189789]
[428.09686279 97.07869720]
[431.59402466 97.22287750]
[434.50183105 98.37966156]
[436.56558228 100.22810364]
[451.56558228 100.22810364]
[466.56558228 100.22810364]
[480.36575317 92.49080658]
[493.09301758 100.22810364]
[508.09301758 100.22810364]
[518.00537109 88.13352203]
[533.38244629 85.29090118]
[546.96356201 93.04244232]
[552.33624268 107.72810364]
[546.96356201 122.41376495]
[533.38244629 130.16531372]
[518.00537109 127.32268524]
[508.09301758 115.22810364]
[493.09301758 115.22810364]
[480.36575317 122.96540833]
[466.56558228 115.22810364]
[451.56558228 115.22810364]
[436.56558228 115.22810364]
[421.56970215 115.57974243]
[406.58618164 116.28282928]
[391.60269165 116.98590851]
[376.61917114 117.68899536]
[361.63565063 118.39208221]
[346.65213013 119.09516144]
[331.66860962 119.79824829]
[327.08355713 134.08030701]
[338.85787964 143.37362671]
[350.63217163 152.66693115]
[362.40649414 161.96025085]
[374.18081665 171.25355530]
[385.95510864 180.54687500]
[397.72943115 189.84017944]
[409.50372314 199.13349915]
[421.27804565 208.42680359]
[433.05233765 217.72012329]
[449.34951782 219.54605103]
[455.66796875 234.67910767]
[445.50781250 247.55168152]
[429.32095337 244.92158508]
[423.75903320 229.49443054]
[411.98474121 220.20111084]
[400.21041870 210.90780640]
[388.43609619 201.61448669]
[376.66180420 192.32118225]
[364.88748169 183.02786255]
[353.11318970 173.73455811]
[341.33886719 164.44123840]
[329.56457520 155.14793396]
[317.79025269 145.85461426]
[304.25399780 139.39166260]
[289.62451172 136.07833862]
[274.99502563 132.76501465]
[260.36553955 129.45170593]
[254.50572205 134.13278198]
[268.47335815 139.60130310]
[270.72119141 154.43193054]
[259.00137329 163.79383850]
[245.03382874 158.32501221]
[242.78608704 143.49494934]
[236.92626953 148.17602539]
[236.92626953 163.17602539]
[236.92626953 178.17602539]
[236.92626953 193.17602539]
[236.92626953 208.17602539]
[236.92626953 223.17602539]
[236.92626953 238.17602539]
[236.92626953 253.17602539]
[237.10209656 268.17498779]
[237.45373535 283.17086792]
[237.80537415 298.16674805]
[241.12557983 306.63839722]
[238.07220459 313.34024048]
[238.24803162 328.33920288]
[238.42385864 343.33816528]
[240.84030151 362.56863403]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 266]
[2 265]
[3 264]
[4 262]
[5 261]
[6 260]
[9 259]
[10 258]
[11 257]
[12 256]
[13 255]
[14 254]
[15 253]
[16 252]
[18 135]
[19 134]
[20 133]
[21 132]
[22 131]
[23 130]
[25 38]
[26 37]
[27 36]
[28 35]
[29 34]
[39 67]
[40 66]
[41 65]
[42 64]
[43 63]
[44 58]
[45 57]
[46 56]
[47 55]
[48 54]
[49 53]
[75 89]
[76 88]
[77 87]
[78 86]
[90 129]
[91 128]
[92 127]
[93 125]
[94 124]
[95 121]
[96 120]
[97 119]
[98 118]
[99 117]
[100 116]
[101 115]
[104 113]
[105 112]
[106 111]
[139 174]
[140 173]
[141 172]
[142 171]
[143 170]
[144 169]
[145 168]
[147 166]
[148 165]
[149 164]
[151 162]
[152 161]
[176 245]
[177 244]
[178 243]
[179 242]
[181 217]
[182 216]
[183 215]
[184 214]
[185 213]
[186 212]
[187 211]
[192 210]
[193 209]
[194 208]
[196 206]
[197 205]
[218 241]
[219 240]
[220 239]
[221 238]
[222 237]
[223 236]
[224 235]
[225 234]
[226 233]
[227 232]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
