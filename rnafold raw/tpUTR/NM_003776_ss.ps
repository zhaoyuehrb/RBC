%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 05:20:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUGCAGGCUGCUAUCCUUAACAUGCUGCCCCUGAGAGUAGGAAUGACCAGGGUUCAAGUCUGCUUUCCACAGAAUCAGGCAUGCUGUUAAUAAAUACUGGUUUAAUCAAAAUGC\
) } def
/len { sequence length } bind def

/coor [
[213.15858459 186.31842041]
[208.05145264 175.84597778]
[204.93969727 164.61285400]
[203.92948914 152.99575806]
[205.05648804 141.38459778]
[190.76594543 136.82601929]
[176.47541809 132.26745605]
[162.18487549 127.70886993]
[147.89434814 123.15029144]
[133.60380554 118.59172058]
[119.31327820 114.03314209]
[107.43770599 122.68506622]
[92.74479675 122.74409485]
[80.80009460 114.18785858]
[76.12814331 100.25739288]
[61.83761215 95.69881439]
[47.54707718 91.14024353]
[33.25654221 86.58166504]
[18.96600914 82.02308655]
[6.47472525 91.03829193]
[-8.75185585 90.97039795]
[-20.87537956 82.05500793]
[-25.37064743 67.88001251]
[-39.66118240 63.32143402]
[-53.95171738 58.76285553]
[-71.77445221 63.14435959]
[-83.14830017 49.85372543]
[-97.55606842 45.68046188]
[-111.96384430 41.50719833]
[-126.37161255 37.33393860]
[-138.54176331 46.96031952]
[-154.04719543 47.56114960]
[-166.92576599 38.90540314]
[-172.22540283 24.32139015]
[-167.90827942 9.41695786]
[-155.63442993 -0.07683298]
[-140.12338257 -0.50942624]
[-127.33946228 8.28551865]
[-122.19834900 22.92616653]
[-107.79058075 27.09942818]
[-93.38280487 31.27268982]
[-78.97503662 35.44595337]
[-68.14851379 29.86944580]
[-56.05191803 33.32642365]
[-49.39313889 44.47232056]
[-35.10260391 49.03089905]
[-20.81207085 53.58947754]
[-8.93894768 44.63587952]
[6.10772514 44.38758469]
[18.56101990 53.14936829]
[23.52458572 67.73255157]
[37.81512070 72.29113007]
[52.10565567 76.84970856]
[66.39618683 81.40827942]
[80.68672180 85.96685791]
[92.56229401 77.31493378]
[107.25520325 77.25590515]
[119.19990540 85.81214142]
[123.87185669 99.74260712]
[138.16238403 104.30118561]
[152.45292664 108.85975647]
[166.74345398 113.41833496]
[181.03399658 117.97691345]
[195.32452393 122.53549194]
[209.61506653 127.09407043]
[219.98353577 111.22866058]
[234.55255127 99.12888336]
[252.02485657 91.86087799]
[270.84802246 90.06106567]
[289.35232544 93.88043213]
[305.89886475 102.97188568]
[319.02474976 116.52178192]
[327.57244873 133.32276917]
[330.79177856 151.88130188]
[345.72558594 153.28892517]
[360.65939331 154.69653320]
[375.59320068 156.10415649]
[390.52700806 157.51176453]
[405.46081543 158.91938782]
[420.39462280 160.32699585]
[426.38217163 146.43440247]
[436.37124634 135.07334900]
[449.38320923 127.35688019]
[464.14331055 124.04098511]
[479.20544434 125.45051575]
[493.09405518 131.44737244]
[504.44839478 141.44406128]
[512.15612793 154.46121216]
[515.46215820 169.22351074]
[514.04254150 184.28471375]
[508.03634644 198.16926575]
[498.03207397 209.51692200]
[485.00976562 217.21594238]
[470.24523926 220.51205444]
[455.18499756 219.08235168]
[441.30447388 213.06687927]
[429.96350098 203.05497742]
[422.27322388 190.02752686]
[418.98699951 175.26080322]
[404.05319214 173.85319519]
[389.11938477 172.44557190]
[374.18557739 171.03796387]
[359.25177002 169.63034058]
[344.31796265 168.22273254]
[329.38415527 166.81510925]
[325.93298340 177.87860107]
[320.51876831 188.13084412]
[313.32177734 197.22677612]
[304.58224487 204.85989380]
[294.59252930 210.77259827]
[283.68713379 214.76486206]
[272.23165894 216.70097351]
[260.61044312 216.51422119]
[249.21371460 214.20912170]
[238.42449951 209.86138916]
[228.60574341 203.61535645]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 65]
[6 64]
[7 63]
[8 62]
[9 61]
[10 60]
[11 59]
[15 55]
[16 54]
[17 53]
[18 52]
[19 51]
[23 47]
[24 46]
[25 45]
[27 42]
[28 41]
[29 40]
[30 39]
[74 105]
[75 104]
[76 103]
[77 102]
[78 101]
[79 100]
[80 99]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
