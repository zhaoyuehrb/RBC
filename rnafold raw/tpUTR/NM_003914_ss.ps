%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 14:42:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUUCUGAAUGGAAGCACUUCCAGAACUUCACCUCCAUAUCAGAAGUGCCAAUAAUCGUCAUAGGCUUCUGCACGUUGGAUCAACUAAUGUUGUUUACAAUAUAGAUGACAUUUUAAAAAUGUAAAUGAAUUUAGUUUCCCUUAGACUUUAGUAGUUUGUAAUAUAGUCCAACAUUUUUUAAACAAUAAACUGCUUGUCUUAUGACCAUGUGUUAGA\
) } def
/len { sequence length } bind def

/coor [
[-79.77783966 246.94682312]
[-95.22470093 246.96467590]
[-104.79272461 258.51687622]
[-114.36074066 270.06906128]
[-123.92876434 281.62124634]
[-133.49678040 293.17343140]
[-143.06480408 304.72561646]
[-152.63282776 316.27780151]
[-162.11735535 327.89862061]
[-171.51791382 339.58749390]
[-180.91847229 351.27633667]
[-190.31901550 362.96520996]
[-199.71957397 374.65408325]
[-191.08105469 387.04571533]
[-186.28488159 401.36959839]
[-185.71986389 416.46453857]
[-189.43180847 431.10687256]
[-197.11981201 444.10961914]
[-208.16064453 454.41867065]
[-221.65924072 461.19836426]
[-236.52137756 463.89907837]
[-251.54222107 462.30187988]
[-265.50408936 456.53625488]
[-277.27517700 447.06954956]
[-285.90124512 434.66925049]
[-290.68304443 420.34057617]
[-291.23287964 405.24505615]
[-287.50622559 390.60644531]
[-279.80517578 377.61145020]
[-268.75399780 367.31347656]
[-255.24858093 360.54733276]
[-240.38374329 357.86157227]
[-225.36451721 359.47384644]
[-211.40844727 365.25350952]
[-202.00788879 353.56466675]
[-192.60733032 341.87579346]
[-183.20677185 330.18692017]
[-173.80622864 318.49804688]
[-172.06472778 311.31954956]
[-164.18501282 306.70977783]
[-154.61698914 295.15759277]
[-145.04896545 283.60540771]
[-135.48094177 272.05322266]
[-125.91292572 260.50103760]
[-116.34490967 248.94883728]
[-106.77688599 237.39665222]
[-107.93127441 235.08691406]
[-108.80098724 232.65563965]
[-123.76206970 231.57574463]
[-138.72314453 230.49586487]
[-145.86557007 243.94596863]
[-157.86515808 253.32307434]
[-172.64289856 257.00250244]
[-187.63845825 254.34678650]
[-200.25378418 245.81604004]
[-208.30317688 232.88827515]
[-210.39204407 217.80329895]
[-206.15844727 203.17466736]
[-196.33592224 191.53689575]
[-182.62626648 184.90628052]
[-167.40473938 184.43164062]
[-153.30859375 190.19517517]
[-142.78004456 201.19834900]
[-137.64324951 215.53477478]
[-122.68217468 216.61466980]
[-107.72109985 217.69454956]
[-93.74195862 205.17803955]
[-74.67301178 208.20480347]
[-62.33770752 199.67016602]
[-50.00240326 191.13551331]
[-37.66709900 182.60086060]
[-25.39361191 173.97755432]
[-13.18257523 165.26602173]
[-0.97154033 156.55450439]
[11.23949528 147.84298706]
[23.45053101 139.13145447]
[27.06821632 132.69126892]
[35.90089035 130.38388062]
[48.23619461 121.84922791]
[51.94631195 115.46184540]
[60.81131744 113.28197479]
[73.26833344 104.92596436]
[85.72534180 96.56996155]
[92.97436523 83.43787384]
[93.40663910 68.44410706]
[93.83890533 53.45033646]
[94.27117920 38.45656586]
[94.70344543 23.46279526]
[84.13425446 12.02033615]
[84.78622437 -3.17932129]
[95.75999451 -13.18491650]
[96.19226837 -28.17868614]
[96.62453461 -43.17245865]
[97.05680847 -58.16622543]
[97.48907471 -73.15999603]
[97.92134094 -88.15377045]
[98.35361481 -103.14753723]
[98.78588104 -118.14130402]
[99.21815491 -133.13507080]
[85.68565369 -143.28651428]
[80.91959381 -159.34478760]
[86.60897064 -174.92276001]
[100.32465363 -183.94694519]
[100.54080963 -198.94538879]
[100.75697327 -213.94383240]
[100.97312927 -228.94227600]
[89.78163147 -240.10139465]
[89.84229279 -255.90556335]
[101.11911774 -266.97845459]
[116.92176819 -266.75070190]
[127.87480927 -255.35743713]
[127.47999573 -239.55809021]
[115.97157288 -228.72610474]
[115.75540924 -213.72767639]
[115.53925323 -198.72923279]
[115.32309723 -183.73078918]
[126.70413208 -176.75675964]
[133.20628357 -164.97592163]
[133.03819275 -151.41265869]
[126.13685608 -139.60971069]
[114.21192169 -132.70280457]
[113.77965546 -117.70903778]
[113.34738159 -102.71527100]
[112.91511536 -87.72149658]
[112.48284149 -72.72772980]
[112.05057526 -57.73395920]
[111.61830902 -42.74018860]
[111.18603516 -27.74641800]
[110.75376892 -12.75264740]
[121.13286591 -2.13144994]
[120.90808105 13.08052254]
[109.69721985 23.89506531]
[109.26494598 38.88883591]
[108.83267975 53.88260651]
[108.40040588 68.87637329]
[107.96813965 83.87014771]
[110.76340485 69.13289642]
[121.99488068 59.19036484]
[136.96237183 58.20333481]
[149.40222168 66.58486176]
[154.10856628 80.82741547]
[149.11186218 94.97071838]
[136.50315857 103.09602356]
[121.55783844 101.80252075]
[136.10995483 105.44066620]
[150.66206360 109.07881927]
[165.21417236 112.71696472]
[174.19639587 106.59445190]
[184.84596252 106.42652130]
[193.64622498 112.02734375]
[197.82359314 121.34572601]
[212.26480103 125.40172577]
[226.70602417 129.45771790]
[241.14724731 133.51373291]
[255.58847046 137.56973267]
[270.02969360 141.62573242]
[284.47091675 145.68173218]
[298.91213989 149.73773193]
[313.35336304 153.79373169]
[327.79458618 157.84973145]
[335.09884644 144.66851807]
[345.24645996 133.52749634]
[357.69021606 125.02748871]
[371.75897217 119.62687683]
[386.69406128 117.61692810]
[401.69003296 119.10601807]
[415.93820190 124.01385498]
[428.67013550 132.07575989]
[439.19924927 142.85696411]
[446.95773315 155.77606201]
[451.52713013 170.13632202]
[452.66107178 185.16333008]
[450.29840088 200.04669189]
[444.56649780 213.98376465]
[435.77450562 226.22294617]
[424.39654541 236.10418701]
[411.04623413 243.09460449]
[396.44354248 246.81721497]
[381.37594604 247.07127380]
[366.65603638 243.84306335]
[353.07766724 237.30668640]
[341.37307739 227.81463623]
[332.17346191 215.87881470]
[325.97497559 202.14289856]
[323.11187744 187.34764099]
[323.73858643 172.29095459]
[309.29736328 168.23495483]
[294.85614014 164.17895508]
[280.41491699 160.12295532]
[265.97369385 156.06695557]
[251.53247070 152.01094055]
[237.09124756 147.95494080]
[222.65002441 143.89894104]
[208.20880127 139.84294128]
[193.76757812 135.78694153]
[175.42675781 141.92024231]
[161.57601929 127.26907349]
[147.02391052 123.63092804]
[132.47180176 119.99277496]
[117.91969299 116.35462952]
[106.97573090 118.50057220]
[98.32395172 115.19096375]
[94.08135223 109.02696991]
[81.62433624 117.38298035]
[69.16732788 125.73898315]
[56.77084732 134.18453979]
[44.43553925 142.71917725]
[32.16205215 151.34249878]
[19.95101738 160.05401611]
[7.73998165 168.76553345]
[-4.47105360 177.47706604]
[-16.68208885 186.18858337]
[-21.84720230 193.71598816]
[-29.13244820 194.93615723]
[-41.46775436 203.47080994]
[-53.80305862 212.00546265]
[-66.13835907 220.54011536]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 46]
[3 45]
[4 44]
[5 43]
[6 42]
[7 41]
[8 40]
[9 38]
[10 37]
[11 36]
[12 35]
[13 34]
[48 66]
[49 65]
[50 64]
[68 217]
[69 216]
[70 215]
[71 214]
[72 212]
[73 211]
[74 210]
[75 209]
[76 208]
[78 207]
[79 206]
[81 205]
[82 204]
[83 203]
[84 136]
[85 135]
[86 134]
[87 133]
[88 132]
[91 129]
[92 128]
[93 127]
[94 126]
[95 125]
[96 124]
[97 123]
[98 122]
[99 121]
[103 116]
[104 115]
[105 114]
[106 113]
[144 200]
[145 199]
[146 198]
[147 197]
[151 195]
[152 194]
[153 193]
[154 192]
[155 191]
[156 190]
[157 189]
[158 188]
[159 187]
[160 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
