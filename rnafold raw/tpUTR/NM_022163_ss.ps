%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 05:20:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGGCCGAGCUGCCUGUGGACGGUGCUCAGACAAGUCUGGGAUUAGAGCCUCAAGGACAUUGUGUGAUUGCCUCACAUUUGCAGGUAAUAUCAAGCAGCAAACUAAAUUCUGAGAAAUAAACGAGUCUAUUACUG\
) } def
/len { sequence length } bind def

/coor [
[107.66201782 203.23982239]
[105.58966827 188.38366699]
[103.51732635 173.52751160]
[101.44498444 158.67134094]
[99.37263489 143.81518555]
[97.12884521 128.98396301]
[94.71390533 114.17963409]
[86.67065430 101.51843262]
[70.91291809 100.10270691]
[64.78557587 86.52680206]
[52.41061783 78.04975891]
[40.03565598 69.57271576]
[27.66069221 61.09566498]
[7.56911182 60.54540253]
[-0.19945765 42.89590454]
[-12.95271492 34.99942398]
[-25.70597076 27.10294151]
[-38.45922852 19.20645905]
[-51.21248627 11.30997658]
[-57.94311523 10.71270657]
[-62.60944366 7.27398157]
[-64.36051178 2.74273252]
[-76.73547363 -5.73431349]
[-89.11043549 -14.21135998]
[-101.48539734 -22.68840599]
[-117.24313354 -24.10413361]
[-123.37047577 -37.68003082]
[-135.74543762 -46.15707779]
[-148.12039185 -54.63412476]
[-163.87812805 -56.04985046]
[-170.00547791 -69.62574768]
[-182.38043213 -78.10279083]
[-194.75540161 -86.57984161]
[-207.13035583 -95.05688477]
[-219.60240173 -103.39044189]
[-232.16986084 -111.57939148]
[-244.73731995 -119.76834106]
[-257.30477905 -127.95729065]
[-272.58013916 -124.90740204]
[-285.20867920 -133.39118958]
[-288.02212524 -147.97268677]
[-300.58959961 -156.16163635]
[-315.03598022 -150.49754333]
[-330.04406738 -154.43913269]
[-339.84301758 -166.47077942]
[-340.66485596 -181.96607971]
[-332.19363403 -194.96675110]
[-317.68667603 -200.47380066]
[-302.72219849 -196.36962891]
[-293.05435181 -184.23239136]
[-292.40063477 -168.72909546]
[-279.83319092 -160.54014587]
[-265.35769653 -163.85618591]
[-252.49584961 -155.73045349]
[-249.11584473 -140.52474976]
[-236.54838562 -132.33580017]
[-223.98091125 -124.14685059]
[-211.41345215 -115.95790100]
[-204.02578735 -114.93266296]
[-198.65330505 -107.43184662]
[-186.27835083 -98.95480347]
[-173.90338135 -90.47775269]
[-161.52842712 -82.00070953]
[-146.65582275 -81.19131470]
[-139.64335632 -67.00908661]
[-127.26838684 -58.53203964]
[-114.89342499 -50.05499268]
[-100.02082825 -49.24560165]
[-93.00835419 -35.06336975]
[-80.63339233 -26.58632278]
[-68.25843048 -18.10927582]
[-55.88346481 -9.63222980]
[-43.31600189 -1.44328046]
[-30.56274605 6.45320177]
[-17.80949020 14.34968472]
[-5.05623245 22.24616623]
[7.69702482 30.14264870]
[17.50186348 26.89798164]
[27.67386627 29.69092369]
[34.73684311 37.82046890]
[36.13774109 48.72070312]
[48.51270294 57.19775009]
[60.88766479 65.67479706]
[73.26262665 74.15184021]
[88.13522339 74.96123505]
[95.14769745 89.14347076]
[88.35176086 75.77128601]
[84.43521881 61.29162216]
[87.79541016 46.67283249]
[97.64128113 35.35651779]
[111.65486908 30.00681305]
[126.53704834 31.88316154]
[138.78421021 40.54382706]
[145.51307678 53.94988251]
[145.13896179 68.94721222]
[131.36784363 74.89332581]
[146.30384827 76.27735138]
[161.23986816 77.66137695]
[170.16496277 75.32293701]
[176.50350952 79.25376892]
[191.40357971 80.98241425]
[203.63514709 70.97419739]
[219.35250854 72.62944794]
[229.23085022 84.96614075]
[227.40951538 100.66513062]
[214.96907043 110.41249084]
[199.29020691 108.42527771]
[189.67492676 95.88247681]
[174.77487183 94.15382385]
[159.85583496 92.59738922]
[144.91983032 91.21336365]
[129.98381042 89.82933807]
[124.86741638 95.31317902]
[137.31146240 103.68847656]
[152.05775452 106.43567657]
[159.66235352 119.36509705]
[154.89733887 133.58813477]
[141.03849792 139.32682800]
[127.61341095 132.63600159]
[123.85150909 118.11508942]
[114.63462830 106.28085327]
[109.51823425 111.76469421]
[111.93317413 126.56902313]
[116.44006348 134.61972046]
[114.22879028 141.74284363]
[116.30113983 156.59899902]
[118.37348175 171.45515442]
[120.44583130 186.31130981]
[122.51817322 201.16746521]
[135.86622620 209.31384277]
[140.80603027 224.15071106]
[135.00514221 238.67254639]
[121.20257568 246.02258301]
[105.91548157 242.73037720]
[96.36195374 230.35038757]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 129]
[2 128]
[3 127]
[4 126]
[5 125]
[6 123]
[7 122]
[8 86]
[10 84]
[11 83]
[12 82]
[13 81]
[15 77]
[16 76]
[17 75]
[18 74]
[19 73]
[22 72]
[23 71]
[24 70]
[25 69]
[27 67]
[28 66]
[29 65]
[31 63]
[32 62]
[33 61]
[34 60]
[35 58]
[36 57]
[37 56]
[38 55]
[41 52]
[42 51]
[96 112]
[97 111]
[98 110]
[100 109]
[101 108]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
