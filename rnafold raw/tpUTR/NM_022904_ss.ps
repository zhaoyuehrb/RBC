%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 20:38:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGCCCAUCCUGCCUCAUCACACGUGGUCUGGGAGCAGAGAGAUAGCCAUCUUAGGGGGGGUGUCUGACUUUGCCUUAGCCCUACUUGGCCUACAGUGGGGAGUGGAGCUGCUGGUCCCAACCACUCUGGCAGUAUGAAGUUGCCCAGUAAAAUCUUGAUUUCAGUGAA\
) } def
/len { sequence length } bind def

/coor [
[295.99392700 526.69067383]
[289.34414673 513.24517822]
[276.76647949 505.26702881]
[277.58404541 489.46694946]
[270.93426514 476.02148438]
[255.83322144 467.11325073]
[257.12036133 448.76174927]
[250.22471619 435.44073486]
[243.32905579 422.11968994]
[230.60694885 414.37390137]
[231.13412476 398.56149292]
[224.23846436 385.24044800]
[217.34280396 371.91943359]
[210.44715881 358.59838867]
[203.55149841 345.27734375]
[194.41607666 346.35211182]
[185.31596375 344.85800171]
[176.96130371 340.89846802]
[170.00764465 334.76977539]
[165.00462341 326.93908691]
[162.35240173 318.00857544]
[162.26979065 308.66943359]
[164.77619934 299.64813232]
[169.68914795 291.64999390]
[176.63746643 285.30410767]
[171.24908447 271.30535889]
[165.86070251 257.30657959]
[160.47232056 243.30781555]
[155.08393860 229.30905151]
[149.72616577 224.17669678]
[149.72775269 215.00331116]
[144.59745789 200.90792847]
[139.46714783 186.81253052]
[134.33685303 172.71714783]
[129.20654297 158.62174988]
[117.58287811 149.30834961]
[120.13362885 133.69410706]
[115.00332642 119.59872437]
[109.87302399 105.50333405]
[101.78252411 122.25354004]
[73.82877350 120.66516113]
[59.05665970 118.06043243]
[44.28454590 115.45571136]
[29.51242828 112.85099030]
[14.74031162 110.24626923]
[-0.47639385 116.36050415]
[-13.21108437 106.02804565]
[-10.36340237 89.87803650]
[5.13720131 84.52422333]
[17.34503365 95.47415161]
[32.11714935 98.07887268]
[46.88926697 100.68359375]
[61.66138458 103.28831482]
[76.43350220 105.89304352]
[83.81385803 92.83431244]
[73.96257782 81.52271271]
[64.11129761 70.21111298]
[49.21325302 64.88580322]
[46.68934250 50.20659637]
[36.83806229 38.89499664]
[26.98678207 27.58339691]
[17.13550186 16.27179718]
[7.28422070 4.96019888]
[-8.55737877 2.42577863]
[-16.32721710 -11.61021709]
[-10.06493855 -26.38057327]
[5.42557192 -30.55473709]
[18.26132011 -20.93064690]
[18.59581947 -4.89108181]
[28.44709969 6.42051744]
[38.29838181 17.73211670]
[48.14966202 29.04371643]
[58.00094223 40.35531616]
[72.19435120 44.87154770]
[75.42289734 60.35983658]
[85.27417755 71.67143250]
[95.12545776 82.98303223]
[109.87302399 80.24272919]
[115.00332642 66.14733887]
[120.13362885 52.05194855]
[125.26393127 37.95655823]
[122.71318054 22.34232712]
[134.33685303 13.02891636]
[139.46714783 -1.06647325]
[144.59745789 -15.16186237]
[149.72775269 -29.25725174]
[154.85806274 -43.35264206]
[159.98835754 -57.44803238]
[155.25028992 -69.47116089]
[159.84179688 -81.12067413]
[170.78472900 -86.33183289]
[176.17309570 -100.33059692]
[169.52993774 -114.67088318]
[175.05097961 -129.47944641]
[189.46069336 -135.97062683]
[204.21006775 -130.29333496]
[210.54853821 -115.81578827]
[204.71562195 -101.12726593]
[190.17185974 -94.94221497]
[184.78347778 -80.94345093]
[188.45713806 -63.79986191]
[174.08375549 -52.31772995]
[168.95344543 -38.22233963]
[163.82315063 -24.12694931]
[158.69284058 -10.03155994]
[153.56254578 4.06382895]
[148.43223572 18.15921783]
[151.34994507 32.76525497]
[139.35931396 43.08686066]
[134.22901917 57.18225098]
[129.09870911 71.27764130]
[123.96841431 85.37303162]
[123.96841431 100.37303162]
[129.09870911 114.46842194]
[134.22901917 128.56381226]
[146.21963501 138.88542175]
[143.30194092 153.49145508]
[148.43223572 167.58683777]
[153.56254578 181.68223572]
[158.69284058 195.77761841]
[163.82315063 209.87301636]
[169.08270264 223.92068481]
[174.47108459 237.91943359]
[179.85946655 251.91819763]
[185.24784851 265.91696167]
[190.63623047 279.91574097]
[211.58853149 283.90286255]
[225.85260010 299.57946777]
[227.82438660 320.54827881]
[216.87252808 338.38171387]
[223.76818848 351.70272827]
[230.66383362 365.02377319]
[237.55949402 378.34478760]
[244.45515442 391.66583252]
[257.67050171 400.36441040]
[256.65008545 415.22402954]
[263.54574585 428.54507446]
[270.44140625 441.86608887]
[282.49612427 446.52322388]
[287.95718384 457.79132080]
[284.37973022 469.37170410]
[291.02951050 482.81716919]
[304.08282471 491.75708008]
[302.78961182 506.59542847]
[309.43939209 520.04089355]
[324.08886719 516.52807617]
[339.15277100 516.36364746]
[353.87545776 519.55590820]
[367.51843262 525.94470215]
[379.39739990 535.20959473]
[388.91650391 546.88580322]
[395.59826660 560.38775635]
[399.10754395 575.03808594]
[399.26828003 590.10198975]
[396.07247925 604.82391357]
[389.68035889 618.46533203]
[380.41262817 630.34210205]
[368.73406982 639.85833740]
[355.23056030 646.53686523]
[340.57934570 650.04254150]
[325.51538086 650.19964600]
[310.79425049 647.00030518]
[297.15435791 640.60485840]
[285.27987671 631.33422852]
[275.76644897 619.65338135]
[269.09121704 606.14825439]
[265.58905029 591.49621582]
[265.43560791 576.43218994]
[268.63854980 561.71185303]
[275.03726196 548.07348633]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 145]
[2 144]
[4 142]
[5 141]
[7 138]
[8 137]
[9 136]
[11 134]
[12 133]
[13 132]
[14 131]
[15 130]
[25 126]
[26 125]
[27 124]
[28 123]
[29 122]
[31 121]
[32 120]
[33 119]
[34 118]
[35 117]
[37 115]
[38 114]
[39 113]
[41 54]
[42 53]
[43 52]
[44 51]
[45 50]
[55 77]
[56 76]
[57 75]
[59 73]
[60 72]
[61 71]
[62 70]
[63 69]
[78 112]
[79 111]
[80 110]
[81 109]
[83 107]
[84 106]
[85 105]
[86 104]
[87 103]
[88 102]
[91 100]
[92 99]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
