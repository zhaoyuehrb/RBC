%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 03:57:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCUCGGCCUUGCACCGGGACGCCGAGUUUGGGACACCGAACACUGGGCAAAAGAGAAUCCCCUGCCUUCCUUUGUCGUCCUCGCCUUCCCCAGCCAGUUCGUACCUAUUGAAAAGCAGCGUUAGCAGCCUUCCUAAACUCAGAGUUUUAAUAAAGGUGUGAGGAGGCUGGGGCCAGUUGACACCA\
) } def
/len { sequence length } bind def

/coor [
[233.92156982 610.22290039]
[231.17982483 595.47558594]
[228.43807983 580.72833252]
[225.69633484 565.98101807]
[222.95457458 551.23370361]
[220.21282959 536.48638916]
[217.47108459 521.73913574]
[214.72933960 506.99182129]
[211.98759460 492.24450684]
[209.24583435 477.49722290]
[206.50408936 462.74990845]
[203.76234436 448.00262451]
[200.65184021 433.32867432]
[197.17454529 418.73727417]
[193.69723511 404.14590454]
[190.21994019 389.55453491]
[186.74263000 374.96313477]
[182.53851318 360.56436157]
[177.61814880 346.39431763]
[172.69776917 332.22427368]
[167.77738953 318.05422974]
[162.85702515 303.88421631]
[151.37297058 294.39916992]
[154.15536499 278.82455444]
[142.67131042 269.33950806]
[145.45370483 253.76489258]
[140.53332520 239.59484863]
[135.61296082 225.42481995]
[130.69258118 211.25477600]
[125.77220917 197.08474731]
[120.85183716 182.91470337]
[115.93146515 168.74467468]
[111.01109314 154.57463074]
[106.09072113 140.40460205]
[101.17034149 126.23456573]
[83.88317108 122.98993683]
[71.47269440 108.92997742]
[70.24294281 89.04892731]
[82.13123322 71.63510895]
[71.70334625 60.85275650]
[61.27545929 50.07040024]
[50.84757233 39.28804779]
[40.41968536 28.50569153]
[20.81569099 23.86654663]
[16.89700699 4.94339228]
[6.11465120 -5.48449373]
[-4.66770411 -15.91238022]
[-15.45005894 -26.34026718]
[-26.23241425 -36.76815414]
[-41.44265747 -31.01680565]
[-57.58100891 -32.46430969]
[-71.42526245 -40.77077103]
[-80.23345184 -54.23191452]
[-82.28684235 -70.12853241]
[-77.22515106 -85.27573395]
[-88.18025208 -95.52198792]
[-99.13534546 -105.76824951]
[-111.76406097 -97.53544617]
[-125.99626923 -92.56478119]
[-141.00454712 -91.14524841]
[-155.91632080 -93.35937500]
[-169.86465454 -99.07843781]
[-182.03858948 -107.96993256]
[-191.73036194 -119.51692200]
[-198.37649536 -133.04808044]
[-201.59060669 -147.77671814]
[-201.18582153 -162.84654236]
[-197.18568420 -177.38140869]
[-189.82273865 -190.53628540]
[-179.52507019 -201.54634094]
[-166.89137268 -209.77148438]
[-152.65614319 -214.73352051]
[-137.64700317 -216.14395142]
[-122.73657990 -213.92079163]
[-108.79172516 -208.19326782]
[-96.62317657 -199.29440308]
[-86.93840790 -187.74153137]
[-80.30047607 -174.20634460]
[-77.09529114 -159.47575378]
[-77.50921631 -144.40618896]
[-81.51817322 -129.87374878]
[-88.88908386 -116.72335052]
[-77.93399048 -106.47708893]
[-66.97888947 -96.23082733]
[-54.29682541 -101.88066864]
[-40.37522507 -102.26766968]
[-27.31785583 -97.30029297]
[-17.11049843 -87.69860077]
[-11.31896305 -74.89011383]
[-10.84893990 -60.79761124]
[-15.80452824 -47.55050659]
[-5.02217293 -37.12262344]
[5.76018238 -26.69473648]
[16.54253769 -16.26684952]
[27.32489395 -5.83896255]
[37.50948334 -6.92723656]
[46.80187988 -2.11964178]
[52.01188660 7.20588636]
[51.20204163 18.07780457]
[61.62992477 28.86016083]
[72.05781555 39.64251709]
[82.48570251 50.42486954]
[92.91358948 61.20722580]
[88.93158722 46.74542236]
[78.88125610 35.61030960]
[74.51449585 21.26000023]
[76.65885925 6.41406870]
[84.90797424 -6.11398554]
[97.69851685 -13.94993114]
[112.60650635 -15.60875320]
[126.80669403 -10.77608299]
[137.60795593 -0.36777532]
[142.96330261 13.64365864]
[141.85781860 28.60286713]
[134.50103760 41.67488480]
[122.28639221 50.38270187]
[115.28099060 63.64634705]
[127.78773499 55.36497116]
[135.02238464 41.29477692]
[149.90588379 40.71938705]
[162.41262817 32.43801117]
[169.23890686 17.52714157]
[185.58848572 16.25302315]
[194.64231873 29.92635918]
[187.08659363 44.48119354]
[170.69400024 44.94475937]
[158.18725586 53.22613525]
[151.84716797 66.70399475]
[136.06912231 67.87171936]
[123.56236267 76.15309906]
[130.40690613 93.45703125]
[126.76662445 110.30495453]
[115.34037781 121.31418610]
[120.26075745 135.48422241]
[125.18112946 149.65426636]
[130.10150146 163.82429504]
[135.02186584 177.99433899]
[139.94224548 192.16436768]
[144.86262512 206.33441162]
[149.78298950 220.50444031]
[154.70336914 234.67448425]
[159.62373352 248.84451294]
[171.45973206 259.34307861]
[168.32539368 273.90417480]
[180.16139221 284.40274048]
[177.02705383 298.96383667]
[181.94743347 313.13388062]
[186.86779785 327.30389404]
[191.78817749 341.47393799]
[196.70855713 355.64398193]
[204.32089233 342.71911621]
[218.80335999 338.81295776]
[231.88255310 346.15698242]
[236.08670044 360.55578613]
[229.01408386 373.78372192]
[214.70510864 378.28405762]
[201.33401489 371.48583984]
[204.81130981 386.07720947]
[208.28862000 400.66860962]
[211.76591492 415.25997925]
[215.24322510 429.85137939]
[218.86012268 433.66995239]
[220.47535706 438.05718994]
[220.20942688 442.15026855]
[218.50964355 445.26086426]
[221.25138855 460.00817871]
[223.99313354 474.75546265]
[226.73489380 489.50277710]
[229.47663879 504.25006104]
[232.21838379 518.99737549]
[234.96012878 533.74468994]
[237.70187378 548.49194336]
[240.44363403 563.23925781]
[243.18537903 577.98657227]
[245.92712402 592.73382568]
[248.66886902 607.48114014]
[263.41265869 611.42871094]
[274.97799683 621.38891602]
[281.06854248 635.38421631]
[280.47503662 650.63580322]
[273.31530762 664.11541748]
[261.01092529 673.14678955]
[246.00494385 675.93658447]
[231.27679443 671.93103027]
[219.75079346 661.92535400]
[213.71539307 647.90618896]
[214.36897278 632.65704346]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 176]
[2 175]
[3 174]
[4 173]
[5 172]
[6 171]
[7 170]
[8 169]
[9 168]
[10 167]
[11 166]
[12 165]
[13 161]
[14 160]
[15 159]
[16 158]
[17 157]
[18 150]
[19 149]
[20 148]
[21 147]
[22 146]
[24 144]
[26 142]
[27 141]
[28 140]
[29 139]
[30 138]
[31 137]
[32 136]
[33 135]
[34 134]
[35 133]
[39 103]
[40 102]
[41 101]
[42 100]
[43 99]
[45 95]
[46 94]
[47 93]
[48 92]
[49 91]
[55 84]
[56 83]
[57 82]
[117 130]
[118 129]
[120 127]
[121 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
