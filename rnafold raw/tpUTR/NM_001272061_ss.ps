%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 06:27:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGAACUGCAGCGAUCUUACUGGCCAAGCCAGAGCGCCUCCUCUCAGAUUCCUUCUCGACACAGCACCCUAGGCGGCUUCUUCCUGUCAGUCGGAGGUGGCAUGCAAGAUGAAGCUCUCUUUGCUCUUCCUGCUUUCAUUUUGUGCUUUUCCUUGUGUUUUCAUGUUUUGGGUAUCAGUGUUACAUUAAAGUUGCAAAAUUAA\
) } def
/len { sequence length } bind def

/coor [
[15.18406868 779.70867920]
[2.28276563 771.71362305]
[-6.85607386 759.59558105]
[-10.99649620 744.99346924]
[-9.57854462 729.88214111]
[-2.79398394 716.30511475]
[8.43962860 706.09875488]
[22.60304070 700.64324951]
[22.60304070 685.64324951]
[22.60304070 670.64324951]
[22.60304070 655.64324951]
[22.60304070 640.64324951]
[22.60304070 625.64324951]
[15.73595619 622.62780762]
[9.70498562 636.36193848]
[8.21309662 651.28759766]
[-6.44307470 654.48083496]
[-14.00885010 641.52862549]
[-4.02918339 630.33099365]
[2.00178719 616.59680176]
[-4.86529732 613.58135986]
[-15.90934658 623.73162842]
[-26.95339584 633.88195801]
[-37.99744415 644.03228760]
[-49.04149246 654.18261719]
[-56.61188507 669.35247803]
[-73.28462219 666.27740479]
[-74.94517517 649.40496826]
[-59.19181442 643.13854980]
[-48.14776230 632.98822021]
[-37.10371399 622.83795166]
[-26.05966568 612.68762207]
[-15.01561642 602.53729248]
[-7.74905729 589.41491699]
[-5.00610733 574.66784668]
[-2.26315761 559.92077637]
[0.47979245 545.17364502]
[3.22274232 530.42657471]
[-8.86676407 521.69110107]
[-15.99391747 508.51864624]
[-16.69797707 493.49649048]
[-10.78579330 479.60165405]
[0.61927325 469.61108398]
[15.29038906 465.54663086]
[18.03333855 450.79956055]
[20.77628899 436.05249023]
[23.51923943 421.30541992]
[26.26218987 406.55834961]
[29.00513840 391.81124878]
[17.06415558 385.57107544]
[7.35270929 376.20794678]
[0.66406941 364.47351074]
[-2.45170665 351.31369019]
[-1.73299968 337.79232788]
[2.77143049 325.00524902]
[10.70562935 313.99142456]
[21.43455887 305.64859009]
[34.09491730 300.66009521]
[47.66460037 299.43878174]
[50.85818481 284.78271484]
[54.05176926 270.12661743]
[57.24535370 255.47052002]
[60.43893814 240.81442261]
[63.63252258 226.15834045]
[66.82611084 211.50224304]
[56.61605072 204.05213928]
[49.95894623 193.25326538]
[47.87450027 180.69238281]
[50.70745468 168.23095703]
[58.07115936 157.72929382]
[68.89990234 150.76879883]
[81.60305023 148.41392517]
[85.24427032 133.86259460]
[88.88549042 119.31124878]
[92.52670288 104.75991058]
[74.15852356 103.38274384]
[58.75670624 86.93402863]
[52.93690872 73.10905457]
[47.11711121 59.28407669]
[34.63162994 49.56690979]
[36.82482147 34.83465958]
[31.00502586 21.00968170]
[25.18522835 7.18470621]
[19.36543083 -6.64026976]
[13.54563522 -20.46524620]
[-1.59338510 -23.86960983]
[-11.81476879 -35.54449463]
[-13.18818474 -51.00067139]
[-5.18552685 -64.29492188]
[9.11602020 -70.31533813]
[24.21721840 -66.74694061]
[34.31135178 -54.96186066]
[35.51701355 -39.49169540]
[27.37061119 -26.28504181]
[33.19040680 -12.46006680]
[39.01020432 1.36490965]
[44.83000183 15.18988609]
[50.64979935 29.01486206]
[62.71900558 37.74317551]
[60.94208527 53.46427917]
[66.76188660 67.28926086]
[72.58168030 81.11423492]
[80.00234222 82.20227814]
[94.84365082 84.37835693]
[102.26431274 85.46640015]
[111.80795288 73.89406586]
[121.35158539 62.32172394]
[130.89521790 50.74938965]
[140.43885803 39.17705154]
[149.98249817 27.60471153]
[159.52613831 16.03237534]
[169.06976318 4.46003723]
[178.61340332 -7.11230040]
[188.15704346 -18.68463898]
[197.61172485 -30.32976341]
[206.97691345 -42.04698944]
[199.06578064 -54.97718048]
[196.05717468 -69.83396912]
[198.31440735 -84.82331848]
[205.56489563 -98.13520813]
[216.93310547 -108.16213989]
[231.04627991 -113.69333649]
[246.20018005 -114.06085968]
[260.56491089 -109.22034454]
[272.40582275 -99.75629425]
[280.29312134 -86.81154633]
[283.27432251 -71.94924164]
[280.98950195 -56.96406937]
[273.71447754 -43.66557312]
[262.32781982 -33.65959930]
[248.20446777 -28.15442848]
[233.04991150 -27.81482887]
[218.69413757 -32.68181229]
[209.32894897 -20.96458435]
[207.60763550 -13.77348614]
[199.72938538 -9.14100170]
[190.18574524 2.43133593]
[180.64210510 14.00367355]
[171.09846497 25.57601166]
[161.55484009 37.14834976]
[152.01119995 48.72068787]
[142.46755981 60.29302597]
[132.92391968 71.86536407]
[123.38028717 83.43769836]
[113.83664703 95.01004028]
[107.07804871 108.40113068]
[103.43682861 122.95246887]
[99.79560852 137.50381470]
[96.15438843 152.05514526]
[109.06643677 163.97027588]
[114.14218140 180.69772339]
[110.07044220 197.60591125]
[98.05989838 210.06077576]
[81.48220062 214.69583130]
[78.28861237 229.35191345]
[75.09503174 244.00801086]
[71.90144348 258.66409302]
[68.70786285 273.32019043]
[65.51427460 287.97628784]
[62.32069397 302.63238525]
[76.49497986 311.33834839]
[86.81755066 324.34970093]
[92.05532837 340.08386230]
[91.59230804 356.63482666]
[85.50198364 372.00384521]
[74.53632355 384.34100342]
[60.03300476 392.16778564]
[43.75221252 394.55419922]
[41.00926590 409.30130005]
[38.26631546 424.04837036]
[35.52336502 438.79544067]
[32.78041458 453.54251099]
[30.03746414 468.28958130]
[42.26599121 477.35736084]
[49.31610489 490.78057861]
[49.83686829 505.87194824]
[43.77853012 519.63629150]
[32.39174652 529.36517334]
[17.96981812 533.16955566]
[15.22686768 547.91662598]
[12.48391724 562.66369629]
[9.74096775 577.41076660]
[6.99801779 592.15783691]
[12.47283077 578.19268799]
[24.03855705 568.64099121]
[38.78687668 565.90478516]
[53.00917435 570.67199707]
[63.12910461 581.74389648]
[66.60191345 596.33630371]
[62.55431747 610.77990723]
[52.00413513 621.44262695]
[37.60303879 625.64324951]
[37.60303879 640.64324951]
[37.60303879 655.64324951]
[37.60303879 670.64324951]
[37.60303879 685.64324951]
[37.60303879 700.64324951]
[51.76645279 706.09875488]
[63.00006485 716.30511475]
[69.78462219 729.88214111]
[71.20257568 744.99346924]
[67.06215668 759.59558105]
[57.92331696 771.71362305]
[45.02201080 779.70867920]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 197]
[9 196]
[10 195]
[11 194]
[12 193]
[13 192]
[21 33]
[22 32]
[23 31]
[24 30]
[25 29]
[34 183]
[35 182]
[36 181]
[37 180]
[38 179]
[44 173]
[45 172]
[46 171]
[47 170]
[48 169]
[49 168]
[59 160]
[60 159]
[61 158]
[62 157]
[63 156]
[64 155]
[65 154]
[72 149]
[73 148]
[74 147]
[75 146]
[77 102]
[78 101]
[79 100]
[81 98]
[82 97]
[83 96]
[84 95]
[85 94]
[105 145]
[106 144]
[107 143]
[108 142]
[109 141]
[110 140]
[111 139]
[112 138]
[113 137]
[114 136]
[115 134]
[116 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
