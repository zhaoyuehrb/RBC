%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 12:10:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGAAAAGACACUCCUCCACUUAUCCCCUCCGUGAUAUGGCUCUUCGCAUGCUGAGUACUGGACCUCGGACCAGAGCCAUGUAAGAAAAGGCCUGUUCCCUGGAAGCCCAAAGGACUCUGCAUUGAGGGUGGGGGUAAUUGUCUCUUGGUGGGCCCAGUUAGUGGGCCUUCCUGAGUGUGUGUAUGCGGUCUGUAACUAUUGCCAUAUAAAUAAAAAAUCCUGUUGCACUAGUGUCCUGCCAUCCCA\
) } def
/len { sequence length } bind def

/coor [
[70.01390076 291.41870117]
[61.80749130 278.72436523]
[57.70899582 264.17465210]
[58.08284378 249.06335449]
[62.89579773 234.73411560]
[71.71989441 222.46110535]
[83.77050018 213.33563232]
[97.97607422 208.16911316]
[97.21633911 193.18836975]
[96.45660400 178.20761108]
[95.69686890 163.22686768]
[94.93712616 148.24612427]
[94.17739105 133.26538086]
[83.90813446 129.69073486]
[75.30714417 123.03803253]
[69.26609039 113.99694824]
[66.41124725 103.50479126]
[67.03858185 92.64928436]
[53.48891830 86.21449280]
[37.70387268 87.28359985]
[29.52638054 74.83458710]
[15.97671413 68.39980316]
[2.42704701 61.96501160]
[-11.12261963 55.53022003]
[-24.67228699 49.09543228]
[-38.22195435 42.66064072]
[-51.77162170 36.22584915]
[-65.32128906 29.79106140]
[-81.10633087 30.86017036]
[-89.28382111 18.41115952]
[-102.83348846 11.97636890]
[-117.80912781 12.83097649]
[-130.53878784 20.76543617]
[-143.26844788 28.69989777]
[-155.99812317 36.63435745]
[-156.10848999 52.06132507]
[-164.56089783 64.96714783]
[-178.65824890 71.23361206]
[-193.90208435 68.86112213]
[-205.42819214 58.60672760]
[-209.55859375 43.74256897]
[-204.97532654 29.01174545]
[-193.14088440 19.11480713]
[-177.83158875 17.20983315]
[-163.93257141 23.90469360]
[-151.20291138 15.97023296]
[-138.47325134 8.03577328]
[-125.74358368 0.10131287]
[-125.36359406 -14.89387321]
[-137.67504883 -23.46289635]
[-149.98649597 -32.03192139]
[-162.29795837 -40.60094452]
[-178.04470825 -42.13404846]
[-184.07070923 -55.75522995]
[-196.38215637 -64.32424927]
[-208.69360352 -72.89327240]
[-221.00506592 -81.46229553]
[-236.75181580 -82.99540710]
[-242.77781677 -96.61658478]
[-255.08926392 -105.18560791]
[-267.56130981 -113.51915741]
[-280.18945312 -121.61423492]
[-300.36355591 -121.66487885]
[-308.44079590 -139.24850464]
[-321.26995850 -147.02107239]
[-336.43710327 -143.47209167]
[-349.33694458 -151.53733826]
[-352.62692261 -166.01876831]
[-365.45605469 -173.79133606]
[-378.28521729 -181.56390381]
[-394.09741211 -182.09722900]
[-400.97351074 -195.30967712]
[-413.80267334 -203.08224487]
[-426.63180542 -210.85481262]
[-435.56921387 -212.61776733]
[-439.57336426 -218.80798340]
[-452.30303955 -226.74243164]
[-465.03268433 -234.67689514]
[-478.20529175 -226.88323975]
[-493.49154663 -226.11549377]
[-507.37875366 -232.55007935]
[-516.67578125 -244.70837402]
[-519.24615479 -259.79650879]
[-514.49932861 -274.34732056]
[-503.52603149 -285.01715088]
[-488.84783936 -289.35412598]
[-473.83773804 -286.36169434]
[-461.94488525 -276.72744751]
[-455.90219116 -262.66525269]
[-457.09823608 -247.40657043]
[-444.36856079 -239.47210693]
[-431.63891602 -231.53764343]
[-418.85925293 -223.68397522]
[-406.03009033 -215.91139221]
[-393.20095825 -208.13882446]
[-378.30636597 -208.16145325]
[-370.51263428 -194.39306641]
[-357.68350220 -186.62048340]
[-344.85433960 -178.84791565]
[-330.49533081 -182.63668823]
[-317.37402344 -174.93695068]
[-313.49737549 -159.85021973]
[-300.66821289 -152.07765198]
[-291.03317261 -155.39036560]
[-280.94995117 -152.81112671]
[-273.79345703 -144.95486450]
[-272.09436035 -134.24237061]
[-259.46624756 -126.14729309]
[-255.98371887 -126.52685547]
[-252.14419556 -125.25356293]
[-248.71971130 -122.17771912]
[-246.52024841 -117.49706268]
[-234.20880127 -108.92803192]
[-219.34263611 -108.00784302]
[-212.43603516 -93.77375031]
[-200.12458801 -85.20472717]
[-187.81314087 -76.63570404]
[-175.50167847 -68.06668091]
[-160.63552856 -67.14648438]
[-153.72892761 -52.91239548]
[-141.41748047 -44.34337234]
[-129.10601807 -35.77434921]
[-116.79457092 -27.20532417]
[-109.39887238 -25.21599579]
[-103.17749786 -21.06014061]
[-98.72395325 -15.26979828]
[-96.41878510 -8.52466583]
[-96.39870453 -1.57329798]
[-82.84903717 4.86149168]
[-68.03315735 3.33212376]
[-58.88649750 16.24139404]
[-45.33683014 22.67618370]
[-31.78716469 29.11097336]
[-18.23749733 35.54576492]
[-4.68782997 41.98055267]
[8.86183739 48.41534424]
[22.41150475 54.85013199]
[35.96117020 61.28492355]
[50.77705002 59.75555420]
[59.92370605 72.66482544]
[73.47337341 79.09961700]
[96.15811157 66.44813538]
[121.11552429 73.64430237]
[132.85989380 64.31319427]
[144.60427856 54.98208618]
[146.83833313 42.29498291]
[156.79196167 34.76366806]
[168.81159973 35.98306656]
[180.67323303 26.80147743]
[186.85002136 12.23583889]
[201.65049744 10.56386948]
[213.51213074 1.38227940]
[225.37376404 -7.79931021]
[237.23539734 -16.98089981]
[249.09703064 -26.16248894]
[260.95867920 -35.34407806]
[272.82031250 -44.52566910]
[276.26535034 -60.19446564]
[290.72662354 -67.14075470]
[305.11068726 -60.03593063]
[308.38330078 -44.33021545]
[298.03399658 -32.07168198]
[282.00189209 -32.66403198]
[270.14025879 -23.48244286]
[258.27862549 -14.30085373]
[246.41699219 -5.11926413]
[234.55535889 4.06232595]
[222.69371033 13.24391556]
[210.83207703 22.42550468]
[205.50370789 36.33441544]
[189.85482788 38.66311264]
[177.99317932 47.84470367]
[172.21664429 64.42662048]
[153.93539429 66.72646332]
[142.19100952 76.05757141]
[130.44662476 85.38867950]
[132.50775146 90.84938812]
[133.59783936 96.58343506]
[133.68432617 102.41953278]
[132.76461792 108.18336487]
[146.14692688 114.95933533]
[159.52923584 121.73531342]
[172.91154480 128.51129150]
[186.29385376 135.28726196]
[195.33930969 136.36647034]
[199.80195618 142.23477173]
[213.09735107 149.17971802]
[226.39276123 156.12466431]
[239.68815613 163.06961060]
[250.02996826 153.17031860]
[262.90261841 146.95497131]
[277.04382324 145.01837158]
[291.07131958 147.53645325]
[303.61822510 154.25039673]
[313.46597290 164.49313354]
[319.66281128 177.25567627]
[321.61575317 191.28640747]
[319.14724731 205.21391296]
[332.35360718 212.32672119]
[345.55996704 219.43952942]
[358.76632690 226.55233765]
[372.69024658 219.70368958]
[387.97470093 222.38047791]
[398.74249268 233.55339050]
[400.85321045 248.92623901]
[393.49520874 262.58786011]
[379.49780273 269.28503418]
[364.24328613 266.44262695]
[353.59732056 255.15353394]
[351.65350342 239.75869751]
[338.44714355 232.64588928]
[325.24078369 225.53308105]
[312.03442383 218.42027283]
[300.40093994 229.04573059]
[285.80584717 235.05152893]
[270.00955200 235.69332886]
[254.92417908 230.87504578]
[242.38206482 221.16261292]
[233.91328430 207.71759033]
[230.55892944 192.15829468]
[232.74320984 176.36502075]
[219.44779968 169.42005920]
[206.15240479 162.47511292]
[192.85700989 155.53016663]
[179.51788330 148.66957092]
[166.13557434 141.89360046]
[152.75326538 135.11761475]
[139.37095642 128.34164429]
[125.98864746 121.56566620]
[118.40502167 128.31506348]
[109.15813446 132.50563049]
[109.91787720 147.48638916]
[110.67761230 162.46713257]
[111.43734741 177.44787598]
[112.19709015 192.42863464]
[112.95682526 207.40937805]
[127.61221313 211.11222839]
[140.52420044 218.97175598]
[150.54466248 230.28907776]
[156.78257751 244.05786133]
[158.68330383 259.05383301]
[156.07780457 273.94351196]
[149.19775391 287.40295410]
[138.65493774 298.23532104]
[125.38681793 305.47744751]
[110.57318115 308.48535156]
[95.53124237 306.99154663]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 236]
[9 235]
[10 234]
[11 233]
[12 232]
[13 231]
[18 141]
[19 140]
[21 138]
[22 137]
[23 136]
[24 135]
[25 134]
[26 133]
[27 132]
[28 131]
[30 129]
[31 128]
[32 48]
[33 47]
[34 46]
[35 45]
[49 123]
[50 122]
[51 121]
[52 120]
[54 118]
[55 117]
[56 116]
[57 115]
[59 113]
[60 112]
[61 108]
[62 107]
[64 103]
[65 102]
[68 99]
[69 98]
[70 97]
[72 95]
[73 94]
[74 93]
[76 92]
[77 91]
[78 90]
[143 176]
[144 175]
[145 174]
[148 172]
[149 171]
[151 169]
[152 168]
[153 167]
[154 166]
[155 165]
[156 164]
[157 163]
[180 229]
[181 228]
[182 227]
[183 226]
[184 225]
[186 224]
[187 223]
[188 222]
[189 221]
[198 213]
[199 212]
[200 211]
[201 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
