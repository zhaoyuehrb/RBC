%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Sep  9 23:45:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCCCUCCCCACUACUCCUUCUCCUUCUAGAUGGUAACCACAGCCUCGACCAUGCCUGCUCCCUCUGACCCAGCUUCACCUCAUGGACAACCCUUCUUGGUUCAUCUCCAGCCCGUGAGCUGGUCCUGCUUCCUCCCUUCCAUGCCCUAACUUUUAAUAUGCUUGUUCAGCUCUAAUAAAGUAAUAAAGCUUGGUUGUCAGUAUA\
) } def
/len { sequence length } bind def

/coor [
[54.60295105 200.00845337]
[52.31048584 208.84121704]
[48.95632172 217.32568359]
[44.59121704 225.33479309]
[39.28106689 232.74865723]
[33.10589981 239.45640564]
[26.15868568 245.35775757]
[18.54392052 250.36460876]
[10.37607288 254.40226746]
[1.77784550 257.41064453]
[-7.12165737 259.34506226]
[-16.18887138 260.17703247]
[-25.28777695 259.89453125]
[-34.28194046 258.50228882]
[-43.03655624 256.02169800]
[-51.42047119 252.49040222]
[-59.30815506 247.96183777]
[-66.58155823 242.50431824]
[-77.38745117 252.90780640]
[-81.96267700 268.05303955]
[-96.49764252 271.30633545]
[-107.30354309 281.70983887]
[-118.10944366 292.11331177]
[-118.15862274 307.91754150]
[-129.42739868 318.99859619]
[-145.23020935 318.78234863]
[-156.19152832 307.39703369]
[-155.80819702 291.59738159]
[-144.30763245 280.75704956]
[-128.51292419 281.30740356]
[-117.70703125 270.90393066]
[-106.90113068 260.50045776]
[-103.09882355 246.09934998]
[-87.79093933 242.10191345]
[-76.98504639 231.69842529]
[-80.26132965 227.18275452]
[-83.18930054 222.43383789]
[-85.75241089 217.47845459]
[-87.93619537 212.34461975]
[-89.72832489 207.06129456]
[-91.11868286 201.65830994]
[-92.09941864 196.16618347]
[-107.08862305 196.73518372]
[-122.07782745 197.30416870]
[-135.57456970 205.55938721]
[-148.58618164 198.31042480]
[-157.11193848 211.27542114]
[-171.64189148 216.72149658]
[-186.58900452 212.55453491]
[-196.20578003 200.37680054]
[-196.79438782 184.87089539]
[-188.12849426 171.99914551]
[-173.54029846 166.71101379]
[-158.63928223 171.03988647]
[-149.15516663 183.32122803]
[-136.73056030 175.10671997]
[-122.64682007 182.31497192]
[-107.65761566 181.74597168]
[-92.66841125 181.17698669]
[-87.10694122 157.17634583]
[-73.99115753 136.30004883]
[-54.75418854 120.85125732]
[-31.50523949 112.53882599]
[-6.79832268 112.28835297]
[16.64832115 120.13911438]
[36.25127029 135.23844910]
[48.23764801 126.22031403]
[60.22402954 117.20217896]
[72.21041107 108.18405151]
[84.19678497 99.16591644]
[89.64661407 85.19096375]
[86.92987061 70.43903351]
[84.21312714 55.68711090]
[81.49638367 40.93518448]
[78.77964020 26.18325996]
[76.06289673 11.43133450]
[71.42962646 3.55546260]
[73.41864777 -3.56497288]
[70.92609406 -18.35643005]
[68.43354034 -33.14788437]
[54.13691330 -38.58420944]
[44.54425049 -50.36884689]
[42.15411758 -65.27366638]
[47.50954819 -79.27992249]
[59.07872772 -88.66180420]
[56.58617401 -103.45326233]
[54.09362411 -118.24472046]
[51.60107040 -133.03617859]
[36.96960068 -148.69013977]
[44.97971725 -167.70947266]
[41.81652069 -182.37214661]
[38.65332413 -197.03482056]
[35.49012756 -211.69750977]
[22.07527542 -220.05317688]
[18.57932281 -235.46595764]
[27.07635689 -248.79171753]
[42.52523804 -252.12452698]
[55.76042175 -243.48707581]
[58.92970276 -228.00382996]
[50.15280914 -214.86070251]
[53.31600571 -200.19802856]
[56.47920227 -185.53533936]
[59.64239883 -170.87266541]
[67.79261017 -167.33654785]
[73.48701477 -160.33886719]
[75.34909058 -151.37068176]
[72.83690643 -142.41947937]
[66.39252472 -135.52873230]
[68.88507843 -120.73727417]
[71.37763214 -105.94581604]
[73.87018585 -91.15435791]
[87.87508392 -86.08203888]
[97.52488708 -74.60435486]
[100.15135193 -59.73936462]
[94.95050812 -45.46183014]
[83.22499847 -35.64043808]
[85.71755219 -20.84898186]
[88.21010590 -6.05752516]
[90.81482697 8.71459103]
[93.53157043 23.46651649]
[96.24831390 38.21844101]
[98.96505737 52.97036743]
[101.68180084 67.72229004]
[104.39854431 82.47422028]
[109.08682251 68.22570801]
[108.61791992 53.23303986]
[113.39960480 39.01560211]
[122.83320618 27.35339165]
[135.73765564 19.70649338]
[150.49736023 17.03228760]
[165.26440430 19.66557693]
[178.19000244 27.27667809]
[187.65589905 38.91270065]
[192.47695923 53.11682892]
[192.04960632 68.11074066]
[186.42735291 82.01722717]
[176.31408691 93.09521484]
[162.97596741 99.95776367]
[148.08291626 101.74570465]
[133.50236511 98.23644257]
[118.59802246 99.92771912]
[132.48866272 105.58901215]
[146.37930298 111.25029755]
[162.07904053 109.29367828]
[170.94483948 121.26226807]
[184.83547974 126.92355347]
[199.25703430 121.03659058]
[213.26347351 126.97581482]
[218.78691101 140.76084900]
[232.67755127 146.42213440]
[246.65251160 151.87196350]
[260.70855713 157.10908508]
[274.76461792 162.34619141]
[288.82067871 167.58331299]
[302.87670898 172.82041931]
[313.26153564 161.75556946]
[327.05432129 155.52639771]
[342.14041138 155.05377197]
[356.21997070 160.37857056]
[367.15850830 170.66026306]
[373.31051636 184.30938721]
[373.76684570 199.23323059]
[387.82290649 204.47033691]
[401.87896729 209.70745850]
[417.00897217 204.37246704]
[430.53652954 212.99713135]
[432.08444214 228.96533203]
[420.46530151 240.02763367]
[404.59228516 237.69799805]
[396.64184570 223.76351929]
[382.58578491 218.52639771]
[368.52975464 213.28927612]
[358.41940308 224.27609253]
[344.83609009 230.57209778]
[329.83663940 231.18960571]
[315.70544434 226.00341797]
[304.60656738 215.77458191]
[298.25247192 202.03894043]
[297.63961792 186.87648010]
[283.58355713 181.63935852]
[269.52749634 176.40225220]
[255.47145081 171.16513062]
[241.41539001 165.92802429]
[236.77388000 167.06495667]
[231.36900330 165.29597473]
[227.01626587 160.31277466]
[213.12562561 154.65148926]
[199.53985596 160.64834595]
[185.37211609 155.10485840]
[179.17419434 140.81419373]
[165.28355408 135.15290833]
[150.57734680 137.51445007]
[140.71800232 125.14093781]
[126.82736969 119.47964478]
[112.93672943 113.81835938]
[105.32951355 116.11213684]
[98.29879761 114.91572571]
[93.21492004 111.15229797]
[81.22853851 120.17042542]
[69.24215698 129.18856812]
[57.25577927 138.20669556]
[45.26940155 147.22482300]
[49.49925995 155.32432556]
[52.70669556 163.87823486]
[54.84406662 172.75810242]
[55.87980652 181.83062744]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 35]
[19 34]
[21 32]
[22 31]
[23 30]
[42 59]
[43 58]
[44 57]
[46 55]
[66 202]
[67 201]
[68 200]
[69 199]
[70 198]
[71 124]
[72 123]
[73 122]
[74 121]
[75 120]
[76 119]
[78 118]
[79 117]
[80 116]
[85 111]
[86 110]
[87 109]
[88 108]
[90 103]
[91 102]
[92 101]
[93 100]
[141 195]
[142 194]
[143 193]
[145 191]
[146 190]
[149 187]
[150 186]
[151 183]
[152 182]
[153 181]
[154 180]
[155 179]
[162 172]
[163 171]
[164 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
