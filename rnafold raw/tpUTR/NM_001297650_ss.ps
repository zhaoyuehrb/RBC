%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 11:10:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUAGACUUCCAGGGCUCACCAGAUCAACCUCUAAAUAUCUUUGAAGGAGACAACAACUUUUAAAUGAAUAAAGAGGAAGUCAAGUUGCCCUAUGGAAAACUUGUCCAAAUAACAUUUCUUGAACAAUAGGAGAACAGCUAAAUUGAUAAAGACUGGUGAUAAUAAAAAUUGAAUUAUGUAUAUCACUGUUAAA\
) } def
/len { sequence length } bind def

/coor [
[90.23317719 138.97503662]
[84.06645203 136.88584900]
[78.31811523 133.82809448]
[73.13912201 129.88206482]
[68.66545868 125.15135956]
[65.01460266 119.76021576]
[62.28241348 113.85018921]
[60.54063797 107.57647705]
[59.83501816 101.10382080]
[45.02729034 98.70982361]
[30.21956444 96.31582642]
[15.41183662 93.92182922]
[0.60411030 91.52783203]
[-14.24008465 89.37147522]
[-29.11693573 87.45331573]
[-43.99378586 85.53515625]
[-58.87063599 83.61700439]
[-69.54814148 90.86708069]
[-81.90645599 88.95523071]
[-89.39693451 79.44692230]
[-104.24112701 77.29056549]
[-116.82478333 86.47149658]
[-131.84819031 84.07318115]
[-140.52325439 72.02001190]
[-155.36744690 69.86365509]
[-170.21163940 67.70729828]
[-180.01319885 76.95635223]
[-193.16075134 78.84004974]
[-204.81811523 72.89202118]
[-210.82723999 61.48560715]
[-225.63496399 59.09160995]
[-240.44268799 56.69760895]
[-255.25041199 54.30361176]
[-270.05813599 51.90961456]
[-278.32617188 63.20084763]
[-290.59521484 69.79433441]
[-304.44192505 70.45249939]
[-317.15902710 65.10376740]
[-326.28475952 54.84545517]
[-330.07928467 41.71913528]
[-344.84674072 39.08810806]
[-359.63479614 36.57551575]
[-374.44253540 34.18151855]
[-389.25024414 31.78751945]
[-404.05798340 29.39352036]
[-418.86572266 26.99952316]
[-433.67343140 24.60552406]
[-448.48117065 22.21152496]
[-463.28887939 19.81752777]
[-473.51724243 31.36675453]
[-488.37200928 35.53072739]
[-503.11315918 30.98073959]
[-513.03680420 19.16867256]
[-514.97631836 3.86371613]
[-508.31289673 -10.05037498]
[-495.17272949 -18.13366508]
[-479.74880981 -17.80680466]
[-466.96289062 -9.17409325]
[-460.89489746 5.00980043]
[-446.08715820 7.40379906]
[-431.27944946 9.79779720]
[-416.47171021 12.19179630]
[-401.66397095 14.58579445]
[-386.85626221 16.97979355]
[-372.04852295 19.37379074]
[-357.24081421 21.76778984]
[-350.12707520 19.72926331]
[-342.21569824 24.32065582]
[-327.44827271 26.95168304]
[-317.34988403 14.34411526]
[-302.18539429 8.51261139]
[-286.05636597 11.13581085]
[-273.37655640 21.59172249]
[-267.66415405 37.10188675]
[-252.85641479 39.49588394]
[-238.04869080 41.88988495]
[-223.24096680 44.28388214]
[-208.43324280 46.67787933]
[-195.23539734 36.26311874]
[-178.25349426 38.65719604]
[-168.05528259 52.86310577]
[-153.21109009 55.01946259]
[-138.36689758 57.17581558]
[-126.62093353 48.08912659]
[-111.53609467 50.06451416]
[-102.08477783 62.44636917]
[-87.24057770 64.60272217]
[-71.32031250 57.23209763]
[-56.95247650 68.74015045]
[-42.07562637 70.65830994]
[-27.19877815 72.57646942]
[-12.32192802 74.49462128]
[-8.05193996 72.33026886]
[-2.37553692 72.83400726]
[2.99810863 76.72010040]
[17.80583572 79.11409760]
[32.61356354 81.50809479]
[47.42128754 83.90209961]
[62.22901535 86.29609680]
[73.15753174 70.10140228]
[90.43237305 60.97558975]
[109.96926880 61.07625580]
[127.14914703 70.37960052]
[139.17034912 61.40794373]
[151.19155884 52.43628693]
[163.21275330 43.46462631]
[175.23396301 34.49296951]
[169.68014526 20.47190285]
[167.94635010 5.50262070]
[170.14480591 -9.39377880]
[176.11970520 -23.20273590]
[185.45823669 -34.98532867]
[197.51913452 -43.94210052]
[211.47665405 -49.46733093]
[226.37715149 -51.18996048]
[241.20422363 -48.99853134]
[254.94804382 -43.04836655]
[266.67410278 -33.75058365]
[278.69531250 -42.72224045]
[290.71652222 -51.69390106]
[302.73773193 -60.66555786]
[314.75891113 -69.63721466]
[313.57821655 -85.01933289]
[320.92126465 -98.58706665]
[334.44488525 -106.01100159]
[349.83377075 -104.92219543]
[362.17739868 -95.66807556]
[367.53692627 -81.20159912]
[364.20217896 -66.13896179]
[353.23721313 -55.28660583]
[338.14099121 -52.10747147]
[323.73059082 -57.61601257]
[311.70938110 -48.64435196]
[299.68817139 -39.67269516]
[287.66696167 -30.70103645]
[275.64575195 -21.72937965]
[281.22286987 -7.84249735]
[283.01660156 7.02623987]
[280.89874268 21.86400032]
[275.00772095 35.65849686]
[265.73956299 47.46704483]
[253.72131348 56.48098373]
[239.76866150 62.08106613]
[224.83042908 63.87997818]
[209.92420959 61.74912643]
[196.06695557 55.82781982]
[184.20562744 46.51417542]
[172.18441772 55.48583221]
[160.16320801 64.45748901]
[148.14201355 73.42914581]
[136.12080383 82.40080261]
[140.02410889 103.53757477]
[132.47389221 123.66201019]
[142.73509216 134.60311890]
[152.99627686 145.54423523]
[161.16020203 149.66989136]
[163.33251953 156.74389648]
[173.41703796 167.84806824]
[183.50154114 178.95223999]
[193.58605957 190.05641174]
[203.67057800 201.16058350]
[213.75508118 212.26475525]
[223.83959961 223.36892700]
[234.18814087 234.22744751]
[244.79475403 244.83404541]
[255.40135193 255.44064331]
[266.00796509 266.04724121]
[281.31234741 263.48693848]
[295.18371582 270.44140625]
[302.28823853 284.23651123]
[299.89410400 299.56777954]
[288.92187500 310.54000854]
[273.59060669 312.93414307]
[259.79550171 305.82962036]
[252.84103394 291.95825195]
[255.40135193 276.65383911]
[244.79475403 266.04724121]
[234.18814087 255.44064331]
[223.58154297 244.83404541]
[220.06237793 244.47251892]
[216.54521179 242.38085938]
[213.84480286 238.57948303]
[212.73542786 233.45343018]
[202.65090942 222.34927368]
[192.56640625 211.24510193]
[182.48188782 200.14093018]
[172.39736938 189.03675842]
[162.31286621 177.93258667]
[152.22834778 166.82841492]
[142.05517578 155.80541992]
[131.79397583 144.86431885]
[121.53278351 133.92320251]
[115.77104187 136.95562744]
[109.59518433 139.01763916]
[103.16735840 140.05511475]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 99]
[10 98]
[11 97]
[12 96]
[13 95]
[14 92]
[15 91]
[16 90]
[17 89]
[20 87]
[21 86]
[24 83]
[25 82]
[26 81]
[30 78]
[31 77]
[32 76]
[33 75]
[34 74]
[40 69]
[41 68]
[42 66]
[43 65]
[44 64]
[45 63]
[46 62]
[47 61]
[48 60]
[49 59]
[103 151]
[104 150]
[105 149]
[106 148]
[107 147]
[118 136]
[119 135]
[120 134]
[121 133]
[122 132]
[153 192]
[154 191]
[155 190]
[157 189]
[158 188]
[159 187]
[160 186]
[161 185]
[162 184]
[163 183]
[164 179]
[165 178]
[166 177]
[167 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
