%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 10:18:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUGCAAAAUAACUUCUAUUAGAAUAAUGGUGCUCUGAAGACUCUUCUUAACUAAAAAGAAGAAUUUUUUUAAGUAUUAAUUCCAUGGACAAUAUAAAAUCUGUGUGAUUGUUUGCAGUAUGAAGACACAUUUCUACUUAUGCAGUAUUCUCAUGACUGUACUUUAAAGUACAUUUUUAGAAUUUUAUAAUAAAACCACCUUUAUUUUAAAGGA\
) } def
/len { sequence length } bind def

/coor [
[64.55155945 432.79833984]
[68.43656158 447.47045898]
[66.75514221 462.55480957]
[59.73471069 476.01132202]
[48.32471848 486.02014160]
[34.06827164 491.22763062]
[18.89343643 490.92956543]
[4.85248756 485.16622925]
[-6.15565205 474.71704102]
[-12.64222240 460.99520874]
[-13.72996807 445.85647583]
[-9.27178097 431.34823608]
[0.12940651 419.43261719]
[13.20216084 411.72106934]
[28.17849922 409.25659180]
[31.22567368 394.56936646]
[34.27285004 379.88214111]
[29.28236198 365.84844971]
[39.66176605 353.90780640]
[42.70894241 339.22058105]
[45.75611496 324.53335571]
[48.80329132 309.84613037]
[51.85046387 295.15890503]
[54.89764023 280.47167969]
[57.94481659 265.78442383]
[60.99198914 251.09721375]
[64.03916168 236.40997314]
[59.04867935 222.37629700]
[69.42808533 210.43566895]
[72.47525787 195.74842834]
[75.52243042 181.06120300]
[78.56961060 166.37397766]
[64.25540924 159.89231873]
[51.75539780 150.37086487]
[41.70401764 138.29287720]
[34.61141205 124.27135468]
[30.83756256 109.01795197]
[15.84116554 109.34669495]
[0.84476811 109.67544556]
[-14.15162945 110.00418854]
[-29.14802551 110.33293152]
[-42.77531052 118.37082672]
[-55.66909790 110.91431427]
[-70.66549683 111.24306488]
[-85.66189575 111.57180786]
[-100.65828705 111.90055084]
[-115.65468597 112.22929382]
[-130.65107727 112.55804443]
[-145.64747620 112.88678741]
[-155.29240417 125.19570923]
[-170.60345459 128.37464905]
[-184.35122681 120.92262268]
[-190.04444885 106.35823822]
[-184.99493408 91.55835724]
[-171.58692932 83.51102448]
[-156.15129089 86.01595306]
[-145.97622681 97.89038849]
[-130.97982788 97.56164551]
[-115.98342896 97.23290253]
[-100.98703766 96.90415192]
[-85.99063873 96.57540894]
[-70.99423981 96.24666595]
[-55.99784470 95.91792297]
[-43.44320297 87.90354156]
[-29.47677040 95.33653259]
[-14.48037434 95.00778961]
[0.51602310 94.67904663]
[15.51242065 94.35030365]
[30.50881767 94.02155304]
[33.12888336 80.17527008]
[38.47869110 67.13824463]
[46.33985901 55.44267273]
[56.39148331 45.56597137]
[68.22325134 37.91131592]
[62.86478806 23.90107536]
[57.50632477 9.89083385]
[42.94415665 -1.38197410]
[46.38811874 -18.59101677]
[40.82551575 -32.52146912]
[35.26291275 -46.45191956]
[29.70030975 -60.38237000]
[24.13770676 -74.31282043]
[11.83444405 -84.25968933]
[14.30026531 -98.94876862]
[8.73766232 -112.87921906]
[3.17506027 -126.80966949]
[-2.38754225 -140.74012756]
[-7.95014477 -154.67057800]
[-13.51274681 -168.60102844]
[-28.72464752 -170.72084045]
[-40.82875824 -180.17526245]
[-46.56913757 -194.42109680]
[-44.40164566 -209.62628174]
[-34.90932846 -221.70068359]
[-20.64557648 -227.39639282]
[-5.44726419 -225.18124390]
[6.59733963 -215.65112305]
[12.24829578 -201.36959839]
[9.98552608 -186.17829895]
[0.41770336 -174.16362000]
[5.98030567 -160.23316956]
[11.54290867 -146.30271912]
[17.10551071 -132.37226868]
[22.66811371 -118.44182587]
[28.23071671 -104.51137543]
[40.13610458 -95.56089783]
[38.06815720 -79.87541962]
[43.63076019 -65.94496918]
[49.19336319 -52.01452255]
[54.75596619 -38.08407211]
[60.31856918 -24.15361977]
[71.30529785 -19.09670639]
[76.05454254 -7.53902292]
[71.51656342 4.53237104]
[76.87503052 18.54261208]
[82.23348999 32.55285263]
[110.65924835 31.07143784]
[137.30972290 41.06995010]
[146.64982605 29.33272171]
[155.98992920 17.59549522]
[165.33003235 5.85826778]
[174.67013550 -5.87895966]
[184.01022339 -17.61618614]
[193.17784119 -29.48863411]
[202.17098999 -41.49376678]
[211.16413879 -53.49889755]
[208.67233276 -69.10551453]
[218.01344299 -81.85382843]
[233.64552307 -84.18048859]
[246.29437256 -74.70512390]
[248.45562744 -59.04931259]
[238.84706116 -46.50136185]
[223.16928101 -44.50574875]
[214.17611694 -32.50061417]
[205.18296814 -20.49548149]
[204.96166992 -15.72747993]
[201.74481201 -11.04714108]
[195.74745178 -8.27608490]
[186.40734863 3.46114230]
[177.06726074 15.19836903]
[167.72715759 26.93559647]
[158.38705444 38.67282486]
[149.04695129 50.41004944]
[157.85079956 61.03782654]
[164.38977051 73.19098663]
[168.40786743 86.39373779]
[169.74775696 100.12917328]
[184.65777588 101.76973724]
[199.56777954 103.41030884]
[214.47779846 105.05087280]
[229.38781738 106.69144440]
[239.84812927 95.38268280]
[254.78704834 92.43614197]
[268.43502808 98.77618408]
[275.64642334 111.78134155]
[290.55642700 113.42190552]
[299.42578125 111.25028229]
[305.67175293 115.19692230]
[320.55621338 117.05517578]
[335.44064331 118.91342926]
[350.32510376 120.77168274]
[365.20956421 122.62992859]
[380.09399414 124.48818207]
[394.98385620 117.61614227]
[408.22222900 127.29484558]
[406.19064331 143.56767273]
[390.97900391 149.69451904]
[378.23574829 139.37263489]
[363.35131836 137.51438904]
[348.46685791 135.65612793]
[333.58239746 133.79788208]
[318.69793701 131.93962097]
[303.81350708 130.08137512]
[288.91586304 128.33192444]
[274.00585938 126.69135284]
[264.13928223 137.81739807]
[249.43928528 141.03826904]
[235.49844360 134.91406250]
[227.74725342 121.60145569]
[212.83723450 119.96089172]
[197.92721558 118.32032013]
[183.01719666 116.67975616]
[168.10719299 115.03918457]
[166.18690491 122.00135803]
[163.55697632 128.72763062]
[160.24560547 135.14588928]
[156.28828430 141.18733215]
[151.72744751 146.78715515]
[146.61198425 151.88534546]
[140.99678040 156.42721558]
[134.94200134 160.36408997]
[128.51257324 163.65374756]
[121.77744293 166.26092529]
[114.80881500 168.15765381]
[107.68141937 169.32360840]
[100.47165680 169.74627686]
[93.25683594 169.42114258]
[90.20966339 184.10838318]
[87.16249084 198.79560852]
[84.11531067 213.48283386]
[88.88784027 228.56704712]
[78.72639465 239.45715332]
[75.67922211 254.14437866]
[72.63204193 268.83160400]
[69.58486938 283.51882935]
[66.53769684 298.20608521]
[63.49052048 312.89331055]
[60.44334412 327.58053589]
[57.39617157 342.26776123]
[54.34899521 356.95498657]
[59.12152863 372.03921509]
[48.96007919 382.92929077]
[45.91290283 397.61654663]
[42.86573029 412.30377197]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 214]
[16 213]
[17 212]
[19 210]
[20 209]
[21 208]
[22 207]
[23 206]
[24 205]
[25 204]
[26 203]
[27 202]
[29 200]
[30 199]
[31 198]
[32 197]
[37 69]
[38 68]
[39 67]
[40 66]
[41 65]
[43 63]
[44 62]
[45 61]
[46 60]
[47 59]
[48 58]
[49 57]
[74 116]
[75 115]
[76 114]
[78 111]
[79 110]
[80 109]
[81 108]
[82 107]
[84 105]
[85 104]
[86 103]
[87 102]
[88 101]
[89 100]
[118 143]
[119 142]
[120 141]
[121 140]
[122 139]
[123 138]
[124 135]
[125 134]
[126 133]
[147 183]
[148 182]
[149 181]
[150 180]
[151 179]
[155 175]
[156 174]
[158 173]
[159 172]
[160 171]
[161 170]
[162 169]
[163 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
