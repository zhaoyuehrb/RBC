%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 05:27:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUGCAGCCUACACUAUUCUAGCAGGAGGGUUGGGCGUGCUACCUGCACCGCCCCUUCUCCAACAAGUUGCCUCCAAGCUUUGGGUUGGAGCUGUUCCAUUGGGUCCUCUUGGUGUCGUUUCCCUCCCAACAGAGCUGGGCUACCCCCCCUCCUGCUGCCUAAUAAAGAGACUGAGCCCUGA\
) } def
/len { sequence length } bind def

/coor [
[105.28139496 542.70336914]
[116.05462646 531.13995361]
[115.28663635 516.15960693]
[114.51865387 501.17929077]
[106.13986969 488.86483765]
[113.16046906 474.68661499]
[112.39247894 459.70629883]
[111.62448883 444.72598267]
[103.24571228 432.41152954]
[110.26630402 418.23330688]
[109.49831390 403.25299072]
[106.00752258 396.71826172]
[108.84731293 388.01077271]
[97.82041168 378.06378174]
[97.08749390 362.86779785]
[107.59559631 351.36923218]
[107.08348083 336.37796021]
[106.57136536 321.38671875]
[106.05924988 306.39544678]
[94.64006805 290.80844116]
[104.32608032 273.14733887]
[103.30244446 258.18231201]
[102.27880859 243.21726990]
[101.25516510 228.25224304]
[100.23152924 213.28721619]
[99.20789337 198.32218933]
[98.18425751 183.35714722]
[97.16062164 168.39212036]
[96.13698578 153.42709351]
[95.11334991 138.46205139]
[94.08971405 123.49702454]
[81.00965881 118.24502563]
[72.16323853 105.82833099]
[71.33313751 89.45133209]
[56.35281372 90.21932220]
[41.37248611 90.98731232]
[26.39216042 91.75530243]
[11.41183376 92.52329254]
[-3.56139135 93.41913605]
[-18.52642250 94.44277191]
[-33.49145508 95.46640778]
[-45.07631683 106.56462860]
[-60.95645905 104.28412628]
[-68.94998932 90.37431335]
[-62.92496490 75.50559998]
[-47.50325775 71.08399200]
[-34.51509094 80.50137329]
[-19.55005836 79.47773743]
[-4.58502769 78.45410156]
[1.88913822 74.85224915]
[10.64384556 77.54296112]
[25.62417221 76.77497101]
[40.60449982 76.00698853]
[55.58482742 75.23899841]
[70.56515503 74.47100830]
[55.56786728 74.75643158]
[41.83412933 68.72447968]
[31.89739990 57.48786926]
[27.59070396 43.11941910]
[29.70849991 28.26967239]
[37.86011505 15.67796421]
[50.54182816 7.66708326]
[65.41423798 5.71479654]
[79.73383331 10.18124294]
[90.85908508 20.24249649]
[96.73770905 34.04256058]
[96.28528595 49.03573608]
[89.58718872 62.45385361]
[96.71454620 49.25533676]
[96.46372986 33.43611908]
[109.31924438 25.91381073]
[116.44659424 12.71529388]
[123.57395172 -0.48322240]
[130.70130920 -13.68173885]
[130.54716492 -18.94705963]
[132.26963806 -23.30032539]
[135.20121765 -26.17638206]
[138.54653931 -27.35981560]
[146.34028625 -40.17610550]
[154.13404846 -52.99239731]
[161.92781067 -65.80868530]
[169.72157288 -78.62497711]
[177.18457031 -91.63665009]
[184.31192017 -104.83516693]
[191.43928528 -118.03368378]
[198.56663513 -131.23219299]
[194.27047729 -146.20486450]
[201.68664551 -159.48851013]
[215.98727417 -163.49195862]
[223.11463928 -176.69047546]
[230.24198914 -189.88899231]
[237.36933899 -203.08750916]
[237.11853027 -218.90672302]
[249.97404480 -226.42903137]
[257.10137939 -239.62754822]
[253.38331604 -249.88130188]
[255.88406372 -260.27175903]
[263.53900146 -267.41079712]
[273.64483643 -269.10842896]
[281.21862793 -282.05593872]
[288.79244995 -295.00341797]
[296.36627197 -307.95089722]
[303.94006348 -320.89837646]
[311.51388550 -333.84588623]
[319.08770752 -346.79336548]
[318.63989258 -363.18640137]
[332.75253296 -371.53900146]
[346.90771484 -363.25872803]
[346.54379272 -346.86361694]
[332.03518677 -339.21954346]
[324.46136475 -326.27206421]
[316.88757324 -313.32458496]
[309.31375122 -300.37707520]
[301.73992920 -287.42959595]
[294.16613770 -274.48211670]
[286.59231567 -261.53463745]
[287.92141724 -242.25805664]
[270.29989624 -232.50019836]
[263.17254639 -219.30168152]
[263.93316650 -204.42651367]
[250.56785583 -195.96015930]
[243.44050598 -182.76164246]
[236.31315613 -169.56312561]
[229.18579102 -156.36460876]
[233.68139648 -142.21098328]
[226.64126587 -128.72427368]
[211.76515198 -124.10484314]
[204.63780212 -110.90633392]
[197.51043701 -97.70781708]
[190.38308716 -84.50930023]
[191.05070496 -81.02420044]
[190.04841614 -77.04157257]
[187.16053772 -73.35674286]
[182.53785706 -70.83122253]
[174.74409485 -58.01493073]
[166.95034790 -45.19863892]
[159.15658569 -32.38234711]
[151.36282349 -19.56605721]
[143.89982605 -6.55438566]
[136.77246094 6.64413071]
[129.64511108 19.84264755]
[122.51776123 33.04116440]
[123.27836609 47.91633606]
[109.91306305 56.38269043]
[102.78570557 69.58120728]
[119.91671753 78.96669769]
[127.09675598 96.01983643]
[122.38442230 112.84531403]
[109.05474854 122.47338867]
[110.07838440 137.43841553]
[111.10202026 152.40345764]
[112.12565613 167.36848450]
[113.14929199 182.33351135]
[114.17292786 197.29855347]
[115.19656372 212.26358032]
[116.22019958 227.22860718]
[117.24383545 242.19363403]
[118.26747131 257.15866089]
[119.29110718 272.12371826]
[127.91093445 278.80667114]
[131.34625244 288.92663574]
[128.68750000 299.05062866]
[121.05050659 305.88333130]
[121.56262207 320.87460327]
[122.07473755 335.86584473]
[122.58685303 350.85711670]
[133.85514832 361.61178589]
[134.16094971 376.82235718]
[123.83856964 387.49865723]
[124.47864532 402.48501587]
[125.24663544 417.46533203]
[133.68034363 430.85125732]
[126.60482025 443.95797729]
[127.37280273 458.93832397]
[128.14079285 473.91864014]
[136.57450867 487.30456543]
[129.49897766 500.41128540]
[130.26696777 515.39160156]
[131.03495789 530.37194824]
[142.93423462 540.77307129]
[143.91021729 556.54718018]
[133.38389587 568.33581543]
[117.60034180 569.14495850]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 179]
[3 178]
[4 177]
[6 175]
[7 174]
[8 173]
[10 171]
[11 170]
[13 169]
[16 166]
[17 165]
[18 164]
[19 163]
[21 159]
[22 158]
[23 157]
[24 156]
[25 155]
[26 154]
[27 153]
[28 152]
[29 151]
[30 150]
[31 149]
[34 55]
[35 54]
[36 53]
[37 52]
[38 51]
[39 49]
[40 48]
[41 47]
[68 145]
[69 144]
[71 142]
[72 141]
[73 140]
[74 139]
[78 138]
[79 137]
[80 136]
[81 135]
[82 134]
[83 130]
[84 129]
[85 128]
[86 127]
[89 124]
[90 123]
[91 122]
[92 121]
[94 119]
[95 118]
[99 116]
[100 115]
[101 114]
[102 113]
[103 112]
[104 111]
[105 110]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
