%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 15:01:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGCGGGCAGCCAGGCCCAGCCCCCGCCCGAGCUCAGGCUGCCCCUCUCCUUCCCCGGCUCGCAGGAGAGCAGAGCAGAGAACUGUGGGGAACGCUGUGCUGUUUGUAUUUGUUCCCUUGGGUUUUUUUUUCCUGCCUAAUUUCUGUGAUUUCCAACCAACAUGAAAUGACUAUAAAUGGUUUUUUAAUGAAAAAAGAAAUCACUUUUA\
) } def
/len { sequence length } bind def

/coor [
[69.49635315 133.31228638]
[57.67008591 142.53938293]
[45.84381485 151.76647949]
[34.01754761 160.99359131]
[29.17664719 168.73977661]
[21.94581413 170.26844788]
[9.98347855 179.31845093]
[-1.97885847 188.36845398]
[-8.31617451 202.86497498]
[-23.13420677 204.37335205]
[-35.09654236 213.42333984]
[-37.18048859 230.79217529]
[-50.91102219 241.07748413]
[-67.49882507 238.30555725]
[-79.32509613 247.53265381]
[-91.15135956 256.75973511]
[-93.22724152 272.19763184]
[-105.35220337 281.38674927]
[-120.05708313 279.31259155]
[-131.88334656 288.53967285]
[-143.70962524 297.76678467]
[-155.53588867 306.99386597]
[-167.36216736 316.22097778]
[-166.96614075 331.62063599]
[-175.61277771 344.15414429]
[-189.81365967 349.13400269]
[-204.05339050 344.84823608]
[-215.87965393 354.07531738]
[-221.52804565 369.47103882]
[-237.72941589 372.01025391]
[-247.81718445 359.08087158]
[-241.41392517 343.98352051]
[-225.10676575 342.24905396]
[-213.28048706 333.02194214]
[-213.97441101 318.16744995]
[-205.69032288 305.60409546]
[-191.43022156 300.26528931]
[-176.58926392 304.39471436]
[-164.76298523 295.16760254]
[-152.93672180 285.94052124]
[-141.11045837 276.71340942]
[-129.28417969 267.48632812]
[-127.71976471 252.71850586]
[-115.85768890 243.19244385]
[-100.37846375 244.93347168]
[-88.55219269 235.70637512]
[-76.72592163 226.47927856]
[-76.95189667 213.59602356]
[-69.60666656 202.77337646]
[-57.18647766 198.08836365]
[-44.14654160 201.46101379]
[-32.18420792 192.41101074]
[-26.70251656 178.56181335]
[-11.02885818 176.40611267]
[0.93347836 167.35610962]
[12.89581490 158.30612183]
[24.79044724 149.16731262]
[36.61671829 139.94021606]
[48.44298935 130.71311951]
[60.26925659 121.48602295]
[54.98676682 96.25971222]
[64.36032867 72.25122070]
[85.33796692 57.27757263]
[82.89224243 42.47830200]
[80.44651031 27.67903137]
[78.00078583 12.87976074]
[75.55505371 -1.91950977]
[73.10932922 -16.71878052]
[70.66360474 -31.51805115]
[68.21787262 -46.31732178]
[65.77214813 -61.11659241]
[57.10837936 -48.87163162]
[42.63309860 -44.93890762]
[28.96421432 -51.11641312]
[22.35095215 -64.57987213]
[25.81680679 -79.17397308]
[37.77723694 -88.22649384]
[52.76409531 -87.59873962]
[63.92647171 -77.57608032]
[63.03365707 -92.54948425]
[62.14083862 -107.52288818]
[61.24802399 -122.49629974]
[60.35520935 -137.46969604]
[59.46239090 -152.44309998]
[58.56957626 -167.41651917]
[47.03168488 -177.88143921]
[46.33954239 -193.07933044]
[56.38735962 -204.01445007]
[55.49454498 -218.98785400]
[54.60172653 -233.96125793]
[53.70891190 -248.93466187]
[52.81609726 -263.90808105]
[51.92327881 -278.88146973]
[51.03046417 -293.85488892]
[50.13764954 -308.82827759]
[41.02627945 -317.95767212]
[40.59090805 -330.44744873]
[48.51984787 -339.58300781]
[47.85006332 -354.56805420]
[47.18027878 -369.55307007]
[46.51049423 -384.53811646]
[35.68907547 -396.38195801]
[38.34412384 -412.20379639]
[52.43891525 -419.86645508]
[67.16112518 -413.49182129]
[71.21714020 -397.96994019]
[61.49553299 -385.20791626]
[62.16531754 -370.22286987]
[62.83510208 -355.23782349]
[63.50488663 -340.25277710]
[73.73254395 -325.99227905]
[65.11105347 -309.72109985]
[66.00386810 -294.74771118]
[66.89668274 -279.77429199]
[67.78950500 -264.80090332]
[68.68231964 -249.82748413]
[69.57513428 -234.85408020]
[70.46794891 -219.88067627]
[71.36076355 -204.90727234]
[82.63681793 -195.24362183]
[83.75556183 -180.07116699]
[73.54298401 -168.30932617]
[74.43579865 -153.33592224]
[75.32861328 -138.36251831]
[76.22142792 -123.38911438]
[77.11424255 -108.41570282]
[78.00706482 -93.44229889]
[78.89987946 -78.46889496]
[80.57141876 -63.56232071]
[83.01714325 -48.76305008]
[85.46287537 -33.96377945]
[87.90859985 -19.16450882]
[90.35432434 -4.36523724]
[92.80005646 10.43403339]
[95.24578094 25.23330498]
[97.69151306 40.03257370]
[100.13723755 54.83184433]
[108.79591370 55.69635773]
[117.12814331 58.20516968]
[124.82466125 62.26517487]
[131.59983826 67.72568512]
[137.20219421 74.38404083]
[141.42381287 81.99311066]
[144.10801697 90.27050018]
[145.15518188 98.90898895]
[144.52644348 107.58797455]
[142.24511719 115.98533630]
[155.19812012 123.54972076]
[168.15110779 131.11408997]
[181.10411072 138.67848206]
[194.05711365 146.24285889]
[207.01011658 153.80723572]
[219.96310425 161.37161255]
[232.91610718 168.93598938]
[244.00173950 159.99397278]
[257.44558716 155.38269043]
[271.62615967 155.63674927]
[284.84045410 160.70527649]
[295.50839233 169.96037292]
[302.36196899 182.27491760]
[304.59570312 196.15975952]
[301.96142578 209.94380188]
[314.80038452 217.70019531]
[327.63931274 225.45658875]
[343.45217896 225.96997070]
[350.34494019 239.17373657]
[363.18386841 246.93013000]
[376.02282715 254.68652344]
[391.83569336 255.19990540]
[398.72842407 268.40365601]
[411.56738281 276.16006470]
[424.40631104 283.91644287]
[437.24526978 291.67285156]
[450.08419800 299.42922974]
[466.48193359 299.21362305]
[474.63385010 313.44308472]
[466.15396118 327.47961426]
[449.76565552 326.88357544]
[442.32781982 312.26815796]
[429.48886108 304.51177979]
[416.64993286 296.75540161]
[403.81097412 288.99899292]
[390.97204590 281.24261475]
[376.07748413 281.28399658]
[368.26641846 267.52545166]
[355.42749023 259.76907349]
[342.58853149 252.01268005]
[327.69400024 252.05407715]
[319.88293457 238.29553223]
[307.04397583 230.53913879]
[294.20504761 222.78274536]
[281.58975220 232.37338257]
[266.22262573 236.39839172]
[250.44927979 234.21282959]
[236.68907166 226.12207031]
[227.06401062 213.33950806]
[223.07156372 197.80468750]
[225.35173035 181.88899231]
[212.39872742 174.32461548]
[199.44572449 166.76023865]
[186.49273682 159.19584656]
[173.53973389 151.63146973]
[160.58673096 144.06709290]
[147.63374329 136.50271606]
[134.68074036 128.93833923]
[127.13494873 136.10920715]
[118.14794159 141.36221313]
[108.19704437 144.41835022]
[97.81077576 145.11528015]
[87.54077911 143.41600037]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 60]
[2 59]
[3 58]
[4 57]
[6 56]
[7 55]
[8 54]
[10 52]
[11 51]
[14 47]
[15 46]
[16 45]
[19 42]
[20 41]
[21 40]
[22 39]
[23 38]
[27 34]
[28 33]
[63 137]
[64 136]
[65 135]
[66 134]
[67 133]
[68 132]
[69 131]
[70 130]
[71 129]
[79 128]
[80 127]
[81 126]
[82 125]
[83 124]
[84 123]
[85 122]
[88 119]
[89 118]
[90 117]
[91 116]
[92 115]
[93 114]
[94 113]
[95 112]
[98 110]
[99 109]
[100 108]
[101 107]
[147 205]
[148 204]
[149 203]
[150 202]
[151 201]
[152 200]
[153 199]
[154 198]
[162 191]
[163 190]
[164 189]
[166 187]
[167 186]
[168 185]
[170 183]
[171 182]
[172 181]
[173 180]
[174 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
