%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 11:23:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGGAGCCUCGGUAGCCGUUCCUCCUGCCCGCUGGGCCUCCCAACGGGCCCUCCUCCCCUCCUUGCACCGGCCCUUCCUGGUCUUUGAAUAAAGUCUGAGUGGGCAGCA\
) } def
/len { sequence length } bind def

/coor [
[40.95040512 238.09378052]
[26.25729752 235.07508850]
[16.75718117 223.46699524]
[16.70448112 208.46508789]
[5.44439697 218.37521362]
[-5.81568766 228.28532410]
[-17.07577324 238.19544983]
[-15.77001858 253.54475403]
[-23.66056633 266.56753540]
[-37.54219818 272.37823486]
[-52.01039886 268.94180298]
[-63.27048492 278.85189819]
[-74.53057098 288.76202393]
[-82.42590332 303.76538086]
[-99.02854919 300.33190918]
[-100.32535553 283.42764282]
[-84.44068909 277.50195312]
[-73.18060303 267.59182739]
[-61.92052078 257.68170166]
[-63.49141312 242.89419556]
[-55.96455765 229.86306763]
[-42.04502106 223.69055176]
[-26.98589325 226.93536377]
[-15.72580814 217.02525330]
[-4.46572399 207.11512756]
[6.79436064 197.20500183]
[17.01915932 186.22987366]
[26.10842323 174.29734802]
[35.19768524 162.36480713]
[44.28694916 150.43228149]
[53.37621307 138.49975586]
[62.46547699 126.56722260]
[71.55474091 114.63468933]
[80.64400482 102.70215607]
[80.43173981 87.70365906]
[71.00843811 76.03312683]
[61.58514023 64.36258698]
[52.16183853 52.69205093]
[42.73854065 41.02151489]
[33.31523895 29.35097885]
[17.57530785 27.92617226]
[7.51728773 15.73552895]
[9.10842609 0.01154028]
[21.40472794 -9.91703033]
[37.11101532 -8.15973759]
[46.90902710 4.24084806]
[44.98577499 19.92767906]
[54.40907669 31.59821510]
[63.83237457 43.26875305]
[73.25567627 54.93928909]
[82.67897797 66.60982513]
[92.10227203 78.28035736]
[89.42770386 63.52072906]
[86.75313568 48.76110077]
[80.08364868 35.32540512]
[79.33051300 20.34432411]
[84.61888885 6.30747843]
[95.06993866 -4.45242882]
[108.94685364 -10.14726925]
[123.94351196 -9.83065033]
[137.56770325 -3.55518866]
[147.55529785 7.63623238]
[152.24652100 21.88377380]
[150.86175537 36.81971741]
[143.63114929 49.96194458]
[131.75332642 59.12785721]
[122.89065552 71.22963715]
[114.02798462 83.33141327]
[127.60761261 76.96009827]
[141.18724060 70.58877563]
[154.76687622 64.21746063]
[168.34649658 57.84613800]
[173.48043823 42.89896011]
[187.71643066 36.03511810]
[202.60848999 41.32681274]
[209.32144165 55.63456726]
[203.87258911 70.46984863]
[189.49465942 77.03115082]
[174.71781921 71.42576599]
[161.13818359 77.79708862]
[147.55856323 84.16840363]
[133.97892761 90.53972626]
[120.39930725 96.91104126]
[121.03592682 111.89752960]
[135.10696411 117.09426117]
[149.17799377 122.29100037]
[163.24902344 127.48773193]
[179.31204224 124.18447113]
[190.00050354 136.62187195]
[184.31903076 152.00540161]
[168.11224365 154.50979614]
[158.05229187 141.55876160]
[143.98126221 136.36203003]
[129.91021729 131.16529846]
[115.83918762 125.96855927]
[108.68003082 125.69448090]
[102.47008514 123.69576263]
[97.58242798 120.38445282]
[94.25449371 116.24431610]
[92.57653046 111.79141998]
[83.48726654 123.72395325]
[74.39801025 135.65647888]
[65.30874634 147.58901978]
[56.21947861 159.52154541]
[47.13021851 171.45407104]
[38.04095459 183.38661194]
[28.95169067 195.31913757]
[43.91774368 194.31053162]
[56.16924286 202.96505737]
[60.22052002 217.40760803]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 26]
[5 25]
[6 24]
[7 23]
[11 19]
[12 18]
[13 17]
[27 107]
[28 106]
[29 105]
[30 104]
[31 103]
[32 102]
[33 101]
[34 100]
[35 52]
[36 51]
[37 50]
[38 49]
[39 48]
[40 47]
[68 83]
[69 82]
[70 81]
[71 80]
[72 79]
[84 95]
[85 94]
[86 93]
[87 92]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
