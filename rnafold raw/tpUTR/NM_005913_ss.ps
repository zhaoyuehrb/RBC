%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 14:05:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACAAAGUGCUCCUCUCUGUGGCUCUGUUCUCCUUUGUUUGCUCACCUAUGACAAAGCGACAGCCAAGGGGUAGGCGGGAGUGCUAGCAUCCCAUUUUUCUCUUUACCAGCUCAGACA\
) } def
/len { sequence length } bind def

/coor [
[24.22277069 268.53543091]
[19.58751678 282.80126953]
[14.95226097 297.06710815]
[10.31700611 311.33297729]
[11.17285633 328.26528931]
[-4.86083078 333.77502441]
[-14.59381294 319.89318848]
[-3.94884133 306.69772339]
[0.68641365 292.43185425]
[5.32166862 278.16601562]
[9.95692348 263.90017700]
[1.36029339 255.13397217]
[-2.67104530 243.45980835]
[-1.29947090 231.11248779]
[5.27197647 220.48403931]
[15.82686520 213.66032410]
[28.36012459 212.01179504]
[33.73564529 198.00808716]
[39.11116409 184.00439453]
[44.48668289 170.00068665]
[43.93946838 162.53671265]
[50.19055557 155.70381165]
[55.93080902 141.84561157]
[61.67105865 127.98741913]
[67.41130829 114.12922668]
[64.48495483 99.41744995]
[53.87835693 88.81084442]
[43.27175522 78.20424652]
[32.66515350 67.59764099]
[22.05854988 56.99103928]
[11.04404926 57.61575317]
[1.73038912 52.12623215]
[-2.86561894 42.58561325]
[-1.41480100 32.31881332]
[-11.45176029 21.17164230]
[-21.48871994 10.02446938]
[-31.52567863 -1.12270272]
[-41.56263733 -12.26987553]
[-51.59959793 -23.41704750]
[-61.63655472 -34.56422043]
[-76.45143890 -30.72001266]
[-91.35321045 -34.21224594]
[-102.91756439 -44.23843002]
[-108.48708344 -58.49462128]
[-106.78194427 -73.70484924]
[-98.19397736 -86.37391663]
[-84.69661713 -93.59056854]
[-69.39147949 -93.69646454]
[-55.79555893 -86.66727448]
[-47.03310013 -74.11824799]
[-45.11766052 -58.93307114]
[-50.48938370 -44.60117722]
[-40.45242310 -33.45400620]
[-30.41546440 -22.30683327]
[-20.37850571 -11.15966225]
[-10.34154701 -0.01248943]
[-0.30458769 11.13468266]
[9.73237133 22.28185463]
[28.47007370 26.75121689]
[32.66515350 46.38443756]
[43.27175522 56.99103928]
[53.87835693 67.59764099]
[64.48495483 78.20424652]
[75.09156036 88.81084442]
[89.39987183 76.67597961]
[106.96900177 77.10375214]
[118.92757416 88.30926514]
[133.59979248 85.19058990]
[148.27200317 82.07191467]
[162.94421387 78.95323944]
[177.61642456 75.83456421]
[192.28863525 72.71588898]
[204.17857361 62.27845001]
[218.23640442 67.20052338]
[232.90861511 64.08184814]
[247.58082581 60.96317291]
[259.47076416 50.52573395]
[273.52859497 55.44780731]
[288.20080566 52.32913208]
[302.87301636 49.21045685]
[317.54522705 46.09178162]
[332.17535400 42.78131866]
[346.76089478 39.27964020]
[358.27749634 27.60486794]
[374.07601929 32.00240707]
[377.90432739 47.94844437]
[365.82418823 59.03906250]
[350.26257324 53.86518860]
[335.67703247 57.36686707]
[329.83572388 62.04548645]
[320.66390991 60.76399612]
[305.99169922 63.88267136]
[291.31945801 67.00134277]
[276.64724731 70.12001801]
[265.80679321 80.33438873]
[250.69949341 75.63538361]
[236.02728271 78.75405884]
[221.35507202 81.87273407]
[210.51460266 92.08710480]
[195.40731812 87.38809967]
[180.73510742 90.50677490]
[166.06288147 93.62545776]
[151.39067078 96.74413300]
[136.71846008 99.86280823]
[122.04624939 102.98148346]
[119.54541016 112.60746765]
[112.88121796 120.57031250]
[103.05197144 125.09759521]
[91.79248810 124.98056793]
[81.26950836 119.86947632]
[75.52925110 133.72767639]
[69.78900146 147.58586121]
[64.04875183 161.44406128]
[58.49038696 175.37620544]
[53.11486816 189.37991333]
[47.73934937 203.38360596]
[42.36383057 217.38731384]
[52.67702866 232.17468262]
[52.14961243 250.03981018]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 11]
[2 10]
[3 9]
[4 8]
[17 117]
[18 116]
[19 115]
[20 114]
[22 113]
[23 112]
[24 111]
[25 110]
[26 64]
[27 63]
[28 62]
[29 61]
[30 60]
[34 58]
[35 57]
[36 56]
[37 55]
[38 54]
[39 53]
[40 52]
[67 105]
[68 104]
[69 103]
[70 102]
[71 101]
[72 100]
[74 98]
[75 97]
[76 96]
[78 94]
[79 93]
[80 92]
[81 91]
[82 89]
[83 88]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
