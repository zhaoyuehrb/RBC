%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 10:21:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCAUGUCUGGGCCCCCAGCCCCUGGGGAGGACCUACUGCUCCCAGGGGCUGAGAGGGGUUCGGGAGCAUAAUGACAAACUGUCGCUGCCCCAGUGGCUGGGUGUGUGUGGGUGGGAUGGGGUGGGGGUCCUGGGCCCCCCGUGUCUUCCCAGGUUUACAAUCAGAGAAUCACAGCUGCUUUAAUAAAUGUUAUUUAUAAUACACGGAA\
) } def
/len { sequence length } bind def

/coor [
[72.02333069 219.32296753]
[80.47777557 205.27111816]
[80.25338745 190.27279663]
[72.32655334 177.66270447]
[79.85655212 163.74832153]
[79.63215637 148.75000000]
[79.40776825 133.75167847]
[69.54663849 121.50711060]
[65.71954346 107.19255829]
[67.88994598 93.44866180]
[54.68101501 100.55668640]
[41.47208023 107.66471863]
[28.26314735 114.77275085]
[15.05421448 121.88077545]
[1.84528136 128.98881531]
[-11.36365128 136.09683228]
[-24.40976906 143.49946594]
[-37.28649902 151.19294739]
[-50.16323090 158.88644409]
[-63.03996277 166.57992554]
[-75.91669464 174.27342224]
[-88.79342651 181.96690369]
[-101.67015839 189.66040039]
[-114.54689026 197.35388184]
[-127.42362213 205.04737854]
[-140.30035400 212.74085999]
[-153.17709351 220.43435669]
[-165.99591064 228.22393799]
[-178.69677734 236.20442200]
[-191.33758545 244.27967834]
[-194.49383545 259.76559448]
[-207.72174072 268.41418457]
[-223.17343140 265.09439087]
[-231.68167114 251.77578735]
[-228.19869995 236.36006165]
[-214.79087830 227.99310303]
[-199.41284180 231.63887024]
[-186.77203369 223.56361389]
[-182.82723999 217.31309509]
[-173.88116455 215.46374512]
[-169.84330750 209.27293396]
[-160.87057495 207.55761719]
[-147.99385071 199.86413574]
[-135.11711121 192.17063904]
[-122.24037933 184.47715759]
[-109.36364746 176.78366089]
[-96.48691559 169.09017944]
[-83.61018372 161.39668274]
[-70.73345184 153.70320129]
[-57.85671997 146.00970459]
[-44.97998810 138.31622314]
[-32.10325623 130.62272644]
[-30.89190865 127.31061554]
[-28.01568794 124.42089081]
[-23.69070625 122.72985840]
[-18.47168159 122.88790131]
[-5.26274872 115.77987671]
[7.94618416 108.67184448]
[21.15511703 101.56381226]
[34.36405182 94.45578766]
[47.57298279 87.34775543]
[60.78191757 80.23972321]
[62.68417740 65.36083221]
[51.68839645 55.15824127]
[40.69261932 44.95565033]
[32.27259064 41.41228867]
[29.61011505 34.51724243]
[18.76819229 24.15130424]
[7.92626905 13.78536415]
[-2.91666794 14.65749454]
[-12.25708008 9.52353764]
[-17.12703705 0.29034677]
[-16.13186646 -9.88029480]
[-26.65883446 -20.56593704]
[-37.18580246 -31.25157738]
[-47.71277237 -41.93721771]
[-58.23973846 -52.62285995]
[-73.66287994 -59.66297150]
[-71.16744995 -76.43226624]
[-54.36270142 -78.67655945]
[-47.55410004 -63.14982986]
[-37.02713013 -52.46418762]
[-26.50016212 -41.77854538]
[-15.97319317 -31.09290504]
[-5.44622421 -20.40726280]
[13.51918983 -16.64125824]
[18.29220772 2.94344091]
[29.13413239 13.30938053]
[39.97605515 23.67531967]
[50.89521027 33.95987320]
[61.89098740 44.16246414]
[72.88676453 54.36505508]
[87.85991669 55.26211929]
[99.99517059 46.44533920]
[112.13043213 37.62855911]
[124.26568604 28.81178093]
[136.40093994 19.99500275]
[148.53619385 11.17822361]
[160.67144775 2.36144519]
[172.80670166 -6.45533371]
[184.87567139 -15.36263657]
[196.87767029 -24.35996437]
[208.53486633 -33.79977036]
[219.83093262 -43.66884995]
[221.04702759 -59.19814301]
[232.64343262 -69.04587555]
[247.44075012 -67.79081726]
[258.73681641 -77.65989685]
[270.03289795 -87.52898407]
[281.32894897 -97.39806366]
[292.62503052 -107.26714325]
[303.92111206 -117.13622284]
[315.06826782 -127.17317963]
[326.06405640 -137.37577820]
[337.05984497 -147.57836914]
[348.05560303 -157.78096008]
[359.05139160 -167.98355103]
[363.90493774 -183.04188538]
[378.49737549 -186.02679443]
[389.49316406 -196.22938538]
[394.34671021 -211.28771973]
[408.93914795 -214.27262878]
[419.93493652 -224.47521973]
[430.93072510 -234.67781067]
[441.92648315 -244.88040161]
[452.92227173 -255.08299255]
[463.91806030 -265.28558350]
[474.91381836 -275.48815918]
[472.92755127 -290.87759399]
[480.39581299 -304.47924805]
[494.44692993 -311.06298828]
[509.67794800 -308.09725952]
[520.23223877 -296.72244263]
[522.05145264 -281.31237793]
[514.43609619 -267.79254150]
[500.31436157 -261.36160278]
[485.11642456 -264.49240112]
[474.12063599 -254.28981018]
[463.12484741 -244.08721924]
[452.12908936 -233.88462830]
[441.13330078 -223.68203735]
[430.13751221 -213.47944641]
[419.14175415 -203.27685547]
[415.07470703 -188.94825745]
[399.69573975 -185.23359680]
[388.69998169 -175.03100586]
[384.63293457 -160.70242310]
[369.25399780 -156.98776245]
[358.25820923 -146.78517151]
[347.26242065 -136.58258057]
[336.26666260 -126.37999725]
[325.27087402 -116.17740631]
[324.20031738 -111.52233887]
[320.19363403 -107.49064636]
[313.79019165 -105.84014893]
[302.49411011 -95.97106934]
[291.19805908 -86.10198975]
[279.90197754 -76.23291016]
[268.60589600 -66.36383057]
[257.30981445 -56.49474716]
[256.56723022 -41.66288376]
[245.25199890 -31.49331665]
[229.70001221 -32.37277985]
[218.40394592 -22.50369835]
[232.96490479 -18.90116501]
[239.36613464 -5.33560896]
[232.88940430 8.19405937]
[218.30857849 11.71538162]
[206.37092590 2.63285995]
[205.87500000 -12.35796165]
[193.87300110 -3.36063313]
[190.40634155 3.16720605]
[181.62348938 5.67992115]
[169.48822021 14.49670029]
[157.35296631 23.31347847]
[145.21771240 32.13025665]
[133.08245850 40.94703674]
[120.94720459 49.76381683]
[108.81195068 58.58059311]
[96.67669678 67.39736938]
[114.25366211 68.62269592]
[129.50041199 79.09839630]
[137.69812012 96.65720367]
[135.77943420 116.82405090]
[143.85469055 129.46487427]
[151.92994690 142.10568237]
[160.00520325 154.74649048]
[168.08045959 167.38731384]
[176.15573120 180.02812195]
[189.77810669 190.12104797]
[183.85067749 206.00505066]
[166.94653320 204.70640564]
[163.51490784 188.10337830]
[155.43965149 175.46257019]
[147.36439514 162.82176208]
[139.28913879 150.18093872]
[131.21386719 137.54013062]
[123.13861084 124.89931488]
[115.95548248 127.05630493]
[112.50867462 141.65492249]
[101.58921814 131.37030029]
[94.40608978 133.52729797]
[94.63047791 148.52561951]
[94.85487366 163.52394104]
[102.79774475 177.20681763]
[95.25170898 190.04841614]
[95.47609711 205.04673767]
[104.34712219 218.83937073]
[96.59833527 233.29234314]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 207]
[3 206]
[5 204]
[6 203]
[7 202]
[10 62]
[11 61]
[12 60]
[13 59]
[14 58]
[15 57]
[16 56]
[17 52]
[18 51]
[19 50]
[20 49]
[21 48]
[22 47]
[23 46]
[24 45]
[25 44]
[26 43]
[27 42]
[28 40]
[29 38]
[30 37]
[63 92]
[64 91]
[65 90]
[67 89]
[68 88]
[69 87]
[73 85]
[74 84]
[75 83]
[76 82]
[77 81]
[93 180]
[94 179]
[95 178]
[96 177]
[97 176]
[98 175]
[99 174]
[100 173]
[101 171]
[102 170]
[103 164]
[104 163]
[107 160]
[108 159]
[109 158]
[110 157]
[111 156]
[112 155]
[113 152]
[114 151]
[115 150]
[116 149]
[117 148]
[119 146]
[120 145]
[122 143]
[123 142]
[124 141]
[125 140]
[126 139]
[127 138]
[128 137]
[184 198]
[185 197]
[186 196]
[187 195]
[188 194]
[189 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
