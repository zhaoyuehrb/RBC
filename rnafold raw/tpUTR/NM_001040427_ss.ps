%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 04:02:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCGCCCUGCACCUUCAGCGGAUUUGGGGAUUAGGCUCUUUUAGGUAACUGGCUUUCCUGCUGGUCCGUGCGGGAAAUUCAGUCUUGAUUUAACCUUAAUUUUACAGCCCUUGGCUUGUGUUAUCGGACAUUCUAAUGCAUAUUUAUAAGAGAAGUUUAACAAGUAUUUAUUCCCAUAA\
) } def
/len { sequence length } bind def

/coor [
[28.00219536 446.65725708]
[17.58733368 450.91717529]
[6.38646746 450.96987915]
[0.07998398 464.57974243]
[-6.22649956 478.18960571]
[-12.53298283 491.79946899]
[-2.80036879 503.55697632]
[0.85868657 518.37500000]
[-2.28232479 533.31146240]
[-11.59975338 545.40063477]
[-25.24361610 552.24224854]
[-40.50491333 552.47790527]
[-54.35350418 546.06079102]
[-64.03974152 534.26501465]
[-67.64041901 519.43273926]
[-64.44061279 504.50875854]
[-55.07564926 492.45635986]
[-41.40494919 485.66854858]
[-26.14284134 485.49298096]
[-19.83635902 471.88311768]
[-13.52987480 458.27325439]
[-7.22339201 444.66342163]
[-17.25688744 428.92767334]
[-15.79923534 410.17221069]
[-3.25706315 395.95120239]
[15.46230698 392.10083008]
[21.05188942 378.18118286]
[26.64147186 364.26153564]
[32.23105621 350.34188843]
[37.82063675 336.42224121]
[43.41022110 322.50259399]
[48.99980164 308.58294678]
[53.36185837 294.23123169]
[56.46355438 279.55541992]
[59.56524658 264.87960815]
[62.66694260 250.20378113]
[65.76863861 235.52796936]
[68.87033844 220.85215759]
[71.84455109 206.14997864]
[74.69107056 191.42254639]
[77.53758240 176.69511414]
[80.38410187 161.96766663]
[83.23061371 147.24023438]
[86.07712555 132.51280212]
[70.53570557 123.26007080]
[60.86515808 106.73117065]
[60.34725571 86.52426147]
[70.12635040 67.62695312]
[88.68410492 55.18554306]
[77.58350372 45.09709549]
[66.48291016 35.00864792]
[55.38231277 24.92020416]
[44.28171539 14.83175755]
[28.86521721 11.27618122]
[24.65035057 -3.00962210]
[13.54975414 -13.09806824]
[2.44915676 -23.18651390]
[-8.65144062 -33.27495956]
[-19.75203705 -43.36340714]
[-30.85263443 -53.45185089]
[-41.95323181 -63.54029846]
[-53.05382919 -73.62874603]
[-68.21862793 -70.34111786]
[-82.40602112 -76.62580872]
[-90.16067505 -90.06623840]
[-88.50076294 -105.49427032]
[-78.06454468 -116.97752380]
[-62.86497879 -120.10044861]
[-48.74659348 -113.66221619]
[-41.13819885 -100.13846588]
[-42.96538162 -84.72933960]
[-31.86478615 -74.64089203]
[-20.76418877 -64.55245209]
[-9.66359138 -54.46400452]
[1.43700576 -44.37555695]
[12.53760242 -34.28711319]
[23.63820076 -24.19866562]
[34.73879623 -14.11021900]
[49.36130905 -11.27623653]
[54.37016296 3.73116016]
[65.47075653 13.81960583]
[76.57135773 23.90805244]
[87.67195129 33.99649811]
[98.77255249 44.08494568]
[93.86751556 29.90958977]
[88.96248627 15.73423576]
[84.05745697 1.55888212]
[79.15242004 -12.61647224]
[68.60894775 -23.28582382]
[62.08557129 -36.79306412]
[60.28435516 -51.68452835]
[63.39914703 -66.35756683]
[71.09472656 -79.23304749]
[82.54289246 -88.92529297]
[96.51156616 -94.39120483]
[111.49741364 -95.04253387]
[125.88764954 -90.80918884]
[138.13356018 -82.14675903]
[146.91722107 -69.98751831]
[151.29333496 -55.64005661]
[150.79093933 -40.64847183]
[145.46408081 -26.62618256]
[135.88304138 -15.07968235]
[132.22512817 -0.53253001]
[128.56719971 14.01462269]
[124.90928650 28.56177521]
[121.25137329 43.10892868]
[131.43577576 32.09629822]
[141.62017822 21.08366966]
[151.80458069 10.07104206]
[158.11964417 -5.66287947]
[174.98686218 -3.95019197]
[178.01040649 12.73196793]
[162.81719971 20.25544357]
[152.63279724 31.26807213]
[142.44839478 42.28070068]
[132.26399231 53.29332733]
[139.49943542 66.43290710]
[154.25100708 63.71430969]
[169.00259399 60.99571228]
[183.75418091 58.27711105]
[198.50576782 55.55851364]
[203.51873779 42.70232773]
[214.14967346 34.07582092]
[227.54890442 31.85340500]
[240.19226074 36.51100540]
[248.80789185 46.72916794]
[263.60443115 44.26700592]
[278.40100098 41.80484390]
[293.03280640 33.24061584]
[305.31283569 44.92980957]
[297.47991943 59.96582031]
[280.86315918 56.60139084]
[266.06658936 59.06355286]
[251.27005005 61.52571106]
[244.41645813 76.42875671]
[229.88955688 84.39845276]
[213.30905151 82.12624359]
[201.22436523 70.31009674]
[186.47277832 73.02869415]
[171.72119141 75.74729156]
[156.96960449 78.46589661]
[142.21803284 81.18449402]
[144.03587341 98.86399078]
[139.08110046 115.05335236]
[128.75201416 127.38915253]
[115.17687988 134.33421326]
[100.80456543 135.35931396]
[97.95804596 150.08674622]
[95.11153412 164.81419373]
[92.26502228 179.54162598]
[89.41850281 194.26905823]
[86.57199097 208.99649048]
[88.01757050 218.04376221]
[83.54615021 223.95385742]
[80.44445038 238.62966919]
[77.34275818 253.30548096]
[74.24105835 267.98129272]
[71.13936615 282.65710449]
[68.03766632 297.33291626]
[79.37613678 287.51257324]
[94.08351135 284.56417847]
[108.33109283 289.25527954]
[118.40985107 300.36468506]
[121.69602203 315.00030518]
[117.33413696 329.35208130]
[106.45970154 339.68392944]
[91.90361786 343.30612183]
[77.45522308 339.27578735]
[66.87580109 328.64208984]
[62.91944885 314.17254639]
[57.32986450 328.09219360]
[51.74028397 342.01184082]
[46.15069962 355.93148804]
[40.56111908 369.85113525]
[34.97153473 383.77078247]
[29.38195419 397.69042969]
[37.10207367 406.22662354]
[41.04914474 416.98330688]
[40.68569946 428.38412476]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 22]
[4 21]
[5 20]
[6 19]
[26 177]
[27 176]
[28 175]
[29 174]
[30 173]
[31 172]
[32 171]
[33 160]
[34 159]
[35 158]
[36 157]
[37 156]
[38 155]
[39 153]
[40 152]
[41 151]
[42 150]
[43 149]
[44 148]
[49 84]
[50 83]
[51 82]
[52 81]
[53 80]
[55 78]
[56 77]
[57 76]
[58 75]
[59 74]
[60 73]
[61 72]
[62 71]
[107 117]
[108 116]
[109 115]
[110 114]
[118 143]
[119 142]
[120 141]
[121 140]
[122 139]
[127 135]
[128 134]
[129 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
