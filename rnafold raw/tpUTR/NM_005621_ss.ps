%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 19:15:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGCUCUCUGAAGGCUUUUUACCCAGCAAUGUCCUCAAUGAGGGUCUUUUCUUUCCCUCACCAAAACCCAGCCUUGCCCGUGGGGAGUAAGAGUUAAUAAACACACUCACGAAAAGUU\
) } def
/len { sequence length } bind def

/coor [
[146.83662415 218.80224609]
[157.43785095 208.08415222]
[149.60037231 195.29455566]
[141.76289368 182.50494385]
[133.92541504 169.71534729]
[126.08792877 156.92573547]
[118.25045013 144.13613892]
[110.41297913 131.34654236]
[88.56746674 130.98924255]
[71.72396088 117.07341003]
[57.45811462 121.70866394]
[43.19226837 126.34391785]
[32.45848083 137.96701050]
[17.96316910 134.54135132]
[3.69732165 139.17660522]
[-10.56852627 143.81185913]
[-11.38025665 158.96789551]
[-17.61573219 172.80564880]
[-28.43165588 183.45365906]
[-42.36526108 189.47189331]
[-57.53214645 190.04640198]
[-71.88111115 185.09953308]
[-83.47157288 175.30026245]
[-90.73603058 161.97389221]
[-92.69200897 146.92269897]
[-89.07498932 132.18222046]
[-80.37413788 119.74599457]
[-67.76617432 111.29592133]
[-52.95622253 107.97480011]
[-37.94721222 110.23178864]
[-24.76898193 117.76164246]
[-15.20378113 129.54600525]
[-0.93793321 124.91075897]
[13.32791424 120.27549744]
[23.04131126 108.98394775]
[38.55701447 112.07807159]
[52.82286072 107.44281769]
[67.08870697 102.80756378]
[66.79091644 82.07418060]
[79.80857849 62.66439056]
[72.65119934 49.48213577]
[65.49381256 36.29987717]
[58.33643341 23.11762047]
[51.17905045 9.93536377]
[44.02167130 -3.24689245]
[28.66615105 -3.56872582]
[15.53711700 -11.53892422]
[8.16621494 -25.01354408]
[8.53617859 -40.36798096]
[16.54749107 -53.47196579]
[30.04514885 -60.80059433]
[45.39834976 -60.38250351]
[58.47715759 -52.33015823]
[65.76344299 -38.80959320]
[65.29723358 -23.45777893]
[57.20392609 -10.40427399]
[64.36130524 2.77798271]
[71.51869202 15.96023941]
[78.67607117 29.14249611]
[85.83345032 42.32475281]
[92.99083710 55.50701141]
[100.36524963 56.87377548]
[95.35824585 42.73411560]
[105.10013580 31.32816887]
[119.84889984 34.06202316]
[124.85559082 48.20178986]
[115.11406708 59.60730743]
[122.48847961 60.97407532]
[133.89457703 51.23235321]
[145.30065918 41.49063492]
[156.70675659 31.74891281]
[153.82896423 16.66203499]
[158.89530945 2.16280532]
[170.54298401 -7.84855604]
[185.63880920 -10.67904377]
[200.12208557 -5.56726980]
[210.09687805 6.11172342]
[212.88003540 21.21634674]
[207.72288513 35.68352890]
[196.01269531 45.62167358]
[180.89941406 48.35747147]
[166.44847107 43.15500259]
[155.04237366 52.89672470]
[143.63629150 62.63844299]
[132.23020935 72.38016510]
[136.65586853 81.91013336]
[138.45729065 91.86907196]
[137.70544434 101.57400513]
[134.64018250 110.40501404]
[129.64321899 117.84484863]
[123.20257568 123.50905609]
[131.04005432 136.29866028]
[138.87753296 149.08825684]
[146.71501160 161.87786865]
[154.55249023 174.66746521]
[162.38996887 187.45707703]
[170.22744751 200.24667358]
[184.59019470 195.66682434]
[199.63165283 194.65798950]
[214.47735596 197.27882385]
[228.26417542 203.37695312]
[240.19055176 212.59783936]
[249.56314087 224.40539551]
[255.83699036 238.11312866]
[258.64736938 252.92411804]
[257.83087158 267.97723389]
[253.43499756 282.39736938]
[245.71528625 295.34609985]
[235.12057495 306.07061768]
[222.26679993 313.94741821]
[207.90127563 318.51855469]
[192.85920715 319.51824951]
[178.01510620 316.88842773]
[164.23197937 310.78195190]
[152.31118774 301.55383301]
[142.94577026 289.74060059]
[136.68023682 276.02905273]
[133.87882996 261.21636963]
[134.70443726 246.16374207]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 97]
[3 96]
[4 95]
[5 94]
[6 93]
[7 92]
[8 91]
[10 38]
[11 37]
[12 36]
[14 34]
[15 33]
[16 32]
[40 61]
[41 60]
[42 59]
[43 58]
[44 57]
[45 56]
[68 85]
[69 84]
[70 83]
[71 82]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
