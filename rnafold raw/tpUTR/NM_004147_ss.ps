%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 05:40:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCUUUCCCUUUUCCCAUCUGCCGGACGAACCACAACAGCGUUCCCCAUGAUCAAGCACCCUACCCCAGUUCUUUCUGGUUUUGGCAGUCACUGGAUCAGGAUCCAGGGGAGGGAGAUGGAGGCACCCAAACUGGAACUUCAUUUGUCUUACCUUGGUGUCACCUUGUAUGUCGAACUGCAUAAAAGAUCUGGUAGGCUGGUCAGCUACAUGCA\
) } def
/len { sequence length } bind def

/coor [
[64.15450287 364.60717773]
[49.71141815 368.65652466]
[34.72922516 367.92587280]
[20.74870300 362.49035645]
[9.20761681 352.90893555]
[1.29286158 340.16702271]
[-2.18160605 325.57495117]
[-0.85846907 310.63342285]
[5.12620020 296.87902832]
[15.15693474 285.72625732]
[28.20216751 278.32205200]
[42.92031860 275.42791748]
[57.79776382 277.34146118]
[71.30449677 283.86587524]
[82.05147552 294.33023071]
[88.93328094 307.65771484]
[89.36955261 292.66406250]
[89.80581665 277.67037964]
[90.13304138 262.67395020]
[90.35120392 247.67555237]
[90.56935883 232.67713928]
[90.78752136 217.67872620]
[91.00567627 202.68031311]
[91.22383881 187.68190002]
[91.44199371 172.68348694]
[91.66014862 157.68507385]
[91.87831116 142.68666077]
[77.45804596 137.14797974]
[65.88665009 126.91452789]
[52.68363190 134.03353882]
[39.48060989 141.15254211]
[26.27759171 148.27154541]
[13.12668991 155.48637390]
[9.05631351 170.75750732]
[-4.66187859 178.60523987]
[-19.88912582 174.37362671]
[-27.59137344 160.57324219]
[-23.19901466 145.39158630]
[-9.31795692 137.83566284]
[5.81641340 142.38829041]
[10.12354660 136.38592529]
[19.15858459 135.06852722]
[32.36160660 127.94952393]
[45.56462860 120.83051300]
[58.76764679 113.71150970]
[56.60387421 97.78899384]
[60.37472916 82.16883850]
[47.96361923 73.74480438]
[39.10926056 71.51596069]
[35.43447876 65.10691071]
[23.14719963 56.50326538]
[10.85991955 47.89962006]
[-1.42736149 39.29597092]
[-13.71464252 30.69232559]
[-33.29275894 35.22183609]
[-49.63430786 24.05991554]
[-52.44826126 4.77990961]
[-65.09912872 -3.27958441]
[-80.34235382 -0.07303508]
[-93.05732727 -8.42672443]
[-96.02033997 -22.97856712]
[-108.67121124 -31.03806114]
[-122.28544617 -24.06669807]
[-137.46101379 -24.84069443]
[-150.12742615 -33.05217361]
[-156.93742371 -46.41181183]
[-156.15129089 -61.28620529]
[-168.80216980 -69.34570312]
[-181.45303345 -77.40519714]
[-194.10391235 -85.46469116]
[-209.47738647 -81.79975128]
[-222.89561462 -90.14999390]
[-226.39781189 -105.56135559]
[-217.90617371 -118.89055634]
[-202.45864868 -122.22962189]
[-189.21997070 -113.59753418]
[-186.04441833 -98.11556244]
[-173.39353943 -90.05606842]
[-160.74266052 -81.99657440]
[-148.09179688 -73.93708038]
[-134.94325256 -80.93573761]
[-119.95727539 -80.40981293]
[-107.16209412 -72.40047455]
[-100.04714203 -58.97384262]
[-100.61171722 -43.68893433]
[-87.96084595 -35.62944031]
[-73.52017212 -39.09391022]
[-60.57558060 -31.10065269]
[-57.03963852 -15.93045616]
[-44.38876724 -7.87096214]
[-35.34189987 -12.70754814]
[-25.02316475 -13.35950851]
[-15.28864098 -9.64246273]
[-7.91718340 -2.16395688]
[-4.28542185 7.77479887]
[-5.11099577 18.40504456]
[7.17628479 27.00869179]
[19.46356583 35.61233902]
[31.75084686 44.21598434]
[44.03812790 52.81963348]
[56.38764954 61.33369446]
[68.79875946 69.75772858]
[84.53174591 59.39402390]
[103.17250061 56.66355515]
[121.21688080 62.07960510]
[130.69055176 50.44992447]
[140.16423035 38.82024384]
[149.63790894 27.19056129]
[159.11157227 15.56088066]
[168.58525085 3.93119955]
[177.97410583 -7.76706743]
[187.27763367 -19.53330231]
[196.58117676 -31.29953766]
[205.88470459 -43.06577301]
[208.37480164 -58.68979263]
[222.33796692 -63.87431717]
[231.64149475 -75.64054871]
[240.94503784 -87.40678406]
[250.24856567 -99.17301941]
[259.55209351 -110.93925476]
[268.85562134 -122.70549011]
[278.15914917 -134.47172546]
[287.46270752 -146.23796082]
[284.36953735 -159.34468079]
[289.31649780 -171.66047668]
[300.29025269 -178.77392578]
[313.16372681 -178.27673340]
[322.63739014 -189.90640259]
[320.78198242 -205.60140991]
[330.63351440 -217.95950317]
[346.34725952 -219.64888000]
[358.60052490 -209.66722107]
[360.12365723 -193.93650818]
[350.01303101 -181.78945923]
[334.26705933 -180.43273926]
[324.79339600 -168.80305481]
[327.21511841 -152.15879822]
[316.64001465 -138.64801025]
[299.22891235 -136.93443298]
[289.92538452 -125.16819000]
[280.62185669 -113.40195465]
[271.31832886 -101.63571930]
[262.01480103 -89.86949158]
[252.71125793 -78.10325623]
[243.40773010 -66.33702087]
[234.10420227 -54.57078171]
[232.27955627 -39.78836441]
[217.65093994 -33.76224136]
[208.34741211 -21.99600601]
[199.04386902 -10.22977066]
[189.74034119 1.53646469]
[188.05807495 8.73020267]
[180.21493530 13.40487480]
[170.74125671 25.03455544]
[161.26757812 36.66423798]
[151.79391479 48.29391861]
[142.32023621 59.92359924]
[132.84655762 71.55327606]
[136.43414307 76.32163239]
[139.33462524 81.53652954]
[141.49328613 87.09963989]
[142.86943054 92.90602875]
[143.43708801 98.84620667]
[143.18557739 104.80815125]
[142.11962891 110.67941284]
[155.80499268 116.82029724]
[169.49037170 122.96118164]
[185.24867249 121.55167389]
[193.69291687 133.82130432]
[207.37829590 139.96218872]
[221.06365967 146.10307312]
[234.74903870 152.24395752]
[248.43441772 158.38485718]
[263.11441040 152.53050232]
[277.60119629 158.84785461]
[283.29998779 173.58891296]
[276.82983398 188.00808716]
[262.02935791 193.55073547]
[247.67938232 186.92849731]
[242.29353333 172.07022095]
[228.60815430 165.92933655]
[214.92277527 159.78845215]
[201.23741150 153.64756775]
[187.55203247 147.50668335]
[172.77259827 149.35543823]
[163.34948730 136.64656067]
[149.66410828 130.50567627]
[135.97874451 124.36478424]
[123.34696198 136.64739990]
[106.87672424 142.90481567]
[106.65856934 157.90322876]
[106.44040680 172.90164185]
[106.22225189 187.90005493]
[106.00408936 202.89846802]
[105.78593445 217.89688110]
[105.56777191 232.89529419]
[105.34961700 247.89370728]
[105.13145447 262.89212036]
[108.13482666 271.51461792]
[104.79947662 278.10665894]
[104.36320496 293.10031128]
[103.92693329 308.09396362]
[107.66487122 313.06890869]
[108.96672821 318.61157227]
[108.00475311 323.68853760]
[105.34020233 327.49349976]
[107.94492340 342.26562500]
[120.20900726 352.60833740]
[119.62525177 368.64077759]
[106.64147949 378.06420898]
[91.21771240 373.64978027]
[85.18575287 358.78387451]
[93.17280579 344.87036133]
[90.56808472 330.09823608]
[85.69020844 344.28295898]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 202]
[17 201]
[18 200]
[19 198]
[20 197]
[21 196]
[22 195]
[23 194]
[24 193]
[25 192]
[26 191]
[27 190]
[29 45]
[30 44]
[31 43]
[32 42]
[33 40]
[47 102]
[48 101]
[50 100]
[51 99]
[52 98]
[53 97]
[54 96]
[57 90]
[58 89]
[61 86]
[62 85]
[67 80]
[68 79]
[69 78]
[70 77]
[105 158]
[106 157]
[107 156]
[108 155]
[109 154]
[110 153]
[111 151]
[112 150]
[113 149]
[114 148]
[116 146]
[117 145]
[118 144]
[119 143]
[120 142]
[121 141]
[122 140]
[123 139]
[127 136]
[128 135]
[165 188]
[166 187]
[167 186]
[169 184]
[170 183]
[171 182]
[172 181]
[173 180]
[206 214]
[207 213]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
