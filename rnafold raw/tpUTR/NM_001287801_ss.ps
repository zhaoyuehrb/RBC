%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 13:31:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACCAACUAAUAAAAUUUAAAGACCACACUGCUUAUCGUGUCUGGGGUUCACCGGAAAUAAAUGAUUCACUGGAACAAUUCUACUGUCAAAACAAAGGGGGUUUACAACUUGUCCUAAGUAUAACAAGGGAUGUAUUUUUUGUUGGGAAGUGACCAUUUCUAGGCUUAUACAUAAUAGCAAUAAUAAAGGCUUUGAACCUACUAA\
) } def
/len { sequence length } bind def

/coor [
[109.68180084 359.49691772]
[96.18162537 366.19335938]
[81.50091553 369.59530640]
[66.43138123 369.51937866]
[51.78569794 365.96963501]
[38.35369492 359.13751221]
[26.85974121 349.39144897]
[17.92369080 337.25704956]
[12.02745438 323.38870239]
[9.48900795 308.53430176]
[10.44524765 293.49493408]
[14.84460449 279.08166504]
[22.44982529 266.07177734]
[32.85077286 255.16687012]
[45.48653412 246.95503235]
[59.67568207 241.87911987]
[74.65300751 240.21287537]
[76.46974945 225.32330322]
[78.28649139 210.43373108]
[80.10323334 195.54415894]
[81.91997528 180.65457153]
[83.73671722 165.76499939]
[85.55345917 150.87542725]
[83.24241638 143.85290527]
[87.51242065 135.77430725]
[89.55492401 120.91401672]
[77.10608673 112.54464722]
[64.65836334 104.17599487]
[51.66798401 111.67599487]
[38.67760086 119.17599487]
[37.18961334 134.62156677]
[26.88194084 146.22033691]
[11.71809387 149.51234436]
[-2.47112036 143.23175049]
[-10.22965813 129.79357910]
[-8.57420349 114.36505890]
[1.85868716 102.87879181]
[17.05735397 99.75147247]
[31.17760086 106.18561554]
[44.16798401 98.68561554]
[57.15836334 91.18561554]
[52.78367233 76.83772278]
[37.81864166 77.86135864]
[22.85361099 78.88499451]
[7.88857937 79.90863037]
[-7.07645226 80.93226624]
[-17.27287674 93.00738525]
[-33.02803802 94.25254822]
[-44.99467850 83.92903137]
[-46.07320023 68.16158295]
[-35.62373734 56.30475998]
[-19.84577179 55.39300156]
[-8.10008812 65.96723938]
[6.86494350 64.94359589]
[21.82997513 63.91996384]
[36.79500580 62.89632797]
[51.76003647 61.87269211]
[38.13623047 55.59639740]
[35.15979385 40.89466858]
[37.17882538 26.03117180]
[43.96915054 12.65614128]
[54.77687454 2.25454879]
[68.40205383 -4.01875877]
[83.33195496 -5.46728182]
[97.90895844 -1.93019772]
[110.51464081 6.19978619]
[119.74945831 18.02003098]
[124.58809662 32.21818542]
[124.49334717 47.21788788]
[119.47652435 61.35234451]
[120.60121918 76.31011963]
[126.78534698 62.64422989]
[132.96946716 48.97833633]
[139.15359497 35.31244659]
[145.33772278 21.64655304]
[151.52183533 7.98066139]
[142.69038391 -4.50744104]
[141.30462646 -19.63941002]
[147.63700867 -33.34223557]
[159.89596558 -41.97784805]
[174.73152161 -43.30889511]
[180.91564941 -56.97478867]
[181.60313416 -66.08653259]
[187.29872131 -70.80004120]
[193.68952942 -84.37050629]
[200.08033752 -97.94097900]
[200.90603638 -107.04124451]
[206.67250061 -111.66777039]
[213.26850891 -125.13968658]
[208.37944031 -139.92936707]
[215.26065063 -153.49783325]
[229.39048767 -158.06768799]
[235.98649597 -171.53959656]
[242.58251953 -185.01152039]
[249.17854309 -198.48342896]
[255.77456665 -211.95535278]
[262.37057495 -225.42726135]
[268.96661377 -238.89918518]
[275.56262207 -252.37109375]
[282.15866089 -265.84301758]
[281.70697021 -270.16873169]
[282.57025146 -274.02447510]
[284.43878174 -277.05422974]
[286.91897583 -279.03927612]
[289.58547974 -279.91372681]
[296.98669434 -292.96063232]
[304.38790894 -306.00756836]
[311.78912354 -319.05447388]
[310.72344971 -339.18267822]
[327.79956055 -348.25039673]
[334.80139160 -361.51593018]
[341.80322266 -374.78146362]
[348.80508423 -388.04699707]
[355.80691528 -401.31250000]
[347.56063843 -414.26992798]
[346.91387939 -429.61520386]
[354.04064941 -443.22052002]
[367.02383423 -451.42614746]
[382.37106323 -452.02478027]
[395.95397949 -444.85540771]
[404.11886597 -431.84655762]
[404.66940308 -416.49752808]
[397.45748901 -402.93716431]
[384.42312622 -394.81307983]
[369.07244873 -394.31066895]
[362.07061768 -381.04513550]
[355.06875610 -367.77960205]
[348.06692505 -354.51409912]
[341.06509399 -341.24856567]
[344.94912720 -331.79309082]
[342.94369507 -321.54577637]
[335.47430420 -313.93841553]
[324.83602905 -311.65328979]
[317.43481445 -298.60635376]
[310.03359985 -285.55944824]
[302.63241577 -272.51251221]
[295.63055420 -259.24697876]
[289.03454590 -245.77507019]
[282.43853760 -232.30316162]
[275.84249878 -218.83123779]
[269.24649048 -205.35932922]
[262.65045166 -191.88740540]
[256.05444336 -178.41549683]
[249.45841980 -164.94357300]
[242.86239624 -151.47166443]
[247.91813660 -137.50831604]
[241.42074585 -123.75191498]
[226.74043274 -118.54366302]
[220.14440918 -105.07174683]
[213.65080261 -91.55016327]
[207.25999451 -77.97969818]
[200.86918640 -64.40923309]
[194.58154297 -50.79066086]
[188.39741516 -37.12477112]
[197.18986511 -25.10151863]
[198.79429626 -10.19240284]
[192.68028259 3.60923290]
[180.39825439 12.55621624]
[165.18772888 14.16478634]
[159.00361633 27.83067703]
[152.81948853 41.49657059]
[146.63536072 55.16246033]
[140.45123291 68.82835388]
[134.26710510 82.49424744]
[138.85903931 96.77409363]
[151.84942627 104.27409363]
[164.83979797 111.77409363]
[178.10069275 104.02526855]
[193.45945740 103.96107483]
[206.78465271 111.59879303]
[214.49186707 124.88391113]
[214.50791931 140.24279785]
[206.82847595 153.54397583]
[193.51927185 161.20953369]
[178.16041565 161.17742920]
[164.88336182 153.45632935]
[157.25956726 140.12315369]
[157.33979797 124.76448059]
[144.34942627 117.26448059]
[131.35903931 109.76448059]
[124.62308502 113.06248474]
[132.42752075 125.87227631]
[140.23196411 138.68206787]
[148.84039307 150.96600342]
[141.12910461 163.83207703]
[126.23758698 162.03131104]
[121.81504822 147.69921875]
[116.48310852 133.67886353]
[111.15116882 119.65850830]
[104.41521454 122.95652008]
[102.37271118 137.81680298]
[100.44303131 152.69216919]
[98.62628937 167.58174133]
[96.80955505 182.47131348]
[94.99281311 197.36090088]
[93.17607117 212.25047302]
[91.35932922 227.14004517]
[89.54258728 242.02961731]
[103.67985535 247.24826050]
[116.23222351 255.58702087]
[126.52274323 266.59619141]
[133.99647522 279.68206787]
[138.25035095 294.13894653]
[139.05497742 309.18716431]
[136.36697388 324.01522827]
[130.33126831 337.82345581]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 198]
[18 197]
[19 196]
[20 195]
[21 194]
[22 193]
[23 192]
[25 191]
[26 190]
[28 41]
[29 40]
[30 39]
[42 57]
[43 56]
[44 55]
[45 54]
[46 53]
[71 164]
[72 163]
[73 162]
[74 161]
[75 160]
[76 159]
[81 154]
[82 153]
[84 152]
[85 151]
[86 150]
[88 149]
[89 148]
[92 145]
[93 144]
[94 143]
[95 142]
[96 141]
[97 140]
[98 139]
[99 138]
[100 137]
[105 136]
[106 135]
[107 134]
[108 133]
[110 129]
[111 128]
[112 127]
[113 126]
[114 125]
[165 180]
[166 179]
[167 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
