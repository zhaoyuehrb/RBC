%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 10:04:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCACUCCAGGACAAGAUAGCUGGGACAGACUCUUGAAUUCCAGCUAUCCGGGAUUGUACAGAUCUCUCUGUGACUGACUUUGUGACUGUCCUGUGGUUUCUCCUGCCAUUGCUUUGUGUUUGGGAGGACAUGAUGGGGGUGAUGGACUGGAAAGAAGGUGCCAAAAGUUCCCUCUGUGUUACUCCCAUUUAGAAAAUAAACACUUUUAAAUGAUCA\
) } def
/len { sequence length } bind def

/coor [
[311.01846313 100.13671112]
[296.86422729 95.02143097]
[284.71270752 86.11605835]
[275.55374146 74.13543701]
[270.13635254 60.04529572]
[255.18301392 61.22754669]
[240.22967529 62.40979385]
[228.15182495 71.12614441]
[213.78475952 64.50059509]
[198.83142090 65.68284607]
[183.87808228 66.86509705]
[168.92474365 68.04734802]
[153.97140503 69.22959137]
[139.01808167 70.41184235]
[124.06473541 71.59409332]
[139.24073792 114.78538513]
[99.16888428 146.63107300]
[86.87133026 155.22001648]
[74.57376862 163.80897522]
[62.27621460 172.39791870]
[49.97865677 180.98687744]
[37.68109894 189.57582092]
[25.38354301 198.16477966]
[13.08598709 206.75372314]
[0.78842974 215.34268188]
[-11.50912762 223.93162537]
[-23.80668449 232.52058411]
[-35.97977066 241.28504944]
[-48.02587891 250.22325134]
[-60.07199097 259.16143799]
[-66.09131622 274.41592407]
[-82.34938812 276.56234741]
[-92.12129974 263.39260864]
[-85.35454559 248.45463562]
[-69.01017761 247.11532593]
[-56.96406937 238.17713928]
[-44.91796112 229.23895264]
[-43.34490204 224.73527527]
[-38.92932510 221.16947937]
[-32.39563751 220.22302246]
[-20.09807968 211.63407898]
[-7.80052185 203.04512024]
[4.49703503 194.45617676]
[16.79459190 185.86721802]
[29.09214783 177.27827454]
[41.38970566 168.68931580]
[53.68726349 160.10035706]
[65.98481750 151.51141357]
[78.28237915 142.92245483]
[90.57993317 134.33351135]
[87.16708374 119.72623444]
[83.75454712 105.12025452]
[68.92438507 102.86942291]
[54.09422302 100.61859131]
[39.26405716 98.36775970]
[24.43389320 96.11693573]
[9.60373020 93.86610413]
[-4.11489248 102.18348694]
[-19.12074852 96.50864410]
[-23.90262794 81.19482422]
[-14.79228401 67.98947144]
[1.22160828 67.02261353]
[11.85456085 79.03593445]
[26.68472481 81.28676605]
[41.51488876 83.53759766]
[56.34505081 85.78842926]
[71.17521667 88.03926086]
[86.00537872 90.29009247]
[89.18314362 83.49657440]
[80.59416199 71.19903564]
[95.53865814 69.90954590]
[98.71642303 63.11603546]
[87.48327637 53.17539215]
[72.02106476 49.82416534]
[67.61749268 35.59539795]
[56.38434601 25.65475655]
[40.94601059 28.14308167]
[27.54667091 20.08133698]
[22.51308632 5.27603245]
[28.22196388 -9.28222084]
[41.97774506 -16.71946144]
[57.28536606 -13.52404976]
[66.91704559 -1.20476329]
[66.32498932 14.42160797]
[77.55813599 24.36225128]
[92.21687317 27.00245476]
[97.42391968 41.94224167]
[108.65706635 51.88288498]
[122.88249207 56.64075470]
[137.83583069 55.45850754]
[152.78916931 54.27625656]
[167.74249268 53.09400940]
[182.69583130 51.91175842]
[197.64916992 50.72951126]
[212.60250854 49.54726028]
[225.74992371 40.74634552]
[239.04742432 47.45645905]
[254.00076294 46.27420807]
[268.95410156 45.09196091]
[272.08999634 30.32557487]
[279.25253296 17.05452919]
[289.85366821 6.35028028]
[303.02819824 -0.92568856]
[317.70431519 -4.19119692]
[332.69076538 -3.18994331]
[346.77359009 1.98839939]
[358.81439209 10.91614342]
[367.84246826 22.86289597]
[373.13302612 36.85530853]
[388.08636475 35.67305756]
[403.03967285 34.49081039]
[417.99301147 33.30855942]
[423.57272339 19.14422607]
[434.70358276 8.84905052]
[449.14154053 4.42570066]
[464.00717163 6.70030785]
[476.36007690 15.16877079]
[483.78042603 28.10723686]
[498.73376465 26.92498779]
[513.68713379 25.74273872]
[528.64044189 24.56048965]
[543.59381104 23.37824059]
[558.40740967 21.02109718]
[572.98919678 17.50372696]
[587.57098389 13.98635578]
[602.15277100 10.46898556]
[616.73449707 6.95161438]
[631.31628418 3.43424368]
[645.87243652 -0.18762484]
[660.40228271 -3.91380477]
[674.93206787 -7.63998461]
[689.46191406 -11.36616421]
[703.99169922 -15.09234428]
[718.49444580 -18.92264366]
[732.96929932 -22.85686493]
[744.25701904 -33.94282150]
[758.56805420 -29.81452179]
[773.04296875 -33.74874496]
[787.51782227 -37.68296814]
[801.99267578 -41.61718750]
[813.28039551 -52.70314789]
[827.59143066 -48.57484436]
[835.47735596 -62.00800705]
[850.21301270 -65.79167175]
[862.97088623 -58.19085312]
[877.44573975 -62.12507629]
[891.92059326 -66.05929565]
[906.36688232 -70.09724426]
[920.78381348 -74.23869324]
[935.20080566 -78.38014984]
[940.37420654 -93.00941467]
[953.17749023 -101.77612305]
[968.68756104 -101.30930328]
[980.94042969 -91.78844452]
[985.22460938 -76.87452698]
[979.89282227 -62.30223846]
[966.99517822 -53.67493820]
[951.49108887 -54.30998993]
[939.34222412 -63.96320343]
[924.92529297 -59.82175064]
[910.50836182 -55.68029404]
[904.95074463 -50.81526947]
[895.85479736 -51.58442688]
[881.37994385 -47.65020752]
[866.90509033 -43.71598434]
[859.75000000 -30.70289612]
[845.12646484 -26.50683594]
[831.52563477 -34.09997559]
[821.27331543 -23.29541779]
[805.92687988 -27.14231682]
[791.45202637 -23.20809555]
[776.97717285 -19.27387238]
[762.50231934 -15.33965111]
[752.24993896 -4.53509521]
[736.90356445 -8.38199425]
[722.42864990 -4.44777203]
[716.80181885 0.33702835]
[707.71789551 -0.56252700]
[693.18811035 3.16365290]
[678.65826416 6.88983250]
[664.12847900 10.61601257]
[649.59863281 14.34219265]
[643.90374756 19.04578590]
[634.83367920 18.01601601]
[620.25189209 21.53338814]
[605.67010498 25.05075836]
[591.08831787 28.56812859]
[576.50659180 32.08549881]
[561.92480469 35.60287094]
[575.97302246 40.86089706]
[586.03479004 51.98571777]
[589.86010742 66.48974609]
[586.59368896 81.12977600]
[576.96588135 92.63219452]
[563.12957764 98.42498779]
[548.17864990 97.21284485]
[535.45623779 89.26680756]
[527.80712891 76.36366272]
[526.94171143 61.38864899]
[533.05352783 47.69027710]
[544.77606201 38.33157730]
[529.82269287 39.51382828]
[514.86938477 40.69607544]
[499.91601562 41.87832642]
[484.96267700 43.06057358]
[479.66772461 57.00434494]
[468.79904175 67.30876923]
[454.47552490 71.89114380]
[439.52188110 69.79157257]
[426.91146851 61.37344360]
[419.17526245 48.26189804]
[404.22192383 49.44414520]
[389.26858521 50.62639618]
[374.31527710 51.80864334]
[371.28927612 66.45858002]
[364.25070190 79.67560577]
[353.76239014 90.38455963]
[340.66830444 97.71157837]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 99]
[6 98]
[7 97]
[9 95]
[10 94]
[11 93]
[12 92]
[13 91]
[14 90]
[15 89]
[17 50]
[18 49]
[19 48]
[20 47]
[21 46]
[22 45]
[23 44]
[24 43]
[25 42]
[26 41]
[27 40]
[28 37]
[29 36]
[30 35]
[52 68]
[53 67]
[54 66]
[55 65]
[56 64]
[57 63]
[72 88]
[73 87]
[75 85]
[76 84]
[109 214]
[110 213]
[111 212]
[112 211]
[118 205]
[119 204]
[120 203]
[121 202]
[122 201]
[123 189]
[124 188]
[125 187]
[126 186]
[127 185]
[128 184]
[129 182]
[130 181]
[131 180]
[132 179]
[133 178]
[134 176]
[135 175]
[137 173]
[138 172]
[139 171]
[140 170]
[142 168]
[145 165]
[146 164]
[147 163]
[148 161]
[149 160]
[150 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
