%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 12:43:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUACUUGUCCCUGGAGGAUUAUCACACCCCAAAUGCAUAAUCUCAUUAAUGAUUGAGGAGAGAAAAGGAUCAGAUUGCUGUUUUCUACAAUGGAGCAGGAUAUUGCUGAAGUCUCCUGGCAUAUGUUACCGAAUCAACUGGCCUUCCAGAGGCUAAGAAAUUUCUGUUAGUAAAAGAUGUUCUUUUU\
) } def
/len { sequence length } bind def

/coor [
[195.00352478 352.49337769]
[189.43557739 338.56506348]
[183.86761475 324.63674927]
[166.64744568 318.46374512]
[159.26464844 301.37854004]
[166.82490540 284.02264404]
[160.79946899 270.28604126]
[154.77404785 256.54943848]
[148.74861145 242.81285095]
[136.55050659 234.26559448]
[138.09266663 218.51972961]
[132.06723022 204.78312683]
[125.92843628 191.09680176]
[119.67671204 177.46171570]
[113.42498016 163.82661438]
[107.17325592 150.19151306]
[100.92152405 136.55641174]
[86.61784363 132.03926086]
[73.66899872 139.61074829]
[60.72014999 147.18222046]
[47.77130508 154.75370789]
[34.82245636 162.32519531]
[21.87360954 169.89666748]
[8.92476273 177.46815491]
[-3.96104693 185.14643860]
[-16.78293800 192.93096924]
[-17.07431602 208.35559082]
[-25.67759132 221.16133118]
[-39.84748840 227.26194763]
[-55.06244659 224.71075439]
[-66.46743011 214.32182312]
[-70.42314148 199.41021729]
[-65.66733551 184.73419189]
[-53.71757126 174.97679138]
[-38.38697433 173.25158691]
[-24.56748199 180.10908508]
[-11.74559021 172.32453918]
[-7.65226793 166.15469360]
[1.35327923 164.51930237]
[14.30212688 156.94783020]
[27.25097275 149.37634277]
[40.19982147 141.80485535]
[53.14866638 134.23338318]
[66.09751892 126.66189575]
[79.04636383 119.09040833]
[76.08960724 104.38471222]
[61.22064590 102.40632629]
[50.62185669 113.73970032]
[35.37932587 116.64570618]
[21.35412025 110.00694275]
[13.93921661 96.37613678]
[15.98579693 80.99461365]
[26.70690918 69.77689362]
[41.98006821 67.03639984]
[55.93243027 73.82692719]
[63.19902802 87.53736877]
[78.06799316 89.51574707]
[88.22721100 78.47988892]
[85.02771759 63.82508850]
[81.82822418 49.17028809]
[78.62873077 34.51548386]
[75.42923737 19.86068153]
[72.22974396 5.20587873]
[57.68870163 0.46188545]
[47.54156876 -10.84883881]
[44.43893814 -25.62178802]
[49.11606598 -39.86890793]
[60.22169495 -49.79516602]
[57.02220154 -64.44996643]
[46.51939011 -76.28218842]
[51.36390686 -90.36692810]
[36.57366943 -93.97390747]
[24.86391640 -103.60556030]
[18.52317619 -117.31012726]
[18.76048851 -132.34690857]
[25.47522926 -145.73426819]
[37.28768539 -154.84094238]
[34.08819199 -169.49574280]
[30.88869667 -184.15054321]
[27.68920326 -198.80534363]
[24.48970795 -213.46014404]
[13.98689651 -225.29237366]
[18.83141518 -239.37710571]
[4.17412901 -243.96618652]
[-6.21310282 -255.27993774]
[-9.53616714 -270.27502441]
[-4.90117741 -284.91784668]
[6.44507837 -295.26956177]
[21.45051384 -298.54562378]
[36.07874298 -293.86474609]
[46.39484406 -282.48611450]
[49.62384033 -267.47048950]
[44.89714432 -252.85699463]
[33.48621750 -242.57661438]
[43.76018143 -231.79258728]
[39.14451218 -216.65963745]
[42.34400558 -202.00483704]
[45.54349899 -187.35003662]
[48.74299622 -172.69523621]
[51.94248962 -158.04043579]
[66.47558594 -154.68563843]
[78.15893555 -145.31500244]
[84.64171600 -131.74539185]
[84.58975220 -116.64514160]
[77.95980835 -103.00949860]
[66.01870728 -93.56642914]
[76.29267120 -82.78240967]
[71.67700195 -67.64945984]
[74.87649536 -52.99465942]
[89.10867310 -48.60025406]
[99.29814911 -37.59886932]
[102.63494110 -22.87704086]
[98.12522888 -8.36637688]
[86.88454437 2.00638437]
[90.08403778 16.66118622]
[93.28353119 31.31598854]
[96.48302460 45.97079086]
[99.68251801 60.62559509]
[102.88201904 75.28039551]
[115.95427704 82.63674927]
[130.14154053 77.76625824]
[144.32879639 72.89576721]
[147.37896729 61.38302994]
[155.53063965 52.86519623]
[166.66929626 49.38404083]
[177.98550415 51.69612885]
[186.68330383 59.11187363]
[201.02384949 54.71312332]
[215.36437988 50.31437302]
[220.27520752 35.59488297]
[232.91960144 26.60049057]
[248.43551636 26.78972244]
[260.85678101 36.08981705]
[265.40716553 50.92469406]
[260.33694458 65.59004974]
[247.59573364 74.44673920]
[232.08277893 74.08920288]
[219.76313782 64.65490723]
[205.42259216 69.05366516]
[191.08206177 73.45241547]
[183.50811768 90.10401154]
[165.87156677 96.05069733]
[149.19929504 87.08302307]
[135.01202393 91.95351410]
[120.82476807 96.82400513]
[124.17869568 112.76731110]
[114.55662537 130.30468750]
[120.80834961 143.93978882]
[127.06008148 157.57489014]
[133.31181335 171.20997620]
[139.56353760 184.84507751]
[145.99645996 191.35598755]
[145.80383301 198.75769043]
[151.82925415 212.49429321]
[164.45834351 222.02407837]
[162.48521423 236.78741455]
[168.51065063 250.52401733]
[174.53607178 264.26062012]
[180.56150818 277.99722290]
[192.28680420 280.08627319]
[201.44869995 287.50668335]
[205.83778381 298.31982422]
[204.46807861 309.78833008]
[197.79592896 319.06881714]
[203.36387634 332.99710083]
[208.93183899 346.92541504]
[217.87069702 347.63568115]
[226.05055237 351.20208740]
[232.59014893 357.20944214]
[236.79504395 364.98138428]
[238.23130798 373.65628052]
[236.77017212 382.28292847]
[232.59902954 389.92468262]
[226.19792175 395.76116943]
[230.59666443 410.10171509]
[234.99542236 424.44226074]
[239.39416504 438.78277588]
[243.79292297 453.12332153]
[248.19166565 467.46386719]
[258.61700439 480.83355713]
[248.65583801 494.55258179]
[232.71543884 488.77847290]
[233.85113525 471.86260986]
[229.45237732 457.52206421]
[225.05363464 443.18154907]
[220.65487671 428.84100342]
[216.25613403 414.50045776]
[211.85737610 400.15994263]
[192.24403381 392.03280640]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 166]
[2 165]
[3 164]
[6 159]
[7 158]
[8 157]
[9 156]
[11 154]
[12 153]
[13 151]
[14 150]
[15 149]
[16 148]
[17 147]
[18 45]
[19 44]
[20 43]
[21 42]
[22 41]
[23 40]
[24 39]
[25 37]
[26 36]
[46 57]
[47 56]
[58 119]
[59 118]
[60 117]
[61 116]
[62 115]
[63 114]
[68 109]
[69 108]
[71 106]
[77 100]
[78 99]
[79 98]
[80 97]
[81 96]
[83 94]
[120 145]
[121 144]
[122 143]
[127 140]
[128 139]
[129 138]
[174 188]
[175 187]
[176 186]
[177 185]
[178 184]
[179 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
