%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 00:04:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCUGGACUCUACCCUCCUCUGAAAGAAGCUGGGGCUUGCUCUGACGGUCUCCACUCCCGUCUGCAGGCAGCCAGGAGGGCAGGAAGCCCUUGCUCUGUGCUGCCAUCCUGCCUCCCUCCUCCAGCCUCAGGGCACUCGGGCCUGGGUGGGAGUCAACGCCUUCCCCUCUGGACUCAAAUAAAACCCAGUGACCUCA\
) } def
/len { sequence length } bind def

/coor [
[284.47152710 517.21160889]
[283.28277588 502.25878906]
[281.97546387 487.31585693]
[280.54962158 472.38378906]
[279.12377930 457.45172119]
[277.69793701 442.51962280]
[279.26388550 429.38888550]
[284.57479858 418.99789429]
[292.25070190 412.25799561]
[300.73477173 409.53939819]
[292.22888184 397.18423462]
[283.72299194 384.82910156]
[275.21707153 372.47393799]
[266.71118164 360.11880493]
[258.20529175 347.76364136]
[243.33581543 347.57107544]
[231.28849792 338.55297852]
[226.80902100 324.00006104]
[231.81556702 309.43157959]
[223.30967712 297.07641602]
[214.80377197 284.72128296]
[206.29788208 272.36611938]
[197.79197693 260.01098633]
[184.19888306 262.81277466]
[170.52180481 260.21194458]
[158.83334351 252.56896973]
[150.91757202 241.01095581]
[147.99771118 227.26548767]
[150.54724121 213.40249634]
[158.21345520 201.52246094]
[149.90466309 189.03392029]
[141.59585571 176.54537964]
[133.28706360 164.05682373]
[124.97825623 151.56828308]
[116.66945648 139.07972717]
[108.36065674 126.59117889]
[100.05185699 114.10263062]
[87.12138367 106.49981689]
[72.16855621 105.31106567]
[57.21574020 104.12231445]
[49.35047913 111.65485382]
[38.85300064 113.56983948]
[29.23900223 109.47170258]
[23.59406662 100.93856812]
[8.68649006 99.27599335]
[-6.22108650 97.61341858]
[-21.12866402 95.95084381]
[-36.03623962 94.28827667]
[-45.68397903 106.32673645]
[-60.31591797 111.21651459]
[-75.26306152 107.39728546]
[-85.75582886 96.08775330]
[-88.44600677 80.89675903]
[-82.47518921 66.67167664]
[-69.74862671 57.95169449]
[-54.32732010 57.51931763]
[-41.13216019 65.51251984]
[-34.37366867 79.38069916]
[-19.46609116 81.04326630]
[-4.55851364 82.70584106]
[10.34906387 84.36841583]
[25.25664139 86.03099060]
[42.34534454 76.99634552]
[58.40448761 89.16949463]
[73.35730743 90.35824585]
[88.31012726 91.54698944]
[97.01098633 79.32835388]
[90.99702454 65.58672333]
[84.98307037 51.84510040]
[78.96910858 38.10347366]
[72.95515442 24.36184502]
[66.94119263 10.62021828]
[60.81840897 -3.07326603]
[54.58718491 -16.71774673]
[48.35596085 -30.36222649]
[41.80179214 -43.85455322]
[34.92839432 -57.18708420]
[28.05499649 -70.51961517]
[21.18159866 -83.85214996]
[14.30820084 -97.18467712]
[7.43480301 -110.51721191]
[-7.34716082 -116.75204468]
[-11.55009270 -132.23477173]
[-1.94986331 -145.08837891]
[14.08905315 -145.45266724]
[24.26297188 -133.04820251]
[20.76733398 -117.39060974]
[27.64073181 -104.05807495]
[34.51412964 -90.72554779]
[41.38752747 -77.39301300]
[48.26092529 -64.06048584]
[55.13432312 -50.72795105]
[58.37447357 -49.31203079]
[61.08638000 -46.25057983]
[62.50150681 -41.81062698]
[62.00043869 -36.59345245]
[68.23166656 -22.94897079]
[74.46289062 -9.30449104]
[80.10724640 -4.52097082]
[80.68282318 4.60626030]
[86.69677734 18.34788704]
[92.71073914 32.08951569]
[98.72469330 45.83114243]
[104.73865509 59.57276917]
[110.75260925 73.31439209]
[112.06295013 58.37173843]
[119.18963623 45.17285919]
[129.89698792 34.66798019]
[143.22950745 27.79454994]
[157.99739075 25.16594696]
[172.88278198 27.01675034]
[186.55728149 33.18178940]
[197.80062866 43.11090851]
[205.60943604 55.91802979]
[209.28688049 70.46025848]
[208.50477600 85.43985748]
[203.33291626 99.52005005]
[194.23283386 111.44432831]
[182.01661682 120.14858246]
[167.77442932 124.85604858]
[152.77723694 125.14663696]
[138.36338806 120.99440765]
[125.81938934 112.77011108]
[112.54040527 105.79383087]
[120.84920502 118.28237915]
[129.15800476 130.77093506]
[137.46681213 143.25947571]
[145.77560425 155.74801636]
[154.08441162 168.23657227]
[162.39320374 180.72511292]
[170.70201111 193.21366882]
[186.79365540 190.84106445]
[202.25450134 195.70356750]
[214.00662231 206.77999878]
[219.73362732 221.81747437]
[218.33715820 237.78948975]
[210.14712524 251.50508118]
[218.65303040 263.86022949]
[227.15892029 276.21536255]
[235.66482544 288.57052612]
[244.17071533 300.92565918]
[259.56661987 301.44812012]
[271.56253052 310.82632446]
[275.68722534 325.29873657]
[270.56042480 339.25775146]
[279.06634521 351.61291504]
[287.57223511 363.96804810]
[296.07812500 376.32321167]
[304.58401489 388.67834473]
[313.08993530 401.03350830]
[324.34786987 410.94604492]
[337.68041992 417.81942749]
[351.01293945 424.69284058]
[364.34548950 431.56622314]
[377.67800903 438.43963623]
[388.79635620 428.13632202]
[402.76931763 422.25991821]
[417.90960693 421.52005005]
[432.38894653 426.00604248]
[444.45892334 435.17620850]
[452.66198730 447.92321777]
[456.00756836 462.70776367]
[454.09173584 477.74453735]
[447.14575195 491.21783447]
[436.00845337 501.50064087]
[422.02468872 507.35128784]
[406.88305664 508.06323242]
[392.41198730 503.55056763]
[380.35894775 494.35815430]
[372.17941284 481.59609985]
[368.86105347 466.80538940]
[370.80462646 451.77215576]
[357.47207642 444.89877319]
[344.13955688 438.02536011]
[330.80700684 431.15197754]
[317.47448730 424.27856445]
[311.26336670 428.48236084]
[319.67098999 440.90460205]
[328.07858276 453.32684326]
[339.91326904 462.54315186]
[334.80499268 476.64654541]
[319.81335449 476.14627075]
[315.65634155 461.73446655]
[307.24874878 449.31222534]
[298.84112549 436.88998413]
[292.63000488 441.09378052]
[294.05584717 456.02587891]
[295.48168945 470.95794678]
[296.90753174 485.89004517]
[300.84219360 494.14569092]
[298.23559570 501.07003784]
[299.42434692 516.02288818]
[311.61126709 526.08538818]
[313.03027344 541.82586670]
[302.83944702 553.90570068]
[287.08486938 555.15820312]
[275.11343384 544.84020996]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 192]
[2 191]
[3 189]
[4 188]
[5 187]
[6 186]
[10 150]
[11 149]
[12 148]
[13 147]
[14 146]
[15 145]
[19 141]
[20 140]
[21 139]
[22 138]
[23 137]
[30 131]
[31 130]
[32 129]
[33 128]
[34 127]
[35 126]
[36 125]
[37 124]
[38 66]
[39 65]
[40 64]
[44 62]
[45 61]
[46 60]
[47 59]
[48 58]
[67 105]
[68 104]
[69 103]
[70 102]
[71 101]
[72 100]
[73 98]
[74 97]
[75 96]
[76 92]
[77 91]
[78 90]
[79 89]
[80 88]
[81 87]
[151 176]
[152 175]
[153 174]
[154 173]
[155 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
