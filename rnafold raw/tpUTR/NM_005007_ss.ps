%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 14:12:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUAGGGAAGAAGCAAGAAACUUCGGGGCUGCAGCCUCAGGAUGAGGCAGAAGGAAGGGUAAGGGAAAGGAUGGGGACCACAAGGAAGAGCCAGGUGCUGCUCAGCAGAGGAUAUGGGUGGGAGCGAAAGUUGUAACAAGUGGGGGUGGGGGGUGCGGGCCGCCACCACUGCUCCUUGACUCUGCCGUUUCCUAAUAAGACCUGGUUCCACAUCUCA\
) } def
/len { sequence length } bind def

/coor [
[-119.07936096 262.13961792]
[-131.37692261 270.72857666]
[-143.67446899 279.31750488]
[-155.97203064 287.90646362]
[-166.07278442 298.99588013]
[-173.47941589 312.03970337]
[-165.82566833 325.28234863]
[-165.82798767 340.47763062]
[-173.38562012 353.54470825]
[-186.38218689 361.02438354]
[-201.27731323 360.99462891]
[-208.68394470 374.03848267]
[-216.09057617 387.08233643]
[-223.49720764 400.12615967]
[-217.87437439 414.71786499]
[-222.99526978 429.49319458]
[-236.44197083 437.47570801]
[-251.86534119 434.89627075]
[-261.98297119 422.97286987]
[-262.01757812 407.33532715]
[-251.95285034 395.36721802]
[-236.54104614 392.71954346]
[-229.13441467 379.67568970]
[-221.72778320 366.63183594]
[-214.32115173 353.58801270]
[-221.97851562 340.81185913]
[-222.21430969 325.81851196]
[-214.86509705 312.63308716]
[-201.81712341 304.84545898]
[-186.52325439 304.63308716]
[-179.11662292 291.58923340]
[-184.00587463 285.90194702]
[-198.74574280 288.68338013]
[-193.78434753 274.52734375]
[-198.67359924 268.84005737]
[-212.68115234 274.20553589]
[-226.68872070 279.57101440]
[-240.69627380 284.93649292]
[-254.70382690 290.30194092]
[-268.71139526 295.66741943]
[-281.33978271 306.97933960]
[-295.70553589 297.97592163]
[-291.03079224 281.67919922]
[-274.07687378 281.65988159]
[-260.06930542 276.29440308]
[-246.06175232 270.92892456]
[-232.05418396 265.56344604]
[-218.04663086 260.19796753]
[-204.03906250 254.83250427]
[-218.90420532 252.82556152]
[-224.04797363 238.73507690]
[-223.64508057 223.74049377]
[-217.75207520 209.94656372]
[-207.19616699 199.28950500]
[-193.45906067 193.26525879]
[-178.46899414 192.71940613]
[-164.33010864 197.72857666]
[-153.02703857 207.58964539]
[-146.14639282 220.91844177]
[-144.65397644 235.84400940]
[-148.75929260 250.27130127]
[-157.88662720 262.17562866]
[-164.56097412 275.60891724]
[-152.26342773 267.01995850]
[-139.96586609 258.43099976]
[-127.66831207 249.84205627]
[-127.57591248 234.97163391]
[-118.63920593 222.86381531]
[-104.11679077 218.28639221]
[-89.51490021 223.19467163]
[-77.21734619 214.60571289]
[-64.91979218 206.01676941]
[-52.62223434 197.42781067]
[-40.32467651 188.83886719]
[-28.08903885 180.16192627]
[-15.91595364 171.39746094]
[-3.74286795 162.63298035]
[8.43021774 153.86851501]
[20.60330391 145.10403442]
[32.77639008 136.33956909]
[44.94947433 127.57509613]
[45.87480164 124.17852020]
[48.48781586 121.05998993]
[52.64060974 119.00629425]
[57.84014893 118.70877075]
[70.37902832 110.47612762]
[67.72971344 94.83145905]
[73.13393402 79.25338745]
[85.82221222 67.77409363]
[103.07047272 63.66007614]
[93.62081909 50.97092438]
[99.65511322 37.35341263]
[97.72389221 22.47825241]
[95.79267120 7.60309267]
[79.41111755 1.22694802]
[68.57347870 -12.50006580]
[66.19680786 -29.73746490]
[72.84693146 -45.72055435]
[86.60703278 -56.07746887]
[84.24988556 -70.89110565]
[81.89274597 -85.70475006]
[79.53559875 -100.51838684]
[71.07537842 -115.21059418]
[82.85137939 -127.40739441]
[97.83145142 -119.46800995]
[94.34923553 -102.87552643]
[96.70638275 -88.06188965]
[99.06352234 -73.24825287]
[101.42066956 -58.43461227]
[113.63053894 -55.21379852]
[123.75386810 -47.58789444]
[130.26675415 -36.66065598]
[132.17213440 -24.03599167]
[129.15226746 -11.58256721]
[121.62107086 -1.15722752]
[110.66783142 5.67187023]
[112.59905243 20.54702950]
[114.53027344 35.42218781]
[123.84178925 47.04737473]
[117.94563293 61.72885513]
[130.18127441 70.40579224]
[144.85794067 67.30816650]
[159.53462219 64.21054077]
[174.21128845 61.11291504]
[188.88795471 58.01529312]
[203.56463623 54.91766739]
[218.24130249 51.82004166]
[226.88464355 38.86124039]
[241.81300354 35.92888260]
[254.11396790 44.24884033]
[268.79064941 41.15121460]
[276.46905518 30.79242897]
[288.75274658 28.51206207]
[298.96035767 34.99594116]
[313.67996216 32.10916901]
[318.89752197 28.06419182]
[324.52954102 27.36220932]
[328.86288452 29.35708618]
[343.65924072 26.89375305]
[358.45559692 24.43041992]
[373.25195312 21.96708679]
[385.59411621 12.06853771]
[399.41925049 17.61069107]
[414.21557617 15.14735699]
[426.55776978 5.24880791]
[440.38287354 10.79096127]
[455.17922974 8.32762814]
[469.97558594 5.86429453]
[484.77194214 3.40096092]
[499.56829834 0.93762767]
[514.34655762 -1.63176942]
[529.10607910 -4.30709839]
[543.84600830 -7.08822107]
[558.56561279 -9.97499466]
[573.28521729 -12.86176872]
[585.28137207 -24.04317474]
[600.88153076 -18.98679924]
[604.03759766 -2.89421034]
[591.50280762 7.67991829]
[576.17199707 1.85782850]
[561.45239258 4.74460220]
[546.73278809 7.63137579]
[540.77752686 12.00063038]
[531.78143311 10.45239449]
[517.02191162 13.12772274]
[511.00457764 17.41110039]
[502.03161621 15.73397827]
[487.23526001 18.19731140]
[472.43890381 20.66064453]
[457.64257812 23.12397766]
[442.84622192 25.58731079]
[431.56237793 35.30966568]
[416.67892456 29.94370651]
[401.88256836 32.40703964]
[390.59872437 42.12939453]
[375.71527100 36.76343536]
[360.91894531 39.22676849]
[346.12258911 41.69010162]
[331.32623291 44.15343475]
[316.56674194 46.82876587]
[301.84713745 49.71553802]
[289.25909424 61.94649506]
[271.88827515 55.82788849]
[257.21160889 58.92551422]
[249.32200623 71.50684357]
[234.48190308 74.85735321]
[221.33892822 66.49671173]
[206.66226196 69.59433746]
[191.98558044 72.69196320]
[177.30891418 75.78958893]
[162.63224792 78.88721466]
[147.95556641 81.98484039]
[133.27890015 85.08246613]
[135.66337585 95.81362915]
[134.72624207 106.59584045]
[130.65576172 116.44035339]
[123.92283630 124.47513580]
[115.22878265 130.02203369]
[105.43323517 132.65350342]
[95.46961212 132.22438049]
[86.25622559 128.87623596]
[78.61167908 123.01500702]
[66.07279205 131.24765015]
[53.71394730 139.74818420]
[41.54086304 148.51264954]
[29.36777687 157.27713013]
[17.19469070 166.04159546]
[5.02160454 174.80607605]
[-7.15148115 183.57054138]
[-19.32456779 192.33500671]
[-24.45646286 199.88421631]
[-31.73572350 201.13641357]
[-44.03327942 209.72537231]
[-56.33083725 218.31433105]
[-68.62839508 226.90327454]
[-80.92594910 235.49223328]
[-81.34464264 250.89128113]
[-90.64182281 262.95013428]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 66]
[2 65]
[3 64]
[4 63]
[5 31]
[6 30]
[11 25]
[12 24]
[13 23]
[14 22]
[35 49]
[36 48]
[37 47]
[38 46]
[39 45]
[40 44]
[70 216]
[71 215]
[72 214]
[73 213]
[74 212]
[75 210]
[76 209]
[77 208]
[78 207]
[79 206]
[80 205]
[81 204]
[85 203]
[86 202]
[90 120]
[92 118]
[93 117]
[94 116]
[99 109]
[100 108]
[101 107]
[102 106]
[121 193]
[122 192]
[123 191]
[124 190]
[125 189]
[126 188]
[127 187]
[130 184]
[131 183]
[134 181]
[135 180]
[138 179]
[139 178]
[140 177]
[141 176]
[143 174]
[144 173]
[146 171]
[147 170]
[148 169]
[149 168]
[150 167]
[151 165]
[152 164]
[153 162]
[154 161]
[155 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
