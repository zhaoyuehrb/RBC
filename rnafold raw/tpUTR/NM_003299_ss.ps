%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 01:32:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAUACUCUCACCAUUUGGAUCCUGUGUGGAGAGGGAAUGUGAAAUUUACAUCAUUUCUUUUUGGGAGAGACUUGUUUUGGAUGCCCCCUAAUCCCCUUCUCCCCUGCACUGUAAAAUGUGGGAUUAUGGGUCACAGGAAAAAGUGGGUUUUUUAGUUGAAUUUUUUUUAACAUUCCUCAUGAAUGUAAAUUUGUACUAUUUAACUGACUAUUCUUGAUGUAAAAUCUUGUCAUGUGUAUAAAAAUAAAAAAGA\
UCCCAAAUACUCA\
) } def
/len { sequence length } bind def

/coor [
[307.46801758 287.22833252]
[296.43569946 297.54650879]
[282.94268799 304.33734131]
[268.08279419 307.05032349]
[253.06065369 305.46551514]
[239.09400940 299.71139526]
[227.31510925 290.25442505]
[218.67880249 277.86126709]
[213.88519287 263.53652954]
[213.32289124 248.44148254]
[217.03746033 233.79980469]
[224.72779846 220.79843140]
[235.77046204 210.49134827]
[249.27027893 203.71406555]
[264.13290405 201.01602173]
[265.70663452 186.09880066]
[267.28036499 171.18159485]
[268.85409546 156.26437378]
[270.42782593 141.34715271]
[272.00155640 126.42993927]
[273.48815918 111.50378418]
[274.88757324 96.56920624]
[276.28698730 81.63462830]
[276.80041504 77.43105316]
[277.99105835 73.61007690]
[279.77569580 70.26747894]
[264.78210449 69.82958984]
[249.78848267 69.39170074]
[234.79487610 68.95380402]
[219.79589844 68.77862549]
[204.79615784 68.86621857]
[189.79641724 68.95381165]
[174.79666138 69.04139709]
[159.79692078 69.12899017]
[144.79718018 69.21657562]
[129.79743958 69.30416870]
[114.79769135 69.39176178]
[133.85963440 108.55024719]
[98.40979004 135.81214905]
[85.21987915 142.95541382]
[72.02996826 150.09867859]
[58.84005737 157.24194336]
[45.65014648 164.38520813]
[32.46023560 171.52847290]
[21.41182518 184.38806152]
[5.99629116 177.33131409]
[8.50981236 160.56471252]
[25.31696892 158.33856201]
[38.50688171 151.19529724]
[51.69679260 144.05203247]
[64.88670349 136.90876770]
[78.07661438 129.76550293]
[91.26652527 122.62223053]
[87.20124054 108.18362427]
[72.22195435 108.97158051]
[61.67649460 120.43591309]
[46.47414017 121.02162933]
[35.60963440 110.89749146]
[20.63034439 111.68544769]
[5.65105391 112.47340393]
[-9.32823658 113.26136017]
[-24.30752563 114.04931641]
[-39.28681564 114.83726501]
[-54.78646469 121.70729828]
[-65.67873383 108.71519470]
[-56.20965195 94.65202332]
[-40.07477188 99.85797882]
[-25.09548187 99.07002258]
[-10.11619091 98.28206635]
[4.86309862 97.49411011]
[19.84238815 96.70616150]
[34.82167816 95.91820526]
[44.56404495 84.71008301]
[59.74394989 83.69760132]
[71.43399811 93.99228668]
[86.41329193 93.20433044]
[88.06388855 85.88822174]
[73.43171692 82.58676910]
[76.73341370 67.95465088]
[91.36509705 71.25598907]
[93.01570129 63.93988037]
[79.82579041 56.79661560]
[66.63587952 49.65335083]
[53.44596481 42.51008606]
[39.50627518 49.32658005]
[24.22803879 46.61454010]
[13.48605347 35.41680145]
[11.41083145 20.03911972]
[18.80033684 6.39452982]
[32.81315231 -0.27034575]
[48.06106949 2.60727382]
[58.68095016 13.92088509]
[60.58922958 29.32017326]
[73.77914429 36.46343994]
[86.96905518 43.60670471]
[100.15896606 50.74996948]
[114.71009827 54.39201736]
[129.70983887 54.30442429]
[144.70959473 54.21683502]
[159.70933533 54.12924576]
[174.70907593 54.04165268]
[189.70881653 53.95406342]
[204.70855713 53.86647415]
[219.70831299 53.77888489]
[224.15440369 51.17926407]
[228.70072937 50.58112717]
[232.57588196 51.69257355]
[235.23277283 53.96019745]
[250.22637939 54.39809036]
[265.21997070 54.83598328]
[280.21359253 55.27387619]
[294.65219116 51.20859146]
[307.21475220 43.01208878]
[319.77728271 34.81558609]
[332.33981323 26.61908531]
[335.63900757 9.42257881]
[350.07965088 0.13062608]
[366.43972778 4.09502554]
[378.90570068 -4.24762964]
[391.37164307 -12.59028435]
[403.78866577 -21.00559044]
[416.15634155 -29.49325943]
[428.52404785 -37.98093033]
[440.89172363 -46.46860123]
[453.25939941 -54.95626831]
[465.62707520 -63.44393921]
[477.99475098 -71.93161011]
[484.99505615 -86.11985779]
[499.86694336 -86.94202423]
[512.23461914 -95.42969513]
[519.23492432 -109.61794281]
[534.10681152 -110.44010162]
[546.47448730 -118.92777252]
[558.84216309 -127.41544342]
[571.20983887 -135.90312195]
[576.49090576 -143.31216431]
[583.77191162 -144.41670227]
[596.23785400 -152.75935364]
[608.70379639 -161.10200500]
[621.16973877 -169.44467163]
[622.65423584 -180.17526245]
[629.64013672 -188.16571045]
[639.65423584 -190.95217896]
[649.34576416 -187.85169983]
[662.00317383 -195.90092468]
[674.66058350 -203.95014954]
[682.15356445 -217.88449097]
[697.04516602 -218.18519592]
[709.70257568 -226.23442078]
[722.35998535 -234.28366089]
[735.01733398 -242.33288574]
[736.10144043 -257.69943237]
[745.91131592 -269.34503174]
[760.52465820 -272.93872070]
[774.28717041 -267.30578613]
[786.94458008 -275.35501099]
[799.60198975 -283.40423584]
[812.25939941 -291.45346069]
[824.86956787 -299.57647705]
[837.43212891 -307.77297974]
[849.99468994 -315.96948242]
[862.55718994 -324.16598511]
[875.11975098 -332.36248779]
[887.68231201 -340.55899048]
[900.24481201 -348.75549316]
[885.76452637 -352.66967773]
[878.19927979 -365.62219238]
[881.90368652 -380.15756226]
[894.74542236 -387.90933228]
[909.33288574 -384.41552734]
[917.26953125 -371.68722534]
[913.98645020 -357.04995728]
[927.09204102 -364.34677124]
[940.19763184 -371.64358521]
[953.30322266 -378.94039917]
[966.40881348 -386.23721313]
[979.51440430 -393.53402710]
[985.27264404 -408.50808716]
[1000.61285400 -413.20465088]
[1013.76733398 -404.02096558]
[1014.64501953 -388.00192261]
[1002.57269287 -377.43600464]
[986.81121826 -380.42846680]
[973.70562744 -373.13162231]
[960.60003662 -365.83480835]
[947.49444580 -358.53799438]
[934.38885498 -351.24118042]
[921.28326416 -343.94436646]
[908.44134521 -336.19296265]
[895.87878418 -327.99645996]
[883.31622314 -319.79995728]
[870.75372314 -311.60345459]
[858.19116211 -303.40695190]
[845.62866211 -295.21044922]
[833.06610107 -287.01394653]
[829.19512939 -280.74911499]
[820.30865479 -278.79608154]
[807.65124512 -270.74682617]
[794.99383545 -262.69760132]
[782.33642578 -254.64837646]
[781.60119629 -239.79585266]
[772.14935303 -228.08573914]
[757.44262695 -224.14048767]
[743.06658936 -229.67547607]
[730.40917969 -221.62625122]
[717.75177002 -213.57702637]
[705.09436035 -205.52778625]
[698.50671387 -192.16918945]
[682.70983887 -191.29275513]
[670.05242920 -183.24351501]
[657.39501953 -175.19429016]
[649.68835449 -157.43841553]
[629.51239014 -156.97871399]
[617.04644775 -148.63604736]
[604.58050537 -140.29339600]
[592.11456299 -131.95074463]
[579.69750977 -123.53543854]
[567.32983398 -115.04776764]
[554.96215820 -106.56009674]
[542.59448242 -98.07242584]
[536.47882080 -84.49127197]
[520.72229004 -83.06201172]
[508.35461426 -74.57434082]
[502.23892212 -60.99319077]
[486.48242188 -59.56393051]
[474.11474609 -51.07626343]
[461.74707031 -42.58859253]
[449.37939453 -34.10092163]
[437.01171875 -25.61325264]
[424.64401245 -17.12558174]
[412.27633667 -8.63791275]
[408.55273438 -2.28440022]
[399.71429443 -0.12432647]
[387.24835205 8.21832848]
[374.78237915 16.56098366]
[374.07681274 29.40649033]
[365.98928833 39.66005325]
[353.28903198 43.44978333]
[340.53631592 39.18162155]
[327.97378540 47.37812424]
[315.41122437 55.57462692]
[302.84869385 63.77112961]
[316.40344238 57.34701157]
[331.39971924 57.68037415]
[344.65560913 64.70047760]
[353.35836792 76.91776276]
[355.66140747 91.73990631]
[351.07604980 106.02187347]
[340.57528687 116.73325348]
[326.38714600 121.60124207]
[311.52221680 119.59293365]
[299.13455200 111.13445282]
[291.85263062 98.02057648]
[291.22158813 83.03404236]
[289.82217407 97.96862793]
[288.42276001 112.90320587]
[290.73236084 121.70374298]
[286.91879272 128.00367737]
[285.34506226 142.92088318]
[283.77130127 157.83810425]
[282.19757080 172.75532532]
[280.62384033 187.67254639]
[279.05010986 202.58975220]
[293.02252197 208.32983398]
[304.81091309 217.77496338]
[313.45965576 230.15945435]
[318.26766968 244.47937012]
[318.84512329 259.57385254]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 263]
[16 262]
[17 261]
[18 260]
[19 259]
[20 258]
[21 256]
[22 255]
[23 254]
[26 111]
[27 110]
[28 109]
[29 108]
[30 104]
[31 103]
[32 102]
[33 101]
[34 100]
[35 99]
[36 98]
[37 97]
[39 53]
[40 52]
[41 51]
[42 50]
[43 49]
[44 48]
[54 76]
[55 75]
[58 72]
[59 71]
[60 70]
[61 69]
[62 68]
[63 67]
[81 96]
[82 95]
[83 94]
[84 93]
[112 242]
[113 241]
[114 240]
[115 239]
[118 235]
[119 234]
[120 233]
[121 231]
[122 230]
[123 229]
[124 228]
[125 227]
[126 226]
[127 225]
[129 223]
[130 222]
[132 220]
[133 219]
[134 218]
[135 217]
[137 216]
[138 215]
[139 214]
[140 213]
[144 211]
[145 210]
[146 209]
[148 207]
[149 206]
[150 205]
[151 204]
[155 200]
[156 199]
[157 198]
[158 197]
[159 195]
[160 194]
[161 193]
[162 192]
[163 191]
[164 190]
[165 189]
[172 188]
[173 187]
[174 186]
[175 185]
[176 184]
[177 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
