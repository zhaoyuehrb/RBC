%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 19:37:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCCUGCCAGCAGAACCAGCAGCAGUGCCAGCCUCCGCCCAAGUGCCCUGCAAAGAGCCCAGCACAGUGUCUGCCUCCAGCUUCCUCCAGCUGUGCCCCAAGCUCUGGGGGCUGUGGGCCCAGCUCCGAGCGCAGCUGCUGCCUGAGUCACCACAGAUGCCGCAGGUCUCACCGUUGCCGUUGCCAGAGCUCCAACUCCUGUGACAGGGGAAGUGGUCAGCAAGGCGGGAGCUCCAGCUGUGGCCACAGUUCU\
GCGGGCUGCUGCUGA\
) } def
/len { sequence length } bind def

/coor [
[117.73208618 251.69952393]
[111.02875519 265.45901489]
[98.69201660 274.51791382]
[83.55677795 276.79452515]
[69.10099030 271.76571655]
[58.64649963 260.58706665]
[54.59566879 245.82734680]
[57.87934494 230.87823486]
[67.74296570 219.17492676]
[81.91994476 213.40675354]
[83.30906677 198.47120667]
[84.69818115 183.53567505]
[86.08730316 168.60012817]
[87.47641754 153.66459656]
[88.86553955 138.72904968]
[76.17226410 132.49853516]
[66.41268921 122.26674652]
[60.78842926 109.29345703]
[59.99195099 95.17594147]
[45.69420624 90.64002228]
[31.39646339 86.10410309]
[17.09872055 81.56819153]
[2.80097771 77.03227234]
[-11.49676514 72.49635315]
[-25.79450798 67.96044159]
[-41.28831482 71.16240692]
[-51.08001328 59.93868637]
[-65.37775421 55.40277100]
[-79.67549896 50.86685562]
[-93.97324371 46.33093643]
[-108.29703522 41.87797165]
[-122.69609833 37.67473984]
[-137.14291382 33.63871002]
[-151.58972168 29.60267830]
[-161.70895386 38.93167114]
[-175.00871277 42.02695084]
[-187.99989319 38.18604279]
[-197.32815552 28.51192665]
[-200.64006042 15.59906387]
[-215.03910828 11.39583302]
[-229.43817139 7.19260120]
[-243.83723450 2.98936963]
[-258.23629761 -1.21386170]
[-272.65945435 -5.33356190]
[-287.10629272 -9.36959267]
[-301.55310059 -13.40562248]
[-316.92620850 -9.66686058]
[-327.10223389 -20.54332733]
[-341.54904175 -24.57935715]
[-355.99584961 -28.61538887]
[-350.82513428 -14.53478241]
[-358.50759888 -1.65146911]
[-373.35351562 0.49297950]
[-384.36776733 -9.68964672]
[-383.39306641 -24.65794373]
[-371.14978027 -33.32642746]
[-385.33853149 -38.19258881]
[-399.52728271 -43.05875397]
[-413.71603394 -47.92491913]
[-427.90475464 -52.79108047]
[-442.46136475 -41.93119049]
[-460.46475220 -42.01076126]
[-474.67358398 -52.80804443]
[-479.48693848 -69.82859039]
[-493.78469849 -74.36450195]
[-508.08242798 -78.90042114]
[-522.38018799 -83.43634033]
[-536.67791748 -87.97225189]
[-550.97564697 -92.50817108]
[-565.27337646 -97.04409027]
[-578.96240234 -83.46757507]
[-597.58258057 -78.79541779]
[-615.90179443 -84.25384521]
[-628.81628418 -98.23451233]
[-632.77313232 -116.76717377]
[-647.26580811 -120.63545990]
[-661.81597900 -113.87738800]
[-676.10662842 -121.16823578]
[-679.17523193 -136.91510010]
[-668.66772461 -149.03831482]
[-652.64465332 -148.23800659]
[-643.39752197 -135.12808228]
[-628.90484619 -131.25979614]
[-622.54602051 -140.19859314]
[-613.75689697 -146.80702209]
[-603.35388184 -150.45121765]
[-592.30920410 -150.77357483]
[-581.66033936 -147.72772217]
[-572.41247559 -141.58447266]
[-565.44348145 -132.90773010]
[-561.42083740 -122.50286102]
[-560.73748779 -111.34183502]
[-546.43975830 -106.80591583]
[-532.14202881 -102.26999664]
[-517.84423828 -97.73408508]
[-503.54650879 -93.19816589]
[-489.24877930 -88.66224670]
[-474.95101929 -84.12633514]
[-466.38790894 -92.67424774]
[-454.94003296 -96.80799103]
[-442.74777222 -95.68970490]
[-432.11849976 -89.46965790]
[-425.08972168 -79.26937103]
[-423.03860474 -66.97982788]
[-408.84985352 -62.11366272]
[-394.66110229 -57.24749756]
[-380.47238159 -52.38133240]
[-366.28363037 -47.51517105]
[-351.95983887 -43.06220245]
[-337.51303101 -39.02617264]
[-323.06619263 -34.99014282]
[-308.72644043 -39.01758957]
[-297.51705933 -27.85243797]
[-283.07025146 -23.81640625]
[-268.62344360 -19.78037643]
[-261.36206055 -21.00289726]
[-254.03305054 -15.61291885]
[-239.63400269 -11.40968704]
[-225.23493958 -7.20645571]
[-210.83587646 -3.00322437]
[-196.43682861 1.20000708]
[-183.76377869 -9.25997829]
[-167.18641663 -10.10041046]
[-153.24360657 -0.79095328]
[-147.55369568 15.15586281]
[-133.10687256 19.19189453]
[-118.66006470 23.22792435]
[-114.16120148 21.72502518]
[-108.67103577 23.00709724]
[-103.92716980 27.52860641]
[-96.63941193 26.47475624]
[-89.43732452 32.03319550]
[-75.13958740 36.56911087]
[-60.84184265 41.10502625]
[-46.54409790 45.64094543]
[-32.07296371 42.11454010]
[-21.25859261 53.66269684]
[-6.96084881 58.19861221]
[7.33689451 62.73452759]
[21.63463783 67.27044678]
[35.93238068 71.80636597]
[50.23012543 76.34227753]
[64.52787018 80.87819672]
[82.60566711 63.64958191]
[107.36341095 60.38061523]
[112.80110931 46.40093231]
[118.23880768 32.42125320]
[109.73256683 19.44344521]
[110.51266479 3.94599128]
[120.27913666 -8.11202049]
[135.27658081 -12.09403896]
[149.73815918 -6.46889639]
[158.10311890 6.60042524]
[157.15493774 22.08850479]
[147.25823975 34.03985977]
[132.21849060 37.85894775]
[126.78079224 51.83863068]
[121.34309387 65.81831360]
[129.09109497 72.11409760]
[135.05361938 80.12139130]
[138.86471558 89.34874725]
[140.29048157 99.22982788]
[155.07905579 101.73935699]
[169.86764526 104.24889374]
[184.65623474 106.75842285]
[199.44480896 109.26795197]
[214.23339844 111.77748871]
[229.02198792 114.28701782]
[232.96385193 112.66833496]
[236.83064270 112.39395905]
[240.21469116 113.27913666]
[242.80830383 115.02716827]
[244.43122864 117.27094269]
[259.08758545 120.46328735]
[274.21829224 115.84023285]
[285.00732422 126.10893250]
[299.66366577 129.30126953]
[314.79437256 124.67821503]
[325.58340454 134.94691467]
[340.23974609 138.13925171]
[354.89611816 141.33158875]
[369.55249023 144.52394104]
[382.74917603 136.24835205]
[397.56732178 139.69462585]
[405.37551880 152.32664490]
[420.03186035 155.51898193]
[433.22854614 147.24339294]
[448.04672241 150.68966675]
[455.85488892 163.32168579]
[470.51126099 166.51403809]
[485.16760254 169.70637512]
[499.82397461 172.89871216]
[514.48034668 176.09104919]
[529.13671875 179.28340149]
[543.79309082 182.47573853]
[551.07391357 170.52134705]
[566.70513916 164.44108582]
[585.61193848 169.56825256]
[600.59960938 170.17669678]
[615.58728027 170.78514099]
[630.57489014 171.39358521]
[645.56256104 172.00202942]
[660.55023193 172.61047363]
[676.62158203 167.21159363]
[686.25848389 181.16030884]
[675.52258301 194.28196716]
[659.94177246 187.59812927]
[644.95410156 186.98968506]
[629.96649170 186.38124084]
[614.97882080 185.77279663]
[599.99114990 185.16435242]
[585.00347900 184.55590820]
[583.15350342 191.82415771]
[597.69000244 195.52416992]
[608.42895508 205.99671936]
[593.98999023 210.06066895]
[579.45349121 206.36065674]
[577.60345459 213.62890625]
[591.05816650 220.25997925]
[604.51281738 226.89106750]
[620.10461426 223.11274719]
[632.69110107 233.06059265]
[632.61700439 249.10348511]
[619.93920898 258.93466187]
[604.38299561 255.01251221]
[597.88177490 240.34576416]
[584.42706299 233.71467590]
[570.97235107 227.08360291]
[546.04327393 217.25524902]
[540.60070801 197.13209534]
[525.94433594 193.93975830]
[511.28799438 190.74742126]
[496.63162231 187.55506897]
[481.97528076 184.36273193]
[467.31890869 181.17039490]
[452.66253662 177.97805786]
[440.30810547 186.21839905]
[425.39898682 183.18969727]
[416.83953857 170.17533875]
[402.18316650 166.98300171]
[389.82873535 175.22335815]
[374.91961670 172.19464111]
[366.36013794 159.18029785]
[351.70376587 155.98796082]
[337.04742432 152.79562378]
[322.39105225 149.60327148]
[308.30868530 154.45466614]
[296.47134399 143.95762634]
[281.81497192 140.76528931]
[267.73260498 145.61668396]
[255.89524841 135.11964417]
[241.23889160 131.92730713]
[226.51245117 129.07560730]
[211.72386169 126.56607056]
[196.93528748 124.05654144]
[182.14669800 121.54701233]
[167.35810852 119.03747559]
[152.56953430 116.52794647]
[137.78094482 114.01840973]
[133.71856689 122.06748962]
[127.96828461 129.01190186]
[120.81796265 134.50402832]
[112.62552643 138.26893616]
[103.80107880 140.11816406]
[102.41195679 155.05371094]
[101.02284241 169.98924255]
[99.63372040 184.92478943]
[98.24460602 199.86032104]
[96.85548401 214.79586792]
[109.72553253 223.07962036]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 269]
[11 268]
[12 267]
[13 266]
[14 265]
[15 264]
[19 143]
[20 142]
[21 141]
[22 140]
[23 139]
[24 138]
[25 137]
[27 135]
[28 134]
[29 133]
[30 132]
[31 130]
[32 127]
[33 126]
[34 125]
[39 121]
[40 120]
[41 119]
[42 118]
[43 117]
[44 115]
[45 114]
[46 113]
[48 111]
[49 110]
[50 109]
[56 108]
[57 107]
[58 106]
[59 105]
[60 104]
[64 98]
[65 97]
[66 96]
[67 95]
[68 94]
[69 93]
[70 92]
[75 83]
[76 82]
[145 158]
[146 157]
[147 156]
[162 259]
[163 258]
[164 257]
[165 256]
[166 255]
[167 254]
[168 253]
[173 252]
[174 251]
[176 249]
[177 248]
[179 246]
[180 245]
[181 244]
[182 243]
[185 240]
[186 239]
[189 236]
[190 235]
[191 234]
[192 233]
[193 232]
[194 231]
[195 230]
[198 212]
[199 211]
[200 210]
[201 209]
[202 208]
[203 207]
[218 228]
[219 227]
[220 226]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
