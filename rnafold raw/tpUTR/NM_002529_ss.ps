%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 01:49:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCCGGCCCAGGGGCUGGGAGUGGUUAGCCGGAAUACUGGGGCCUGCCCUCAGCAUCCCCCAUAGCUCCCAGCAGCCCCAGGGUGAUCUCAAAGUAUCUAAUUCACCCUCAGCAUGUGGGAAGGGACAGGUGGGGGCUGGGAGUAGAGGAUGUUCCUGCUUCUCUAGGCAAGGUCCCGUCAUAGCAAUUAUAUUUAUUAUCCCUUG\
) } def
/len { sequence length } bind def

/coor [
[234.02203369 372.11761475]
[227.68843079 358.52035522]
[221.35484314 344.92309570]
[215.02124023 331.32583618]
[208.68763733 317.72854614]
[202.35404968 304.13128662]
[187.46128845 294.84960938]
[189.22439575 276.52078247]
[182.68713379 263.02023315]
[176.14987183 249.51971436]
[159.39878845 239.86293030]
[161.16665649 219.78318787]
[154.22654724 206.48526001]
[147.28643799 193.18733215]
[140.34631348 179.88941956]
[133.40620422 166.59149170]
[126.46608734 153.29356384]
[113.71817017 145.59031677]
[114.19252777 129.77622986]
[107.25241089 116.47830200]
[92.99354553 111.82160950]
[79.54253387 118.46015167]
[66.09152222 125.09869385]
[59.77982712 131.70396423]
[52.38806152 131.73422241]
[38.83878326 138.16983032]
[25.28950691 144.60543823]
[19.90732956 159.22290039]
[6.07475758 165.55650330]
[-7.82758045 160.33534241]
[-21.37685776 166.77095032]
[-34.92613602 173.20655823]
[-36.07611465 188.52233887]
[-44.74317169 201.20216370]
[-58.59590530 207.83520508]
[-73.90800476 206.63722229]
[-86.56059265 197.93046570]
[-93.15018463 184.05700684]
[-91.90421295 168.74873352]
[-83.15783691 156.12350464]
[-69.26379395 149.57742310]
[-53.95949936 150.87138367]
[-41.36174393 159.65728760]
[-27.81246948 153.22167969]
[-14.26319122 146.78605652]
[-9.52591228 132.71148682]
[4.12330341 125.99184418]
[18.85389709 131.05616760]
[32.40317535 124.62055969]
[45.95244980 118.18494415]
[59.45297623 111.64768219]
[72.90399170 105.00914001]
[86.35500336 98.37059784]
[94.36954498 85.69120026]
[94.59500885 70.69289398]
[94.82047272 55.69459152]
[95.04594421 40.69628525]
[95.27140808 25.69798088]
[95.49687195 10.69967556]
[95.72233582 -4.29863024]
[88.19333649 -18.21354294]
[96.12107086 -30.82307816]
[88.71031952 -36.65747070]
[84.87274170 -45.12245178]
[85.35415649 -54.26644897]
[89.92019653 -62.04430771]
[97.43712616 -66.77472687]
[98.33847809 -81.74761963]
[99.23982239 -96.72051239]
[100.14117432 -111.69340515]
[101.04251862 -126.66629791]
[101.94387054 -141.63919067]
[102.84522247 -156.61209106]
[103.74656677 -171.58499146]
[104.64791870 -186.55787659]
[102.03768158 -192.63499451]
[102.77829742 -198.27156067]
[105.80808258 -201.96519470]
[107.15908813 -216.90422058]
[108.51009369 -231.84326172]
[109.86109924 -246.78230286]
[72.89271545 -269.09310913]
[69.31982422 -283.66137695]
[65.74693298 -298.22964478]
[62.17404175 -312.79791260]
[58.60114670 -327.36618042]
[55.02825546 -341.93444824]
[51.45536423 -356.50271606]
[36.38357162 -358.12042236]
[22.77537155 -364.79818726]
[12.27401733 -375.72967529]
[6.14759922 -389.59484863]
[5.13591290 -404.71939087]
[9.36112309 -419.27697754]
[18.31301498 -431.50970459]
[30.91060638 -439.94039917]
[45.63267517 -443.55099487]
[60.70145798 -441.90554810]
[74.29733276 -435.20269775]
[84.77851868 -424.25189209]
[90.87937927 -410.37545776]
[91.86318970 -395.24905396]
[87.61116028 -380.69927979]
[78.63673401 -368.48306274]
[66.02362823 -360.07562256]
[69.59652710 -345.50735474]
[73.16941833 -330.93908691]
[76.74230957 -316.37081909]
[80.31520081 -301.80255127]
[83.88809204 -287.23425293]
[87.46098328 -272.66598511]
[94.85869598 -271.43154907]
[109.65411377 -268.96261597]
[117.05182648 -267.72814941]
[125.16143799 -280.34695435]
[126.11334229 -296.13949585]
[139.50325012 -302.66326904]
[147.61286926 -315.28207397]
[155.72247314 -327.90087891]
[149.96748352 -342.31127930]
[153.81445312 -357.34393311]
[165.78411865 -367.21847534]
[181.27394104 -368.13790894]
[194.32772827 -359.74874878]
[199.92605591 -345.27676392]
[195.91624451 -330.28674316]
[183.84016418 -320.54263306]
[168.34127808 -319.79125977]
[160.23167419 -307.17245483]
[152.12205505 -294.55364990]
[151.75021362 -279.66369629]
[137.78024292 -272.23736572]
[129.67062378 -259.61856079]
[124.80013275 -245.43128967]
[123.44912720 -230.49224854]
[122.09812164 -215.55322266]
[120.74711609 -200.61418152]
[119.62081146 -185.65652466]
[118.71946716 -170.68363953]
[117.81811523 -155.71073914]
[116.91676331 -140.73783875]
[116.01541901 -125.76495361]
[115.11406708 -110.79206085]
[114.21271515 -95.81916046]
[113.31137085 -80.84626770]
[112.41001892 -65.87337494]
[123.21182251 -48.28780746]
[111.11937714 -30.59761238]
[118.66449738 -17.75547981]
[110.72064209 -4.07316542]
[110.49517822 10.92514038]
[110.26971436 25.92344475]
[110.04424286 40.92174911]
[109.81877899 55.92005539]
[109.59331512 70.91836548]
[109.36785126 85.91666412]
[120.55033875 109.53819275]
[127.49044800 122.83611298]
[140.73477173 131.49050903]
[139.76402283 146.35345459]
[146.70413208 159.65136719]
[153.64424133 172.94929504]
[160.58435059 186.24722290]
[167.52447510 199.54515076]
[174.46458435 212.84307861]
[185.01448059 215.49845886]
[192.21252441 223.36036682]
[193.85969543 233.66935730]
[189.65039062 242.98245239]
[196.18765259 256.48297119]
[202.72491455 269.98352051]
[214.63076782 274.94735718]
[219.79736328 286.32781982]
[215.95130920 297.79769897]
[222.28491211 311.39495850]
[228.61849976 324.99221802]
[234.95210266 338.58947754]
[241.28569031 352.18673706]
[247.61929321 365.78402710]
[262.23788452 362.20864868]
[277.27310181 361.55419922]
[292.14706421 363.84588623]
[306.28802490 368.99557495]
[319.15246582 376.80532837]
[330.24588013 386.97500610]
[339.14193726 399.11364746]
[345.49862671 412.75469971]
[349.07162476 427.37387085]
[349.72363281 442.40921021]
[347.42953491 457.28277588]
[342.27755737 471.42291260]
[334.46569824 484.28610229]
[324.29425049 495.37786865]
[312.15417480 504.27194214]
[298.51208496 510.62643433]
[283.89233398 514.19708252]
[268.85690308 514.84661865]
[253.98368835 512.55017090]
[239.84439087 507.39587402]
[226.98248291 499.58193970]
[215.89233398 489.40869141]
[207.00024414 477.26718140]
[200.64796448 463.62405396]
[197.07968140 449.00372314]
[196.43255615 433.96820068]
[198.73146057 419.09536743]
[203.88801575 404.95687866]
[211.70402527 392.09625244]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 179]
[2 178]
[3 177]
[4 176]
[5 175]
[6 174]
[8 171]
[9 170]
[10 169]
[12 165]
[13 164]
[14 163]
[15 162]
[16 161]
[17 160]
[19 158]
[20 157]
[21 53]
[22 52]
[23 51]
[25 50]
[26 49]
[27 48]
[30 45]
[31 44]
[32 43]
[54 156]
[55 155]
[56 154]
[57 153]
[58 152]
[59 151]
[60 150]
[62 148]
[67 146]
[68 145]
[69 144]
[70 143]
[71 142]
[72 141]
[73 140]
[74 139]
[75 138]
[78 137]
[79 136]
[80 135]
[81 134]
[82 111]
[83 110]
[84 109]
[85 108]
[86 107]
[87 106]
[88 105]
[114 133]
[115 132]
[117 130]
[118 129]
[119 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
