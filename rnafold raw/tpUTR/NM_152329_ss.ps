%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 20:06:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGGUGAGACCAGAAAAAGAAAUUUCAAUAACAGAUCAGUUUGGGGUGCAUGUAUGAUUUUGCAGCGUCAAAUUGGAGUAAGGGAAGAUUUCUGUAUACUUGCUGGAGAGGAGGAAUGUGUAUAGUUACUCAUUUAGAUGACUCCAAAACUUUUAUUAAAACCAAUUUUAGUUUUA\
) } def
/len { sequence length } bind def

/coor [
[100.58304596 130.31269836]
[97.15259552 144.91516113]
[93.72215271 159.51763916]
[102.25755310 172.81884766]
[98.80603790 188.24163818]
[85.41532135 196.63594055]
[70.02987671 193.02156067]
[61.77762604 179.54284668]
[65.55447388 164.19647217]
[79.11968231 156.08718872]
[82.55013275 141.48472595]
[85.98057556 126.88224792]
[73.31366730 117.11550903]
[66.95377350 101.66909790]
[69.25442505 84.40757751]
[80.29960632 70.03803253]
[97.69878387 62.82773972]
[117.07919312 65.35237122]
[103.25951385 59.52000809]
[89.43982697 53.68764496]
[75.62014771 47.85528183]
[61.80047226 42.02291870]
[47.98079300 36.19055557]
[34.16111374 30.35819435]
[20.34143257 24.52583122]
[6.47053814 18.81634140]
[-7.91901159 24.78112221]
[-21.95732498 18.91764259]
[-27.55515480 5.16264677]
[-43.24411011 7.20404577]
[-52.17442322 -4.71647358]
[-66.09543610 -10.30264378]
[-75.87059784 -5.44338131]
[-86.48600006 -6.75681782]
[-94.44750214 -13.56630325]
[-97.26952362 -23.42685318]
[-110.98351288 -29.50357246]
[-124.69750214 -35.58028793]
[-138.41148376 -41.65700912]
[-152.12547302 -47.73372650]
[-165.83946228 -53.81044388]
[-179.55345154 -59.88716125]
[-193.26744080 -65.96388245]
[-206.98143005 -72.04059601]
[-222.73295593 -70.55729675]
[-231.23457336 -82.78725433]
[-245.00195312 -88.74202728]
[-258.82162476 -94.57438660]
[-272.64129639 -100.40675354]
[-286.46099854 -106.23911285]
[-298.65939331 -96.90666962]
[-313.89181519 -94.93965149]
[-328.06079102 -100.86717224]
[-337.35494995 -113.09477234]
[-339.27420044 -128.33326721]
[-333.30230713 -142.48359680]
[-321.04562378 -151.73939514]
[-305.80117798 -153.61088562]
[-291.66964722 -147.59465027]
[-282.45233154 -135.30903625]
[-280.62863159 -120.05879211]
[-266.80895996 -114.22643280]
[-252.98925781 -108.39406586]
[-239.16958618 -102.56170654]
[-231.76130676 -102.85872650]
[-225.15785217 -96.50124359]
[-210.38725281 -98.41918945]
[-200.90470886 -85.75458527]
[-187.19071960 -79.67787170]
[-173.47673035 -73.60115051]
[-159.76274109 -67.52442932]
[-146.04875183 -61.44771576]
[-132.33476257 -55.37099838]
[-118.62078094 -49.29427719]
[-104.90679169 -43.21755981]
[-91.19280243 -37.14084244]
[-72.19184875 -40.62656784]
[-60.50926971 -24.22365952]
[-46.58825302 -18.63749123]
[-31.89502144 -21.07844925]
[-21.96898460 -8.75836945]
[-8.41579914 -14.82852173]
[5.78166819 -9.36166191]
[12.05670738 4.89532375]
[19.45853996 4.46686888]
[26.17379570 10.70615196]
[39.99347305 16.53851509]
[53.81315613 22.37087631]
[67.63283539 28.20323944]
[81.45251465 34.03560257]
[95.27219391 39.86796570]
[109.09187317 45.70032883]
[122.91155243 51.53269196]
[136.67892456 45.57791519]
[141.89253235 31.51312637]
[147.10614014 17.44833565]
[143.82214355 1.38136923]
[156.27235413 -9.29216766]
[171.64904785 -3.59225535]
[174.13401794 12.61752510]
[161.17092896 22.66194153]
[155.95732117 36.72673035]
[150.74371338 50.79151917]
[160.91839600 61.81313324]
[175.35432434 57.73832321]
[189.79025269 53.66351318]
[204.22616577 49.58870316]
[218.66209412 45.51389313]
[231.17913818 32.02784729]
[248.00503540 36.96637344]
[253.20025635 22.46410179]
[265.79153442 13.90178490]
[280.83233643 14.38970947]
[292.56134033 23.53128815]
[306.92266846 19.20090866]
[321.28399658 14.87053013]
[335.64532471 10.54015064]
[350.00668335 6.20977116]
[360.98556519 -5.18208885]
[375.40463257 -1.44848812]
[389.76596069 -5.77886724]
[404.12728882 -10.10924625]
[414.95709229 -22.42375565]
[430.98135376 -18.93724823]
[435.71563721 -3.23634315]
[424.28976440 8.52721405]
[408.45767212 4.25208378]
[394.09634399 8.58246326]
[379.73501587 12.91284275]
[369.78332520 23.99496460]
[354.33703613 20.57110214]
[339.97570801 24.90148163]
[325.61437988 29.23186111]
[311.25305176 33.56224060]
[296.89172363 37.89262009]
[292.17123413 51.99421692]
[279.90725708 60.71537399]
[264.68151855 60.54072952]
[252.33541870 51.32770157]
[246.32655334 61.84883118]
[234.37269592 65.56217957]
[222.73690796 59.94981766]
[208.30097961 64.02462769]
[193.86505127 68.09944153]
[179.42913818 72.17424774]
[164.99320984 76.24906158]
[161.65367126 82.96452332]
[176.27595520 86.30949402]
[191.02842712 83.59570312]
[203.76792908 91.51435852]
[207.86419678 105.94421387]
[201.18531799 119.37525177]
[187.20733643 124.81729889]
[173.20506287 119.43804932]
[166.46591187 106.03651428]
[154.97460938 96.39546204]
[151.63507080 103.11093140]
[157.09748840 117.08097839]
[162.55989075 131.05102539]
[168.02230835 145.02105713]
[173.48471069 158.99110413]
[178.94711304 172.96115112]
[193.99360657 176.75363159]
[203.91142273 188.68746948]
[204.88697815 204.17384338]
[196.54515076 217.25794983]
[182.09353638 222.90864563]
[167.08908081 218.95315552]
[157.30130005 206.91242981]
[156.49380493 191.41638184]
[164.97708130 178.42355347]
[159.51466370 164.45350647]
[154.05226135 150.48347473]
[148.58984375 136.51342773]
[143.12744141 122.54338837]
[137.66503906 108.57334137]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[18 93]
[19 92]
[20 91]
[21 90]
[22 89]
[23 88]
[24 87]
[25 86]
[26 84]
[29 81]
[31 79]
[32 78]
[36 76]
[37 75]
[38 74]
[39 73]
[40 72]
[41 71]
[42 70]
[43 69]
[44 68]
[46 66]
[47 64]
[48 63]
[49 62]
[50 61]
[94 103]
[95 102]
[96 101]
[104 146]
[105 145]
[106 144]
[107 143]
[108 142]
[110 139]
[114 135]
[115 134]
[116 133]
[117 132]
[118 131]
[120 129]
[121 128]
[122 127]
[157 176]
[158 175]
[159 174]
[160 173]
[161 172]
[162 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
