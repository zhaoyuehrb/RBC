%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 14:03:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUACCAGUUGUAUUUUUACUGUGAUUUAUGUUAAAAAUAGAUACUUUAAAAUGAUGCAGUAAUUGGCUGGGUGCGCUGGCUCACACCUGUAAUCCCAGCACGUUGGGAGGCCGAGGCGGGCAGAUCACGAGGUCAGGAGGUCAAGACCAUCCUGGCUAACAUGGUGAAACCCUGUCUCUACUG\
) } def
/len { sequence length } bind def

/coor [
[81.93714142 120.53844452]
[76.83738708 113.29622650]
[62.25479889 116.81021881]
[47.67221069 120.32421875]
[33.08962631 123.83821869]
[18.50704002 127.35221100]
[3.92445302 130.86621094]
[-0.19746737 142.04505920]
[-9.11938572 149.75939941]
[-20.54149818 152.17404175]
[-31.59261703 148.80058289]
[-39.55184555 140.59086609]
[-54.24479294 143.61033630]
[-58.99252701 156.56375122]
[-69.44159698 165.40524292]
[-82.78924561 167.90356445]
[-95.52389526 163.51037598]
[-104.34893036 153.47625732]
[-119.09078217 156.24714661]
[-133.83262634 159.01803589]
[-148.57447815 161.78892517]
[-163.31632996 164.55981445]
[-178.05818176 167.33070374]
[-192.80003357 170.10160828]
[-198.42495728 179.44335938]
[-208.06962585 184.04145813]
[-218.43336487 182.59056091]
[-226.11465454 175.81138611]
[-240.94168091 178.08279419]
[-255.76870728 180.35421753]
[-270.59573364 182.62564087]
[-283.06512451 192.36343384]
[-296.81726074 186.64262390]
[-311.64428711 188.91404724]
[-326.47131348 191.18545532]
[-341.29833984 193.45687866]
[-356.12536621 195.72828674]
[-362.31051636 209.86151123]
[-375.16738892 218.38813782]
[-390.59347534 218.58740234]
[-403.66632080 210.39567566]
[-410.21444702 196.42694092]
[-408.14834595 181.13854980]
[-398.12734985 169.40898132]
[-383.34906006 164.98109436]
[-368.52923584 169.26782227]
[-358.39678955 180.90127563]
[-343.56976318 178.62985229]
[-328.74273682 176.35842896]
[-313.91571045 174.08702087]
[-299.08868408 171.81559753]
[-287.67980957 162.24026489]
[-272.86715698 167.79861450]
[-258.04013062 165.52719116]
[-243.21308899 163.25578308]
[-228.38606262 160.98435974]
[-214.24769592 147.81225586]
[-195.57092285 155.35975647]
[-180.82907104 152.58885193]
[-166.08721924 149.81796265]
[-151.34536743 147.04707336]
[-136.60351562 144.27618408]
[-121.86167145 141.50529480]
[-107.11981964 138.73440552]
[-100.57727814 123.68966675]
[-86.21659088 115.41946411]
[-69.59038544 117.34976196]
[-57.26427078 128.91738892]
[-42.57132339 125.89791870]
[-33.45662308 110.04043579]
[-15.34015369 105.78659058]
[0.41045612 116.28362274]
[14.99304295 112.76963043]
[29.57562828 109.25563049]
[44.15821457 105.74163055]
[58.74080276 102.22763824]
[73.32338715 98.71363831]
[78.13053894 81.84346008]
[93.03532410 70.67498016]
[112.74352264 70.80258179]
[114.76419067 55.93930817]
[116.78486633 41.07603455]
[118.80553436 26.21276093]
[108.58451080 37.19140244]
[94.46720886 42.26109695]
[79.59687042 40.29307556]
[67.28440094 31.72551537]
[60.27118301 18.46599770]
[60.11872101 3.46677327]
[66.86096191 -9.93256283]
[78.99673462 -18.74863052]
[93.82398987 -21.01851845]
[108.04142761 -16.23683548]
[118.48351288 -5.46822786]
[122.82532501 8.89016151]
[127.55685425 -5.34404469]
[132.28839111 -19.57825089]
[137.01991272 -33.81245804]
[141.75144958 -48.04666138]
[134.44856262 -62.06248856]
[139.27494812 -77.11179352]
[153.36720276 -84.26608276]
[168.36463928 -79.28085327]
[175.36953735 -65.11374664]
[170.22602844 -50.16986084]
[155.98565674 -43.31513214]
[151.25411987 -29.08092690]
[146.52259827 -14.84672070]
[141.79106140 -0.61251473]
[137.05952454 13.62169170]
[133.66880798 28.23343277]
[131.64813232 43.09670639]
[129.62747192 57.95998001]
[127.60679626 72.82324982]
[135.86119080 85.34783173]
[150.31677246 89.35233307]
[164.77235413 93.35684204]
[179.22793579 97.36135101]
[193.68351746 101.36585236]
[208.13911438 105.37036133]
[222.59469604 109.37487030]
[237.05027771 113.37937164]
[247.17710876 104.01031494]
[260.50653076 100.89878082]
[273.52706909 104.75447083]
[282.86288452 114.46601868]
[286.14877319 127.41853333]
[300.53466797 131.66661072]
[314.92056274 135.91470337]
[329.30645752 140.16278076]
[344.73287964 136.65054321]
[354.74783325 147.67549133]
[369.26898193 151.43528748]
[383.90884399 154.70248413]
[398.54870605 157.96969604]
[413.18856812 161.23689270]
[427.82839966 164.50410461]
[442.46826172 167.77130127]
[457.10812378 171.03851318]
[471.74798584 174.30570984]
[486.41491699 177.44915771]
[501.10784912 180.46864319]
[515.80078125 183.48811340]
[531.18359375 177.80461121]
[543.62237549 188.49140930]
[540.32128906 204.55487061]
[524.67614746 209.47026062]
[512.78131104 198.18106079]
[498.08837891 195.16159058]
[483.39541626 192.14210510]
[476.19485474 193.87916565]
[468.48077393 188.94557190]
[453.84091187 185.67835999]
[439.20108032 182.41116333]
[424.56121826 179.14395142]
[409.92135620 175.87675476]
[395.28149414 172.60954285]
[380.64163208 169.34234619]
[366.00180054 166.07514954]
[363.55401611 167.48345947]
[360.39495850 167.99615479]
[356.86694336 167.33517456]
[353.40728760 165.35287476]
[350.49975586 162.06138611]
[336.10229492 165.87748718]
[325.05834961 154.54867554]
[310.67248535 150.30058289]
[296.28659058 146.05250549]
[281.90069580 141.80442810]
[269.22348022 152.21772766]
[252.67201233 153.03897095]
[238.74995422 143.74739075]
[233.04577637 127.83496094]
[218.59017944 123.83045197]
[204.13459778 119.82595062]
[189.67901611 115.82144165]
[175.22343445 111.81693268]
[160.76785278 107.81242371]
[146.31227112 103.80792236]
[131.85667419 99.80341339]
[129.60774231 109.88274384]
[124.32706451 118.51244354]
[116.69876862 124.83396912]
[107.63092804 128.27066040]
[98.14863586 128.57882690]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 77]
[3 76]
[4 75]
[5 74]
[6 73]
[7 72]
[12 69]
[13 68]
[18 64]
[19 63]
[20 62]
[21 61]
[22 60]
[23 59]
[24 58]
[28 56]
[29 55]
[30 54]
[31 53]
[33 51]
[34 50]
[35 49]
[36 48]
[37 47]
[80 114]
[81 113]
[82 112]
[83 111]
[95 110]
[96 109]
[97 108]
[98 107]
[99 106]
[115 180]
[116 179]
[117 178]
[118 177]
[119 176]
[120 175]
[121 174]
[122 173]
[127 169]
[128 168]
[129 167]
[130 166]
[132 164]
[133 159]
[134 158]
[135 157]
[136 156]
[137 155]
[138 154]
[139 153]
[140 152]
[141 150]
[142 149]
[143 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
