%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 05:28:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGAGAAGGCAGAGAAAACACACGCUCCUCUGCCCUUCCUUUCCCUGGGGUACUACUCUCCAGCUUGGGAGGAAGCCCAGUAGCCAUUUUGUAACUGCCUACCAGUCGCCCUCUGUGCCUAAUAAAGUCUCUUUUUCUCACAGAG\
) } def
/len { sequence length } bind def

/coor [
[146.47648621 170.31256104]
[145.51698303 165.03683472]
[135.79356384 153.61515808]
[126.07013702 142.19346619]
[111.92842102 137.51786804]
[108.87429810 121.99424744]
[99.15087128 110.57255554]
[88.83136749 99.68642426]
[77.94523621 89.36692047]
[67.05910492 79.04741669]
[56.17297363 68.72791290]
[45.28684235 58.40841293]
[34.40071106 48.08890915]
[22.10678291 55.84737015]
[8.31788445 60.42176819]
[-6.15671825 61.54843521]
[-20.46866798 59.16590500]
[-33.78023911 53.41825485]
[-45.31336594 44.64639282]
[-54.39513397 33.36785507]
[-60.49702835 20.24625206]
[-63.26569748 6.05224800]
[-62.54340363 -8.38172245]
[-58.37701416 -22.21026230]
[-51.01498032 -34.62453079]
[-61.67810059 -45.17431259]
[-72.34121704 -55.72409439]
[-83.28593445 -55.03911591]
[-92.58979797 -60.41566849]
[-97.26494598 -69.84555054]
[-95.96695709 -80.06819916]
[-106.16954803 -91.06397247]
[-116.37213898 -102.05975342]
[-131.93086243 -102.81073761]
[-142.12109375 -114.10735321]
[-141.30926514 -128.93559265]
[-151.51185608 -139.93136597]
[-161.71444702 -150.92713928]
[-171.91703796 -161.92292786]
[-182.11962891 -172.91870117]
[-192.32221985 -183.91447449]
[-202.52481079 -194.91026306]
[-212.72740173 -205.90603638]
[-222.92999268 -216.90180969]
[-242.41392517 -221.88768005]
[-246.05836487 -240.83515930]
[-256.72146606 -251.38493347]
[-267.38458252 -261.93472290]
[-278.04772949 -272.48449707]
[-288.71084595 -283.03427124]
[-299.37396240 -293.58404541]
[-314.92675781 -291.95788574]
[-327.85717773 -300.75210571]
[-332.05987549 -315.81436157]
[-325.55044556 -330.03271484]
[-311.40246582 -336.69366455]
[-296.29617310 -332.65219116]
[-287.36428833 -319.81646729]
[-288.82418823 -304.24719238]
[-278.16104126 -293.69738770]
[-267.49792480 -283.14761353]
[-256.83480835 -272.59783936]
[-246.17169189 -262.04806519]
[-235.50857544 -251.49827576]
[-225.24957275 -252.46794128]
[-215.97439575 -247.49295044]
[-210.89880371 -238.02154541]
[-211.93421936 -227.10440063]
[-201.73162842 -216.10862732]
[-191.52903748 -205.11285400]
[-181.32644653 -194.11706543]
[-171.12385559 -183.12129211]
[-160.92126465 -172.12551880]
[-150.71867371 -161.12973022]
[-140.51608276 -150.13395691]
[-130.31349182 -139.13818359]
[-115.46605682 -138.83963013]
[-104.96253967 -127.83367920]
[-105.37635803 -112.26234436]
[-95.17376709 -101.26656342]
[-84.97117615 -90.27079010]
[-66.15025330 -86.02094269]
[-61.79143906 -66.38721466]
[-51.12831879 -55.83743286]
[-40.46519852 -45.28765106]
[-27.13883209 -53.22010803]
[-12.20695305 -57.45092392]
[3.32203126 -57.68841171]
[18.39785767 -53.91078568]
[31.99943352 -46.36799240]
[43.20399094 -35.56520844]
[51.24969864 -22.22898483]
[55.58745193 -7.25839949]
[55.91834641 8.33555794]
[52.21427917 23.49826241]
[44.72021484 37.20277786]
[55.60634613 47.52228165]
[66.49247742 57.84178543]
[77.37860870 68.16128540]
[88.26473999 78.48078918]
[99.15087128 88.80029297]
[101.76883698 74.03052521]
[114.84261322 66.67685699]
[128.82412720 72.10984802]
[133.50236511 86.36166382]
[125.46070099 99.02387238]
[110.57255554 100.84912872]
[120.29598236 112.27082062]
[135.13317871 117.76336670]
[137.49182129 132.47003174]
[147.21525574 143.89172363]
[156.93867493 155.31341553]
[167.02319336 166.41758728]
[177.45843506 177.19282532]
[187.89366150 187.96806335]
[198.32890320 198.74330139]
[208.76414490 209.51853943]
[219.19938660 220.29379272]
[231.44680786 215.95756531]
[244.37643433 216.59817505]
[256.05035400 222.08392334]
[264.73239136 231.55960083]
[269.14639282 243.57958984]
[268.66354370 256.32836914]
[263.39196777 267.89471436]
[273.35723877 279.10601807]
[283.32254028 290.31732178]
[293.28781128 301.52859497]
[308.32974243 309.35018921]
[304.97784424 325.96948242]
[288.08013916 327.34927368]
[282.07650757 311.49389648]
[272.11123657 300.28259277]
[262.14596558 289.07128906]
[252.18066406 277.86001587]
[235.51721191 281.95352173]
[218.97872925 277.05929565]
[207.10520935 264.42770386]
[203.20291138 247.44573975]
[208.42414856 230.72901917]
[197.98890686 219.95378113]
[187.55366516 209.17854309]
[177.11842346 198.40330505]
[166.68319702 187.62806702]
[156.24795532 176.85282898]
[152.67715454 176.45388794]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 112]
[3 111]
[4 110]
[6 108]
[7 107]
[8 101]
[9 100]
[10 99]
[11 98]
[12 97]
[13 96]
[25 85]
[26 84]
[27 83]
[31 81]
[32 80]
[33 79]
[36 76]
[37 75]
[38 74]
[39 73]
[40 72]
[41 71]
[42 70]
[43 69]
[44 68]
[46 64]
[47 63]
[48 62]
[49 61]
[50 60]
[51 59]
[113 145]
[114 144]
[115 143]
[116 142]
[117 141]
[118 140]
[125 135]
[126 134]
[127 133]
[128 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
