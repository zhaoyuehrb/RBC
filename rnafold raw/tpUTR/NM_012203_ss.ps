%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 18:22:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAAACAGUAGAGAUGGAGGGCCGGGAAGCAAACCGUGCCCUGGUAUUGUCAGACACACCCAGGCUUGAUUUGGAUCCACAGGCAGAGCCAAGGGAAGGUGUGAUUCUCUGAGGAAAGAGUGAUUCUGAUAUAUGUACUUGUCACAUUGGUGUUGGACACAUUUGCGCCAAAAGUAUGGUAAUUCUAUUAUUAAAUAAUUCUCUGAG\
) } def
/len { sequence length } bind def

/coor [
[113.05719757 246.96920776]
[100.73966980 256.05422974]
[85.60928345 258.36288452]
[71.14288330 253.36470032]
[60.66474152 242.20822144]
[56.58266068 227.45710754]
[59.83466721 212.50106812]
[69.67348480 200.77690125]
[83.83821106 194.97871399]
[85.19569397 180.04026794]
[86.55318451 165.10182190]
[87.91066742 150.16336060]
[89.26815033 135.22491455]
[90.62563324 120.28646851]
[84.03810883 116.70114136]
[71.24078369 124.52600861]
[70.86306763 109.53049469]
[64.27554321 105.94516754]
[52.46779251 115.19595337]
[40.66003799 124.44673157]
[28.85228729 133.69750977]
[17.04453468 142.94830322]
[5.30698013 152.28799438]
[-6.35970879 161.71604919]
[-18.02639771 171.14411926]
[-17.09544182 186.63323975]
[-25.47491646 199.69325256]
[-39.94274521 205.30232239]
[-54.93574524 201.30363464]
[-64.68881226 189.23477173]
[-65.45168304 173.73646545]
[-56.93102646 160.76811218]
[-42.40320206 155.31632996]
[-27.45446014 159.47743225]
[-15.78777218 150.04936218]
[-4.12108326 140.62130737]
[-0.89374840 133.97056580]
[7.79375219 131.14054871]
[19.60150337 121.88976288]
[31.40925598 112.63897705]
[43.21701050 103.38819885]
[55.02476120 94.13741302]
[58.83405304 79.62916565]
[53.09379959 65.77097321]
[47.35354996 51.91278076]
[41.61329651 38.05458450]
[35.87304688 24.19639397]
[29.82032776 10.47179508]
[23.45824814 -3.11216402]
[17.09616852 -16.69612312]
[10.73408890 -30.28008270]
[4.37200928 -43.86404037]
[-1.99007034 -57.44800186]
[-28.91637611 -69.04165649]
[-39.52297592 -79.64825439]
[-50.12957764 -90.25485992]
[-60.73617935 -100.86145782]
[-80.42238617 -105.19207001]
[-84.61658478 -124.06648254]
[-95.53870392 -134.34790039]
[-106.46081543 -144.62930298]
[-124.47576904 -148.43757629]
[-128.87051392 -165.42634583]
[-139.94667053 -175.54162598]
[-151.02281189 -185.65690613]
[-162.09896851 -195.77218628]
[-173.17510986 -205.88746643]
[-188.74269104 -205.35046387]
[-199.83139038 -215.76658630]
[-200.24740601 -230.61119080]
[-211.32354736 -240.72647095]
[-222.39970398 -250.84175110]
[-233.47586060 -260.95703125]
[-249.25057983 -259.99087524]
[-261.03265381 -270.52453613]
[-261.83197021 -286.30862427]
[-251.17433167 -297.97866821]
[-235.38269043 -298.61105347]
[-223.82597351 -287.83062744]
[-223.36058044 -272.03317261]
[-212.28442383 -261.91790771]
[-201.20826721 -251.80262756]
[-190.13212585 -241.68734741]
[-175.31077576 -242.61645508]
[-163.93388367 -232.51591492]
[-163.05982971 -216.96362305]
[-151.98368835 -206.84834290]
[-140.90753174 -196.73306274]
[-129.83139038 -186.61778259]
[-118.75523376 -176.50250244]
[-106.65947723 -176.73661804]
[-97.34878540 -168.39801025]
[-96.17940521 -155.55142212]
[-85.25729370 -145.27000427]
[-74.33517456 -134.98860168]
[-64.18783569 -136.21461487]
[-54.84512711 -131.55386353]
[-49.50100708 -122.32982635]
[-50.12957764 -111.46806335]
[-39.52297592 -100.86145782]
[-28.91637611 -90.25485992]
[-18.30977440 -79.64825439]
[-3.74564672 -83.23799133]
[0.71689910 -97.55880737]
[5.17944479 -111.87961578]
[9.64199066 -126.20043182]
[13.99626064 -140.55453491]
[18.24200630 -154.94111633]
[22.48775291 -169.32769775]
[26.73349953 -183.71427917]
[18.95917320 -197.47419739]
[23.27206421 -212.67861938]
[37.11341095 -220.30703735]
[52.27138519 -215.83363342]
[59.75303268 -201.91239929]
[55.11962509 -186.80256653]
[41.12007904 -179.46852112]
[36.87433243 -165.08195496]
[32.62858582 -150.69537354]
[28.38283920 -136.30879211]
[29.50484085 -129.00201416]
[23.96280289 -121.73788452]
[19.50025749 -107.41707611]
[15.03771210 -93.09626007]
[10.57516670 -78.77544403]
[11.59388828 -63.81008148]
[17.95596886 -50.22612000]
[24.31804848 -36.64216232]
[30.68012810 -23.05820274]
[37.04220581 -9.47424316]
[43.40428543 4.10971546]
[46.57970428 5.64745665]
[49.16727066 8.80087757]
[50.41516876 13.27655125]
[49.73123932 18.45614243]
[55.47148895 32.31433487]
[61.21174240 46.17252731]
[66.95199585 60.03071976]
[72.69224548 73.88891602]
[76.00441742 59.25916672]
[84.50028992 46.89712143]
[96.97106171 38.56166840]
[111.64237976 35.43877792]
[126.42679596 37.97278214]
[139.22074890 45.80314255]
[148.20393372 57.81574249]
[152.09820557 72.30166626]
[167.03665161 73.65914917]
[181.97509766 75.01663208]
[196.91354370 76.37411499]
[211.85198975 77.73159790]
[226.79043579 79.08908081]
[241.72889709 80.44656372]
[256.69424438 81.46528625]
[271.67886353 82.14472198]
[285.98080444 74.12060547]
[299.94079590 82.72589874]
[299.19796753 99.10821533]
[284.51651001 106.41483307]
[270.99942017 97.12932587]
[256.01483154 96.44989014]
[253.17752075 98.54695892]
[249.18281555 99.37266541]
[244.63987732 98.39767456]
[240.37141418 95.38500977]
[225.43295288 94.02752686]
[210.49450684 92.67004395]
[195.55606079 91.31256104]
[180.61761475 89.95507812]
[165.67916870 88.59759521]
[150.74072266 87.24011230]
[144.37863159 100.82407379]
[154.98524475 111.43067169]
[170.56115723 111.59936523]
[181.16667175 122.50706482]
[180.90985107 137.35528564]
[191.51644897 147.96188354]
[202.12306213 158.56848145]
[212.72966003 169.17509460]
[228.70814514 170.61296082]
[237.42579651 184.08078003]
[232.19515991 199.24719238]
[217.02874756 204.47782898]
[203.56092834 195.76017761]
[202.12306213 179.78169250]
[191.51644897 169.17509460]
[180.90985107 158.56848145]
[170.30325317 147.96188354]
[155.45503235 148.21870422]
[144.54733276 137.61318970]
[144.37863159 122.03727722]
[133.77203369 111.43067169]
[126.72004700 113.98399353]
[131.82669067 128.08796692]
[141.04161072 139.92373657]
[132.63255310 152.34498596]
[118.22074127 148.18569946]
[117.72270966 133.19461060]
[112.61606598 119.09062958]
[105.56407928 121.64395142]
[104.20659637 136.58239746]
[102.84911346 151.52084351]
[101.49163055 166.45930481]
[100.13414764 181.39775085]
[98.77666473 196.33619690]
[111.66422272 204.59266663]
[119.22853088 217.89830017]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 205]
[10 204]
[11 203]
[12 202]
[13 201]
[14 200]
[18 42]
[19 41]
[20 40]
[21 39]
[22 38]
[23 36]
[24 35]
[25 34]
[43 139]
[44 138]
[45 137]
[46 136]
[47 135]
[48 131]
[49 130]
[50 129]
[51 128]
[52 127]
[53 126]
[54 102]
[55 101]
[56 100]
[57 99]
[59 95]
[60 94]
[61 93]
[63 90]
[64 89]
[65 88]
[66 87]
[67 86]
[70 83]
[71 82]
[72 81]
[73 80]
[103 125]
[104 124]
[105 123]
[106 122]
[107 120]
[108 119]
[109 118]
[110 117]
[147 171]
[148 170]
[149 169]
[150 168]
[151 167]
[152 166]
[153 165]
[154 161]
[155 160]
[172 192]
[173 191]
[176 188]
[177 187]
[178 186]
[179 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
