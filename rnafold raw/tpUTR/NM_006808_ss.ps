%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 21:02:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCAGUUACAUCCAUCUGUCAUCUGAAGAAGGAGGAAAAAACCCAACAUUUCUUGGACCAAAAGUAUAGUGACUAUCUGUUCAUGAGAGAAAUUUUCUGUAAGCUUGCUGUUUUACAGGGGAUUUAUCAAUAAUUGAUUUUGAGGAAUCAGUUUUUUUCUAUGGCUAAUAAACUUUUUAAUUCACUUAUACUGA\
) } def
/len { sequence length } bind def

/coor [
[173.79965210 378.99606323]
[160.58703613 368.37234497]
[167.13793945 352.73516846]
[167.61871338 337.74285889]
[168.09948730 322.75057983]
[168.58026123 307.75827026]
[169.06103516 292.76599121]
[162.10916138 289.95147705]
[161.05195618 304.91418457]
[146.49485779 308.53228760]
[138.55560303 295.80560303]
[148.20539856 284.32247925]
[141.25352478 281.50796509]
[131.16902161 292.61215210]
[127.61890411 308.02990723]
[113.33459473 312.24981689]
[103.25007629 323.35400391]
[93.16556549 334.45816040]
[89.70671844 342.92617798]
[82.82932281 345.65783691]
[72.56813049 356.59893799]
[69.36251068 372.68173218]
[53.74683762 377.69000244]
[41.78517914 366.47167969]
[45.78266144 350.56723022]
[61.62702179 346.33776855]
[71.88821411 335.39663696]
[82.06139374 324.37365723]
[92.14590454 313.26947021]
[102.23042297 302.16531372]
[105.05922699 287.54180908]
[120.06484222 282.52761841]
[130.14935303 271.42346191]
[135.44248962 257.38839722]
[135.20207214 242.39031982]
[134.96165466 227.39225769]
[134.72123718 212.39418030]
[134.48081970 197.39610291]
[134.24040222 182.39804077]
[133.99998474 167.39996338]
[133.75956726 152.40188599]
[133.51914978 137.40380859]
[133.27873230 122.40573883]
[120.38405609 132.67892456]
[105.04818726 136.56513977]
[90.12938690 133.90100098]
[78.18731689 125.69566345]
[71.04395294 113.86007690]
[69.51123047 100.79013824]
[73.32497406 88.89107513]
[61.44910812 79.72789764]
[49.57324219 70.56471252]
[37.69738007 61.40153503]
[22.04489708 59.09711456]
[16.69495773 45.19648743]
[4.81909466 36.03330612]
[-7.05676889 26.87012863]
[-18.93263245 17.70694923]
[-30.80849648 8.54376888]
[-44.99385071 14.26417065]
[-60.03856277 12.13028526]
[-71.91625214 2.81433702]
[-77.49880219 -11.10295677]
[-75.37988281 -25.84662628]
[-87.25575256 -35.00980377]
[-99.13161469 -44.17298508]
[-114.77212524 -41.90365601]
[-127.38613892 -51.42532730]
[-129.48997498 -67.08895874]
[-119.83547974 -79.60160065]
[-104.15048218 -81.53971863]
[-91.74061584 -71.75346375]
[-89.96843719 -56.04884720]
[-78.09256744 -46.88566971]
[-66.21670532 -37.72248840]
[-52.49270248 -43.51190567]
[-37.61453629 -41.64211655]
[-25.59043884 -32.51592255]
[-19.71018219 -18.50452042]
[-21.64531708 -3.33209467]
[-9.76945305 5.83108521]
[2.10641050 14.99426460]
[13.98227406 24.15744400]
[25.85813904 33.32062531]
[40.66117859 34.96963501]
[46.86055756 49.52567291]
[58.73642349 58.68885040]
[70.61228943 67.85202789]
[82.48815155 77.01521301]
[99.63868713 65.49478149]
[123.63962555 67.58613586]
[128.59381104 53.42788315]
[133.54800415 39.26963425]
[138.50218201 25.11138344]
[143.45637512 10.95313358]
[148.41055298 -3.20511603]
[153.36474609 -17.36336517]
[158.31892395 -31.52161598]
[163.27311707 -45.67986679]
[168.22729492 -59.83811569]
[173.18148804 -73.99636841]
[178.13568115 -88.15461731]
[183.08985901 -102.31286621]
[188.04405212 -116.47111511]
[192.88461304 -130.66860962]
[187.00726318 -145.59631348]
[195.13829041 -159.42620850]
[211.04025269 -161.54919434]
[222.51454163 -150.33666992]
[220.75904846 -134.38995361]
[207.12043762 -125.94199371]
[207.99749756 -118.59410858]
[202.20230103 -111.51692963]
[197.24810791 -97.35868073]
[192.29393005 -83.20043182]
[187.33973694 -69.04218292]
[182.38555908 -54.88393021]
[177.43136597 -40.72568130]
[172.47717285 -26.56743050]
[167.52299500 -12.40917969]
[162.56880188 1.74906981]
[157.61462402 15.90732002]
[152.66043091 30.06556892]
[147.70625305 44.22381973]
[142.75205994 58.38206863]
[137.79788208 72.54032135]
[142.47404480 78.40405273]
[153.60958862 68.35418701]
[164.74511719 58.30431747]
[174.27984619 46.72463989]
[188.59013367 51.22082901]
[189.78880310 66.17285919]
[176.37797546 72.89145660]
[164.10218811 81.51148987]
[151.82640076 90.13153076]
[156.50257874 95.99526215]
[171.40824890 94.31579590]
[186.31393433 92.63632965]
[201.21961975 90.95686340]
[216.12530518 89.27739716]
[231.03099060 87.59793091]
[243.89721680 77.42973328]
[259.03421021 83.73872375]
[260.87033081 100.03475952]
[247.51673889 109.55386353]
[232.71044922 102.50360870]
[217.80477905 104.18307495]
[202.89909363 105.86254883]
[187.99340820 107.54201508]
[173.08772278 109.22148132]
[158.18203735 110.90094757]
[148.27679443 122.16532135]
[148.51721191 137.16339111]
[148.75762939 152.16146851]
[148.99804688 167.15954590]
[149.23846436 182.15762329]
[149.47888184 197.15568542]
[149.71929932 212.15376282]
[149.95971680 227.15184021]
[150.20013428 242.14990234]
[150.44055176 257.14797974]
[157.42002869 243.87066650]
[158.54667664 228.91304016]
[162.49121094 214.44097900]
[169.11032104 200.98039246]
[178.16346741 189.02043152]
[189.32164001 178.99571228]
[202.17938232 171.27053833]
[216.26945496 166.12561035]
[231.07980347 163.74792480]
[246.07225037 164.22386169]
[260.70196533 167.53614807]
[274.43734741 173.56439209]
[286.77920532 182.08955383]
[297.27908325 192.80181885]
[305.55541992 205.31190491]
[311.30743408 219.16522217]
[314.32611084 233.85833740]
[314.50177002 248.85729980]
[311.82800293 263.61709595]
[306.40197754 277.60128784]
[298.42089844 290.30178833]
[288.17477417 301.25701904]
[276.03594971 310.06884766]
[262.44552612 316.41711426]
[247.89736938 320.07110596]
[232.92018127 320.89801025]
[218.05821228 318.86779785]
[203.85151672 314.05426025]
[190.81909180 306.63421631]
[184.05332947 293.24676514]
[183.57255554 308.23904419]
[183.09178162 323.23135376]
[182.61100769 338.22363281]
[182.13023376 353.21594238]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 195]
[4 194]
[5 193]
[6 192]
[7 191]
[13 33]
[14 32]
[16 30]
[17 29]
[18 28]
[20 27]
[21 26]
[34 161]
[35 160]
[36 159]
[37 158]
[38 157]
[39 156]
[40 155]
[41 154]
[42 153]
[43 152]
[50 89]
[51 88]
[52 87]
[53 86]
[55 84]
[56 83]
[57 82]
[58 81]
[59 80]
[64 75]
[65 74]
[66 73]
[91 126]
[92 125]
[93 124]
[94 123]
[95 122]
[96 121]
[97 120]
[98 119]
[99 118]
[100 117]
[101 116]
[102 115]
[103 114]
[104 113]
[105 111]
[136 151]
[137 150]
[138 149]
[139 148]
[140 147]
[141 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
