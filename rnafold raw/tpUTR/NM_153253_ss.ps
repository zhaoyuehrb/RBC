%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 11:06:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGUCUGGAACCACCUGGGCCCCUGAGGGCACUGUGGUCACACUGGGCCCUCCUCAGGAACUCUCCCUGCGCAGAGGCGUGUCUUAGCACUGCCCCCCUCCCUAGCCCCUUAUUUGGUGGCGGAAGUGGCCUCCACCCCUUCCCUGUUUGUAAAUAUUCUGUGGAGAAAAGAGGACUUCAGGGAGUAAAAAAGCCACUGAUGUC\
) } def
/len { sequence length } bind def

/coor [
[-22.56319618 320.56558228]
[-29.96724510 321.76144409]
[-32.47178268 336.55087280]
[-26.25454712 351.72576904]
[-36.50045395 364.53021240]
[-52.66939163 361.79205322]
[-58.12814331 346.32809448]
[-47.26121521 334.04632568]
[-44.75667572 319.25689697]
[-50.73571777 314.72909546]
[-55.65304947 328.90017700]
[-70.65009308 328.60244751]
[-75.00109100 314.24734497]
[-62.69380188 305.67346191]
[-68.67284393 301.14566040]
[-82.22962189 307.56546021]
[-95.78640747 313.98522949]
[-109.34318542 320.40502930]
[-122.89997101 326.82479858]
[-136.45675659 333.24459839]
[-123.43615723 340.69201660]
[-120.98577118 355.49053955]
[-130.91088867 366.73739624]
[-145.89926147 366.14654541]
[-154.90826416 354.15332031]
[-151.29977417 339.59262085]
[-165.30621338 344.96102905]
[-179.31265259 350.32943726]
[-193.31907654 355.69784546]
[-207.32551575 361.06622314]
[-221.33195496 366.43463135]
[-225.45338440 381.27780151]
[-237.38520813 390.73745728]
[-252.42144775 391.35009766]
[-264.78720093 383.09020996]
[-278.79364014 388.45858765]
[-292.80007935 393.82699585]
[-302.70092773 406.90008545]
[-318.93710327 404.59402466]
[-324.80627441 389.28112793]
[-314.27069092 376.71395874]
[-298.16845703 379.82055664]
[-284.16204834 374.45214844]
[-270.15560913 369.08377075]
[-266.47836304 354.67486572]
[-254.88455200 345.08071899]
[-239.68678284 344.14212036]
[-226.70036316 352.42819214]
[-212.69392395 347.05978394]
[-198.68748474 341.69140625]
[-184.68104553 336.32299805]
[-170.67460632 330.95458984]
[-156.66816711 325.58618164]
[-142.87654114 319.68780518]
[-129.31976318 313.26803589]
[-115.76297760 306.84823608]
[-102.20619202 300.42846680]
[-88.64941406 294.00866699]
[-75.09262848 287.58886719]
[-44.78191376 270.29742432]
[-16.75445938 272.71398926]
[-0.78811473 288.32092285]
[5.83766556 274.86361694]
[12.46344662 261.40631104]
[19.08922577 247.94900513]
[12.99737167 232.27519226]
[20.26780891 216.73837280]
[36.84500885 211.15718079]
[43.26479721 197.60038757]
[41.71903229 182.78620911]
[54.61816788 173.62527466]
[61.03795624 160.06849670]
[67.45774078 146.51171875]
[73.87753296 132.95492554]
[80.29731750 119.39814758]
[86.71710968 105.84136963]
[86.14535522 90.85227203]
[78.71148682 77.82392883]
[71.27761841 64.79559326]
[63.74462891 51.82431412]
[56.11294556 38.91085434]
[48.48126221 25.99739647]
[40.84957886 13.08393860]
[26.30688477 5.50488377]
[25.86961555 -10.88843346]
[39.98759460 -19.23197174]
[54.13745880 -10.94261646]
[53.76303864 5.45225573]
[61.39472198 18.36571503]
[69.02640533 31.27917290]
[76.65808868 44.19263077]
[82.76995087 48.35326385]
[84.30596161 57.36172485]
[91.73983002 70.39006042]
[99.17369080 83.41840363]
[106.64231873 82.73308563]
[105.27169037 67.79583740]
[103.90106964 52.85859299]
[102.53044128 37.92134476]
[101.16004181 22.98407555]
[116.09733582 21.61391068]
[117.46768951 36.55072021]
[118.83831787 51.48796844]
[120.20893860 66.42521667]
[121.57956696 81.36246490]
[129.04818726 80.67714691]
[133.98695374 66.51351166]
[138.92570496 52.34987259]
[143.75633240 38.14898682]
[148.47851562 23.91168213]
[141.16644287 9.90064812]
[145.98295593 -5.15181684]
[160.07052612 -12.31535244]
[175.07122803 -7.33995962]
[182.08541870 6.82254934]
[176.95170593 21.76980782]
[162.71582031 28.63387489]
[157.99363708 42.87118149]
[158.87202454 50.21244812]
[153.08935547 57.28863525]
[148.15058899 71.45227051]
[143.21182251 85.61591339]
[155.30662537 94.48812103]
[167.33340454 85.52394104]
[179.36019897 76.55976868]
[191.38697815 67.59559631]
[203.41377258 58.63142395]
[209.85464478 44.18062210]
[224.68309021 42.77831650]
[236.70988464 33.81414413]
[238.74330139 18.14121246]
[251.31439209 8.56294155]
[266.96493530 10.76194954]
[276.40975952 23.43360329]
[274.04541016 39.06003571]
[261.27462769 48.37036133]
[245.67405701 45.84093094]
[233.64726257 54.80510330]
[228.06661987 68.61472321]
[212.37794495 70.65821075]
[200.35115051 79.62238312]
[188.32437134 88.58655548]
[176.29757690 97.55072784]
[164.27079773 106.51490021]
[179.12294006 104.41404724]
[188.13156128 116.40758514]
[192.88557434 130.63429260]
[192.89712524 145.63429260]
[188.16503906 159.86831665]
[179.17491150 171.87571716]
[166.84927368 180.42431641]
[152.45294189 184.63690186]
[137.46324158 184.08119202]
[123.41836548 178.81419373]
[111.75953674 169.37640381]
[103.68317413 156.73629761]
[100.01802826 142.19096375]
[101.13946533 127.23616028]
[100.27388763 112.26115417]
[93.85410309 125.81793976]
[87.43431091 139.37472534]
[81.01452637 152.93150330]
[74.59473419 166.48828125]
[68.17494965 180.04505920]
[69.26152802 195.82891846]
[56.82157898 204.02018738]
[50.40179062 217.57696533]
[56.36392212 229.65716553]
[54.30869675 242.77389526]
[45.20806122 252.17182922]
[32.54653168 254.57478333]
[25.92074966 268.03207397]
[19.29496956 281.48937988]
[12.66918945 294.94668579]
[12.89793682 309.94494629]
[19.93103218 323.19393921]
[26.96412659 336.44293213]
[40.26874542 345.00433350]
[39.40213013 359.87368774]
[46.43522263 373.12268066]
[53.46831894 386.37167358]
[60.50141525 399.62063599]
[67.63533020 412.81561279]
[74.86965179 425.95581055]
[90.22679138 426.18786621]
[103.40219116 434.08117676]
[110.85174561 447.51248169]
[110.57154846 462.86880493]
[102.63697815 476.01940918]
[89.18239594 483.42681885]
[73.82701111 483.09848022]
[60.70135117 475.12274170]
[53.33614731 461.64501953]
[53.71260834 446.29074097]
[61.72946167 433.19012451]
[54.49514008 420.04995728]
[48.51300049 415.70486450]
[47.25242996 406.65374756]
[40.21933365 393.40475464]
[33.18624115 380.15576172]
[26.15314484 366.90679932]
[13.35157967 359.29302979]
[13.71514320 343.47601318]
[6.68204832 330.22702026]
[-0.35104671 316.97805786]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 9]
[3 8]
[15 59]
[16 58]
[17 57]
[18 56]
[19 55]
[20 54]
[26 53]
[27 52]
[28 51]
[29 50]
[30 49]
[31 48]
[35 44]
[36 43]
[37 42]
[62 174]
[63 173]
[64 172]
[65 171]
[68 167]
[69 166]
[71 164]
[72 163]
[73 162]
[74 161]
[75 160]
[76 159]
[77 95]
[78 94]
[79 93]
[80 91]
[81 90]
[82 89]
[83 88]
[106 122]
[107 121]
[108 120]
[109 118]
[110 117]
[123 144]
[124 143]
[125 142]
[126 141]
[127 140]
[129 138]
[130 137]
[175 205]
[176 204]
[177 203]
[179 201]
[180 200]
[181 199]
[182 198]
[183 196]
[184 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
