%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 02:42:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGUCGUGGCCUGAAGAAAUUCAUGGGGGCAGCCCUUAAAUCCCUUCCCUGUGGGAAGUCAUCCUGGCUGGUCUGUCUUUUCUCCAUUUGUUUAAAAAAAAAACAAAAACAAAAAACAACACUUUGGUGUGGUGGUAUGGUACGUAGCUAUUUUCCUAAGCAUGUCUGUCAAUCUCCCUUCUUGCUGAUUAGCUUUCAUAUGACUAUAUUAAAUGGAAGUAUUUUUGGGAAAAGAGAAACCAA\
) } def
/len { sequence length } bind def

/coor [
[201.87820435 99.40755463]
[195.91088867 113.16950226]
[183.91325378 122.17265320]
[169.03192139 124.05574036]
[155.16983032 118.32489014]
[145.96261597 106.48313141]
[143.82505798 91.63621521]
[149.31758118 77.67831421]
[136.76565552 85.89104462]
[124.21371460 94.10377502]
[111.66178131 102.31650543]
[101.75949860 113.58348846]
[95.22639465 127.08602905]
[88.69329071 140.58856201]
[82.16018677 154.09111023]
[83.89461517 170.39826965]
[70.48188782 179.83389282]
[55.71987915 172.69140625]
[54.79447556 156.31838989]
[68.65764618 147.55799866]
[75.19075012 134.05546570]
[81.72385406 120.55292511]
[88.25695801 107.05038452]
[82.14424896 102.70472717]
[63.80610657 89.66774750]
[53.19950485 100.27435303]
[42.59290314 110.88095093]
[31.98630333 121.48755646]
[28.26684952 137.45933533]
[12.49867725 141.96452332]
[0.90272933 130.36857605]
[5.40792274 114.60041046]
[21.37970161 110.88095093]
[31.98630333 100.27435303]
[42.59290314 89.66774750]
[53.19950485 79.06114960]
[49.46345139 72.55792999]
[36.45700836 80.03002930]
[23.45056152 87.50213623]
[8.45059586 87.47026062]
[15.97845554 74.49569702]
[28.98490143 67.02359009]
[41.99134445 59.55147934]
[38.25529480 53.04825974]
[23.74987793 56.86832428]
[9.24446106 60.68839264]
[-5.26095486 64.50846100]
[-19.76637077 68.32852173]
[-34.27178574 72.14859009]
[-48.04883957 82.02934265]
[-61.35731125 71.52596283]
[-54.94856262 55.82996750]
[-38.09185410 57.64317703]
[-23.58643723 53.82310867]
[-9.08102131 50.00304413]
[5.42439461 46.18297577]
[19.92980957 42.36290741]
[34.43522644 38.54284286]
[47.09389496 30.49560165]
[61.72561264 27.19213867]
[76.61382294 29.02000618]
[90.01189423 35.76476288]
[100.34799957 46.63513565]
[106.40953064 60.35584259]
[107.48537445 75.31721497]
[103.44905090 89.76457214]
[116.00098419 81.55184174]
[128.55291748 73.33911133]
[141.10485840 65.12638092]
[153.10244751 56.12316895]
[164.49597168 46.36677170]
[175.88951111 36.61037064]
[181.33915710 21.75735855]
[196.03894043 19.35621643]
[201.48858643 4.50320387]
[216.18836975 2.10206294]
[227.58190918 -7.65433550]
[238.97544861 -17.41073418]
[250.36898804 -27.16713142]
[261.76251221 -36.92353058]
[273.15606689 -46.67992783]
[284.54959106 -56.43632889]
[295.94314575 -66.19272614]
[280.94390869 -66.34622192]
[274.45654297 -79.87078857]
[283.72485352 -91.66477966]
[298.40063477 -88.55811310]
[289.39743042 -100.55570221]
[280.39419556 -112.55329132]
[271.39099121 -124.55088043]
[262.38778687 -136.54847717]
[253.38456726 -148.54606628]
[244.38134766 -160.54365540]
[228.75808716 -161.21261597]
[217.25492859 -171.80558777]
[215.30331421 -187.32092285]
[223.82473755 -200.43270874]
[238.79563904 -204.94999695]
[253.14723206 -198.73985291]
[260.10311890 -184.73451233]
[256.37893677 -169.54685974]
[265.38214111 -157.54927063]
[274.38537598 -145.55168152]
[283.38858032 -133.55409241]
[292.39178467 -121.55651093]
[301.39501953 -109.55892181]
[310.39822388 -97.56133270]
[312.25564575 -90.59720612]
[313.15274048 -83.53974152]
[313.08770752 -76.48754120]
[327.05416870 -81.95909882]
[341.02062988 -87.43064880]
[354.98709106 -92.90220642]
[368.95355225 -98.37375641]
[382.92001343 -103.84531403]
[396.85095215 -109.40666199]
[410.74581909 -115.05757904]
[417.25750732 -131.30517578]
[433.19552612 -137.68048096]
[448.50103760 -130.68673706]
[462.32199097 -136.51608276]
[468.99487305 -142.72090149]
[476.35861206 -142.33024597]
[490.25347900 -147.98115540]
[504.14834595 -153.63208008]
[518.04321289 -159.28300476]
[531.93804932 -164.93391418]
[545.83294678 -170.58483887]
[559.72778320 -176.23574829]
[573.62261963 -181.88667297]
[587.51751709 -187.53758240]
[601.41235352 -193.18850708]
[615.30718994 -198.83943176]
[625.17578125 -211.20558167]
[639.88024902 -208.83305359]
[653.77508545 -214.48397827]
[667.66992188 -220.13488770]
[681.56481934 -225.78581238]
[695.45965576 -231.43672180]
[709.35449219 -237.08764648]
[711.10784912 -245.19921875]
[715.85894775 -251.88887024]
[722.78021240 -256.11865234]
[730.71502686 -257.26821899]
[738.37097168 -255.22482300]
[744.53009033 -250.38990784]
[758.69738770 -255.31803894]
[772.86474609 -260.24618530]
[787.03210449 -265.17431641]
[801.19940186 -270.10244751]
[811.69152832 -281.94418335]
[826.25433350 -278.81784058]
[840.42163086 -283.74597168]
[828.18817139 -292.42590332]
[827.21490479 -307.39431763]
[838.22137451 -317.58532715]
[853.07073975 -315.46496582]
[860.78515625 -302.60076904]
[855.66186523 -288.50329590]
[870.11688232 -292.50982666]
[884.57196045 -296.51632690]
[899.02697754 -300.52282715]
[899.24304199 -315.62680054]
[903.70690918 -330.05767822]
[912.05676270 -342.64562988]
[923.61578369 -352.37017822]
[937.44677734 -358.44302368]
[952.42864990 -360.37185669]
[967.34686279 -358.00030518]
[980.99200439 -351.52062988]
[992.25799561 -341.45812988]
[1000.23150635 -328.62847900]
[1004.26623535 -314.07177734]
[1004.03497314 -298.96801758]
[999.55657959 -284.54162598]
[991.19409180 -271.96209717]
[979.62536621 -262.24914551]
[965.78826904 -256.19021606]
[950.80444336 -254.27644348]
[935.88867188 -256.66296387]
[922.25000000 -263.15634155]
[910.99414062 -273.23016357]
[903.03350830 -286.06781006]
[888.57843018 -282.06127930]
[874.12341309 -278.05477905]
[859.66839600 -274.04827881]
[845.34979248 -269.57864380]
[831.18243408 -264.65051270]
[821.70373535 -253.16125488]
[806.12756348 -255.93510437]
[791.96020508 -251.00697327]
[777.79290771 -246.07884216]
[763.62554932 -241.15071106]
[749.45819092 -236.22256470]
[736.94000244 -218.55819702]
[715.00543213 -223.19277954]
[701.11059570 -217.54187012]
[687.21569824 -211.89094543]
[673.32086182 -206.24003601]
[659.42602539 -200.58911133]
[645.53112793 -194.93820190]
[636.65643311 -182.97622681]
[620.95812988 -184.94456482]
[607.06329346 -179.29365540]
[593.16839600 -173.64273071]
[579.27355957 -167.99180603]
[565.37872314 -162.34089661]
[551.48382568 -156.68997192]
[537.58898926 -151.03906250]
[523.69409180 -145.38813782]
[509.79925537 -139.73721313]
[495.90438843 -134.08630371]
[482.00955200 -128.43537903]
[468.15133667 -122.69512939]
[454.33038330 -116.86578369]
[451.19995117 -104.37976837]
[441.30630493 -95.84394836]
[428.10928345 -94.53882599]
[416.39672852 -101.16271973]
[402.50189209 -95.51180267]
[397.50097656 -90.09255219]
[388.39157104 -89.87884521]
[374.42510986 -84.40729523]
[360.45864868 -78.93573761]
[346.49218750 -73.46418762]
[332.52572632 -67.99263763]
[318.55926514 -62.52108002]
[305.69952393 -54.79919052]
[294.30599976 -45.04278946]
[282.91244507 -35.28639221]
[271.51892090 -25.52999306]
[260.12539673 -15.77359486]
[248.73184204 -6.01719666]
[237.33830261 3.73920178]
[225.94477844 13.49559975]
[221.31007385 27.65077019]
[205.79534912 30.74975395]
[201.16064453 44.90492630]
[185.64591980 48.00391006]
[174.25238037 57.76030731]
[162.85884094 67.51670837]
[177.79591370 66.14414215]
[191.45368958 72.34616852]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 69]
[9 68]
[10 67]
[11 66]
[12 23]
[13 22]
[14 21]
[15 20]
[25 36]
[26 35]
[27 34]
[28 33]
[44 58]
[45 57]
[46 56]
[47 55]
[48 54]
[49 53]
[70 241]
[71 240]
[72 239]
[74 237]
[76 235]
[77 234]
[78 233]
[79 232]
[80 231]
[81 230]
[82 229]
[83 228]
[87 107]
[88 106]
[89 105]
[90 104]
[91 103]
[92 102]
[93 101]
[110 227]
[111 226]
[112 225]
[113 224]
[114 223]
[115 222]
[116 220]
[117 219]
[120 215]
[121 214]
[123 213]
[124 212]
[125 211]
[126 210]
[127 209]
[128 208]
[129 207]
[130 206]
[131 205]
[132 204]
[133 203]
[135 201]
[136 200]
[137 199]
[138 198]
[139 197]
[140 196]
[146 194]
[147 193]
[148 192]
[149 191]
[150 190]
[152 188]
[153 187]
[159 186]
[160 185]
[161 184]
[162 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
