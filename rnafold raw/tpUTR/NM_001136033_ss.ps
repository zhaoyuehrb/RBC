%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 00:35:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGUGGUCCCUCUCCCCGGACUUGCACUUGUUCCUUGUUUCCUCUGGGUUUUAUAGUGAUACAGUGGUGUCCCCGGGGCCAGGCGCGCUCUGCCCAGCCCAGCCUACAGUGCGGAUAAAGGUGCGGAUGCUGCUGGCCCUGAACGUCCGUGUGUCUGCCGUCGGUCCUGUCACCGA\
) } def
/len { sequence length } bind def

/coor [
[99.57810211 200.55287170]
[95.78931427 193.35437012]
[95.16539001 185.14918518]
[97.88362885 177.28251648]
[103.56719208 171.07388306]
[100.13674927 156.47142029]
[96.70629883 141.86895752]
[89.93261719 138.64913940]
[93.34471893 153.25590515]
[84.05223846 165.03086853]
[69.05243683 165.10745239]
[59.64019394 153.42800903]
[62.90295029 138.78715515]
[76.38525391 132.20950317]
[69.61157227 128.98968506]
[56.12189102 135.54928589]
[42.63220978 142.10890198]
[29.14252853 148.66850281]
[15.65284634 155.22811890]
[2.16316462 161.78773499]
[-0.55811620 178.46665955]
[-12.55739212 190.12968445]
[-28.97785950 192.33174133]
[-43.33539581 184.40274048]
[-56.70653152 191.20074463]
[-70.07766724 197.99873352]
[-71.52849579 213.35772705]
[-81.07067871 225.48002625]
[-95.65933228 230.49746704]
[-110.63927460 226.80899048]
[-121.23046112 215.59158325]
[-124.05328369 200.42466736]
[-118.20698547 186.14796448]
[-105.55709839 177.31710815]
[-90.14015961 176.75000000]
[-76.87566376 184.62759399]
[-63.50452423 177.82960510]
[-50.13338852 171.03160095]
[-49.26094818 157.69210815]
[-41.84501266 146.43975830]
[-29.73750496 140.27922058]
[-16.05941200 140.91879272]
[-4.39644527 148.29804993]
[9.09323692 141.73843384]
[22.58291817 135.17883301]
[36.07260132 128.61921692]
[49.56228256 122.05960846]
[63.05196381 115.50000000]
[61.46373749 106.29412842]
[62.07617188 97.21105194]
[64.74388885 88.75631714]
[69.21015167 81.37469482]
[75.12709045 75.42682648]
[82.08043671 71.17186737]
[89.61723328 68.75703430]
[97.27465057 68.21425629]
[104.60810089 69.46401978]
[111.21698761 72.32577515]
[120.16249847 60.28509903]
[129.10800171 48.24442291]
[138.05351257 36.20374680]
[146.99902344 24.16307449]
[155.94453430 12.12239933]
[158.56262207 3.33781481]
[165.15721130 -0.05070572]
[174.31501770 -11.93071747]
[183.47282410 -23.81072807]
[192.52482605 -35.77154160]
[201.47033691 -47.81221771]
[210.41584778 -59.85289001]
[208.20469666 -70.54293060]
[212.17681885 -80.47441101]
[220.78848267 -86.44047546]
[231.04255676 -86.65973663]
[240.40977478 -98.37534332]
[249.77697754 -110.09095001]
[259.14419556 -121.80655670]
[268.51138306 -133.52215576]
[277.87860107 -145.23776245]
[287.24581909 -156.95336914]
[296.61300659 -168.66897583]
[305.98022461 -180.38458252]
[304.42355347 -195.88343811]
[314.09011841 -207.63128662]
[328.87551880 -209.01982117]
[338.24273682 -220.73542786]
[347.60992432 -232.45103455]
[350.53814697 -241.13716125]
[357.24884033 -244.28950500]
[366.82250977 -255.83702087]
[376.39614868 -267.38452148]
[385.96981812 -278.93203735]
[395.54348755 -290.47955322]
[405.01428223 -302.11157227]
[414.38150024 -313.82717896]
[411.07293701 -333.61517334]
[423.15756226 -349.24746704]
[442.53540039 -350.97537231]
[451.26580811 -363.17291260]
[459.88763428 -375.44747925]
[468.40017700 -387.79803467]
[463.11312866 -402.38662720]
[467.44311523 -417.28732300]
[479.72518921 -426.77050781]
[495.23657227 -427.18969727]
[508.01290894 -418.38372803]
[513.14135742 -403.73864746]
[508.64999390 -388.88580322]
[496.26577759 -379.53640747]
[480.75073242 -379.28549194]
[472.23818970 -366.93493652]
[471.02737427 -359.62023926]
[463.46334839 -354.44253540]
[454.73297119 -342.24496460]
[459.09552002 -332.89389038]
[459.16702271 -322.49456787]
[454.86712646 -312.93673706]
[446.91592407 -305.98535156]
[436.71423340 -302.95458984]
[426.09710693 -304.45996094]
[416.72988892 -292.74435425]
[415.00326538 -285.53399658]
[407.09100342 -280.90588379]
[397.51733398 -269.35836792]
[387.94366455 -257.81085205]
[378.36999512 -246.26335144]
[368.79635620 -234.71583557]
[359.32553101 -223.08383179]
[349.95834351 -211.36822510]
[340.59112549 -199.65261841]
[342.49011230 -184.92408752]
[333.15734863 -172.90936279]
[317.69583130 -171.01737976]
[308.32861328 -159.30177307]
[298.96142578 -147.58616638]
[289.59420776 -135.87055969]
[280.22698975 -124.15495300]
[270.85980225 -112.43934631]
[261.49258423 -100.72373962]
[252.12538147 -89.00813293]
[242.75816345 -77.29252625]
[241.29277039 -58.03015137]
[222.45652771 -50.90738297]
[213.51101685 -38.86670685]
[204.56550598 -26.82603264]
[203.09585571 -19.55892563]
[195.35282898 -14.65292740]
[186.19502258 -2.77291584]
[177.03723145 9.10709572]
[167.98521423 21.06790924]
[159.03970337 33.10858536]
[150.09419250 45.14925766]
[141.14868164 57.18993378]
[132.20317078 69.23060608]
[123.25765991 81.27128601]
[133.36778259 110.44480896]
[111.30876923 138.43850708]
[114.73921204 153.04096985]
[118.16966248 167.64344788]
[134.70805359 182.74081421]
[127.82449341 203.24925232]
[132.28215027 217.57159424]
[136.73980713 231.89392090]
[141.19746399 246.21626282]
[145.65512085 260.53860474]
[159.76141357 267.66519165]
[164.61735535 282.70498657]
[157.34204102 296.73513794]
[142.25173950 301.43179321]
[128.29930115 294.00854492]
[123.76242828 278.86944580]
[131.33277893 264.99624634]
[126.87512970 250.67391968]
[122.41747284 236.35157776]
[117.95981598 222.02925110]
[113.50215912 207.70690918]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 159]
[6 158]
[7 157]
[15 48]
[16 47]
[17 46]
[18 45]
[19 44]
[20 43]
[24 38]
[25 37]
[26 36]
[58 155]
[59 154]
[60 153]
[61 152]
[62 151]
[63 150]
[65 149]
[66 148]
[67 147]
[68 145]
[69 144]
[70 143]
[74 141]
[75 140]
[76 139]
[77 138]
[78 137]
[79 136]
[80 135]
[81 134]
[82 133]
[85 130]
[86 129]
[87 128]
[89 127]
[90 126]
[91 125]
[92 124]
[93 123]
[94 121]
[95 120]
[98 114]
[99 113]
[100 111]
[101 110]
[161 176]
[162 175]
[163 174]
[164 173]
[165 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
