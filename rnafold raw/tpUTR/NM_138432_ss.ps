%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 02:33:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGUCCCAUCCUGGCCCCAAAGACCCCUGAGAGGCCCAUGGACAGUCCUGUGUCUGGAUGAGGAGGACUCAGUGCUGGCAGAUGGCAGUGGAAGCUGCCCUGUGCAACUGUGCUGGCUGCCUCCUGAAGGAAGCCCUCCUGGACUGCUUCUUUUGGCUCUCCGACAACUCCGGCCAAUAAACACUUUCUGAAUUGA\
) } def
/len { sequence length } bind def

/coor [
[-10.66484451 477.69824219]
[-17.32584381 491.13815308]
[-23.98684311 504.57806396]
[-30.64784241 518.01794434]
[-37.30884171 531.45788574]
[-43.96984100 544.89776611]
[-49.87459183 558.68664551]
[-55.00489426 572.78204346]
[-60.13519669 586.87744141]
[-59.87080002 603.82934570]
[-76.08700562 608.77618408]
[-85.32958984 594.56311035]
[-74.23059082 581.74713135]
[-69.10028839 567.65173340]
[-63.96998215 553.55639648]
[-77.56133270 559.90264893]
[-92.08622742 556.15728760]
[-100.91406250 544.03009033]
[-100.01496124 529.05706787]
[-89.79936218 518.07336426]
[-74.93065643 516.09307861]
[-62.19638824 524.02014160]
[-57.40974808 538.23675537]
[-50.74874878 524.79687500]
[-44.08774948 511.35696411]
[-37.42675018 497.91705322]
[-30.76575089 484.47714233]
[-24.10475159 471.03723145]
[-40.46094894 453.86199951]
[-48.10464478 431.37167358]
[-45.59373856 407.71438599]
[-33.36204147 387.26712036]
[-13.64471340 373.82583618]
[9.93014336 369.90081787]
[12.76891232 355.17187500]
[15.60768127 340.44296265]
[18.44644928 325.71401978]
[16.77478409 322.59811401]
[16.53554535 318.51525879]
[18.16777802 314.15045166]
[21.78668594 310.35919189]
[25.32307053 295.78204346]
[28.85945511 281.20486450]
[27.17688751 276.72482300]
[28.29834175 271.13980103]
[32.74621582 266.22491455]
[36.74332047 251.76727295]
[35.46999359 249.25854492]
[35.11910629 246.09167480]
[35.94732666 242.61744690]
[38.07897949 239.27334595]
[41.47974777 236.53482056]
[46.38576889 222.35981750]
[51.29178619 208.18479919]
[56.19780731 194.00979614]
[55.41379929 186.65274048]
[61.29574966 179.64985657]
[66.42604828 165.55447388]
[71.55635071 151.45907593]
[70.88916779 144.09051514]
[76.88148499 137.18183899]
[82.23477936 123.16962433]
[87.58807373 109.15740967]
[82.02173615 84.08221436]
[79.65171814 69.27062988]
[77.28169250 54.45904922]
[74.91167450 39.64746475]
[72.42422485 24.85514832]
[62.40809250 12.60820007]
[67.81777954 -1.26928389]
[65.21305847 -16.04140091]
[62.60833359 -30.81351662]
[60.00361252 -45.58563232]
[57.39888763 -60.35774994]
[54.79416656 -75.12986755]
[52.18944550 -89.90198517]
[36.27047729 -100.15801239]
[32.94911575 -118.47694397]
[43.87329865 -133.15672302]
[40.80119705 -147.83876038]
[37.72909927 -162.52079773]
[27.32944107 -174.44378662]
[32.29610062 -188.48591614]
[21.89644432 -200.40892029]
[26.86310196 -214.45104980]
[23.79100227 -229.13308716]
[20.71890259 -243.81512451]
[17.64680290 -258.49716187]
[14.57470226 -273.17919922]
[11.50260258 -287.86123657]
[0.17086138 -299.71551514]
[5.03017759 -315.37817383]
[21.08170319 -318.73681641]
[31.81300545 -306.33636475]
[26.18463898 -290.93331909]
[29.25673866 -276.25128174]
[32.32883835 -261.56924438]
[35.40093994 -246.88722229]
[38.47303772 -232.20518494]
[41.54513931 -217.52314758]
[51.72505951 -206.65031433]
[46.97813797 -191.55801392]
[57.15805435 -180.68518066]
[52.41113281 -165.59289551]
[55.48323441 -150.91085815]
[58.55533600 -136.22882080]
[69.24143982 -132.19673157]
[76.72793579 -123.41282654]
[79.06367493 -111.98777008]
[75.55396271 -100.74139404]
[66.96156311 -92.50670624]
[69.56628418 -77.73458862]
[72.17100525 -62.96247101]
[74.77572632 -48.19035721]
[77.38044739 -33.41823959]
[79.98517609 -18.64612198]
[82.58989716 -3.87400651]
[92.41971588 7.31634140]
[87.19634247 22.25042534]
[91.45841217 28.29819679]
[89.72325897 37.27744293]
[92.09327698 52.08902740]
[94.46329498 66.90061188]
[96.83332062 81.71219635]
[109.32186890 90.02099609]
[123.89904022 86.48461151]
[138.47621155 82.94822693]
[153.05339050 79.41184235]
[167.63055420 75.87545776]
[182.20773315 72.33907318]
[196.78491211 68.80268860]
[211.36207581 65.26630402]
[225.93925476 61.72992325]
[240.51643372 58.19353867]
[255.09359741 54.65715408]
[269.58248901 50.77486801]
[283.97488403 46.54888153]
[294.89382935 34.31332779]
[310.89233398 37.91609573]
[315.51251221 53.65096283]
[304.00149536 65.33124542]
[288.20086670 60.94127274]
[273.80847168 65.16725922]
[271.80493164 68.08089447]
[268.28558350 70.16440582]
[263.65805054 70.71369934]
[258.62997437 69.23432922]
[244.05281067 72.77071381]
[229.47563171 76.30709839]
[214.89846802 79.84348297]
[200.32128906 83.37985992]
[185.74412537 86.91624451]
[171.16694641 90.45262909]
[156.58976746 93.98901367]
[142.01260376 97.52539825]
[127.43542480 101.06178284]
[112.85825348 104.59816742]
[101.60028839 114.51070404]
[96.24699402 128.52291870]
[90.89370728 142.53514099]
[85.65174103 156.58938599]
[80.52143860 170.68476868]
[75.39113617 184.78016663]
[70.37281799 198.91580200]
[65.46679688 213.09082031]
[60.56077957 227.26583862]
[55.65475845 241.44084167]
[51.20095444 255.76437378]
[47.20384598 270.22201538]
[43.43662643 284.74124146]
[39.90024185 299.31842041]
[36.36386108 313.89559937]
[33.17538071 328.55279541]
[30.33661079 343.28170776]
[27.49784279 358.01065063]
[24.65907478 372.73959351]
[31.65543747 375.67123413]
[38.18518448 379.52612305]
[44.12724304 384.23190308]
[49.37157440 389.70031738]
[53.82120514 395.82907104]
[57.39400864 402.50369263]
[60.02423859 409.59957886]
[61.66373062 416.98443604]
[62.28277969 424.52072144]
[61.87069321 432.06811523]
[60.43594742 439.48626709]
[58.00604248 446.63732910]
[54.62696457 453.38848877]
[50.36231232 459.61456299]
[45.29210663 465.20013428]
[39.51128006 470.04183960]
[33.12791443 474.05026245]
[26.26119995 477.15148926]
[19.03923416 479.28857422]
[11.59660721 480.42257690]
[4.07191229 480.53314209]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 28]
[2 27]
[3 26]
[4 25]
[5 24]
[6 23]
[7 15]
[8 14]
[9 13]
[34 176]
[35 175]
[36 174]
[37 173]
[41 172]
[42 171]
[43 170]
[46 169]
[47 168]
[52 167]
[53 166]
[54 165]
[55 164]
[57 163]
[58 162]
[59 161]
[61 160]
[62 159]
[63 158]
[64 124]
[65 123]
[66 122]
[67 121]
[68 119]
[70 117]
[71 116]
[72 115]
[73 114]
[74 113]
[75 112]
[76 111]
[79 106]
[80 105]
[81 104]
[83 102]
[85 100]
[86 99]
[87 98]
[88 97]
[89 96]
[90 95]
[125 157]
[126 156]
[127 155]
[128 154]
[129 153]
[130 152]
[131 151]
[132 150]
[133 149]
[134 148]
[135 147]
[136 143]
[137 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
