%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 04:03:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACUGUGAUAUACUUUCAUCCGUUUUAUGAUCUGUAAAAUAAAAACUCAGCUGGGUCCAGAUAUCAGGUGUUCUAAAUCUAAGAAUGUAAGAACAAUCUUAAUAGAAAUAUGUUUUUAAUAAGUGGCUAAUAUCUACAAAUAGUACCUUUGCUAAAUGAAUUCUUUUUUAUGACUAUUUUGUUUUUUAGUAAUUGGGUGAAAAAACAACUGAAAUGAGAUUAUUUAUUAUUUUAACAUAAGGAUUAAAAAAAUU\
UAGAAACUCUUA\
) } def
/len { sequence length } bind def

/coor [
[-16.81406593 246.42990112]
[-13.73712444 231.74969482]
[-25.06289291 241.58468628]
[-36.38866425 251.41967773]
[-47.71443176 261.25466919]
[-52.12184525 269.21502686]
[-59.23108673 271.13760376]
[-70.67136383 280.83914185]
[-82.11164093 290.54071045]
[-93.55191803 300.24224854]
[-104.99219513 309.94378662]
[-116.43247986 319.64535522]
[-120.93289948 327.55349731]
[-128.06419373 329.39260864]
[-139.61740112 338.95938110]
[-139.32308960 352.40444946]
[-146.70892334 363.40969849]
[-158.90000916 368.09252930]
[-171.37707520 364.95648193]
[-183.04162598 374.38717651]
[-194.70619202 383.81787109]
[-206.37075806 393.24856567]
[-218.03532410 402.67926025]
[-229.30325317 412.58044434]
[-240.15557861 422.93548584]
[-251.00791931 433.29052734]
[-261.86026001 443.64556885]
[-272.71258545 454.00061035]
[-283.56491089 464.35565186]
[-279.86068726 479.26116943]
[-284.12094116 494.01739502]
[-295.19961548 504.65496826]
[-310.11666870 508.31243896]
[-324.85946655 504.00598145]
[-335.46228027 492.89401245]
[-339.07296753 477.96554565]
[-334.72030640 463.23632812]
[-323.57516479 452.66842651]
[-308.63546753 449.10452271]
[-293.91995239 453.50332642]
[-283.06762695 443.14828491]
[-272.21530151 432.79324341]
[-261.36294556 422.43820190]
[-250.51062012 412.08316040]
[-239.65829468 401.72811890]
[-254.65829468 401.72332764]
[-266.20928955 392.15386963]
[-269.00411987 377.41653442]
[-261.75863647 364.28250122]
[-247.80184937 358.78631592]
[-233.54632568 363.45321655]
[-225.54185486 376.13897705]
[-227.46601868 391.01470947]
[-215.80145264 381.58401489]
[-204.13688660 372.15332031]
[-192.47232056 362.72262573]
[-180.80776978 353.29193115]
[-179.74168396 336.49237061]
[-166.58528137 325.45724487]
[-149.18418884 327.40618896]
[-137.63096619 317.83938599]
[-126.13402557 308.20507812]
[-114.69374847 298.50350952]
[-103.25347137 288.80197144]
[-91.81319427 279.10043335]
[-80.37291718 269.39886475]
[-68.93264008 259.69732666]
[-57.54941940 249.92889404]
[-46.22364807 240.09390259]
[-34.89788055 230.25891113]
[-23.57211113 220.42393494]
[-12.78065586 210.00546265]
[-2.55353880 199.03248596]
[7.67357826 188.05952454]
[17.90069580 177.08654785]
[28.12781334 166.11358643]
[38.35493088 155.14060974]
[48.58204651 144.16764832]
[58.80916595 133.19467163]
[47.49869919 106.49494171]
[51.96171188 77.84387970]
[39.36889648 69.69396210]
[26.77608681 61.54405212]
[14.18327427 53.39413834]
[1.59046185 45.24422455]
[-14.19895840 44.24183655]
[-20.67988014 30.83113289]
[-33.27268982 22.68122101]
[-45.86550522 14.53130722]
[-62.26205444 14.23948002]
[-69.96981812 -0.23540847]
[-61.05971146 -14.00283432]
[-44.69768524 -12.90004921]
[-37.71559143 1.93849504]
[-25.12277794 10.08840847]
[-12.52996635 18.23832130]
[2.35873151 18.65777397]
[9.74037457 32.65141296]
[22.33318710 40.80132675]
[34.92599869 48.95124054]
[47.51881027 57.10115051]
[60.11162186 65.25106812]
[68.19538116 57.72663879]
[77.66520691 52.04451752]
[88.10840607 48.45234299]
[99.06985474 47.10665512]
[110.07183075 48.06610870]
[120.63487244 51.28888321]
[130.29862976 56.63452911]
[138.64195251 63.87008286]
[150.94042969 55.28244781]
[163.23890686 46.69481277]
[175.53736877 38.10717392]
[187.83584595 29.51954079]
[200.13432312 20.93190575]
[202.76057434 2.14277005]
[218.04493713 -8.54657745]
[235.96809387 -4.70139122]
[248.06187439 -13.57497501]
[260.15563965 -22.44855690]
[272.24942017 -31.32214165]
[284.34320068 -40.19572449]
[296.43698120 -49.06930542]
[308.53076172 -57.94289017]
[320.62454224 -66.81647491]
[332.71832275 -75.69005585]
[344.81210327 -84.56363678]
[356.85366821 -93.50795746]
[368.84259033 -102.52268982]
[375.22256470 -117.00048828]
[390.04498291 -118.46522522]
[402.03390503 -127.47995758]
[408.41387939 -141.95774841]
[423.23629761 -143.42248535]
[435.22521973 -152.43722534]
[429.34942627 -167.67607117]
[428.00454712 -183.93896484]
[431.29162598 -199.90858459]
[438.93685913 -214.29359436]
[450.31423950 -225.93302917]
[464.49707031 -233.89006042]
[480.33312988 -237.52734375]
[496.53860474 -236.55809021]
[511.80191040 -231.06861877]
[524.88995361 -221.51078796]
[536.66424561 -230.80410767]
[548.43859863 -240.09741211]
[560.21289062 -249.39073181]
[571.98718262 -258.68405151]
[583.65173340 -268.11474609]
[595.20495605 -277.68151855]
[606.75817871 -287.24829102]
[618.31140137 -296.81506348]
[629.86462402 -306.38183594]
[641.41784668 -315.94860840]
[652.97106934 -325.51541138]
[664.52423096 -335.08218384]
[669.11706543 -342.93704224]
[676.26940918 -344.69241333]
[687.93395996 -354.12310791]
[699.59857178 -363.55380249]
[711.26312256 -372.98449707]
[705.63183594 -387.01232910]
[704.38714600 -402.07693481]
[707.63983154 -416.83877563]
[715.10052490 -429.98522949]
[726.10589600 -440.34735107]
[739.67730713 -447.00369263]
[754.60809326 -449.36245728]
[769.57055664 -447.21383667]
[783.23419189 -440.74890137]
[794.38415527 -430.54251099]
[802.02893066 -417.50222778]
[805.48876953 -402.78756714]
[804.45599365 -387.70697021]
[799.02246094 -373.60137939]
[789.67132568 -361.72500610]
[777.23406982 -353.13397217]
[762.81658936 -348.59213257]
[747.70092773 -348.50338745]
[733.23107910 -352.87554932]
[720.69378662 -361.31994629]
[709.02923584 -351.88925171]
[697.36468506 -342.45855713]
[685.70013428 -333.02786255]
[674.09100342 -323.52896118]
[662.53784180 -313.96218872]
[650.98461914 -304.39541626]
[639.43139648 -294.82864380]
[627.87817383 -285.26184082]
[616.32495117 -275.69506836]
[604.77172852 -266.12829590]
[593.21850586 -256.56152344]
[591.88787842 -252.00740051]
[587.70245361 -248.22744751]
[581.28051758 -246.90972900]
[569.50622559 -237.61642456]
[557.73187256 -228.32310486]
[545.95758057 -219.02980042]
[534.18328857 -209.73648071]
[539.76184082 -197.18060303]
[542.17291260 -183.64439392]
[541.27154541 -169.91479492]
[537.10546875 -156.79115295]
[529.91259766 -145.03865051]
[520.10748291 -135.34371948]
[508.25747681 -128.27397156]
[495.04974365 -124.24488831]
[481.25158691 -123.49550629]
[467.66577148 -126.07415009]
[455.08383179 -131.83540344]
[444.23995972 -140.44830322]
[432.25103760 -131.43356323]
[426.72860718 -117.60056305]
[411.04864502 -115.49102783]
[399.05972290 -106.47628784]
[393.53729248 -92.64328766]
[377.85733032 -90.53376007]
[365.86840820 -81.51902008]
[362.42297363 -75.01005554]
[353.68569946 -72.46985626]
[341.59191895 -63.59627533]
[329.49813843 -54.72269440]
[317.40435791 -45.84910965]
[305.31057739 -36.97552872]
[293.21679688 -28.10194397]
[281.12301636 -19.22836113]
[269.02923584 -10.35477734]
[256.93545532 -1.48119426]
[244.84167480 7.39238882]
[245.59786987 18.73586845]
[240.74824524 29.15038872]
[231.38676453 36.01384735]
[219.75856018 37.53739929]
[208.72196960 33.23038101]
[196.42349243 41.81801605]
[184.12501526 50.40565109]
[171.82653809 58.99328613]
[159.52806091 67.58092499]
[147.22958374 76.16855621]
[151.07192993 86.20763397]
[152.80563354 96.81616974]
[152.35910034 107.55615997]
[149.75079346 117.98416901]
[145.08837891 127.66965485]
[138.56436157 136.21272278]
[130.44812012 143.26065063]
[121.07473755 148.52243042]
[110.83122253 151.78083801]
[100.14051819 152.90133667]
[89.44401550 151.83764648]
[79.18333435 148.63371277]
[69.78213501 143.42178345]
[59.55501938 154.39476013]
[49.32789993 165.36772156]
[39.10078430 176.34069824]
[28.87366676 187.31367493]
[18.64654922 198.28663635]
[8.41943073 209.25961304]
[-1.80768609 220.23257446]
[12.97245502 217.67378235]
[26.82213593 223.43453979]
[35.42759323 235.72055054]
[36.10849380 250.70509338]
[28.65274811 263.72091675]
[15.38260269 270.71401978]
[0.43130779 269.50622559]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 71]
[3 70]
[4 69]
[5 68]
[7 67]
[8 66]
[9 65]
[10 64]
[11 63]
[12 62]
[14 61]
[15 60]
[19 57]
[20 56]
[21 55]
[22 54]
[23 53]
[24 45]
[25 44]
[26 43]
[27 42]
[28 41]
[29 40]
[72 260]
[73 259]
[74 258]
[75 257]
[76 256]
[77 255]
[78 254]
[79 253]
[81 102]
[82 101]
[83 100]
[84 99]
[85 98]
[87 96]
[88 95]
[89 94]
[110 240]
[111 239]
[112 238]
[113 237]
[114 236]
[115 235]
[118 230]
[119 229]
[120 228]
[121 227]
[122 226]
[123 225]
[124 224]
[125 223]
[126 222]
[127 221]
[128 219]
[129 218]
[131 216]
[132 215]
[134 213]
[135 212]
[145 200]
[146 199]
[147 198]
[148 197]
[149 196]
[150 193]
[151 192]
[152 191]
[153 190]
[154 189]
[155 188]
[156 187]
[157 186]
[159 185]
[160 184]
[161 183]
[162 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
