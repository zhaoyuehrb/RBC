%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 04:02:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUCCCUUGGAGGCUGUGGCAAGUCCUCAAUCCUGUGUCCCAGAGGUCCCUCUGGGCCACAACCCAACCCUUCUCACUCUCCUCAGUGCUAGCACUUUGUAUUUUUUGAUACUUUUAUACUUGUUUCUGCUUUUGCUGCUCUUGAUCCCACCUUUGCUCCUGACAACCCUCAUUCAAUAAAGACCAGUGAAGACCAAUGCUUUGCCACCA\
) } def
/len { sequence length } bind def

/coor [
[103.51886749 393.29501343]
[97.27612305 407.50091553]
[83.85867310 415.29525757]
[68.42580414 413.68093872]
[56.91175842 403.27871704]
[53.74393082 388.08843994]
[60.14041138 373.95108032]
[73.64162445 366.30276489]
[75.20214844 351.38415527]
[76.76267242 336.46554565]
[70.39143372 323.00241089]
[79.52245331 310.08206177]
[81.08297729 295.16345215]
[82.64349365 280.24484253]
[73.20890808 271.46887207]
[70.51135254 258.67022705]
[75.75490570 246.47531128]
[87.23112488 239.42471313]
[89.01359558 224.53099060]
[90.79605865 209.63728333]
[92.57852173 194.74356079]
[83.68894958 177.57200623]
[96.01786804 161.62332153]
[97.35610199 146.68313599]
[98.69433594 131.74295044]
[93.21637726 126.62025452]
[84.87926483 139.08992004]
[79.72219849 153.17553711]
[65.13082886 156.65286255]
[54.17525482 146.40711975]
[56.66885757 131.61582947]
[70.37696075 125.52812958]
[82.26046753 116.37486267]
[76.78251648 111.25216675]
[61.96544647 113.58765411]
[47.14838028 115.92314148]
[32.33131409 118.25862885]
[19.90413094 128.05024719]
[6.12738323 122.38893127]
[-8.68968487 124.72441864]
[-23.50675201 127.05990601]
[-38.32382202 129.39538574]
[-53.14088821 131.73088074]
[-67.95795441 134.06636047]
[-82.77502441 136.40185547]
[-95.18009186 147.12782288]
[-110.58070374 141.49282837]
[-113.13404083 125.29367828]
[-100.21343994 115.19466400]
[-85.11051178 121.58478546]
[-70.29344177 119.24929810]
[-55.47637558 116.91381073]
[-40.65930557 114.57832336]
[-25.84223938 112.24283600]
[-11.02517128 109.90734863]
[3.79189610 107.57186127]
[15.15926170 97.94729614]
[29.99582481 103.44155884]
[44.81289291 101.10607147]
[59.62996292 98.77058411]
[74.44702911 96.43509674]
[77.93625641 89.79617310]
[63.81336212 84.74208069]
[49.69047165 79.68798065]
[35.56757736 74.63388062]
[21.44468498 69.57978058]
[7.32179308 64.52568817]
[-6.80109978 59.47158813]
[-21.65408516 61.56653976]
[-35.75690842 56.45671082]
[-45.82068253 45.33374023]
[-49.49846649 30.79159927]
[-45.93256760 16.22161674]
[-35.95458221 5.02162552]
[-21.89145279 -0.19645435]
[-7.02280331 1.78427315]
[5.18388367 10.50188732]
[11.88194656 23.92350388]
[24.05407333 32.68930817]
[36.22620010 41.45511246]
[48.39832687 50.22091675]
[60.57045364 58.98672104]
[72.74258423 67.75252533]
[84.91471100 76.51833344]
[88.40393066 69.87940979]
[81.92443848 56.35106277]
[75.44493866 42.82271576]
[68.96544647 29.29437065]
[55.13712692 20.47906494]
[56.12746811 4.10984707]
[70.91768646 -2.97403336]
[84.29288483 6.51471138]
[82.49378967 22.81487465]
[88.97328949 36.34321976]
[95.45278168 49.87156677]
[101.93228149 63.39990997]
[109.24600983 61.73878098]
[123.87346649 58.41652298]
[131.18719482 56.75539398]
[131.18719482 41.75539398]
[131.18719482 26.75539207]
[131.18719482 11.75539207]
[131.18719482 -3.24460769]
[122.52349854 -17.16841125]
[130.48762512 -31.50384521]
[146.88677979 -31.50384521]
[154.85090637 -17.16841125]
[146.18719482 -3.24460769]
[146.18719482 11.75539207]
[146.18719482 26.75539207]
[146.18719482 41.75539398]
[146.18719482 56.75539398]
[153.37858582 43.59165573]
[160.56996155 30.42791557]
[167.76135254 17.26417732]
[174.95272827 4.10043859]
[182.14411926 -9.06330013]
[197.08081055 -10.43994808]
[211.63687134 -6.81764364]
[224.18626404 1.39897096]
[233.32711792 13.29203033]
[238.03831482 27.53297806]
[237.79357910 42.53098297]
[232.62023926 56.61063766]
[223.09622192 68.19912720]
[210.28543091 76.00191498]
[195.61538696 79.14752197]
[181.81835938 85.03327179]
[168.02133179 90.91901398]
[154.22430420 96.80476379]
[140.42726135 102.69050598]
[126.63024139 108.57625580]
[141.56004333 110.02567291]
[156.48985291 111.47509766]
[171.41966248 112.92451477]
[186.34947205 114.37393188]
[201.27928162 115.82334900]
[216.20909119 117.27276611]
[230.69232178 110.90515900]
[242.61239624 119.83605957]
[257.54220581 121.28547668]
[272.47201538 122.73490143]
[287.43835449 123.73915863]
[302.42797852 124.29737091]
[317.41757202 124.85558319]
[322.50817871 111.46202087]
[331.47290039 100.31207275]
[343.42492676 92.48756409]
[357.18847656 88.74239349]
[371.41442871 89.42994690]
[384.71252441 94.46977234]
[395.78738403 103.35672760]
[403.56442261 115.21162415]
[407.29446411 128.86813354]
[422.27407837 129.64945984]
[437.25372314 130.43078613]
[452.23876953 131.10057068]
[466.47534180 122.96102142]
[480.50445557 131.45310974]
[479.89419556 147.84091187]
[465.27230835 155.26603699]
[451.68054199 146.09017944]
[444.87939453 148.98257446]
[436.47241211 145.41041565]
[421.49276733 144.62908936]
[406.51312256 143.84777832]
[400.54806519 158.41853333]
[389.93618774 170.08572388]
[375.94702148 177.42634583]
[360.26333618 179.53657532]
[344.77899170 176.14306641]
[331.37005615 167.63818359]
[321.66763306 155.03466797]
[316.85937500 139.84518433]
[301.86975098 139.28697205]
[286.88015747 138.72877502]
[284.73620605 140.53475952]
[281.74771118 141.60032654]
[278.19305420 141.59953308]
[274.46347046 140.31315613]
[271.02261353 137.66470337]
[256.09280396 136.21528625]
[241.16297913 134.76586914]
[227.74763489 141.23715210]
[214.75967407 132.20257568]
[199.82986450 130.75315857]
[184.90005493 129.30374146]
[169.97024536 127.85432434]
[155.04043579 126.40489960]
[140.11062622 124.95548248]
[125.18082428 123.50606537]
[113.63452148 133.08119202]
[112.29628754 148.02137756]
[110.95805359 162.96154785]
[118.40313721 170.89120483]
[120.21770477 181.39299011]
[116.04057312 190.95855713]
[107.47224426 196.52603149]
[105.68977356 211.41973877]
[103.90731049 226.31346130]
[102.12484741 241.20718384]
[113.18701172 254.75885010]
[111.06731415 271.78298950]
[97.56210327 281.80535889]
[96.00157928 296.72396851]
[94.44105530 311.64257812]
[100.70066833 326.17282104]
[91.68127441 338.02609253]
[90.12075043 352.94467163]
[88.56022644 367.86328125]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 210]
[9 209]
[10 208]
[12 206]
[13 205]
[14 204]
[18 201]
[19 200]
[20 199]
[21 198]
[23 194]
[24 193]
[25 192]
[34 61]
[35 60]
[36 59]
[37 58]
[39 56]
[40 55]
[41 54]
[42 53]
[43 52]
[44 51]
[45 50]
[85 96]
[86 95]
[87 94]
[88 93]
[99 112]
[100 111]
[101 110]
[102 109]
[103 108]
[132 191]
[133 190]
[134 189]
[135 188]
[136 187]
[137 186]
[138 185]
[140 183]
[141 182]
[142 181]
[143 176]
[144 175]
[145 174]
[154 166]
[155 165]
[156 164]
[157 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
