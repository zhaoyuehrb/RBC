%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 18:52:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCCCGCAGGGCCUCCAGCAGGGUCAGCCAUUCACACCCAUCCACUCACCUCCCAUUCCCAGCCACAUGGCAGAGAAAAAAAUCAUAAUAAAAUGGCUUUAUUUUCUGGUA\
) } def
/len { sequence length } bind def

/coor [
[-16.09011841 446.93975830]
[-27.53012276 448.69055176]
[-33.60576248 462.40502930]
[-39.68140411 476.11947632]
[-45.75704575 489.83395386]
[-43.47557831 506.07363892]
[-56.56362534 515.95465088]
[-71.55732727 509.31231689]
[-73.03244781 492.97964478]
[-59.47151184 483.75830078]
[-53.39587021 470.04385376]
[-47.32022858 456.32937622]
[-41.24458694 442.61489868]
[-48.89590836 426.09857178]
[-42.06118774 408.88800049]
[-24.57770348 401.88592529]
[-19.27363014 387.85498047]
[-13.96955681 373.82406616]
[-8.66548347 359.79315186]
[-9.25218105 352.31866455]
[-3.01402187 345.44931030]
[2.67803478 331.57125854]
[8.37009144 317.69320679]
[14.06214809 303.81515503]
[19.75420570 289.93710327]
[16.41573334 272.77017212]
[30.91896057 261.53073120]
[36.22303391 247.49980164]
[41.52710724 233.46887207]
[46.83118057 219.43795776]
[52.13525391 205.40702820]
[57.43932724 191.37611389]
[62.74340057 177.34518433]
[54.67963791 172.91362000]
[47.13647079 167.64450073]
[40.20055008 161.59835815]
[33.95154190 154.84461975]
[28.46123314 147.46089172]
[23.79269028 139.53198242]
[19.99953842 131.14895630]
[17.12535477 122.40814209]
[15.20314884 113.40991211]
[14.25500488 104.25764465]
[14.29181385 95.05647278]
[15.31315231 85.91207886]
[17.30728722 76.92951965]
[20.25131416 68.21197510]
[24.11141205 59.85957336]
[28.84324265 51.96826553]
[34.39245224 44.62869644]
[40.69529343 37.92517853]
[47.67936707 31.93471336]
[55.26445007 26.72611618]
[63.36340714 22.35921288]
[71.88320923 18.88417053]
[80.72599030 16.34090424]
[89.79016876 14.75863075]
[98.97163391 14.15552330]
[108.16490936 14.53851223]
[117.26438904 15.90319538]
[126.16555786 18.23390007]
[134.76615906 21.50384903]
[142.96740723 25.67548370]
[151.58053589 13.39485168]
[160.19367981 1.11421919]
[161.09579468 -15.26009655]
[175.84762573 -22.42357063]
[189.27375793 -13.00703430]
[187.56253052 3.30258656]
[172.47430420 9.72735214]
[163.86117554 22.00798416]
[155.24804688 34.28861618]
[169.59465027 49.73155212]
[179.74584961 68.20484924]
[194.11125183 63.88800430]
[199.10600281 49.19677734]
[211.80149841 40.27468872]
[227.31610107 40.55245972]
[239.68408203 49.92328644]
[244.14973450 64.78388977]
[238.99591064 79.42006683]
[226.20436096 88.20391083]
[210.69371033 87.75785065]
[198.42810059 78.25341034]
[184.06268311 82.57025146]
[185.73591614 104.43680573]
[181.81449890 126.01383972]
[172.55433655 145.89335632]
[158.55969238 162.77813721]
[140.74377441 175.56637573]
[120.26914978 183.42358398]
[98.47187805 185.83703613]
[76.77432251 182.64926147]
[71.47025299 196.68017578]
[66.16617584 210.71110535]
[60.86210251 224.74201965]
[55.55802917 238.77294922]
[50.25395584 252.80387878]
[44.94988251 266.83480835]
[49.54978180 278.98333740]
[44.73734665 290.61456299]
[33.63226318 295.62915039]
[27.94020653 309.50720215]
[22.24814987 323.38525391]
[16.55609322 337.26333618]
[10.86403561 351.14138794]
[5.36543989 365.09722900]
[0.06136661 379.12814331]
[-5.24270630 393.15905762]
[-10.54677963 407.19000244]
[-3.55690050 417.01321411]
[-2.25723100 428.87777710]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 13]
[3 12]
[4 11]
[5 10]
[16 110]
[17 109]
[18 108]
[19 107]
[21 106]
[22 105]
[23 104]
[24 103]
[25 102]
[27 99]
[28 98]
[29 97]
[30 96]
[31 95]
[32 94]
[33 93]
[63 72]
[64 71]
[65 70]
[74 85]
[75 84]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
