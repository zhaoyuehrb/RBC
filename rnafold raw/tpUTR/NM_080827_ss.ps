%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 08:23:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCCAGGAUUUGGCUCAUAAUCCAGGCCUCUCUCCACGUGUGCCUGAUUGAUGCUCCAAAUUGGCUUCCACGGGCCAAACCUUGGCUGUUCCAGAAACUGAACCCCAGGAAUUGCUUACACACUUUCUUCCAGCGUAGCAUCUCUUCAAACACAAUGCUCUUCCCCUUGACCACUUCUCAGUAUGAAACUCUAUGUCUUCAACUUUCAGACCCCCCAUUUAUUUGUAUGAAGGCUUCAGUUGCCUUAAUAAAGU\
GCUCUGUGGGGUCCG\
) } def
/len { sequence length } bind def

/coor [
[171.93168640 200.74755859]
[165.27770996 180.64442444]
[167.21989441 159.52076721]
[153.68923950 153.04611206]
[138.86892700 154.53184509]
[129.76031494 141.59568787]
[116.22966003 135.12101746]
[102.69900513 128.64636230]
[87.86901855 130.89837646]
[76.87042236 141.09793091]
[65.87183380 151.29748535]
[54.87323761 161.49703979]
[43.87464523 171.69659424]
[32.87605286 181.89614868]
[32.12077713 197.45466614]
[20.82134247 207.64178467]
[5.99333286 206.82586670]
[-5.00526094 217.02542114]
[-16.00385475 227.22497559]
[-26.94314384 237.48811340]
[-37.82276154 247.81448364]
[-48.70238113 258.14083862]
[-59.58199692 268.46722412]
[-63.63217926 276.61352539]
[-70.64810181 278.84933472]
[-81.64669800 289.04888916]
[-92.64528656 299.24844360]
[-103.64388275 309.44799805]
[-114.58317566 319.71112061]
[-110.35105133 334.41989136]
[-113.45056152 349.40826416]
[-123.16944885 361.23205566]
[-137.27438354 367.17422485]
[-152.52416992 365.86929321]
[-165.41448975 357.61715698]
[-172.98327637 344.31405640]
[-173.49125671 329.01699829]
[-166.82170105 315.24108887]
[-154.50723267 306.15194702]
[-139.37762451 303.83819580]
[-124.90954590 308.83151245]
[-122.23125458 301.97229004]
[-113.84343719 298.44940186]
[-102.84484863 288.24984741]
[-91.84625244 278.05029297]
[-80.84765625 267.85073853]
[-69.90837097 257.58758545]
[-59.02875137 247.26123047]
[-48.14913177 236.93486023]
[-37.26951599 226.60848999]
[-34.59122849 219.74928284]
[-26.20341110 216.22637939]
[-15.20481682 206.02682495]
[-4.20622301 195.82727051]
[-3.90356731 180.97990417]
[7.10527420 170.47943115]
[22.67649460 170.89755249]
[33.67509079 160.69799805]
[44.67368317 150.49844360]
[55.67227554 140.29888916]
[66.67086792 130.09933472]
[77.66946411 119.89977264]
[72.63914490 105.76839447]
[57.66962433 104.81265259]
[42.70010376 103.85691071]
[27.73058319 102.90116882]
[12.76106262 101.94543457]
[-2.20845842 100.98969269]
[-16.65598679 108.74861908]
[-30.45484924 99.88727570]
[-29.40995979 83.52144623]
[-14.59621143 76.48690033]
[-1.25271738 86.02017212]
[13.71680355 86.97590637]
[28.68632507 87.93164825]
[43.65584564 88.88739014]
[58.62536621 89.84313202]
[73.59488678 90.79887390]
[76.23252106 83.77798462]
[66.70938873 72.18877411]
[81.50779724 69.73620605]
[84.14543152 62.71532059]
[72.24954987 53.57815170]
[60.35365677 44.44098282]
[48.45777130 35.30381393]
[36.56188202 26.16664696]
[23.71902657 27.07030296]
[14.00463486 19.24481964]
[12.26928329 7.29621029]
[0.48011619 -1.97824514]
[-11.30905151 -11.25270081]
[-23.09821892 -20.52715683]
[-37.99118042 -16.17063522]
[-52.58916092 -21.43168449]
[-61.27893448 -34.28732300]
[-60.71910858 -49.79429626]
[-51.12494659 -61.98985672]
[-36.18560028 -66.18456268]
[-21.64555359 -60.76546097]
[-13.09574890 -47.81631088]
[-13.82376289 -32.31632233]
[-2.03459573 -23.04186821]
[9.75457191 -13.76741314]
[21.54373932 -4.49295712]
[39.03685760 -2.91376233]
[45.69905090 14.27075863]
[57.59494019 23.40792656]
[69.49082947 32.54509735]
[81.38671875 41.68226242]
[93.28260040 50.81943130]
[99.55759430 46.71157837]
[91.34209442 34.16145706]
[103.89234924 25.94616127]
[112.10757446 38.49586487]
[118.38256836 34.38800812]
[114.76686859 19.83030701]
[111.15116119 5.27260590]
[96.09035492 3.39204025]
[82.72776031 -3.80556965]
[72.87056732 -15.34680653]
[67.85187531 -29.67081261]
[68.35041809 -44.84038544]
[74.29877472 -58.80395889]
[84.89248657 -69.67308044]
[98.69882965 -75.97779083]
[113.85060883 -76.86542511]
[128.29867554 -72.21594238]
[140.08905029 -62.65814590]
[147.62718201 -49.48464584]
[149.89360046 -34.47705460]
[146.58177185 -19.66502380]
[138.13961792 -7.05175734]
[125.70886230 1.65690172]
[129.32456970 16.21460342]
[132.94027710 30.77230644]
[140.43572998 31.03308678]
[155.42666626 31.55464745]
[162.92213440 31.81542778]
[167.54084778 17.54421616]
[172.15956116 3.27300525]
[176.77827454 -10.99820614]
[181.39698792 -25.26941872]
[170.03973389 -35.41499329]
[163.79685974 -49.30551147]
[163.75000000 -64.53435516]
[169.90724182 -78.46303558]
[181.20182800 -88.67832947]
[195.67691040 -93.41036224]
[210.82456970 -91.83929443]
[224.02040100 -84.23731995]
[232.97813416 -71.92152405]
[236.14579773 -57.02569199]
[232.97456360 -42.13061523]
[224.01388550 -29.81696320]
[210.81623840 -22.21814537]
[195.66819763 -20.65070343]
[191.04948425 -6.37949228]
[186.43077087 7.89171934]
[181.81205750 22.16293144]
[177.19334412 36.43414307]
[179.35983276 66.14896393]
[172.05848694 91.49520111]
[158.00886536 109.85124207]
[140.55107117 119.78479004]
[123.19661713 121.16443634]
[109.17366791 115.11569977]
[122.70433044 121.59036255]
[136.23498535 128.06503296]
[152.02310181 127.04241180]
[160.16390991 139.51545715]
[173.69456482 145.99011230]
[180.96827698 137.42837524]
[189.90306091 130.63751221]
[200.07809448 125.93100739]
[211.01550293 123.52435303]
[222.20278931 123.52513885]
[233.11689758 125.92825317]
[243.24858093 130.61640930]
[252.12625122 137.36582947]
[259.33786011 145.85687256]
[264.55007935 155.68927002]
[279.12850952 152.15800476]
[293.70690918 148.62673950]
[301.27789307 143.58229065]
[308.47479248 145.14009094]
[323.09313965 141.77806091]
[337.71151733 138.41603088]
[352.32989502 135.05400085]
[366.92852783 131.60729980]
[381.50695801 128.07603455]
[391.05554199 115.18402100]
[407.09286499 114.75539398]
[417.31646729 127.11894989]
[413.88366699 142.79043579]
[399.42782593 149.74803162]
[385.03820801 142.65444946]
[370.45980835 146.18571472]
[364.71963501 150.79792786]
[355.69192505 149.67237854]
[341.07354736 153.03440857]
[326.45516968 156.39642334]
[311.83682251 159.75845337]
[297.23815918 163.20515442]
[282.65975952 166.73641968]
[268.08132935 170.26768494]
[268.19216919 178.22027588]
[267.07574463 186.09489441]
[264.75872803 193.70327759]
[261.29653931 200.86354065]
[256.77194214 207.40447998]
[266.90756226 218.46200562]
[277.04321289 229.51953125]
[287.17883301 240.57707214]
[297.31445312 251.63459778]
[307.45010376 262.69210815]
[322.47869873 267.63702393]
[325.37493896 282.24731445]
[335.51055908 293.30484009]
[353.01535034 293.75549316]
[364.53781128 306.48812866]
[363.29354858 323.27606201]
[373.55667114 334.21536255]
[383.81979370 345.15463257]
[394.08294678 356.09393311]
[404.34606934 367.03323364]
[412.46878052 371.13055420]
[414.66387939 378.15930176]
[424.79949951 389.21685791]
[434.93515015 400.27438354]
[449.96374512 405.21926880]
[452.85995483 419.82955933]
[462.99560547 430.88708496]
[473.13122559 441.94464111]
[483.26687622 453.00216675]
[493.40249634 464.05969238]
[509.01611328 463.19436646]
[521.50201416 472.60903931]
[524.96472168 487.85842896]
[517.76928711 501.74221802]
[503.31311035 507.70489502]
[488.42202759 502.93109131]
[480.12710571 489.67483521]
[482.34497070 474.19531250]
[472.20935059 463.13778687]
[462.07369995 452.08026123]
[451.93807983 441.02273560]
[441.80242920 429.96520996]
[427.49880981 425.81121826]
[423.87762451 410.41000366]
[413.74197388 399.35247803]
[403.60635376 388.29495239]
[393.40679932 377.29635620]
[383.14364624 366.35705566]
[372.88052368 355.41778564]
[362.61737061 344.47848511]
[352.35424805 333.53918457]
[339.56610107 334.93707275]
[328.13162231 328.62979126]
[322.32189941 316.71798706]
[324.45303345 303.44049072]
[314.31741333 292.38296509]
[300.01376343 288.22897339]
[296.39257812 272.82775879]
[286.25692749 261.77023315]
[276.12130737 250.71270752]
[265.98565674 239.65516663]
[255.85003662 228.59764099]
[245.71440125 217.54011536]
[226.29916382 225.61540222]
[205.23760986 225.25375366]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 171]
[4 170]
[6 168]
[7 167]
[8 166]
[9 62]
[10 61]
[11 60]
[12 59]
[13 58]
[14 57]
[17 54]
[18 53]
[19 52]
[20 50]
[21 49]
[22 48]
[23 47]
[25 46]
[26 45]
[27 44]
[28 43]
[29 41]
[63 78]
[64 77]
[65 76]
[66 75]
[67 74]
[68 73]
[82 110]
[83 109]
[84 108]
[85 107]
[86 106]
[89 104]
[90 103]
[91 102]
[92 101]
[115 135]
[116 134]
[117 133]
[138 160]
[139 159]
[140 158]
[141 157]
[142 156]
[181 205]
[182 204]
[183 203]
[185 202]
[186 201]
[187 200]
[188 199]
[189 197]
[190 196]
[210 268]
[211 267]
[212 266]
[213 265]
[214 264]
[215 263]
[217 261]
[218 260]
[221 256]
[222 255]
[223 254]
[224 253]
[225 252]
[227 251]
[228 250]
[229 249]
[231 247]
[232 246]
[233 245]
[234 244]
[235 243]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
