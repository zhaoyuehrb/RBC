%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 05:15:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCCCUGGCCAGCUCUUCGCCCCUCACCUCUUUGAAACUCUGGACGUAUUUAUGGCUCCACCUCCCCACCUCCCUCCCCCGUCAGUGGGAUGACUGGGGGAGGGUUGCUGCAGGGAAGAGGAGAGCCCCCUGCCCUGCCCUGCCCCGUGUCCACCUCCCUUGCCCCCAAGCCUGUCCCCAGUGCCCCUCCCUUCUGUUUGUGCCCCUCUCCCCAAUUUCAUUAAAGAUUUCAUGAAACAUUACCCCUGA\
) } def
/len { sequence length } bind def

/coor [
[172.09963989 253.47036743]
[165.06494141 240.22222900]
[158.03024292 226.97410583]
[144.70858765 226.34703064]
[133.34167480 219.16723633]
[126.95008087 207.21633911]
[127.29434967 193.55979919]
[134.39146423 181.76075745]
[127.52311707 168.42561340]
[120.65477753 155.09048462]
[113.70312500 141.79858398]
[106.66841888 128.55046082]
[91.67575836 129.01974487]
[85.48337555 142.68190002]
[89.76406860 158.14329529]
[80.22856140 171.04499817]
[64.19168091 171.48989868]
[53.95554352 159.13671875]
[57.37244034 143.46176147]
[71.82122040 136.48950195]
[78.01361084 122.82735443]
[71.80049896 118.62649536]
[58.31129074 125.18708801]
[59.37427139 110.22476959]
[53.16115952 106.02391052]
[42.78940582 116.86026764]
[32.41765213 127.69663239]
[33.01432419 143.48965454]
[22.20776749 155.02194214]
[6.40931988 155.45161438]
[-5.00807858 144.52372742]
[-5.27068853 128.72163391]
[5.77729225 117.42040253]
[21.58129311 117.32487488]
[31.95304680 106.48851776]
[42.32479858 95.65215302]
[50.71892166 85.80695343]
[60.44110870 79.12361908]
[70.57615662 75.67807770]
[80.24382782 75.31136322]
[88.65487671 77.64898682]
[95.16024780 82.13305664]
[85.63074493 70.54907227]
[76.10124969 58.96508789]
[66.57175446 47.38110352]
[57.04225159 35.79712296]
[47.51275253 24.21313858]
[37.33774567 27.00726700]
[26.84985733 26.27338791]
[17.23317146 22.11970520]
[9.56500626 15.03908348]
[4.69523478 5.85069561]
[3.15213537 -4.39469671]
[5.08518076 -14.53489208]
[10.25096416 -23.42807961]
[1.31311882 -35.47444534]
[-7.62472677 -47.52080917]
[-15.87054157 -44.32343292]
[-24.57018280 -42.78452682]
[-33.39385223 -42.95876312]
[-42.00775909 -44.83594894]
[-50.08674240 -48.34152985]
[-57.32654953 -53.33955765]
[-63.45529556 -59.63795090]
[-68.24366760 -66.99588013]
[-71.51351166 -75.13298035]
[-73.14445496 -83.74000549]
[-73.07832336 -92.49063873]
[-71.32122803 -101.05378723]
[-67.94318390 -109.10617828]
[-83.41268158 -107.28069305]
[-95.32656860 -116.74187469]
[-96.97155762 -131.50093079]
[-108.84800720 -140.66334534]
[-120.72445679 -149.82577515]
[-132.60090637 -158.98818970]
[-144.47735596 -168.15061951]
[-156.35380554 -177.31303406]
[-168.23025513 -186.47544861]
[-180.10670471 -195.63787842]
[-191.98313904 -204.80029297]
[-203.91670227 -213.88821411]
[-215.90689087 -222.90127563]
[-227.89709473 -231.91433716]
[-239.88728333 -240.92738342]
[-255.49801636 -238.46148682]
[-268.23080444 -247.82371521]
[-270.53152466 -263.45965576]
[-261.03518677 -276.09274292]
[-245.37582397 -278.22802734]
[-232.84382629 -268.59866333]
[-230.87423706 -252.91758728]
[-218.88403320 -243.90452576]
[-206.89384460 -234.89146423]
[-194.90364075 -225.87840271]
[-187.68734741 -224.37545776]
[-182.82072449 -216.67674255]
[-170.94427490 -207.51432800]
[-159.06782532 -198.35189819]
[-147.19137573 -189.18948364]
[-135.31492615 -180.02705383]
[-123.43848419 -170.86463928]
[-111.56203461 -161.70222473]
[-99.68558502 -152.53979492]
[-87.80913544 -143.37738037]
[-73.11579895 -145.53176880]
[-60.94086456 -136.40895081]
[-58.78076553 -120.98262024]
[-52.06806946 -126.10189056]
[-44.51527023 -129.87315369]
[-36.38973999 -132.16290283]
[-36.57748032 -147.16172791]
[-36.76522064 -162.16055298]
[-36.95296097 -177.15937805]
[-37.14069748 -192.15820312]
[-37.32843781 -207.15702820]
[-45.23785400 -220.85928345]
[-37.66045761 -233.68240356]
[-37.84819412 -248.68122864]
[-41.07791519 -257.19726562]
[-37.94324112 -263.86868286]
[-37.94324112 -278.86868286]
[-49.29438019 -289.86535645]
[-49.46147156 -305.66876221]
[-38.34538651 -316.90301514]
[-22.54109764 -316.90301514]
[-11.42501068 -305.66876221]
[-11.59210300 -289.86535645]
[-22.94324112 -278.86868286]
[-22.94324112 -263.86868286]
[-22.84937096 -248.86895752]
[-22.66163063 -233.87013245]
[-14.76564217 -221.24070740]
[-22.32961464 -207.34477234]
[-22.14187431 -192.34594727]
[-21.95413399 -177.34712219]
[-21.76639557 -162.34829712]
[-21.57865524 -147.34947205]
[-21.39091492 -132.35064697]
[0.70233905 -122.43095398]
[14.48846817 -102.41787720]
[15.89313698 -78.07264709]
[4.42163849 -56.45865631]
[13.35948372 -44.41229248]
[22.29732895 -32.36592484]
[41.82991409 -33.84949493]
[58.39167786 -23.11942863]
[65.11878204 -4.41333532]
[59.09673691 14.68364048]
[68.62623596 26.26762390]
[78.15573120 37.85160446]
[87.68523407 49.43558884]
[97.21472931 61.01957321]
[106.74423218 72.60355377]
[103.93496704 57.86896896]
[95.16245270 45.70167542]
[91.21444702 31.23055458]
[92.59249878 16.29398918]
[99.12152863 2.78948307]
[109.97212219 -7.56738520]
[123.76583099 -13.46090317]
[138.75035095 -14.14237118]
[153.02206421 -9.52521896]
[164.76794434 -0.19599758]
[172.49580383 12.66013145]
[175.22393799 27.40995407]
[172.60575867 42.17969131]
[164.97386169 55.09302902]
[153.29780579 64.50949097]
[139.05946350 69.23302460]
[128.15168762 79.52964783]
[142.66062927 75.72297668]
[157.14544678 71.82558441]
[171.60560608 67.83761597]
[186.06576538 63.84964752]
[197.18508911 51.79590225]
[213.12197876 55.66212082]
[217.48191833 71.47106934]
[205.77980042 82.95985413]
[190.05372620 78.30979919]
[175.59358215 82.29776764]
[161.13342285 86.28573608]
[155.53552246 91.08128357]
[146.46730042 90.23191071]
[131.95835876 94.03858185]
[128.94790649 100.90787506]
[143.50570679 104.52316284]
[158.06352234 108.13845062]
[172.62132263 111.75373840]
[187.58218384 110.67085266]
[199.85000610 119.30221558]
[203.88415527 133.74955750]
[197.86264038 147.48786926]
[184.50503540 154.31239319]
[169.84414673 151.14088440]
[160.50207520 139.40759277]
[147.97705078 131.15388489]
[135.45202637 122.90016937]
[122.92700195 114.64646149]
[119.91654205 121.51575470]
[126.95124817 134.76388550]
[133.72190857 140.85586548]
[133.98991394 148.22213745]
[140.85826111 161.55728149]
[147.72659302 174.89241028]
[164.48908997 177.24450684]
[176.42137146 189.01438904]
[178.95211792 205.41426086]
[171.27836609 219.93940735]
[178.31306458 233.18753052]
[185.34777832 246.43565369]
[206.12208557 244.45011902]
[225.63020325 251.73377991]
[239.95719910 266.78247070]
[246.24649048 286.53805542]
[243.26937866 307.00976562]
[231.66477966 324.08044434]
[239.98857117 336.55899048]
[248.31236267 349.03756714]
[256.63616943 361.51611328]
[264.95996094 373.99465942]
[273.28375244 386.47323608]
[287.37841797 393.66006470]
[288.00436401 408.54150391]
[296.32815552 421.02008057]
[311.26211548 427.79568481]
[312.59173584 444.14083862]
[298.94921875 453.24105835]
[284.36880493 445.73480225]
[283.84957886 429.34387207]
[275.52578735 416.86532593]
[262.02648926 410.57101440]
[260.80520630 394.79702759]
[252.48139954 382.31848145]
[244.15760803 369.83990479]
[235.83381653 357.36135864]
[227.51000977 344.88278198]
[219.18621826 332.40423584]
[210.12857056 335.45291138]
[200.62728882 336.56378174]
[191.09266663 335.68511963]
[181.93717957 332.85116577]
[173.55769348 328.18087769]
[166.31825256 321.87286377]
[160.53422546 314.19696045]
[156.45864868 305.48275757]
[154.27104187 296.10531616]
[154.06964111 286.46917725]
[155.86685181 276.99078369]
[159.58866882 268.08056641]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 211]
[2 210]
[3 209]
[8 205]
[9 204]
[10 203]
[11 201]
[12 200]
[13 21]
[14 20]
[25 36]
[26 35]
[27 34]
[42 154]
[43 153]
[44 152]
[45 151]
[46 150]
[47 149]
[55 145]
[56 144]
[57 143]
[70 108]
[73 105]
[74 104]
[75 103]
[76 102]
[77 101]
[78 100]
[79 99]
[80 98]
[81 97]
[82 95]
[83 94]
[84 93]
[85 92]
[111 139]
[112 138]
[113 137]
[114 136]
[115 135]
[116 134]
[118 132]
[119 131]
[121 130]
[122 129]
[171 185]
[172 184]
[173 182]
[174 181]
[175 180]
[217 238]
[218 237]
[219 236]
[220 235]
[221 234]
[222 233]
[224 231]
[225 230]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
