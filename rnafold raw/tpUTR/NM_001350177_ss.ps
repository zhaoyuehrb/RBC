%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 09:53:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAGAAAGUGCCUGCCCACUGCAACGGAGCCGCCAGCACCUCCUCCCCUCCAGAUCCGGGCCCCAGGCUGCUGCCGCUUUUUAUAACUUUAUAUUAUUUUUUUUUAAGAAAAAAAGCUCUUUAAAAUACCUCAAGACUGUCUCCCUGUUCUGUUGCUGCUAUGAAAAUAUAAAAACAGAAACAUAGAAAAGGAAGGAA\
) } def
/len { sequence length } bind def

/coor [
[186.91557312 150.79319763]
[201.91662598 150.70680237]
[190.62278748 140.83517456]
[179.32893372 130.96354675]
[168.03509521 121.09191895]
[153.36044312 118.54158783]
[148.06196594 103.63398743]
[136.76811218 93.76235962]
[125.47427368 83.89073181]
[128.93368530 101.06837463]
[122.30934143 116.53069305]
[108.67071533 125.12525177]
[93.26404572 124.48251343]
[85.19068909 137.12454224]
[77.11733246 149.76657104]
[79.15447235 165.67976379]
[67.88021851 177.09338379]
[51.94320297 175.25187683]
[43.56894684 161.56790161]
[49.18145752 146.53862000]
[64.47530365 141.69320679]
[72.54866028 129.05117798]
[80.62201691 116.40915680]
[73.02680206 99.68945312]
[78.63696289 81.04837036]
[96.06290436 70.11779022]
[81.14181519 68.58126831]
[66.22071838 67.04474640]
[51.29962158 65.50822449]
[36.37852478 63.97169876]
[21.85837555 70.25468445]
[9.99062252 61.25436401]
[-4.93047333 59.71784210]
[-13.79752254 61.95318222]
[-20.07433319 58.03747559]
[-34.96931458 56.26559448]
[-49.86429214 54.49371719]
[-64.75927734 52.72183609]
[-79.66777802 51.06758499]
[-94.58887482 49.53106308]
[-109.50997162 47.99453735]
[-118.55726624 60.32716370]
[-132.47093201 66.43508911]
[-147.47401428 64.76965332]
[-159.54830933 55.87765884]
[-165.51043701 42.22780609]
[-180.43153381 40.69128036]
[-195.35263062 39.15475845]
[-204.89828491 51.27433395]
[-219.48837280 56.28759384]
[-234.46725464 52.59482574]
[-245.05523682 41.37438202]
[-247.87370300 26.20666122]
[-242.02331543 11.93162918]
[-229.37091064 3.10439801]
[-213.95381165 2.54170418]
[-200.69155884 10.42310143]
[-193.81610107 24.23366356]
[-178.89501953 25.77018547]
[-163.97392273 27.30670929]
[-155.35516357 15.15834332]
[-141.72215271 8.91359329]
[-126.69451141 10.34061909]
[-114.31758881 19.15586090]
[-107.97344208 33.07344437]
[-93.05235291 34.60996628]
[-78.13125610 36.14648819]
[-71.14871979 33.70204163]
[-62.98739624 37.82685471]
[-48.09241486 39.59873581]
[-33.19743347 41.37061310]
[-18.30245399 43.14249420]
[-3.39395046 44.79674530]
[11.52714539 46.33326721]
[24.98003769 39.94038391]
[37.91504669 49.05060196]
[52.83614349 50.58712769]
[67.75724030 52.12364960]
[82.67833710 53.66017151]
[97.59943390 55.19669342]
[85.24158478 46.69471359]
[72.88374329 38.19273376]
[58.08581924 35.73884201]
[44.72832108 28.91409111]
[34.06858444 18.36089134]
[27.11001015 5.07261801]
[24.50760651 -9.69990730]
[26.50634003 -24.56614685]
[32.91806793 -38.12674332]
[43.13925552 -49.10523605]
[56.20778656 -56.46821976]
[70.89351654 -59.52262497]
[85.81407928 -57.98093033]
[99.56500244 -51.98826218]
[110.85191345 -42.10871124]
[118.61238098 -29.27223206]
[122.11590576 -14.68712521]
[121.03270721 0.27371249]
[115.46428680 14.20277977]
[116.33330536 29.17758560]
[117.20232391 44.15239334]
[123.61899567 30.59413528]
[130.03565979 17.03587723]
[136.45233154 3.47762036]
[135.36212158 -12.30597878]
[147.80020142 -20.50010681]
[154.21685791 -34.05836487]
[160.63352966 -47.61661911]
[167.05020142 -61.17487717]
[159.48699951 -74.72395325]
[161.36561584 -90.12689209]
[171.96366882 -101.46094513]
[187.20600891 -104.36793518]
[201.23164368 -97.73007202]
[208.64743042 -84.09974670]
[206.60183716 -68.71809387]
[195.88143921 -57.49967957]
[180.60845947 -54.75820541]
[174.19178772 -41.19995117]
[167.77511597 -27.64169312]
[161.35844421 -14.08343601]
[162.90762329 0.73038667]
[150.01058960 9.89429188]
[143.59391785 23.45254898]
[137.17724609 37.01080704]
[130.76057434 50.56906128]
[137.72816467 37.28551102]
[150.57420349 29.54088211]
[165.57415771 29.58062172]
[178.37898254 37.39321136]
[185.27607727 50.71349335]
[184.26574707 65.67942810]
[175.64091492 77.95184326]
[161.90222168 83.97251129]
[147.03303528 81.99582672]
[135.34590149 72.59688568]
[146.63973999 82.46851349]
[157.93359375 92.34014130]
[173.41604614 95.59655762]
[177.90672302 109.79807281]
[189.20056152 119.66970825]
[200.49441528 129.54133606]
[211.78825378 139.41296387]
[223.68254089 148.55221558]
[236.12986755 156.92263794]
[248.57719421 165.29307556]
[264.34649658 166.57339478]
[270.59024048 180.09616089]
[283.03756714 188.46659851]
[295.48486328 196.83703613]
[307.93218994 205.20745850]
[320.37951660 213.57789612]
[332.82684326 221.94833374]
[351.25735474 217.59616089]
[366.75631714 227.91221619]
[369.75064087 245.96466064]
[382.45599365 253.93797302]
[395.16137695 261.91128540]
[406.92517090 252.37757874]
[421.14801025 247.18246460]
[436.28713989 246.88948059]
[450.70034790 251.53041077]
[462.82418823 260.60183716]
[471.34359741 273.11975098]
[475.33441162 287.72634888]
[474.36376953 302.83715820]
[468.53695679 316.81307983]
[458.48599243 328.13815308]
[445.30117798 335.58386230]
[430.41262817 338.34259033]
[415.43542480 336.11508179]
[401.99414062 329.14297485]
[391.54678345 318.18252563]
[385.22662354 304.42263794]
[383.71920776 289.35592651]
[387.18804932 274.61666870]
[374.48269653 266.64334106]
[361.77731323 258.67001343]
[351.46075439 263.56857300]
[339.94168091 262.86700439]
[330.09323120 256.62429810]
[324.42776489 246.29582214]
[324.45642090 234.39566040]
[312.00909424 226.02522278]
[299.56176758 217.65478516]
[287.11444092 209.28434753]
[274.66711426 200.91390991]
[262.21978760 192.54348755]
[247.34078979 191.86187744]
[240.20675659 177.74040222]
[227.75942993 169.36996460]
[215.31210327 160.99952698]
[219.09220886 175.51541138]
[213.73213196 189.52503967]
[201.22819519 197.81065369]
[186.23736572 197.28637695]
[174.34281921 188.14746094]
[169.97456360 173.79760742]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 143]
[3 142]
[4 141]
[5 140]
[7 138]
[8 137]
[9 136]
[13 23]
[14 22]
[15 21]
[26 80]
[27 79]
[28 78]
[29 77]
[30 76]
[32 74]
[33 73]
[35 72]
[36 71]
[37 70]
[38 69]
[39 67]
[40 66]
[41 65]
[46 60]
[47 59]
[48 58]
[101 126]
[102 125]
[103 124]
[104 123]
[106 121]
[107 120]
[108 119]
[109 118]
[144 192]
[145 191]
[146 190]
[148 188]
[149 187]
[150 186]
[151 185]
[152 184]
[153 183]
[156 178]
[157 177]
[158 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
