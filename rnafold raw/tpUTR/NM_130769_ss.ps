%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 14:29:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAUCCUCUCCCCUCCUUCCUCCCCUGGGUCACAGGGCUUGACGUUCUGGUGGGGGAAACCUGUGUUCAAGAUUCAAAAACUGGAAGGAGCUCCAGCCCUGAUGGUUACUUGCUAUGGAAUUUUUUUAAAUAAGGGGAGGGUUGUUCCAGCUUUGAUCCUUUGUAAGAUUUUGUGACUGUCACCUGAGAAGAGGGGAGUUUCUGCUUCUUCCCUGCCUCUGCCUGGCCCUUCUAAACCAAUCUUUCAUCAUUUU\
ACUUCCCUCUUUGCCCUUACCCCUAAAUAAAGCAAGCAGUUCUUGAA\
) } def
/len { sequence length } bind def

/coor [
[18.06065750 972.31591797]
[9.68813610 969.16955566]
[1.68050301 965.18261719]
[-5.87810755 960.39678955]
[-12.90825272 954.86212158]
[-19.33601761 948.63647461]
[-25.09379005 941.78509521]
[-30.12097931 934.37963867]
[-34.36464310 926.49780273]
[-37.78005600 918.22222900]
[-40.33116913 909.63958740]
[-41.99100494 900.83990479]
[-42.74192810 891.91552734]
[-42.57583618 882.96014404]
[-41.49426270 874.06762695]
[-39.50833511 865.33142090]
[-36.63869095 856.84326172]
[-32.91523361 848.69226074]
[-28.37684631 840.96405029]
[-23.07097054 833.73980713]
[-17.05311584 827.09558105]
[-10.38627625 821.10119629]
[-3.14027596 815.81970215]
[4.60896873 811.30676270]
[12.78024006 807.60986328]
[21.28787041 804.76800537]
[30.04264259 802.81127930]
[38.95272446 801.76037598]
[39.26375198 786.76361084]
[39.57477570 771.76684570]
[39.88580322 756.77008057]
[32.21728134 750.10845947]
[29.39665604 740.12231445]
[32.57801056 730.01538086]
[40.94877243 723.16778564]
[41.57069016 708.18072510]
[42.19260788 693.19360352]
[42.81452942 678.20648193]
[43.43644714 663.21936035]
[36.90272522 659.53692627]
[23.99096298 667.17150879]
[23.83528328 652.17199707]
[17.30156136 648.48956299]
[4.80258036 656.78265381]
[1.91516101 672.32092285]
[-11.16088867 681.19744873]
[-26.66777802 678.14593506]
[-35.40554810 664.97674561]
[-32.19023132 649.50299072]
[-18.92942047 640.90496826]
[-3.49051881 644.28369141]
[9.00846100 635.99060059]
[17.04060936 623.32232666]
[19.21031380 608.48010254]
[21.38001633 593.63781738]
[23.54972076 578.79559326]
[25.71942329 563.95330811]
[27.88912582 549.11108398]
[30.05883026 534.26885986]
[17.12635803 524.54278564]
[10.84039211 509.52999878]
[13.00984764 493.30465698]
[23.13484192 480.32226562]
[38.51780701 474.19622803]
[40.53350830 459.33227539]
[42.54920959 444.46835327]
[30.31867790 433.48507690]
[27.02934837 417.20932007]
[34.17665100 402.03717041]
[49.11435318 394.05242920]
[50.97583389 379.16836548]
[52.83731461 364.28433228]
[54.69879913 349.40026855]
[56.56027985 334.51623535]
[58.42176056 319.63217163]
[48.19997787 313.94952393]
[40.45450211 305.14086914]
[36.10062790 294.21203613]
[35.66458893 282.42144775]
[39.22005081 271.13510132]
[46.37691498 261.66833496]
[56.32396317 255.13255310]
[67.92077637 252.30477905]
[70.24424744 237.48582458]
[72.56771851 222.66687012]
[74.89118958 207.84791565]
[77.21466827 193.02894592]
[79.53813934 178.20999146]
[81.86161041 163.39103699]
[79.80360413 156.33139038]
[84.28676605 148.43080139]
[86.76375580 133.63673401]
[89.24074554 118.84266663]
[74.77857208 97.07588196]
[91.74002075 72.11502075]
[88.49974823 57.46917725]
[85.25948334 42.82333755]
[75.81769562 37.54967117]
[70.91339111 28.15718269]
[71.93923950 17.83115387]
[78.32083893 9.92807293]
[75.38494873 -4.78180695]
[72.44905853 -19.49168587]
[69.51317596 -34.20156479]
[66.57728577 -48.91144562]
[63.64139557 -63.62132645]
[60.70550919 -78.33120728]
[57.76962280 -93.04108429]
[54.83373260 -107.75096893]
[51.89784622 -122.46084595]
[43.95704269 -109.73513794]
[29.72148895 -105.00765991]
[15.74558830 -110.45506287]
[8.46419144 -123.56922913]
[11.22983551 -138.31207275]
[22.76914787 -147.89561462]
[37.76914215 -147.90734863]
[49.32341385 -138.34196472]
[47.46193314 -153.22601318]
[45.60045242 -168.11006165]
[43.73896790 -182.99411011]
[41.87748718 -197.87815857]
[40.01600647 -212.76220703]
[38.15452576 -227.64625549]
[36.29304504 -242.53030396]
[25.35779190 -232.26286316]
[10.49748993 -234.30526733]
[2.73770666 -247.14216614]
[7.83579636 -261.24923706]
[22.00924301 -266.15979004]
[34.74148941 -258.23135376]
[33.65377426 -273.19186401]
[32.56605911 -288.15237427]
[31.47834206 -303.11288452]
[30.39062691 -318.07339478]
[29.30291176 -333.03390503]
[28.21519661 -347.99441528]
[27.12748146 -362.95492554]
[25.88471222 -377.90335083]
[24.48702431 -392.83810425]
[23.08933449 -407.77285767]
[21.69164658 -422.70758057]
[20.29395676 -437.64233398]
[18.89626694 -452.57705688]
[17.49857903 -467.51181030]
[10.00266552 -482.71862793]
[22.54013062 -494.13125610]
[36.97747421 -485.24310303]
[32.43331909 -468.90948486]
[33.83100891 -453.97476196]
[35.22869873 -439.04000854]
[36.62638474 -424.10528564]
[38.02407455 -409.17053223]
[39.42176437 -394.23577881]
[40.81945419 -379.30105591]
[43.82171631 -375.64450073]
[44.59075928 -370.07620239]
[42.08799362 -364.04266357]
[43.17570877 -349.08215332]
[44.26342392 -334.12164307]
[45.35113907 -319.16113281]
[46.43885422 -304.20059204]
[47.52656937 -289.24008179]
[48.61428452 -274.27957153]
[49.70199966 -259.31906128]
[51.17709351 -244.39178467]
[53.03857422 -229.50773621]
[54.90005493 -214.62368774]
[56.76153564 -199.73963928]
[58.62301636 -184.85559082]
[60.48449707 -169.97154236]
[62.34598160 -155.08749390]
[64.20745850 -140.20344543]
[66.60772705 -125.39673615]
[69.54361725 -110.68685150]
[72.47949982 -95.97697449]
[75.41539001 -81.26708984]
[78.35128021 -66.55721283]
[81.28716278 -51.84733200]
[84.22305298 -37.13745499]
[87.15894318 -22.42757416]
[90.09482574 -7.71769428]
[93.03071594 6.99218512]
[106.80100250 20.60678101]
[99.90532684 39.58306885]
[103.14559174 54.22890854]
[106.38585663 68.87474823]
[119.95296478 75.27269745]
[133.31452942 68.45590973]
[146.67610168 61.63912582]
[155.45265198 48.47544098]
[170.30596924 49.58366776]
[183.63201904 42.69770432]
[196.92219543 35.74275208]
[210.21235657 28.78779793]
[223.50253296 21.83284569]
[236.79270935 14.87789249]
[250.08287048 7.92293978]
[263.37304688 0.96798688]
[264.64294434 -14.40702248]
[274.04171753 -26.64083862]
[288.57031250 -31.82969475]
[303.59262085 -28.31784630]
[314.31515503 -17.22591019]
[317.31634521 -2.09328485]
[311.63854980 12.25126553]
[299.09350586 21.23044586]
[283.68432617 21.97903442]
[270.32800293 14.25815773]
[257.03784180 21.21310997]
[243.74765015 28.16806412]
[230.45748901 35.12301636]
[217.16731262 42.07796860]
[203.87715149 49.03292084]
[190.58697510 55.98787689]
[186.13970947 61.84415054]
[177.12275696 62.94523239]
[169.30191040 75.62133026]
[153.49287415 75.00069427]
[140.13131714 81.81747437]
[126.76975250 88.63426208]
[127.57845306 98.77313995]
[124.86257172 108.03540039]
[119.32807159 115.30171204]
[111.99638367 119.82845306]
[104.03482056 121.31965637]
[101.55782318 136.11372375]
[99.08083344 150.90780640]
[96.68056488 165.71450806]
[94.35709381 180.53346252]
[92.03362274 195.35243225]
[89.71015167 210.17138672]
[87.38668060 224.99034119]
[85.06320190 239.80929565]
[82.73973083 254.62825012]
[97.51744080 265.78598022]
[104.50919342 282.83956909]
[101.84191132 300.99017334]
[90.34741974 315.17819214]
[73.30580902 321.49365234]
[71.44432831 336.37771606]
[69.58284760 351.26174927]
[67.72136688 366.14581299]
[65.85988617 381.02984619]
[63.99840164 395.91390991]
[74.71258545 404.54098511]
[79.73696136 417.23013306]
[77.86294556 430.63937378]
[69.68386841 441.29339600]
[57.41315842 446.48403931]
[55.39745712 461.34799194]
[53.38175583 476.21194458]
[64.85555267 484.16577148]
[71.75940704 496.22430420]
[72.79993439 510.01400757]
[67.83144379 522.84875488]
[57.87322998 532.25280762]
[44.90108109 536.43853760]
[42.73137665 551.28076172]
[40.56167221 566.12304688]
[38.39197159 580.96527100]
[36.22226715 595.80755615]
[34.05256271 610.64978027]
[31.88286018 625.49206543]
[42.12163162 627.21411133]
[51.88599396 634.68597412]
[58.19443130 647.50750732]
[58.42354965 663.84130859]
[57.80163193 678.82843018]
[57.17971039 693.81549072]
[56.55779266 708.80261230]
[55.93587112 723.78973389]
[66.05220032 741.26281738]
[54.88257980 757.08111572]
[54.57155228 772.07788086]
[54.26052475 787.07464600]
[53.94949722 802.07141113]
[75.28829193 807.14349365]
[94.69082642 817.35577393]
[110.94158173 832.06427002]
[123.02348328 850.34362793]
[130.18161011 871.04498291]
[131.97030640 892.86853027]
[128.28102112 914.44470215]
[119.34876251 934.42065430]
[105.73724365 951.54461670]
[88.30324554 964.74450684]
[68.14270020 973.19519043]
[70.92591095 987.93475342]
[73.70912933 1002.67425537]
[76.49234772 1017.41381836]
[88.88063812 1027.60742188]
[88.49085999 1043.64575195]
[75.62201691 1053.22546387]
[60.14598465 1048.99804688]
[53.93465042 1034.20617676]
[61.75281906 1020.19702148]
[58.96960068 1005.45745850]
[56.18638611 990.71795654]
[53.40316772 975.97845459]
[44.47461319 976.42962646]
[35.54569244 975.96484375]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 277]
[29 276]
[30 275]
[31 274]
[35 272]
[36 271]
[37 270]
[38 269]
[39 268]
[43 52]
[44 51]
[53 264]
[54 263]
[55 262]
[56 261]
[57 260]
[58 259]
[59 258]
[64 252]
[65 251]
[66 250]
[70 245]
[71 244]
[72 243]
[73 242]
[74 241]
[75 240]
[83 235]
[84 234]
[85 233]
[86 232]
[87 231]
[88 230]
[89 229]
[91 228]
[92 227]
[93 226]
[95 187]
[96 186]
[97 185]
[101 183]
[102 182]
[103 181]
[104 180]
[105 179]
[106 178]
[107 177]
[108 176]
[109 175]
[110 174]
[118 173]
[119 172]
[120 171]
[121 170]
[122 169]
[123 168]
[124 167]
[125 166]
[131 165]
[132 164]
[133 163]
[134 162]
[135 161]
[136 160]
[137 159]
[138 158]
[139 155]
[140 154]
[141 153]
[142 152]
[143 151]
[144 150]
[145 149]
[188 221]
[189 220]
[190 219]
[192 217]
[193 215]
[194 214]
[195 213]
[196 212]
[197 211]
[198 210]
[199 209]
[288 300]
[289 299]
[290 298]
[291 297]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
