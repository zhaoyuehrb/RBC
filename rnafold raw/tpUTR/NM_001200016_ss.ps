%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 07:16:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCAUCCAGGGCAAGGAACUGUCUUUCUGGUUCAAUAGACUGCCCCGACAGUCUACAAGCCUCAGCCCACUGACCAUACCUCAGCCCCUAGCCCCUGGGGGGCAGCUUUAACCUGGGCAUGUUUCCUGGGUACCAGUGGGGCCAGGAGGUGGCUCUGGCUCAGAGCCGUCAGUGUGGCUGAAUAAAGGCUCUCUUGGGUA\
) } def
/len { sequence length } bind def

/coor [
[110.44280243 293.46997070]
[94.65570831 292.73284912]
[84.07569122 280.99237061]
[84.97967529 265.21395874]
[96.83135223 254.75865173]
[97.53096008 239.77497864]
[98.23056793 224.79130554]
[98.93016815 209.80763245]
[99.62977600 194.82395935]
[100.32938385 179.84027100]
[101.02899170 164.85659790]
[101.72859192 149.87292480]
[94.88017273 146.81529236]
[88.76468658 160.51203918]
[75.06804657 154.39633179]
[81.18331909 140.70004272]
[74.33489990 137.64241028]
[63.64613724 148.16621399]
[52.95737839 158.69001770]
[42.26861954 169.21382141]
[31.57985878 179.73762512]
[34.02109528 195.06146240]
[26.95897484 208.87834167]
[13.10902882 215.87538147]
[-2.20315504 213.36209106]
[-13.08973122 202.30487061]
[-15.36458778 186.95545959]
[-8.15299702 173.21600342]
[5.77203798 166.36961365]
[21.05605698 169.04887390]
[31.74481583 158.52507019]
[42.43357468 148.00126648]
[53.12233353 137.47746277]
[63.81109619 126.95365906]
[60.54196167 120.20363617]
[54.00369644 106.70359802]
[50.73456192 99.95357513]
[35.85051346 101.81505585]
[20.96646500 103.67653656]
[6.08241749 105.53802490]
[-8.80163002 107.39950562]
[-23.68567848 109.26098633]
[-38.56972504 111.12246704]
[-48.07275009 123.75053406]
[-63.73325729 125.87751770]
[-76.26014709 116.24151611]
[-78.22144318 100.55939484]
[-68.45353699 88.13507843]
[-52.75155640 86.33969879]
[-40.43120956 96.23841858]
[-25.54715919 94.37693787]
[-10.66311169 92.51545715]
[4.22093630 90.65397644]
[19.10498428 88.79248810]
[33.98903275 86.93100739]
[48.87308121 85.06952667]
[71.42330170 66.85160828]
[95.34471893 66.04848480]
[110.52777100 77.57574463]
[120.71406555 66.56486511]
[130.90036011 55.55398941]
[141.08665466 44.54311371]
[150.83723450 33.14460373]
[160.13737488 21.37568855]
[169.43753052 9.60677433]
[178.73767090 -2.16213965]
[188.03781128 -13.93105316]
[197.33795166 -25.69996834]
[206.54629517 -37.54084396]
[215.66229248 -49.45296860]
[224.77827454 -61.36509323]
[233.89427185 -73.27722168]
[243.01026917 -85.18934631]
[252.12625122 -97.10147095]
[261.24224854 -109.01359558]
[258.36322021 -117.56568146]
[259.34533691 -126.49419403]
[263.97171021 -134.14526367]
[271.35366821 -139.11637878]
[277.68118286 -152.71646118]
[284.00869751 -166.31655884]
[290.33624268 -179.91664124]
[296.66375732 -193.51673889]
[293.97839355 -213.49073792]
[310.26214600 -223.91018677]
[316.16363525 -237.70048523]
[322.06515503 -251.49078369]
[327.96664429 -265.28106689]
[333.86816406 -279.07138062]
[322.33740234 -291.78817749]
[317.53726196 -308.21185303]
[320.38616943 -325.02767944]
[330.26379395 -338.86373901]
[345.14541626 -346.96704102]
[362.01666260 -347.75128174]
[367.48641968 -361.71844482]
[372.95620728 -375.68560791]
[378.42596436 -389.65277100]
[383.89575195 -403.61993408]
[389.36550903 -417.58709717]
[394.83529663 -431.55426025]
[400.30505371 -445.52142334]
[405.77484131 -459.48858643]
[411.24459839 -473.45574951]
[416.71438599 -487.42291260]
[422.07537842 -501.43215942]
[427.32727051 -515.48272705]
[432.57916260 -529.53326416]
[437.83108521 -543.58380127]
[431.04867554 -557.85876465]
[436.42532349 -572.72033691]
[450.77120972 -579.35144043]
[465.57513428 -573.81793213]
[472.05419922 -559.40277100]
[466.36447144 -544.65820312]
[451.88162231 -538.33190918]
[446.62969971 -524.28137207]
[441.37780762 -510.23080444]
[436.12591553 -496.18026733]
[436.72912598 -488.80880737]
[430.68154907 -481.95312500]
[425.21176147 -467.98596191]
[419.74200439 -454.01879883]
[414.27221680 -440.05163574]
[408.80245972 -426.08447266]
[403.33267212 -412.11730957]
[397.86291504 -398.15014648]
[392.39312744 -384.18301392]
[386.92337036 -370.21585083]
[381.45358276 -356.24868774]
[375.98382568 -342.28152466]
[385.57843018 -333.51296997]
[391.63510132 -321.97640991]
[393.41302490 -309.03622437]
[390.67880249 -296.23120117]
[383.73699951 -285.09146118]
[373.39620972 -276.95571899]
[360.87503052 -272.81036377]
[347.65844727 -273.16986084]
[341.75695801 -259.37957764]
[335.85543823 -245.58927917]
[329.95394897 -231.79898071]
[324.05242920 -218.00868225]
[328.69314575 -208.89508057]
[327.52294922 -198.51405334]
[320.68859863 -190.32473755]
[310.26385498 -187.18920898]
[303.93630981 -173.58912659]
[297.60879517 -159.98902893]
[291.28128052 -146.38894653]
[284.95373535 -132.78884888]
[291.28128052 -119.18876648]
[305.76004028 -115.26893616]
[320.23883057 -111.34910583]
[334.71759033 -107.42927551]
[349.19638062 -103.50945282]
[363.67514038 -99.58962250]
[378.15393066 -95.66979218]
[395.02270508 -97.36692047]
[401.32327271 -81.62718201]
[387.94281006 -71.21566772]
[374.23410034 -81.19101715]
[359.75531006 -85.11084747]
[345.27655029 -89.03067780]
[330.79776001 -92.95050049]
[316.31900024 -96.87033081]
[301.84020996 -100.79016113]
[287.36145020 -104.70999146]
[273.15435791 -99.89760590]
[264.03839111 -87.98548126]
[254.92239380 -76.07335663]
[245.80639648 -64.16123199]
[236.69039917 -52.24910355]
[227.57441711 -40.33697891]
[218.45841980 -28.42485428]
[216.88879395 -21.19721031]
[209.10687256 -16.39982414]
[199.80673218 -4.63091040]
[190.50657654 7.13800383]
[181.20643616 18.90691757]
[171.90629578 30.67583084]
[162.60615540 42.44474411]
[177.57820129 43.35992432]
[186.32794189 55.54360962]
[182.41178894 70.02338409]
[168.71372986 76.13591766]
[155.32141113 69.37976837]
[152.09753418 54.72940445]
[141.91123962 65.74028778]
[131.72494507 76.75115967]
[121.53865051 87.76203918]
[136.41268921 114.01714325]
[116.71227264 150.57252502]
[116.01266479 165.55621338]
[115.31305695 180.53988647]
[114.61345673 195.52355957]
[113.91384888 210.50723267]
[113.21424103 225.49090576]
[112.51463318 240.47459412]
[111.81503296 255.45826721]
[122.64092255 266.97241211]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 200]
[6 199]
[7 198]
[8 197]
[9 196]
[10 195]
[11 194]
[12 193]
[17 34]
[18 33]
[19 32]
[20 31]
[21 30]
[37 56]
[38 55]
[39 54]
[40 53]
[41 52]
[42 51]
[43 50]
[59 191]
[60 190]
[61 189]
[62 188]
[63 182]
[64 181]
[65 180]
[66 179]
[67 178]
[68 177]
[69 175]
[70 174]
[71 173]
[72 172]
[73 171]
[74 170]
[75 169]
[79 151]
[80 150]
[81 149]
[82 148]
[83 147]
[85 143]
[86 142]
[87 141]
[88 140]
[89 139]
[95 131]
[96 130]
[97 129]
[98 128]
[99 127]
[100 126]
[101 125]
[102 124]
[103 123]
[104 122]
[105 121]
[106 119]
[107 118]
[108 117]
[109 116]
[152 168]
[153 167]
[154 166]
[155 165]
[156 164]
[157 163]
[158 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
