%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 07:19:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACCCAAGGGUAACAACCAGAUGGCUUCACUGAAACCUGCUUUUGUAAAUUACUUUUUUUUACUGUUGCUGGAAGUGUCCCACCUGCUGCUCAUAAUAAAUGCAGAUGUAUAGCA\
) } def
/len { sequence length } bind def

/coor [
[69.04485321 144.61065674]
[68.64213562 129.61605835]
[53.90632248 126.81325531]
[48.02682114 140.61294556]
[42.14732361 154.41264343]
[44.66008377 170.61813354]
[31.71423721 180.68476868]
[16.62735939 174.25685120]
[14.91953659 157.94686890]
[28.34763145 148.53314209]
[34.22713089 134.73344421]
[40.10662842 120.93376160]
[33.94042587 107.25977325]
[35.11442566 92.30578613]
[43.33895493 79.76158142]
[56.58467484 72.72233582]
[71.58330536 72.92494202]
[84.63405609 80.31940460]
[92.51680756 93.08139801]
[88.15049744 78.73095703]
[83.78418732 64.38050842]
[72.36487579 53.43016434]
[76.06237793 39.00179672]
[71.69606018 24.65135193]
[67.32975006 10.30090523]
[54.72797775 5.32902527]
[47.43258286 -5.85335159]
[47.94415665 -18.99972725]
[55.84826660 -29.27157402]
[51.86880875 -43.73407364]
[47.88935089 -58.19657516]
[43.90989304 -72.65907288]
[34.95101547 -76.27700043]
[28.81310654 -83.55794525]
[26.82164764 -92.72823334]
[29.31208038 -101.63161469]
[35.58127975 -108.23621368]
[32.77847290 -122.97203064]
[22.59883118 -135.08340454]
[27.82172203 -149.03227234]
[25.01891518 -163.76808167]
[10.61121082 -168.90280151]
[0.77304131 -180.48327637]
[-1.92974830 -195.33457947]
[3.13019323 -209.45027161]
[14.49968052 -219.07318115]
[11.69687462 -233.80899048]
[8.89406776 -248.54481506]
[6.09126091 -263.28063965]
[3.28845453 -278.01644897]
[-11.05790901 -283.68966675]
[-20.04109573 -296.23184204]
[-20.79460526 -311.64077759]
[-13.07799530 -324.99957275]
[0.64639330 -332.04547119]
[15.99915695 -330.53015137]
[28.08128548 -320.93716431]
[33.03741455 -306.32754517]
[29.28606224 -291.36325073]
[18.02427101 -280.81924438]
[20.82707787 -266.08343506]
[23.62988472 -251.34762573]
[26.43268967 -236.61180115]
[29.23549652 -221.87599182]
[43.34388351 -217.09906006]
[53.23273468 -205.82669067]
[56.17097473 -191.02015686]
[51.27127838 -176.63648987]
[39.75473022 -166.57089233]
[42.55753708 -151.83506775]
[52.53670502 -140.77770996]
[47.51428986 -125.77484131]
[50.31709671 -111.03902435]
[65.20946503 -96.85518646]
[58.37239075 -76.63853455]
[62.35185242 -62.17603302]
[66.33130646 -47.71353149]
[70.31076813 -33.25103378]
[85.23831177 -25.63399315]
[90.19618225 -9.27412033]
[81.68019867 5.93459225]
[86.04650879 20.28503799]
[90.41281891 34.63548660]
[101.51982117 44.55938721]
[98.13462830 60.01419449]
[102.50094604 74.36463928]
[106.86725616 88.71508789]
[116.35393524 100.33415985]
[129.54100037 107.48269653]
[142.72805786 114.63122559]
[155.91511536 121.77975464]
[168.59124756 113.20222473]
[183.80288696 111.50962830]
[198.05447388 117.09089661]
[208.07113647 128.66351318]
[211.55108643 143.56816101]
[207.69467163 158.37986755]
[197.38806152 169.69500732]
[182.99964905 174.91345215]
[167.83578491 172.83602905]
[155.38099670 163.94012451]
[148.49732971 150.26995850]
[148.76658630 134.96681213]
[135.57952881 127.81828308]
[122.39246368 120.66975403]
[109.20540619 113.52121735]
[102.81324005 117.44425201]
[110.95877838 130.03988647]
[122.16912842 140.00624084]
[116.34341431 153.82872009]
[101.38123322 152.76420593]
[97.57110596 138.25624084]
[90.02890015 125.29031372]
[83.63672638 129.21334839]
[84.03945160 144.20793152]
[86.74652863 163.39964294]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 115]
[2 114]
[3 12]
[4 11]
[5 10]
[19 87]
[20 86]
[21 85]
[23 83]
[24 82]
[25 81]
[29 78]
[30 77]
[31 76]
[32 75]
[37 73]
[38 72]
[40 70]
[41 69]
[46 64]
[47 63]
[48 62]
[49 61]
[50 60]
[88 106]
[89 105]
[90 104]
[91 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
