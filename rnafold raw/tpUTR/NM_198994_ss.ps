%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 02:20:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAUCAUGAGGGACUGAGAGGGGUGGAUUUGGCCCCUGUCCUCCUCCUGCCCAUUCUUUGUCUCUUCCACAUGGGAGCCAGGAGGCCUCAGUUAAUCCUGCCUCAACCU\
) } def
/len { sequence length } bind def

/coor [
[152.72843933 267.22177124]
[164.38464355 257.42111206]
[160.19570923 243.01791382]
[156.00675964 228.61468506]
[151.81782532 214.21147156]
[135.32740784 206.51411438]
[129.45906067 188.95501709]
[138.30384827 172.33258057]
[133.30674744 158.18940735]
[128.30964661 144.04624939]
[123.31255341 129.90309143]
[118.31545258 115.75993347]
[109.86939240 121.09209442]
[100.33740997 122.40872955]
[91.46425629 119.77178192]
[84.75239563 113.94072723]
[81.20799255 106.18693542]
[66.24552155 105.12646484]
[51.93287277 111.86876678]
[39.78445435 103.25104523]
[24.82198906 102.19058228]
[9.85952187 101.13011169]
[-5.10294485 100.06964874]
[-20.06541252 99.00918579]
[-35.02787781 97.94872284]
[-45.77050400 109.31226349]
[-61.31003952 111.06065369]
[-74.30918884 102.36835480]
[-78.63015747 87.33960724]
[-72.23271179 73.07052612]
[-58.13752747 66.29853058]
[-42.99992371 70.22116089]
[-33.96741486 82.98625946]
[-19.00494766 84.04672241]
[-4.04248142 85.10718536]
[10.91998577 86.16764832]
[25.88245201 87.22811127]
[40.84492111 88.28857422]
[54.08735275 81.47042084]
[67.30598450 90.16400146]
[82.26845551 91.22446442]
[91.96215057 80.33560181]
[107.46779633 78.56018829]
[121.05912781 88.15329742]
[128.74220276 75.27034760]
[136.42527771 62.38739777]
[144.10835266 49.50444794]
[151.79142761 36.62149811]
[159.47450256 23.73854828]
[167.15757751 10.85560036]
[174.28695679 -2.34181976]
[180.84979248 -15.82992840]
[187.41264343 -29.31803703]
[193.97549438 -42.80614471]
[200.53833008 -56.29425430]
[189.98034668 -67.17104340]
[183.78198242 -81.00419617]
[182.69175720 -96.12329865]
[186.84129333 -110.70263672]
[195.72952271 -122.98168945]
[208.28314209 -131.47770691]
[222.98626709 -135.16473389]
[238.06338501 -133.59756470]
[251.69389343 -126.96543884]
[262.23181152 -116.06920624]
[268.40466309 -102.22465515]
[269.46704102 -87.10356903]
[265.29064941 -72.53190613]
[256.37979126 -60.26924896]
[243.81054688 -51.79638672]
[229.10066223 -48.13645554]
[214.02644348 -49.73140717]
[207.46359253 -36.24329758]
[200.90075684 -22.75519180]
[194.33790588 -9.26708317]
[187.77505493 4.22102547]
[188.67051697 7.77559853]
[187.79304504 11.95128155]
[184.86618042 15.86382103]
[180.04051208 18.53867340]
[172.35745239 31.42162323]
[164.67437744 44.30457306]
[156.99130249 57.18752289]
[149.30822754 70.07047272]
[141.62515259 82.95342255]
[133.94207764 95.83636475]
[132.45861816 110.76283264]
[137.45571899 124.90599823]
[142.45280457 139.04914856]
[147.44990540 153.19232178]
[152.44700623 167.33547974]
[164.13075256 170.33566284]
[172.77925110 178.57061768]
[176.27633667 189.86267090]
[173.84600830 201.30783081]
[166.22103882 210.02252197]
[170.40998840 224.42575073]
[174.59892273 238.82896423]
[178.78787231 253.23217773]
[193.88212585 255.25289917]
[206.84611511 263.24383545]
[215.43374634 275.82049561]
[218.15715027 290.80392456]
[214.54449463 305.59811401]
[205.22169495 317.63992310]
[191.80397034 324.84301758]
[176.61602783 325.95941162]
[162.28927612 320.79571533]
[151.30590820 310.24652100]
[145.56884766 296.13955688]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 99]
[3 98]
[4 97]
[5 96]
[8 91]
[9 90]
[10 89]
[11 88]
[12 87]
[17 41]
[18 40]
[20 38]
[21 37]
[22 36]
[23 35]
[24 34]
[25 33]
[44 86]
[45 85]
[46 84]
[47 83]
[48 82]
[49 81]
[50 80]
[51 76]
[52 75]
[53 74]
[54 73]
[55 72]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
