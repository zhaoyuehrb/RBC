%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 05:46:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACUGGGAUUGGACAGUAGUGGUGCAUCUGGUCCUUGCCGCCUGAGAGCCCCAGGAGACAUCGGCUAGAGUGACCAUGGCUAUGCUCCCGUCUGGAAGAUGCCAGCAUCUGGCCUCCCACUGUUUUCAGCUGUGUCCCCCAGUCCGUGUCUUUUUAGAAUGUGAAUGAUGAUAAAGUUGUGAAAUAAAGGUUUCUAUCUAGUUUGUAAGCAGA\
) } def
/len { sequence length } bind def

/coor [
[260.87088013 208.41854858]
[263.63235474 195.87213135]
[250.90646362 187.93164062]
[238.18055725 179.99116516]
[225.45465088 172.05067444]
[212.72874451 164.11018372]
[200.00283813 156.16969299]
[196.50582886 156.60340881]
[192.62500000 155.36630249]
[189.14730835 152.29638672]
[186.90228271 147.58898926]
[174.53829956 139.09591675]
[162.17433167 130.60285950]
[149.81036377 122.10978699]
[137.44639587 113.61671448]
[120.59877777 128.58737183]
[100.81909180 130.61494446]
[85.94128418 121.89054108]
[80.30220795 108.38070679]
[65.49736023 110.79244995]
[50.69251633 113.20419312]
[35.88766861 115.61593628]
[21.08282089 118.02767181]
[14.03258991 131.72441101]
[0.42816782 138.56349182]
[-14.41910934 136.10943604]
[-24.84950066 125.51015472]
[-39.65434647 127.92189026]
[-54.45919418 130.33363342]
[-69.26404572 132.74537659]
[-84.06889343 135.15711975]
[-98.87373352 137.56886292]
[-113.67858124 139.98060608]
[-122.91520691 152.52343750]
[-137.96379089 154.75837708]
[-149.86453247 145.87538147]
[-164.66937256 148.28712463]
[-177.04598999 158.14257812]
[-190.85169983 152.55227661]
[-203.22830200 162.40774536]
[-217.03401184 156.81742859]
[-231.83886719 159.22917175]
[-246.64370728 161.64091492]
[-261.44854736 164.05265808]
[-269.28735352 177.58363342]
[-284.00729370 182.86163330]
[-298.65808105 177.39454651]
[-306.32202148 163.76377869]
[-303.38049316 148.40534973]
[-291.22235107 138.57104492]
[-275.58831787 138.90432739]
[-263.86029053 149.24781799]
[-249.05545044 146.83607483]
[-234.25059509 144.42433167]
[-219.44575500 142.01258850]
[-208.12809753 132.32962036]
[-193.26344299 137.74742126]
[-181.94577026 128.06446838]
[-167.08111572 133.48226929]
[-152.27627563 131.07052612]
[-143.81013489 118.86971283]
[-128.83026123 116.21295929]
[-116.09032440 125.17575836]
[-101.28547668 122.76401520]
[-86.48062897 120.35227203]
[-71.67578125 117.94052887]
[-56.87093735 115.52878571]
[-42.06608963 113.11705017]
[-27.26124382 110.70530701]
[-20.73414993 97.34360504]
[-7.43338108 90.30417633]
[7.63826466 92.47186279]
[18.67107964 103.22283173]
[33.47592545 100.81108856]
[48.28077316 98.39934540]
[63.08562088 95.98760223]
[77.89046478 93.57585907]
[85.64328766 80.73476410]
[80.88255310 66.51029205]
[76.12182617 52.28582764]
[71.36109924 38.06135941]
[66.39206696 23.90831375]
[61.21580887 9.82973576]
[56.03955078 -4.24884176]
[50.86329269 -18.32741928]
[45.68703461 -32.40599823]
[31.61985207 -39.09569931]
[26.57094383 -53.44711685]
[33.03524399 -66.81680298]
[27.85898590 -80.89537811]
[22.68272781 -94.97395325]
[17.50646973 -109.05253601]
[12.33021259 -123.13111115]
[1.18945885 -135.91078186]
[10.38562679 -150.15391541]
[26.61788559 -145.26002502]
[26.40879059 -128.30737305]
[31.58504868 -114.22879028]
[36.76130676 -100.15021515]
[41.93756485 -86.07164001]
[47.11382294 -71.99305725]
[60.69905472 -65.99497223]
[66.14907074 -51.79102707]
[59.76560974 -37.58225632]
[64.94187164 -23.50367737]
[70.11812592 -9.42510033]
[75.29438782 4.65347767]
[80.47064209 18.73205566]
[84.35073090 21.51309586]
[86.52626801 26.76014328]
[85.58556366 33.30063248]
[90.34629059 47.52509689]
[95.10702515 61.74956512]
[99.86775208 75.97402954]
[107.32818604 76.74339294]
[116.12094116 64.59072113]
[122.24905396 78.28211975]
[129.70948792 79.05147552]
[137.27296448 66.09795380]
[144.74116516 53.08926010]
[152.11366272 40.02610397]
[159.48617554 26.96294212]
[158.78471375 10.57880497]
[172.76635742 2.00877333]
[187.04800415 10.06896210]
[186.93791199 26.46774101]
[172.54933167 34.33544922]
[165.17683411 47.39860916]
[157.80432129 60.46176910]
[157.25444031 67.83021545]
[150.22648621 73.66143036]
[142.66300964 86.61495972]
[145.93946838 101.25274658]
[158.30343628 109.74581909]
[170.66740417 118.23888397]
[183.03137207 126.73195648]
[195.39533997 135.22502136]
[207.94332886 143.44378662]
[220.66923523 151.38427734]
[233.39514160 159.32476807]
[246.12104797 167.26525879]
[258.84695435 175.20574951]
[271.57284546 183.14622498]
[294.50521851 171.11444092]
[322.29882812 184.00276184]
[336.93661499 180.72631836]
[351.57440186 177.44987488]
[359.26318359 172.52259827]
[366.45108032 174.23443604]
[381.13540649 171.17323303]
[395.81970215 168.11201477]
[407.68237305 156.78906250]
[423.34143066 161.65998840]
[426.68817139 177.71400452]
[414.27978516 188.43611145]
[398.88092041 182.79632568]
[384.19659424 185.85754395]
[369.51229858 188.91874695]
[354.85086060 192.08766174]
[340.21307373 195.36410522]
[325.57525635 198.64056396]
[323.35208130 205.80348206]
[337.67785645 210.25009155]
[333.23101807 224.57579041]
[318.90570068 220.12931824]
[316.68252563 227.29225159]
[326.89279175 238.28088379]
[342.20129395 236.56153870]
[355.43218994 244.09790039]
[361.61526489 257.81771851]
[358.57037354 272.37335205]
[368.78063965 283.36199951]
[378.99093628 294.35064697]
[389.20120239 305.33929443]
[399.41146851 316.32794189]
[414.47320557 321.17095947]
[417.46832275 335.76132202]
[435.39788818 333.04895020]
[451.22671509 341.56915283]
[458.70462036 357.74310303]
[455.00787354 375.01358032]
[465.53634644 385.69772339]
[476.06481934 396.38189697]
[486.59326172 407.06607056]
[497.12173462 417.75024414]
[513.06579590 421.58682251]
[517.45513916 437.38766479]
[505.77435303 448.89816284]
[490.03967285 444.27734375]
[486.43756104 428.27871704]
[475.90911865 417.59454346]
[465.38064575 406.91036987]
[454.85217285 396.22619629]
[444.32373047 385.54202271]
[432.72344971 389.11227417]
[420.63433838 387.40240479]
[410.35842896 380.67605591]
[403.87878418 370.15798950]
[402.47689819 357.81137085]
[406.47967529 345.97158813]
[392.14825439 341.91455078]
[388.42285156 326.53820801]
[378.21255493 315.54956055]
[368.00228882 304.56091309]
[357.79202271 293.57229614]
[347.58172607 282.58364868]
[332.84197998 284.55288696]
[319.61254883 277.38031006]
[313.06677246 263.63235474]
[315.90417480 248.49116516]
[305.69387817 237.50251770]
[288.87606812 238.90586853]
[274.15573120 232.98431396]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 143]
[3 142]
[4 141]
[5 140]
[6 139]
[7 138]
[11 137]
[12 136]
[13 135]
[14 134]
[15 133]
[19 77]
[20 76]
[21 75]
[22 74]
[23 73]
[27 69]
[28 68]
[29 67]
[30 66]
[31 65]
[32 64]
[33 63]
[36 60]
[37 59]
[39 57]
[41 55]
[42 54]
[43 53]
[44 52]
[78 114]
[79 113]
[80 112]
[81 111]
[82 108]
[83 107]
[84 106]
[85 105]
[86 104]
[89 101]
[90 100]
[91 99]
[92 98]
[93 97]
[118 132]
[119 131]
[120 129]
[121 128]
[122 127]
[145 161]
[146 160]
[147 159]
[149 158]
[150 157]
[151 156]
[166 211]
[167 210]
[171 206]
[172 205]
[173 204]
[174 203]
[175 202]
[177 200]
[181 194]
[182 193]
[183 192]
[184 191]
[185 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
