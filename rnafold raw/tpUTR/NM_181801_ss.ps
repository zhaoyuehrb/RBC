%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 14:41:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAGGCUGCCCAGCCUGUCCUUGUGUCGUCUUUUUAAUUUUUCCUUAGAUGGUCUGUCCUUUUUGUGAUUUCUGUAUAGGACUCUUUAUCUUGAGCUGUGGUAUUUUUGUUUUGUUUUUGUCUUUUAAAUUAAGCCUCGGUUGAGCCCUUGUAUAUUAAAUAAAUGCAUUUUUGUCCUUUUUUAGACAA\
) } def
/len { sequence length } bind def

/coor [
[83.30645752 405.17590332]
[76.02110291 392.06390381]
[68.52211761 391.94055176]
[63.44337082 406.05459595]
[58.36462021 420.16864014]
[53.28587341 434.28268433]
[48.20712662 448.39672852]
[43.12837982 462.51077271]
[46.56600952 478.54559326]
[34.21853256 489.33779907]
[18.78797531 483.78530884]
[16.14797401 467.60006714]
[29.01433182 457.43203735]
[34.09307861 443.31799316]
[39.17182541 429.20394897]
[44.25057602 415.08990479]
[49.32932281 400.97586060]
[54.40806961 386.86181641]
[48.04021835 374.00537109]
[46.69789886 360.37826538]
[50.10215378 347.79080200]
[57.37141037 337.76110840]
[67.18877411 331.33227539]
[78.01771545 328.96832275]
[78.75757599 313.98660278]
[79.49744415 299.00485229]
[76.68245697 292.15740967]
[80.37468719 283.78338623]
[81.36086273 268.81585693]
[82.34703827 253.84829712]
[70.79966736 244.47833252]
[66.93825531 229.93345642]
[72.44622040 215.73783875]
[85.40666962 207.41119385]
[86.39284515 192.44364929]
[87.37902069 177.47610474]
[88.36519623 162.50856018]
[89.35137177 147.54101562]
[90.33754730 132.57345581]
[82.04612732 129.42224121]
[74.74202728 124.16907501]
[68.95537567 117.11498260]
[65.12632751 108.69379425]
[63.57206345 99.44570923]
[64.46150208 89.98269653]
[67.79962921 80.94799042]
[73.42284393 72.97239685]
[81.00588226 66.63030243]
[69.84770966 56.60557175]
[58.68953705 46.58084488]
[47.53136826 36.55611420]
[36.37319565 26.53138351]
[25.21502304 16.50665474]
[10.12350559 19.59732819]
[-3.73219323 13.28281975]
[-11.12541866 0.17540900]
[-9.40341854 -14.59526157]
[-20.56159019 -24.61999130]
[-31.71976089 -34.64472198]
[-42.87793350 -44.66945267]
[-54.03610611 -54.69417953]
[-67.25440216 -47.30802917]
[-82.15522766 -44.61650848]
[-97.12223816 -46.91157532]
[-110.53192902 -53.94427872]
[-120.92971039 -64.95176697]
[-127.18772888 -78.74002075]
[-128.62713623 -93.81340027]
[-125.09181213 -108.53685760]
[-116.96524048 -121.31330109]
[-105.12892914 -130.75683594]
[-90.86679077 -135.84310913]
[-75.72587585 -136.02038574]
[-61.34856033 -131.26943970]
[-49.29438400 -122.10562134]
[-40.87089539 -109.52294922]
[-36.99181366 -94.88629913]
[-38.07791138 -79.78334808]
[-44.01137543 -65.85235596]
[-32.85320282 -55.82762146]
[-21.69503212 -45.80289459]
[-10.53686047 -35.77816391]
[0.62131155 -25.75343323]
[15.12389183 -29.04176903]
[28.94538879 -23.08943939]
[36.70237350 -9.98667049]
[35.23975372 5.34848309]
[46.39792633 15.37321281]
[57.55609512 25.39794159]
[68.71427155 35.42267227]
[79.87243652 45.44740295]
[91.03060913 55.47212982]
[106.02249908 54.97877502]
[110.12139893 39.69775772]
[124.54740906 35.99107742]
[135.02236938 25.25444221]
[145.49731445 14.51780605]
[155.97227478 3.78117061]
[166.44723511 -6.95546484]
[170.54612732 -22.23648453]
[184.97215271 -25.94316483]
[195.44709778 -36.67980194]
[205.92205811 -47.41643524]
[202.84165955 -64.03968811]
[210.19776917 -79.07699585]
[224.91688538 -86.69586182]
[241.11383057 -84.07279205]
[251.41078186 -94.98026276]
[261.70773315 -105.88772583]
[272.00466919 -116.79519653]
[265.18356323 -130.33212280]
[263.40679932 -145.38598633]
[266.88891602 -160.13897705]
[275.20947266 -172.80958557]
[287.36367798 -181.86778259]
[301.88388062 -186.21974182]
[317.01669312 -185.33995056]
[330.93472290 -179.33464050]
[341.95733643 -168.92898560]
[348.75350952 -155.37951660]
[350.50253296 -140.32240295]
[346.99322510 -125.57585907]
[338.64935303 -112.92060852]
[326.47845459 -103.88481903]
[311.95025635 -99.55962372]
[296.81909180 -100.46730042]
[282.91213989 -106.49825287]
[272.61520386 -95.59078217]
[262.31826782 -84.68331146]
[252.02130127 -73.77584839]
[255.69602966 -60.93100357]
[252.51425171 -47.84378433]
[243.20405579 -37.96207047]
[230.12229919 -33.94355011]
[216.65869141 -36.94148254]
[206.18373108 -26.20484543]
[195.70878601 -15.46821117]
[192.35911560 -0.95514786]
[177.18386841 3.51948905]
[166.70890808 14.25612450]
[156.23396301 24.99275970]
[145.75900269 35.72939682]
[135.28404236 46.46603012]
[131.93438721 60.97909546]
[116.75913239 65.45372772]
[123.94877625 70.50303650]
[129.73158264 76.99407959]
[133.83236694 84.55467224]
[136.07069397 92.76386261]
[136.36851501 101.17523193]
[134.75210571 109.34119415]
[131.34849548 116.83679962]
[126.37657166 123.28186035]
[120.13343811 128.36015320]
[112.97689819 131.83491516]
[105.30509949 133.55963135]
[104.31892395 148.52719116]
[103.33274841 163.49473572]
[102.34657288 178.46228027]
[101.36039734 193.42982483]
[100.37421417 208.39736938]
[112.13012695 218.35250854]
[115.72792816 233.14808655]
[109.99152374 247.06059265]
[97.31459045 254.83447266]
[96.32841492 269.80203247]
[95.34223938 284.76956177]
[94.47918701 299.74472046]
[93.73931885 314.72647095]
[92.99945831 329.70819092]
[112.28104401 339.86950684]
[121.28762054 362.42355347]
[112.79151154 387.82217407]
[117.40329742 402.09564209]
[122.01507568 416.36907959]
[126.62686157 430.64254761]
[131.23864746 444.91598511]
[146.02961731 449.60711670]
[155.21128845 462.11618042]
[155.25309753 477.63320923]
[146.13897705 490.19155884]
[131.37350464 494.96231079]
[116.63427734 490.11102295]
[107.58885956 477.50308228]
[107.71537781 461.98654175]
[116.96519470 449.52777100]
[112.35340881 435.25433350]
[107.74162292 420.98086548]
[103.12984467 406.70742798]
[98.51805878 392.43395996]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 18]
[4 17]
[5 16]
[6 15]
[7 14]
[8 13]
[24 170]
[25 169]
[26 168]
[28 167]
[29 166]
[30 165]
[34 161]
[35 160]
[36 159]
[37 158]
[38 157]
[39 156]
[48 92]
[49 91]
[50 90]
[51 89]
[52 88]
[53 87]
[57 83]
[58 82]
[59 81]
[60 80]
[61 79]
[93 145]
[95 143]
[96 142]
[97 141]
[98 140]
[99 139]
[101 137]
[102 136]
[103 135]
[107 130]
[108 129]
[109 128]
[110 127]
[173 190]
[174 189]
[175 188]
[176 187]
[177 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
