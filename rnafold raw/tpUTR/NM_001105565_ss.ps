%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 10:20:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGUGACUGGCUCUGUGGGCAGAGAUGGGCAGGGUGCCCAGCUCAGCAGCCACGGCCCGGGGGUUCCCUUCUGCUCCAUGGAGGCACCAGAGCCAGGGGCUUAGGCAAGGGUGUGUGGCGUUGGUUUUAACUGCAUUAAAAGUACUUUUGUAAAAUCCUG\
) } def
/len { sequence length } bind def

/coor [
[72.12280273 254.65415955]
[71.54473877 239.66529846]
[70.96667480 224.67643738]
[57.72654343 217.85261536]
[49.62583160 205.23381042]
[48.92436981 190.15487671]
[55.91057205 176.66081238]
[68.79714203 168.42166138]
[68.21907806 153.43280029]
[69.39944458 117.49908447]
[91.66853333 100.03926849]
[76.14102173 103.07356262]
[66.47122192 91.74465179]
[52.22335052 87.05444336]
[37.97547531 82.36422729]
[23.72760201 77.67401886]
[9.47972679 72.98381042]
[-4.76814747 68.29359436]
[-19.01602173 63.60338593]
[-33.26389694 58.91317368]
[-47.55630493 54.36048126]
[-61.89192581 49.94573212]
[-76.22754669 45.53098297]
[-90.56316376 41.11623383]
[-104.89878082 36.70148468]
[-119.23440552 32.28673553]
[-124.69596100 40.87158585]
[-135.40126038 46.24923706]
[-149.20033264 45.47053528]
[-164.04388428 43.30980301]
[-178.88745117 41.14906693]
[-193.73100281 38.98833466]
[-212.05429077 47.31614685]
[-226.75395203 34.79696274]
[-241.66975403 33.20986938]
[-256.21112061 39.44359207]
[-268.04830933 30.40309906]
[-282.96411133 28.81600571]
[-297.87991333 27.22891045]
[-308.17730713 38.83679962]
[-323.33822632 42.14222717]
[-337.53298950 35.87419128]
[-345.30343628 22.44287872]
[-343.66162109 7.01290464]
[-333.23889160 -4.48259258]
[-318.04299927 -7.62335873]
[-303.91708374 -1.20170581]
[-296.29281616 12.31310940]
[-281.37701416 13.90020370]
[-266.46121216 15.48729706]
[-252.98672485 9.14005280]
[-240.08265686 18.29406548]
[-225.16685486 19.88116074]
[-217.77955627 12.73696899]
[-207.45849609 10.82356548]
[-197.59585571 15.01698399]
[-191.57026672 24.14477539]
[-176.72671509 26.30550957]
[-161.88314819 28.46624374]
[-147.03959656 30.62697601]
[-139.20828247 17.83359909]
[-147.88414001 5.59719992]
[-156.55999756 -6.63919973]
[-171.68089294 -12.98667717]
[-173.47555542 -29.28732872]
[-160.09779358 -38.77244186]
[-145.30949402 -31.68454361]
[-144.32359314 -15.31505871]
[-135.64773560 -3.07865882]
[-126.97187805 9.15774059]
[-114.81965637 17.95111465]
[-100.48403168 22.36586380]
[-86.14841461 26.78061295]
[-71.81279755 31.19536400]
[-57.47717667 35.61011124]
[-43.14155579 40.02486038]
[-35.78817749 38.98308945]
[-28.57368469 44.66529846]
[-14.32581043 49.35551071]
[-0.07793619 54.04572296]
[14.16993809 58.73593140]
[28.41781235 63.42614365]
[42.66568756 68.11635590]
[56.91355896 72.80656433]
[71.16143799 77.49678040]
[85.66984558 74.12701416]
[96.35874939 85.79139709]
[111.24118805 83.91713715]
[123.88126373 75.84071350]
[136.52133179 67.76429749]
[149.16140747 59.68787766]
[161.80148315 51.61145782]
[169.26451111 37.66105652]
[184.15541077 37.32834244]
[196.79548645 29.25192070]
[209.43554688 21.17550278]
[222.07562256 13.09908295]
[229.53866577 -0.85131854]
[244.42955017 -1.18403482]
[251.89257812 -15.13443661]
[266.78347778 -15.46715260]
[279.42355347 -23.54357147]
[292.06362915 -31.61999130]
[304.70370483 -39.69641113]
[307.85852051 -55.18261719]
[321.08563232 -63.83241653]
[336.53762817 -60.51403809]
[345.04708862 -47.19621277]
[341.56552124 -31.78017235]
[328.15847778 -23.41198158]
[312.78012085 -27.05633736]
[300.14004517 -18.97991753]
[287.49996948 -10.90349865]
[274.85989380 -2.82707930]
[268.30096436 10.54564285]
[252.50596619 11.45603848]
[245.94703674 24.82876015]
[230.15203857 25.73915672]
[217.51197815 33.81557465]
[204.87190247 41.89199448]
[192.23182678 49.96841431]
[185.67289734 63.34113693]
[169.87789917 64.25153351]
[157.23782349 72.32794952]
[144.59776306 80.40437317]
[131.95768738 88.48078918]
[119.31761169 96.55721283]
[119.10081482 104.05407715]
[134.09454346 104.48789978]
[133.66047668 119.48162079]
[118.66722107 119.04780579]
[118.45042419 126.54467010]
[130.60264587 135.33804321]
[142.75486755 144.13142395]
[157.46080017 139.18013000]
[172.25834656 143.85050964]
[181.45753479 156.34667969]
[181.52111816 171.86361694]
[172.42462158 184.43475342]
[157.66584778 189.22622681]
[142.91983032 184.39559937]
[133.85673523 171.80036926]
[133.96150208 156.28364563]
[121.80927277 147.49026489]
[109.65705109 138.69689941]
[103.04476929 142.23635864]
[110.12368774 155.46092224]
[117.20240021 168.68557739]
[103.97762299 175.76408386]
[96.89913177 162.53982544]
[89.82021332 149.31527710]
[83.20793152 152.85473633]
[83.78599548 167.84359741]
[97.26884460 175.06578064]
[105.27358246 187.98168945]
[105.73555756 203.06987000]
[98.63078308 216.27510071]
[85.95553589 224.09837341]
[86.53359985 239.08723450]
[87.11166382 254.07609558]
[93.76390839 269.67044067]
[80.62051392 280.37966919]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 160]
[2 159]
[3 158]
[8 153]
[9 152]
[11 87]
[13 85]
[14 84]
[15 83]
[16 82]
[17 81]
[18 80]
[19 79]
[20 78]
[21 76]
[22 75]
[23 74]
[24 73]
[25 72]
[26 71]
[29 60]
[30 59]
[31 58]
[32 57]
[34 53]
[35 52]
[37 50]
[38 49]
[39 48]
[61 70]
[62 69]
[63 68]
[88 127]
[89 126]
[90 125]
[91 124]
[92 123]
[94 121]
[95 120]
[96 119]
[97 118]
[99 116]
[101 114]
[102 113]
[103 112]
[104 111]
[132 145]
[133 144]
[134 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
