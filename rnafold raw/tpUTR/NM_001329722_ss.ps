%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 10:14:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAUGAUGUCCUGCCCAGGCCCGAUGGCCACUAGGACCCUGCAAGCAACUCUGCUCUGUGACCAGGCCAGGAUUCCUGGAGCUGGCCUGAGAGGGCUCAAUGGACCCUCGGGGACCCAAGUGGGGCUUUCAACCCUCUCCCCCACCACCCAGCCCACUGCACUGAAAUGAGACUUUAUUCUGAAAUUAUUAAAAAGAACAGAGAUGCUCCA\
) } def
/len { sequence length } bind def

/coor [
[52.96097183 339.12051392]
[48.37689209 349.19372559]
[41.66733170 357.98278809]
[33.17389679 365.04745483]
[23.32739830 370.03506470]
[12.62600327 372.69827271]
[1.61003792 372.90710449]
[-9.16530228 370.65542603]
[-19.15792847 366.06103516]
[-28.74313354 377.59896851]
[-38.32833862 389.13690186]
[-47.91354370 400.67483521]
[-57.49874878 412.21276855]
[-67.08395386 423.75070190]
[-63.70666504 435.14752197]
[-66.22372437 446.64196777]
[-73.89699554 455.40399170]
[-84.73365021 459.33352661]
[-96.00271606 457.56329346]
[-105.92405701 468.81350708]
[-115.84539032 480.06369019]
[-125.76673126 491.31390381]
[-128.47834778 507.48730469]
[-143.93333435 512.97143555]
[-156.23292542 502.12466431]
[-152.72434998 486.10522461]
[-137.01693726 481.39257812]
[-127.09559631 470.14236450]
[-117.17425537 458.89215088]
[-107.25292206 447.64196777]
[-109.49642181 429.47268677]
[-97.54041290 415.18948364]
[-78.62188721 414.16549683]
[-69.03668213 402.62756348]
[-59.45147324 391.08963013]
[-49.86626816 379.55169678]
[-40.28106308 368.01376343]
[-30.69585991 356.47583008]
[-40.38772964 340.00149536]
[-43.04578018 321.04132080]
[-38.24166870 302.47543335]
[-26.68245316 287.13339233]
[-10.10663319 277.36312866]
[8.97728825 274.67138672]
[27.67041779 279.49169922]
[36.19839096 267.15179443]
[44.72636414 254.81187439]
[53.25433731 242.47193909]
[54.12501144 227.60281372]
[68.33602142 220.64883423]
[76.86399841 208.30891418]
[85.39196777 195.96899414]
[93.91994476 183.62907410]
[102.44791412 171.28915405]
[103.31858826 156.42001343]
[117.52960205 149.46604919]
[126.05757904 137.12612915]
[134.58554077 124.78620148]
[117.84487152 136.94421387]
[98.06386566 139.45881653]
[80.20993805 132.42166138]
[68.42568970 118.23649597]
[65.07024384 100.86522675]
[70.26947021 84.73914337]
[58.80253601 75.06911469]
[47.33560562 65.39907837]
[35.86867523 55.72904968]
[24.40174675 46.05901718]
[12.93481541 36.38898468]
[1.46788538 26.71895409]
[-9.99904537 17.04892349]
[-24.14912033 22.88278389]
[-39.38844681 21.46099854]
[-52.21514130 13.11027813]
[-59.68172073 -0.25043917]
[-60.07242203 -15.55095959]
[-53.29746246 -29.27533722]
[-40.91367722 -38.26980591]
[-25.76677513 -40.46751022]
[-11.33739853 -35.36342621]
[-0.94131327 -24.13043785]
[3.03253531 -9.34980488]
[-0.32901347 5.58199263]
[11.13791656 15.25202370]
[22.60484695 24.92205620]
[34.07177734 34.59208679]
[45.53870773 44.26211929]
[57.00563812 53.93214798]
[68.47257233 63.60218048]
[79.93949890 73.27220917]
[104.05337524 62.23254395]
[132.18190002 72.16403198]
[129.75894165 57.36101532]
[127.33596802 42.55800247]
[124.91300201 27.75498772]
[122.49003601 12.95197392]
[118.01615143 4.98996496]
[120.14218140 -2.08709574]
[117.93780518 -16.92423630]
[107.32194519 -29.42365837]
[113.09288788 -44.77384567]
[129.31398010 -47.18383789]
[139.29835510 -34.17444229]
[132.77494812 -19.12861252]
[134.97932434 -4.29147196]
[137.29304504 10.52900791]
[139.71601868 25.33202171]
[142.13897705 40.13503647]
[144.56195068 54.93805313]
[146.98490906 69.74106598]
[161.23703003 74.41838074]
[171.96031189 63.92975616]
[182.68359375 53.44113159]
[176.48684692 39.62716293]
[175.39225769 24.55487442]
[179.51266479 10.04479408]
[188.33221436 -2.15707827]
[200.77078247 -10.58936119]
[215.31629944 -14.25030804]
[230.20849609 -12.71678352]
[243.65194702 -6.19307375]
[254.37522888 -16.68169975]
[265.09851074 -27.17032433]
[275.82177734 -37.65895081]
[286.54507446 -48.14757538]
[297.26834106 -58.63619995]
[291.57443237 -72.73045349]
[291.71258545 -87.93076324]
[297.66174316 -101.91918945]
[308.51467896 -112.56259918]
[322.61639404 -118.23796082]
[337.81652832 -118.07981110]
[351.79711914 -112.11226654]
[362.42623901 -101.24533844]
[368.08303833 -87.13615417]
[367.90490723 -71.93626404]
[361.91897583 -57.96353912]
[351.03805542 -47.34871292]
[336.92144775 -41.71047592]
[321.72180176 -41.90861893]
[307.75695801 -47.91292191]
[297.03369141 -37.42429733]
[286.31042480 -26.93567085]
[275.58712769 -16.44704437]
[264.86386108 -5.95841932]
[254.14057922 4.53020620]
[260.36529541 18.11469078]
[261.56900024 33.03716278]
[257.58715820 47.49813080]
[248.88177490 59.74711990]
[236.48777771 68.29457092]
[221.89010620 72.09298706]
[206.84571838 70.66522980]
[193.17221069 64.16441345]
[182.44892883 74.65303802]
[171.72564697 85.14166260]
[172.77310181 92.56816101]
[187.21217346 88.50453949]
[201.65126038 84.44091797]
[212.48358154 74.06494904]
[227.47572327 73.57939911]
[238.95674133 83.23269653]
[241.05223083 98.08560944]
[232.68998718 110.53843689]
[218.14868164 114.21952057]
[204.86747742 107.24416351]
[189.86773682 107.33265686]
[174.86799622 107.42115021]
[175.91545105 114.84764862]
[191.73440552 114.58035278]
[199.27009583 127.42801666]
[212.47604370 134.54161072]
[225.68197632 141.65521240]
[240.74656677 136.87678528]
[254.73905945 144.22427368]
[259.35794067 159.33854675]
[251.86293030 173.25257874]
[236.70066833 177.71141052]
[222.86665344 170.06970215]
[218.56837463 154.86114502]
[205.36244202 147.74754333]
[192.15650940 140.63395691]
[177.28213501 141.41006470]
[168.80184937 128.05358887]
[176.98071289 140.62760925]
[189.34941101 149.11380005]
[195.97363281 162.57186890]
[195.15411377 177.54946899]
[187.10107422 190.20443726]
[173.88031006 197.29046631]
[158.88333130 196.98977661]
[145.95722961 189.37953186]
[138.41790771 176.41192627]
[138.19940186 161.41351318]
[145.35754395 148.23199463]
[146.92547607 133.31417847]
[138.39749146 145.65409851]
[129.86952209 157.99401855]
[128.38887024 173.74578857]
[114.78783417 179.81712341]
[106.25986481 192.15704346]
[97.73188782 204.49696350]
[89.20391846 216.83688354]
[80.67594910 229.17681885]
[79.19528961 244.92858887]
[65.59426117 250.99992371]
[57.06628418 263.33984375]
[48.53831100 275.67974854]
[40.01033783 288.01968384]
[47.15230560 296.53848267]
[52.20961380 306.42694092]
[54.93133163 317.18481445]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 38]
[10 37]
[11 36]
[12 35]
[13 34]
[14 33]
[19 30]
[20 29]
[21 28]
[22 27]
[45 209]
[46 208]
[47 207]
[48 206]
[50 204]
[51 203]
[52 202]
[53 201]
[54 200]
[56 198]
[57 197]
[58 196]
[64 90]
[65 89]
[66 88]
[67 87]
[68 86]
[69 85]
[70 84]
[71 83]
[92 110]
[93 109]
[94 108]
[95 107]
[96 106]
[98 105]
[99 104]
[111 156]
[112 155]
[113 154]
[121 146]
[122 145]
[123 144]
[124 143]
[125 142]
[126 141]
[169 184]
[171 182]
[172 181]
[173 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
