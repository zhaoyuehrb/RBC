%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 15:25:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCUACAAAAUGACAUAAACUGGACAUGCCUUAUAUUCAGUUGAAACAAAUUAUUUUUUACUUUGACGAACUUUAUAGAGAAUUCUUGUAUAAAGUAUUGGUUUGUAUUUGUAAAUUUAAAAAAUGUUUUCAUUUUAACAUGUUUUAUAAUUGAUACAUCUCAAGGCCCUACCCAUAAAAUUAUUUGAAAACUUUCACCAGAAAGGGAUGUAAGUCUCGCUUAUAUUUUGUGAAUAAAAUGAUCAAAAGCUC\
) } def
/len { sequence length } bind def

/coor [
[27.66655350 352.75677490]
[25.03289032 360.22811890]
[21.57151031 367.35205078]
[17.32719994 374.03720093]
[12.35477734 380.19796753]
[6.71839094 385.75540161]
[0.49068716 390.63842773]
[-6.24812508 394.78460693]
[-13.41130638 398.14099121]
[-20.90670395 400.66485596]
[-28.63793755 402.32409668]
[-36.50564194 403.09780884]
[-44.40872955 402.97634888]
[-52.24571228 401.96170044]
[-59.91598892 400.06726074]
[-67.32113647 397.31768799]
[-74.36618042 393.74865723]
[-80.96080780 389.40634155]
[-91.13084412 400.43225098]
[-101.30088806 411.45812988]
[-111.47092438 422.48403931]
[-121.64096069 433.50991821]
[-131.81098938 444.53582764]
[-141.98103333 455.56170654]
[-145.65020752 470.95156860]
[-159.96670532 475.06097412]
[-170.13674927 486.08685303]
[-180.30677795 497.11276245]
[-186.60133362 512.85491943]
[-203.47076416 511.16418457]
[-206.51606750 494.48599243]
[-191.33267212 486.94271851]
[-181.16264343 475.91683960]
[-170.99259949 464.89093018]
[-168.05085754 450.28973389]
[-153.00692749 445.39169312]
[-142.83688354 434.36578369]
[-132.66685486 423.33990479]
[-122.49681854 412.31399536]
[-112.32677460 401.28811646]
[-102.15673828 390.26220703]
[-91.98670197 379.23632812]
[-104.17671204 359.47131348]
[-109.19982910 336.78213501]
[-106.48759460 313.68554688]
[-96.33019257 292.74713135]
[-79.84546661 276.29644775]
[-58.85588837 266.16781616]
[-35.68709183 263.49566650]
[-12.91018200 268.58764648]
[-5.76235056 255.40022278]
[1.38548040 242.21278381]
[8.53331184 229.02534485]
[15.68114281 215.83790588]
[22.82897377 202.65046692]
[29.97680473 189.46302795]
[37.12463379 176.27558899]
[44.10816574 163.00041199]
[50.92631912 149.63955688]
[57.74447632 136.27868652]
[64.56262970 122.91781616]
[52.17359543 131.37428284]
[41.40602493 141.81742859]
[26.46837807 143.18370056]
[13.98495579 134.86720276]
[9.49170399 120.55599976]
[14.98121548 106.59658051]
[28.01909065 99.17945099]
[42.82333755 101.59374237]
[57.82265854 101.45103455]
[44.59109879 94.38521576]
[31.35953522 87.31939697]
[18.12797356 80.25357819]
[4.89641190 73.18776703]
[-8.33514977 66.12194824]
[-21.56671143 59.05612946]
[-34.79827499 51.99031067]
[-48.07344818 45.00678253]
[-61.39172745 38.10580444]
[-74.71000671 31.20483017]
[-91.05860901 32.49134827]
[-100.12281799 18.82488441]
[-92.57814026 4.26432371]
[-76.18590546 3.78832340]
[-67.80902863 17.88655281]
[-54.49075317 24.78752708]
[-41.17247391 31.68850327]
[-33.80769730 31.97454453]
[-27.73245621 38.75875092]
[-14.50089455 45.82456589]
[-1.26933265 52.89038467]
[11.96222878 59.95620346]
[25.19379044 67.02201843]
[38.42535400 74.08783722]
[51.65691376 81.15365601]
[64.88847351 88.21946716]
[73.00998688 72.47344208]
[88.00524902 61.77088547]
[106.93224335 58.99944305]
[125.70410156 65.40579987]
[128.48188782 50.66524506]
[131.25965881 35.92469406]
[134.03744507 21.18413734]
[136.81521606 6.44358397]
[124.60814667 -2.65304923]
[117.58976746 -16.09288979]
[117.10465240 -31.18543243]
[123.19548798 -44.93544006]
[134.60522461 -54.63736725]
[149.03610229 -58.40769196]
[151.81387329 -73.14824677]
[154.59165955 -87.88880157]
[157.36944580 -102.62935638]
[159.96397400 -117.40325928]
[162.37484741 -132.20825195]
[164.78573608 -147.01322937]
[167.19662476 -161.81822205]
[169.51553345 -176.63789368]
[171.74240112 -191.47167969]
[173.96926880 -206.30545044]
[176.19612122 -221.13923645]
[178.42298889 -235.97302246]
[172.82017517 -250.76893616]
[182.36119080 -262.20651245]
[184.58805847 -277.04028320]
[186.81491089 -291.87408447]
[189.04177856 -306.70785522]
[191.26864624 -321.54162598]
[180.11418152 -332.32855225]
[177.46357727 -347.61755371]
[184.33605957 -361.52975464]
[198.08900452 -368.71557617]
[213.43414307 -366.41192627]
[224.47093201 -355.50463867]
[226.95550537 -340.18777466]
[219.93251038 -326.35098267]
[206.10243225 -319.31475830]
[203.87556458 -304.48098755]
[201.64869690 -289.64721680]
[199.42182922 -274.81341553]
[197.19497681 -259.97964478]
[202.95707703 -246.24475098]
[193.25677490 -233.74615479]
[191.02990723 -218.91236877]
[188.80303955 -204.07859802]
[186.57618713 -189.24481201]
[184.34931946 -174.41102600]
[186.45858765 -167.34896851]
[182.00160217 -159.40733337]
[179.59072876 -144.60235596]
[177.17984009 -129.79736328]
[174.76895142 -114.99237823]
[176.76640320 -110.68122101]
[176.09559631 -105.07203674]
[172.11000061 -99.85157013]
[169.33221436 -85.11101532]
[166.55442810 -70.37046814]
[163.77665710 -55.62990952]
[175.84548950 -46.86585617]
[182.94151306 -33.67661667]
[183.61007690 -18.65283585]
[177.66508484 -4.77201223]
[166.23645020 5.19158506]
[151.55577087 9.22136402]
[148.77799988 23.96191788]
[146.00021362 38.70247269]
[143.22244263 53.44302750]
[140.44465637 68.18357849]
[149.94938660 56.57926559]
[159.45411682 44.97495270]
[168.95884705 33.37063599]
[178.46357727 21.76632118]
[181.70443726 7.12061262]
[189.28482056 -5.82302904]
[200.47267151 -15.81462860]
[214.18756104 -21.88929176]
[229.10505676 -23.46038246]
[243.78456116 -20.37618065]
[256.80844116 -12.93453121]
[266.91900635 -1.85407710]
[273.13986206 11.79513550]
[274.87026978 26.69499397]
[271.94308472 41.40660858]
[264.64099121 54.50926971]
[253.66920471 64.73764801]
[240.08724976 71.10398102]
[225.20672607 72.99346161]
[210.46157837 70.22253418]
[196.05697632 74.40671539]
[181.65237427 78.59090424]
[167.24777222 82.77509308]
[152.84317017 86.95928192]
[167.49040222 90.19324493]
[182.13763428 93.42720795]
[196.78486633 96.66117096]
[211.43209839 99.89514160]
[226.89633179 94.43712616]
[239.17758179 105.30464172]
[235.64195251 121.31812286]
[219.92662048 126.00426483]
[208.19813538 114.54237366]
[193.55090332 111.30841064]
[178.90367126 108.07444763]
[164.25643921 104.84047699]
[149.60920715 101.60651398]
[143.12493896 115.13256836]
[154.81915283 124.52646637]
[166.51336670 133.92036438]
[178.20758057 143.31425476]
[189.90180969 152.70814514]
[201.59602356 162.10205078]
[213.29023743 171.49594116]
[224.98445129 180.88983154]
[236.67868042 190.28373718]
[248.37289429 199.67762756]
[264.50790405 204.88322449]
[263.97235107 221.82870483]
[247.54083252 226.00506592]
[238.97900391 211.37184143]
[227.28477478 201.97795105]
[215.59056091 192.58406067]
[203.89634705 183.19015503]
[192.20213318 173.79626465]
[180.50790405 164.40237427]
[168.81369019 155.00846863]
[157.11947632 145.61457825]
[145.42526245 136.22068787]
[133.73103333 126.82678986]
[105.19973755 139.72784424]
[77.92349243 129.73597717]
[71.10533905 143.09683228]
[64.28718567 156.45770264]
[57.46903229 169.81857300]
[57.42922592 176.38642883]
[54.52917099 181.23437500]
[50.31207275 183.42343140]
[43.16424179 196.61087036]
[36.01641083 209.79829407]
[28.86857986 222.98573303]
[21.72074890 236.17317200]
[14.57291794 249.36061096]
[7.42508698 262.54806519]
[0.27725610 275.73547363]
[6.53779984 280.61883545]
[12.20445538 286.17803955]
[17.20470428 292.34140015]
[21.47461700 299.02957153]
[24.95966339 306.15646362]
[27.61541939 313.63037109]
[29.40812111 321.35516357]
[30.31510735 329.23156738]
[30.32509613 337.15838623]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 42]
[19 41]
[20 40]
[21 39]
[22 38]
[23 37]
[24 36]
[26 34]
[27 33]
[28 32]
[50 243]
[51 242]
[52 241]
[53 240]
[54 239]
[55 238]
[56 237]
[57 236]
[58 233]
[59 232]
[60 231]
[61 230]
[70 96]
[71 95]
[72 94]
[73 93]
[74 92]
[75 91]
[76 90]
[77 89]
[78 87]
[79 86]
[80 85]
[100 168]
[101 167]
[102 166]
[103 165]
[104 164]
[110 158]
[111 157]
[112 156]
[113 155]
[114 152]
[115 151]
[116 150]
[117 149]
[118 147]
[119 146]
[120 145]
[121 144]
[122 143]
[124 141]
[125 140]
[126 139]
[127 138]
[128 137]
[192 205]
[193 204]
[194 203]
[195 202]
[196 201]
[206 228]
[207 227]
[208 226]
[209 225]
[210 224]
[211 223]
[212 222]
[213 221]
[214 220]
[215 219]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
