%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 20:25:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUCAUAUUUCAAAACAUUUUACAACAUCUAGAAAUGUUUUGUUUUCUUUGGAUAUAUGUUCUUCCAGCUUGGGGGUUUGGGGCUUGCUUUAUUAUAAAGUGGAGAAGUUUUUUUUUUUGAGUGUAUAAAUUAUGGUAUUACCUUUCAAAGUUAUAAAAUAUUUUAUGGAUUUUUAUAUGAUAUAAAAAUGUACACAUUAAAGCCGUUUCAUUAUUGGA\
) } def
/len { sequence length } bind def

/coor [
[85.57303619 143.51576233]
[89.67808533 129.08892822]
[82.46439362 127.03645325]
[71.59723663 137.37594604]
[60.73008728 147.71542358]
[49.86293793 158.05491638]
[55.43540573 174.30468750]
[53.34735870 191.30020142]
[44.06736374 205.62484741]
[29.50486374 214.42027283]
[12.61748600 215.95674133]
[-3.18962622 209.97309875]
[-13.75846672 220.61732483]
[-24.32730675 231.26155090]
[-34.89614868 241.90579224]
[-45.46498871 252.55001831]
[-56.03382874 263.19424438]
[-66.60266876 273.83847046]
[-77.17150879 284.48269653]
[-87.74034882 295.12692261]
[-98.30918884 305.77114868]
[-108.87803650 316.41537476]
[-104.77278900 331.21548462]
[-108.63311768 346.08132935]
[-119.42061615 357.01409912]
[-134.23348999 361.07293701]
[-149.08717346 357.16601562]
[-159.98606873 346.34429932]
[-163.99845886 331.51876831]
[-160.04501343 316.67742920]
[-149.18919373 305.81250000]
[-134.35115051 301.84658813]
[-119.52226257 305.84655762]
[-108.95342255 295.20233154]
[-98.38458252 284.55807495]
[-87.81574249 273.91384888]
[-77.24690247 263.26962280]
[-66.67805481 252.62539673]
[-56.10921860 241.98117065]
[-45.54037857 231.33694458]
[-34.97153473 220.69271851]
[-24.40269661 210.04849243]
[-13.83385468 199.40426636]
[-19.15011215 187.56036377]
[-20.12973022 174.58305359]
[-16.63460159 162.01379395]
[-9.05943394 151.35296631]
[1.71270633 143.88081360]
[14.41328907 140.50363159]
[27.53769112 141.64393616]
[39.52344894 147.18775940]
[50.39059830 136.84828186]
[61.25775146 126.50878906]
[72.12490082 116.16929626]
[70.85171509 108.77816010]
[56.35787964 112.64192200]
[44.19939041 121.42662811]
[30.31022835 115.76171875]
[27.76390266 100.97942352]
[38.95720673 90.99393463]
[53.35409927 95.20426941]
[68.30534363 93.99587250]
[67.03215790 86.60472870]
[53.33187103 80.49718475]
[39.63158035 74.38964081]
[25.93129158 68.28209686]
[12.23100185 62.17455673]
[-1.46928740 56.06701660]
[-18.39788628 55.14024353]
[-22.19363594 38.61666870]
[-7.36657333 30.39507484]
[4.63825464 42.36672592]
[18.33854485 48.47426987]
[32.03883362 54.58181000]
[45.73912430 60.68935394]
[59.43941116 66.79689789]
[73.13970184 72.90443420]
[78.53639221 67.69620514]
[74.91186523 53.14069748]
[89.32978058 57.27973938]
[94.72647858 52.07150650]
[89.10957336 38.16286087]
[83.49267578 24.25421524]
[77.87577057 10.34556961]
[72.25887299 -3.56307602]
[66.64196777 -17.47172165]
[61.02506638 -31.38036537]
[54.91432571 -38.15968323]
[55.42872238 -45.52685928]
[50.01009750 -59.51394272]
[44.59147263 -73.50102997]
[39.17284775 -87.48811340]
[33.75422287 -101.47519684]
[28.33559799 -115.46228027]
[22.91697311 -129.44935608]
[9.80845356 -139.30322266]
[12.05622673 -155.54760742]
[27.34797668 -161.47164917]
[39.95286179 -150.98123169]
[36.90405655 -134.86798096]
[42.32268143 -120.88090515]
[47.74130630 -106.89382172]
[53.15993118 -92.90673828]
[58.57855606 -78.91965485]
[63.99718094 -64.93257141]
[69.41580963 -50.94548416]
[74.93370819 -36.99726868]
[80.55061340 -23.08862305]
[86.16751099 -9.17997837]
[91.78441620 4.72866726]
[97.40132141 18.63731194]
[103.01821899 32.54595566]
[108.63512421 46.45460129]
[125.23262024 58.33798599]
[134.59228516 74.16059875]
[136.41233826 90.43484497]
[131.85600281 104.09309387]
[146.68922424 101.86248016]
[161.52243042 99.63186646]
[176.35565186 97.40125275]
[191.18887329 95.17063904]
[206.02209473 92.94002533]
[220.83908081 90.60404205]
[235.63909912 88.16279602]
[250.43910217 85.72155762]
[265.23910522 83.28031921]
[280.03912354 80.83907318]
[294.83914185 78.39783478]
[309.63916016 75.95659637]
[317.49319458 58.49386215]
[334.15780640 49.37305832]
[352.80270386 52.12585449]
[365.90972900 65.45899200]
[380.59219360 62.38900375]
[395.27465820 59.31901169]
[407.19915771 48.92106628]
[421.24057007 53.88974380]
[435.92306519 50.81975174]
[450.60552979 47.74975967]
[465.28802490 44.67976761]
[469.02542114 29.92195129]
[478.76007080 18.29768372]
[492.52008057 12.07818031]
[507.55419922 12.44823360]
[520.88177490 19.28090096]
[529.88378906 31.17329407]
[544.56628418 28.10330391]
[559.24871826 25.03331184]
[573.93121338 21.96331978]
[588.56854248 18.68492889]
[603.15783691 15.19880009]
[617.74713135 11.71267223]
[632.33636475 8.22654438]
[638.16522217 -6.15415239]
[651.35137939 -14.33369255]
[666.82452393 -13.16687679]
[678.63488770 -3.10236931]
[682.24121094 11.98982143]
[676.25671387 26.30644035]
[662.98260498 34.34245300]
[647.52301025 33.00785446]
[635.82250977 22.81581879]
[621.23321533 26.30194664]
[606.64398193 29.78807449]
[592.05468750 33.27420044]
[588.83917236 36.79637146]
[583.37951660 38.34044647]
[577.00122070 36.64579773]
[562.31872559 39.71578979]
[547.63623047 42.78578186]
[532.95379639 45.85577393]
[529.47082520 60.35868073]
[519.99737549 71.95885468]
[506.37106323 78.32157898]
[491.27188110 78.13631439]
[477.69528198 71.38624573]
[468.35800171 59.36224365]
[453.67553711 62.43223572]
[438.99304199 65.50222778]
[424.31057739 68.57221985]
[413.43627930 78.75057983]
[398.34466553 74.00148773]
[383.66220093 77.07147980]
[368.97970581 80.14147186]
[366.41671753 90.98611450]
[359.96530151 100.13488007]
[350.52474976 106.24613190]
[339.43597412 108.40629578]
[328.29104614 106.26625824]
[318.70471191 100.09714508]
[312.08038330 90.75660706]
[297.28039551 93.19784546]
[282.48037720 95.63908386]
[267.68035889 98.08032990]
[252.88034058 100.52156830]
[238.08033752 102.96280670]
[223.28031921 105.40405273]
[217.19676208 109.59095764]
[208.25270081 107.77323914]
[193.41949463 110.00385284]
[178.58627319 112.23446655]
[163.75305176 114.46508026]
[148.91983032 116.69569397]
[134.08660889 118.92630768]
[125.83078766 131.44993591]
[129.62718201 145.96156311]
[133.42358398 160.47320557]
[148.12188721 165.15971375]
[157.93554688 177.06330872]
[159.73306274 192.38560486]
[152.94084167 206.23728943]
[139.72627258 214.19836426]
[124.30606079 213.72845459]
[111.60075378 204.97753906]
[105.66456604 190.73796082]
[108.39170837 175.55355835]
[118.91195679 164.26959229]
[115.11556244 149.75796509]
[111.31916046 135.24633789]
[104.10546875 133.19386292]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 54]
[4 53]
[5 52]
[6 51]
[12 43]
[13 42]
[14 41]
[15 40]
[16 39]
[17 38]
[18 37]
[19 36]
[20 35]
[21 34]
[22 33]
[63 77]
[64 76]
[65 75]
[66 74]
[67 73]
[68 72]
[81 113]
[82 112]
[83 111]
[84 110]
[85 109]
[86 108]
[87 107]
[89 106]
[90 105]
[91 104]
[92 103]
[93 102]
[94 101]
[95 100]
[117 204]
[118 203]
[119 202]
[120 201]
[121 200]
[122 199]
[123 197]
[124 196]
[125 195]
[126 194]
[127 193]
[128 192]
[129 191]
[133 184]
[134 183]
[135 182]
[137 180]
[138 179]
[139 178]
[140 177]
[146 171]
[147 170]
[148 169]
[149 168]
[150 165]
[151 164]
[152 163]
[153 162]
[205 219]
[206 218]
[207 217]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
