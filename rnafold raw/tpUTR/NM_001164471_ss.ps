%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 01:59:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAUGAUGGAGCAUCAGAUUUUACCUAAUACAGCAGAACUCCUAAAAAGUUACAGCCAUAUGCAGGACGGCAGUACUCAGCAUGGUCUUAUGCACAGGAACUAAAGGAAAAACAGAUCGAGUCACAAAAAUUCAGGAAGAGGGGGUAAAUGUGGAUUGUAUGGAAUGAAAAAUAAACAUUCUCAAGGA\
) } def
/len { sequence length } bind def

/coor [
[89.36807251 466.14465332]
[80.05585480 480.35552979]
[65.52093506 489.04614258]
[48.70523834 490.51373291]
[43.80992889 504.69247437]
[38.91462326 518.87115479]
[34.01931381 533.04986572]
[29.12400627 547.22857666]
[29.67013168 564.17376709]
[13.53838825 569.38940430]
[4.06084013 555.33197021]
[14.94529057 542.33331299]
[19.84059906 528.15460205]
[24.73590660 513.97589111]
[29.63121414 499.79714966]
[34.52652359 485.61843872]
[24.57354736 477.23956299]
[18.04932976 465.94647217]
[15.75123310 453.07580566]
[17.97490501 440.15966797]
[24.47643471 428.74298096]
[34.49889755 420.19888306]
[46.86043167 415.56344604]
[60.09357834 415.41021729]
[65.45745850 401.40206909]
[70.82133484 387.39389038]
[88.46083069 367.52267456]
[108.16555023 367.33242798]
[108.16555023 352.33242798]
[108.16555023 337.33242798]
[108.16555023 322.33242798]
[108.16555023 307.33242798]
[107.66697693 292.34072876]
[106.67037964 277.37387085]
[105.67378235 262.40701294]
[92.55940247 251.89202881]
[91.06914520 234.81008911]
[102.60994720 221.67568970]
[101.36472321 206.72746277]
[100.11949158 191.77923584]
[98.87425995 176.83100891]
[97.62903595 161.88278198]
[96.38380432 146.93457031]
[79.73380280 142.48777771]
[65.80003357 132.34645081]
[56.45001984 117.86978912]
[52.93691635 100.99808502]
[55.73157501 83.99260712]
[42.61832809 76.70955658]
[29.50508118 69.42651367]
[20.46459389 67.99058533]
[16.23586082 61.91186905]
[3.24548054 54.41186905]
[-12.57446957 54.21248245]
[-19.72796059 41.14814758]
[-32.71834183 33.64814758]
[-45.70872116 26.14814758]
[-58.61058426 34.38225555]
[-73.86217499 35.66584396]
[-87.95878601 29.70395851]
[-97.66112518 17.86659241]
[-100.73966217 2.87388706]
[-96.48696899 -11.82894325]
[-85.88029480 -22.86329651]
[-71.35695648 -27.69355774]
[-56.25433350 -25.20977020]
[-44.04288101 -15.98268795]
[-37.52870560 -2.13262892]
[-38.20872116 13.15776539]
[-25.21834183 20.65776634]
[-12.22796059 28.15776634]
[2.66283083 27.82070351]
[10.74548054 41.42148590]
[23.73586082 48.92148590]
[36.78812790 56.31326675]
[49.90137482 63.59630966]
[63.01462173 70.87935638]
[70.25823975 60.49158859]
[80.45010376 51.99837112]
[93.06750488 46.23686218]
[89.12504578 31.76423264]
[85.18258667 17.29160309]
[81.24011993 2.81897354]
[77.29766083 -11.65365601]
[65.27895355 -22.81083679]
[69.19528961 -38.73548508]
[85.01787567 -43.04568481]
[96.46978760 -31.30747414]
[91.77029419 -15.59611702]
[95.71275330 -1.12348759]
[99.65521240 13.34914207]
[103.59767151 27.82177162]
[107.54013824 42.29439926]
[114.47518158 45.15012360]
[117.95389557 30.55907822]
[121.43260956 15.96803570]
[124.91131592 1.37699163]
[128.39002991 -13.21405220]
[131.86874390 -27.80509567]
[135.34745789 -42.39614105]
[138.82617188 -56.98718262]
[136.92774963 -71.86656189]
[141.89004517 -86.02198029]
[152.66336060 -96.45919037]
[166.96890259 -100.97045898]
[181.78067017 -98.60153961]
[193.96557617 -89.85350800]
[200.94621277 -76.57681274]
[201.24600220 -61.57981110]
[194.80151367 -48.03475189]
[182.97634888 -38.80696106]
[175.17190552 -25.99716949]
[167.36747742 -13.18738079]
[159.56303406 -0.37759086]
[151.75859070 12.43219852]
[143.95414734 25.24198914]
[136.14970398 38.05177689]
[128.34527588 50.86156845]
[135.28031921 53.71728897]
[148.27069092 46.21728897]
[161.26107788 38.71728897]
[174.25146484 31.21729088]
[176.78852844 15.78688908]
[188.68412781 5.63658571]
[204.32151794 5.55904245]
[216.31721497 15.59087276]
[219.00718689 30.99535370]
[211.12133789 44.49895859]
[196.38311768 49.72570038]
[181.75146484 44.20767212]
[168.76107788 51.70767212]
[155.77069092 59.20767212]
[142.78031921 66.70767212]
[148.84022522 78.61602783]
[151.72059631 91.43736267]
[151.34866333 104.35226440]
[147.85604858 116.56217957]
[141.56399536 127.33881378]
[132.95710754 136.06752014]
[122.64748383 142.28213501]
[111.33203125 145.68933105]
[112.57725525 160.63755798]
[113.82248688 175.58578491]
[115.06771088 190.53401184]
[116.31294250 205.48223877]
[117.55817413 220.43045044]
[128.78140259 227.89765930]
[133.57902527 240.28681946]
[130.40620422 252.98745728]
[120.64064026 261.41043091]
[121.63723755 276.37728882]
[122.63383484 291.34414673]
[125.20481873 294.89645386]
[126.38132477 298.70034790]
[126.25688934 302.28289795]
[125.07009888 305.25109863]
[123.16555023 307.33242798]
[123.16555023 322.33242798]
[123.16555023 337.33242798]
[123.16555023 352.33242798]
[123.16555023 367.33242798]
[127.34802246 381.73754883]
[135.38121033 394.40512085]
[143.41439819 407.07272339]
[151.44760132 419.74032593]
[159.48078918 432.40789795]
[167.51397705 445.07550049]
[182.94132996 445.06591797]
[195.91247559 453.41772461]
[202.28836060 467.46594238]
[200.03446960 482.72775269]
[189.86999512 494.33322144]
[175.03839111 498.57910156]
[160.27238464 494.11050415]
[150.28373718 482.35336304]
[148.25979614 467.05932617]
[154.84638977 453.10867310]
[146.81320190 440.44110107]
[138.77999878 427.77349854]
[130.74681091 415.10592651]
[122.71362305 402.43832397]
[114.68042755 389.77072144]
[107.21769714 390.51748657]
[92.29223633 392.01101685]
[84.82950592 392.75778198]
[79.46562958 406.76593018]
[74.10175323 420.77410889]
[86.11098480 433.02590942]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 16]
[5 15]
[6 14]
[7 13]
[8 12]
[24 187]
[25 186]
[26 185]
[28 161]
[29 160]
[30 159]
[31 158]
[32 157]
[33 152]
[34 151]
[35 150]
[38 146]
[39 145]
[40 144]
[41 143]
[42 142]
[43 141]
[48 77]
[49 76]
[50 75]
[52 74]
[53 73]
[55 71]
[56 70]
[57 69]
[80 93]
[81 92]
[82 91]
[83 90]
[84 89]
[119 133]
[120 132]
[121 131]
[122 130]
[162 182]
[163 181]
[164 180]
[165 179]
[166 178]
[167 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
