%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 17:39:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUGAGGUCUGCGGGGUCCUGGCCGGGCAGGGACAGGGCAGAGGACUCUGAGCGCCCCACCCAUGCCUGCCUGGCCUGGUAGAGAAGAUGGCACAGGAUGGAGGCGCCCCAAGACGGACAGUGUACAUAAGAGUUUCUUGUUGCUUUACAAUAAAACAUGAGAACCUGCA\
) } def
/len { sequence length } bind def

/coor [
[0.60549283 95.35905457]
[-14.31799603 93.84594727]
[-29.24148560 92.33284760]
[-38.26941681 104.67965698]
[-52.17347717 110.80941010]
[-67.17916107 109.16752625]
[-79.26738739 100.29448700]
[-85.25093842 86.65400696]
[-100.17442322 85.14090729]
[-115.09791565 83.62779999]
[-130.02140808 82.11470032]
[-144.94490051 80.60160065]
[-159.45516968 86.90735626]
[-171.33702087 77.92568207]
[-186.26051331 76.41257477]
[-201.18400574 74.89947510]
[-216.10749817 73.38637543]
[-231.03099060 71.87326813]
[-241.52308655 79.41785431]
[-253.94326782 77.82663727]
[-261.68130493 68.49782562]
[-276.57446289 66.71082306]
[-291.46765137 64.92382050]
[-300.39984131 67.01355743]
[-306.61706543 62.96474075]
[-321.47491455 60.90443802]
[-336.33273315 58.84413528]
[-351.19058228 56.78383255]
[-366.04840088 54.72352600]
[-380.92453003 52.79979324]
[-395.81771851 51.01278687]
[-410.71087646 49.22578430]
[-420.29266357 58.72410583]
[-433.40615845 60.92531967]
[-445.21295166 55.24501419]
[-451.48742676 43.96540070]
[-466.34527588 41.90509415]
[-481.20309448 39.84479141]
[-496.06091309 37.78448868]
[-510.98440552 36.27138519]
[-525.95343018 35.30752563]
[-540.92242432 34.34366608]
[-555.37414551 42.09476089]
[-569.16821289 33.22593307]
[-568.11444092 16.86067581]
[-553.29687500 9.83416271]
[-539.95855713 19.37466621]
[-524.98956299 20.33852577]
[-510.02056885 21.30238533]
[-507.81387329 19.51553535]
[-504.75317383 18.51233292]
[-501.13970947 18.62752342]
[-497.39196777 20.07832718]
[-494.00061035 22.92665863]
[-479.14279175 24.98696136]
[-464.28497314 27.04726410]
[-449.42712402 29.10756874]
[-436.48068237 18.40004349]
[-419.45864868 20.38981438]
[-408.92385864 34.33261108]
[-394.03070068 36.11961365]
[-379.13751221 37.90662003]
[-372.09487915 35.57252884]
[-363.98809814 39.86569595]
[-349.13027954 41.92599869]
[-334.27243042 43.98630142]
[-319.41461182 46.04660797]
[-304.55676270 48.10691071]
[-289.68063354 50.03064346]
[-274.78747559 51.81764984]
[-259.89428711 53.60465240]
[-244.17712402 45.83491135]
[-229.51788330 56.94977951]
[-214.59439087 58.46288300]
[-199.67089844 59.97598648]
[-184.74742126 61.48908997]
[-169.82392883 63.00219345]
[-156.38108826 56.58820343]
[-143.43179321 65.67810822]
[-128.50830078 67.19120789]
[-113.58481598 68.70431519]
[-98.66132355 70.21741486]
[-83.73783875 71.73052216]
[-75.13816833 59.56864166]
[-61.51496887 53.30250549]
[-46.48510742 54.70594025]
[-34.09436035 63.50174713]
[-27.72838211 77.40935516]
[-12.80489349 78.92246246]
[2.11859560 80.43556213]
[11.88972950 69.22561646]
[26.56166840 65.87924194]
[40.55434418 71.88411713]
[48.41900635 85.12998962]
[63.34249496 86.64309692]
[78.26598358 88.15619659]
[93.18947601 89.66930389]
[107.79566956 86.25476837]
[120.50176239 78.28262329]
[133.20785522 70.31047821]
[135.03015137 59.53863907]
[142.34553528 51.72336197]
[152.54551697 49.29625320]
[162.18354797 52.82794952]
[175.17393494 45.32794952]
[188.16432190 37.82794952]
[201.15469360 30.32794952]
[210.39030457 12.43769932]
[229.69000244 13.18244553]
[242.39610291 5.21029902]
[247.36347961 -10.04436207]
[262.43710327 -15.53667641]
[276.05377197 -7.05340910]
[277.76794434 8.89780235]
[266.26464844 20.08055496]
[250.36824036 17.91639519]
[237.66213989 25.88854218]
[236.27435303 36.05902481]
[229.35719299 43.93833542]
[219.02749634 46.74737167]
[208.65469360 43.31832886]
[195.66432190 50.81832886]
[182.67393494 58.31832886]
[169.68354797 65.81832886]
[161.31242371 83.22399902]
[141.18000793 83.01657867]
[128.47390747 90.98872375]
[115.76781464 98.96086884]
[115.07984161 106.42924500]
[129.71076965 103.12232971]
[137.37689209 116.01537323]
[127.48368835 127.29032898]
[113.70388031 121.36600494]
[113.01590729 128.83438110]
[124.05176544 138.99360657]
[135.08763123 149.15283203]
[146.12348938 159.31205750]
[161.51693726 162.96614075]
[165.64035034 177.27861023]
[176.67620850 187.43782043]
[187.71208191 197.59704590]
[198.74794006 207.75627136]
[212.91481018 202.07629395]
[228.14260864 203.11415100]
[241.40782166 210.66377258]
[250.07662964 223.22619629]
[252.42785645 238.30712891]
[247.99462891 252.91224670]
[237.65721130 264.14169312]
[223.46806335 269.76583862]
[208.24447632 268.66802979]
[195.00910950 261.06622314]
[186.38983154 248.46975708]
[184.09802246 233.37966919]
[188.58871460 218.79212952]
[177.55285645 208.63290405]
[166.51699829 198.47367859]
[155.48114014 188.31446838]
[140.87704468 185.38703918]
[135.96426392 170.34791565]
[124.92839813 160.18869019]
[113.89253998 150.02946472]
[102.85668182 139.87023926]
[88.19286346 121.74021912]
[91.67636871 104.59278870]
[76.75288391 103.07968903]
[61.82939148 101.56658173]
[46.90590286 100.05348206]
[36.54260635 111.45121002]
[21.62941170 114.52529907]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 90]
[2 89]
[3 88]
[8 83]
[9 82]
[10 81]
[11 80]
[12 79]
[14 77]
[15 76]
[16 75]
[17 74]
[18 73]
[21 71]
[22 70]
[23 69]
[25 68]
[26 67]
[27 66]
[28 65]
[29 64]
[30 62]
[31 61]
[32 60]
[36 57]
[37 56]
[38 55]
[39 54]
[40 49]
[41 48]
[42 47]
[94 168]
[95 167]
[96 166]
[97 165]
[98 128]
[99 127]
[100 126]
[104 124]
[105 123]
[106 122]
[107 121]
[109 117]
[110 116]
[134 163]
[135 162]
[136 161]
[137 160]
[139 158]
[140 157]
[141 156]
[142 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
