%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 11:20:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGCAGACAUCAUUCCCUGCCCUGGCAGUGACUUGGAGCCCUGAAGAAGGGACCAAUCAUGGGACCACAGCCACUGUGCCCUGCCGUUUCCUGCUGGGCCCCUGCAUAUGCCCCUGAGCCUGGGGCUGCCACGUGUUUAGGAAACAAAGUAUGCGCUACUGUCUGAAAACAAAUAAAGCAGAUGCCUUUGUUUUCAGUCGUUGACUCACUGGCAAACA\
) } def
/len { sequence length } bind def

/coor [
[55.68151474 285.16088867]
[50.64077377 299.28854370]
[50.70498657 308.41592407]
[45.42587280 313.58108521]
[40.18391037 327.63531494]
[34.94194794 341.68957520]
[29.69998360 355.74380493]
[39.54058075 367.53610229]
[42.15082550 382.67156982]
[36.82857513 397.07882690]
[25.00549126 406.88241577]
[9.86192131 409.44522095]
[-4.52858829 404.07781982]
[-14.29506397 392.22406006]
[-16.81037331 377.07254028]
[-11.39790916 362.69894409]
[0.48640099 352.96966553]
[15.64573860 350.50186157]
[20.88770103 336.44760132]
[26.12966347 322.39337158]
[31.37162590 308.33911133]
[36.51311111 294.24780273]
[41.55385208 280.12014771]
[46.08713150 265.82156372]
[50.10717010 251.37028503]
[46.06386185 237.03498840]
[57.21659851 225.81326294]
[61.23664093 211.36199951]
[65.25668335 196.91072083]
[69.27672577 182.45944214]
[73.29676819 168.00817871]
[77.31681061 153.55690002]
[58.87294769 141.12705994]
[46.44309616 122.68318939]
[31.99182320 126.70323181]
[17.54055214 130.72328186]
[3.08927965 134.74331665]
[-3.91799855 145.56683350]
[-16.03223610 148.62011719]
[-26.62959290 142.79588318]
[-41.13679504 146.60916138]
[-55.64400101 150.42242432]
[-70.15119934 154.23570251]
[-79.44802094 167.31044006]
[-95.47402191 168.04995728]
[-105.93542480 155.88696289]
[-102.80714417 140.15185547]
[-88.48892212 132.91528320]
[-73.96447754 139.72850037]
[-59.45727539 135.91522217]
[-44.95007324 132.10195923]
[-30.44286919 128.28868103]
[-18.65430450 115.28498840]
[-0.93076199 120.29204559]
[13.52050972 116.27200317]
[27.97178268 112.25196075]
[42.42305374 108.23191833]
[41.88975143 102.46337891]
[41.93294525 96.67040253]
[42.55220413 90.91046143]
[43.74138260 85.24069214]
[45.48868942 79.71734619]
[32.22219467 72.71733856]
[18.95569992 65.71732330]
[12.35624599 65.58725739]
[7.53361177 62.59656525]
[5.41453171 58.32328796]
[-7.64665937 50.94729233]
[-20.70785141 43.57130051]
[-33.76904297 36.19530487]
[-46.83023453 28.81931305]
[-63.59527969 26.29551697]
[-65.81114197 9.48699760]
[-50.27291870 2.70467186]
[-39.45423889 15.75812149]
[-26.39304733 23.13411522]
[-13.33185673 30.51010895]
[-0.27066562 37.88610458]
[12.79052544 45.26209641]
[25.95570946 52.45083237]
[39.22220612 59.45084000]
[52.48869705 66.45085144]
[60.20516205 57.58255005]
[69.54724884 50.44700623]
[80.13333130 45.33570862]
[91.53097534 42.45745087]
[103.27457428 41.92981720]
[106.04320526 27.18754005]
[108.81182861 12.44526386]
[111.58045959 -2.29701257]
[114.34908295 -17.03928947]
[117.11771393 -31.78156471]
[119.88633728 -46.52384186]
[122.65496826 -61.26611710]
[116.03371429 -72.33000183]
[118.63876343 -84.54846954]
[128.54119873 -91.48874664]
[123.69859314 -106.55061340]
[133.80929565 -117.48783112]
[136.78816223 -132.18907166]
[126.74048615 -141.61941528]
[122.69499969 -154.67889404]
[125.60575867 -167.92639160]
[134.60841370 -177.92622375]
[147.27313232 -182.13917542]
[150.46160889 -196.79637146]
[153.65008545 -211.45358276]
[152.06372070 -216.41265869]
[152.49108887 -221.02458191]
[154.46406555 -224.58169556]
[157.30177307 -226.66392517]
[161.11505127 -241.17112732]
[164.92831421 -255.67832947]
[168.74159241 -270.18554688]
[172.55487061 -284.69274902]
[163.37753296 -297.35412598]
[164.53742981 -312.94863892]
[175.48689270 -324.11300659]
[191.05590820 -325.57577515]
[203.89328003 -316.64627075]
[207.93757629 -301.54074097]
[201.27922058 -287.39151001]
[187.06207275 -280.87945557]
[183.24879456 -266.37225342]
[179.43551636 -251.86505127]
[175.62225342 -237.35784912]
[171.80897522 -222.85064697]
[168.30729675 -208.26510620]
[165.11882019 -193.60789490]
[161.93032837 -178.95069885]
[173.24429321 -167.05230713]
[175.25454712 -150.58953857]
[166.97177124 -136.02926636]
[151.48939514 -129.21022034]
[148.51054382 -114.50897980]
[153.56620789 -100.49864197]
[143.24244690 -88.50989532]
[149.71057129 -72.19335175]
[137.39724731 -58.49748993]
[134.62861633 -43.75521469]
[131.85998535 -29.01293755]
[129.09135437 -14.27066135]
[126.32273102 0.47161457]
[123.55410767 15.21389103]
[120.78547668 29.95616722]
[118.01685333 44.69844437]
[135.69897461 52.47164154]
[150.20736694 65.84814453]
[159.78706360 83.57807922]
[174.17945862 79.35208893]
[188.57185364 75.12609863]
[202.96424866 70.90011597]
[211.88391113 57.56522751]
[227.88224792 56.36837387]
[238.68672180 68.22767639]
[236.00904846 84.04569244]
[221.90330505 91.68819427]
[207.19023132 85.29250336]
[192.79783630 89.51849365]
[178.40544128 93.74448395]
[164.01304626 97.97047424]
[162.72941589 112.91545105]
[178.52754211 112.06093597]
[186.53511047 124.61991882]
[199.99607849 131.23823547]
[213.45706177 137.85655212]
[226.91804504 144.47486877]
[240.37901306 151.09318542]
[253.83999634 157.71150208]
[267.30096436 164.32981873]
[280.76193237 170.94813538]
[294.22293091 177.56645203]
[307.68389893 184.18476868]
[321.14486694 190.80308533]
[329.57504272 186.60588074]
[338.85360718 186.75192261]
[346.90524292 191.08221436]
[351.98699951 198.51597595]
[353.06533813 207.31739807]
[366.23049927 214.50613403]
[382.60321045 213.57516479]
[391.36831665 227.43534851]
[383.50903320 241.82853699]
[367.11032104 241.94824219]
[359.04177856 227.67132568]
[345.87658691 220.48258972]
[325.36001587 222.75814819]
[314.52655029 204.26405334]
[301.06558228 197.64573669]
[287.60461426 191.02742004]
[274.14361572 184.40910339]
[260.68264771 177.79078674]
[247.22167969 171.17247009]
[233.76069641 164.55415344]
[220.29972839 157.93583679]
[206.83874512 151.31752014]
[193.37776184 144.69920349]
[179.91679382 138.08088684]
[165.08149719 139.40879822]
[156.11109924 126.37642670]
[149.96755981 135.77304077]
[142.29054260 143.82775879]
[133.36071777 150.29835510]
[123.49530792 154.99937439]
[113.03701019 157.80743408]
[102.34205627 158.66412354]
[91.76808167 157.57695007]
[87.74803925 172.02821350]
[83.72799683 186.47949219]
[79.70795441 200.93075562]
[75.68791199 215.38203430]
[71.66786957 229.83331299]
[75.42364502 245.20225525]
[64.55844116 255.39031982]
[60.53840256 269.84161377]
[74.67110443 264.81500244]
[87.48940277 272.60543823]
[89.53599548 287.46517944]
[79.30089569 298.43069458]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 23]
[2 22]
[4 21]
[5 20]
[6 19]
[7 18]
[24 215]
[25 214]
[27 212]
[28 211]
[29 210]
[30 209]
[31 208]
[32 207]
[34 57]
[35 56]
[36 55]
[37 54]
[40 52]
[41 51]
[42 50]
[43 49]
[62 82]
[63 81]
[64 80]
[67 79]
[68 78]
[69 77]
[70 76]
[71 75]
[87 146]
[88 145]
[89 144]
[90 143]
[91 142]
[92 141]
[93 140]
[94 139]
[97 137]
[99 135]
[100 134]
[105 130]
[106 129]
[107 128]
[111 127]
[112 126]
[113 125]
[114 124]
[115 123]
[149 161]
[150 160]
[151 159]
[152 158]
[162 200]
[164 198]
[165 197]
[166 196]
[167 195]
[168 194]
[169 193]
[170 192]
[171 191]
[172 190]
[173 189]
[174 188]
[179 186]
[180 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
