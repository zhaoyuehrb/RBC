%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 01:04:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCAACAAGUGCUACCUUUGAGUGUAAACUAAGGUAGACUACUUUGGGAAUGAGAACAUGCAAAAUCAGGAAAGGCUGUAGAAGGAAAUAUACCUUAACAGGCUGAUUUGGAGUGAGCCAGAAAAAAAAAAUAAAACUCUCAUUAUUUGUGUGGCUAAUUAUAAUUCAGCGUUAUUUAAGCACAUAAAGACCAAAAAA\
) } def
/len { sequence length } bind def

/coor [
[63.36815262 200.32035828]
[60.26475906 206.01698303]
[56.02713013 210.90835571]
[50.85551834 214.77337646]
[44.99217987 217.43919373]
[38.71003723 218.78895569]
[32.29996872 218.76686096]
[26.05734825 217.38052368]
[20.26842690 214.70024109]
[9.66182423 225.30685425]
[-0.94477707 235.91345215]
[-4.80480766 244.20231628]
[-11.80226421 246.60171509]
[-22.57415962 257.04040527]
[-33.34605408 267.47909546]
[-44.11794662 277.91778564]
[-54.88984299 288.35647583]
[-65.66173553 298.79516602]
[-76.43363190 309.23385620]
[-78.61379242 315.49084473]
[-82.97519684 319.15188599]
[-87.71166229 319.82464600]
[-98.80612946 329.91983032]
[-109.90059662 340.01501465]
[-114.36829376 355.79385376]
[-130.33119202 359.55126953]
[-141.36801147 347.42193604]
[-136.12504578 331.88351440]
[-119.99578857 328.92056274]
[-108.90132141 318.82537842]
[-97.80685425 308.73016357]
[-86.87232208 298.46197510]
[-76.10042572 288.02328491]
[-65.32853699 277.58459473]
[-54.55664062 267.14590454]
[-43.78474426 256.70721436]
[-33.01285172 246.26850891]
[-22.24095726 235.82981873]
[-11.55137920 225.30685425]
[-0.94477707 214.70024109]
[9.66182423 204.09364319]
[6.59446669 180.30453491]
[22.19072533 161.75355530]
[46.65250015 160.66677856]
[55.46928024 148.53152466]
[64.28605652 136.39625549]
[73.10283661 124.26100922]
[81.91961670 112.12575531]
[79.04731750 94.09073639]
[90.91962433 80.21411896]
[89.74273682 65.26036072]
[88.56585693 50.30660248]
[87.38896942 35.35284042]
[86.21208191 20.39908028]
[85.03519440 5.44532108]
[83.85830688 -9.50843906]
[69.66358948 -10.62306213]
[55.80272293 -13.86910343]
[42.59380722 -19.17128372]
[30.33986664 -26.40714455]
[19.32189178 -35.40987778]
[9.79240131 -45.97216415]
[1.96964729 -57.85096359]
[-3.96737695 -70.77308655]
[-7.88303661 -84.44149780]
[-9.68815231 -98.54212189]
[-9.34203053 -112.75107574]
[-6.85338116 -126.74211884]
[-2.28010035 -140.19410706]
[4.27207613 -152.79840088]
[12.65201759 -164.26591492]
[22.66668510 -174.33378601]
[34.08557892 -182.77139282]
[46.64603806 -189.38555908]
[41.78727722 -203.57684326]
[29.99701500 -214.12673950]
[33.19457626 -228.67407227]
[28.33581543 -242.86534119]
[23.47705460 -257.05664062]
[18.61829185 -271.24789429]
[7.39545059 -277.61669922]
[3.64367747 -289.54360962]
[8.85516167 -300.46618652]
[4.21990633 -314.73202515]
[-0.41534844 -328.99789429]
[-5.05060339 -343.26373291]
[-19.61632538 -348.95352173]
[-27.07158661 -362.69955444]
[-23.89623833 -378.01135254]
[-11.58958530 -387.65914917]
[4.03754902 -387.08758545]
[15.60650826 -376.56649780]
[17.65478516 -361.06362915]
[9.21524429 -347.89898682]
[13.85049915 -333.63314819]
[18.48575401 -319.36727905]
[23.12100983 -305.10144043]
[36.77594376 -294.08435059]
[32.80957413 -276.10665894]
[37.66833496 -261.91537476]
[42.52709579 -247.72410583]
[47.38585663 -233.53282166]
[58.82858658 -223.99798584]
[55.97855759 -208.43559265]
[60.83731842 -194.24432373]
[81.09394836 -197.10504150]
[101.48852539 -195.49995422]
[121.04824829 -189.50561523]
[128.06719971 -202.76210022]
[135.08613586 -216.01858521]
[142.10508728 -229.27507019]
[149.12403870 -242.53155518]
[144.23797607 -257.56158447]
[151.48518372 -271.60629272]
[166.56604004 -276.33316040]
[180.53332520 -268.93786621]
[185.10049438 -253.80789185]
[177.55795288 -239.91957092]
[162.38052368 -235.51260376]
[155.36157227 -222.25611877]
[148.34262085 -208.99963379]
[141.32368469 -195.74314880]
[134.30473328 -182.48666382]
[145.62962341 -174.03224182]
[155.55581665 -163.96839905]
[163.85681152 -152.52357483]
[170.34298706 -139.95776367]
[174.86598206 -126.55654907]
[177.32205200 -112.62464905]
[177.65444946 -98.47898865]
[175.85476685 -84.44149780]
[171.96311951 -70.83174896]
[166.06726074 -57.95972824]
[158.30058289 -46.11873627]
[148.83917236 -35.57872772]
[137.89768982 -26.58015060]
[125.72463989 -19.32845497]
[112.59661102 -13.98941422]
[98.81206512 -10.68532562]
[99.98895264 4.26843452]
[101.16584015 19.22219467]
[102.34272766 34.17595291]
[103.51961517 49.12971497]
[104.69650269 64.08347321]
[105.87338257 79.03723145]
[118.65076447 88.77132416]
[121.27450562 104.61840820]
[133.93942261 112.65580750]
[146.60433960 120.69320679]
[159.26925659 128.73060608]
[171.93417358 136.76802063]
[184.59910583 144.80541992]
[197.26402283 152.84281921]
[209.92893982 160.88021851]
[218.86021423 162.83912659]
[222.72828674 169.14465332]
[235.26539612 177.37998962]
[247.76599121 171.56059265]
[261.40133667 172.67138672]
[272.61624146 180.31536865]
[278.53982544 192.40625000]
[277.71987915 205.73674011]
[290.12606812 214.16798401]
[302.53228760 222.59924316]
[314.93850708 231.03048706]
[327.34469604 239.46174622]
[343.30960083 237.88008118]
[354.39645386 249.47581482]
[352.10037231 265.35372925]
[338.18270874 273.33358765]
[323.31991577 267.29397583]
[318.91345215 251.86795044]
[306.50723267 243.43670654]
[294.10104370 235.00544739]
[281.69482422 226.57420349]
[269.28863525 218.14294434]
[254.03388977 224.19573975]
[238.01600647 219.92353821]
[227.59490967 206.81777954]
[227.03004456 189.91709900]
[214.49293518 181.68176270]
[201.89154053 173.54513550]
[189.22660828 165.50773621]
[176.56169128 157.47033691]
[163.89677429 149.43293762]
[151.23185730 141.39553833]
[138.56694031 133.35812378]
[125.90202332 125.32072449]
[113.23709869 117.28332520]
[107.33238220 120.49805450]
[100.72836304 121.75784302]
[94.05487061 120.94253540]
[85.23809052 133.07778931]
[76.42131042 145.21304321]
[67.60453033 157.34829712]
[58.78775406 169.48355103]
[62.36630249 174.98643494]
[64.68247986 181.11187744]
[65.63569641 187.57528687]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 41]
[10 40]
[11 39]
[13 38]
[14 37]
[15 36]
[16 35]
[17 34]
[18 33]
[19 32]
[22 31]
[23 30]
[24 29]
[44 196]
[45 195]
[46 194]
[47 193]
[48 192]
[50 145]
[51 144]
[52 143]
[53 142]
[54 141]
[55 140]
[56 139]
[74 105]
[75 104]
[77 102]
[78 101]
[79 100]
[80 99]
[83 97]
[84 96]
[85 95]
[86 94]
[108 123]
[109 122]
[110 121]
[111 120]
[112 119]
[147 189]
[148 188]
[149 187]
[150 186]
[151 185]
[152 184]
[153 183]
[154 182]
[156 181]
[157 180]
[162 176]
[163 175]
[164 174]
[165 173]
[166 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
