%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 22:48:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUGAAGAAUACAGUCAGCUUUGUGAAAUAGUAUUGCAAGCAAGCCCCGUGGGCAAAUUUGUAUUGAGUCCAUCUGUAAUUUGCUCAGUGAUGGCAGACAAGAUGGCUGUCUGGUUUUGAGACACACUUUAAUUUUAUGUUAACUUGUUAAAUCUUUUUAAAAAUUAAAAAAUUUUUAUGAUUGAGA\
) } def
/len { sequence length } bind def

/coor [
[114.12570190 278.42977905]
[104.68190002 290.28686523]
[91.75064850 298.19625854]
[76.89346313 301.20288086]
[61.90441132 298.94366455]
[48.59349823 291.69137573]
[38.56808472 280.32180786]
[33.03878021 266.20791626]
[32.67328644 251.05395508]
[37.51572800 236.68988037]
[46.98136139 224.85021973]
[59.92716599 216.96467590]
[74.78987122 213.98544312]
[77.02550507 199.15298462]
[79.26113892 184.32051086]
[81.49677277 169.48805237]
[83.73240662 154.65559387]
[85.96804047 139.82313538]
[73.43572235 131.58049011]
[60.70180893 139.50813293]
[47.96789169 147.43576050]
[35.23397446 155.36338806]
[29.58918190 162.56954956]
[22.22186279 163.31492615]
[9.35793591 171.02981567]
[-3.50598955 178.74468994]
[-16.36991501 186.45957947]
[-18.65016365 201.93002319]
[-30.37541008 212.27664185]
[-46.00935364 212.61408997]
[-58.17012024 202.78303528]
[-61.11577225 187.42538452]
[-53.45545959 173.79257202]
[-38.80614853 168.32157898]
[-24.08479881 173.59565735]
[-11.22087193 165.88076782]
[1.64305377 158.16589355]
[14.50697994 150.45100403]
[27.30634308 142.62947083]
[40.04026031 134.70184326]
[52.77417755 126.77420807]
[65.50809479 118.84658051]
[64.93179321 111.90022278]
[65.65289307 105.33950806]
[67.51870728 99.39234924]
[52.58134842 98.02293396]
[37.64399338 96.65351105]
[22.70663261 95.28408813]
[6.38164711 99.85915375]
[-2.53382421 85.43865204]
[8.85506535 72.87961578]
[24.07605362 80.34673309]
[39.01341248 81.71615601]
[53.95077133 83.08557129]
[68.88813019 84.45499420]
[73.89733887 78.87306976]
[61.44510651 70.50994110]
[48.99287796 62.14681244]
[34.09076691 60.43592453]
[24.11899948 49.23039627]
[24.15016365 34.23043060]
[34.16840744 23.06643486]
[49.07749939 21.41748428]
[61.29325104 30.12239265]
[64.60147095 44.75365448]
[74.25861359 56.23144150]
[83.91575623 67.70923615]
[88.92496490 62.12731171]
[85.95276642 47.42472458]
[81.17657471 39.61574173]
[83.05550385 32.45315552]
[80.32810211 17.70319748]
[77.60069275 2.95323873]
[74.87329102 -11.79671955]
[72.14588928 -26.54667854]
[69.41848755 -41.29663467]
[58.47967911 -46.01005554]
[51.25535965 -55.32879639]
[49.45385361 -66.86002350]
[53.40945435 -77.71273041]
[62.02764130 -85.22255707]
[59.79200745 -100.05502319]
[57.55637360 -114.88748169]
[55.32073593 -129.71994019]
[53.08510208 -144.55241394]
[48.70409012 -152.58975220]
[50.93770981 -159.64978027]
[48.94892120 -174.51734924]
[38.51560593 -187.16955566]
[44.50874710 -202.43435669]
[60.76311493 -204.60864258]
[70.55760956 -191.45570374]
[63.81649399 -176.50614929]
[65.80528259 -161.63856506]
[67.91756439 -146.78804016]
[70.15319824 -131.95558167]
[72.38883209 -117.12311554]
[74.62446594 -102.29065704]
[76.86009979 -87.45819092]
[92.21233368 -77.51213074]
[95.49435425 -59.19241333]
[84.16844177 -44.02404022]
[86.89584351 -29.27408218]
[89.62325287 -14.52412319]
[92.35065460 0.22583498]
[95.07805634 14.97579288]
[97.80545807 29.72575188]
[100.65535736 44.45253372]
[103.62754822 59.15512085]
[118.06690979 63.21772766]
[128.26950073 52.22195053]
[138.47209167 41.22616959]
[148.67468262 30.23039246]
[146.55085754 14.73770618]
[154.92611694 1.53206158]
[169.84591675 -3.15123868]
[184.26560974 2.89911628]
[191.37663269 16.82633400]
[187.82138062 32.05440903]
[175.27854919 41.39310837]
[159.67047119 40.43298340]
[149.46788025 51.42876053]
[139.26528931 62.42454147]
[129.06269836 73.42031860]
[136.12677002 86.65280914]
[150.94013977 84.29397583]
[165.75350952 81.93515015]
[175.03489685 69.42540741]
[190.09135437 67.24423981]
[201.96028137 76.16970825]
[216.77365112 73.81088257]
[231.58702087 71.45204926]
[246.40039062 69.09322357]
[261.21377563 66.73439026]
[271.75891113 54.64391327]
[287.77941895 55.49406433]
[296.98574829 68.63267517]
[292.31555176 83.98093414]
[277.35147095 89.76496887]
[263.57260132 81.54776001]
[248.75923157 83.90659332]
[233.94586182 86.26541901]
[219.13249207 88.62425232]
[204.31912231 90.98307800]
[195.80943298 103.15357208]
[180.82017517 105.75678253]
[168.11233521 96.74851990]
[153.29896545 99.10734558]
[138.48559570 101.46617889]
[135.68760681 108.42472076]
[149.81845093 113.45655823]
[163.94929504 118.48839569]
[178.90144348 117.29136658]
[187.78913879 129.37478638]
[182.19281006 143.29173279]
[167.41403198 145.85832214]
[157.45326233 134.64390564]
[143.77244568 128.49285889]
[130.09164429 122.34179688]
[127.29365540 129.30033875]
[136.35072327 141.25732422]
[145.40779114 153.21430969]
[154.46484375 165.17129517]
[163.52191162 177.12828064]
[172.57897949 189.08528137]
[181.63604736 201.04226685]
[190.69311523 212.99925232]
[206.00648499 218.86718750]
[208.31382751 235.10319519]
[195.24153137 245.00508118]
[180.23725891 238.38661194]
[178.73612976 222.05632019]
[169.67906189 210.09933472]
[160.62199402 198.14233398]
[151.56492615 186.18534851]
[142.50785828 174.22836304]
[133.45079041 162.27137756]
[124.39373016 150.31439209]
[115.33666229 138.35740662]
[100.80050659 142.05876160]
[98.56487274 156.89122009]
[96.32923889 171.72369385]
[94.09360504 186.55615234]
[91.85797119 201.38861084]
[89.62233734 216.22106934]
[102.94658661 223.44880676]
[112.99294281 234.79986572]
[118.54824066 248.90356445]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 185]
[14 184]
[15 183]
[16 182]
[17 181]
[18 180]
[19 42]
[20 41]
[21 40]
[22 39]
[24 38]
[25 37]
[26 36]
[27 35]
[45 55]
[46 54]
[47 53]
[48 52]
[68 109]
[69 108]
[71 107]
[72 106]
[73 105]
[74 104]
[75 103]
[76 102]
[81 99]
[82 98]
[83 97]
[84 96]
[85 95]
[87 94]
[88 93]
[110 124]
[111 123]
[112 122]
[113 121]
[125 149]
[126 148]
[127 147]
[130 144]
[131 143]
[132 142]
[133 141]
[134 140]
[160 179]
[161 178]
[162 177]
[163 176]
[164 175]
[165 174]
[166 173]
[167 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
