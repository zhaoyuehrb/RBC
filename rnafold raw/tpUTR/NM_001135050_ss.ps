%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 02:02:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCCCUGAUGUGAGGCUGUGAAAAGGCAUAUGGACCUGCAAAGGAGGCCCCCAACCAGACAGACCUAGUUUCAAACGAGGGCACUGCCCCUGCCUGCCCCUUUGGUGCCCAGGCACAGACCCUGAUAGUGGGUUUGGGUCACCUUGGUAUGGAAUGUAUGUGCUGACCCCCUAGGUGAGUCUGGGGAUUGGAACAGGGAUCUUAGGUCUGCCUCUCUCUCUCUCUCUCUCUCUCUCUCUCUCUCUGUGUGUGU\
GUGUGUGUGUGUGAAGUUUUUUACAGGUGAAUAAACAAAGUUUGAAAGAUG\
) } def
/len { sequence length } bind def

/coor [
[534.51245117 678.00402832]
[532.37084961 692.85034180]
[530.22924805 707.69665527]
[528.08758545 722.54296875]
[525.94598389 737.38934326]
[529.66894531 753.92944336]
[514.80578613 762.08569336]
[502.85382080 750.06127930]
[511.09963989 735.24768066]
[513.24127197 720.40136719]
[515.38287354 705.55505371]
[517.52453613 690.70874023]
[519.66613770 675.86236572]
[515.64813232 661.41058350]
[506.15078735 649.80017090]
[496.65344238 638.18981934]
[487.15609741 626.57946777]
[472.35614014 625.35601807]
[462.55908203 613.71673584]
[463.94271851 598.20147705]
[449.89550781 593.24920654]
[447.14669800 577.66864014]
[437.64935303 566.05828857]
[425.67877197 564.55456543]
[417.66897583 555.00402832]
[418.31182861 542.15521240]
[408.93380737 530.44824219]
[399.55575562 518.74133301]
[390.17770386 507.03439331]
[380.79968262 495.32745361]
[378.08334351 494.86630249]
[375.38088989 493.32879639]
[373.09341431 490.71325684]
[371.61584473 487.15975952]
[371.28921509 482.94412231]
[362.39810181 470.86322021]
[353.50698853 458.78234863]
[344.61584473 446.70144653]
[335.72473145 434.62054443]
[326.83361816 422.53967285]
[324.13842773 421.96774292]
[321.50115967 420.32095337]
[319.32260132 417.61398315]
[317.99169922 414.00299072]
[317.83786011 409.77752686]
[309.44857788 397.34292603]
[301.05926514 384.90832520]
[289.27770996 382.31008911]
[282.18020630 372.06335449]
[284.00204468 359.32809448]
[275.74041748 346.80828857]
[267.47879028 334.28848267]
[258.96267700 321.94036865]
[250.19564819 309.76913452]
[241.42861938 297.59790039]
[232.66159058 285.42666626]
[223.70877075 273.39141846]
[214.57228088 261.49499512]
[205.43577576 249.59860229]
[196.29928589 237.70219421]
[187.16279602 225.80578613]
[178.02629089 213.90937805]
[163.27087402 212.23220825]
[153.83569336 200.29771423]
[155.69491577 184.83222961]
[146.55842590 172.93583679]
[137.42192078 161.03942871]
[128.28543091 149.14302063]
[119.14893341 137.24661255]
[110.01244354 125.35021210]
[97.47833252 134.13011169]
[79.40267944 135.67073059]
[60.17857361 127.08169556]
[45.47214890 108.09179688]
[31.02031517 104.07376862]
[16.56848335 100.05574036]
[2.11665010 96.03771973]
[-6.93738699 96.75524139]
[-12.46211052 91.90393066]
[-21.52301598 92.52877045]
[-26.99780655 87.62117004]
[-41.36438370 83.30823517]
[-55.73096085 78.99529266]
[-70.09754181 74.68235016]
[-84.46411896 70.36941528]
[-96.13774109 75.77606201]
[-107.99251556 71.92452240]
[-113.86856842 61.38755417]
[-128.19026184 56.92782593]
[-144.06027222 61.05999374]
[-155.37959290 49.19386673]
[-150.50387573 33.53629684]
[-134.44883728 30.19445419]
[-123.73052979 42.60613632]
[-109.40884399 47.06586456]
[-92.49501801 42.30708313]
[-80.15117645 56.00283432]
[-65.78459930 60.31577301]
[-51.41802216 64.62871552]
[-37.05144501 68.94165802]
[-22.68486786 73.25459290]
[-8.29641056 77.49397278]
[6.13467503 81.58588409]
[20.58650780 85.60391235]
[35.03834152 89.62193298]
[49.49017334 93.63996124]
[56.70033264 80.48649597]
[45.53947449 70.46475983]
[34.37862015 60.44301605]
[23.21776199 50.42127609]
[7.06929874 47.56484985]
[1.72387886 32.06134796]
[12.68041229 19.85944748]
[28.66775703 23.51141357]
[33.23950195 39.26041794]
[44.40036011 49.28215790]
[55.56121445 59.30390167]
[66.72206879 69.32563782]
[78.38087463 59.88782120]
[70.90303802 46.88467026]
[63.42520523 33.88151550]
[55.94737244 20.87836075]
[48.46953583 7.87520790]
[40.99170303 -5.12794590]
[25.56565285 -7.69133282]
[15.43565178 -19.60422897]
[15.38477898 -35.24172974]
[25.43705368 -47.22028351]
[40.84609985 -49.88398743]
[54.33623505 -41.97511673]
[59.53783417 -27.22800255]
[53.99485779 -12.60577965]
[61.47269058 0.39737433]
[68.95052338 13.40052795]
[76.42835999 26.40368080]
[83.90618896 39.40683365]
[91.38402557 52.40998840]
[105.91506195 48.68856049]
[106.22203827 33.69170380]
[106.52900696 18.69484520]
[106.83598328 3.69798613]
[107.14295959 -11.29887199]
[107.44993591 -26.29573059]
[95.14437103 -32.88830948]
[86.91014099 -44.07965851]
[84.30277252 -57.65975189]
[87.77350616 -70.97698212]
[96.59239197 -81.45590973]
[109.00096893 -87.09528351]
[109.46138763 -102.08821869]
[109.92181396 -117.08115387]
[110.38223267 -132.07408142]
[100.48332214 -144.69909668]
[104.32214355 -160.27610779]
[118.95388794 -166.85574341]
[133.15432739 -159.39068604]
[136.03010559 -143.60748291]
[125.37516785 -131.61366272]
[124.91474152 -116.62072754]
[124.45432281 -101.62779999]
[123.99390411 -86.63486481]
[137.95298767 -78.44889832]
[145.91212463 -64.25128937]
[145.60879517 -47.88366699]
[137.03103638 -33.83011627]
[122.44679260 -25.98875618]
[122.13981628 -10.99189758]
[121.83283997 4.00496101]
[121.52587128 19.00181961]
[121.21889496 33.99867630]
[120.91191864 48.99553680]
[139.67279053 88.92208862]
[121.90884399 116.21371460]
[131.04533386 128.11012268]
[140.18183899 140.00653076]
[149.31832886 151.90292358]
[158.45481873 163.79933167]
[167.59132385 175.69573975]
[183.01290894 177.88948059]
[192.10914612 190.08428955]
[189.92269897 204.77288818]
[199.05920410 216.66929626]
[208.19569397 228.56570435]
[217.33218384 240.46209717]
[226.46867371 252.35850525]
[235.60517883 264.25491333]
[240.33425903 266.21499634]
[243.54658508 269.45141602]
[245.01091003 273.18594360]
[244.83282471 276.65960693]
[253.59986877 288.83087158]
[262.36688232 301.00210571]
[271.13394165 313.17333984]
[275.04559326 314.77865601]
[277.97369385 317.27603149]
[279.76046753 320.25616455]
[280.39385986 323.30014038]
[279.99859619 326.02685547]
[288.26022339 338.54666138]
[296.52185059 351.06646729]
[313.18847656 358.95114136]
[313.49386597 376.51901245]
[321.88317871 388.95361328]
[330.27249146 401.38821411]
[338.91452026 413.64852905]
[347.80563354 425.72943115]
[356.69674683 437.81033325]
[365.58786011 449.89123535]
[374.47900391 461.97210693]
[383.37011719 474.05300903]
[392.50662231 485.94940186]
[401.88464355 497.65634155]
[411.26269531 509.36328125]
[420.64074707 521.07019043]
[430.01876831 532.77716064]
[447.33990479 539.09558105]
[449.25970459 556.56091309]
[458.75704956 568.17126465]
[473.48355103 573.95404053]
[475.55307007 588.70416260]
[491.03472900 590.42352295]
[500.50097656 602.33331299]
[498.76644897 617.08215332]
[508.26379395 628.69250488]
[517.76110840 640.30285645]
[527.25848389 651.91320801]
[518.12457275 640.01483154]
[513.50781250 625.74298096]
[513.94256592 610.74926758]
[519.37841797 596.76885986]
[529.18634033 585.41967773]
[542.23126221 578.01501465]
[557.00366211 575.41186523]
[571.79394531 577.91143799]
[584.89050293 585.22442627]
[594.77770996 596.50463867]
[600.31140137 610.44659424]
[600.85119629 625.43688965]
[596.33459473 639.74072266]
[587.28430176 651.70288086]
[574.74597168 659.93963623]
[584.47894287 671.35321045]
[594.21191406 682.76678467]
[609.05364990 688.24694824]
[611.42462158 702.95159912]
[621.15759277 714.36517334]
[635.61352539 709.74987793]
[650.69451904 711.01733398]
[664.10504150 717.94342041]
[673.81591797 729.44500732]
[678.37103271 743.74938965]
[677.10607910 758.66735840]
[670.24468994 771.92822266]
[679.97766113 783.34179688]
[689.71063232 794.75531006]
[704.55236816 800.23547363]
[706.92333984 814.94018555]
[716.65631104 826.35375977]
[726.38922119 837.76733398]
[741.75708008 836.70153809]
[754.65496826 844.79461670]
[760.24804688 858.76538086]
[756.58593750 873.17810059]
[771.42773438 878.65826416]
[773.79864502 893.36297607]
[783.53161621 904.77648926]
[793.26458740 916.19006348]
[802.99755859 927.60363770]
[812.73052979 939.01721191]
[822.46350098 950.43078613]
[838.09039307 955.40386963]
[841.33221436 971.47943115]
[828.85400391 982.12023926]
[813.49230957 976.37994385]
[811.04992676 960.16369629]
[801.31695557 948.75018311]
[791.58398438 937.33660889]
[781.85101318 925.92303467]
[772.11804199 914.50946045]
[762.38507080 903.09588623]
[748.23950195 898.43212891]
[745.17236328 882.91107178]
[730.36212158 884.25067139]
[717.45019531 876.52111816]
[711.49597168 862.50683594]
[714.97570801 847.50024414]
[705.24273682 836.08673096]
[695.50976562 824.67315674]
[681.36413574 820.00939941]
[678.29705811 804.48828125]
[668.56408691 793.07476807]
[658.83111572 781.66119385]
[644.65295410 786.34185791]
[629.72247314 785.23468018]
[616.31713867 778.47735596]
[606.49371338 767.07171631]
[601.77276611 752.73553467]
[602.90325928 737.64361572]
[609.74401855 724.09814453]
[600.01104736 712.68457031]
[585.86541748 708.02081299]
[582.79833984 692.49975586]
[573.06536865 681.08618164]
[563.33239746 669.67260742]
[556.12744141 671.75549316]
[552.53009033 686.31768799]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 13]
[2 12]
[3 11]
[4 10]
[5 9]
[14 226]
[15 225]
[16 224]
[17 223]
[20 220]
[22 218]
[23 217]
[26 215]
[27 214]
[28 213]
[29 212]
[30 211]
[35 210]
[36 209]
[37 208]
[38 207]
[39 206]
[40 205]
[45 204]
[46 203]
[47 202]
[50 200]
[51 199]
[52 198]
[53 193]
[54 192]
[55 191]
[56 190]
[57 186]
[58 185]
[59 184]
[60 183]
[61 182]
[62 181]
[65 178]
[66 177]
[67 176]
[68 175]
[69 174]
[70 173]
[74 106]
[75 105]
[76 104]
[77 103]
[79 102]
[81 101]
[82 100]
[83 99]
[84 98]
[85 97]
[88 95]
[89 94]
[107 118]
[108 117]
[109 116]
[110 115]
[119 137]
[120 136]
[121 135]
[122 134]
[123 133]
[124 132]
[138 171]
[139 170]
[140 169]
[141 168]
[142 167]
[143 166]
[149 161]
[150 160]
[151 159]
[152 158]
[241 304]
[242 303]
[243 302]
[245 300]
[246 299]
[253 292]
[254 291]
[255 290]
[257 288]
[258 287]
[259 286]
[263 282]
[265 280]
[266 279]
[267 278]
[268 277]
[269 276]
[270 275]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
