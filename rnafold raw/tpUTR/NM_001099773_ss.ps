%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 04:40:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAGAGAGGAUGGCCUGCAGCCACAUGGGAGGAAGGCCCAGGGGUGGGGCCCAUGGGGUCUCUGCAUCUUCAGUCGUCUGUCCCAAGUCCUGCUCCUUUCUGCCCAGCCUGCUCAGCAGGUUGAAUGGGUUCUCAGUGGUCACCUUCCUCAGCUCAGCUGGGCCACUCCUCUUCACCCACCCCAUGGAGACAAUAAACAGCUGAACCAUG\
) } def
/len { sequence length } bind def

/coor [
[315.06536865 577.36193848]
[306.04400635 559.78924561]
[307.20620728 539.99127197]
[318.30975342 523.46374512]
[311.03652954 510.34506226]
[303.76330566 497.22634888]
[296.49008179 484.10766602]
[289.21685791 470.98898315]
[281.94360352 457.87026978]
[274.67037964 444.75158691]
[267.29968262 431.68740845]
[259.83197021 418.67843628]
[252.36421204 405.66949463]
[244.89646912 392.66052246]
[237.42872620 379.65158081]
[233.13449097 377.56149292]
[230.10765076 372.75158691]
[229.93893433 366.14224243]
[222.86181641 352.91671753]
[215.78471375 339.69119263]
[208.70761108 326.46566772]
[194.80506897 328.37838745]
[181.05541992 325.42443848]
[169.11457825 317.93872070]
[160.42771912 306.80316162]
[156.05439758 293.34283447]
[156.53930664 279.16827393]
[161.84460449 265.98287964]
[171.35191345 255.37805176]
[164.47250366 242.04862976]
[157.59309387 228.71919250]
[150.71366882 215.38977051]
[143.83425903 202.06033325]
[136.95484924 188.73091125]
[130.07543945 175.40147400]
[123.19602203 162.07205200]
[106.20413208 152.84368896]
[107.46361542 132.72463989]
[100.19038391 119.60594177]
[62.38725281 110.23632812]
[49.00698090 103.45633698]
[35.62670517 96.67634583]
[22.24643326 89.89635468]
[8.86615944 83.11636353]
[-4.51411390 76.33637238]
[-17.89438820 69.55638123]
[-31.27466011 62.77639008]
[-44.65493393 55.99639893]
[-58.03520584 49.21640778]
[-71.41548157 42.43641663]
[-81.53969574 46.41246033]
[-91.96612549 44.20568848]
[-99.30237579 36.78087997]
[-101.29781342 26.75934410]
[-114.47029114 19.58397865]
[-127.64276886 12.40861225]
[-140.81524658 5.23324585]
[-153.98771667 -1.94212043]
[-146.80592346 11.22685337]
[-145.96272278 26.20313454]
[-151.62091064 40.09503937]
[-162.68797302 50.22025299]
[-177.02705383 54.62376022]
[-191.86947632 52.45531464]
[-204.34942627 44.13360214]
[-212.05722046 31.26542091]
[-213.50457764 16.33541298]
[-208.41206360 2.22632980]
[-197.76293945 -8.33758736]
[-183.61340332 -13.31661034]
[-168.69430542 -11.74895859]
[-180.38188171 -21.15110970]
[-192.06945801 -30.55326080]
[-208.34899902 -32.53032684]
[-214.52676392 -47.72134781]
[-204.24761963 -60.49910736]
[-188.08584595 -57.71893692]
[-182.66731262 -42.24084091]
[-170.97972107 -32.83869171]
[-159.29214478 -23.43654060]
[-146.81234741 -15.11459637]
[-133.63987732 -7.93922997]
[-120.46739960 -0.76386362]
[-107.29492950 6.41150284]
[-94.12245178 13.58686924]
[-74.87912750 11.69439220]
[-64.63549042 29.05614281]
[-51.25521469 35.83613586]
[-37.87494278 42.61612701]
[-24.49466896 49.39611816]
[-11.11439610 56.17610931]
[2.26587749 62.95610046]
[15.64615059 69.73609161]
[29.02642441 76.51608276]
[42.40669632 83.29607391]
[55.78697205 90.07606506]
[69.16724396 96.85605621]
[76.09098816 93.97303772]
[70.32518005 80.12545776]
[84.17285919 74.35988617]
[89.93847656 88.20700836]
[96.86221313 85.32398987]
[101.47622681 71.05125427]
[106.09023285 56.77852249]
[110.70424652 42.50579071]
[115.31825256 28.23305702]
[119.50526428 13.82927513]
[123.26156616 -0.69278389]
[127.01786804 -15.21484280]
[130.77416992 -29.73690224]
[134.53047180 -44.25896072]
[138.28677368 -58.78102112]
[136.39952087 -75.62960052]
[152.06719971 -82.10724640]
[162.62895203 -68.84504700]
[152.80882263 -55.02471924]
[149.05252075 -40.50266266]
[145.29621887 -25.98060226]
[141.53993225 -11.45854282]
[137.78363037 3.06351686]
[134.02732849 17.58557510]
[135.33212280 20.06663322]
[135.73275757 23.21402931]
[134.97050476 26.68597221]
[132.91505432 30.05340767]
[129.59098816 32.84706497]
[124.97697449 47.11980057]
[120.36296844 61.39253235]
[115.74895477 75.66526794]
[111.13494873 89.93800354]
[121.23998260 78.85250092]
[136.01637268 76.27213287]
[149.28044128 83.27674103]
[155.48138428 96.93500519]
[152.02421570 111.53117371]
[140.35569763 120.95697021]
[125.35892487 121.26786804]
[113.30907440 112.33271027]
[120.58230591 125.45140839]
[131.19392395 127.83933258]
[138.58732605 135.51513672]
[140.49539185 145.77708435]
[136.52545166 155.19264221]
[143.40486145 168.52206421]
[150.28427124 181.85150146]
[157.16369629 195.18092346]
[164.04310608 208.51034546]
[170.92251587 221.83978271]
[177.80192566 235.16920471]
[184.68133545 248.49864197]
[200.69419861 247.05059814]
[215.99996948 251.84680176]
[228.26383972 262.12460327]
[235.62686157 276.28756714]
[236.98785400 292.15335083]
[232.16786194 307.28994751]
[221.93313599 319.38858032]
[229.01023865 332.61410522]
[236.08735657 345.83963013]
[243.16445923 359.06515503]
[250.43768311 372.18383789]
[257.90542603 385.19281006]
[265.37316895 398.20175171]
[272.84091187 411.21069336]
[280.30865479 424.21966553]
[287.29504395 430.10421753]
[287.78909302 437.47836304]
[295.06231689 450.59704590]
[302.33554077 463.71572876]
[309.60876465 476.83444214]
[316.88198853 489.95312500]
[324.15524292 503.07180786]
[331.42846680 516.19049072]
[341.90682983 514.50732422]
[352.41964722 515.79718018]
[362.14166260 519.94696045]
[370.31295776 526.61962891]
[376.29827881 535.28143311]
[379.63662720 545.24456787]
[380.07650757 555.72186279]
[377.59500122 565.88891602]
[372.39862061 574.94897461]
[364.90606689 582.19537354]
[371.18344116 595.81872559]
[377.46078491 609.44201660]
[383.73815918 623.06530762]
[390.01550293 636.68865967]
[405.03680420 634.89520264]
[419.87667847 637.83337402]
[433.08132935 645.21533203]
[443.35705566 656.31774902]
[449.69717407 670.05303955]
[451.48052979 685.07556152]
[448.53240967 699.91345215]
[441.14166260 713.11315918]
[430.03231812 723.38140869]
[416.29278564 729.71234131]
[401.26913452 731.48565674]
[386.43316650 728.52758789]
[373.23843384 721.12799072]
[362.97760010 710.01177979]
[356.65588379 696.26800537]
[354.89266968 681.24316406]
[357.86065674 666.40917969]
[365.26910400 653.21942139]
[376.39221191 642.96600342]
[370.11483765 629.34271240]
[363.83749390 615.71936035]
[357.56011963 602.09606934]
[351.28274536 588.47277832]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 173]
[5 172]
[6 171]
[7 170]
[8 169]
[9 168]
[10 167]
[11 165]
[12 164]
[13 163]
[14 162]
[15 161]
[18 160]
[19 159]
[20 158]
[21 157]
[29 150]
[30 149]
[31 148]
[32 147]
[33 146]
[34 145]
[35 144]
[36 143]
[38 139]
[39 138]
[40 97]
[41 96]
[42 95]
[43 94]
[44 93]
[45 92]
[46 91]
[47 90]
[48 89]
[49 88]
[50 87]
[54 85]
[55 84]
[56 83]
[57 82]
[58 81]
[71 80]
[72 79]
[73 78]
[102 130]
[103 129]
[104 128]
[105 127]
[106 126]
[107 121]
[108 120]
[109 119]
[110 118]
[111 117]
[112 116]
[183 210]
[184 209]
[185 208]
[186 207]
[187 206]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
