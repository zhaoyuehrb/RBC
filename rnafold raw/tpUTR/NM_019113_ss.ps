%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 18:59:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCAGAGGCUGUUUACUAUGACAUCUCCUCUUUAUUUAUUAGGUUAUUUAUCUUAUUUAUUUUUUUAUUUUUCUUACUUGAGAUAAUAAAGAGUUCCAGAGGAGGAUAA\
) } def
/len { sequence length } bind def

/coor [
[98.43641663 137.17550659]
[93.43932343 151.31866455]
[88.44222260 165.46182251]
[83.44512939 179.60499573]
[83.86943817 196.55361938]
[67.70062256 201.65321350]
[58.32436371 187.52798462]
[69.30196381 174.60789490]
[74.29906464 160.46473694]
[79.29615784 146.32156372]
[84.29325867 132.17840576]
[72.49053955 122.92119598]
[59.94527817 131.14411926]
[47.40001678 139.36703491]
[44.42556000 154.88890076]
[31.29996681 163.69198608]
[15.81042194 160.55358887]
[7.14659548 147.33566284]
[10.44858360 131.88015747]
[23.75737381 123.35656738]
[39.17709732 126.82177734]
[51.72235870 118.59885406]
[64.26762390 110.37593842]
[68.44830322 85.13574982]
[87.09651184 70.12004089]
[109.36790466 71.27240753]
[117.41247559 58.61204147]
[125.45704651 45.95167542]
[133.50161743 33.29130936]
[141.54618835 20.63093948]
[149.59075928 7.97057295]
[157.63531494 -4.68979406]
[150.44714355 -12.46497250]
[145.03546143 -21.55142403]
[141.63124084 -31.55084419]
[140.37762451 -42.02619171]
[141.32385254 -52.52080917]
[144.42340088 -62.57830048]
[149.53622437 -71.76241302]
[156.43504333 -79.67592621]
[164.81552124 -85.97786713]
[159.02627563 -99.81566620]
[153.23703003 -113.65346527]
[147.44778442 -127.49126434]
[132.31632996 -130.92906189]
[122.12075806 -142.62649536]
[120.78148651 -158.08566284]
[128.81349182 -171.36221313]
[143.12829590 -177.35101318]
[158.22157288 -173.74928284]
[168.28965759 -161.94192505]
[169.46113586 -146.46913147]
[161.28558350 -133.28050232]
[167.07482910 -119.44271088]
[172.86407471 -105.60491180]
[178.65332031 -91.76711273]
[189.99726868 -93.27529144]
[201.38815308 -92.17642212]
[212.23460388 -88.52755737]
[221.97351074 -82.51813507]
[230.09930420 -74.46012878]
[236.19007874 -64.77188110]
[250.53259277 -69.16422272]
[264.87509155 -73.55656433]
[279.21759033 -77.94890594]
[293.56008911 -82.34124756]
[307.90258789 -86.73358917]
[322.24508667 -91.12593079]
[336.58758545 -95.51827240]
[350.93008423 -99.91061401]
[365.20901489 -104.50547791]
[379.42144775 -109.30193329]
[393.63391113 -114.09839630]
[407.84637451 -118.89485168]
[414.63601685 -133.16636658]
[429.55627441 -138.37805176]
[443.75521851 -131.43789673]
[448.80886841 -116.46337128]
[441.71896362 -102.33860779]
[426.69186401 -97.44356537]
[412.64285278 -104.68239594]
[398.43038940 -99.88593292]
[384.21792603 -95.08947754]
[370.00546265 -90.29301453]
[364.59521484 -85.09648895]
[355.32244873 -85.56811523]
[340.97991943 -81.17577362]
[326.63742065 -76.78343201]
[312.29492188 -72.39109039]
[297.95242310 -67.99874878]
[283.60992432 -63.60640717]
[269.26742554 -59.21406555]
[254.92492676 -54.82172394]
[240.58242798 -50.42938232]
[239.27877808 -29.15304375]
[229.25498962 -10.28717804]
[212.27812195 2.75900722]
[191.37567139 7.60963821]
[170.29568481 3.35477543]
[162.25111389 16.01514244]
[154.20654297 28.67551041]
[146.16198730 41.33587646]
[138.11741638 53.99624252]
[130.07284546 66.65660858]
[122.02827454 79.31697845]
[128.55545044 87.39129639]
[132.11692810 97.49948883]
[132.09321594 108.55145264]
[128.26493835 119.27542114]
[120.86286163 128.36428833]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 11]
[2 10]
[3 9]
[4 8]
[12 23]
[13 22]
[14 21]
[26 105]
[27 104]
[28 103]
[29 102]
[30 101]
[31 100]
[32 99]
[41 56]
[42 55]
[43 54]
[44 53]
[62 94]
[63 93]
[64 92]
[65 91]
[66 90]
[67 89]
[68 88]
[69 87]
[70 86]
[71 84]
[72 83]
[73 82]
[74 81]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
