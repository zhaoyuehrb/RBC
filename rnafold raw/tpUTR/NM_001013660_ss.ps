%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 10:32:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAAUUCUGAAGUCCAGCCUUUAGAGAACAACAUUCAAGAGGGUCAUAUAGACUAUAAAUUAAUGUCAUGCCCUAUAUGUAAUUCUGGGUCUUAAAGGAAAGAUUGUACUUCAGGAGAAGUAACUCUCAAAUAUUUCAUGCCAAGAUUUUAAGAAUGUUGGUAUUUAAGAAAAUAAAUAGUGAUUUGGAAAAUC\
) } def
/len { sequence length } bind def

/coor [
[-14.44720364 118.14507294]
[-2.98815536 108.46570587]
[10.03361416 101.02033234]
[24.18793297 96.05492401]
[39.00720978 93.73350525]
[54.00189590 94.13276672]
[68.67664337 97.23951721]
[82.54680634 102.95120239]
[68.73506165 97.10007477]
[54.92331696 91.24893951]
[41.11157227 85.39781189]
[27.29982758 79.54668427]
[13.48808289 73.69555664]
[-0.32366180 67.84442139]
[-16.04875565 69.58569336]
[-24.74968147 57.49672318]
[-38.56142426 51.64559555]
[-52.37316895 45.79446793]
[-66.40822601 40.50134277]
[-80.64406586 35.77471924]
[-94.87989807 31.04809380]
[-109.11573792 26.32147217]
[-123.35157013 21.59484863]
[-137.58740234 16.86822510]
[-151.82324219 12.14160156]
[-166.23699951 7.98906898]
[-180.80554199 4.41729355]
[-195.37408447 0.84551841]
[-209.94262695 -2.72625685]
[-223.34971619 5.20392561]
[-238.07341003 1.37410331]
[-245.55099487 -11.45637512]
[-260.11953735 -15.02815056]
[-274.68807983 -18.59992599]
[-289.25662231 -22.17170143]
[-296.72860718 -14.52597713]
[-306.62713623 -10.70697021]
[-317.13677979 -11.34310913]
[-326.35971069 -16.25222397]
[-332.65841675 -24.48662949]
[-334.94644165 -34.51533890]
[-349.32644653 -38.78325272]
[-363.70645142 -43.05116653]
[-378.08648682 -47.31908035]
[-387.21664429 -46.76126099]
[-392.66177368 -51.77235413]
[-406.97152710 -56.27020264]
[-421.28131104 -60.76804733]
[-426.40002441 -59.62533951]
[-430.98345947 -60.48255157]
[-434.35733032 -62.79824066]
[-436.16143799 -65.84134674]
[-450.23846436 -71.02182007]
[-464.31549072 -76.20230103]
[-475.62829590 -65.89312744]
[-490.43911743 -62.03335953]
[-505.34454346 -65.50993347]
[-516.91943359 -75.52396393]
[-522.50390625 -89.77429199]
[-520.81475830 -104.98630524]
[-512.24011230 -117.66439056]
[-498.75036621 -124.89521790]
[-483.44534302 -125.01719666]
[-469.84204102 -118.00228882]
[-461.06640625 -105.46247864]
[-459.13500977 -90.27932739]
[-445.05798340 -85.09884644]
[-430.98095703 -79.91837311]
[-416.78344727 -75.07781219]
[-402.47369385 -70.57996368]
[-388.16390991 -66.08212280]
[-373.81857300 -61.69910049]
[-359.43853760 -57.43118668]
[-345.05853271 -53.16327286]
[-330.67852783 -48.89535904]
[-314.29721069 -59.41960144]
[-295.15747070 -54.44577026]
[-285.68484497 -36.74024200]
[-271.11630249 -33.16846848]
[-256.54776001 -29.59669304]
[-241.97923279 -26.02491760]
[-229.41500854 -33.94173813]
[-214.58955383 -30.52698326]
[-206.37084961 -17.29479980]
[-191.80230713 -13.72302341]
[-177.23376465 -10.15124893]
[-162.66522217 -6.57947350]
[-168.02314758 -20.58992195]
[-160.55215454 -33.59700775]
[-145.75048828 -36.02821732]
[-134.51138306 -26.09431648]
[-135.10620117 -11.10611439]
[-147.09661865 -2.09423470]
[-132.86077881 2.63238859]
[-118.62494659 7.35901165]
[-104.38911438 12.08563519]
[-90.15327454 16.81225777]
[-75.91744232 21.53888130]
[-61.68160248 26.26550484]
[-65.90069580 11.87108707]
[-57.41237259 -0.49614444]
[-42.46358490 -1.73457706]
[-32.05582809 9.06720829]
[-33.84864426 23.95968246]
[-46.52204132 31.98272133]
[-32.71029663 37.83385086]
[-18.89855194 43.68497849]
[-4.16136646 41.52519989]
[5.52746725 54.03268051]
[19.33921242 59.88380814]
[33.15095520 65.73493958]
[46.96269989 71.58606720]
[60.77444458 77.43719482]
[74.58618927 83.28833008]
[88.39793396 89.13945770]
[103.12132263 86.27207947]
[113.72792053 75.66547394]
[124.33452606 65.05887604]
[134.94113159 54.45227051]
[134.69049072 38.64997101]
[145.74703979 27.35712242]
[161.55110168 27.27357483]
[172.72642517 38.44889450]
[172.64288330 54.25296402]
[161.35003662 65.30950928]
[145.54772949 65.05887604]
[134.94113159 75.66547394]
[124.33452606 86.27207947]
[113.72792053 96.87867737]
[115.80419159 104.08555603]
[128.22929382 95.68218994]
[140.06092834 104.90240479]
[134.94813538 119.00415802]
[119.95672607 118.49932098]
[122.03298950 125.70619965]
[136.65690613 129.04400635]
[151.28082275 132.38182068]
[165.90473938 135.71963501]
[180.62812805 138.58702087]
[195.43585205 140.98101807]
[210.24359131 143.37501526]
[225.05131531 145.76901245]
[239.85903931 148.16300964]
[254.66676331 150.55700684]
[269.47448730 152.95100403]
[284.33264160 147.51539612]
[295.66189575 157.18478394]
[310.46963501 159.57878113]
[325.27734375 161.97277832]
[340.08508301 164.36677551]
[356.68618774 160.92587280]
[364.58825684 175.92564392]
[352.36218262 187.67126465]
[337.69107056 179.17451477]
[322.88336182 176.78051758]
[308.07562256 174.38650513]
[293.26791382 171.99250793]
[279.46890259 177.59936523]
[267.08050537 167.75874329]
[252.27276611 165.36473083]
[237.46504211 162.97073364]
[222.65731812 160.57673645]
[207.84959412 158.18273926]
[193.04185486 155.78874207]
[178.23413086 153.39474487]
[175.87864685 154.93623352]
[172.76692200 155.63160706]
[169.22032166 155.18673706]
[165.66114807 153.42991638]
[162.56692505 150.34355164]
[147.94300842 147.00573730]
[133.31909180 143.66792297]
[118.69517517 140.33012390]
[123.93948364 154.38348389]
[126.55347443 169.15396118]
[126.45078278 184.15361023]
[123.63480377 198.88691711]
[118.19856262 212.86717224]
[110.32164764 225.63252258]
[100.26427460 236.76127625]
[88.35868073 245.88578796]
[74.99816895 252.70465088]
[60.62411118 256.99258423]
[45.71134567 258.60794067]
[30.75251389 257.49737549]
[16.24178314 253.69754028]
[2.65851402 247.33398438]
[-9.54857063 238.61692810]
[-19.97621155 227.83433533]
[-28.27993202 215.34240723]
[-34.18541718 201.55381775]
[-37.49758530 186.92407227]
[-38.10700989 171.93644714]
[-35.99356842 157.08609009]
[-31.22707176 142.86355591]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 115]
[9 114]
[10 113]
[11 112]
[12 111]
[13 110]
[14 109]
[16 107]
[17 106]
[18 105]
[19 99]
[20 98]
[21 97]
[22 96]
[23 95]
[24 94]
[25 93]
[26 87]
[27 86]
[28 85]
[29 84]
[32 81]
[33 80]
[34 79]
[35 78]
[41 75]
[42 74]
[43 73]
[44 72]
[46 71]
[47 70]
[48 69]
[52 68]
[53 67]
[54 66]
[116 129]
[117 128]
[118 127]
[119 126]
[135 173]
[136 172]
[137 171]
[138 170]
[139 165]
[140 164]
[141 163]
[142 162]
[143 161]
[144 160]
[145 159]
[147 157]
[148 156]
[149 155]
[150 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
