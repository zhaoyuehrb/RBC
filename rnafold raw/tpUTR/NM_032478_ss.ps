%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 03:23:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGCCAGAGUGUGCGCAUUUCAGAGCAUGGGAUUGAUCGGCAGCAAGAGUAAAGACACAGCUCCAGAGGCCCACACUGUGGGGUCUGGGCCCUGCCUUAGGCAGCCCCCCUCUUUGGCCCCCUCCCGUCAGGCCCAGGGCUUGGAGUGAAAGUGACUCUCAGGUGGUGGGGUGGGGAAUGUGAAUAAACAUGAUUUCUUGCCGGGC\
) } def
/len { sequence length } bind def

/coor [
[10.03213501 93.60050201]
[-4.53199196 97.19023895]
[-19.09611893 100.77997589]
[-32.07538223 113.84061432]
[-48.72808456 108.30713654]
[-63.23633575 112.11642456]
[-77.74458313 115.92571259]
[-89.12743378 126.91395569]
[-103.40236664 122.66242981]
[-117.91062164 126.47172546]
[-132.41886902 130.28102112]
[-146.92712402 134.09030151]
[-161.43536377 137.89959717]
[-175.94361877 141.70889282]
[-187.32646179 152.69712830]
[-201.60139465 148.44560242]
[-216.10964966 152.25489807]
[-223.61735535 157.46220398]
[-230.86581421 156.01039124]
[-245.42993164 159.60012817]
[-259.99407959 163.18986511]
[-268.19644165 176.43217468]
[-283.01766968 179.86520386]
[-295.59164429 171.96388245]
[-310.15576172 175.55361938]
[-324.71990967 179.14334106]
[-339.28402710 182.73307800]
[-346.86950684 187.82641602]
[-354.09521484 186.26528931]
[-368.71191406 189.63464355]
[-383.30273438 193.11428833]
[-391.50509644 206.35659790]
[-406.32635498 209.78962708]
[-418.90029907 201.88830566]
[-433.46444702 205.47804260]
[-442.23764038 220.61114502]
[-458.91262817 224.63890076]
[-473.05780029 215.54399109]
[-487.56604004 219.35328674]
[-493.07403564 233.85989380]
[-506.07528687 242.33027649]
[-521.57049561 241.50740051]
[-533.60150146 231.70768738]
[-537.54211426 216.69931030]
[-531.87707520 202.25331116]
[-518.78472900 193.92445374]
[-503.29931641 194.91537476]
[-491.37533569 204.84503174]
[-476.86709595 201.03575134]
[-471.98818970 189.10842896]
[-460.96548462 182.06442261]
[-447.70324707 182.66468811]
[-437.05416870 190.91390991]
[-422.49005127 187.32417297]
[-415.02828979 174.48449707]
[-400.30932617 170.63652039]
[-386.89245605 178.55017090]
[-381.14895630 173.89611816]
[-372.08126831 175.01795959]
[-357.46456909 171.64860535]
[-342.87374878 168.16896057]
[-328.30963135 164.57922363]
[-313.74551392 160.98948669]
[-299.18136597 157.39974976]
[-291.71960449 144.56005859]
[-277.00064087 140.71208191]
[-263.58380127 148.62573242]
[-249.01966858 145.03599548]
[-234.45555115 141.44625854]
[-219.91894531 137.74664307]
[-205.41069031 133.93734741]
[-195.06556702 123.22158051]
[-179.75291443 127.20063782]
[-165.24465942 123.39134979]
[-150.73640442 119.58205414]
[-136.22816467 115.77276611]
[-121.71990967 111.96347046]
[-107.21166229 108.15418243]
[-96.86653900 97.43841553]
[-81.55387878 101.41746521]
[-67.04562378 97.60817719]
[-52.53737640 93.79888153]
[-46.16659927 83.51416779]
[-34.10889435 80.22280884]
[-22.68585396 86.21584320]
[-8.12172699 82.62611389]
[6.44240046 79.03637695]
[14.77595329 66.56433105]
[12.51898575 51.73509979]
[10.26201820 36.90586853]
[-2.18364453 27.53873444]
[-4.26128244 12.46763420]
[4.74554777 0.66032302]
[2.48857999 -14.16890812]
[0.23161256 -28.99813843]
[-2.02535510 -43.82736969]
[-4.28232241 -58.65660095]
[-12.64305401 -73.40565491]
[-0.78488284 -85.52259064]
[14.14118576 -77.48213959]
[10.54690838 -60.91357040]
[12.80387592 -46.08433914]
[15.06084347 -31.25510597]
[17.31781197 -16.42587662]
[19.57477951 -1.59664452]
[31.68649864 6.99648237]
[34.18663406 22.00328064]
[25.09124947 34.64890289]
[27.34821701 49.47813416]
[29.60518456 64.30736542]
[30.70218277 49.34753036]
[40.72698593 38.18942642]
[55.48437881 35.50253677]
[68.79862976 42.41127777]
[75.09793854 56.02445602]
[71.74615479 70.64517975]
[60.14593506 80.15490723]
[45.15058517 80.57360077]
[59.86236572 83.49996185]
[74.57414246 86.42631531]
[89.28591919 89.35266876]
[103.46542358 84.45962524]
[113.24155426 73.08301544]
[123.01768494 61.70640564]
[121.57552338 45.96805573]
[131.74853516 33.87320709]
[147.50125122 32.59752274]
[159.48786926 42.89784622]
[160.59693909 58.66316986]
[150.17047119 70.54021454]
[134.39428711 71.48253632]
[124.61816406 82.85914612]
[114.84203339 94.23575592]
[121.81319427 107.51818848]
[128.78372192 120.79943848]
[143.69996643 119.21649170]
[158.61621094 117.63354492]
[168.53747559 105.62494659]
[183.68721008 104.23210144]
[195.07443237 113.76451111]
[209.99067688 112.18156433]
[224.90690613 110.59861755]
[239.82315063 109.01567078]
[254.73939514 107.43272400]
[269.64324951 105.73717499]
[284.53390503 103.92912292]
[299.42453003 102.12107086]
[314.31515503 100.31302643]
[322.69741821 87.11182404]
[337.61972046 82.43643188]
[352.03616333 88.49442291]
[359.13983154 102.42540741]
[355.57650757 117.65159607]
[343.02871704 126.98365021]
[327.42114258 126.01525116]
[316.12319946 115.20365906]
[301.23257446 117.01171112]
[286.34194946 118.81975555]
[271.45132446 120.62780762]
[265.18869019 124.55561829]
[256.32235718 122.34896088]
[241.40609741 123.93190765]
[226.48985291 125.51486206]
[211.57362366 127.09780884]
[196.65737915 128.68075562]
[187.52445984 140.39080811]
[172.41981506 142.20863342]
[160.19915771 132.54978943]
[145.28291321 134.13273621]
[130.36666870 135.71568298]
[124.31395721 149.44027710]
[133.20388794 161.52204895]
[142.09382629 173.60380554]
[150.98374939 185.68557739]
[159.87368774 197.76734924]
[168.76361084 209.84912109]
[177.65354919 221.93087769]
[186.54348755 234.01264954]
[195.43341064 246.09442139]
[204.32334900 258.17617798]
[213.30427551 270.19046021]
[222.37565613 282.13659668]
[231.44705200 294.08270264]
[247.13754272 295.97586060]
[256.82788086 308.46075439]
[254.76895142 324.13037109]
[242.18228149 333.68817139]
[226.53532410 331.46368408]
[217.11114502 318.77667236]
[219.50093079 303.15411377]
[210.42953491 291.20797729]
[201.35813904 279.26187134]
[194.80792236 275.83511353]
[192.24157715 267.06610107]
[183.35165405 254.98434448]
[174.46171570 242.90258789]
[165.57177734 230.82081604]
[156.68185425 218.73904419]
[147.79191589 206.65727234]
[138.90199280 194.57551575]
[130.01205444 182.49374390]
[121.12211609 170.41197205]
[112.23218536 158.33021545]
[86.35956573 104.06444550]
[71.64778900 101.13809204]
[56.93600845 98.21173859]
[42.22423172 95.28538513]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 87]
[2 86]
[3 85]
[5 82]
[6 81]
[7 80]
[9 78]
[10 77]
[11 76]
[12 75]
[13 74]
[14 73]
[16 71]
[17 70]
[19 69]
[20 68]
[21 67]
[24 64]
[25 63]
[26 62]
[27 61]
[29 60]
[30 59]
[31 57]
[34 54]
[35 53]
[38 49]
[39 48]
[88 110]
[89 109]
[90 108]
[93 105]
[94 104]
[95 103]
[96 102]
[97 101]
[118 207]
[119 206]
[120 205]
[121 204]
[122 133]
[123 132]
[124 131]
[135 170]
[136 169]
[137 168]
[140 165]
[141 164]
[142 163]
[143 162]
[144 161]
[145 159]
[146 158]
[147 157]
[148 156]
[171 203]
[172 202]
[173 201]
[174 200]
[175 199]
[176 198]
[177 197]
[178 196]
[179 195]
[180 194]
[181 192]
[182 191]
[183 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
