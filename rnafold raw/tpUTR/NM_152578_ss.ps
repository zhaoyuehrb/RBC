%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 02:02:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAGAGACCAAAGCAUUAUUUUCCCCUCAAGACAACAGAAACCAUUCAGAGCAGAGGGGACUGUCUCAGCCAUGCAAACCUCAUGGAGCAUUUUGGAAAGUUAAAAAUUGAUUCUUAUUUUUGUCAUGUUUACUUUCAAACAUGAAAUAAAAUUGAGUUCUGUUUUCAUGCAUCAAACC\
) } def
/len { sequence length } bind def

/coor [
[83.31900787 135.23345947]
[76.61626434 131.19059753]
[70.85633850 125.89014435]
[66.27146912 119.54582214]
[52.08869553 124.42934418]
[37.90591431 129.31286621]
[23.72313690 134.19638062]
[9.54035759 139.07991028]
[23.98343658 143.12928772]
[35.66244507 152.54208374]
[42.68764877 165.79525757]
[43.92232895 180.74435425]
[39.16670990 194.97053528]
[29.19027710 206.17190552]
[15.60727596 212.53602600]
[0.61551619 213.03315735]
[-13.35924721 207.58283997]
[-24.05581474 197.06697083]
[-29.74341965 183.18708801]
[-29.50177383 168.18902588]
[-23.36997604 154.49958801]
[-12.33796501 144.33242798]
[-27.19198608 146.42002869]
[-42.04600906 148.50761414]
[-56.90002823 150.59521484]
[-71.75405121 152.68281555]
[-86.60807037 154.77041626]
[-101.46208954 156.85800171]
[-102.85530853 171.86318970]
[-107.67197418 186.14242554]
[-115.65233612 198.92564392]
[-126.36602020 209.52345276]
[-139.23526001 217.36433411]
[-153.56602478 222.02545166]
[-168.58546448 223.25541687]
[-183.48362732 220.98789978]
[-197.45706177 215.34519958]
[-209.75218201 206.63160706]
[-219.70594788 195.31704712]
[-226.78155518 182.01170349]
[-230.59742737 167.43309021]
[-230.94778442 152.36743164]
[-227.81372070 137.62719727]
[-221.36427307 124.00731659]
[-211.94721985 112.24228668]
[-200.07044983 102.96657562]
[-186.37442017 96.68041992]
[-171.59777832 93.72281647]
[-156.53738403 94.25326538]
[-142.00544739 98.24316406]
[-128.78562927 105.47734070]
[-117.59088898 115.56567383]
[-109.02492523 127.96409607]
[-103.54969025 142.00398254]
[-88.69566345 139.91639709]
[-73.84164429 137.82879639]
[-58.98762512 135.74119568]
[-44.13360214 133.65359497]
[-29.27958298 131.56600952]
[-14.42556190 129.47840881]
[-10.13811207 124.63510895]
[-3.13151050 122.62998199]
[4.65683556 124.89713287]
[18.83961487 120.01360321]
[33.02239227 115.13008118]
[47.20517349 110.24655914]
[61.38795090 105.36303711]
[62.02112579 91.21036530]
[67.67013550 78.21852875]
[77.58892822 68.10334778]
[71.48787689 54.40016937]
[65.38682556 40.69698715]
[59.28577423 26.99380493]
[53.18472672 13.29062271]
[38.10404968 9.15453148]
[29.25278091 -3.73690104]
[30.81021500 -19.29673386]
[42.04098129 -30.17809105]
[57.64225388 -31.24312782]
[70.24758911 -21.98896599]
[73.90513611 -6.78513813]
[66.88790894 7.18957281]
[72.98896027 20.89275551]
[79.09000397 34.59593582]
[85.19105530 48.29911804]
[91.29210663 62.00230026]
[118.00022125 65.42190552]
[136.12052917 85.33850098]
[150.84494019 82.47637177]
[165.56935120 79.61423492]
[169.54803467 76.14939117]
[174.01315308 74.71961212]
[178.10096741 75.16640472]
[181.13816833 77.00890350]
[195.99218750 74.92131042]
[210.84622192 72.83371735]
[225.70024109 70.74611664]
[240.55426025 68.65852356]
[255.40827942 66.57092285]
[257.26452637 59.43384171]
[260.82345581 53.00006485]
[265.85275269 47.66695023]
[272.02972412 43.76074600]
[278.96200562 41.51667404]
[286.21237183 41.06477737]
[293.32638550 42.42242432]
[299.86090088 45.49391556]
[305.41162109 50.07714462]
[309.63812256 55.87685013]
[312.28472900 62.52363586]
[327.28472900 62.52363586]
[336.95645142 53.96249008]
[349.46752930 54.28706360]
[358.10922241 62.77664185]
[373.10693359 63.03842926]
[388.10464478 63.30021667]
[403.10235596 63.56200027]
[417.03546143 56.06672668]
[429.62576294 64.02497101]
[444.62347412 64.28675842]
[459.62118530 64.54853821]
[474.61889648 64.81032562]
[489.61660767 65.07211304]
[504.61660767 65.07211304]
[519.61431885 64.81032562]
[534.61206055 64.54853821]
[549.60974121 64.28675842]
[564.60748291 64.02497101]
[579.60522461 63.76318359]
[594.60290527 63.50139618]
[609.60064697 63.23961258]
[620.39752197 51.69828415]
[636.19561768 51.25540924]
[647.62213135 62.17373657]
[647.89794922 77.97561646]
[636.85943604 89.28607941]
[621.05554199 89.39482117]
[609.86242676 78.23732758]
[594.86468506 78.49911499]
[579.86700439 78.76090240]
[564.86926270 79.02268219]
[549.87158203 79.28446960]
[534.87384033 79.54625702]
[519.87609863 79.80804443]
[504.87841797 80.06983185]
[500.95852661 82.84249878]
[495.24920654 83.16320038]
[489.35482788 80.06983185]
[474.35711670 79.80804443]
[459.35940552 79.54625702]
[444.36169434 79.28446960]
[429.36398315 79.02268219]
[416.50360107 86.53668213]
[402.84057617 78.55971527]
[387.84286499 78.29792786]
[372.84512329 78.03614807]
[357.84741211 77.77436066]
[342.99661255 87.10183716]
[327.28472900 77.52363586]
[312.28472900 77.52363586]
[298.03027344 95.65833282]
[274.77563477 97.47657013]
[257.49588013 81.42494202]
[242.64186096 83.51254272]
[227.78782654 85.60013580]
[212.93380737 87.68773651]
[198.07978821 89.77532959]
[183.22576904 91.86293030]
[168.43148804 94.33863831]
[153.70707703 97.20077515]
[138.98266602 100.06291199]
[138.18421936 107.84969330]
[135.84620667 115.31998444]
[132.06289673 122.17257690]
[126.98682404 128.13119507]
[120.82266235 132.95556641]
[113.81893921 136.45118713]
[106.25804138 138.47712708]
[98.44483185 138.95169067]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 67]
[5 66]
[6 65]
[7 64]
[8 63]
[22 60]
[23 59]
[24 58]
[25 57]
[26 56]
[27 55]
[28 54]
[70 86]
[71 85]
[72 84]
[73 83]
[74 82]
[88 171]
[89 170]
[90 169]
[94 168]
[95 167]
[96 166]
[97 165]
[98 164]
[99 163]
[110 160]
[111 159]
[114 157]
[115 156]
[116 155]
[117 154]
[119 152]
[120 151]
[121 150]
[122 149]
[123 148]
[124 145]
[125 144]
[126 143]
[127 142]
[128 141]
[129 140]
[130 139]
[131 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
