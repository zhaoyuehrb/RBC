%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 07:19:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGGCUGAGAAAUCCAGAGUGUGCUGAUCCAGCAAGGAACGAAUGGACUGAACAAAACUCAGCCUGCUGAGGACAGAAACCUGCCCUGGACUGCUGGGAGCCGGGGAAGAGAGGAUGGGUCUGUGCUGAAGGCCCAACAGGAUCAUCUCAUUGCAUGAUUUUCUUUACUUUUGAAGUAAAAGGAGAUUUAACUUUUUGCCAAUCUUUUUUAGAUAAUGGAGGAAGAAUACAUUUGCUUUUUAAAAAGUU\
) } def
/len { sequence length } bind def

/coor [
[71.84071350 133.07122803]
[76.63644409 118.85900879]
[69.53007507 116.46118164]
[58.12703705 126.20646667]
[46.72399521 135.95175171]
[35.32095718 145.69705200]
[23.91791534 155.44233704]
[12.51487446 165.18762207]
[1.11183405 174.93292236]
[-10.29120636 184.67820740]
[-6.95632696 206.39846802]
[-17.42663193 225.56761169]
[-37.26191330 234.39212036]
[-58.25259781 229.39576721]
[-68.75917053 240.10145569]
[-79.26573944 250.80715942]
[-89.77230835 261.51284790]
[-89.29474640 279.01211548]
[-101.39199066 291.19338989]
[-118.21795654 290.85046387]
[-128.58970642 301.68682861]
[-132.45143127 322.78195190]
[-152.53030396 327.61508179]
[-162.48794556 338.83316040]
[-172.44558716 350.05123901]
[-182.40322876 361.26931763]
[-192.36088562 372.48739624]
[-198.35368347 388.34686279]
[-215.25233459 386.97860718]
[-218.61553955 370.36157227]
[-203.57896423 362.52975464]
[-193.62130737 351.31167603]
[-183.66366577 340.09359741]
[-173.70602417 328.87551880]
[-163.74838257 317.65744019]
[-165.70538330 309.04318237]
[-163.45903015 300.35791016]
[-157.38792419 293.56793213]
[-148.75061035 290.26956177]
[-139.42607117 291.31506348]
[-129.05432129 280.47872925]
[-131.13722229 267.77819824]
[-125.44702148 256.01785278]
[-113.85569763 249.58015442]
[-100.47800446 251.00628662]
[-89.97143555 240.30058289]
[-79.46486664 229.59489441]
[-68.95829773 218.88919067]
[-72.66178894 211.25605774]
[-74.33948517 202.92008972]
[-73.87513733 194.41064453]
[-71.28885651 186.27052307]
[-66.73638916 179.02136230]
[-60.49979782 173.13021851]
[-52.97000885 168.97941589]
[-44.62228775 166.84182739]
[-35.98625946 166.86286926]
[-27.61231041 169.05072021]
[-20.03649521 173.27516174]
[-8.63345528 163.52987671]
[2.76958537 153.78459167]
[14.17262650 144.03929138]
[25.57566643 134.29400635]
[36.97870636 124.54871368]
[48.38174820 114.80342865]
[59.78479004 105.05813599]
[63.50058746 90.52566528]
[58.17476273 76.50298309]
[52.67384720 62.54805756]
[46.99870300 48.66307449]
[41.32356262 34.77809143]
[35.64841843 20.89310837]
[29.97327423 7.00812531]
[19.74729729 3.39858699]
[13.31683636 -5.05962992]
[12.60384560 -15.44101048]
[17.60268402 -24.31673431]
[12.27685928 -38.33941650]
[0.86738998 -44.31851959]
[-3.28764439 -56.08731842]
[1.52095068 -67.16933441]
[-3.62894893 -81.25757599]
[-8.77884865 -95.34581757]
[-13.92874813 -109.43405914]
[-21.69808197 -122.26516724]
[-31.79535294 -133.35774231]
[-41.89262390 -144.45031738]
[-51.98989487 -155.54287720]
[-62.08716583 -166.63545227]
[-72.18443298 -177.72802734]
[-80.25316620 -181.95291138]
[-82.33760071 -189.02319336]
[-92.29524231 -200.24127197]
[-108.08451843 -200.93000793]
[-118.70046234 -212.63801575]
[-117.84482574 -228.41912842]
[-106.02523804 -238.91069031]
[-90.25405884 -237.88825989]
[-79.88803864 -225.95840454]
[-81.07716370 -210.19891357]
[-71.11952209 -198.98083496]
[-61.09186554 -187.82528687]
[-50.99459457 -176.73272705]
[-40.89732361 -165.64015198]
[-30.80005264 -154.54757690]
[-20.70278168 -143.45501709]
[-10.60551167 -132.36244202]
[-3.56139135 -134.93739319]
[-8.71129131 -149.02563477]
[-13.86119080 -163.11387634]
[-23.11239433 -174.92129517]
[-14.74149323 -187.36830139]
[-0.31698558 -183.25325012]
[0.22705027 -168.26376343]
[5.37694979 -154.17552185]
[10.52684975 -140.08729553]
[17.57097054 -142.66223145]
[18.13407135 -157.65167236]
[18.69717216 -172.64109802]
[19.26027489 -187.63052368]
[19.82337570 -202.61994934]
[20.38647652 -217.60937500]
[20.94957924 -232.59880066]
[9.23563290 -242.95822144]
[6.97227240 -258.43112183]
[15.22818661 -271.71173096]
[30.10518646 -276.52926636]
[44.57880783 -270.60910034]
[51.81504440 -256.74655151]
[48.39717484 -241.48704529]
[35.93900681 -232.03569031]
[35.37590408 -217.04626465]
[34.81280136 -202.05683899]
[34.24970245 -187.06741333]
[33.68659973 -172.07798767]
[33.12349701 -157.08856201]
[32.56039810 -142.09913635]
[19.43004799 -119.44123840]
[0.15949269 -114.58395386]
[5.30939245 -100.49571228]
[10.45929241 -86.40747070]
[15.60919189 -72.31922913]
[29.65691948 -61.78289795]
[26.29953957 -43.66523743]
[31.62536430 -29.64255714]
[47.45928192 -18.51829529]
[43.85825729 1.33298194]
[49.53340149 15.21796513]
[55.20854568 29.10294724]
[60.88368607 42.98793030]
[66.55883026 56.87291336]
[70.51454926 59.50680923]
[72.87179565 64.64215088]
[72.19744110 71.17715454]
[77.52326965 85.19983673]
[83.22722626 63.68345261]
[106.52272797 47.30861664]
[141.56448364 48.49491882]
[155.55355835 43.08144379]
[169.54263306 37.66796875]
[183.53170776 32.25449371]
[197.52078247 26.84101677]
[211.50987244 21.42754173]
[225.49894714 16.01406670]
[239.48802185 10.60059071]
[253.47709656 5.18711519]
[267.46618652 -0.22636040]
[281.42111206 -5.72727537]
[295.34133911 -11.31541348]
[309.26156616 -16.90355301]
[323.18179321 -22.49169159]
[335.62820435 -34.00353622]
[350.13568115 -25.23030853]
[345.72140503 -8.86112118]
[328.76992798 -8.57146454]
[314.84970093 -2.98332572]
[300.92947388 2.60481286]
[287.00924683 8.19295120]
[281.98587036 13.58735561]
[272.87963867 13.76271725]
[258.89056396 19.17619324]
[244.90148926 24.58966827]
[230.91241455 30.00314331]
[216.92333984 35.41661835]
[202.93426514 40.83009338]
[188.94519043 46.24357224]
[174.95611572 51.65704727]
[160.96702576 57.07052231]
[146.97795105 62.48399734]
[146.36845398 69.95919037]
[158.70655823 78.48980713]
[145.14945984 84.90957642]
[144.53996277 92.38477325]
[157.46731567 99.99290466]
[170.39466858 107.60103607]
[183.32200623 115.20916748]
[196.24935913 122.81729889]
[209.17671204 130.42543030]
[218.13424683 132.07363892]
[222.21739197 138.21055603]
[235.04850769 145.97988892]
[247.87962341 153.74922180]
[260.80697632 161.35734558]
[273.82852173 168.80308533]
[286.85006714 176.24882507]
[299.87164307 183.69456482]
[315.66622925 180.88198853]
[327.61730957 191.58483887]
[326.55703735 207.59281921]
[313.29876709 216.62596130]
[298.01312256 211.75482178]
[292.42590332 196.71612549]
[279.40435791 189.27038574]
[266.38278198 181.82464600]
[253.36122131 174.37890625]
[248.62254333 174.73941040]
[243.60301208 172.14466858]
[240.11027527 166.58033752]
[227.27917480 158.81098938]
[214.44805908 151.04165649]
[201.56857300 143.35278320]
[188.64122009 135.74464417]
[175.71388245 128.13652039]
[162.78652954 120.52838135]
[149.85917664 112.92024994]
[136.93183899 105.31211853]
[130.85319519 109.70530701]
[139.63955688 121.86259460]
[148.42593384 134.01988220]
[160.53906250 142.86703491]
[155.86807251 157.12121582]
[140.86811829 157.08358765]
[136.26864624 142.80625916]
[127.48227692 130.64897156]
[118.69589996 118.49167633]
[112.61725616 122.88486481]
[115.78488922 137.54658508]
[118.95251465 152.20831299]
[122.12014771 166.87004089]
[125.28777313 181.53175354]
[136.69645691 193.31199646]
[131.93922424 209.00596619]
[115.90990448 212.46905518]
[105.09809113 200.13874817]
[110.62605286 184.69938660]
[107.45841980 170.03765869]
[104.29079437 155.37594604]
[101.12316895 140.71421814]
[97.95553589 126.05249786]
[90.84917450 123.65466309]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 66]
[4 65]
[5 64]
[6 63]
[7 62]
[8 61]
[9 60]
[10 59]
[14 48]
[15 47]
[16 46]
[17 45]
[20 41]
[21 40]
[23 35]
[24 34]
[25 33]
[26 32]
[27 31]
[67 155]
[68 154]
[69 151]
[70 150]
[71 149]
[72 148]
[73 147]
[77 145]
[78 144]
[81 142]
[82 141]
[83 140]
[84 139]
[85 107]
[86 106]
[87 105]
[88 104]
[89 103]
[90 102]
[92 101]
[93 100]
[117 137]
[118 136]
[119 135]
[120 134]
[121 133]
[122 132]
[123 131]
[158 189]
[159 188]
[160 187]
[161 186]
[162 185]
[163 184]
[164 183]
[165 182]
[166 181]
[167 180]
[168 178]
[169 177]
[170 176]
[171 175]
[193 226]
[194 225]
[195 224]
[196 223]
[197 222]
[198 221]
[200 220]
[201 219]
[202 218]
[203 215]
[204 214]
[205 213]
[206 212]
[236 249]
[237 248]
[238 247]
[239 246]
[240 245]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
