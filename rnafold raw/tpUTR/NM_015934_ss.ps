%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 17:59:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGAAAGGAAUUACGAUUAUAUCACCCGGACACACAUCAUGCUUAAGAUUCAACUGGGAGCAUACCAGGGAUGCUCUCUAACGUAAUCAAGGGAAGGUUCAGUAAGACAAAGUGAUUUAUCAUCUAUAACUUCAAACCUAUUUGUCUUGACAUCAACUCUGUUAACCUUAUGUCAUCAUUUCUUAGAGUCUUUGAUAUACAAAUAAAAUUUUCUUUGUAUUUUAA\
) } def
/len { sequence length } bind def

/coor [
[109.12593842 525.92938232]
[121.42663574 516.61828613]
[112.65593719 504.57983398]
[119.21667480 490.18304443]
[117.96704865 475.23516846]
[116.71742249 460.28732300]
[115.46779633 445.33947754]
[114.21817017 430.39160156]
[112.96853638 415.44375610]
[111.71891022 400.49591064]
[97.75141907 395.26382446]
[87.39811707 384.44168091]
[82.75124359 370.13897705]
[84.78340149 355.17599487]
[93.14461517 342.52780151]
[106.22116089 334.73260498]
[104.97153473 319.78472900]
[103.41052246 304.86618042]
[101.53879547 289.98342896]
[99.66707611 275.10064697]
[97.79534912 260.21789551]
[95.92362976 245.33512878]
[94.05190277 230.45236206]
[92.18018341 215.56959534]
[83.58874512 210.06225586]
[79.35265350 200.53723145]
[81.08826447 190.03575134]
[88.46147156 182.05772400]
[87.00418091 167.12869263]
[85.54689789 152.19964600]
[84.08960724 137.27059937]
[78.21113586 151.07072449]
[65.49846649 159.03239441]
[50.53430939 160.06867981]
[36.84554672 153.93534851]
[27.65848160 142.07795715]
[25.13840675 127.29116058]
[29.87928009 113.06006622]
[40.76372528 102.73878479]
[55.22639084 98.75993347]
[69.85646820 102.06021881]
[84.57455444 99.16577148]
[70.27054596 94.64965820]
[55.96653366 90.13355255]
[42.06990814 97.17070770]
[27.62794113 92.38696289]
[21.00472450 79.09529114]
[6.70071316 74.57917786]
[-7.60329819 70.06307220]
[-21.90731049 65.54695892]
[-36.24236298 61.13037491]
[-47.44872284 71.54021454]
[-62.26318359 74.92083740]
[-76.68486023 70.46195221]
[-86.87020111 59.45673370]
[-90.15727234 44.92880249]
[-104.52267456 40.61196136]
[-118.88807678 36.29511642]
[-133.25347900 31.97827339]
[-147.61889648 27.66143227]
[-161.98429871 23.34458923]
[-176.34970093 19.02774620]
[-190.71510315 14.71090317]
[-203.68881226 23.44113159]
[-219.23339844 21.73813820]
[-230.00915527 10.40602398]
[-230.92813110 -5.20453310]
[-221.55639648 -17.72270584]
[-206.31901550 -21.23779488]
[-192.41058350 -14.09008312]
[-186.39826965 0.34549811]
[-172.03285217 4.66234064]
[-157.66744995 8.97918320]
[-143.30204773 13.29602623]
[-128.93664551 17.61286926]
[-114.57123566 21.92971230]
[-100.20583344 26.24655533]
[-85.84042358 30.56339645]
[-75.08963776 20.25388336]
[-60.52506638 16.68607712]
[-46.03441620 20.91542625]
[-35.53739929 31.90221214]
[-31.92552185 46.76496887]
[-24.62302971 45.68086624]
[-17.39119911 51.24294662]
[-3.08718753 55.75905991]
[11.21682358 60.27516937]
[25.52083588 64.79128265]
[38.57551956 57.71237564]
[53.14615250 62.08858871]
[60.48264313 75.82953644]
[74.78665161 80.34564972]
[89.09066772 84.86176300]
[103.04650116 79.36316681]
[110.42579651 66.30384064]
[117.80509186 53.24451065]
[125.18438721 40.18518448]
[132.56369019 27.12585831]
[139.94297791 14.06653118]
[147.14002991 0.90589136]
[154.15344238 -12.35351944]
[161.16687012 -25.61293030]
[167.33767700 -39.28483582]
[172.64175415 -53.31576157]
[177.94583130 -67.34667969]
[183.24990845 -81.37760925]
[188.55397034 -95.40853119]
[193.85804749 -109.43945312]
[199.16212463 -123.47037506]
[204.46618652 -137.50129700]
[209.77026367 -151.53222656]
[203.51628113 -165.79846191]
[209.09524536 -179.95225525]
[222.73446655 -185.82655334]
[210.39132690 -194.49244690]
[200.59170532 -205.95622253]
[193.95162964 -219.49728394]
[190.88850403 -234.26440430]
[191.59486389 -249.32933044]
[196.02630615 -263.74505615]
[203.90428162 -276.60540771]
[214.73356628 -287.10192871]
[227.83341980 -294.57485962]
[242.38037109 -298.55444336]
[257.45999146 -298.79046631]
[272.12438965 -295.26812744]
[285.45169067 -288.20883179]
[296.60418701 -278.05633545]
[304.88076782 -265.44885254]
[309.76119995 -251.17889404]
[310.93872070 -236.14344788]
[308.33923340 -221.28768921]
[302.12619019 -207.54545593]
[292.69015503 -195.78059387]
[280.62429810 -186.73265076]
[266.68704224 -180.97038269]
[251.75450134 -178.85601807]
[236.76538086 -180.52247620]
[243.10783386 -167.09455872]
[237.92861938 -152.78965759]
[223.80119324 -146.22814941]
[218.49711609 -132.19721985]
[213.19303894 -118.16630554]
[207.88897705 -104.13537598]
[202.58489990 -90.10445404]
[197.28082275 -76.07353210]
[191.97674561 -62.04261017]
[186.67268372 -48.01168823]
[181.36860657 -33.98076248]
[194.18933105 -41.76722336]
[209.18669128 -41.48569870]
[221.70616150 -33.22355652]
[227.86224365 -19.54500961]
[225.74435425 -4.69527626]
[216.00981140 6.71693754]
[201.67977905 11.14978027]
[187.20166016 7.22749329]
[177.06884766 -3.83261824]
[174.42626953 -18.59951019]
[167.41285706 -5.34010077]
[160.39944458 7.91930962]
[160.92083740 12.65678978]
[158.47917175 17.77355957]
[153.00230408 21.44582558]
[145.62301636 34.50515366]
[138.24371338 47.56447983]
[130.86442566 60.62380600]
[123.48512268 73.68312836]
[116.10582733 86.74246216]
[122.74795532 100.19170380]
[137.60325623 102.27012634]
[152.45857239 104.34854126]
[167.44851685 97.69770813]
[180.54214478 107.57135010]
[178.26986694 123.81230927]
[162.96919250 129.71328735]
[150.38014221 119.20384979]
[135.52484131 117.12543488]
[120.66953278 115.04701233]
[115.25681305 120.23858643]
[127.29712677 129.18458557]
[141.06140137 135.14654541]
[143.71583557 149.90980530]
[132.89044189 160.29299927]
[118.25065613 157.02549744]
[112.86762238 143.02455139]
[104.43137360 130.62173462]
[99.01865387 135.81330872]
[100.47593689 150.74235535]
[101.93322754 165.67140198]
[103.39051056 180.60044861]
[115.84196472 196.46257019]
[107.06294250 213.69787598]
[108.93466949 228.58064270]
[110.80638885 243.46340942]
[112.67811584 258.34616089]
[114.54983521 273.22894287]
[116.42156219 288.11169434]
[118.29328156 302.99444580]
[121.43444824 307.13647461]
[122.56687164 311.62063599]
[121.89531708 315.62710571]
[119.91939545 318.53509521]
[121.16902161 333.48297119]
[135.35835266 338.99877930]
[145.70358276 350.08312988]
[150.19195557 364.50100708]
[147.98437500 379.37673950]
[139.57167053 391.76770020]
[126.66677094 399.24627686]
[127.91639709 414.19412231]
[129.16603088 429.14199829]
[130.41564941 444.08984375]
[131.66528320 459.03768921]
[132.91490173 473.98556519]
[134.16453552 488.93341064]
[143.02461243 502.04104614]
[136.37449646 515.36865234]
[150.05043030 522.50811768]
[157.67562866 535.91931152]
[156.81690979 551.32275391]
[147.74826050 563.80328369]
[133.36349487 569.37835693]
[118.25270844 566.26904297]
[107.23770905 555.46752930]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 218]
[4 216]
[5 215]
[6 214]
[7 213]
[8 212]
[9 211]
[10 210]
[16 204]
[17 203]
[18 199]
[19 198]
[20 197]
[21 196]
[22 195]
[23 194]
[24 193]
[28 191]
[29 190]
[30 189]
[31 188]
[42 93]
[43 92]
[44 91]
[47 88]
[48 87]
[49 86]
[50 85]
[51 83]
[56 78]
[57 77]
[58 76]
[59 75]
[60 74]
[61 73]
[62 72]
[63 71]
[94 169]
[95 168]
[96 167]
[97 166]
[98 165]
[99 164]
[100 161]
[101 160]
[102 159]
[103 149]
[104 148]
[105 147]
[106 146]
[107 145]
[108 144]
[109 143]
[110 142]
[111 141]
[114 138]
[170 179]
[171 178]
[172 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
