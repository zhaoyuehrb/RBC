%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 02:14:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAACCAUGGCUGUCAUCAGGAAAAUGGUUGGGAGAUUUCUCAAUCCCUGAAAGGGAUGAGGUUGGGGGAGUUGCCCAGAGGAAUCCCUGUUCCCACUGAUUUUUAUUAGCAAAACAUCCUGUGUCUUUUGGAGUACGAUGUGUAAGUGCCCAUUGGGUGGCCUGUUGGUCACUGUGCAGCAGUCUGCUUCCCAAUAAAGCGUGCUCUUUCACAAACA\
) } def
/len { sequence length } bind def

/coor [
[-35.50372696 444.67794800]
[-50.49965286 444.32839966]
[-63.41247559 436.69772339]
[-70.25107574 450.04815674]
[-77.08967590 463.39855957]
[-83.92827606 476.74896240]
[-90.76687622 490.09939575]
[-97.60547638 503.44979858]
[-91.10834503 521.25079346]
[-99.54672241 537.86022949]
[-117.14057922 542.93255615]
[-123.59339142 556.47363281]
[-130.04620361 570.01477051]
[-128.21498108 586.31134033]
[-141.57144165 595.82641602]
[-156.37559509 588.77172852]
[-157.39820862 572.40447998]
[-143.58729553 563.56195068]
[-137.13449097 550.02081299]
[-130.68167114 536.47973633]
[-136.73114014 526.81475830]
[-137.37316895 515.31072998]
[-132.33299255 504.81655884]
[-122.75739288 497.98699951]
[-110.95589447 496.61120605]
[-104.11729431 483.26077271]
[-97.27869415 469.91036987]
[-90.44009399 456.55996704]
[-83.60148621 443.20953369]
[-76.76288605 429.85913086]
[-87.17760468 419.06405640]
[-100.76463318 425.41958618]
[-114.35166168 431.77508545]
[-127.93869019 438.13061523]
[-129.17906189 453.43933105]
[-137.92080688 466.06777954]
[-151.81245422 472.61892700]
[-167.11721802 471.33059692]
[-179.71818542 462.54928589]
[-186.22576904 448.63717651]
[-184.88946533 433.33654785]
[-176.06871033 420.76315308]
[-162.13627625 414.29919434]
[-146.83988953 415.68347168]
[-134.29420471 424.54357910]
[-120.70718384 418.18804932]
[-107.12015533 411.83255005]
[-93.53312683 405.47702026]
[-82.08869171 395.78036499]
[-73.58816528 383.42153931]
[-65.08763885 371.06268311]
[-56.58711624 358.70382690]
[-48.08658981 346.34500122]
[-39.58606339 333.98614502]
[-31.08553696 321.62728882]
[-22.58501053 309.26846313]
[-14.17334652 296.84896851]
[-5.85097790 284.36944580]
[2.47139001 271.88995361]
[-2.18725586 254.18205261]
[7.75271368 238.42529297]
[26.36853409 234.88406372]
[34.32948303 222.17094421]
[42.29043579 209.45783997]
[50.25138474 196.74472046]
[58.21233749 184.03160095]
[66.17328644 171.31849670]
[74.13423920 158.60537720]
[82.09519196 145.89225769]
[60.77298737 126.25529480]
[54.86414719 99.13594818]
[65.13800049 74.68199158]
[86.56188965 61.23632812]
[84.41748810 46.39039993]
[82.27308655 31.54447556]
[80.02225494 16.71431160]
[77.66510773 1.90067267]
[75.30796814 -12.91296577]
[72.95082092 -27.72660446]
[70.59368134 -42.54024124]
[68.23654175 -57.35388184]
[65.87939453 -72.16751862]
[63.52225113 -86.98115540]
[51.01356506 -96.26396179]
[48.83411026 -111.32067871]
[57.76093292 -123.18859100]
[42.01116943 -133.72586060]
[39.02243042 -152.11459351]
[50.23322296 -166.59184265]
[47.45209885 -181.33177185]
[44.67097473 -196.07168579]
[41.88985443 -210.81161499]
[29.02871132 -215.76026917]
[20.35981560 -226.33274841]
[18.06383896 -239.70091248]
[22.63487816 -252.35638428]
[32.77891922 -261.03121948]
[30.20952225 -275.80950928]
[27.64012527 -290.58782959]
[25.07072639 -305.36611938]
[22.50132942 -320.14443970]
[11.58062363 -332.37841797]
[16.97148132 -347.86614990]
[33.12825012 -350.67523193]
[43.43023300 -337.91586304]
[37.27963257 -322.71383667]
[39.84902954 -307.93551636]
[42.41842651 -293.15722656]
[44.98782349 -278.37890625]
[47.55722046 -263.60061646]
[62.52037811 -256.84262085]
[70.58587646 -242.35121155]
[68.40065002 -225.74339294]
[56.62977600 -213.59274292]
[59.41090012 -198.85281372]
[62.19202423 -184.11288452]
[64.97314453 -169.37297058]
[75.56039429 -165.13996887]
[82.86729431 -156.23130798]
[84.99086761 -144.78486633]
[81.29038239 -133.62055969]
[72.57456970 -125.54573059]
[84.74409485 -117.03466034]
[87.34559631 -102.04510498]
[78.33589172 -89.33830261]
[80.69303131 -74.52465820]
[83.05017853 -59.71102142]
[85.40731812 -44.89738464]
[87.76446533 -30.08374596]
[90.12160492 -15.27010822]
[92.47874451 -0.45647007]
[94.83589172 14.35716820]
[98.98880768 20.46527290]
[97.11901093 29.40007210]
[99.26341248 44.24599838]
[101.40781403 59.09192276]
[114.85495758 65.73831177]
[127.95158386 58.42542648]
[141.04821777 51.11254120]
[154.14483643 43.79965591]
[167.24147034 36.48677063]
[175.51838684 23.00333023]
[190.40281677 23.55396080]
[203.49943542 16.24107552]
[211.43266296 1.88851035]
[227.83177185 1.85316730]
[235.82676697 16.17140388]
[227.19309998 30.11384773]
[210.81233215 29.33770561]
[197.71569824 36.65058899]
[190.37553406 49.61096573]
[174.55435181 49.58340073]
[161.45773315 56.89628601]
[148.36109924 64.20917511]
[135.26446533 71.52205658]
[122.16783905 78.83494568]
[125.68521118 93.41671753]
[140.67556763 93.95454407]
[155.66592407 94.49237061]
[170.65628052 95.03020477]
[185.64663696 95.56803131]
[200.63697815 96.10585785]
[215.62733459 96.64369202]
[229.85282898 88.48479462]
[243.89349365 96.95780945]
[243.30549622 113.34641266]
[228.69372559 120.79141998]
[215.08950806 111.63404083]
[200.09915161 111.09621429]
[185.10879517 110.55838776]
[170.11845398 110.02055359]
[155.12809753 109.48272705]
[140.13774109 108.94490051]
[125.14738464 108.40707397]
[123.07665253 115.61554718]
[118.93520355 130.03248596]
[116.86447144 137.24096680]
[129.85485840 144.74096680]
[142.84523010 152.24096680]
[155.83561707 159.74096680]
[172.22583008 159.19987488]
[180.65861511 173.26473999]
[172.45904541 187.46681213]
[156.06213379 187.19622803]
[148.33561707 172.73133850]
[135.34523010 165.23133850]
[122.35485077 157.73133850]
[109.36447144 150.23133850]
[94.80830383 153.85321045]
[86.84735107 166.56632996]
[78.88639832 179.27944946]
[70.92545319 191.99255371]
[62.96450043 204.70567322]
[55.00354767 217.41877747]
[47.04259872 230.13189697]
[39.08164978 242.84501648]
[43.94691467 253.68463135]
[42.98818588 265.40707397]
[36.55862427 275.11230469]
[26.35042000 280.45529175]
[14.95090103 280.21231079]
[6.62853289 292.69180298]
[-1.69383526 305.17132568]
[-3.84953284 314.04150391]
[-10.22616482 317.76898193]
[-18.72669029 330.12783813]
[-27.22721672 342.48666382]
[-35.72774506 354.84552002]
[-44.22827148 367.20437622]
[-52.72879791 379.56320190]
[-61.22932434 391.92205811]
[-69.72985077 404.28091431]
[-60.62638474 392.35919189]
[-46.85884476 386.40481567]
[-31.93717575 387.93572998]
[-19.66555786 396.56170654]
[-13.17256260 410.08358765]
[-14.11353588 425.05404663]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 30]
[4 29]
[5 28]
[6 27]
[7 26]
[8 25]
[11 20]
[12 19]
[13 18]
[31 48]
[32 47]
[33 46]
[34 45]
[49 212]
[50 211]
[51 210]
[52 209]
[53 208]
[54 207]
[55 206]
[56 205]
[57 203]
[58 202]
[59 201]
[62 196]
[63 195]
[64 194]
[65 193]
[66 192]
[67 191]
[68 190]
[69 189]
[73 136]
[74 135]
[75 134]
[76 132]
[77 131]
[78 130]
[79 129]
[80 128]
[81 127]
[82 126]
[83 125]
[86 122]
[89 117]
[90 116]
[91 115]
[92 114]
[97 110]
[98 109]
[99 108]
[100 107]
[101 106]
[137 156]
[138 155]
[139 154]
[140 153]
[141 152]
[143 150]
[144 149]
[157 174]
[158 173]
[159 172]
[160 171]
[161 170]
[162 169]
[163 168]
[177 188]
[178 187]
[179 186]
[180 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
