%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 10:42:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCUGCCCAUAUUCUUCACGUGCUCUUAACUUGCUGCUUACAAAUCAUCUCCUGAGAUGCUAACUUUGAACAAAGAAAAUAAGAAUGGAAGCAUGCCAUUUUUCUGCCCAUUGCUUAGUGGUUCAUGAAGGCCACACUGUUUUGGGUGAGACAAAAGUCUAAUGCCACUGGAUCUUGUGUGAUAAAUAAAGAAAUAUAUGAUCAA\
) } def
/len { sequence length } bind def

/coor [
[91.20593262 388.23205566]
[77.00401306 380.76980591]
[74.12509918 364.98718262]
[84.77765656 352.99124146]
[85.23509979 337.99822998]
[74.87384033 327.35961914]
[75.12417603 312.14804077]
[86.35317993 301.35232544]
[86.81062317 286.35931396]
[87.26806641 271.36630249]
[87.72550201 256.37326050]
[88.18294525 241.38023376]
[77.82169342 230.74163818]
[78.07202148 215.53005981]
[89.30102539 204.73435974]
[89.75846863 189.74133301]
[90.21591187 174.74830627]
[71.65180969 171.78735352]
[53.98036957 164.18486023]
[38.36779022 152.20997620]
[26.90986443 161.89068604]
[15.52609062 171.65846252]
[4.21712732 181.51277161]
[6.55669403 196.76170349]
[0.25979954 210.84547424]
[-12.66424084 219.27001953]
[-28.09141159 219.34706116]
[-41.09896088 211.05204773]
[-47.53622437 197.03187561]
[-45.34909439 181.76034546]
[-35.23548126 170.11051941]
[-20.42259598 165.79983521]
[-5.63717890 170.20381165]
[5.67178392 160.34950256]
[8.65066814 153.58251953]
[17.22916412 150.43275452]
[28.68708992 140.75205994]
[26.21770859 133.67024231]
[12.05407143 138.60899353]
[-2.10956693 143.54776001]
[-16.27328682 148.48628235]
[-21.21157646 134.32247925]
[-7.04832697 129.38412476]
[7.11531115 124.44535828]
[21.27894974 119.50659943]
[18.80956841 112.42478180]
[3.81654596 111.96733856]
[-11.17647743 111.50989532]
[-26.16950035 111.05245209]
[-41.16252518 110.59500885]
[-55.34405899 118.83005524]
[-69.42995453 110.43245697]
[-68.92984009 94.04093933]
[-54.35820007 86.51769257]
[-40.70508194 95.60198212]
[-25.71205711 96.05942535]
[-10.71903515 96.51686859]
[4.27398872 96.97431183]
[19.26701164 97.43175507]
[20.83303261 90.83031464]
[22.93018532 84.47136688]
[25.52902794 78.39688873]
[28.59686852 72.64564514]
[32.09809494 67.25295258]
[19.30252075 59.42522430]
[6.50694656 51.59749985]
[-6.28862858 43.76977921]
[-22.68730545 43.89413452]
[-30.75991249 29.61950684]
[-22.20204735 15.63040543]
[-5.81730461 16.31761932]
[1.53909528 30.97420311]
[14.33467007 38.80192566]
[27.13024521 46.62965012]
[39.92581940 54.45737457]
[43.81578445 49.73697281]
[48.07563400 45.34747696]
[52.67732620 41.31778336]
[57.59056473 37.67442322]
[62.78300095 34.44137955]
[68.22045898 31.63993454]
[63.28169632 17.47629738]
[58.34293747 3.31265879]
[53.40417480 -10.85097980]
[48.46541595 -25.01461792]
[43.52665710 -39.17825699]
[38.58789444 -53.34189606]
[33.64913559 -67.50553131]
[18.96526146 -72.88306427]
[11.21823597 -86.46678925]
[14.06596756 -101.84288788]
[26.16384506 -111.75123596]
[41.79962158 -111.51342010]
[53.59055710 -101.24172211]
[55.96933746 -85.78612518]
[47.81277466 -72.44429016]
[52.75153351 -58.28065491]
[57.69029236 -44.11701584]
[62.62905502 -29.95337868]
[67.56781006 -15.78973961]
[72.50657654 -1.62610137]
[77.44533539 12.53753662]
[82.38409424 26.70117569]
[103.65238190 24.70260239]
[124.62738800 28.75023270]
[143.62487793 38.51904678]
[153.47918701 27.21008301]
[163.33349609 15.90112019]
[173.18780518 4.59215736]
[183.04209900 -6.71680593]
[182.14231873 -22.26762962]
[192.29708862 -33.59614944]
[207.12796021 -34.35812759]
[216.98226929 -45.66709137]
[213.66300964 -60.70998764]
[219.76660156 -74.65988159]
[232.76034546 -82.25109863]
[247.55545044 -80.75336456]
[257.40975952 -92.06232452]
[267.26406860 -103.37129211]
[277.11837769 -114.68025208]
[286.97265625 -125.98921967]
[296.82696533 -137.29818726]
[295.49331665 -153.04609680]
[305.74945068 -165.07054138]
[321.51058960 -166.23762512]
[333.42593384 -155.85494995]
[334.42630005 -140.08235168]
[323.91824341 -128.27745056]
[308.13592529 -127.44387054]
[298.28164673 -116.13491058]
[288.42733765 -104.82595062]
[278.57302856 -93.51698303]
[268.71871948 -82.20802307]
[258.86441040 -70.89905548]
[262.37237549 -56.44803238]
[256.63040161 -42.53782654]
[243.64680481 -34.58296585]
[228.29122925 -35.81278229]
[218.43692017 -24.50382042]
[219.71131897 -9.70816326]
[209.87875366 1.90111184]
[194.35107422 3.13750052]
[184.49676514 14.44646358]
[174.64245605 25.75542641]
[164.78814697 37.06438828]
[154.93383789 48.37335205]
[168.61680603 68.77865601]
[175.01191711 92.50000000]
[190.01191711 92.50000000]
[205.01191711 92.50000000]
[220.01191711 92.50000000]
[233.93571472 83.83629608]
[248.27114868 91.80042267]
[248.27114868 108.19957733]
[233.93571472 116.16370392]
[220.01191711 107.50000000]
[205.01191711 107.50000000]
[190.01191711 107.50000000]
[175.01191711 107.50000000]
[172.56336975 120.43512726]
[167.90190125 132.74705505]
[180.69747925 140.57476807]
[195.87976074 137.09111023]
[208.74478149 145.21180725]
[211.97236633 159.70726013]
[224.76794434 167.53498840]
[237.56352234 175.36271667]
[251.84272766 169.28950500]
[266.95700073 172.80207825]
[277.09460449 184.54978943]
[278.35742188 200.01539612]
[270.25985718 213.25205994]
[255.91560364 219.17001343]
[240.84031677 215.49366760]
[230.83076477 203.63668823]
[229.73579407 188.15829468]
[216.94021606 180.33056641]
[204.14465332 172.50283813]
[189.76947021 176.22976685]
[176.68142700 168.47361755]
[172.86975098 153.37034607]
[160.07417297 145.54263306]
[154.88638306 151.67709351]
[149.07522583 157.22463989]
[142.70669556 162.12226868]
[135.85311890 166.31433105]
[128.59234619 169.75325012]
[121.00684357 172.39993286]
[113.18275452 174.22433472]
[105.20893860 175.20574951]
[104.75149536 190.19877625]
[104.29405212 205.19180298]
[114.84401703 216.65199280]
[114.16652679 231.85052490]
[103.17597198 241.83767700]
[102.71852875 256.83071899]
[102.26108551 271.82373047]
[101.80364227 286.81674194]
[101.34619904 301.80978394]
[111.89617157 313.26995850]
[111.21867371 328.46850586]
[100.22811890 338.45565796]
[99.77067566 353.44869995]
[109.67209625 366.07174683]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 204]
[5 203]
[8 200]
[9 199]
[10 198]
[11 197]
[12 196]
[15 193]
[16 192]
[17 191]
[20 37]
[21 36]
[22 34]
[23 33]
[46 59]
[47 58]
[48 57]
[49 56]
[50 55]
[64 75]
[65 74]
[66 73]
[67 72]
[81 103]
[82 102]
[83 101]
[84 100]
[85 99]
[86 98]
[87 97]
[88 96]
[106 147]
[107 146]
[108 145]
[109 144]
[110 143]
[113 140]
[114 139]
[118 135]
[119 134]
[120 133]
[121 132]
[122 131]
[123 130]
[149 160]
[150 159]
[151 158]
[152 157]
[162 183]
[163 182]
[166 179]
[167 178]
[168 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
