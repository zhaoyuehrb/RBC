%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 17:00:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGGGACUGCCUGUCAUUCCUGUCAGUCUCUCACGCUUCUUUGUCUCCACAGGGCUCGCAACUACGCUGGAGCCUAUAGAGAAUGGUUGGAGAAAGAGAGUUAGGCAGGAGGCAGCUUACUGAUUGCCACCCCCUGGCCCCUUAAUGGCCACCUUAACUAAGGGUGUGAACGGGCUGACUUGGUGAAUUGGGCAACUCCUUAUAGUGUUGUGCACACAAAAGCAUCAAAUAAAGAACAUUUAAUCAA\
) } def
/len { sequence length } bind def

/coor [
[419.34625244 564.86981201]
[411.25115967 552.24169922]
[403.15609741 539.61352539]
[395.06100464 526.98541260]
[386.96594238 514.35729980]
[378.87088013 501.72915649]
[362.86566162 494.50683594]
[362.19378662 476.09375000]
[353.93939209 463.56918335]
[345.68502808 451.04458618]
[337.43063354 438.52001953]
[329.17623901 425.99545288]
[311.29843140 418.59210205]
[310.48132324 398.43447876]
[301.91229248 386.12304688]
[293.34326172 373.81158447]
[284.77426147 361.50012207]
[276.20523071 349.18869019]
[263.34274292 348.71621704]
[252.94105530 340.80963135]
[248.92601013 328.17205811]
[252.97390747 315.34094238]
[244.56152344 302.92193604]
[236.14913940 290.50292969]
[227.73675537 278.08389282]
[219.32437134 265.66488647]
[210.91198730 253.24588013]
[202.49961853 240.82687378]
[194.08723450 228.40786743]
[177.90420532 221.59332275]
[176.76609802 203.20315552]
[168.19706726 190.89170837]
[159.62805176 178.58026123]
[151.05902100 166.26879883]
[142.49000549 153.95735168]
[133.92097473 141.64590454]
[47.50134659 116.32281494]
[32.70428085 113.86376190]
[17.90722084 111.40470886]
[3.11015773 108.94565582]
[-11.68690491 106.48660278]
[-26.48396683 104.02754211]
[-41.36586380 109.39781189]
[-52.65251541 99.67871857]
[-67.44957733 97.21966553]
[-82.24664307 94.76061249]
[-97.04370117 92.30155945]
[-111.84076691 89.84249878]
[-126.63782501 87.38344574]
[-141.46485901 85.11203003]
[-156.31945801 83.02861786]
[-171.26052856 81.70024872]
[-186.24969482 81.13034058]
[-201.23886108 80.56043243]
[-216.22804260 79.99051666]
[-231.21720886 79.42060852]
[-246.20637512 78.85070038]
[-261.20156860 78.47071075]
[-276.20034790 78.28070068]
[-287.33996582 89.49163055]
[-303.14419556 89.45851898]
[-314.23672485 78.20101929]
[-314.03652954 62.39799500]
[-302.66238403 51.42510986]
[-286.86236572 51.79237366]
[-276.01034546 63.28190231]
[-261.01153564 63.47191238]
[-257.04235840 60.85564423]
[-251.39224243 60.68865204]
[-245.63645935 63.86153030]
[-230.64729309 64.43144226]
[-215.65812683 65.00135040]
[-200.66896057 65.57125854]
[-185.67979431 66.14116669]
[-170.69061279 66.71108246]
[-181.73544312 56.56159973]
[-184.80125427 41.87825012]
[-178.74049377 28.15719986]
[-165.82177734 20.53441811]
[-150.88075256 21.86321259]
[-139.51004028 31.64619637]
[-135.96583557 46.22146988]
[-141.57478333 60.13331985]
[-154.23605347 68.17401123]
[-139.38143921 70.25742340]
[-135.11351013 68.16358185]
[-129.48756409 68.71175385]
[-124.17877197 72.58638763]
[-109.38171387 75.04544067]
[-94.58464813 77.50449371]
[-79.78759003 79.96354675]
[-64.99052429 82.42259979]
[-50.19346237 84.88165283]
[-36.36995316 79.33550262]
[-24.02491379 89.23048401]
[-9.22785091 91.68953705]
[5.56921148 94.14859009]
[20.36627388 96.60764313]
[35.16333771 99.06669617]
[49.96039963 101.52574921]
[55.36350632 96.32417297]
[66.16972351 85.92102051]
[71.57283020 80.71943665]
[69.67775726 65.83963013]
[67.78267670 50.95982361]
[58.08930969 42.47499847]
[56.80563736 30.05937767]
[64.07679749 20.41111755]
[62.37035751 5.50849819]
[53.11334229 -7.32186794]
[59.35252380 -20.84672928]
[57.64608765 -35.74934769]
[55.93964767 -50.65196609]
[54.23320770 -65.55458832]
[52.52677155 -80.45720673]
[50.72597504 -95.34871674]
[38.97070312 -106.26628113]
[40.32073593 -122.25242615]
[53.74044418 -131.04396057]
[68.93537140 -125.89676666]
[74.24927521 -110.75933075]
[65.60578156 -97.24379730]
[69.55889130 -91.02085114]
[67.42938995 -82.16364288]
[69.13582611 -67.26102448]
[70.84226990 -52.35840607]
[72.54870605 -37.45578766]
[74.25514221 -22.55316734]
[83.39009857 -10.78873730]
[77.27297211 3.80205917]
[78.97941589 18.70467949]
[90.16829681 32.23749924]
[82.66248322 49.06474304]
[84.55756378 63.94455338]
[86.45263672 78.82435608]
[101.21736908 81.47065735]
[108.16231537 68.17525482]
[115.10726166 54.87985611]
[122.05221558 41.58445358]
[115.92145538 27.19877434]
[120.52139282 12.25305271]
[133.68006897 3.80420184]
[149.18437195 5.84151125]
[159.71363831 17.40302467]
[160.29626465 33.02975082]
[150.65716553 45.34322739]
[135.34761047 48.52940369]
[128.40266418 61.82480621]
[121.45771790 75.12020874]
[114.51276398 88.41560364]
[120.41439056 93.04387665]
[138.11924744 106.92867279]
[149.37594604 97.01470184]
[160.63262939 87.10072327]
[171.88932800 77.18675232]
[176.61227417 61.48242569]
[192.63398743 57.98433304]
[203.47270203 70.29100800]
[197.97848511 85.74240112]
[181.80329895 88.44344330]
[170.54661560 98.35741425]
[159.28991699 108.27139282]
[148.03323364 118.18536377]
[146.23243713 133.07687378]
[154.80145264 145.38833618]
[163.37048340 157.69978333]
[171.93949890 170.01123047]
[180.50852966 182.32269287]
[189.07754517 194.63414001]
[201.59780884 197.66674805]
[208.48399353 208.07711792]
[206.50624084 219.99548340]
[214.91862488 232.41448975]
[223.33100891 244.83349609]
[231.74339294 257.25250244]
[240.15577698 269.67150879]
[248.56814575 282.09054565]
[256.98052979 294.50955200]
[265.39291382 306.92855835]
[282.63931274 309.92617798]
[292.18359375 324.19531250]
[288.51666260 340.61965942]
[297.08569336 352.93112183]
[305.65472412 365.24255371]
[314.22375488 377.55401611]
[322.79275513 389.86547852]
[333.56210327 391.15631104]
[341.68457031 398.00915527]
[344.64505005 407.98709106]
[341.70080566 417.74105835]
[349.95520020 430.26562500]
[358.20959473 442.79019165]
[366.46398926 455.31478882]
[374.71838379 467.83935547]
[387.15777588 471.18817139]
[393.77804565 481.76965332]
[391.49899292 493.63406372]
[399.59408569 506.26220703]
[407.68914795 518.89031982]
[415.78424072 531.51849365]
[423.87930298 544.14660645]
[431.97436523 556.77471924]
[454.61788940 565.84265137]
[454.99594116 589.51416016]
[464.17755127 601.37579346]
[473.35913086 613.23742676]
[482.54071045 625.09906006]
[491.72232056 636.96069336]
[500.90390015 648.82232666]
[510.74636841 660.14160156]
[521.21777344 670.88171387]
[531.68914795 681.62182617]
[542.16058350 692.36193848]
[557.49615479 689.99566650]
[571.27832031 697.12530518]
[578.20751953 711.00927734]
[575.61938477 726.30902100]
[564.50903320 737.14135742]
[549.14868164 739.34112549]
[535.44464111 732.06237793]
[528.66644287 718.10406494]
[531.42047119 702.83331299]
[520.94903564 692.09320068]
[510.47766113 681.35308838]
[500.00625610 670.61297607]
[501.76217651 685.50982666]
[495.26718140 699.03076172]
[482.54110718 706.97100830]
[467.54150391 706.86126709]
[454.93295288 698.73571777]
[448.63644409 685.12127686]
[450.61007690 670.25164795]
[460.24008179 658.75109863]
[474.53173828 654.19598389]
[489.04226685 658.00390625]
[479.86068726 646.14227295]
[470.67907715 634.28063965]
[461.49749756 622.41900635]
[452.31591797 610.55737305]
[443.13430786 598.69573975]
[437.32128906 599.74414062]
[431.40524292 599.13763428]
[425.85119629 596.90155029]
[421.10186768 593.19012451]
[417.54241943 588.27606201]
[415.46926880 582.53070068]
[415.06552124 576.39575195]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 202]
[2 201]
[3 200]
[4 199]
[5 198]
[6 197]
[8 194]
[9 193]
[10 192]
[11 191]
[12 190]
[14 186]
[15 185]
[16 184]
[17 183]
[18 182]
[22 179]
[23 178]
[24 177]
[25 176]
[26 175]
[27 174]
[28 173]
[29 172]
[31 169]
[32 168]
[33 167]
[34 166]
[35 165]
[36 164]
[37 100]
[38 99]
[39 98]
[40 97]
[41 96]
[42 95]
[44 93]
[45 92]
[46 91]
[47 90]
[48 89]
[49 88]
[50 85]
[51 84]
[52 75]
[53 74]
[54 73]
[55 72]
[56 71]
[57 70]
[58 67]
[59 66]
[103 135]
[104 134]
[105 133]
[108 131]
[109 130]
[111 128]
[112 127]
[113 126]
[114 125]
[115 124]
[116 122]
[136 150]
[137 149]
[138 148]
[139 147]
[152 163]
[153 162]
[154 161]
[155 160]
[204 240]
[205 239]
[206 238]
[207 237]
[208 236]
[209 235]
[210 225]
[211 224]
[212 223]
[213 222]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
