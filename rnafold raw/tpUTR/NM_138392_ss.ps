%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 14:58:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAACGCAGCUGCCAUGAUGCCUUGGGAUGCCCUGGUCCUGGGGGACUCAGGUGCCUCCCUGAUUCCUGUGGGAACCCCGGGUUCAGGGCCAGGGCCUCCUUGGAAUAAAUGGUUAUUGUUACUAGGUCCCCACCUUCCCUCUUUUCUGGAAGCCAAAGUCACCCUCCCCAAUAAAGUCCUCACUGCCAACA\
) } def
/len { sequence length } bind def

/coor [
[75.81297302 227.65599060]
[64.36817932 217.49356079]
[58.96788788 203.17239380]
[60.85305023 187.98342896]
[69.59046936 175.41696167]
[83.17234039 168.36067200]
[83.17234039 153.36067200]
[83.17234039 138.36067200]
[83.17234039 123.36067200]
[83.64254761 114.46403503]
[86.95267487 107.15386963]
[92.38192749 102.18264008]
[79.07833099 95.25340271]
[65.77473450 88.32416534]
[52.47114182 81.39492798]
[39.16754532 74.46569061]
[25.32005119 83.48795319]
[8.90637302 84.29562378]
[-5.59343576 76.76295471]
[-14.26941299 63.02777863]
[-14.83590603 46.88571167]
[-28.25052643 40.17393494]
[-40.72217560 43.50210953]
[-51.76174927 37.62380219]
[-55.70010376 26.17627144]
[-69.00370026 19.24703407]
[-82.30729675 12.31779766]
[-95.61089325 5.38856077]
[-111.42459106 5.87584448]
[-119.13825226 -6.86576891]
[-132.44184875 -13.79500580]
[-145.74545288 -20.72424316]
[-159.04904175 -27.65348053]
[-172.35264587 -34.58271790]
[-185.65623474 -41.51195526]
[-198.95983887 -48.44119263]
[-212.26342773 -55.37042999]
[-225.56701660 -62.29966354]
[-238.87062073 -69.22890472]
[-252.17420959 -76.15814209]
[-265.47781372 -83.08737946]
[-278.78140259 -90.01661682]
[-292.82983398 -95.27416992]
[-307.41394043 -98.78178406]
[-321.99807739 -102.28940582]
[-336.58218384 -105.79701996]
[-351.80905151 -101.50128174]
[-362.37417603 -112.00022125]
[-376.95828247 -115.50783539]
[-391.54241943 -119.01545715]
[-406.12652588 -122.52307129]
[-420.71066284 -126.03068542]
[-434.05682373 -117.56573486]
[-449.46115112 -121.09876251]
[-457.78451538 -134.53367615]
[-454.08883667 -149.89979553]
[-440.56665039 -158.08065796]
[-425.24047852 -154.22271729]
[-417.20303345 -140.61480713]
[-402.61892700 -137.10719299]
[-388.03479004 -133.59957886]
[-373.45068359 -130.09196472]
[-358.86654663 -126.58434296]
[-344.68283081 -131.13096619]
[-333.07458496 -120.38114166]
[-318.49044800 -116.87352753]
[-303.90634155 -113.36590576]
[-289.32220459 -109.85829163]
[-281.43759155 -122.61967468]
[-273.55368042 -135.37991333]
[-283.21624756 -146.85313416]
[-292.87884521 -158.32633972]
[-302.54141235 -169.79954529]
[-317.36926270 -178.01971436]
[-313.57510376 -194.54365540]
[-296.64660645 -195.47206116]
[-291.06820679 -179.46212769]
[-281.40563965 -167.98892212]
[-271.74304199 -156.51570129]
[-262.08047485 -145.04249573]
[-258.42926025 -131.51937866]
[-259.50988770 -119.18935394]
[-264.41159058 -109.45455933]
[-271.85217285 -103.32021332]
[-258.54858398 -96.39097595]
[-245.24497986 -89.46173859]
[-231.94139099 -82.53250122]
[-218.63778687 -75.60326385]
[-205.33419800 -68.67402649]
[-192.03059387 -61.74478912]
[-178.72700500 -54.81555176]
[-165.42340088 -47.88631439]
[-152.11981201 -40.95707703]
[-138.81620789 -34.02783966]
[-125.51261139 -27.09860229]
[-112.20901489 -20.16936493]
[-97.34687805 -21.15227509]
[-88.68165588 -7.91503525]
[-75.37805939 -0.98579842]
[-62.07446289 5.94343853]
[-48.77086639 12.87267590]
[-31.31203651 11.16103172]
[-21.53874969 26.75931358]
[-8.12412930 33.47109222]
[2.76161647 25.21041107]
[16.20977020 22.43570328]
[29.60466576 25.74491119]
[40.31583786 34.54695511]
[46.21455765 47.16638947]
[46.09678268 61.16209412]
[59.40037918 68.09133148]
[72.70397186 75.02056885]
[86.00756836 81.94980621]
[99.31116486 88.87904358]
[113.89528656 92.38665771]
[128.89479065 92.26457977]
[143.89430237 92.14249420]
[158.89379883 92.02041626]
[173.89329529 91.89833069]
[179.43334961 78.88753510]
[189.48544312 69.00295258]
[202.50718689 63.71491241]
[216.51815796 63.79199219]
[229.40100098 69.18949127]
[239.22148132 79.06118774]
[244.51879883 91.89183807]
[259.51831055 92.01392365]
[274.51782227 92.13600159]
[280.85360718 76.51346588]
[292.67343140 64.54429626]
[308.14746094 58.04129410]
[324.89553833 57.97415924]
[340.35327148 64.32498169]
[352.16458130 76.09529877]
[358.54098511 91.46299744]
[373.53649902 91.09678650]
[388.53204346 90.73057556]
[403.52755737 90.36436462]
[418.52310181 89.99815369]
[426.45639038 76.76689911]
[440.29379272 69.94561005]
[455.61981201 71.71095276]
[467.54400635 81.49959564]
[472.26135254 96.18802643]
[468.26663208 111.08921814]
[456.83447266 121.44825745]
[441.61288452 123.95960999]
[427.45901489 117.82191467]
[418.88931274 104.99368286]
[403.89376831 105.35989380]
[388.89825439 105.72610474]
[373.90270996 106.09231567]
[358.90719604 106.45852661]
[354.92816162 119.12266541]
[347.22384644 129.96066284]
[336.53399658 137.90754700]
[323.89263916 142.17712402]
[310.52792358 142.33975220]
[297.74288940 138.36550903]
[286.78836060 130.62850952]
[278.74063110 119.87167358]
[274.39572144 107.13550568]
[259.39620972 107.01342010]
[244.39672852 106.89134216]
[237.62721252 121.35859680]
[225.18331909 131.46496582]
[209.52192688 135.14978027]
[193.76376343 131.62670898]
[181.07157898 121.55088806]
[174.01538086 106.89783478]
[159.01588440 107.01992035]
[144.01637268 107.14199829]
[129.01687622 107.26407623]
[114.01737213 107.38616180]
[127.23920441 114.47016907]
[141.94941711 117.40439606]
[152.26275635 128.29635620]
[154.39044189 143.14469910]
[147.55081177 156.49458313]
[134.25653076 163.44168091]
[119.39151764 161.43385315]
[108.41670990 151.20870972]
[105.36372375 136.52441406]
[98.17234039 123.36067200]
[98.17234039 138.36067200]
[98.17234039 153.36067200]
[98.17234039 168.36067200]
[111.75421906 175.41696167]
[120.49163818 187.98342896]
[122.37680054 203.17239380]
[116.97650909 217.49356079]
[105.53171539 227.65599060]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 187]
[7 186]
[8 185]
[9 184]
[12 114]
[13 113]
[14 112]
[15 111]
[16 110]
[21 104]
[22 103]
[25 101]
[26 100]
[27 99]
[28 98]
[30 96]
[31 95]
[32 94]
[33 93]
[34 92]
[35 91]
[36 90]
[37 89]
[38 88]
[39 87]
[40 86]
[41 85]
[42 84]
[43 68]
[44 67]
[45 66]
[46 65]
[48 63]
[49 62]
[50 61]
[51 60]
[52 59]
[70 80]
[71 79]
[72 78]
[73 77]
[115 174]
[116 173]
[117 172]
[118 171]
[119 170]
[126 164]
[127 163]
[128 162]
[135 153]
[136 152]
[137 151]
[138 150]
[139 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
