%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 05:05:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGCCAGAGGGACGCCGCAGCUGGGACCAGGCACGCGGCCCAUGGGGCUGGGCCCCUGCUGGCCGCCACUCUCCGGGCUCUCCUUUCAAAAAGCCACGUCGUGCUGCUGCUGGAAGCCAACAGCCUCCGGCCAGCAGCCCUACCCGGGGCUCAACACACAGGCUGUGGCUCUGGACAUCCGGAUAUUAAAAGGAGCGUUGCUGGAA\
) } def
/len { sequence length } bind def

/coor [
[-136.17814636 261.77554321]
[-152.94955444 253.53387451]
[-165.78628540 261.29394531]
[-178.62300110 269.05401611]
[-191.45971680 276.81408691]
[-204.29643250 284.57415771]
[-217.13316345 292.33422852]
[-229.96987915 300.09426880]
[-242.74761963 307.95108032]
[-255.46568298 315.90411377]
[-268.18374634 323.85717773]
[-280.90179443 331.81024170]
[-284.33767700 337.46322632]
[-289.35934448 340.13031006]
[-294.12625122 339.80471802]
[-307.07870483 347.37002563]
[-320.03115845 354.93533325]
[-325.86477661 361.96743774]
[-333.23687744 362.51538086]
[-346.30212402 369.88421631]
[-359.36737061 377.25302124]
[-372.43258667 384.62185669]
[-385.49783325 391.99066162]
[-398.33456421 399.75073242]
[-410.93103027 407.89495850]
[-423.52752686 416.03918457]
[-429.03662109 423.32833862]
[-436.37634277 424.20965576]
[-449.09439087 432.16268921]
[-450.03723145 447.65109253]
[-459.92980957 459.60586548]
[-474.96826172 463.43014526]
[-489.36996460 457.65338135]
[-497.59716797 444.49691772]
[-496.48635864 429.01965332]
[-486.46466064 417.17291260]
[-471.38562012 413.51202393]
[-457.04745483 419.44464111]
[-444.32940674 411.49157715]
[-431.67175293 403.44271851]
[-419.07528687 395.29849243]
[-406.47879028 387.15423584]
[-405.75997925 384.44244385]
[-403.92239380 381.85232544]
[-401.00714111 379.81195068]
[-397.20953369 378.72647095]
[-392.86666870 378.92541504]
[-379.80142212 371.55661011]
[-366.73617554 364.18777466]
[-353.67092896 356.81896973]
[-340.60568237 349.45013428]
[-327.59646606 341.98287964]
[-314.64401245 334.41757202]
[-301.69155884 326.85226440]
[-288.85482788 319.09219360]
[-276.13677979 311.13912964]
[-263.41873169 303.18606567]
[-250.70068359 295.23300171]
[-246.69522095 289.01977539]
[-237.72994995 287.25756836]
[-224.89321899 279.49749756]
[-212.05650330 271.73742676]
[-199.21978760 263.97735596]
[-186.38307190 256.21728516]
[-173.54634094 248.45722961]
[-160.70962524 240.69715881]
[-161.88386536 229.59942627]
[-158.81687927 218.81608582]
[-151.91516113 209.91630554]
[-142.14602661 204.20996094]
[-130.90222168 202.55493164]
[-119.80338287 205.22834778]
[-110.46273041 211.88101196]
[-97.28768921 204.71035767]
[-84.11264801 197.53971863]
[-70.93759918 190.36906433]
[-57.76255798 183.19841003]
[-44.69731903 175.82958984]
[-31.74486160 168.26428223]
[-24.65723419 155.16409302]
[-8.83848953 154.88507080]
[4.11396790 147.31976318]
[17.06642532 139.75445557]
[30.01888084 132.18914795]
[42.97134018 124.62384033]
[55.92379761 117.05854034]
[68.87625122 109.49323273]
[67.14842224 93.94905853]
[72.93506622 78.97962189]
[85.28200531 68.09748077]
[101.65370941 64.03926849]
[118.44953156 68.08545685]
[131.79530334 79.69007874]
[143.02296448 69.74323273]
[154.25062561 59.79639435]
[165.47828674 49.84955597]
[176.70594788 39.90271759]
[187.93360901 29.95587730]
[199.08583069 19.92453003]
[210.16198730 9.80925179]
[221.23812866 -0.30602780]
[232.23757935 -10.50466442]
[243.15969849 -20.78607559]
[254.08180237 -31.06748581]
[249.55958557 -53.29934311]
[262.61779785 -73.73718262]
[287.73599243 -79.71662903]
[295.30130005 -92.66908264]
[302.86660767 -105.62154388]
[310.43191528 -118.57399750]
[317.89920044 -131.58322144]
[325.26800537 -144.64845276]
[332.63684082 -157.71369934]
[340.00564575 -170.77894592]
[347.37448120 -183.84417725]
[347.41455078 -199.66534424]
[360.40621948 -206.95001221]
[367.77502441 -220.01524353]
[364.86935425 -235.79296875]
[375.50155640 -247.80696106]
[391.51550293 -246.84112549]
[400.62667847 -233.63635254]
[395.84576416 -218.32221985]
[380.84027100 -212.64643860]
[373.47143555 -199.58119202]
[373.95843506 -184.69454956]
[360.43972778 -176.47535706]
[353.07089233 -163.41012573]
[345.70208740 -150.34487915]
[338.33325195 -137.27964783]
[330.96444702 -124.21440125]
[330.41650391 -116.84231567]
[323.38436890 -111.00869751]
[315.81906128 -98.05623627]
[308.25375366 -85.10378265]
[300.68847656 -72.15132141]
[310.29165649 -60.62836075]
[324.39562988 -65.73500061]
[338.49960327 -70.84163666]
[352.60360718 -75.94828033]
[366.70758057 -81.05491638]
[380.81155396 -86.16156006]
[390.95413208 -99.04799652]
[407.14456177 -96.43999481]
[412.72753906 -81.02044678]
[401.95974731 -68.65165710]
[385.91818237 -72.05757904]
[371.81420898 -66.95094299]
[357.71023560 -61.84429932]
[343.60626221 -56.73765945]
[329.50228882 -51.63101959]
[315.39828491 -46.52437973]
[312.63400269 -34.17028809]
[305.85888672 -23.92649841]
[296.18521118 -16.98982430]
[285.03948975 -14.05412960]
[273.95535278 -15.24689198]
[264.36322021 -20.14537239]
[253.44110107 -9.86396122]
[242.51899719 0.41745037]
[239.80262756 7.29271984]
[231.35340881 10.77012348]
[220.27726746 20.88540268]
[209.20111084 31.00068283]
[206.38122559 37.83414078]
[197.88044739 41.18353653]
[186.65278625 51.13037872]
[175.42512512 61.07721710]
[164.19746399 71.02405548]
[152.96980286 80.97089386]
[141.74214172 90.91773987]
[142.30839539 105.90704346]
[154.25451660 114.97843933]
[166.20063782 124.04982758]
[178.14675903 133.12121582]
[194.47525024 134.64193726]
[201.07572937 149.65411377]
[191.15818787 162.71453857]
[174.92494202 160.38774109]
[169.07537842 145.06735229]
[157.12924194 135.99595642]
[145.18312073 126.92456055]
[133.23699951 117.85316467]
[126.74432373 125.54973602]
[118.59178162 131.11439514]
[109.43474579 134.22802734]
[99.97664642 134.76322937]
[90.91516876 132.78656006]
[82.89079285 128.54603577]
[76.44155884 122.44568634]
[63.48910141 130.01100159]
[50.53664398 137.57629395]
[37.58418655 145.14160156]
[24.63173103 152.70690918]
[11.67927361 160.27221680]
[-1.27318323 167.83752441]
[-9.28725624 181.47883606]
[-24.17955589 181.21673584]
[-37.13201141 188.78204346]
[-40.73707581 194.32867432]
[-45.83701324 196.84288025]
[-50.59190750 196.37345886]
[-63.76695251 203.54409790]
[-76.94199371 210.71475220]
[-90.11703491 217.88540649]
[-103.29208374 225.05606079]
[-104.96070862 244.12059021]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 66]
[3 65]
[4 64]
[5 63]
[6 62]
[7 61]
[8 60]
[9 58]
[10 57]
[11 56]
[12 55]
[15 54]
[16 53]
[17 52]
[19 51]
[20 50]
[21 49]
[22 48]
[23 47]
[24 42]
[25 41]
[26 40]
[28 39]
[29 38]
[73 206]
[74 205]
[75 204]
[76 203]
[77 202]
[78 199]
[79 198]
[81 196]
[82 195]
[83 194]
[84 193]
[85 192]
[86 191]
[87 190]
[93 171]
[94 170]
[95 169]
[96 168]
[97 167]
[98 166]
[99 164]
[100 163]
[101 162]
[102 160]
[103 159]
[104 158]
[107 136]
[108 135]
[109 134]
[110 133]
[111 131]
[112 130]
[113 129]
[114 128]
[115 127]
[117 125]
[118 124]
[137 152]
[138 151]
[139 150]
[140 149]
[141 148]
[142 147]
[172 183]
[173 182]
[174 181]
[175 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
