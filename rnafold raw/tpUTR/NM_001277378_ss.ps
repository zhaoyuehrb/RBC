%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 11:13:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCUGGGGAAGAGGGUAGGAGCUGGAACUUGACAGUUCCAAACUCCAGAAUAGGGGGCAGGGGAGGGGCUCACUCGUUCUCGCAGUGCAGCCCGGCCUCGCCUUCCAAAGGGCCAGGCCGAGCUGACCUGUCUGCACCGAGUCCGGCUUGGCCGUGGGGCCCUGAAUGCGGACACGUCAGUUUUGUGUUAAAUAAAAGAAAG\
) } def
/len { sequence length } bind def

/coor [
[240.63116455 138.57608032]
[239.89945984 131.83195496]
[225.13638306 129.17643738]
[210.37332153 126.52093506]
[198.32772827 135.20651245]
[183.31803894 132.72375488]
[174.28947449 120.03034210]
[159.52641296 117.37483978]
[144.76333618 114.71932983]
[130.00025940 112.06381989]
[115.23719025 109.40830994]
[126.88876343 118.85504913]
[129.19779968 133.67626953]
[120.97212219 146.21972656]
[106.45869446 150.00921631]
[93.15081024 143.08821106]
[87.91936493 129.03004456]
[93.46676636 115.09147644]
[81.88542175 124.62418365]
[70.30408478 134.15689087]
[58.72274780 143.68960571]
[47.14141083 153.22232056]
[35.56007004 162.75503540]
[23.97873306 172.28775024]
[25.04909325 187.76786804]
[16.78753281 200.90278625]
[2.37078929 206.64187622]
[-12.65760517 202.77832031]
[-22.51892662 190.79776001]
[-23.42129326 175.30694580]
[-15.01773071 162.26242065]
[-0.53957713 156.68005371]
[14.44602108 160.70640564]
[26.02735901 151.17369080]
[37.60869598 141.64099121]
[49.19003677 132.10827637]
[60.77137375 122.57556152]
[72.35271454 113.04284668]
[83.93405151 103.51013184]
[81.26616669 96.50068665]
[66.45755768 94.11217499]
[75.93040466 82.48178101]
[73.26251984 75.47233582]
[58.27374649 76.05252838]
[43.28496933 76.63272858]
[28.29619598 77.21292877]
[17.74679565 88.98092651]
[1.96167934 89.75916290]
[-9.69412327 79.08593750]
[-10.30543232 63.29347610]
[0.49043223 51.75116730]
[16.28847504 51.30686188]
[27.71599579 62.22415161]
[42.70477295 61.64395523]
[57.69354630 61.06375504]
[72.68231964 60.48355865]
[78.76922607 46.77408981]
[69.14718628 35.26686096]
[61.23626328 30.68701172]
[59.46694946 23.50629234]
[50.02413940 11.85153770]
[40.58132553 0.19678329]
[31.13851357 -11.45797062]
[15.66509056 -13.24987888]
[6.25476265 -25.20397377]
[8.05842972 -39.94447327]
[-1.38438213 -51.59922791]
[-10.82719421 -63.25398254]
[-20.27000618 -74.90873718]
[-29.71281815 -86.56349182]
[-39.24553299 -98.14482880]
[-48.86757278 -109.65206146]
[-58.48961258 -121.15928650]
[-68.11165619 -132.66651917]
[-77.82244873 -144.09895325]
[-87.62141418 -155.45590210]
[-103.27688599 -160.33833313]
[-106.61183929 -176.39480591]
[-94.19554901 -187.10778809]
[-78.80084229 -181.45668030]
[-76.26446533 -165.25486755]
[-66.46549988 -153.89791870]
[-59.71142960 -150.88531494]
[-56.60442734 -142.28855896]
[-46.98238373 -130.78132629]
[-37.36034393 -119.27410126]
[-27.73830223 -107.76686859]
[-21.03166008 -104.65011597]
[-18.05806541 -96.00630188]
[-8.61525249 -84.35154724]
[0.82755977 -72.69679260]
[10.27037239 -61.04204178]
[19.71318436 -49.38728714]
[34.50724411 -48.09444809]
[44.24962234 -36.40938568]
[42.79326630 -20.90078354]
[52.23608017 -9.24602890]
[61.67889404 2.40872526]
[71.12170410 14.06347942]
[80.65441895 25.64481735]
[90.27645874 37.15204620]
[117.89270020 94.64523315]
[132.65577698 97.30074310]
[147.41883850 99.95625305]
[162.18191528 102.61176300]
[176.94499207 105.26727295]
[189.83096313 96.51574707]
[204.76499939 99.41911316]
[213.02882385 111.75785828]
[227.79190063 114.41336823]
[242.55496216 117.06887817]
[258.25897217 98.30245209]
[281.93890381 92.60148621]
[304.25381470 102.07553101]
[316.48397827 122.87538910]
[330.10083008 114.81984711]
[343.00427246 122.25964355]
[358.00021362 121.91146851]
[371.61709595 113.85592651]
[384.52053833 121.29572296]
[399.51647949 120.94754791]
[414.51245117 120.59937286]
[429.50839233 120.25119781]
[444.50436401 119.90302277]
[459.50030518 119.55484772]
[474.49627686 119.20667267]
[489.49224854 118.85849762]
[503.10910034 110.80295563]
[516.01251221 118.24275208]
[531.00848389 117.89457703]
[546.00445557 117.54640198]
[561.00042725 117.19822693]
[575.99633789 116.85005188]
[590.99230957 116.50187683]
[605.98828125 116.15370178]
[620.98425293 115.80552673]
[635.74731445 113.15001678]
[649.92462158 108.25064850]
[664.10192871 103.35128021]
[674.43231201 90.61488342]
[690.58276367 93.45990753]
[695.93914795 108.95962524]
[684.99121094 121.16926575]
[669.00128174 117.52858734]
[654.82397461 122.42796326]
[640.64666748 127.32733154]
[641.51525879 134.77687073]
[655.28692627 140.72172546]
[643.25238037 149.67594910]
[644.12091064 157.12547302]
[659.04510498 158.63183594]
[673.96929932 160.13818359]
[688.89343262 161.64453125]
[703.61688232 154.42289734]
[717.08007812 163.78637695]
[715.43322754 180.10261536]
[700.37048340 186.58688354]
[687.38708496 176.56869507]
[672.46295166 175.06234741]
[657.53875732 173.55599976]
[642.61456299 172.04965210]
[633.02239990 166.89242554]
[625.74206543 160.10459900]
[620.99310303 152.39797974]
[618.80566406 144.49728394]
[619.02593994 137.09371948]
[621.33239746 130.80148315]
[606.33648682 131.14965820]
[591.34051514 131.49783325]
[576.34454346 131.84600830]
[561.34857178 132.19418335]
[546.35260010 132.54235840]
[531.35668945 132.89053345]
[516.36071777 133.23870850]
[503.81646729 141.26934814]
[489.84042358 133.85446167]
[474.84445190 134.20263672]
[459.84848022 134.55081177]
[444.85253906 134.89898682]
[429.85656738 135.24716187]
[414.86062622 135.59533691]
[399.86465454 135.94351196]
[384.86871338 136.29168701]
[372.32446289 144.32231140]
[358.34838867 136.90742493]
[343.35244751 137.25559998]
[330.80819702 145.28623962]
[316.83215332 137.87135315]
[315.15814209 144.32290649]
[312.39105225 150.39474487]
[308.61187744 155.90298462]
[303.93231201 160.68034363]
[298.49133301 164.58122253]
[292.45132446 167.48608398]
[285.99298096 169.30519104]
[279.31002808 169.98129272]
[272.60345459 169.49150085]
[266.07528687 167.84800720]
[259.92269897 165.09780884]
[254.33198547 161.32135010]
[249.47288513 156.63020325]
[245.49345398 151.16377258]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 111]
[3 110]
[4 109]
[7 106]
[8 105]
[9 104]
[10 103]
[11 102]
[18 39]
[19 38]
[20 37]
[21 36]
[22 35]
[23 34]
[24 33]
[43 56]
[44 55]
[45 54]
[46 53]
[57 101]
[58 100]
[60 99]
[61 98]
[62 97]
[63 96]
[66 93]
[67 92]
[68 91]
[69 90]
[70 89]
[71 87]
[72 86]
[73 85]
[74 84]
[75 82]
[76 81]
[115 188]
[117 186]
[118 185]
[120 183]
[121 182]
[122 181]
[123 180]
[124 179]
[125 178]
[126 177]
[127 176]
[129 174]
[130 173]
[131 172]
[132 171]
[133 170]
[134 169]
[135 168]
[136 167]
[137 146]
[138 145]
[139 144]
[150 161]
[151 160]
[152 159]
[153 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
