%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 16:59:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACAAUCAGGCUACCAGAGGAAGCCUUUGGUCCUAACGAGAAGAGAUAAUUACAAUCAGGCUACCAAAGGAAGCACUAACUUUGGUGCUUUCAAGUUGGCAAGGAGUGCAUUUAAUAGUCAAUAAAUUCAUCUACCAUUCCAGAUUAUUAAAGGCCCACUGGUUGUUCCACU\
) } def
/len { sequence length } bind def

/coor [
[-1.36493134 308.97155762]
[-13.72582054 318.67636108]
[-27.64430618 325.96557617]
[-42.65407944 330.59655762]
[-58.25256348 332.41564941]
[-73.91770935 331.36334229]
[-89.12551117 327.47625732]
[-103.36749268 320.88571167]
[-116.16772461 311.81344604]
[-126.86964417 322.32385254]
[-137.57156372 332.83428955]
[-139.72314453 339.14498901]
[-144.09556580 342.84313965]
[-148.85472107 343.52224731]
[-159.92910767 353.63946533]
[-171.00350952 363.75665283]
[-182.07789612 373.87387085]
[-193.15229797 383.99105835]
[-204.22668457 394.10827637]
[-215.30108643 404.22546387]
[-226.37548828 414.34268188]
[-233.99127197 429.48980713]
[-250.65472412 426.36480713]
[-252.26473999 409.48748779]
[-236.49267578 403.26828003]
[-225.41828918 393.15106201]
[-214.34388733 383.03387451]
[-203.26950073 372.91665649]
[-192.19509888 362.79946899]
[-181.12071228 352.68225098]
[-170.04631042 342.56506348]
[-158.97192383 332.44784546]
[-148.08198547 322.13235474]
[-137.38006592 311.62194824]
[-126.67814636 301.11154175]
[-134.82693481 289.36914062]
[-140.91397095 276.43389893]
[-144.76934814 262.66455078]
[-146.28501892 248.44313049]
[-145.41792297 234.16444397]
[-142.19111633 220.22503662]
[-136.69323730 207.01219177]
[-129.07598877 194.89318848]
[-119.55004120 184.20506287]
[-108.37916565 175.24528503]
[-95.87290192 168.26339722]
[-82.37804413 163.45419312]
[-68.26895142 160.95211792]
[-53.93723679 160.82765198]
[-39.78083801 163.08526611]
[-26.19300079 167.66325378]
[-13.55134487 174.43545532]
[-2.20737171 183.21472168]
[8.86702347 173.09751892]
[19.94141769 162.98031616]
[31.01581192 152.86311340]
[42.09020615 142.74591064]
[53.16460419 132.62870789]
[64.23899841 122.51150513]
[75.31339264 112.39430237]
[72.66885376 104.00697327]
[72.79454041 95.21351624]
[75.67771912 86.90519714]
[81.02614594 79.92414093]
[88.29772186 74.97792816]
[85.87098694 60.17553329]
[83.44425964 45.37313461]
[81.01753235 30.57073593]
[67.54510498 15.60600853]
[75.06918335 -2.18442392]
[72.10963440 -16.88956070]
[69.15008545 -31.59469795]
[66.19053650 -46.29983521]
[63.23098373 -61.00497437]
[60.27143478 -75.71011353]
[57.31188202 -90.41524506]
[54.35233307 -105.12038422]
[51.39278412 -119.82552338]
[48.43323135 -134.53065491]
[37.19262314 -146.47137451]
[42.17176819 -162.09635925]
[58.24855042 -165.33197021]
[68.88455200 -152.84968567]
[63.13837051 -137.49020386]
[66.09792328 -122.78507233]
[69.05747223 -108.07993317]
[72.01702118 -93.37479401]
[74.97657013 -78.66966248]
[77.93611908 -63.96452332]
[80.89566803 -49.25938416]
[83.85522461 -34.55424881]
[86.81477356 -19.84911156]
[89.77432251 -5.14397430]
[98.79203796 -0.24920350]
[103.71366882 9.00383091]
[102.69012451 19.65528488]
[95.81993103 28.14400673]
[98.24665833 42.94640350]
[100.67338562 57.74880219]
[103.10012054 72.55120087]
[111.08234406 74.69725037]
[118.07228088 79.10885620]
[123.44406891 85.39099884]
[126.71673584 92.98120117]
[141.71429443 93.25201416]
[146.33915710 90.68586731]
[151.01536560 90.22087097]
[154.92610168 91.51922607]
[157.51055908 93.96550751]
[172.47146606 95.04787445]
[186.79396057 88.32653809]
[198.92976379 96.96203613]
[213.89065552 98.04440308]
[228.85154724 99.12677002]
[243.81245422 100.20913696]
[258.77334595 101.29150391]
[273.73425293 102.37387085]
[288.69515991 103.45623779]
[303.65603638 104.53860474]
[318.61694336 105.62097168]
[333.57785034 106.70333099]
[338.51440430 92.44525909]
[346.97384644 79.95124054]
[358.37933350 70.07313538]
[371.95327759 63.48445511]
[386.77014160 60.63442612]
[401.81973267 61.71736908]
[416.07589722 66.65943909]
[428.56665039 75.12368774]
[438.44033813 86.53300476]
[445.02377319 100.10948181]
[447.86807251 114.92745972]
[446.77932739 129.97660828]
[441.83175659 144.23086548]
[433.36270142 156.71835327]
[421.94955444 166.58764648]
[408.37054443 173.16584778]
[393.55148315 176.00442505]
[378.50274658 174.90986633]
[364.25039673 169.95678711]
[351.76617432 161.48289490]
[341.90130615 150.06594849]
[335.32833862 136.48440552]
[332.49548340 121.66423035]
[317.53457642 120.58186340]
[302.57366943 119.49950409]
[287.61279297 118.41713715]
[272.65188599 117.33477020]
[257.69097900 116.25240326]
[242.73008728 115.17003632]
[227.76918030 114.08766937]
[212.80828857 113.00530243]
[197.84739685 111.92293549]
[184.59498596 118.72169495]
[171.38909912 110.00877380]
[156.42819214 108.92640686]
[141.44348145 108.24957275]
[126.44592285 107.97875977]
[109.75948334 125.84182739]
[85.43059540 123.46869659]
[74.35620117 133.58590698]
[63.28180313 143.70309448]
[52.20740891 153.82029724]
[41.13301468 163.93750000]
[30.05862045 174.05470276]
[18.98422432 184.17190552]
[7.90983009 194.28910828]
[16.27561569 207.62814331]
[22.07042313 222.26435852]
[25.10164070 237.70755005]
[25.26919174 253.44079590]
[22.56883240 268.93765259]
[17.09225464 283.67993164]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 35]
[10 34]
[11 33]
[14 32]
[15 31]
[16 30]
[17 29]
[18 28]
[19 27]
[20 26]
[21 25]
[53 167]
[54 166]
[55 165]
[56 164]
[57 163]
[58 162]
[59 161]
[60 160]
[65 100]
[66 99]
[67 98]
[68 97]
[70 93]
[71 92]
[72 91]
[73 90]
[74 89]
[75 88]
[76 87]
[77 86]
[78 85]
[79 84]
[104 158]
[105 157]
[109 156]
[110 155]
[112 153]
[113 152]
[114 151]
[115 150]
[116 149]
[117 148]
[118 147]
[119 146]
[120 145]
[121 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
