%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 11:50:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAAUGGGAUGUCACCUACCAAAAUCCAAAUCCUCCAGGAAAAACUACUACACUAAAUGGACCAGGAACCUCAGAGUCAAGAUCCAAGAGAAGAACAUCUGUUACAACUUUUCCUACCCAGUUUAGCAAAACACCUGUUUUAUGCAACAAUACAUCACAACAGGCCACCCCCAA\
) } def
/len { sequence length } bind def

/coor [
[82.14408112 250.31552124]
[67.11255646 254.62683105]
[52.84759521 248.22019958]
[46.08467102 234.12066650]
[50.01703262 218.98559570]
[62.78794098 209.96128845]
[63.85802841 194.99951172]
[64.92811584 180.03773499]
[65.99820709 165.07594299]
[60.20062637 160.31799316]
[52.08847427 172.93516541]
[43.97632599 185.55233765]
[35.86417389 198.16950989]
[27.75202370 210.78668213]
[19.63987350 223.40385437]
[11.52772236 236.02102661]
[10.27359009 250.96850586]
[1.46920955 263.11276245]
[-12.34723949 268.95275879]
[-27.19267273 266.80493164]
[-38.78735733 257.28848267]
[-43.78871536 243.14682007]
[-40.75492477 228.45681763]
[-30.56058311 217.45338440]
[-16.14733315 213.30868530]
[-5.35519981 202.89093018]
[5.43693399 192.47315979]
[16.22906876 182.05538940]
[27.02120209 171.63763428]
[37.81333542 161.21986389]
[48.60546875 150.80209351]
[42.80789185 146.04414368]
[28.34235954 150.01257324]
[13.87682819 153.98100281]
[2.74123096 166.01969910]
[-13.19041729 162.13195801]
[-17.52900314 146.31712341]
[-5.81136131 134.84416199]
[9.90840340 139.51547241]
[24.37393379 135.54704285]
[38.83946609 131.57861328]
[35.10327148 121.60772705]
[32.96955490 111.24418640]
[32.46949768 100.74216461]
[33.59447861 90.35598755]
[36.29676056 80.33396912]
[40.49115753 70.91251373]
[46.05755234 62.31048203]
[52.84425735 54.72417450]
[60.67208862 48.32282257]
[69.33905029 43.24485779]
[78.62553406 39.59494019]
[88.29986572 37.44187546]
[98.12408447 36.81740952]
[99.46105194 21.87711143]
[100.79802704 6.93681383]
[102.13499451 -8.00348473]
[103.47196198 -22.94378281]
[104.67554474 -37.89542007]
[105.74562836 -52.85720062]
[106.81571960 -67.81898499]
[96.87049866 -76.93101501]
[94.04067993 -89.91992188]
[99.14251709 -101.98432922]
[110.10202026 -108.79629517]
[111.43898773 -123.73659515]
[112.77595520 -138.67689514]
[114.11293030 -153.61718750]
[115.44989777 -168.55749512]
[102.34999847 -161.25047302]
[88.40101624 -166.76643372]
[83.84149933 -181.05667114]
[92.01812744 -193.63215637]
[106.92926788 -195.26248169]
[117.63065338 -184.74960327]
[120.29395294 -199.51126099]
[122.95725250 -214.27293396]
[125.62055206 -229.03460693]
[115.05886841 -240.24874878]
[113.14793396 -255.35510254]
[120.41265869 -268.53414917]
[133.88348389 -274.83297729]
[136.54678345 -289.59463501]
[139.21008301 -304.35629272]
[137.41749573 -309.32757568]
[137.70411682 -314.01440430]
[139.60719299 -317.66598511]
[142.43133545 -319.82766724]
[145.88092041 -334.42562866]
[149.33050537 -349.02359009]
[139.10920715 -360.69854736]
[137.73590088 -376.15472412]
[145.73864746 -389.44891357]
[160.04023743 -395.46923828]
[175.14141846 -391.90072632]
[185.23545837 -380.11557007]
[186.44102478 -364.64538574]
[178.29452515 -351.43881226]
[163.92846680 -345.57400513]
[160.47888184 -330.97604370]
[157.02928162 -316.37808228]
[153.97174072 -301.69299316]
[151.30845642 -286.93133545]
[148.64515686 -272.16967773]
[159.06542969 -261.56042480]
[161.26649475 -246.67355347]
[154.19692993 -233.18746948]
[140.38221741 -226.37130737]
[137.71891785 -211.60963440]
[135.05561829 -196.84797668]
[132.39231873 -182.08630371]
[130.39019775 -167.22052002]
[129.05322266 -152.28022766]
[127.71625519 -137.33992004]
[126.37928772 -122.39962769]
[125.04231262 -107.45932770]
[136.36587524 -95.04460144]
[135.19964600 -77.94374084]
[121.77749634 -66.74889374]
[120.70741272 -51.78711319]
[119.63732147 -36.82532883]
[122.30509949 -29.90680313]
[118.41226196 -21.60681343]
[117.07529449 -6.66651440]
[115.73831940 8.27378368]
[114.40135193 23.21408272]
[113.06438446 38.15438080]
[127.15045166 42.91749954]
[139.73408508 50.83942795]
[150.11891174 61.48178482]
[157.73030090 74.25564575]
[162.14701843 88.45413971]
[163.12467957 103.29154968]
[160.60916138 117.94682312]
[154.73968506 131.60894775]
[166.74780273 140.59811401]
[178.75592041 149.58728027]
[190.76403809 158.57644653]
[202.77215576 167.56561279]
[214.78027344 176.55477905]
[232.03041077 173.74206543]
[245.71809387 184.05935669]
[247.68516541 200.74705505]
[259.85183716 209.52046204]
[272.01846313 218.29385376]
[286.71624756 213.31842041]
[301.52145386 217.96447754]
[310.74114990 230.44552612]
[310.83023071 245.96234131]
[301.75439453 258.54840088]
[287.00350952 263.36410522]
[272.24957275 258.55770874]
[263.16580200 245.97738647]
[263.24508667 230.46051025]
[251.07843018 221.68710327]
[238.91177368 212.91371155]
[226.58668518 216.73545837]
[214.12802124 212.69065857]
[206.16479492 202.04609680]
[205.79110718 188.56289673]
[193.78298950 179.57373047]
[181.77487183 170.58456421]
[169.76675415 161.59539795]
[157.75863647 152.60623169]
[145.75051880 143.61706543]
[137.67153931 151.92047119]
[128.07986450 158.71522522]
[117.25952148 163.72517395]
[105.54499054 166.72802734]
[93.31088257 167.56460571]
[80.95998383 166.14602661]
[79.88990021 181.10781860]
[78.81980896 196.06959534]
[77.74972534 211.03137207]
[89.10634613 221.78131104]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 174]
[7 173]
[8 172]
[9 171]
[32 41]
[33 40]
[34 39]
[54 127]
[55 126]
[56 125]
[57 124]
[58 123]
[59 121]
[60 120]
[61 119]
[65 116]
[66 115]
[67 114]
[68 113]
[69 112]
[75 111]
[76 110]
[77 109]
[78 108]
[82 104]
[83 103]
[84 102]
[88 101]
[89 100]
[90 99]
[135 165]
[136 164]
[137 163]
[138 162]
[139 161]
[140 160]
[143 156]
[144 155]
[145 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
