%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 02:55:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGGUUGGAAUGGCCAGCUUAUGAAGGCAAAUUUCCACUCGCAUUAUUUAAUGAUGGAAGAUUCUGGGGGAGAGUUGUGGAUUUCAUAAAGCCAAACAUUUAAAGCUAGAGACGGGGGAGGCUUACCACUUUCCCCAAACAACAUAAAAGACAAUGUCCCUUCUUCAAAAGUGCCAAAAGGAAUGUAAAAUGCAAAAAUUAAAACAAUCUUAAACCACA\
) } def
/len { sequence length } bind def

/coor [
[99.41837311 138.94146729]
[98.77914429 123.95558929]
[91.28596497 124.27533722]
[82.33175659 136.30953979]
[73.37754059 148.34375000]
[71.34704590 164.03411865]
[57.54205322 169.62619019]
[48.58784103 181.66040039]
[39.63362885 193.69461060]
[30.67941856 205.72880554]
[21.72520828 217.76301575]
[25.18530655 236.39520264]
[14.11135960 251.37805176]
[-4.08086348 253.46437073]
[-12.68936157 265.74826050]
[-21.29785919 278.03213501]
[-18.76532936 293.40173340]
[-27.67055893 305.73669434]
[-42.33871460 308.05636597]
[-43.23465729 324.43099976]
[-57.98378754 331.60003662]
[-71.41346741 322.18856812]
[-69.70838928 305.87832642]
[-54.62259674 299.44784546]
[-57.44812012 284.86868286]
[-48.89286804 272.28845215]
[-33.58174133 269.42364502]
[-24.97324371 257.13977051]
[-16.36474609 244.85588074]
[-20.72769928 234.32330322]
[-19.45463181 222.87359619]
[-12.74659920 213.36076355]
[-2.17372680 208.21199036]
[9.69100285 208.80880737]
[18.64521408 196.77459717]
[27.59942436 184.74040222]
[36.55363464 172.70619202]
[45.50784683 160.67198181]
[46.89787674 145.84237671]
[61.34333801 139.38954163]
[70.29754639 127.35533142]
[79.25176239 115.32112885]
[71.53736115 102.45690918]
[56.70414352 104.68752289]
[41.87092209 106.91813660]
[27.03770638 109.14875031]
[12.20448780 111.37936401]
[-2.62873077 113.60997772]
[-17.39261436 121.94448853]
[-29.48845863 110.06480408]
[-21.42150116 95.15304565]
[-4.85934448 98.77675629]
[9.97387409 96.54614258]
[24.80709267 94.31552887]
[39.64030838 92.08491516]
[54.47352982 89.85430145]
[69.30674744 87.62368774]
[79.41217804 76.53855896]
[80.26464081 61.56280136]
[81.11710358 46.58704376]
[81.96956635 31.61128616]
[82.82202911 16.63552856]
[70.08495331 24.55808067]
[55.90127182 19.67717171]
[50.73674011 5.59428692]
[58.40212631 -7.29919624]
[73.24134064 -9.48953056]
[84.30440521 0.63813561]
[86.21824646 -14.23927021]
[88.13208771 -29.11667633]
[90.04592896 -43.99408340]
[91.95977020 -58.87149048]
[84.71166992 -69.53468323]
[86.60730743 -81.88265991]
[96.09226227 -89.38269806]
[98.21739197 -104.23139191]
[100.34252167 -119.08009338]
[102.46765137 -133.92878723]
[104.59278107 -148.77748108]
[88.08715057 -154.57411194]
[73.14785767 -163.66531372]
[60.42348099 -175.65357971]
[50.46584702 -190.01567078]
[43.70610046 -206.12548828]
[40.43605042 -223.28132629]
[40.79555511 -240.73649597]
[44.76655579 -257.73178101]
[52.17396545 -273.52844238]
[62.69338226 -287.44042969]
[75.86529541 -298.86398315]
[91.11515808 -307.30410767]
[86.50018311 -321.57653809]
[81.88521576 -335.84893799]
[66.75625610 -337.86822510]
[54.00638199 -346.25888062]
[46.16708374 -359.35501099]
[44.79486084 -374.55630493]
[50.16217422 -388.84457397]
[61.20333099 -399.38287354]
[75.72611237 -404.07879639]
[90.84700012 -401.99996948]
[103.56372833 -393.55914307]
[111.35139465 -380.43228149]
[112.66374207 -365.22567749]
[107.24021149 -350.95864868]
[96.15763855 -340.46392822]
[100.77260590 -326.19149780]
[105.38758087 -311.91906738]
[112.12024689 -313.15731812]
[118.93167877 -313.84027100]
[125.77616119 -313.96334839]
[132.60774231 -313.52575684]
[139.38058472 -312.53039551]
[146.04920959 -310.98394775]
[152.56886292 -308.89682007]
[158.96713257 -322.46377563]
[165.36538696 -336.03073120]
[171.76365662 -349.59765625]
[178.16192627 -363.16461182]
[184.56018066 -376.73156738]
[190.95845032 -390.29852295]
[197.35670471 -403.86547852]
[190.64573669 -417.98980713]
[194.63377380 -433.11032104]
[207.43782043 -442.08755493]
[223.01216125 -440.68273926]
[234.00309753 -429.55917358]
[235.22103882 -413.96908569]
[226.09089661 -401.27365112]
[210.92366028 -397.46722412]
[204.52540588 -383.90026855]
[198.12713623 -370.33331299]
[191.72886658 -356.76635742]
[185.33061218 -343.19940186]
[178.93234253 -329.63244629]
[172.53408813 -316.06549072]
[166.13581848 -302.49853516]
[178.21635437 -293.91348267]
[188.59315491 -283.32659912]
[196.93888855 -271.06988525]
[202.98988342 -257.52804565]
[206.55456543 -243.12643433]
[207.51943970 -228.31762695]
[205.85278320 -213.56732178]
[201.60560608 -199.33956909]
[194.91014099 -186.08226013]
[185.97572327 -174.21299744]
[175.08221436 -164.10592651]
[162.57130432 -156.07994080]
[148.83570862 -150.38865662]
[134.30686951 -147.21237183]
[119.44147491 -146.65235901]
[117.31634521 -131.80366516]
[115.19122314 -116.95496368]
[113.06609344 -102.10626221]
[110.94096375 -87.25756836]
[118.34014130 -71.34126282]
[106.83717346 -56.95764542]
[104.92333221 -42.08024216]
[103.00949097 -27.20283508]
[101.09564972 -12.32542896]
[99.18180847 2.55197716]
[97.79778290 17.48798943]
[96.94532013 32.46374893]
[96.09286499 47.43950272]
[95.24040222 62.41526031]
[94.38793945 77.39102173]
[104.99060822 74.85248566]
[116.60029602 77.47547150]
[126.66275024 85.55631256]
[132.61296082 98.13089752]
[132.48634338 113.04949951]
[142.43319702 124.27716064]
[152.38003540 135.50482178]
[165.91758728 131.99980164]
[179.57972717 134.65522766]
[190.71246338 142.89720154]
[197.17823792 155.07234192]
[197.76620483 168.77908325]
[192.41859436 181.34144592]
[202.20483398 192.70936584]
[211.99107361 204.07728577]
[221.77729797 215.44520569]
[236.64454651 220.85588074]
[239.08422852 235.54931641]
[248.87045288 246.91723633]
[258.65670776 258.28515625]
[276.12576294 259.27209473]
[287.25421143 272.33306885]
[285.52426147 289.06500244]
[295.47109985 300.29266357]
[305.41793823 311.52032471]
[321.20654297 312.22427368]
[331.81121826 323.94250488]
[330.94036865 339.72277832]
[319.11068726 350.20294189]
[303.34051514 349.16534424]
[292.98599243 337.22552490]
[294.19027710 321.46716309]
[284.24343872 310.23950195]
[274.29660034 299.01184082]
[261.45687866 300.04171753]
[250.19912720 293.39096069]
[244.74502563 281.29354858]
[247.28877258 268.07141113]
[237.50253296 256.70349121]
[227.71630859 245.33555603]
[213.54902649 240.73799133]
[210.40937805 225.23143005]
[200.62315369 213.86351013]
[190.83691406 202.49559021]
[181.05067444 191.12767029]
[165.24861145 194.52122498]
[149.80310059 189.45141602]
[138.96141052 177.21267700]
[135.75500488 161.08418274]
[141.15237427 145.45166016]
[131.20552063 134.22399902]
[121.25868988 122.99634552]
[113.76551056 123.31609344]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 42]
[4 41]
[5 40]
[7 38]
[8 37]
[9 36]
[10 35]
[11 34]
[14 29]
[15 28]
[16 27]
[19 24]
[43 57]
[44 56]
[45 55]
[46 54]
[47 53]
[48 52]
[58 167]
[59 166]
[60 165]
[61 164]
[62 163]
[68 162]
[69 161]
[70 160]
[71 159]
[72 158]
[75 156]
[76 155]
[77 154]
[78 153]
[79 152]
[91 108]
[92 107]
[93 106]
[115 137]
[116 136]
[117 135]
[118 134]
[119 133]
[120 132]
[121 131]
[122 130]
[172 219]
[173 218]
[174 217]
[180 212]
[181 211]
[182 210]
[183 209]
[185 207]
[186 206]
[187 205]
[190 201]
[191 200]
[192 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
