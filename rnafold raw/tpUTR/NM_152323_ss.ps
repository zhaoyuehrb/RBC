%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 17:17:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAUACUUUCAUAUUUCAUGGUUUACUGGCAUCGGAAAUCUCUACAAGUUUUAAUGAUUUCUCCCUCCCUCUCUUUUUUUCCUCCUCUGAAGAAAUUUAGGAUUUUUCUCUUAAAGCAAAUACUAAAGAGGAAAAAAAAUUAACUUUAUUGUUGCUUUUAUCAAAGAGUAUGUAAUCUAUACUAACUUGUUGGGAAAUUCUGCCAAUGAACAACUUUUUUAUAAUA\
) } def
/len { sequence length } bind def

/coor [
[53.45107651 939.11297607]
[38.48558044 940.55651855]
[23.48660851 939.51696777]
[8.86334324 936.02264404]
[-4.98528004 930.16900635]
[-17.68146133 922.11560059]
[-28.87884140 912.08227539]
[-38.27194595 900.34259033]
[-45.60452271 887.21691895]
[-50.67653275 873.06329346]
[-53.34961319 858.26788330]
[-53.55083847 843.23431396]
[-51.27471542 828.37261963]
[-46.58334351 814.08831787]
[-39.60470581 800.77111816]
[-30.52917862 788.78424072]
[-19.60435486 778.45477295]
[-7.12827158 770.06445312]
[6.55871630 763.84222412]
[21.08321762 759.95782471]
[36.04899216 758.51721191]
[37.08613586 743.55310059]
[38.12327957 728.58898926]
[39.16042328 713.62487793]
[40.19756317 698.66076660]
[33.35877991 685.42901611]
[42.03174973 672.19683838]
[43.06888962 657.23272705]
[44.10603333 642.26861572]
[45.14317703 627.30450439]
[46.18032074 612.34039307]
[43.78391647 608.22131348]
[43.94179535 602.55487061]
[47.45888901 596.97833252]
[48.90977859 582.04870605]
[50.36066437 567.11901855]
[40.72785950 555.81658936]
[41.98658752 540.65515137]
[53.90691757 530.62799072]
[55.35780716 515.69830322]
[56.80869293 500.76867676]
[58.25958252 485.83898926]
[51.78961563 472.42300415]
[60.82546997 459.43594360]
[62.27635956 444.50628662]
[63.72724533 429.57659912]
[65.17813110 414.64694214]
[66.62902069 399.71728516]
[68.07991028 384.78759766]
[69.53079987 369.85794067]
[55.71163940 361.82363892]
[46.74930191 348.51727295]
[44.48153305 332.57638550]
[49.41297150 317.18762207]
[60.60395813 305.44967651]
[75.84912109 299.74929810]
[77.09325409 284.80099487]
[78.33738708 269.85269165]
[79.58152008 254.90435791]
[72.92651367 241.57919312]
[81.78176880 228.46832275]
[70.39768982 218.90061951]
[66.78767395 204.29132080]
[72.53960419 190.19279480]
[85.64171600 182.09088135]
[86.88585663 167.14257812]
[88.12998962 152.19425964]
[70.18715668 144.45596313]
[56.21737671 130.79316711]
[48.08234787 113.02669525]
[46.86619186 93.52420044]
[52.73098755 74.88470459]
[64.89514923 59.59223938]
[81.73760986 49.68476868]
[78.64601135 35.00682449]
[75.55442047 20.32888031]
[72.46282196 5.65093565]
[69.37122345 -9.02700806]
[66.27963257 -23.70495224]
[63.18803406 -38.38289642]
[60.09643936 -53.06084061]
[57.00484467 -67.73878479]
[53.91324615 -82.41672516]
[50.82165146 -97.09467316]
[35.23395920 -97.58287048]
[20.22274780 -101.77880096]
[6.65637064 -109.43540192]
[-4.68143797 -120.10556030]
[-13.13683319 -133.16819763]
[-18.22356796 -147.86445618]
[-19.65095139 -163.34172058]
[-17.34046555 -178.70315552]
[-11.43005848 -193.05960083]
[-2.26593137 -205.58111572]
[9.61774826 -215.54489136]
[23.52997780 -222.37701416]
[20.23554611 -237.01077271]
[16.94111633 -251.64451599]
[13.64668655 -266.27825928]
[10.35225582 -280.91201782]
[7.05782604 -295.54577637]
[3.76339555 -310.17953491]
[-9.72577667 -318.41467285]
[-13.35967064 -333.79553223]
[-4.98236084 -347.19686890]
[10.43604279 -350.66796875]
[23.74807549 -342.14941406]
[27.05594444 -326.69519043]
[18.39714813 -313.47396851]
[21.69157982 -298.84020996]
[24.98600960 -284.20645142]
[28.28043938 -269.57269287]
[31.57486916 -254.93894958]
[34.86930084 -240.30519104]
[38.16373062 -225.67144775]
[52.61164093 -225.59298706]
[66.68576813 -222.29382324]
[79.67694092 -215.93678284]
[90.92980194 -206.83879089]
[99.87583160 -195.45520020]
[106.06212616 -182.35691833]
[109.17426300 -168.20178223]
[109.05233002 -153.70158386]
[105.69911957 -139.58618164]
[99.28015137 -126.56681824]
[90.11550140 -115.30030823]
[78.66387177 -106.35584259]
[65.49959564 -100.18626404]
[68.59119415 -85.50832367]
[71.68278503 -70.83038330]
[74.77438354 -56.15243530]
[77.86597443 -41.47449112]
[80.95757294 -26.79654884]
[84.04917145 -12.11860371]
[87.14076233 2.55933976]
[90.23236084 17.23728371]
[93.32395935 31.91522789]
[96.41555023 46.59317017]
[111.79405212 47.78852463]
[126.19314575 53.31963348]
[138.41709900 62.72717285]
[150.54014587 53.89360809]
[162.66319275 45.06004333]
[174.78622437 36.22647858]
[176.98904419 20.57645798]
[189.66300964 11.13471985]
[205.28886414 13.50287914]
[214.59606934 26.27594757]
[212.06283569 41.87589264]
[199.19207764 51.04754257]
[183.61979675 48.34952164]
[171.49674988 57.18308640]
[159.37371826 66.01664734]
[147.25067139 74.85021210]
[150.77154541 83.04747772]
[152.88201904 91.71566772]
[153.52345276 100.61399841]
[152.67805481 109.49526978]
[150.36929321 118.11276245]
[146.66130066 126.22710419]
[141.65708923 133.61286926]
[135.49566650 140.06488037]
[128.34820557 145.40393066]
[120.41324615 149.48168945]
[111.91121674 152.18487549]
[103.07830048 153.43838501]
[101.83416748 168.38670349]
[100.59003448 183.33502197]
[112.17253113 193.49139404]
[115.51464844 208.34681702]
[109.53919220 222.15834045]
[96.73008728 229.71246338]
[103.29610443 244.10682678]
[94.52983856 256.14849854]
[93.28570557 271.09680176]
[92.04156494 286.04513550]
[90.79743195 300.99343872]
[103.23837280 307.68661499]
[112.16323853 318.58160400]
[116.25112152 332.01385498]
[114.91687775 345.94735718]
[108.39463806 358.28317261]
[97.69754028 367.17572021]
[84.46046448 371.30883789]
[83.00957489 386.23849487]
[81.55868530 401.16815186]
[80.10780334 416.09783936]
[78.65691376 431.02749634]
[77.20602417 445.95715332]
[75.75513458 460.88684082]
[82.12132263 475.37069702]
[73.18924713 487.28988647]
[71.73835754 502.21954346]
[70.28747559 517.14923096]
[68.83658600 532.07885742]
[78.60319519 544.21356201]
[76.91910553 559.33374023]
[65.29032898 568.56988525]
[63.83944321 583.49957275]
[62.38855743 598.42926025]
[61.14442062 613.37756348]
[60.10727692 628.34167480]
[59.07013702 643.30578613]
[58.03299332 658.26983643]
[56.99584961 673.23394775]
[63.76044846 687.53607178]
[55.16166687 699.69793701]
[54.12452316 714.66204834]
[53.08737946 729.62609863]
[52.05023575 744.59020996]
[51.01309586 759.55432129]
[65.63703156 763.04577637]
[79.48678589 768.89678955]
[92.18451691 776.94769287]
[103.38382721 786.97894287]
[112.77919006 798.71679688]
[120.11429596 811.84106445]
[125.18904114 825.99365234]
[127.86496735 840.78857422]
[128.06909180 855.82214355]
[125.79582977 870.68426514]
[121.10720825 884.96942139]
[114.13113403 898.28802490]
[105.05792236 910.27661133]
[94.13508606 920.60821533]
[81.66062164 929.00091553]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 211]
[22 210]
[23 209]
[24 208]
[25 207]
[27 205]
[28 204]
[29 203]
[30 202]
[31 201]
[34 200]
[35 199]
[36 198]
[39 195]
[40 194]
[41 193]
[42 192]
[44 190]
[45 189]
[46 188]
[47 187]
[48 186]
[49 185]
[50 184]
[56 177]
[57 176]
[58 175]
[59 174]
[61 172]
[65 168]
[66 167]
[67 166]
[74 138]
[75 137]
[76 136]
[77 135]
[78 134]
[79 133]
[80 132]
[81 131]
[82 130]
[83 129]
[84 128]
[96 115]
[97 114]
[98 113]
[99 112]
[100 111]
[101 110]
[102 109]
[141 154]
[142 153]
[143 152]
[144 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
