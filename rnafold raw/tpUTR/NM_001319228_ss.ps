%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 23:51:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGGGAUGCCGGGAACACUGUCGAAGAACGGAAGGCAGAGGACAGAGGCUGGACGUGGGCCCAGAGGCCCACAGGGACGCCCACCUGCCCCCCACAGAGGCUGGUGGUUGAGAUGCCCACGGCUAAGCACCUGUGGCUGCAUUUUAACAGUAAAGGAGGCCGUUGUUUUCAGCGC\
) } def
/len { sequence length } bind def

/coor [
[-93.90107727 404.25677490]
[-97.84761047 418.72827148]
[-94.01377869 434.07794189]
[-104.82704926 444.32110596]
[-108.77359009 458.79263306]
[-104.07851410 474.50531006]
[-115.53374481 486.24029541]
[-131.35511780 481.92562866]
[-135.26695251 465.99987793]
[-123.24510956 454.84609985]
[-119.29856873 440.37457275]
[-123.41468811 426.05999756]
[-112.31912994 414.78173828]
[-108.37259674 400.31021118]
[-114.62244415 396.16421509]
[-122.91465759 408.66378784]
[-135.41409302 400.37136841]
[-127.12215424 387.87222290]
[-133.37200928 383.72622681]
[-145.17028809 392.98910522]
[-156.96855164 402.25195312]
[-168.76683044 411.51483154]
[-170.40669250 427.23382568]
[-182.73370361 437.12423706]
[-198.43446350 435.31826782]
[-208.19400024 422.88739014]
[-206.22215271 407.20660400]
[-193.68876648 397.57904053]
[-178.02969360 399.71655273]
[-166.23143005 390.45367432]
[-154.43315125 381.19082642]
[-142.63488770 371.92794800]
[-138.46324158 351.71667480]
[-125.57298279 337.50045776]
[-108.61861420 332.26220703]
[-92.77143097 336.09051514]
[-84.47943115 323.59078979]
[-83.89138794 308.70779419]
[-69.81505585 301.48510742]
[-61.52305222 288.98538208]
[-53.23105240 276.48568726]
[-44.93905258 263.98599243]
[-36.64705276 251.48626709]
[-28.35504913 238.98655701]
[-20.06304932 226.48684692]
[-11.77104855 213.98713684]
[-11.18301105 199.10415649]
[2.89332485 191.88145447]
[11.18532562 179.38174438]
[19.47732735 166.88203430]
[27.76932716 154.38232422]
[23.46966362 142.21640015]
[27.02460670 129.60987854]
[37.34930038 121.23713684]
[50.80691910 120.33646393]
[48.94805527 105.45208740]
[37.65949249 95.57441711]
[26.37093163 85.69674683]
[15.08236980 75.81907654]
[3.79380798 65.94140625]
[-7.49475336 56.06373596]
[-18.78331566 46.18606567]
[-34.96710968 43.53713226]
[-40.51107025 28.10351562]
[-29.71204376 15.76199627]
[-13.67914486 19.20847130]
[-8.90564442 34.89750290]
[2.38291717 44.77517319]
[13.67147827 54.65284729]
[24.96004105 64.53051758]
[36.24860001 74.40818787]
[47.53716278 84.28585815]
[58.82572556 94.16352844]
[65.00101471 89.90725708]
[83.52687073 77.13844299]
[78.31326294 63.07365417]
[65.35017395 53.02923965]
[67.83513641 36.81945801]
[83.21184540 31.11954689]
[95.66204834 41.79308319]
[92.37805176 57.86005020]
[97.59165955 71.92484283]
[112.56272125 70.99360657]
[115.99317169 56.39114380]
[119.42362213 41.78867722]
[122.85406494 27.18621063]
[118.47787476 11.98227978]
[128.92079163 1.36180174]
[132.35124207 -13.24066544]
[135.78169250 -27.84313202]
[139.08241272 -42.47546768]
[130.31228638 -55.62310410]
[133.48953247 -71.10472870]
[146.72915649 -79.73535919]
[162.17631531 -76.39460754]
[170.66650391 -63.06447601]
[167.16261292 -47.65349579]
[153.74346924 -39.30472565]
[155.40800476 -32.07976913]
[150.38415527 -24.41268539]
[146.95370483 -9.81021786]
[143.52326965 4.79224873]
[148.14482117 18.95171356]
[137.45652771 30.61665726]
[134.02609253 45.21912384]
[130.59564209 59.82159042]
[127.16519165 74.42405701]
[137.33987427 85.44567108]
[152.16947937 83.19123077]
[166.99909973 80.93679810]
[181.82872009 78.68235779]
[196.65834045 76.42792511]
[211.48794556 74.17348480]
[226.31756592 71.91905212]
[241.14718628 69.66461182]
[255.97679138 67.41017914]
[270.80642700 65.15573883]
[285.59368896 62.63845825]
[300.33395386 59.85912704]
[315.07421875 57.07979584]
[329.81445312 54.30046463]
[344.55471802 51.52113342]
[359.29498291 48.74180603]
[365.80975342 34.65856934]
[379.37460327 27.12368774]
[394.77359009 29.03447533]
[406.08547974 39.65619278]
[408.96060181 54.90457916]
[402.29345703 68.91631317]
[388.64764404 76.30359650]
[373.27032471 74.22587585]
[362.07431030 63.48206711]
[347.33407593 66.26139832]
[332.59381104 69.04072571]
[317.85354614 71.82006073]
[303.11328125 74.59938812]
[288.37301636 77.37872314]
[284.97354126 80.77355957]
[279.39511108 82.04917908]
[273.06085205 79.98535156]
[258.23123169 82.23979187]
[243.40161133 84.49423218]
[228.57200623 86.74866486]
[213.74238586 89.00310516]
[198.91276550 91.25753784]
[184.08316040 93.51197815]
[169.25354004 95.76641083]
[154.42391968 98.02085114]
[139.59429932 100.27528381]
[138.02154541 114.30519104]
[131.51214600 127.23722839]
[120.65392303 137.34994507]
[106.62796021 143.20310974]
[91.08247375 143.83911133]
[75.93953705 138.93005371]
[63.15749359 128.84901428]
[66.64265442 145.97648621]
[56.86771011 160.05723572]
[40.26903534 162.67433167]
[31.97703552 175.17404175]
[23.68503380 187.67375183]
[15.39303398 200.17346191]
[14.21189785 215.95051575]
[0.72866070 222.27914429]
[-7.56334019 234.77885437]
[-15.85534096 247.27856445]
[-24.14734268 259.77825928]
[-32.43934250 272.27798462]
[-40.73134232 284.77767944]
[-49.02334595 297.27740479]
[-57.31534576 309.77709961]
[-58.49648285 325.55416870]
[-71.97972107 331.88278198]
[-80.27172089 344.38250732]
[-70.58288574 357.49417114]
[-68.81668091 375.15118408]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 14]
[2 13]
[4 11]
[5 10]
[19 32]
[20 31]
[21 30]
[22 29]
[36 174]
[37 173]
[39 171]
[40 170]
[41 169]
[42 168]
[43 167]
[44 166]
[45 165]
[46 164]
[48 162]
[49 161]
[50 160]
[51 159]
[55 156]
[56 73]
[57 72]
[58 71]
[59 70]
[60 69]
[61 68]
[62 67]
[75 82]
[76 81]
[83 107]
[84 106]
[85 105]
[86 104]
[88 102]
[89 101]
[90 100]
[91 98]
[108 149]
[109 148]
[110 147]
[111 146]
[112 145]
[113 144]
[114 143]
[115 142]
[116 141]
[117 140]
[118 137]
[119 136]
[120 135]
[121 134]
[122 133]
[123 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
