%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 03:30:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCGCGCCGCCUCACUGGACUCAUGGACUCGCCCACGCCUCGCCCCUCCUGCCGCUGCCUGCCAUUGACAAUGUUGCUGGGACCUCUGCCUCCCCACUGCAGCCCUCGAACUUCCCAGGCACCCUCCUUUCUGCCCCAGAGGAAGGAGCUGUAGUGUCCUGCUGCCUCUGGGCGCCCGCCUCUAGCGCGGUUCUGGGAAGUGUGCUUUUGGCAUCCGUUAAUAAUAAAGCCACGGUGUGUUCAGGUA\
) } def
/len { sequence length } bind def

/coor [
[79.80582428 227.52571106]
[87.56380463 214.33206177]
[100.57066345 206.26483154]
[99.43167114 191.30813599]
[98.29267120 176.35144043]
[97.15367889 161.39474487]
[96.01467896 146.43804932]
[94.87568665 131.48135376]
[93.73668671 116.52466583]
[78.88208008 114.44125366]
[73.67250061 128.50753784]
[79.03710938 143.62707520]
[70.43895721 157.17149353]
[54.47381973 158.75068665]
[43.38877487 147.15321350]
[45.68732452 131.27566528]
[59.60621643 123.29795074]
[64.81579590 109.23167419]
[53.82188416 119.43627167]
[38.82319260 119.63439178]
[27.56357956 109.72373199]
[25.85640907 94.82119751]
[34.58309555 82.62099457]
[49.23803329 79.42211914]
[62.25613785 86.87774658]
[54.00174713 74.35316467]
[43.26858521 72.78990173]
[35.32230377 65.73350525]
[32.61554718 55.68376160]
[35.80593872 46.00753403]
[27.87147903 33.27787018]
[19.93701744 20.54820633]
[12.00255775 7.81854153]
[4.06809807 -4.91112232]
[-3.86636209 -17.64078522]
[-22.06814194 -26.34094429]
[-21.82126617 -45.68944931]
[-30.07565689 -58.21402740]
[-40.80881882 -59.77728653]
[-48.75510025 -66.83368683]
[-51.46185684 -76.88343048]
[-48.27146530 -86.55966187]
[-56.20592499 -99.28932190]
[-71.49565887 -98.87536621]
[-84.85153198 -106.12225342]
[-92.73442841 -118.99573517]
[-93.11267853 -133.98616028]
[-85.98480988 -147.06510925]
[-93.99973297 -159.74426270]
[-102.09481049 -172.37240601]
[-110.18988800 -185.00053406]
[-118.28495789 -197.62866211]
[-132.24636841 -205.07109070]
[-132.60107422 -219.96147156]
[-140.69615173 -232.58961487]
[-182.38098145 -239.49884033]
[-194.12536621 -248.82995605]
[-205.86973572 -258.16107178]
[-217.61412048 -267.49218750]
[-229.35848999 -276.82327271]
[-241.10287476 -286.15438843]
[-259.33959961 -280.26080322]
[-277.29196167 -286.52767944]
[-287.73229980 -302.23922729]
[-286.57406616 -320.91674805]
[-298.66448975 -329.79492188]
[-310.75491333 -338.67306519]
[-322.84533691 -347.55120850]
[-333.99337769 -343.50524902]
[-345.59320068 -345.31320190]
[-354.79162598 -352.41366577]
[-359.38253784 -362.95800781]
[-358.33544922 -374.29046631]
[-370.19708252 -383.47204590]
[-382.05871582 -392.65362549]
[-393.92037964 -401.83523560]
[-405.78201294 -411.01681519]
[-417.75900269 -420.04742432]
[-429.84942627 -428.92556763]
[-441.93984985 -437.80371094]
[-454.03027344 -446.68188477]
[-467.75662231 -439.91094971]
[-483.05703735 -440.30615234]
[-496.41555786 -447.77667236]
[-504.76251221 -460.60580444]
[-506.17980957 -475.84555054]
[-500.34179688 -489.99392700]
[-488.58996582 -499.79971313]
[-473.62484741 -503.00961304]
[-458.88528442 -498.88604736]
[-447.75833130 -488.37655640]
[-442.80087280 -473.89611816]
[-445.15209961 -458.77230835]
[-433.06167603 -449.89413452]
[-420.97125244 -441.01599121]
[-408.88082886 -432.13784790]
[-404.13037109 -431.95751953]
[-399.43710327 -428.80712891]
[-396.60040283 -422.87844849]
[-384.73876953 -413.69686890]
[-372.87713623 -404.51525879]
[-361.01550293 -395.33367920]
[-349.15386963 -386.15209961]
[-331.14633179 -389.54074097]
[-316.13742065 -378.48086548]
[-313.96716309 -359.64163208]
[-301.87673950 -350.76348877]
[-289.78631592 -341.88534546]
[-277.69589233 -333.00717163]
[-267.93847656 -338.33032227]
[-256.84997559 -339.64517212]
[-246.01933289 -336.72488403]
[-237.01292419 -329.95233154]
[-231.14794922 -320.27032471]
[-229.29981995 -309.05041504]
[-231.77175903 -297.89877319]
[-220.02738953 -288.56765747]
[-208.28300476 -279.23654175]
[-196.53863525 -269.90545654]
[-184.79425049 -260.57434082]
[-173.04986572 -251.24322510]
[-165.87974548 -253.44308472]
[-162.52018738 -268.06201172]
[-151.53950500 -257.84277344]
[-144.36938477 -260.04263306]
[-139.87893677 -274.35473633]
[-135.38848877 -288.66680908]
[-130.89804077 -302.97891235]
[-126.40760040 -317.29098511]
[-121.91715240 -331.60308838]
[-117.42670441 -345.91516113]
[-112.93625641 -360.22726440]
[-121.50877380 -373.30572510]
[-119.61771393 -388.82852173]
[-108.15596771 -399.46630859]
[-92.53542328 -400.19622803]
[-80.13163757 -390.67361450]
[-76.80127716 -375.39480591]
[-84.11685181 -361.57391357]
[-98.62416840 -355.73681641]
[-103.11461639 -341.42471313]
[-107.60506439 -327.11264038]
[-112.09551239 -312.80053711]
[-116.58596039 -298.48846436]
[-121.07640076 -284.17636108]
[-125.56684875 -269.86428833]
[-130.05729675 -255.55218506]
[-128.06800842 -240.68469238]
[-119.97293854 -228.05654907]
[-106.59054565 -221.51737976]
[-105.65682220 -205.72373962]
[-97.56175232 -193.09561157]
[-89.46667480 -180.46748352]
[-81.37159729 -167.83934021]
[-75.13115692 -163.91392517]
[-73.25514221 -154.99957275]
[-58.37372589 -155.63911438]
[-45.08183289 -148.69781494]
[-36.99554443 -135.95112610]
[-36.37110519 -120.76866913]
[-43.47626114 -107.22378540]
[-35.54180145 -94.49411774]
[-17.85727119 -86.64027405]
[-17.55108070 -66.46841431]
[-9.29668999 -53.94384003]
[0.82785362 -52.80294800]
[8.82968903 -46.14753342]
[11.92400074 -35.98085403]
[8.86330128 -25.57524681]
[16.79776192 -12.84558201]
[24.73222160 -0.11591858]
[32.66668320 12.61374569]
[40.60114288 25.34340858]
[48.53560257 38.07307434]
[66.22013092 45.92692184]
[66.52632141 66.09877777]
[74.78071594 78.62335205]
[169.15112305 56.86478806]
[183.76286316 60.25550842]
[198.37460327 63.64622879]
[210.09779358 53.65258408]
[225.28021240 52.49174118]
[238.08352661 60.39990997]
[243.70780945 74.16600800]
[258.31954956 77.55672455]
[272.93130493 80.94744873]
[287.54302979 84.33817291]
[302.15478516 87.72888947]
[316.76651001 91.11961365]
[331.95849609 86.70208740]
[342.60733032 97.11608887]
[357.21908569 100.50681305]
[371.83081055 103.89752960]
[388.62673950 101.58809662]
[395.49548340 117.08831024]
[382.50250244 127.97951508]
[368.44009399 118.50927734]
[353.82836914 115.11855316]
[339.21661377 111.72782898]
[325.06976318 116.38788605]
[313.37579346 105.73135376]
[298.76406860 102.34062958]
[284.15231323 98.94991302]
[269.54058838 95.55918884]
[254.92883301 92.16847229]
[240.31709290 88.77774811]
[229.20507812 98.66011047]
[214.22749329 100.12159729]
[201.10787964 92.39313507]
[194.98388672 78.25797272]
[180.37214661 74.86724854]
[165.76039124 71.47653198]
[161.59361267 77.71255493]
[174.06553650 86.04629517]
[165.73159790 98.51808167]
[153.26007080 90.18459320]
[149.09329224 96.42061615]
[157.81758118 108.62253571]
[166.54187012 120.82445526]
[182.05892944 120.80772400]
[194.60255432 129.94212341]
[199.34942627 144.71530151]
[194.47431946 159.44665527]
[181.85177612 168.47169495]
[166.33544922 168.32008362]
[153.89166260 159.05014038]
[149.30531311 144.22634888]
[154.33995056 129.54873657]
[145.61566162 117.34682465]
[136.89137268 105.14490509]
[129.84187317 107.70510101]
[115.74288177 112.82547760]
[108.69338226 115.38566589]
[109.83237457 130.34236145]
[110.97137451 145.29905701]
[112.11036682 160.25575256]
[113.24936676 175.21244812]
[114.38836670 190.16914368]
[115.52735901 205.12583923]
[129.60583496 211.13043213]
[139.27223206 222.99716187]
[142.30529785 237.99913025]
[138.00804138 252.68899536]
[127.36795807 263.69113159]
[112.83004761 268.47735596]
[97.73502350 265.94778442]
[85.55160522 256.68371582]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 239]
[4 238]
[5 237]
[6 236]
[7 235]
[8 234]
[9 233]
[10 18]
[11 17]
[25 177]
[26 176]
[30 174]
[31 173]
[32 172]
[33 171]
[34 170]
[35 169]
[37 165]
[38 164]
[42 162]
[43 161]
[48 156]
[49 154]
[50 153]
[51 152]
[52 151]
[54 149]
[55 148]
[56 121]
[57 120]
[58 119]
[59 118]
[60 117]
[61 116]
[65 109]
[66 108]
[67 107]
[68 106]
[73 103]
[74 102]
[75 101]
[76 100]
[77 99]
[78 96]
[79 95]
[80 94]
[81 93]
[125 147]
[126 146]
[127 145]
[128 144]
[129 143]
[130 142]
[131 141]
[132 140]
[178 212]
[179 211]
[180 210]
[184 206]
[185 205]
[186 204]
[187 203]
[188 202]
[189 201]
[191 199]
[192 198]
[193 197]
[217 230]
[218 229]
[219 228]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
