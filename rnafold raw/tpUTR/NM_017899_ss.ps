%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 05:43:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCACCGCCACCUCCGCGGAGAAACUGCACUUUGCAAUGGGGCCGCCUCCCCGCGUAGCUGGAGCAGCCCAGGCCCGGCGGACAGCCUCUUCCUGCAGCGCCGGUACAUAGCCAAGGCUCGUCUGCGCACCUUGUGUCUUGUAGGGUAUGGUAUGUGGGACUUCGCUGUUUUUAUCUCCAAUAAAAAAAAAAAAAAGGUUUGUUAAUUAA\
) } def
/len { sequence length } bind def

/coor [
[255.34176636 289.55786133]
[245.01509094 278.67852783]
[234.68843079 267.79919434]
[224.36175537 256.91986084]
[214.03509521 246.04051208]
[196.96414185 241.97238159]
[192.81233215 224.03237915]
[182.32482910 213.30799866]
[171.83732605 202.58361816]
[161.34982300 191.85923767]
[146.49966431 191.95024109]
[135.71107483 181.22358704]
[135.71632385 165.64675903]
[125.22882080 154.92237854]
[114.74131775 144.19799805]
[99.74172974 144.30966187]
[89.41506195 155.18899536]
[79.08839417 166.06832886]
[68.76172638 176.94766235]
[58.43505859 187.82699585]
[48.10839081 198.70632935]
[51.06656647 213.93882751]
[44.47585297 227.98667908]
[30.87051201 235.44819641]
[15.48207569 233.45428467]
[4.22771263 222.77163696]
[1.43495357 207.50794983]
[8.17767239 193.53242493]
[21.86315536 186.21893311]
[37.22905350 188.37966919]
[47.55572128 177.50033569]
[57.88239288 166.62100220]
[68.20906067 155.74165344]
[78.53572845 144.86231995]
[88.86239624 133.98298645]
[86.13471985 126.99658966]
[72.16182709 132.45172119]
[66.70693970 118.47873688]
[80.67935944 113.02379608]
[77.95168304 106.03739929]
[62.98534012 105.03313446]
[48.01899338 104.02887726]
[33.05265045 103.02461243]
[18.76542473 109.82062531]
[6.58472633 101.24858856]
[-8.38161850 100.24432373]
[-17.15352440 102.79216766]
[-23.56278610 99.11206818]
[-38.51251984 97.88509369]
[-53.46225357 96.65811920]
[-63.78494644 104.39147186]
[-76.21134949 103.06175232]
[-84.13789368 93.92411041]
[-99.06770325 92.47469330]
[-115.41696167 96.96224213]
[-124.25505829 82.49418640]
[-112.79905701 69.99633789]
[-97.61828613 77.54488373]
[-82.68847656 78.99430847]
[-67.12854767 70.87915802]
[-52.23527908 81.70838165]
[-37.28554535 82.93535614]
[-22.33581161 84.16233063]
[-7.37735796 85.27798462]
[7.58898640 86.28224182]
[20.80571938 79.41439819]
[34.05691147 88.05827332]
[49.02325439 89.06253052]
[63.98959732 90.06679535]
[78.95594025 91.07105255]
[83.07035065 84.80035400]
[70.52907562 76.57135010]
[78.75827026 64.03020477]
[91.29915619 72.25894928]
[95.41355896 65.98825073]
[88.53414917 52.65882111]
[81.65473175 39.32939148]
[74.77532196 25.99996376]
[67.89591217 12.67053509]
[61.01649475 -0.65889442]
[44.25672531 -5.67182016]
[36.46136093 -20.95407104]
[42.01913071 -36.82700348]
[34.94202805 -50.05252838]
[27.86492157 -63.27805710]
[12.52437878 -66.31150055]
[2.76303792 -78.52830505]
[3.18990397 -94.16005707]
[13.60342407 -105.82593536]
[29.08665276 -108.01765442]
[42.32888412 -99.70036316]
[47.07753754 -84.80122375]
[41.09044647 -70.35516357]
[48.16755295 -57.12963486]
[55.24465942 -43.90410614]
[67.97803497 -41.93161774]
[77.39086914 -32.84973907]
[79.89110565 -19.81289482]
[74.34592438 -7.53830671]
[81.22534180 5.79112244]
[88.10475159 19.12055206]
[94.98416138 32.44998169]
[101.86357880 45.77941132]
[108.74298859 59.10884094]
[123.73259735 59.66704941]
[131.58435059 46.88620758]
[139.43611145 34.10536575]
[147.28785706 21.32452202]
[143.83273315 6.13571692]
[151.97760010 -6.71402359]
[166.47909546 -9.91436100]
[174.33085632 -22.69520378]
[182.08723450 -35.53414536]
[189.74783325 -48.43046951]
[197.40843201 -61.32679749]
[205.06903076 -74.22312164]
[212.72962952 -87.11945343]
[209.04873657 -102.25513458]
[217.00138855 -115.22471619]
[231.45362854 -118.64060211]
[239.11422729 -131.53692627]
[238.77655029 -147.93260193]
[252.94494629 -156.19023132]
[267.04418945 -147.81507874]
[266.57019043 -131.42279053]
[252.01055908 -123.87633514]
[244.34996033 -110.98000336]
[248.26358032 -96.65453339]
[240.67835999 -83.46669769]
[225.62596130 -79.45885468]
[217.96536255 -66.56253052]
[210.30476379 -53.66620255]
[202.64416504 -40.76987457]
[194.98356628 -27.87354660]
[194.27018738 -20.51740074]
[187.11169434 -14.84344864]
[179.25993347 -2.06260586]
[182.95983887 12.31954479]
[175.17912292 25.39298820]
[160.06871033 29.17627716]
[152.21694946 41.95711899]
[144.36518860 54.73796463]
[136.51344299 67.51880646]
[125.46569824 133.71049500]
[135.95320129 144.43487549]
[146.44070435 155.15925598]
[162.01376343 155.50186157]
[172.49681091 166.52731323]
[172.07420349 181.37173462]
[182.56170654 192.09611511]
[193.04920959 202.82049561]
[203.53671265 213.54487610]
[216.40173340 214.46902466]
[224.91601562 223.61729431]
[224.91442871 235.71383667]
[235.24108887 246.59318542]
[245.56776428 257.47250366]
[255.89442444 268.35183716]
[266.22109985 279.23117065]
[284.43630981 268.69219971]
[304.80575562 263.44491577]
[325.82601929 263.87118530]
[345.94711304 269.93423462]
[363.68673706 281.18185425]
[377.73956299 296.78012085]
[387.07324219 315.57522583]
[391.00424194 336.17877197]
[389.24789429 357.07040405]
[381.93899536 376.70996094]
[394.41879272 385.03189087]
[406.89859009 393.35385132]
[419.37838745 401.67578125]
[431.85818481 409.99771118]
[444.33798218 418.31967163]
[456.81777954 426.64160156]
[472.76815796 424.91976929]
[483.95645142 436.41766357]
[481.79992676 452.31512451]
[467.95291138 460.41696167]
[453.03762817 454.50814819]
[448.49581909 439.12139893]
[436.01602173 430.79946899]
[423.53625488 422.47750854]
[411.05645752 414.15557861]
[398.57666016 405.83361816]
[386.09686279 397.51168823]
[373.61706543 389.18975830]
[366.96987915 396.36212158]
[359.46743774 402.63726807]
[351.23001099 407.91409302]
[342.38961792 412.10736084]
[333.08807373 415.14935303]
[323.47467041 416.99072266]
[313.70370483 417.60147095]
[303.93212891 416.97128296]
[294.31695557 415.10983276]
[285.01269531 412.04656982]
[276.16897583 407.83026123]
[267.92800903 402.52819824]
[260.42248535 396.22515869]
[253.77323914 389.02206421]
[248.08741760 381.03424072]
[243.45674133 372.38980103]
[239.95602417 363.22732544]
[237.64190674 353.69387817]
[236.55201721 343.94244385]
[236.70434570 334.12963867]
[238.09689331 324.41308594]
[240.70777893 314.94894409]
[244.49548340 305.88934326]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 159]
[2 158]
[3 157]
[4 156]
[5 155]
[7 152]
[8 151]
[9 150]
[10 149]
[13 146]
[14 145]
[15 144]
[16 35]
[17 34]
[18 33]
[19 32]
[20 31]
[21 30]
[40 70]
[41 69]
[42 68]
[43 67]
[45 65]
[46 64]
[48 63]
[49 62]
[50 61]
[53 59]
[54 58]
[75 104]
[76 103]
[77 102]
[78 101]
[79 100]
[80 99]
[83 95]
[84 94]
[85 93]
[105 143]
[106 142]
[107 141]
[108 140]
[111 137]
[112 136]
[113 134]
[114 133]
[115 132]
[116 131]
[117 130]
[120 127]
[121 126]
[169 187]
[170 186]
[171 185]
[172 184]
[173 183]
[174 182]
[175 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
