%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 11:40:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACCUUUAUGAAGAGAUGAAGACACUGGCAUUUCAGUGGGAUUGUAAGCAUUUGUAAUAGCUUCAUGUACAGCAUGCUGCUUGGUGAACAAUCAUUAAUUCUUCGAUAUUUCUGUAGCUUGAAUGUAACUGCUUUAAGAAAGGUUCUCAAAUGUUUUGAAAAAAAUAAAAUGUUUAAAAGUAA\
) } def
/len { sequence length } bind def

/coor [
[158.27816772 205.32344055]
[161.93008423 196.40980530]
[167.60614014 188.60961914]
[158.78935242 176.47436523]
[149.97257996 164.33911133]
[141.15580750 152.20385742]
[132.33901978 140.06860352]
[123.52224731 127.93334198]
[106.25457764 134.82481384]
[88.43528748 132.23422241]
[74.76494598 121.43505096]
[68.55405426 105.78656769]
[70.92942047 89.71033478]
[58.43090439 81.41653442]
[45.93238831 73.12273407]
[33.43387604 64.82893372]
[20.93535995 56.53513336]
[8.43684387 48.24133301]
[-4.26885700 40.26855850]
[-17.17350006 32.62197495]
[-30.07814217 24.97539520]
[-42.98278427 17.32881355]
[-55.88742828 9.68223286]
[-70.88526154 9.42752171]
[-84.04211426 16.63149452]
[-97.19896698 23.83546829]
[-110.35581970 31.03944016]
[-123.51267242 38.24341202]
[-127.70657349 53.48108673]
[-141.48786926 61.21746826]
[-156.68034363 56.86270142]
[-164.27059937 43.00038528]
[-159.75544739 27.85479355]
[-145.81365967 20.41153526]
[-130.71664429 25.08656120]
[-117.55979156 17.88258743]
[-104.40293884 10.67861462]
[-91.24609375 3.47464180]
[-78.08924103 -3.72933125]
[-86.04370880 -18.47093391]
[-83.26015472 -33.48096848]
[-94.52024078 -43.39109039]
[-105.78032684 -53.30121231]
[-117.04041290 -63.21133041]
[-128.30049133 -73.12145233]
[-139.56057739 -83.03157043]
[-155.11566162 -82.20870972]
[-166.39381409 -92.41938782]
[-167.08242798 -107.25385284]
[-178.34251404 -117.16397095]
[-185.41743469 -113.86058044]
[-193.09367371 -112.58715820]
[-200.80262756 -113.42330170]
[-207.97721863 -116.29290771]
[-214.09361267 -120.97082520]
[-218.70945740 -127.10045624]
[-221.49584961 -134.22091675]
[-222.26080322 -141.80168152]
[-220.96231079 -149.28210449]
[-217.71046448 -156.11286926]
[-227.71583557 -167.28839111]
[-237.72120667 -178.46392822]
[-253.26409912 -179.49157715]
[-263.25177002 -190.96768188]
[-262.17630005 -205.77912903]
[-272.18167114 -216.95466614]
[-282.18704224 -228.13020325]
[-292.19238281 -239.30574036]
[-302.19775391 -250.48127747]
[-317.26760864 -258.24893188]
[-313.97525024 -274.88012695]
[-297.08258057 -276.32040405]
[-291.02224731 -260.48663330]
[-281.01687622 -249.31111145]
[-271.01150513 -238.13557434]
[-261.00613403 -226.96003723]
[-251.00074768 -215.78450012]
[-236.16098022 -215.22186279]
[-225.85490417 -204.03080750]
[-226.54566956 -188.46929932]
[-216.54029846 -177.29376221]
[-206.53492737 -166.11822510]
[-184.04406738 -167.38378906]
[-167.72314453 -151.47296143]
[-168.43240356 -128.42405701]
[-157.17231750 -118.51393890]
[-142.37052917 -119.71514130]
[-130.81002808 -109.82527161]
[-129.65046692 -94.29165649]
[-118.39037323 -84.38153839]
[-107.13028717 -74.47142029]
[-95.87020874 -64.56129456]
[-84.61012268 -54.65117645]
[-73.35003662 -44.74105453]
[-64.22533417 -48.05237961]
[-54.27609253 -47.14107132]
[-45.41448593 -41.94062042]
[-39.44517517 -33.23104095]
[-37.69983292 -22.52954674]
[-40.74722672 -11.82804394]
[-48.24084473 -3.22240973]
[-35.33620453 4.42417145]
[-22.43156052 12.07075214]
[-9.52691841 19.71733284]
[3.37772417 27.36391449]
[6.88573933 26.83598900]
[10.82414055 27.99540138]
[14.39044571 31.02587509]
[16.73064423 35.74281693]
[29.22915840 44.03661728]
[41.72767258 52.33041763]
[54.22618866 60.62421799]
[66.72470856 68.91801453]
[79.22322083 77.21181488]
[89.66432953 69.74266815]
[102.67668915 66.99841309]
[116.14805603 69.80020142]
[127.74034882 78.03730011]
[135.29463196 90.62679291]
[149.47970581 85.74996185]
[163.66479492 80.87313080]
[177.84986877 75.99629974]
[192.03495789 71.11946869]
[206.22003174 66.24263763]
[213.33770752 60.48030472]
[220.68759155 61.40565491]
[234.95343018 56.77040100]
[245.51852417 44.22803879]
[261.61337280 47.37248230]
[266.68099976 62.96899796]
[255.50823975 74.97322845]
[239.58868408 71.03624725]
[225.32284546 75.67150116]
[211.09686279 80.42771912]
[196.91178894 85.30455017]
[182.72669983 90.18138123]
[168.54162598 95.05821228]
[154.35653687 99.93504333]
[140.17146301 104.81187439]
[135.65750122 119.11656952]
[144.47427368 131.25181580]
[153.29106140 143.38706970]
[162.10783386 155.52233887]
[170.92462158 167.65759277]
[179.74139404 179.79284668]
[200.46307373 176.23362732]
[220.07974243 183.59239197]
[233.25505066 199.78791809]
[236.44506836 220.34608459]
[228.85119629 239.63569641]
[239.04489136 250.63972473]
[249.23858643 261.64373779]
[259.43228149 272.64776611]
[269.62597656 283.65179443]
[279.81967163 294.65582275]
[290.01336670 305.65985107]
[300.20706177 316.66387939]
[310.40075684 327.66790771]
[320.59445190 338.67193604]
[336.20330811 337.72442627]
[348.73858643 347.07327271]
[352.28152466 362.30419922]
[345.15924072 376.22567749]
[330.73468018 382.26437378]
[315.81866455 377.56900024]
[307.45407104 364.35659790]
[309.59045410 348.86563110]
[299.39675903 337.86160278]
[289.20303345 326.85757446]
[279.00933838 315.85354614]
[268.81564331 304.84951782]
[258.62194824 293.84548950]
[248.42826843 282.84146118]
[238.23457336 271.83743286]
[228.04087830 260.83343506]
[217.84718323 249.82939148]
[209.26966858 253.89460754]
[199.95750427 255.80516052]
[190.44410706 255.44477844]
[181.27612305 252.82748413]
[172.98187256 248.09713745]
[166.04101562 241.51960754]
[160.85676575 233.46775818]
[157.73246765 224.40039062]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 145]
[4 144]
[5 143]
[6 142]
[7 141]
[8 140]
[13 114]
[14 113]
[15 112]
[16 111]
[17 110]
[18 109]
[19 105]
[20 104]
[21 103]
[22 102]
[23 101]
[24 39]
[25 38]
[26 37]
[27 36]
[28 35]
[41 94]
[42 93]
[43 92]
[44 91]
[45 90]
[46 89]
[49 86]
[50 85]
[60 82]
[61 81]
[62 80]
[65 77]
[66 76]
[67 75]
[68 74]
[69 73]
[119 139]
[120 138]
[121 137]
[122 136]
[123 135]
[124 134]
[126 133]
[127 132]
[150 176]
[151 175]
[152 174]
[153 173]
[154 172]
[155 171]
[156 170]
[157 169]
[158 168]
[159 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
