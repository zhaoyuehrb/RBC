%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 05:45:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCCCUGGUUACUCAUGUCCUCAAAGACGACUCAUGAUGCUGGAUAUGAAGAACUAUUGACUUCUUGGGAAAAAACGGAGAAAUAUUAAUUGGAAAGUUGAUUUUUAUGAUAAUAUGGAAAACCUAACCAUUAUAAAAAAGCAAACUUGAGUUUCCUAAAUGUAAGCAUUUAAAGUAAUGCAUAUUUGUUUUAAAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[-31.61269569 204.10331726]
[-23.88053894 191.25181580]
[-37.54249954 197.44461060]
[-51.20445633 203.63742065]
[-64.86641693 209.83023071]
[-78.52837372 216.02304077]
[-91.67073822 223.25341797]
[-104.21485138 231.47808838]
[-116.75897217 239.70274353]
[-129.30308533 247.92741394]
[-141.84719849 256.15209961]
[-145.18394470 271.36734009]
[-158.02262878 279.52963257]
[-172.50747681 276.25479126]
[-185.05158997 284.47946167]
[-197.59570312 292.70413208]
[-210.13983154 300.92880249]
[-222.68394470 309.15347290]
[-235.22805786 317.37811279]
[-247.77217102 325.60278320]
[-260.31628418 333.82745361]
[-255.74028015 348.21365356]
[-255.21646118 363.30102539]
[-258.78369141 377.96994019]
[-266.17730713 391.13189697]
[-276.84860229 401.81021118]
[-290.00570679 409.21243286]
[-304.67227173 412.78930664]
[-319.75997925 412.27539062]
[-334.14916992 407.70883179]
[-346.77209473 399.42846680]
[-356.69207764 388.04879761]
[-363.17291260 374.41424561]
[-365.73376465 359.53659058]
[-364.18453979 344.51986694]
[-358.64022827 330.47836304]
[-349.51226807 318.45413208]
[-337.47796631 309.33938599]
[-323.43038940 303.81051636]
[-308.41195679 302.27783203]
[-293.53713989 304.85501099]
[-279.90969849 311.35089111]
[-268.54095459 321.28335571]
[-255.99684143 313.05868530]
[-243.45272827 304.83401489]
[-230.90861511 296.60934448]
[-218.36448669 288.38467407]
[-205.82037354 280.16000366]
[-193.27626038 271.93533325]
[-180.73214722 263.71066284]
[-177.96017456 249.12123108]
[-165.35581970 240.60154724]
[-150.07186890 243.60797119]
[-137.52775574 235.38330078]
[-124.98364258 227.15863037]
[-112.43952179 218.93395996]
[-99.89540863 210.70930481]
[-114.87282562 209.88658142]
[-127.48820496 201.77165222]
[-134.44718933 188.48358154]
[-133.93254089 173.49241638]
[-126.07865143 160.71289062]
[-112.93646240 153.48220825]
[-97.93788147 153.68858337]
[-84.99959564 161.27810669]
[-77.50028229 174.26887512]
[-77.39827728 189.26852417]
[-84.72118378 202.36108398]
[-71.05922699 196.16827393]
[-57.39726639 189.97546387]
[-43.73530579 183.78265381]
[-30.07334709 177.58984375]
[-16.98732567 170.25799561]
[-4.57199049 161.84019470]
[7.84334421 153.42239380]
[20.25867844 145.00457764]
[32.67401505 136.58677673]
[45.08934784 128.16897583]
[57.50468445 119.75116730]
[69.92002106 111.33335876]
[68.75949860 92.43154907]
[78.44207764 76.15663147]
[95.60707855 68.15737915]
[114.29679871 71.21021271]
[123.91883850 59.70298386]
[133.54087830 48.19575500]
[143.16291809 36.68852615]
[152.78495789 25.18129539]
[149.44236755 13.76440334]
[152.00274658 2.26986694]
[159.71638489 -6.46911240]
[170.57832336 -10.35597134]
[181.84837341 -8.53312492]
[191.82191467 -19.73707199]
[201.79545593 -30.94101906]
[211.76899719 -42.14496613]
[221.74253845 -53.34891129]
[225.13909912 -68.80122375]
[239.38072205 -73.16304779]
[249.35426331 -84.36699677]
[259.32781982 -95.57094574]
[269.30136108 -106.77489471]
[278.65368652 -118.50236511]
[287.35742188 -130.71896362]
[296.06112671 -142.93556213]
[304.76486206 -155.15216064]
[313.46856689 -167.36875916]
[322.17230225 -179.58535767]
[330.87600708 -191.80195618]
[339.57971191 -204.01855469]
[348.28344727 -216.23515320]
[356.98715210 -228.45175171]
[349.72052002 -241.82925415]
[348.98571777 -256.97344971]
[354.87500000 -270.87802124]
[366.17089844 -280.80593872]
[380.59762573 -284.82827759]
[395.27929688 -282.19885254]
[403.98300171 -294.41543579]
[405.00619507 -310.78265381]
[419.81060791 -317.83682251]
[433.16674805 -308.32125854]
[431.33493042 -292.02474976]
[416.19961548 -285.71173096]
[407.49588013 -273.49511719]
[414.77651978 -260.47750854]
[415.68688965 -245.52825928]
[409.99301147 -231.60917664]
[398.77462769 -221.50134277]
[384.22100830 -217.24937439]
[369.20376587 -219.74803162]
[360.50003052 -207.53143311]
[351.79632568 -195.31483459]
[343.09262085 -183.09823608]
[334.38888550 -170.88163757]
[325.68518066 -158.66503906]
[316.98144531 -146.44844055]
[308.27774048 -134.23184204]
[299.57400513 -122.01524353]
[290.87030029 -109.79864502]
[305.65658569 -112.32173157]
[318.67074585 -104.86309052]
[323.96823120 -90.82967377]
[319.12924194 -76.63164520]
[306.36410522 -68.75434113]
[291.50369263 -70.79595947]
[281.33590698 -81.82392120]
[280.50531006 -96.80134583]
[270.53176880 -85.59740448]
[260.55819702 -74.39345551]
[250.58467102 -63.18950653]
[247.90148926 -48.53857422]
[232.94648743 -43.37537003]
[222.97294617 -32.17142105]
[212.99940491 -20.96747589]
[203.02586365 -9.76352787]
[193.05232239 1.44041884]
[195.21598816 19.61361313]
[183.20799255 33.84534454]
[164.29219055 34.80333710]
[154.67015076 46.31056595]
[145.04811096 57.81779480]
[135.42607117 69.32502747]
[125.80402374 80.83225250]
[130.93756104 91.27546692]
[132.01654053 102.86207581]
[128.89955139 114.07360077]
[140.48089600 123.60630798]
[152.06222534 133.13902283]
[163.64356995 142.67173767]
[175.22489929 152.20445251]
[190.92913818 150.42890930]
[203.23696899 160.34318542]
[204.84637451 176.06530762]
[194.80252075 188.26763916]
[179.06425476 189.71072388]
[166.96881104 179.53843689]
[165.69219971 163.78578186]
[154.11085510 154.25306702]
[142.52951050 144.72036743]
[130.94818115 135.18765259]
[119.36683655 125.65493774]
[109.50234222 130.70758057]
[98.50816345 132.10957336]
[87.69133759 129.69422913]
[78.33782196 123.74869537]
[65.92249298 132.16650391]
[53.50715637 140.58430481]
[41.09181976 149.00210571]
[28.67648506 157.41992188]
[16.26115036 165.83772278]
[3.84581518 174.25552368]
[-8.56952000 182.67333984]
[6.43002558 182.79011536]
[19.70211601 189.77951050]
[28.28460121 202.08158875]
[30.26199150 216.95066833]
[25.19295883 231.06820679]
[14.20884132 241.28335571]
[-0.23885643 245.31622314]
[-14.92560673 242.26673889]
[-26.57352829 232.81550598]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 72]
[3 71]
[4 70]
[5 69]
[6 68]
[7 57]
[8 56]
[9 55]
[10 54]
[11 53]
[14 50]
[15 49]
[16 48]
[17 47]
[18 46]
[19 45]
[20 44]
[21 43]
[73 193]
[74 192]
[75 191]
[76 190]
[77 189]
[78 188]
[79 187]
[80 186]
[84 164]
[85 163]
[86 162]
[87 161]
[88 160]
[93 157]
[94 156]
[95 155]
[96 154]
[97 153]
[99 151]
[100 150]
[101 149]
[102 148]
[103 140]
[104 139]
[105 138]
[106 137]
[107 136]
[108 135]
[109 134]
[110 133]
[111 132]
[112 131]
[118 125]
[119 124]
[167 182]
[168 181]
[169 180]
[170 179]
[171 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
