%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 02:51:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGUGAGAAGAAGAUUCAAUCGUAACUGUGUCAACAGUAUUGUGAAGUGAUCAUUUCUUGUAAAACUUGUAAAUAAACUAUCAUCUUUGUAGAUAUCUUAAAGGUGUAAAGUUUGCAAAUUUGAAGAAAUAUAUAUUAACACUGUGGUCAGGUACAUUCCUUAAAACUAAUUAAAUGUACAUUUCUAUAAUAAAUAUUUUUUAAACUAA\
) } def
/len { sequence length } bind def

/coor [
[85.57711029 288.61886597]
[82.21823120 272.93136597]
[92.50000000 260.61614990]
[92.50000000 245.61614990]
[92.50000000 230.61614990]
[81.81912994 220.29846191]
[81.60544586 205.08633423]
[92.50000000 193.95320129]
[92.50000000 178.95320129]
[92.50000000 163.95320129]
[92.50000000 148.95320129]
[92.50000000 133.95320129]
[92.50000000 118.95320892]
[79.32752228 111.77783966]
[66.72521210 119.91305542]
[54.12290192 128.04827881]
[41.52058792 136.18348694]
[40.54114914 151.55706787]
[30.81079865 163.26918030]
[16.22226715 166.96224976]
[2.42167449 161.42315674]
[-10.18063736 169.55836487]
[-22.78294945 177.69358826]
[-35.38526154 185.82879639]
[-47.98757172 193.96401978]
[-60.46736526 202.28596497]
[-72.82187653 210.79278564]
[-85.17638397 219.29962158]
[-97.53089142 227.80644226]
[-109.88540649 236.31326294]
[-116.44014740 251.34547424]
[-132.76393127 252.91589355]
[-142.06423950 239.40899658]
[-134.77372742 224.71952820]
[-118.39222717 223.95875549]
[-106.03771973 215.45193481]
[-93.68321228 206.94509888]
[-81.32870483 198.43827820]
[-68.97418976 189.93145752]
[-67.24235535 185.48063660]
[-62.69615555 182.07049561]
[-56.12278748 181.36170959]
[-43.52047729 173.22648621]
[-30.91816521 165.09127808]
[-18.31585312 156.95605469]
[-5.71354151 148.82084656]
[-5.07943439 133.96365356]
[4.29245996 122.18946838]
[18.97200394 118.14418030]
[33.38537216 123.58117676]
[45.98768616 115.44596100]
[58.58999634 107.31074524]
[71.19230652 99.17552948]
[75.69993591 84.86884308]
[70.03714752 70.97882080]
[64.37436676 57.08879089]
[58.71157837 43.19876480]
[53.04878998 29.30873680]
[47.38600540 15.41870975]
[41.72321701 1.52868247]
[35.58564377 -5.23652363]
[36.08122253 -12.61054516]
[30.62586403 -26.58334351]
[25.17050743 -40.55614090]
[19.71514893 -54.52893829]
[8.23733425 -60.41303253]
[3.98121333 -72.16331482]
[8.71562004 -83.29489136]
[3.46890187 -97.34736633]
[-1.77781630 -111.39983368]
[-7.02453470 -125.45230865]
[-12.27125263 -139.50477600]
[-17.51797104 -153.55725098]
[-22.76468849 -167.60972595]
[-28.01140785 -181.66218567]
[-40.02147675 -182.11657715]
[-51.14283752 -186.58120728]
[-60.08152390 -194.51147461]
[-65.80602264 -204.96104431]
[-67.66629028 -216.69473267]
[-65.46746826 -228.33450317]
[-59.49004745 -238.52128601]
[-50.45429611 -246.07371521]
[-55.06830597 -260.34646606]
[-59.68231583 -274.61917114]
[-64.29632568 -288.89190674]
[-68.91033173 -303.16464233]
[-73.52434540 -317.43737793]
[-78.13835144 -331.71011353]
[-82.75236511 -345.98284912]
[-88.36976624 -353.18582153]
[-87.32710266 -360.50256348]
[-91.72810364 -374.84240723]
[-104.09575653 -385.61148071]
[-100.68814850 -401.65267944]
[-85.01072693 -406.46420288]
[-73.19108582 -395.09634399]
[-77.38825226 -379.24340820]
[-72.98725891 -364.90356445]
[-68.47962952 -350.59686279]
[-63.86561966 -336.32412720]
[-59.25160980 -322.05139160]
[-54.63759995 -307.77865601]
[-50.02359009 -293.50592041]
[-45.40958405 -279.23318481]
[-40.79557419 -264.96044922]
[-36.18156433 -250.68772888]
[-18.30656433 -247.71200562]
[-4.35124922 -236.01962280]
[1.76532269 -218.78137207]
[-1.73167551 -200.74079895]
[-13.95893574 -186.90890503]
[-8.71221733 -172.85644531]
[-3.46549964 -158.80397034]
[1.78121853 -144.75149536]
[7.02793694 -130.69902039]
[12.27465534 -116.64655304]
[17.52137375 -102.59408569]
[22.76809120 -88.54161072]
[36.88640594 -78.11855316]
[33.68794632 -59.98429489]
[39.14330292 -46.01149750]
[44.59865952 -32.03870010]
[50.05401993 -18.06590271]
[55.61324310 -4.13410425]
[61.27603149 9.75592327]
[66.93881989 23.64595032]
[72.60160065 37.53597641]
[78.26438904 51.42600250]
[83.92717743 65.31603241]
[89.58996582 79.20605469]
[91.27963257 64.30152893]
[89.44239807 49.41446686]
[93.53986359 34.98495865]
[102.92681885 23.28516579]
[116.12512970 16.15742493]
[131.05648804 14.72411442]
[145.36972046 19.21093559]
[156.81094360 28.91136169]
[163.57856750 42.29789734]
[164.60688782 57.26260757]
[159.73400879 71.44904327]
[149.72563171 82.62451172]
[135.15356445 86.18190765]
[149.64726257 90.04621887]
[164.14096069 93.91052246]
[178.63464355 97.77482605]
[193.12834167 101.63912964]
[204.00280762 90.88304901]
[218.70397949 87.03959656]
[233.25837708 91.04410553]
[243.78376770 101.72456360]
[247.52473450 116.14228821]
[262.01843262 120.00659180]
[276.51211548 123.87089539]
[291.00579834 127.73519897]
[305.49951172 131.59950256]
[319.99319458 135.46380615]
[334.48687744 139.32812500]
[343.40701294 127.04821777]
[356.16290283 118.82315826]
[371.02941895 115.76530457]
[385.99603271 118.28821564]
[399.03860474 126.05068207]
[408.39324951 138.00289917]
[412.79476929 152.52841187]
[411.64797974 167.66279602]
[405.10791016 181.35922241]
[394.05908203 191.76536560]
[379.99575806 197.47389221]
[364.81988525 197.71275330]
[350.58386230 192.44966125]
[339.21301270 182.39640808]
[332.24511719 168.91259766]
[330.62258911 153.82180786]
[316.12887573 149.95750427]
[301.63519287 146.09320068]
[287.14151001 142.22889709]
[272.64779663 138.36459351]
[258.15411377 134.50028992]
[243.66041565 130.63598633]
[233.23815918 141.27751160]
[218.79261780 145.30021667]
[204.17648315 141.52728271]
[193.34014893 130.87503052]
[189.26403809 116.13282776]
[174.77033997 112.26852417]
[160.27665710 108.40421295]
[145.78295898 104.53990936]
[131.28926086 100.67560577]
[125.34194946 105.24500275]
[136.20870972 115.58489990]
[147.33749390 125.64225006]
[142.45094299 139.82397461]
[127.48896027 140.89131165]
[120.63870239 127.54754639]
[113.44731903 114.38380432]
[107.50000000 118.95320892]
[107.50000000 133.95320129]
[107.50000000 148.95320129]
[107.50000000 163.95320129]
[107.50000000 178.95320129]
[107.50000000 193.95320129]
[118.39455414 205.08633423]
[118.18087006 220.29846191]
[107.50000000 230.61614990]
[107.50000000 245.61614990]
[107.50000000 260.61614990]
[117.78176880 272.93136597]
[114.42288971 288.61886597]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 208]
[4 207]
[5 206]
[8 203]
[9 202]
[10 201]
[11 200]
[12 199]
[13 198]
[14 53]
[15 52]
[16 51]
[17 50]
[21 46]
[22 45]
[23 44]
[24 43]
[25 42]
[26 39]
[27 38]
[28 37]
[29 36]
[30 35]
[54 131]
[55 130]
[56 129]
[57 128]
[58 127]
[59 126]
[60 125]
[62 124]
[63 123]
[64 122]
[65 121]
[68 119]
[69 118]
[70 117]
[71 116]
[72 115]
[73 114]
[74 113]
[75 112]
[83 107]
[84 106]
[85 105]
[86 104]
[87 103]
[88 102]
[89 101]
[90 100]
[92 99]
[93 98]
[144 190]
[145 189]
[146 188]
[147 187]
[148 186]
[153 181]
[154 180]
[155 179]
[156 178]
[157 177]
[158 176]
[159 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
