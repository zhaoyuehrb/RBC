%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 19:27:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAGAAGAGUUGAGGCACAGGUGCAGUUACUCUCUCCCUGCCCCACCUUUGGGUACUAAUUCCCCCUUGGAAAGCCAGGCCCUCAACCUCUCAUUUGGACUGAGAAACACUUCCUGAUCCCCAGCUCUAGAGAAGCGAGAACUAGGCUGAGCCACGCUGCUACUGCUCUCUUCCAUUCACCCCUUCAGCUCAGCAACAAUAAAGCUGCUUUACUUGGA\
) } def
/len { sequence length } bind def

/coor [
[70.71294403 201.63557434]
[62.95339966 187.18838501]
[71.81414795 173.38912964]
[72.02737427 158.39065552]
[72.24060059 143.39216614]
[72.45381927 128.39367676]
[81.54312134 115.12299347]
[93.13819885 104.42081451]
[79.26982880 98.70520020]
[65.40145874 92.98957825]
[51.53308868 87.27396393]
[37.66471863 81.55834961]
[23.79634666 75.84272766]
[9.92797565 70.12711334]
[-5.77931547 72.02226257]
[-14.59818745 60.01906204]
[-28.46655846 54.30344391]
[-42.91105270 60.13391495]
[-56.89413071 54.13990402]
[-62.36357498 40.33335495]
[-76.23194885 34.61773682]
[-90.10031891 28.90212059]
[-103.96868896 23.18650246]
[-116.14910889 32.43770218]
[-131.22517395 34.33746338]
[-145.13549805 28.47494125]
[-154.18316650 16.51686859]
[-156.01817322 1.73517823]
[-169.88653564 -3.98043942]
[-183.75491333 -9.69605732]
[-199.46220398 -7.80090714]
[-208.28108215 -19.80410576]
[-222.14944458 -25.51972198]
[-236.01782227 -31.23534012]
[-250.46231079 -25.40487289]
[-264.44540405 -31.39888191]
[-269.91482544 -45.20542908]
[-283.78320312 -50.92104721]
[-297.65158081 -56.63666534]
[-302.00833130 -37.75566483]
[-322.67208862 -23.61498451]
[-337.43591309 -20.96360970]
[-352.19970703 -18.31223488]
[-366.96353149 -15.66086102]
[-381.72735596 -13.00948715]
[-389.34582520 0.64675117]
[-403.97830200 6.16263199]
[-418.71572876 0.93372518]
[-426.59960938 -12.57103920]
[-423.90737915 -27.97512436]
[-411.91021729 -38.00519180]
[-396.27282715 -37.92535400]
[-384.37872314 -27.77330208]
[-369.61489868 -30.42467499]
[-354.85110474 -33.07604980]
[-340.08728027 -35.72742462]
[-325.32345581 -38.37879944]
[-323.94534302 -45.75109482]
[-338.68994141 -48.50733948]
[-353.43453979 -51.26358032]
[-368.17913818 -54.01982498]
[-382.92367554 -56.77631378]
[-380.16696167 -71.52082062]
[-365.42288208 -68.76441956]
[-350.67828369 -66.00817871]
[-335.93368530 -63.25193405]
[-321.18908691 -60.49569321]
[-319.81097412 -67.86798859]
[-332.62002563 -75.67362976]
[-345.42910767 -83.47926331]
[-358.23815918 -91.28490448]
[-371.04721069 -99.09054565]
[-387.44564819 -98.93789673]
[-395.54287720 -113.19857788]
[-387.00915527 -127.20241547]
[-370.62326050 -126.54347229]
[-363.24157715 -111.89960480]
[-350.43252563 -104.09396362]
[-337.62347412 -96.28833008]
[-324.81439209 -88.48268890]
[-312.00534058 -80.67704773]
[-321.64282227 -92.17136383]
[-327.14633179 -106.12526703]
[-327.94989014 -121.10372162]
[-323.97088623 -135.56634521]
[-315.61853027 -148.02580261]
[-303.75173950 -157.20072937]
[-289.59091187 -162.14758301]
[-274.59237671 -162.35762024]
[-260.29861450 -157.80926514]
[-248.17953491 -148.97024536]
[-239.48152161 -136.74957275]
[-235.09909058 -122.40404510]
[-235.48289490 -107.40895844]
[-240.59349060 -93.30641174]
[-249.90530396 -81.54673004]
[-262.46069336 -73.33927155]
[-276.96844482 -69.52810669]
[-291.93597412 -70.50503540]
[-278.06759644 -64.78942108]
[-264.19921875 -59.07379913]
[-250.59007263 -65.01742554]
[-236.44415283 -59.41853714]
[-230.30220032 -45.10371017]
[-216.43382263 -39.38809204]
[-202.56546021 -33.67247772]
[-187.85012817 -35.97644424]
[-178.03929138 -23.56442833]
[-164.17092896 -17.84881020]
[-150.30255127 -12.13319302]
[-138.58538818 -21.32958603]
[-123.73948669 -23.44032097]
[-109.73783875 -17.79938889]
[-100.37818909 -5.82885218]
[-98.25306702 9.31813240]
[-84.38469696 15.03374958]
[-70.51632690 20.74936676]
[-56.64795685 26.46498489]
[-43.03881073 20.52136040]
[-28.89288712 26.12024879]
[-22.75094032 40.43507385]
[-8.88256931 46.15069199]
[5.83276224 43.84672165]
[15.64359283 56.25873947]
[29.51196480 61.97435760]
[43.38033676 67.68997192]
[57.24870682 73.40559387]
[71.11708069 79.12120819]
[84.98545074 84.83683014]
[98.85382080 90.55244446]
[113.25166321 94.75983429]
[128.01547241 97.41120148]
[142.77929688 100.06257629]
[157.54310608 102.71395111]
[172.49362183 97.53778076]
[183.65286255 107.40290070]
[198.41667175 110.05427551]
[213.18048096 112.70565033]
[219.96119690 99.21854401]
[230.25720215 88.19971466]
[243.22782898 80.53630829]
[257.81756592 76.84203339]
[272.84194946 77.40800476]
[287.08364868 82.17979431]
[299.39120483 90.76259613]
[308.77209473 102.45381927]
[314.47271729 116.30062866]
[316.03900146 131.17759705]
[330.80282593 133.82896423]
[345.56661987 136.48034668]
[360.33044434 139.13171387]
[375.09426880 141.78309631]
[389.85806274 144.43446350]
[404.62188721 147.08584595]
[415.43838501 127.17916107]
[432.87896729 112.75918579]
[454.41473389 105.89196777]
[476.93225098 107.55021667]
[497.18359375 117.47553253]
[512.25494385 134.21849060]
[519.98565674 155.35025024]
[534.97619629 154.81727600]
[548.58337402 145.66432190]
[563.19274902 153.11407471]
[563.77539062 169.50286865]
[549.73199463 177.97131348]
[535.50915527 169.80781555]
[520.51861572 170.34077454]
[519.19451904 178.57640076]
[516.72534180 186.54713440]
[513.15930176 194.09454346]
[508.56640625 201.06846619]
[503.03704834 207.33004761]
[496.68035889 212.75445557]
[489.62194824 217.23339844]
[482.00137329 220.67726135]
[473.96957397 223.01692200]
[465.68569946 224.20513916]
[457.31402588 224.21749878]
[449.02069092 223.05287170]
[440.97036743 220.73355103]
[433.32308960 217.30473328]
[426.23098755 212.83370972]
[419.83520508 207.40847778]
[414.26327515 201.13604736]
[409.62637329 194.14033508]
[406.01727295 186.55970764]
[403.50830078 178.54425049]
[402.15011597 170.25276184]
[401.97052002 161.84965515]
[387.20669556 159.19828796]
[372.44287109 156.54690552]
[357.67907715 153.89553833]
[342.91525269 151.24415588]
[328.15142822 148.59278870]
[313.38763428 145.94140625]
[306.74279785 159.34378052]
[296.58038330 170.34181213]
[283.71771240 178.03839111]
[269.19281006 181.80245972]
[254.18067932 181.32067871]
[239.89820862 176.62355042]
[227.50555420 168.08361816]
[218.01190186 156.38594055]
[212.19328308 142.47314453]
[210.52911377 127.46945953]
[195.76530457 124.81808472]
[181.00148010 122.16670990]
[167.10697937 127.53253174]
[154.89173889 117.47776794]
[140.12791443 114.82639313]
[125.36410522 112.17501831]
[110.60028839 109.52364349]
[104.81329346 114.29446411]
[93.23930359 123.83609009]
[87.45230865 128.60690308]
[87.23908234 143.60539246]
[87.02585602 158.60388184]
[86.81263733 173.60235596]
[95.27753448 187.64790344]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 219]
[4 218]
[5 217]
[6 216]
[8 130]
[9 129]
[10 128]
[11 127]
[12 126]
[13 125]
[14 124]
[16 122]
[17 121]
[20 118]
[21 117]
[22 116]
[23 115]
[28 110]
[29 109]
[30 108]
[32 106]
[33 105]
[34 104]
[37 101]
[38 100]
[39 99]
[41 57]
[42 56]
[43 55]
[44 54]
[45 53]
[68 81]
[69 80]
[70 79]
[71 78]
[72 77]
[131 213]
[132 212]
[133 211]
[134 210]
[136 208]
[137 207]
[138 206]
[148 196]
[149 195]
[150 194]
[151 193]
[152 192]
[153 191]
[154 190]
[161 168]
[162 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
