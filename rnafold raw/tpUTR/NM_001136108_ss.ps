%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 05:32:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCUGGAGACCCAACUGGCCUGGAUCUGCGUCCCGACGUAGCUGGCGCCCCCAACACCAUAAGCCUUCACAGACGCCAGAGCAGCCCCGCACCACCCUCGAGCUUCACCAUGGGGUGUGGUGGGCUUUAGUUUAGUCCCAGAAAUGGAGAAAAAAUAAAAACUCACGUUGUUCUAAUGUGA\
) } def
/len { sequence length } bind def

/coor [
[73.70738983 153.99388123]
[68.17594147 167.93673706]
[62.64449692 181.87959290]
[57.11305618 195.82243347]
[51.94244385 209.90309143]
[47.13609314 224.11221313]
[42.32974625 238.32133484]
[46.07513809 254.28704834]
[33.93751526 265.31472778]
[18.40302277 260.06005859]
[15.45221329 243.92858887]
[28.12062836 233.51498413]
[32.92697906 219.30586243]
[37.73332596 205.09674072]
[36.48839951 201.77279663]
[36.80689621 197.67703247]
[39.03547668 193.55793762]
[43.17020416 190.29100037]
[48.70164490 176.34814453]
[54.23308945 162.40528870]
[59.76453400 148.46243286]
[54.43852234 143.18194580]
[47.68606567 156.57614136]
[32.86081314 154.29318237]
[30.45080566 139.48805237]
[43.78649521 132.62097168]
[38.46048355 127.34047699]
[24.56562424 132.99139404]
[10.67076492 138.64230347]
[-3.22409463 144.29322815]
[-17.11895370 149.94415283]
[-31.01381302 155.59506226]
[-40.64790726 168.86595154]
[-56.92747498 166.88914490]
[-63.10549164 151.69821167]
[-52.82654190 138.92030334]
[-36.66473389 141.70021057]
[-22.76987267 136.04928589]
[-8.87501335 130.39837646]
[5.01984644 124.74745178]
[18.91470528 119.09653473]
[32.80956650 113.44561768]
[33.96719742 98.49034882]
[21.10747719 90.76846313]
[8.24775887 83.04656982]
[-4.61196089 75.32467651]
[-17.47167969 67.60278320]
[-30.33139992 59.88088989]
[-40.76122665 70.75132751]
[-53.34874344 79.02793121]
[-67.46256256 84.29554749]
[-82.39474487 86.28995514]
[-97.39630127 84.91111755]
[-111.71475220 80.22820282]
[-124.63188934 72.47608948]
[-135.49980164 62.04362488]
[-143.77334595 49.45410156]
[-149.03755188 35.33900452]
[-151.02833557 20.40633965]
[-149.64587402 5.40512323]
[-144.95947266 -8.91219044]
[-137.20423889 -21.82745171]
[-126.76913452 -32.69283295]
[-114.17761230 -40.96333694]
[-100.06124115 -46.22411346]
[-85.12808990 -48.21128464]
[-70.12721252 -46.82517624]
[-55.81103134 -42.13531876]
[-42.89765167 -34.37694550]
[-32.03479767 -23.93921852]
[-23.76734734 -11.34568882]
[-18.50999069 2.77195764]
[-16.52643776 17.70558548]
[-17.91617966 32.70613098]
[-22.60950851 47.02117157]
[-9.74978828 54.74306488]
[3.10993123 62.46495819]
[15.96965027 70.18685150]
[28.82937050 77.90873718]
[41.68909073 85.63063049]
[54.97616959 65.50447845]
[74.17829895 53.27711105]
[95.36580658 50.16755676]
[114.66828156 55.65131378]
[121.60402679 42.35110855]
[128.53977966 29.05090332]
[135.47550964 15.75069809]
[142.41125488 2.45049310]
[142.18080139 -2.81408548]
[143.84123230 -7.19317961]
[146.73258972 -10.11152554]
[150.06184387 -11.34220314]
[157.67306519 -24.26772881]
[165.28428650 -37.19325638]
[172.89552307 -50.11878204]
[180.50674438 -63.04430771]
[188.00674438 -76.03469086]
[195.39495850 -89.08896637]
[202.78318787 -102.14324951]
[210.17140198 -115.19752502]
[217.55963135 -128.25180054]
[217.62321472 -144.07287598]
[230.62567139 -151.33824158]
[226.16334534 -166.49948120]
[233.80186462 -180.33525085]
[249.00942993 -184.63703918]
[262.76367188 -176.85267639]
[266.90441895 -161.60047913]
[258.97506714 -147.92930603]
[243.67994690 -143.95002747]
[244.14480591 -129.06268311]
[230.61390686 -120.86358643]
[223.22567749 -107.80930328]
[215.83746338 -94.75502777]
[208.44924927 -81.70074463]
[201.06101990 -68.64646912]
[200.50134277 -61.25821304]
[193.43226624 -55.43308258]
[185.82104492 -42.50755692]
[178.20982361 -29.58202934]
[170.59858704 -16.65650368]
[162.98736572 -3.73097658]
[155.71147156 9.38623810]
[148.77572632 22.68644333]
[141.83998108 35.98664856]
[134.90423584 49.28685379]
[127.96849060 62.58705521]
[138.74850464 70.54656219]
[147.18690491 81.64184570]
[152.36962891 95.16198730]
[153.60406494 110.13089752]
[168.20303345 113.57621002]
[182.80200195 117.02153015]
[197.40097046 120.46684265]
[210.73878479 112.42070770]
[225.49513245 116.12271881]
[233.08369446 128.88787842]
[247.68266296 132.33319092]
[262.31066895 135.65306091]
[276.96661377 138.84725952]
[291.62258911 142.04145813]
[307.07192993 136.54150391]
[319.38262939 147.37564087]
[315.89050293 163.39865112]
[300.18792725 168.12744141]
[288.42837524 156.69741821]
[273.77243042 153.50321960]
[259.11645508 150.30902100]
[251.89349365 151.96080017]
[244.23735046 146.93215942]
[229.63838196 143.48683167]
[217.14328003 151.51229858]
[202.28877258 148.22622681]
[193.95564270 135.06581116]
[179.35667419 131.62049866]
[164.75772095 128.17517090]
[150.15875244 124.72986603]
[145.15943909 130.32064819]
[156.34100342 140.31927490]
[167.52241516 150.31806946]
[157.52345276 161.49932861]
[146.34237671 151.50083923]
[135.16081238 141.50221252]
[130.16149902 147.09300232]
[135.21105957 161.21751404]
[140.26062012 175.34202576]
[145.31018066 189.46655273]
[150.35974121 203.59106445]
[155.40928650 217.71557617]
[160.45884705 231.84008789]
[165.50840759 245.96461487]
[176.53388977 258.84387207]
[167.21012878 273.00378418]
[151.02249146 267.96426392]
[151.38389587 251.01417542]
[146.33433533 236.88964844]
[141.28477478 222.76513672]
[136.23521423 208.64062500]
[131.18565369 194.51609802]
[126.13610077 180.39158630]
[121.08654022 166.26707458]
[116.03697968 152.14256287]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 21]
[2 20]
[3 19]
[4 18]
[5 14]
[6 13]
[7 12]
[27 42]
[28 41]
[29 40]
[30 39]
[31 38]
[32 37]
[43 80]
[44 79]
[45 78]
[46 77]
[47 76]
[48 75]
[84 127]
[85 126]
[86 125]
[87 124]
[88 123]
[92 122]
[93 121]
[94 120]
[95 119]
[96 118]
[97 116]
[98 115]
[99 114]
[100 113]
[101 112]
[103 110]
[131 157]
[132 156]
[133 155]
[134 154]
[137 151]
[138 150]
[139 148]
[140 147]
[141 146]
[164 182]
[165 181]
[166 180]
[167 179]
[168 178]
[169 177]
[170 176]
[171 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
