%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 05:35:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCUUUUCUUUUACAUAGUCCAAAAAAUACAAGAUGACAACUCUUCCCGUUUUAUUUAUCUACAAUAGAAGUGUGAUGUGAGUUGUUGUUAAGACAGCCAUCCAUGUGCAUGAGCAUCAUCCAGCUUUUUUUGUUAGCAAAACAUUUACUGUUUUCUUUUCCCUUUUAAGACUCUGUUGAUGUGAUAAUUUGAUUUGGAAUUAUAAAGUCAUCUCUUCUCUGCCUA\
) } def
/len { sequence length } bind def

/coor [
[27.29892921 798.73028564]
[17.50638771 810.12280273]
[6.28270340 820.10839844]
[-6.17182493 828.50891113]
[-19.63493156 835.17437744]
[-33.86635208 839.98583984]
[-48.61211014 842.85742188]
[-63.60904694 843.73791504]
[-78.58953094 842.61157227]
[-93.28620911 839.49853516]
[-107.43681335 834.45434570]
[-120.78879547 827.56903076]
[-133.10388184 818.96539307]
[-144.16230774 808.79705811]
[-153.76669312 797.24548340]
[-161.74566650 784.51678467]
[-167.95681763 770.83819580]
[-172.28929138 756.45373535]
[-174.66580200 741.62011719]
[-175.04389954 726.60211182]
[-173.41687012 711.66772461]
[-169.81372070 697.08343506]
[-164.29878235 683.10955811]
[-156.97044373 669.99548340]
[-147.95951843 657.97521973]
[-137.42680359 647.26330566]
[-125.56025696 638.05090332]
[-112.57167053 630.50238037]
[-98.69282532 624.75250244]
[-84.17141724 620.90386963]
[-69.26659393 619.02508545]
[-54.24434662 619.14984131]
[-39.37276840 621.27575684]
[-35.29121780 606.84173584]
[-31.20966530 592.40771484]
[-27.12811470 577.97369385]
[-23.04656219 563.53967285]
[-18.96500969 549.10565186]
[-14.88345814 534.67163086]
[-27.86108017 523.83715820]
[-34.81451797 508.36688232]
[-34.29842758 491.35815430]
[-26.36834526 476.23974609]
[-12.57927036 466.08056641]
[4.31903172 462.96673584]
[8.00131416 448.42575073]
[11.68359661 433.88473511]
[15.36587811 419.34371948]
[5.70773792 408.03628540]
[4.54610205 393.03247070]
[12.53540993 380.07003784]
[26.79022980 374.22998047]
[30.47251320 359.68899536]
[20.81437111 348.38153076]
[19.65273476 333.37771606]
[27.64204407 320.41531372]
[41.89686203 314.57522583]
[45.57914734 300.03424072]
[49.26142883 285.49322510]
[52.94371033 270.95223999]
[56.62599182 256.41122437]
[60.20800781 241.84519958]
[63.68959045 227.25483704]
[67.07056427 212.64083862]
[70.35078430 198.00389099]
[73.63099670 183.36694336]
[76.91121674 168.72999573]
[80.19142914 154.09304810]
[83.47164917 139.45611572]
[86.75186920 124.81916046]
[49.37925720 106.26428986]
[50.37170410 45.27070236]
[40.83584976 33.69195557]
[31.29999161 22.11320496]
[23.43884087 17.48572350]
[21.71384239 10.30859089]
[12.33842945 -1.40044963]
[2.96301603 -13.10948944]
[-6.41239738 -24.81852913]
[-11.25289822 -26.70674133]
[-14.56125355 -29.93549156]
[-16.08368683 -33.69992828]
[-15.92125511 -37.21071625]
[-24.80478477 -49.29719162]
[-33.68831253 -61.38366699]
[-42.57184219 -73.47014618]
[-51.45537186 -85.55661774]
[-60.33889771 -97.64309692]
[-75.91709900 -101.47705078]
[-82.50131989 -116.10673523]
[-75.04070282 -130.30950928]
[-59.25839996 -133.19021606]
[-47.26124191 -122.53903198]
[-48.25242233 -106.52662659]
[-39.36889267 -94.44014740]
[-30.48536491 -82.35367584]
[-21.60183716 -70.26719666]
[-12.71830750 -58.18072128]
[-3.83477879 -46.09424210]
[5.29664278 -34.19394302]
[14.67205620 -22.48490334]
[24.04747009 -10.77586269]
[33.42288208 0.93317711]
[42.87874222 12.57734871]
[52.41460037 24.15609741]
[61.95045471 35.73484802]
[75.96155548 30.37862968]
[75.34168243 15.39144325]
[74.72180176 0.40425667]
[74.10192871 -14.58292961]
[64.87023163 -28.13681030]
[72.23514557 -42.78911591]
[88.62027740 -43.46681213]
[97.17002106 -29.47274017]
[89.08911896 -15.20280457]
[89.70899200 -0.21561794]
[90.32886505 14.77156830]
[90.94873810 29.75875473]
[98.25573730 31.44924355]
[101.63671875 16.83524513]
[105.01793671 2.22130084]
[119.63182831 5.60276413]
[116.25071716 20.21622276]
[112.86974335 34.83022308]
[120.17674255 36.52070999]
[127.31594849 23.32860565]
[134.45516968 10.13649940]
[126.92088318 -3.32597494]
[127.88381958 -18.72325706]
[137.03669739 -31.14213181]
[151.45886230 -36.61978149]
[166.54826355 -33.40830612]
[177.48991394 -22.53247643]
[180.79238892 -7.46273088]
[175.40187073 6.99222898]
[163.03845215 16.21987915]
[147.64726257 17.27570915]
[140.50805664 30.46781540]
[133.36885071 43.65992355]
[144.68095398 53.51163483]
[155.99205017 63.36248398]
[168.07852173 54.47895432]
[180.16499329 45.59542465]
[192.25148010 36.71189499]
[204.33795166 27.82836723]
[208.17190552 12.25016689]
[222.80158997 5.66594982]
[237.00436401 13.12656498]
[239.88507080 28.90886688]
[229.23388672 40.90602493]
[213.22148132 39.91484451]
[201.13500977 48.79837418]
[189.04852295 57.68190384]
[176.96205139 66.56542969]
[164.87557983 75.44895935]
[170.90100098 89.18556213]
[185.62277222 86.30989838]
[200.34454346 83.43424225]
[215.06631470 80.55857849]
[220.66851807 66.18433380]
[233.16609192 57.13921738]
[248.57112122 56.30950165]
[261.96792603 63.95994186]
[269.08163452 77.64930725]
[267.64227295 93.00938416]
[258.10913086 105.13880920]
[243.52423096 110.16714478]
[228.54153442 106.48985291]
[217.94198608 95.28035736]
[203.22021484 98.15601349]
[188.49844360 101.03166962]
[173.77665710 103.90733337]
[136.00363159 136.13085938]
[101.38880920 128.09938049]
[98.10859680 142.73632812]
[94.82837677 157.37327576]
[91.54816437 172.01022339]
[88.26794434 186.64715576]
[84.98773193 201.28410339]
[81.70751190 215.92105103]
[82.88420105 224.96685791]
[78.27994537 230.73641968]
[74.79837036 245.32678223]
[75.85030365 254.38793945]
[71.16699982 260.09350586]
[67.48471832 274.63452148]
[63.80243301 289.17550659]
[60.12015152 303.71652222]
[56.43786621 318.25753784]
[66.19504547 330.17825317]
[67.05200195 345.38085938]
[58.88934708 358.02343750]
[45.01351547 363.37127686]
[41.33123398 377.91226196]
[51.08841324 389.83300781]
[51.94536972 405.03558350]
[43.78271103 417.67819214]
[29.90688324 423.02600098]
[26.22459984 437.56701660]
[22.54231834 452.10803223]
[18.86003494 466.64901733]
[29.56505775 474.37298584]
[36.99328995 485.24664307]
[40.27992630 497.96566772]
[39.05539322 511.01324463]
[33.48678207 522.84088135]
[24.25542641 532.05236816]
[12.47360611 537.56842041]
[-0.44943783 538.75317383]
[-4.53098965 553.18719482]
[-8.61254215 567.62121582]
[-12.69409370 582.05523682]
[-16.77564621 596.48925781]
[-20.85719681 610.92327881]
[-24.93874931 625.35729980]
[-11.15607071 631.33404541]
[1.70698047 639.09454346]
[13.42084599 648.50030518]
[23.77647972 659.38354492]
[32.58907318 671.54992676]
[39.70135117 684.78240967]
[44.98639297 698.84484863]
[48.34988022 713.48626709]
[49.73178101 728.44531250]
[49.10744095 743.45507812]
[46.48799896 758.24774170]
[41.92020035 772.55920410]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 215]
[34 214]
[35 213]
[36 212]
[37 211]
[38 210]
[39 209]
[45 201]
[46 200]
[47 199]
[48 198]
[52 194]
[53 193]
[57 189]
[58 188]
[59 187]
[60 186]
[61 185]
[62 183]
[63 182]
[64 180]
[65 179]
[66 178]
[67 177]
[68 176]
[69 175]
[70 174]
[72 106]
[73 105]
[74 104]
[76 103]
[77 102]
[78 101]
[79 100]
[83 99]
[84 98]
[85 97]
[86 96]
[87 95]
[88 94]
[107 118]
[108 117]
[109 116]
[110 115]
[125 139]
[126 138]
[127 137]
[141 155]
[142 154]
[143 153]
[144 152]
[145 151]
[156 172]
[157 171]
[158 170]
[159 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
