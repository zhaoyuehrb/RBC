%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 15:11:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACCCUACUUCUCCCUCUGCAUUCCACUGGCUCUGCCAUGGACUAUACAAGCAGAUAAUUUUCCCUCUAUUCAAAAUAAAAUCUCCAAAUGAAAAUUUGGGAAUGUAGCAUACUAGU\
) } def
/len { sequence length } bind def

/coor [
[83.38091278 253.29934692]
[81.38318634 238.23025513]
[85.30904388 223.54502869]
[94.55982208 211.48303223]
[107.72485352 203.88366699]
[105.73397064 189.01637268]
[103.74308777 174.14907837]
[101.75220490 159.28179932]
[99.56359100 144.44232178]
[97.17764282 129.63328552]
[94.79168701 114.82426453]
[87.21052551 127.76744843]
[72.26834869 129.08328247]
[62.54179382 117.66426849]
[66.21755981 103.12161255]
[80.20189667 97.69569397]
[65.96092987 92.98454285]
[51.71996689 88.27339172]
[37.47900391 83.56224823]
[23.23804092 78.85109711]
[4.32969904 90.82531738]
[-17.10672951 85.38526917]
[-27.75867462 66.30652618]
[-42.56769943 63.92057419]
[-57.37672424 61.53461838]
[-72.18575287 59.14866638]
[-81.28758240 60.88463211]
[-87.35507965 56.49703217]
[-102.09534454 53.71770477]
[-116.83560181 50.93837357]
[-131.57586670 48.15904236]
[-148.26104736 51.16587067]
[-155.76928711 35.96512604]
[-143.24108887 24.54232407]
[-128.79653931 33.41877747]
[-114.05627441 36.19810867]
[-99.31600952 38.97743988]
[-84.57575226 41.75677109]
[-69.79979706 44.33964157]
[-54.99077225 46.72559357]
[-40.18174744 49.11154556]
[-25.37272072 51.49750137]
[-20.79352760 44.45328903]
[-14.27590275 39.09746933]
[-6.41434813 35.94520569]
[2.06595540 35.30944824]
[10.37602806 37.26997757]
[17.73649788 41.66407013]
[23.45069122 48.09978867]
[26.97055817 55.99087524]
[27.94919014 64.61013031]
[42.19015503 69.32128143]
[56.43111801 74.03243256]
[70.67208099 78.74358368]
[84.91304779 83.45473480]
[71.41678619 76.90866852]
[59.42320251 67.90011597]
[49.37588882 56.76227951]
[41.64645004 43.90709686]
[36.52077103 29.81002426]
[34.18843079 14.99246025]
[34.73569107 0.00244700]
[38.14231110 -14.60559654]
[44.28229523 -28.29137611]
[52.92855072 -40.54871368]
[63.76128387 -50.92425537]
[76.37983704 -59.03425217]
[90.31750488 -64.57875061]
[105.05878448 -67.35268402]
[120.05845642 -67.25344849]
[134.76174927 -64.28472137]
[148.62483215 -58.55629730]
[161.13497925 -50.28005219]
[171.82948303 -39.76208878]
[180.31280518 -27.39142799]
[186.27117920 -13.62560749]
[189.48422241 1.02623034]
[189.83309937 16.02217293]
[187.30491638 30.80757904]
[181.99316406 44.83559799]
[174.09431458 57.58739090]
[163.90051270 68.59131622]
[151.78878784 77.44039154]
[138.20709229 83.80731201]
[123.65664673 87.45677185]
[138.31770325 90.62751770]
[152.97874451 93.79825592]
[167.63980103 96.96899414]
[182.30085754 100.13973236]
[196.96189880 103.31047058]
[212.40243530 97.78578949]
[224.73045349 108.60021973]
[221.26396179 124.62879944]
[205.56898499 129.38270569]
[193.79116821 117.97151947]
[179.13011169 114.80078125]
[164.46907043 111.63004303]
[149.80801392 108.45930481]
[135.14695740 105.28856659]
[120.48590851 102.11782837]
[109.60071564 112.43831635]
[111.98666382 127.24733734]
[114.37261963 142.05636597]
[118.87941742 150.15240479]
[116.61949921 157.29090881]
[118.61038208 172.15820312]
[120.60126495 187.02549744]
[122.59214783 201.89279175]
[137.29275513 205.76066589]
[149.39115906 214.96377563]
[157.04241943 228.09870911]
[159.07978821 243.16249084]
[155.19258118 257.85800171]
[145.97357178 269.94427490]
[132.82856750 277.57824707]
[117.76212311 279.59582520]
[103.07173920 275.68927002]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 108]
[6 107]
[7 106]
[8 105]
[9 103]
[10 102]
[11 101]
[16 55]
[17 54]
[18 53]
[19 52]
[20 51]
[23 42]
[24 41]
[25 40]
[26 39]
[28 38]
[29 37]
[30 36]
[31 35]
[85 100]
[86 99]
[87 98]
[88 97]
[89 96]
[90 95]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
