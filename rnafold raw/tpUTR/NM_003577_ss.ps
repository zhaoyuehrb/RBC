%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 14:25:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCCCGGCUGCGGCCAGUCUCCCCUCUCCAGGCCGAGGCCCCUCCGCCCUGACCCCUCCUGCUGCCUUCCCACCCCCGUUCUUGGGUAUGUUCAAUAAAAGGAUUGUUUUCCUAGA\
) } def
/len { sequence length } bind def

/coor [
[65.40348053 142.37304688]
[56.91574097 133.70668030]
[50.54661560 123.38282013]
[46.60931015 111.90914154]
[45.29743195 99.84984589]
[46.67549133 87.79793549]
[32.65024948 82.47885895]
[18.62500572 77.15979004]
[2.97793579 79.50067902]
[-6.17858553 67.75302124]
[-20.20382881 62.43395233]
[-34.22907257 57.11487961]
[-48.25431824 51.79580688]
[-62.99296188 62.16771317]
[-80.85417175 61.72147369]
[-94.81132507 50.81800461]
[-99.48410034 33.89560699]
[-113.77463531 29.33702850]
[-128.06517029 24.77845192]
[-132.75791931 30.53715897]
[-138.67294312 35.00075150]
[-145.46423340 37.91911316]
[-152.73712158 39.13220215]
[-160.07121277 38.57879639]
[-167.04469299 36.29952621]
[-173.25859070 32.43403244]
[-178.35958862 27.21244049]
[-182.06015015 20.94166374]
[-184.15463257 13.98739338]
[-184.53080750 6.75275373]
[-183.17576599 -0.34504926]
[-195.96009827 -8.19111156]
[-208.74443054 -16.03717422]
[-224.55332947 -16.66122246]
[-231.35350037 -29.91290474]
[-244.13783264 -37.75896835]
[-256.92218018 -45.60503006]
[-273.32101440 -45.50418472]
[-281.37313843 -59.79037094]
[-272.79522705 -73.76718903]
[-256.41149902 -73.05648041]
[-249.07611084 -58.38936615]
[-236.29176331 -50.54330444]
[-223.50743103 -42.69724274]
[-208.61296082 -42.63439560]
[-200.89837646 -28.82151222]
[-188.11404419 -20.97545052]
[-175.32969666 -13.12938786]
[-153.43562317 -21.86640358]
[-131.70797729 -12.12252426]
[-123.50659180 10.48791695]
[-109.21605682 15.04649448]
[-94.92552185 19.60507202]
[-86.19902802 10.95650482]
[-74.53760529 6.86360455]
[-62.17564392 8.17666245]
[-51.51020813 14.70376301]
[-44.63626099 25.23591614]
[-42.93524170 37.77056122]
[-28.90999985 43.08963394]
[-14.88475609 48.40870667]
[-0.85951239 53.72778320]
[13.78437805 51.00643158]
[23.94407845 63.13454437]
[37.96932220 68.45361328]
[51.99456787 73.77268982]
[66.98918152 56.38028717]
[87.80111694 46.67476273]
[110.76280975 46.36647034]
[131.82781982 55.50973892]
[147.28398132 72.49329376]
[161.16136169 66.79959106]
[167.32591248 52.49448013]
[181.48065186 46.91794205]
[195.08039856 52.88305664]
[208.95777893 47.18935013]
[222.83515930 41.49564362]
[236.71253967 35.80194092]
[246.30569458 22.50143623]
[262.59127808 24.42807007]
[268.81607056 39.59988403]
[258.57653809 52.40942001]
[242.40625000 49.67932129]
[228.52886963 55.37302780]
[214.65148926 61.06673050]
[200.77410889 66.76043701]
[195.28286743 80.55832672]
[181.29032898 86.53024292]
[166.85507202 80.67697144]
[152.97769165 86.37067413]
[154.16995239 92.38360596]
[154.68199158 98.49217987]
[154.50735474 104.61968994]
[153.64825439 110.68918610]
[152.11546326 116.62445831]
[149.92822266 122.35095978]
[147.11402893 127.79679871]
[143.70819092 132.89356995]
[139.75349426 137.57730103]
[135.29959106 141.78913879]
[143.31657410 154.46699524]
[151.33357239 167.14483643]
[159.35055542 179.82269287]
[174.82177734 183.05018616]
[183.40939331 196.31776428]
[180.01849365 211.75399780]
[166.66087341 220.20085144]
[151.26135254 216.64695740]
[142.95619202 203.20077515]
[146.67269897 187.83967590]
[138.65571594 175.16183472]
[130.63873291 162.48397827]
[122.62174225 149.80612183]
[111.08903503 153.56703186]
[99.01103973 154.69383240]
[86.98167419 153.13113403]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 66]
[7 65]
[8 64]
[10 62]
[11 61]
[12 60]
[13 59]
[17 53]
[18 52]
[19 51]
[31 48]
[32 47]
[33 46]
[35 44]
[36 43]
[37 42]
[71 90]
[72 89]
[75 86]
[76 85]
[77 84]
[78 83]
[100 113]
[101 112]
[102 111]
[103 110]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
