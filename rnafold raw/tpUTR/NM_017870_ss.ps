%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 01:32:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCCACAGCCACCUGGUCAGCCACCAGCUGGGGCAACGAGGGUGGAGGUCCCACUGAGCCUCUCGCCUGCCCCCGCCACUCGUCUGGUGCUUGUUGAUCCAAGUCCCCUGCCUGGUCCCCCACAAGGACUCCCAUCCAGGCCCCCUCUGCCCUGCCCCUUGUCAUGGACCAUGGUCGUGAGGAAGGGCUCAUGCCCCUUAUUUAUGGGAACCAUUUCAUUCUAACAGAAUAAACCGAGAAGGAAACCAGA\
) } def
/len { sequence length } bind def

/coor [
[334.07672119 357.15155029]
[339.76885986 343.49429321]
[328.68002319 333.39291382]
[317.59121704 323.29153442]
[306.50238037 313.19015503]
[299.46032715 311.01498413]
[295.33956909 302.89382935]
[284.37704468 292.65551758]
[269.79437256 289.62316895]
[264.98983765 274.54913330]
[254.02729797 264.31082153]
[243.06475830 254.07254028]
[232.10221863 243.83424377]
[227.40847778 243.09626770]
[223.12013245 239.41888428]
[220.99858093 233.20298767]
[210.29367065 222.69563293]
[199.58874512 212.18826294]
[188.88381958 201.68089294]
[178.17890930 191.17353821]
[163.22052002 192.29006958]
[154.19412231 204.27021790]
[145.16772461 216.25038147]
[145.96871948 232.27342224]
[133.84594727 242.78141785]
[118.09896851 239.71353149]
[110.80749512 225.42318726]
[117.56494141 210.87271118]
[133.18756104 207.22398376]
[142.21395874 195.24382019]
[151.24035645 183.26367188]
[150.40261841 168.28707886]
[140.09646606 157.38832092]
[129.79029846 146.48954773]
[119.48413849 135.59078979]
[109.17797852 124.69203186]
[98.87181091 113.79326630]
[84.96949005 108.16073608]
[69.98365021 108.81244659]
[54.99781799 109.46414948]
[40.01198196 110.11585999]
[25.02614594 110.76756287]
[10.04464436 111.51229858]
[-4.93194389 112.35003662]
[-19.90853310 113.18776703]
[-34.88512039 114.02550507]
[-49.86170959 114.86324310]
[-63.20822144 123.35919189]
[-76.34774780 116.34477234]
[-91.32434082 117.18251038]
[-106.30092621 118.02024841]
[-111.61199951 129.30250549]
[-121.15357208 137.21850586]
[-133.08294678 140.31893921]
[-145.12971497 138.07691956]
[-155.02781677 130.97639465]
[-160.94186401 120.40930176]
[-175.93463135 120.87487793]
[-190.92739868 121.34045410]
[-205.92018127 121.80603027]
[-221.56401062 128.34107971]
[-232.17431641 115.11769867]
[-222.40492249 101.26145935]
[-206.38575745 106.81326294]
[-191.39297485 106.34768677]
[-176.40020752 105.88211060]
[-161.40744019 105.41653442]
[-152.14300537 90.35700989]
[-135.53932190 83.83509827]
[-118.19847870 88.64767456]
[-107.13866425 103.04365540]
[-92.16207123 102.20592499]
[-77.18548584 101.36818695]
[-64.91020203 92.93215942]
[-50.69944382 99.88665009]
[-35.72285843 99.04891968]
[-20.74626923 98.21118164]
[-5.76968002 97.37344360]
[9.20690823 96.53571320]
[15.69212437 93.03374481]
[24.37443924 95.78173065]
[39.36027527 95.13002014]
[54.34611130 94.47831726]
[69.33194733 93.82660675]
[84.31777954 93.17490387]
[87.34844208 86.31449890]
[93.40976715 72.59369659]
[96.44042206 65.73329926]
[86.83035278 54.21607208]
[72.04816437 48.57715607]
[69.83498383 33.84789276]
[60.22491074 22.33066559]
[50.61484146 10.81343746]
[41.00477219 -0.70379138]
[31.39470100 -12.22101974]
[15.63385963 -13.39209747]
[5.38077450 -25.41914177]
[6.71841955 -41.16672134]
[18.85319328 -51.29207611]
[34.58575058 -49.78801346]
[44.58224106 -37.54686737]
[42.91193008 -21.83109093]
[52.52199936 -10.31386089]
[62.13206863 1.20336723]
[71.74214172 12.72059631]
[81.35221100 24.23782539]
[95.44702148 29.05295181]
[98.34757996 44.60599899]
[107.95764923 56.12322998]
[115.04006958 53.65555573]
[129.20489502 48.72021103]
[136.28730774 46.25254059]
[136.65979004 31.25716400]
[137.03227234 16.26178932]
[137.40475464 1.26641572]
[137.77723694 -13.72895908]
[138.14971924 -28.72433281]
[137.87034607 -43.72173309]
[136.93965149 -58.69282913]
[136.00894165 -73.66392517]
[123.32263184 -82.80677032]
[119.53138733 -97.97781372]
[126.42532349 -112.01374817]
[140.74932861 -118.28724670]
[155.74005127 -113.83615112]
[164.31933594 -100.76213074]
[162.43627930 -85.23833466]
[150.98004150 -74.59463501]
[151.91073608 -59.62353516]
[152.84144592 -44.65243530]
[162.55030823 -56.08650589]
[177.31944275 -58.70808792]
[190.37039185 -51.31398392]
[195.71327209 -37.29779434]
[190.89591980 -23.09240341]
[178.12930298 -15.21753311]
[163.27281189 -17.28744125]
[153.14509583 -28.35185051]
[152.77261353 -13.35647583]
[152.40013123 1.63889825]
[152.02764893 16.63427353]
[151.65516663 31.62964821]
[151.28268433 46.62502289]
[158.79873657 33.64392090]
[172.63928223 39.42658234]
[183.57438660 49.69418335]
[190.21617126 63.14359283]
[191.72171021 78.06784821]
[187.89991760 92.57280731]
[179.23583984 104.81754303]
[166.82908630 113.24800110]
[152.25430298 116.79419708]
[137.36125183 115.00607300]
[124.04022980 108.11063385]
[109.77057648 103.48710632]
[120.07673645 114.38586426]
[130.38290405 125.28462982]
[140.68905640 136.18339539]
[150.99522400 147.08215332]
[161.30139160 157.98091125]
[166.80490112 157.03398132]
[172.16911316 157.36267090]
[177.11293030 158.85595703]
[181.39778137 161.34405518]
[184.83909607 164.61181641]
[187.31407166 168.41403198]
[188.76522827 172.49189758]
[189.19999695 176.58935547]
[188.68626404 180.46861267]
[199.39118958 190.97598267]
[210.09609985 201.48333740]
[220.80102539 211.99070740]
[231.50595093 222.49807739]
[242.34051514 232.87170410]
[253.30305481 243.11000061]
[264.26559448 253.34829712]
[275.22811890 263.58657837]
[290.59490967 267.35125732]
[294.61532593 281.69299316]
[305.57788086 291.93127441]
[316.60375977 302.10131836]
[327.69259644 312.20269775]
[338.78143311 322.30407715]
[349.87023926 332.40548706]
[368.34039307 323.88867188]
[390.32238770 328.74798584]
[406.35052490 347.52947998]
[421.31555176 348.55313110]
[436.28057861 349.57675171]
[451.24560547 350.60040283]
[465.72817993 342.90707397]
[479.48669434 351.83093262]
[478.36758423 368.19186401]
[463.52209473 375.15911865]
[450.22198486 365.56542969]
[435.25692749 364.54177856]
[420.29190063 363.51815796]
[405.32687378 362.49450684]
[401.63076782 369.02053833]
[414.68280029 376.41275024]
[427.73483276 383.80493164]
[440.78671265 391.19735718]
[433.39407349 404.24914551]
[420.34262085 396.85696411]
[407.29058838 389.46475220]
[394.23855591 382.07254028]
[390.54248047 388.59857178]
[399.11642456 400.90658569]
[407.69036865 413.21459961]
[423.08889771 413.65206909]
[435.13641357 422.96392822]
[439.34091187 437.41336060]
[434.29122925 451.40045166]
[442.86517334 463.70846558]
[457.10205078 470.60937500]
[458.02819824 485.47515869]
[466.60214233 497.78317261]
[475.17608643 510.09118652]
[483.75006104 522.39923096]
[492.70190430 534.43518066]
[502.02301025 546.18750000]
[511.34411621 557.93981934]
[520.66522217 569.69213867]
[529.98632812 581.44445801]
[544.56610107 590.09698486]
[540.28784180 606.50225830]
[523.33935547 606.93255615]
[518.23400879 590.76556396]
[508.91290283 579.01324463]
[499.59179688 567.26092529]
[490.27069092 555.50860596]
[480.94958496 543.75628662]
[476.81341553 558.17474365]
[463.01129150 564.04858398]
[449.75320435 557.03271484]
[446.84658813 542.31701660]
[456.44161987 530.78723145]
[471.44204712 530.97314453]
[462.86807251 518.66516113]
[454.29412842 506.35714722]
[445.72018433 494.04913330]
[432.09658813 488.02856445]
[430.55715942 472.28244019]
[421.98321533 459.97442627]
[407.11291504 459.86389160]
[395.01599121 450.91244507]
[390.45629883 436.38442993]
[395.38235474 421.78854370]
[386.80841064 409.48052979]
[378.23443604 397.17251587]
[359.55639648 396.08160400]
[344.29434204 387.05792236]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 184]
[3 183]
[4 182]
[5 181]
[7 180]
[8 179]
[10 177]
[11 176]
[12 175]
[13 174]
[16 173]
[17 172]
[18 171]
[19 170]
[20 169]
[21 31]
[22 30]
[23 29]
[32 160]
[33 159]
[34 158]
[35 157]
[36 156]
[37 155]
[38 85]
[39 84]
[40 83]
[41 82]
[42 81]
[43 79]
[44 78]
[45 77]
[46 76]
[47 75]
[49 73]
[50 72]
[51 71]
[57 67]
[58 66]
[59 65]
[60 64]
[88 109]
[89 108]
[91 106]
[92 105]
[93 104]
[94 103]
[95 102]
[112 143]
[113 142]
[114 141]
[115 140]
[116 139]
[117 138]
[118 130]
[119 129]
[120 128]
[187 198]
[188 197]
[189 196]
[190 195]
[207 250]
[208 249]
[209 248]
[213 244]
[214 243]
[216 241]
[217 240]
[218 239]
[219 238]
[220 232]
[221 231]
[222 230]
[223 229]
[224 228]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
