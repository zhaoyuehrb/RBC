%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 22:14:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCCUCUGCCACCCAGGCAGGCCCUGCCUUCAGCCCUGGCCCAGAGCUGGAACACUCUCUGAGAUGCCCCUCUGCCUGGGCUUAUGCCCUCAGAUGGAGACAUUGGAUGUGGAGCUCCUGCUGGAUGCGUGCCCUGACCCCUGCACCAGCCCUUCCCUGCUUUGAGGACAAAGAGAAUAAAGACUUCAUGUUCACAGCC\
) } def
/len { sequence length } bind def

/coor [
[104.04370117 182.01446533]
[98.33053589 195.88385010]
[92.61737061 209.75321960]
[86.90420532 223.62260437]
[87.60036469 228.81213379]
[86.35581970 233.29849243]
[83.76522827 236.45896912]
[80.58444977 237.99806213]
[74.22747040 251.58439636]
[67.87049866 265.17074585]
[61.51351929 278.75711060]
[65.60712433 294.26910400]
[55.91646194 307.05465698]
[39.87537766 307.30578613]
[29.78921509 294.82986450]
[33.39521790 279.19732666]
[47.92716980 272.40011597]
[54.28414536 258.81378174]
[60.64112091 245.22743225]
[66.99810028 231.64108276]
[73.03482819 217.90943909]
[78.74799347 204.04005432]
[84.46115875 190.17068481]
[90.17432404 176.30130005]
[95.56078339 162.30178833]
[100.61758423 148.17987061]
[105.67437744 134.05793762]
[100.51809692 128.61158752]
[90.20554352 117.71887207]
[85.04926300 112.27252197]
[70.67197418 116.54960632]
[56.29468155 120.82669067]
[41.91738892 125.10378265]
[27.54009628 129.38085938]
[13.16280365 133.65795898]
[2.14173651 145.00901794]
[-12.26338387 141.22196960]
[-26.64067650 145.49905396]
[-41.01796722 149.77613831]
[-54.47550964 160.08782959]
[-68.10963440 150.01077271]
[-62.20069122 134.11987305]
[-45.29505539 135.39884949]
[-30.91776276 131.12176514]
[-16.54047012 126.84467316]
[-6.54776430 115.79953766]
[8.88571644 119.28066254]
[23.26300812 115.00357056]
[37.64030075 110.72648621]
[52.01759338 106.44940186]
[66.39488220 102.17230988]
[80.77217865 97.89522552]
[80.83078766 90.39545441]
[67.89939880 82.79419708]
[80.94801331 75.39591217]
[81.00662231 67.89614105]
[66.69793701 63.39487457]
[52.38924408 58.89360428]
[35.46568298 59.90820312]
[29.80582809 43.92689133]
[43.59577942 34.06415558]
[56.89051437 44.58491516]
[71.19920349 49.08618546]
[85.50788879 53.58745575]
[95.02945709 41.99694824]
[87.83604431 28.83431625]
[80.64263153 15.67168617]
[73.34657288 2.56567287]
[65.84657288 -10.42470837]
[58.24528885 -23.35608101]
[44.58175278 -31.33219719]
[44.80243683 -46.22516632]
[37.20114899 -59.15653992]
[29.59986115 -72.08791351]
[21.99857140 -85.01928711]
[11.32034588 -87.14201355]
[3.73256040 -94.64007568]
[1.57404375 -104.86248779]
[5.32204771 -114.37918854]
[-1.87136340 -127.54181671]
[-9.06477451 -140.70445251]
[-16.25818443 -153.86708069]
[-30.53796959 -161.93057251]
[-30.42408752 -178.32931519]
[-16.03369331 -186.19371033]
[-2.17038965 -177.43351746]
[-3.09555483 -161.06048584]
[4.09785604 -147.89785767]
[11.29126740 -134.73522949]
[18.48467827 -121.57260132]
[35.69030380 -112.75938416]
[34.92994308 -92.62057495]
[42.53123474 -79.68920135]
[50.13252258 -66.75782776]
[57.73381042 -53.82645416]
[70.85365295 -46.77528000]
[71.17665863 -30.95737076]
[78.77794647 -18.02599716]
[84.88264465 -13.84931278]
[86.39517212 -4.83258057]
[92.43384552 -0.56099510]
[93.80525970 8.47827530]
[100.99867249 21.64090538]
[108.19208527 34.80353546]
[131.60742188 115.34005737]
[146.60330200 114.98841858]
[161.59918213 114.63677979]
[176.59506226 114.28514099]
[191.59092712 113.93350220]
[206.58680725 113.58187103]
[221.58268738 113.23023224]
[236.57856750 112.87859344]
[251.57444763 112.52695465]
[266.57031250 112.17531586]
[281.56619263 111.82367706]
[296.55886841 111.35485840]
[311.54742432 110.76889038]
[318.75933838 91.33417511]
[336.52264404 78.27791595]
[359.85186768 77.04151154]
[381.17846680 89.46077728]
[394.61206055 82.78705597]
[408.04565430 76.11332703]
[421.47924805 69.43959808]
[434.91284180 62.76587296]
[441.21234131 56.13973999]
[448.60894775 56.09466553]
[462.14520264 49.63171005]
[475.68145752 43.16875458]
[489.21771240 36.70579529]
[498.33749390 23.77753067]
[513.15655518 25.27608299]
[515.84582520 9.99382401]
[527.02752686 -0.76483190]
[542.40209961 -2.86296248]
[556.05767822 4.50620604]
[562.74340820 18.50907898]
[559.88854980 33.76126480]
[548.59075928 44.39798737]
[533.19433594 46.32920837]
[519.61950684 38.81233597]
[511.46789551 51.27832794]
[495.68066406 50.24205017]
[482.14440918 56.70500946]
[468.60815430 63.16796494]
[455.07189941 69.63092041]
[441.58657837 76.19946289]
[428.15298462 82.87319183]
[414.71939087 89.54692078]
[401.28579712 96.22064209]
[387.85220337 102.89437103]
[387.67639160 110.39231110]
[402.67227173 110.74394989]
[417.66812134 111.09581757]
[417.31604004 126.09169006]
[402.32061768 125.73983002]
[387.32473755 125.38819122]
[387.14892578 132.88612366]
[400.25494385 140.18217468]
[409.28320312 141.62420654]
[413.50747681 147.69607544]
[426.49786377 155.19607544]
[439.48825073 162.69607544]
[452.47860718 170.19607544]
[465.46899414 177.69607544]
[481.85922241 177.15498352]
[490.29199219 191.21983337]
[482.09243774 205.42192078]
[465.69552612 205.15133667]
[457.96899414 190.68644714]
[444.97860718 183.18644714]
[431.98825073 175.68644714]
[418.99786377 168.18644714]
[406.00747681 160.68644714]
[392.95889282 153.28819275]
[379.85287476 145.99214172]
[366.61114502 154.68200684]
[351.68124390 157.93638611]
[337.12777710 155.71029663]
[324.82431030 148.69052124]
[316.21212769 138.15463257]
[312.13339233 125.75743866]
[297.14483643 126.34340668]
[290.57861328 129.74877930]
[281.91784668 126.81954956]
[266.92196655 127.17118835]
[251.92608643 127.52282715]
[236.93020630 127.87446594]
[221.93432617 128.22610474]
[206.93844604 128.57774353]
[191.94256592 128.92938232]
[176.94670105 129.28102112]
[161.95082092 129.63265991]
[146.95494080 129.98429871]
[131.95906067 130.33593750]
[119.79630280 139.11474609]
[114.73950958 153.23666382]
[109.68270874 167.35859680]
[110.62134552 172.50978088]
[109.58845520 177.04954529]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 24]
[2 23]
[3 22]
[4 21]
[8 20]
[9 19]
[10 18]
[11 17]
[25 198]
[26 197]
[27 196]
[30 52]
[31 51]
[32 50]
[33 49]
[34 48]
[35 47]
[37 45]
[38 44]
[39 43]
[56 64]
[57 63]
[58 62]
[65 104]
[66 103]
[67 102]
[68 100]
[69 98]
[70 97]
[72 95]
[73 94]
[74 93]
[75 92]
[79 90]
[80 89]
[81 88]
[82 87]
[105 195]
[106 194]
[107 193]
[108 192]
[109 191]
[110 190]
[111 189]
[112 188]
[113 187]
[114 186]
[115 185]
[116 183]
[117 182]
[121 151]
[122 150]
[123 149]
[124 148]
[125 147]
[127 146]
[128 145]
[129 144]
[130 143]
[132 141]
[158 176]
[159 175]
[161 174]
[162 173]
[163 172]
[164 171]
[165 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
