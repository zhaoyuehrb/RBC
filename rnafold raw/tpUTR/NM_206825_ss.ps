%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 21:46:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGAACAAUGGCUUUUUAUGAUUUUUUUUUUAACAUUUUAAGCAGACUGCUAAACUGUUCUCUGUAUAAGUUAUGGUAUGCAUGAGCUGUGUAAAUUUUGUGAAUAUGUAUUAUAUUAAAACCAGGCAACUUGGAAUCCCUAAAUUCUGUAAAAAGACAAUUCAUCUCAUUGUGAGUGGAAGUAGUUAUCUGGAAUAAAAAAAGAAGAUACCUAUUGAA\
) } def
/len { sequence length } bind def

/coor [
[62.40636063 745.59222412]
[46.90352249 744.92767334]
[34.77303696 735.25140381]
[30.67932701 720.28405762]
[36.19650650 705.78094482]
[49.20310593 697.31878662]
[49.84550858 682.33251953]
[50.48791122 667.34631348]
[51.13031006 652.36004639]
[51.77271271 637.37384033]
[52.41511536 622.38757324]
[45.66174316 619.21343994]
[39.98046112 614.33404541]
[35.79302216 608.09265137]
[33.41532135 600.93432617]
[33.03358459 593.37420654]
[34.68987274 585.96026611]
[38.27797699 579.23388672]
[43.55012512 573.69000244]
[50.13403320 569.74090576]
[57.55917740 567.68572998]
[59.69390106 552.83837891]
[61.82862473 537.99102783]
[63.96334457 523.14373779]
[66.09806824 508.29641724]
[68.23278809 493.44909668]
[70.36751556 478.60177612]
[72.50223541 463.75445557]
[74.63695526 448.90713501]
[76.77168274 434.05981445]
[78.90640259 419.21249390]
[69.81936646 410.08255005]
[67.61509705 397.19375610]
[73.31867981 385.21148682]
[85.05115509 378.60418701]
[87.39767456 363.78887939]
[89.74418640 348.97354126]
[92.09070587 334.15820312]
[94.43722534 319.34289551]
[96.78373718 304.52755737]
[94.72684479 297.43411255]
[99.27099609 289.51806641]
[90.50595093 277.53015137]
[92.88940430 262.50439453]
[105.52284241 253.39208984]
[108.08067322 238.61178589]
[110.63850403 223.83146667]
[113.19634247 209.05116272]
[115.75417328 194.27085876]
[118.31200409 179.49055481]
[120.86983490 164.71023560]
[76.05612946 163.99475098]
[41.20524979 135.46420288]
[31.56037903 91.24379730]
[18.29388618 84.24378967]
[2.47781348 84.64682007]
[-5.16785955 71.86429596]
[-18.43435287 64.86428833]
[-31.70084763 57.86427689]
[-44.96734238 50.86426926]
[-57.49341965 53.92169952]
[-68.39706421 47.82351303]
[-72.10237885 36.31280899]
[-85.26756287 29.12407494]
[-98.43274689 21.93533897]
[-111.59793091 14.74660492]
[-124.76312256 7.55786991]
[-137.92829895 0.36913517]
[-151.89143372 7.13749075]
[-167.16021729 4.37274933]
[-177.86349487 -6.86198997]
[-179.88565063 -22.24674034]
[-172.44911194 -35.86574936]
[-158.41337585 -42.48223495]
[-143.17547607 -39.55202103]
[-132.59471130 -28.20183182]
[-130.73956299 -12.79605007]
[-117.57438660 -5.60731506]
[-104.40920258 1.58141994]
[-91.24401093 8.77015495]
[-78.07882690 15.95888996]
[-64.91364288 23.14762497]
[-47.41456223 21.78814316]
[-37.96733093 37.59777451]
[-24.70083809 44.59778214]
[-11.43434429 51.59779358]
[1.83215010 58.59780121]
[16.69931412 57.69408035]
[25.29389572 70.97729492]
[38.56039047 77.97730255]
[44.98300552 74.10432434]
[36.69654846 61.60094070]
[28.41008568 49.09755707]
[20.12362671 36.59417725]
[7.75856686 28.10269165]
[8.20224190 13.10925484]
[21.04777336 5.36378384]
[34.51500702 11.96936035]
[36.25409317 26.86714554]
[43.44547653 40.03088379]
[50.63685989 53.19462204]
[57.82824326 66.35836029]
[64.25086212 62.48538208]
[64.25086212 47.48538208]
[64.25086212 32.48538208]
[64.25086212 17.48538017]
[64.25086212 2.48538041]
[64.25086212 -12.51461983]
[58.20452118 -28.35375214]
[71.75086212 -38.54850769]
[85.29720306 -28.35375214]
[79.25086212 -12.51461983]
[79.25086212 2.48538041]
[79.25086212 17.48538017]
[79.25086212 32.48538208]
[79.25086212 47.48538208]
[79.25086212 62.48538208]
[86.50446320 64.39202118]
[90.31797791 49.88488007]
[104.82505035 53.69863510]
[101.01166534 68.20529175]
[108.26526642 70.11193085]
[115.64125824 57.05073929]
[123.01725006 43.98954773]
[130.39324951 30.92835617]
[137.76924133 17.86716652]
[140.29304504 1.10211921]
[157.10156250 -1.11374211]
[163.88388062 14.42448139]
[150.83042908 25.24316025]
[143.45443726 38.30435181]
[136.07844543 51.36554337]
[128.70245361 64.42673492]
[121.32645416 77.48792267]
[126.27825928 83.12083435]
[137.54408264 73.21723175]
[148.80989075 63.31363297]
[160.07571411 53.41003418]
[167.72993469 40.50991440]
[182.36390686 43.80332947]
[183.75364685 58.73881149]
[169.97932434 64.67584991]
[158.71350098 74.57945251]
[147.44767761 84.48305511]
[136.18185425 94.38665771]
[141.13365173 100.01956177]
[155.03248596 94.37840271]
[168.93130493 88.73724365]
[174.85180664 74.08380890]
[189.43222046 67.98567963]
[204.02224731 74.06077576]
[209.96588135 88.70484161]
[203.73686218 103.22982025]
[189.03077698 109.01829529]
[174.57246399 102.63607025]
[160.67364502 108.27722931]
[146.77481079 113.91838837]
[147.62974548 121.36949921]
[161.39051819 127.33953857]
[149.33963013 136.27172852]
[150.19456482 143.72283936]
[165.00988770 146.06935120]
[179.82521057 148.41587830]
[194.64053345 150.76239014]
[203.59925842 149.01458740]
[209.65003967 153.24964905]
[224.43035889 155.80747986]
[239.21066284 158.36531067]
[253.99096680 160.92314148]
[270.62915039 157.66629028]
[278.36465454 172.75265503]
[266.00924683 184.36216736]
[251.43313599 175.70344543]
[236.65283203 173.14561462]
[221.87251282 170.58778381]
[207.09220886 168.02995300]
[192.29402161 165.57771301]
[177.47869873 163.23120117]
[162.66336060 160.88468933]
[147.84803772 158.53816223]
[135.65014648 167.26808167]
[133.09231567 182.04838562]
[130.53448486 196.82868958]
[127.97664642 211.60899353]
[125.41881561 226.38931274]
[122.86098480 241.16961670]
[120.30314636 255.94992065]
[129.13969421 268.77774048]
[126.33513641 283.73065186]
[114.05130005 292.07589722]
[111.59906769 306.87408447]
[109.25254822 321.68939209]
[106.90602875 336.50473022]
[104.55951691 351.32006836]
[102.21299744 366.13537598]
[99.86647797 380.95071411]
[110.40670013 394.91616821]
[107.63677216 411.84982300]
[93.75372314 421.34719849]
[91.61900330 436.19451904]
[89.48428345 451.04183960]
[87.34955597 465.88916016]
[85.21483612 480.73648071]
[83.08011627 495.58380127]
[80.94538879 510.43112183]
[78.81066895 525.27844238]
[76.67594147 540.12579346]
[74.54122162 554.97308350]
[72.40650177 569.82043457]
[87.84362793 586.96960449]
[85.53830719 609.65679932]
[67.40135193 623.02996826]
[66.75894928 638.01623535]
[66.11654663 653.00244141]
[65.47414398 667.98870850]
[64.83174133 682.97491455]
[64.18934631 697.96118164]
[76.42407990 707.50531006]
[80.67991638 722.42736816]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 217]
[7 216]
[8 215]
[9 214]
[10 213]
[11 212]
[21 209]
[22 208]
[23 207]
[24 206]
[25 205]
[26 204]
[27 203]
[28 202]
[29 201]
[30 200]
[31 199]
[35 196]
[36 195]
[37 194]
[38 193]
[39 192]
[40 191]
[42 190]
[45 187]
[46 186]
[47 185]
[48 184]
[49 183]
[50 182]
[51 181]
[54 90]
[55 89]
[57 87]
[58 86]
[59 85]
[60 84]
[63 82]
[64 81]
[65 80]
[66 79]
[67 78]
[68 77]
[103 117]
[104 116]
[105 115]
[106 114]
[107 113]
[108 112]
[122 134]
[123 133]
[124 132]
[125 131]
[126 130]
[146 157]
[147 156]
[148 155]
[161 180]
[162 179]
[163 178]
[164 177]
[166 176]
[167 175]
[168 174]
[169 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
