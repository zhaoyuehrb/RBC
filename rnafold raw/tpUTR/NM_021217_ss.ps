%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 22:19:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCUACGAAUACAGUGGACCUGGGAGAGUGUUCAACCGUAAAACCUUGUUGUAAAUGUGAGAAACGUUAUUUAUGUAGAGCAUGUAGGAAAACCUGGUAUAGCACUUAUUUUGUACCUAAAAAUUCAGAGUAGGAGAGAAAUCUCUUAAUUAUGAUUAAUAUGGUAUUGCCUUUACAUGCCUCAGCCUUAAUAGUGAUUCCUUUUGUAUUAAUUUCUAGUGUAUGUUUGUGAUAUAAACAUUUAAUAAAUAUCCU\
GUUUUGUACGCUUUCA\
) } def
/len { sequence length } bind def

/coor [
[2.66242170 591.90130615]
[-13.94254303 597.99682617]
[-17.37680054 612.59838867]
[-20.81105995 627.19995117]
[-24.24531746 641.80151367]
[-27.67957687 656.40313721]
[-18.17569160 668.82122803]
[-18.92916107 684.44067383]
[-29.58421707 695.88635254]
[-45.10987091 697.75402832]
[-58.17538071 689.16180420]
[-62.61161423 674.16662598]
[-56.32391739 659.84887695]
[-42.28114700 652.96887207]
[-38.84688950 638.36730957]
[-35.41263199 623.76568604]
[-31.97837257 609.16412354]
[-28.54411316 594.56256104]
[-37.71878433 586.67547607]
[-42.71207809 575.57604980]
[-42.52568054 563.33459473]
[-37.13369370 552.26281738]
[-27.49904060 544.47760010]
[-15.40207005 541.49597168]
[-11.63146210 526.97760010]
[-7.86085463 512.45928955]
[-4.09024715 497.94091797]
[-0.31963977 483.42257690]
[3.45096779 468.90420532]
[7.22157526 454.38586426]
[10.99218273 439.86752319]
[6.70262957 425.60394287]
[17.66048813 414.19186401]
[21.43109512 399.67352295]
[25.20170403 385.15515137]
[12.16566563 377.80593872]
[1.46802473 367.32464600]
[-6.15779448 354.42147827]
[-10.18679523 339.97299194]
[-10.33854866 324.96240234]
[-6.59670401 310.41290283]
[0.78948569 297.31781006]
[11.32176018 286.57266235]
[24.28646088 278.91418457]
[38.80287933 274.86956787]
[53.88309860 274.72030640]
[57.65370560 260.20193481]
[61.42431259 245.68359375]
[65.19491577 231.16523743]
[63.61007690 226.69503784]
[64.79103088 221.18281555]
[69.22392273 216.35707092]
[73.32887268 201.92968750]
[77.43381500 187.50230408]
[81.53875732 173.07492065]
[85.64370728 158.64753723]
[89.74864960 144.22013855]
[93.85359192 129.79275513]
[75.67632294 114.45114899]
[74.96640778 92.38826752]
[89.66671753 78.29660797]
[87.76609039 63.41750717]
[85.86547089 48.53840637]
[76.44194031 35.82984161]
[82.50422668 22.22477150]
[80.60360718 7.34567165]
[78.70298004 -7.53342867]
[76.80236053 -22.41252899]
[74.90173340 -37.29162979]
[73.00111389 -52.17073059]
[71.10049438 -67.04982758]
[57.65459824 -74.56742096]
[51.28792953 -88.39923096]
[54.25167847 -103.15322113]
[65.20377350 -113.21252441]
[63.30315018 -128.09162903]
[53.87961578 -140.80018616]
[59.94190598 -154.40525818]
[58.04128265 -169.28436279]
[56.14065933 -184.16346741]
[54.15414429 -199.03134155]
[52.08179855 -213.88749695]
[50.00945282 -228.74365234]
[47.93710709 -243.59980774]
[45.86476135 -258.45596313]
[43.62097168 -273.28720093]
[41.20603180 -288.09152222]
[38.79109192 -302.89584351]
[36.29070282 -317.68597412]
[33.70493698 -332.46142578]
[23.70453453 -344.72122192]
[29.13202667 -358.59173584]
[26.54626274 -373.36718750]
[23.96050072 -388.14263916]
[-1.93778956 -398.93881226]
[-8.36454487 -431.69250488]
[-17.81332397 -443.34240723]
[-27.26210213 -454.99234009]
[-36.71088028 -466.64224243]
[-46.15966034 -478.29217529]
[-55.60844040 -489.94207764]
[-65.05722046 -501.59201050]
[-80.54466248 -500.63351440]
[-93.61955261 -508.98977661]
[-99.25431061 -523.44763184]
[-95.28227997 -538.44769287]
[-83.23076630 -548.22216797]
[-67.73383331 -549.01257324]
[-54.75037003 -540.51501465]
[-49.27277756 -525.99688721]
[-53.40730286 -511.04077148]
[-43.95852280 -499.39086914]
[-34.50974274 -487.74093628]
[-25.06096458 -476.09103394]
[-15.61218548 -464.44110107]
[-6.16340637 -452.79119873]
[3.28537273 -441.14126587]
[10.46242523 -443.31842041]
[6.10815525 -457.67251587]
[-2.46851063 -469.97863770]
[6.58512688 -481.93823242]
[20.75703430 -477.02325439]
[20.46225929 -462.02679443]
[24.81653023 -447.67266846]
[31.99358368 -449.84982300]
[33.37760925 -464.78582764]
[34.76163483 -479.72183228]
[21.89432144 -490.72711182]
[18.17237473 -507.07403564]
[24.87255478 -522.26055908]
[39.16617966 -530.36712646]
[40.37760544 -545.31811523]
[41.58903503 -560.26910400]
[42.80046082 -575.22015381]
[44.01188660 -590.17114258]
[45.22331238 -605.12213135]
[46.43473816 -620.07312012]
[38.92384720 -634.65112305]
[48.01971817 -648.29656982]
[64.36529541 -646.97210693]
[71.14565277 -632.04034424]
[61.38574219 -618.86169434]
[60.17431259 -603.91070557]
[58.96288681 -588.95971680]
[57.75146103 -574.00872803]
[56.54003525 -559.05767822]
[55.32860947 -544.10668945]
[54.11718369 -529.15570068]
[64.99804688 -521.45434570]
[70.70679474 -509.28848267]
[69.65958405 -495.78222656]
[62.02285385 -484.46243286]
[49.69764709 -478.33779907]
[48.31362152 -463.40179443]
[46.92959595 -448.46578979]
[53.98254395 -440.93560791]
[58.55608368 -432.12442017]
[60.49222565 -422.78509521]
[59.84809113 -413.65911865]
[56.87783051 -405.41812134]
[51.99953079 -398.61465454]
[45.75062943 -393.64520264]
[38.73594666 -390.72839355]
[41.32170868 -375.95297241]
[43.90747452 -361.17752075]
[53.72292328 -349.97454834]
[48.48038483 -335.04718018]
[51.06614685 -320.27172852]
[55.29917908 -314.24694824]
[53.59542084 -305.31079102]
[56.01035690 -290.50646973]
[58.42529678 -275.70211792]
[61.68070984 -272.25296021]
[62.82688141 -266.73342896]
[60.72091675 -260.52832031]
[62.79326248 -245.67214966]
[64.86560822 -230.81599426]
[66.93795776 -215.95983887]
[69.01029968 -201.10368347]
[73.03207397 -194.93585205]
[71.01976013 -186.06408691]
[72.92037964 -171.18498230]
[74.82100677 -156.30587769]
[84.10859680 -144.66157532]
[78.18225098 -129.99224854]
[80.08287048 -115.11315155]
[93.21194458 -108.12992096]
[99.78929138 -94.59468842]
[97.10401154 -79.60660553]
[85.97959137 -68.95045471]
[87.88021088 -54.07135391]
[89.78083801 -39.19225311]
[91.68145752 -24.31315231]
[93.58208466 -9.43405151]
[95.48270416 5.44504881]
[97.38333130 20.32415009]
[106.67091370 31.96846008]
[100.74457550 46.63778305]
[102.64519501 61.51688385]
[104.54581451 76.39598846]
[115.49492645 79.57999420]
[124.36438751 87.84297943]
[128.82434082 99.88580322]
[127.32662964 113.36571503]
[141.25019836 118.94552612]
[155.17376709 124.52533722]
[169.09732056 130.10514832]
[183.02088928 135.68495178]
[196.94445801 141.26477051]
[210.86802673 146.84457397]
[224.79159546 152.42439270]
[236.88102722 143.05459595]
[251.93780518 141.00758362]
[265.90475464 146.73388672]
[275.06887817 158.60296631]
[277.04824829 173.36601257]
[290.11199951 164.99241638]
[305.60070801 165.93032837]
[317.55862427 175.81910706]
[321.38766479 190.85633850]
[315.61550903 205.25987244]
[302.46166992 213.49127197]
[286.98403931 212.38539124]
[275.13412476 202.36746216]
[271.46841431 187.28958130]
[259.84170532 196.60005188]
[245.01713562 198.85577393]
[230.96101379 193.35194397]
[221.48483276 181.47344971]
[219.21177673 166.34796143]
[205.28822327 160.76814270]
[191.36465454 155.18833923]
[177.44108582 149.60852051]
[163.51751709 144.02871704]
[149.59394836 138.44889832]
[135.67037964 132.86909485]
[121.74681854 127.28928375]
[108.28097534 133.89770508]
[104.17603302 148.32508850]
[100.07109070 162.75247192]
[95.96614075 177.17985535]
[91.86119843 191.60723877]
[87.75625610 206.03462219]
[83.65130615 220.46202087]
[79.71327209 234.93585205]
[75.94266510 249.45419312]
[72.17205811 263.97253418]
[68.40145111 278.49090576]
[81.50322723 285.95941162]
[92.21696472 296.55664062]
[99.81656647 309.55593872]
[103.78916931 324.06817627]
[103.86976624 339.10250854]
[100.05888367 353.63406372]
[92.62209320 366.67379761]
[82.07155609 377.33581543]
[69.13073730 384.89755249]
[54.68479919 388.84869385]
[39.72005463 388.92578125]
[35.94944763 403.44412231]
[32.17884064 417.96246338]
[36.19869232 433.26446533]
[25.51053429 443.63812256]
[21.73992729 458.15646362]
[17.96931839 472.67483521]
[14.19871140 487.19317627]
[10.42810345 501.71151733]
[6.65749645 516.22985840]
[2.88688874 530.74822998]
[-0.88371873 545.26660156]
[11.05410576 558.95361328]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 18]
[3 17]
[4 16]
[5 15]
[6 14]
[24 270]
[25 269]
[26 268]
[27 267]
[28 266]
[29 265]
[30 264]
[31 263]
[33 261]
[34 260]
[35 259]
[46 248]
[47 247]
[48 246]
[49 245]
[52 244]
[53 243]
[54 242]
[55 241]
[56 240]
[57 239]
[58 238]
[61 200]
[62 199]
[63 198]
[65 196]
[66 195]
[67 194]
[68 193]
[69 192]
[70 191]
[71 190]
[75 186]
[76 185]
[78 183]
[79 182]
[80 181]
[81 179]
[82 178]
[83 177]
[84 176]
[85 175]
[86 172]
[87 171]
[88 170]
[89 168]
[90 167]
[92 165]
[93 164]
[94 163]
[96 117]
[97 116]
[98 115]
[99 114]
[100 113]
[101 112]
[102 111]
[125 155]
[126 154]
[127 153]
[131 148]
[132 147]
[133 146]
[134 145]
[135 144]
[136 143]
[137 142]
[204 237]
[205 236]
[206 235]
[207 234]
[208 233]
[209 232]
[210 231]
[211 230]
[216 225]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
