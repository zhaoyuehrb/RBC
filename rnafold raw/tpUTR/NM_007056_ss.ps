%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 09:56:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGAAGAGUGGGGGGUGGGGAGGACAAGGGGGUGGGUAAGGGGCUCAAGCUGUGAUGCUGCUGGUUUUAUCUCUAGUGAAAUAAAGUCAAAAGUUAUUUAAUUCCCGUCA\
) } def
/len { sequence length } bind def

/coor [
[63.39590073 372.06198120]
[59.60624695 386.94601440]
[48.87081528 397.92990112]
[34.07738876 402.05908203]
[19.20531845 398.22277832]
[8.25512028 387.45297241]
[4.17234182 372.64669800]
[8.05523014 357.78671265]
[18.85930634 346.87033081]
[33.67832947 342.83398438]
[37.42497635 328.30941772]
[41.17162323 313.78488159]
[36.85854340 299.52841187]
[47.79755783 288.09826660]
[51.54420471 273.57369995]
[55.29085159 259.04916382]
[44.46171570 246.80009460]
[43.00115204 230.34991455]
[51.67462921 216.10215759]
[67.26425171 209.71997070]
[70.60206604 195.09605408]
[73.93988037 180.47213745]
[69.22866058 166.34225464]
[79.84279633 154.60978699]
[83.18061066 139.98587036]
[86.51842499 125.36195374]
[73.12619019 110.13803864]
[73.12619019 89.86196136]
[86.51842499 74.63804626]
[83.18061066 60.01412582]
[79.84279633 45.39020920]
[76.50498199 30.76629066]
[73.16716766 16.14237022]
[69.82935333 1.51845241]
[66.49153900 -13.10546589]
[63.15372467 -27.72938538]
[59.81591034 -42.35330200]
[44.87434006 -51.31744385]
[41.04351425 -67.97098541]
[50.19966125 -82.00007629]
[46.45301437 -96.52463531]
[35.51399994 -107.95478821]
[39.82707977 -122.21125031]
[36.08043289 -136.73580933]
[32.33378601 -151.26036072]
[28.38380814 -165.73094177]
[24.23127556 -180.14469910]
[20.07874298 -194.55845642]
[6.78952122 -203.54600525]
[5.67427397 -219.55024719]
[17.58852386 -230.29409790]
[33.39267731 -227.53578186]
[40.96314240 -213.39126587]
[34.49250412 -198.71098328]
[38.64503479 -184.29722595]
[42.79756927 -169.88346863]
[47.74413300 -164.24656677]
[46.85834122 -155.00700378]
[50.60498810 -140.48245239]
[54.35163498 -125.95789337]
[65.02265930 -115.56662750]
[60.97756577 -100.27127838]
[64.72421265 -85.74672699]
[76.69850159 -80.76693726]
[83.68433380 -69.60950470]
[82.91165161 -56.27242279]
[74.43982697 -45.69111633]
[77.77764130 -31.06719971]
[81.11545563 -16.44328117]
[84.45326996 -1.81936169]
[87.79108429 12.80455685]
[91.12889862 27.42847633]
[94.46671295 42.05239487]
[97.80452728 56.67631149]
[101.14234161 71.30023193]
[112.80427551 74.28945923]
[122.21670532 81.79561615]
[127.72601318 92.50000000]
[142.72601318 92.50000000]
[157.72601318 92.50000000]
[167.63838196 80.40541840]
[183.01542664 77.56279755]
[196.59657288 85.31433868]
[201.96922302 100.00000000]
[196.59657288 114.68566132]
[183.01542664 122.43720245]
[167.63838196 119.59458160]
[157.72601318 107.50000000]
[142.72601318 107.50000000]
[127.72601318 107.50000000]
[124.01127625 115.76198578]
[117.90818024 122.45614624]
[110.02378845 126.91663361]
[101.14234161 128.69976807]
[97.80452728 143.32368469]
[94.46671295 157.94760132]
[98.93919373 173.12348938]
[88.56380463 183.80995178]
[85.22599030 198.43386841]
[81.88817596 213.05778503]
[91.75180054 222.80165100]
[95.44719696 236.05213928]
[92.10313416 249.28349304]
[82.70673370 259.03048706]
[69.81540680 262.79580688]
[66.06875610 277.32034302]
[62.32210922 291.84490967]
[66.36720276 307.14025879]
[55.69617844 317.53152466]
[51.94953156 332.05609131]
[48.20288467 346.58062744]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 111]
[11 110]
[12 109]
[14 107]
[15 106]
[16 105]
[20 100]
[21 99]
[22 98]
[24 96]
[25 95]
[26 94]
[29 75]
[30 74]
[31 73]
[32 72]
[33 71]
[34 70]
[35 69]
[36 68]
[37 67]
[40 63]
[41 62]
[43 60]
[44 59]
[45 58]
[46 56]
[47 55]
[48 54]
[78 90]
[79 89]
[80 88]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
