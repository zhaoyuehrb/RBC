%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 01:59:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAUGAUGGAGCAUCAGAUUUUACCUAAUACAGCAGAACUCCUAAAAAGUUACAGCCAUAUGCAGGACGGCAGUACUCAGCAUGGUCUUAUGCACAGGAACUAAAGGAAAAAGAGAUCGAGUCACAAAAAUUCAGGAAGAGGGGGUAAAUGUGGAUUGUAUGGAAUGAAAAAUAAACAUUCUCAAGGA\
) } def
/len { sequence length } bind def

/coor [
[90.23516846 476.55355835]
[80.92295074 490.76443481]
[66.38803101 499.45504761]
[49.57233047 500.92266846]
[44.67702103 515.10137939]
[39.78171539 529.28009033]
[34.88640594 543.45880127]
[29.99109840 557.63751221]
[30.53722382 574.58270264]
[14.40548038 579.79833984]
[4.92793179 565.74084473]
[15.81238270 552.74218750]
[20.70769119 538.56347656]
[25.60299873 524.38476562]
[30.49830627 510.20608521]
[35.39361572 496.02734375]
[25.44063950 487.64849854]
[18.91641998 476.35537720]
[16.61832619 463.48474121]
[18.84199715 450.56857300]
[25.34352684 439.15188599]
[35.36598969 430.60778809]
[47.72752380 425.97235107]
[60.96067047 425.81915283]
[66.32455444 411.81097412]
[71.68843079 397.80279541]
[89.32791901 377.93157959]
[109.03263855 377.74136353]
[109.03263855 362.74136353]
[109.03263855 347.74136353]
[109.03263855 332.74136353]
[109.03263855 317.74136353]
[108.53406525 302.74963379]
[107.53746796 287.78277588]
[106.54087067 272.81594849]
[93.42649078 262.30093384]
[91.93624115 245.21900940]
[103.47704315 232.08459473]
[102.23181152 217.13638306]
[100.98657990 202.18815613]
[99.74135590 187.23992920]
[98.49612427 172.29170227]
[97.25089264 157.34347534]
[76.18910980 152.23863220]
[58.52039719 139.68972778]
[46.76255035 121.48502350]
[42.59107590 100.21868896]
[46.60041046 78.92118835]
[33.48716354 71.63814545]
[20.37391663 64.35510254]
[11.33342934 62.91917419]
[7.10469627 56.84045410]
[-5.88568497 49.34045410]
[-21.70563507 49.14106750]
[-28.85912514 36.07673264]
[-41.84950638 28.57673454]
[-54.83988571 21.07673454]
[-67.74175262 29.31084061]
[-82.99333954 30.59443092]
[-97.08995056 24.63254547]
[-106.79228973 12.79517937]
[-109.87082672 -2.19752574]
[-105.61813354 -16.90035629]
[-95.01145935 -27.93470764]
[-80.48812866 -32.76496887]
[-65.38549805 -30.28118134]
[-53.17404556 -21.05410004]
[-46.65987396 -7.20404196]
[-47.33988571 8.08635235]
[-34.34950638 15.58635235]
[-21.35912514 23.08635330]
[-6.46833420 22.74929047]
[1.61431527 36.35007477]
[14.60469627 43.85007477]
[27.65696144 51.24185181]
[40.77020645 58.52489853]
[53.88345718 65.80794525]
[67.89234161 52.40871048]
[85.56212616 44.43580246]
[104.87810516 42.79828262]
[108.09426117 28.14712715]
[103.49580383 13.00893879]
[113.78202820 2.23661637]
[116.99818420 -12.41453743]
[120.21434784 -27.06569290]
[123.43050385 -41.71684647]
[126.64666748 -56.36800003]
[129.86282349 -71.01915741]
[133.07897949 -85.67031097]
[119.61095428 -92.45727539]
[108.25443268 -102.38099670]
[99.72331238 -114.81766510]
[94.55385590 -128.98550415]
[93.07102203 -143.99389648]
[95.36803436 -158.89942932]
[101.30048370 -172.76509094]
[110.49546051 -184.71931458]
[122.37496185 -194.01060486]
[136.19223022 -200.05494690]
[151.07868958 -202.47235107]
[166.09858704 -201.11088562]
[180.30773926 -196.05612183]
[192.81295776 -187.62579346]
[202.82815552 -176.34986877]
[209.72377014 -162.93713379]
[213.06631470 -148.23072815]
[212.64570618 -133.15512085]
[208.48835754 -118.65797424]
[200.85562134 -105.65058899]
[190.22729492 -94.95061493]
[177.27146912 -87.23066711]
[162.80258179 -82.97602844]
[147.73013306 -82.45414734]
[144.51397705 -67.80299377]
[141.29782104 -53.15184021]
[138.08166504 -38.50068665]
[134.86550903 -23.84953308]
[131.64933777 -9.19837856]
[128.43318176 5.45277596]
[133.26167297 19.54301643]
[122.74541473 31.36328697]
[119.52925873 46.01444244]
[126.65862274 49.15562439]
[133.29704285 53.23314285]
[139.32229614 58.17189789]
[144.62338257 63.88094711]
[149.10270691 70.25514984]
[152.67778015 77.17712402]
[155.28276062 84.51939392]
[156.86965942 92.14675140]
[157.40928650 99.91873169]
[156.89167786 107.69220734]
[155.32637024 115.32402802]
[152.74218750 122.67364502]
[149.18672180 129.60571289]
[144.72546387 135.99256897]
[139.44055176 141.71661377]
[133.42932129 146.67240906]
[126.80245972 150.76869202]
[119.68201447 153.93005371]
[112.19911957 156.09825134]
[113.44435120 171.04647827]
[114.68957520 185.99470520]
[115.93480682 200.94291687]
[117.18003845 215.89114380]
[118.42526245 230.83937073]
[129.64849854 238.30657959]
[134.44610596 250.69573975]
[131.27330017 263.39636230]
[121.50772858 271.81933594]
[122.50432587 286.78619385]
[123.50092316 301.75305176]
[126.07191467 305.30538940]
[127.24841309 309.10925293]
[127.12397766 312.69180298]
[125.93718719 315.66003418]
[124.03263855 317.74136353]
[124.03263855 332.74136353]
[124.03263855 347.74136353]
[124.03263855 362.74136353]
[124.03263855 377.74136353]
[128.21511841 392.14645386]
[136.24830627 404.81405640]
[144.28149414 417.48162842]
[152.31468201 430.14923096]
[160.34786987 442.81683350]
[168.38107300 455.48440552]
[183.80842590 455.47482300]
[196.77957153 463.82666016]
[203.15545654 477.87484741]
[200.90155029 493.13668823]
[190.73709106 504.74215698]
[175.90548706 508.98800659]
[161.13948059 504.51940918]
[151.15083313 492.76226807]
[149.12687683 477.46823120]
[155.71347046 463.51760864]
[147.68028259 450.85000610]
[139.64709473 438.18243408]
[131.61390686 425.51483154]
[123.58071136 412.84722900]
[115.54752350 400.17965698]
[108.08479309 400.92642212]
[93.15933228 402.41992188]
[85.69660187 403.16668701]
[80.33271790 417.17486572]
[74.96884155 431.18301392]
[86.97808075 443.43481445]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 16]
[5 15]
[6 14]
[7 13]
[8 12]
[24 187]
[25 186]
[26 185]
[28 161]
[29 160]
[30 159]
[31 158]
[32 157]
[33 152]
[34 151]
[35 150]
[38 146]
[39 145]
[40 144]
[41 143]
[42 142]
[43 141]
[48 77]
[49 76]
[50 75]
[52 74]
[53 73]
[55 71]
[56 70]
[57 69]
[80 122]
[81 121]
[83 119]
[84 118]
[85 117]
[86 116]
[87 115]
[88 114]
[89 113]
[162 182]
[163 181]
[164 180]
[165 179]
[166 178]
[167 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
