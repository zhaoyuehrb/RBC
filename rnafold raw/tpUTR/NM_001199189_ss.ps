%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 01:04:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAUUUGAAGUUGAUUUCUCAAUGCUAACUAAUCAAGAGAAGUAGGAAGCAUAUCAAACGUUUAACUUUAUUUAAAAAGUAUAAUGUGAAAACAUAAAAUAUAUUAAAACUUUUCUAUUGUUUUCUUUCCCUUUCACAGUAACUUUAUGUAAAAUAAACCAUCUUCAAAAGAGCUAGAAUAGCA\
) } def
/len { sequence length } bind def

/coor [
[108.74514771 299.35733032]
[108.63269043 286.97558594]
[113.83374023 275.65899658]
[123.41392517 267.58798218]
[120.37835693 252.89836121]
[117.34278107 238.20872498]
[114.30720520 223.51910400]
[111.27163696 208.82946777]
[108.23606110 194.13983154]
[105.20048523 179.45019531]
[95.04764557 168.55207825]
[99.83208466 153.47163391]
[96.79651642 138.78201294]
[90.31196594 135.01364136]
[85.93334198 149.36033630]
[83.32405853 164.13165283]
[69.71965790 170.44989014]
[56.75020599 162.91374207]
[55.50298309 147.96568298]
[67.04566193 138.38414001]
[77.34286499 127.47690582]
[70.85830688 123.70853424]
[56.59246063 128.34379578]
[42.32661438 132.97904968]
[28.06076622 137.61430359]
[13.79491901 142.24955750]
[6.57329035 156.05122375]
[-7.96033859 160.54879761]
[-21.07360840 153.57902527]
[-35.33945465 158.21427917]
[-49.60530472 162.84953308]
[-61.59158325 176.81455994]
[-78.59860229 172.52655029]
[-92.78368378 177.40338135]
[-103.13426971 190.12333679]
[-119.28020477 187.25265503]
[-124.61193085 171.74443054]
[-113.64462280 159.55221558]
[-97.66051483 163.21829224]
[-83.47543335 158.34146118]
[-77.87736511 147.60205078]
[-66.08109283 143.43099976]
[-54.24055862 148.58369446]
[-39.97471237 143.94844055]
[-25.70886230 139.31318665]
[-19.19673538 125.96672821]
[-4.79516840 121.06269836]
[9.15966415 127.98371124]
[23.42551231 123.34844971]
[37.69136047 118.71319580]
[51.95720673 114.07794189]
[66.22305298 109.44268799]
[68.35826111 102.25305176]
[53.36312103 102.63490295]
[48.36637497 88.49162292]
[60.27347565 79.36906433]
[72.62866211 87.87377167]
[74.76386261 80.68413544]
[65.34056854 69.01359558]
[55.91726685 57.34305954]
[46.49396515 45.67252350]
[37.07066727 34.00198746]
[21.60026360 32.18419266]
[12.20994854 20.21437263]
[14.03827477 5.47690916]
[4.61497498 -6.19362688]
[-4.80832529 -17.86416245]
[-14.23162556 -29.53470039]
[-23.65492439 -41.20523453]
[-39.39485931 -42.63004303]
[-49.45287704 -54.82068634]
[-47.86174011 -70.54467773]
[-35.56543732 -80.47324371]
[-19.85914993 -78.71595001]
[-10.06113815 -66.31536865]
[-11.98438835 -50.62853622]
[-2.56108880 -38.95800018]
[6.86221123 -27.28746414]
[16.28551102 -15.61692715]
[25.70881081 -3.94639063]
[40.50068665 -2.62880301]
[50.22350311 9.07254219]
[48.74120331 24.57868767]
[58.16450119 36.24922180]
[67.58779907 47.91976166]
[77.01110077 59.59029770]
[86.43440247 71.26083374]
[101.35660553 69.73513031]
[108.22314453 56.39906693]
[115.08968353 43.06299973]
[121.95621490 29.72693253]
[128.82275391 16.39086533]
[135.68928528 3.05479836]
[142.55583191 -10.28126907]
[131.18827820 -20.18290901]
[122.52125549 -32.51765823]
[117.05863190 -46.56839371]
[115.11800385 -61.51822281]
[116.81218719 -76.49797821]
[122.04269409 -90.63676453]
[130.50541687 -103.11257172]
[141.70837402 -113.20005798]
[155.00019836 -120.31276703]
[169.60815430 -124.03716278]
[184.68293762 -124.15672302]
[199.34812927 -120.66448975]
[212.75109863 -113.76350403]
[224.11264038 -103.85497284]
[232.77218628 -91.51497650]
[238.22628784 -77.46092987]
[240.15786743 -62.50992584]
[238.45458984 -47.53119659]
[233.21551514 -33.39558411]
[224.74522400 -20.92491722]
[213.53616333 -10.84422016]
[200.24002075 -3.73957348]
[185.62982178 -0.02403172]
[170.55496216 0.08638848]
[155.89189148 -3.41473269]
[149.02536011 9.92133427]
[142.15881348 23.25740051]
[135.29228210 36.59346771]
[128.42575073 49.92953491]
[121.55921173 63.26560211]
[114.69267273 76.60166931]
[117.19122314 83.67324829]
[129.61082458 75.26174164]
[142.03042603 66.85023499]
[154.45002747 58.43872833]
[161.66419983 45.28746414]
[173.96731567 36.70647430]
[188.80116272 34.48002243]
[203.08129883 39.07106400]
[213.83842468 49.52496719]
[218.83580017 63.66803360]
[217.03428650 78.55946350]
[208.80850220 91.10283661]
[195.86882019 98.68999481]
[180.90585327 99.74330902]
[167.02984619 94.04304504]
[152.08267212 95.30083466]
[137.13549805 96.55862427]
[122.18832397 97.81641388]
[124.68686676 104.88799286]
[138.40725708 110.95023346]
[152.12765503 117.01247406]
[165.84805298 123.07471466]
[179.56845093 129.13696289]
[194.98846436 124.70948792]
[207.98022461 134.12193298]
[208.57754517 150.15385437]
[196.32221985 160.50695801]
[180.61547852 157.23921204]
[173.50621033 142.85736084]
[159.78581238 136.79510498]
[146.06541443 130.73286438]
[132.34501648 124.67063141]
[118.62462616 118.60839081]
[116.64867401 127.25436401]
[111.48614502 135.74642944]
[114.52172089 150.43606567]
[124.89168549 162.38488770]
[119.89012146 176.41462708]
[122.92569733 191.10426331]
[125.96126556 205.79388428]
[128.99684143 220.48352051]
[132.03240967 235.17315674]
[135.06799316 249.86279297]
[138.10356140 264.55242920]
[154.82771301 271.50762939]
[163.96418762 286.96517944]
[162.02752686 304.65835571]
[149.97792053 317.54412842]
[153.51055908 332.12219238]
[157.04318237 346.70028687]
[160.57582092 361.27838135]
[170.18234253 375.24801636]
[159.41798401 388.34631348]
[143.85173035 381.62857056]
[145.99774170 364.81100464]
[142.46510315 350.23291016]
[138.93246460 335.65484619]
[135.39984131 321.07675171]
[123.58898163 318.16079712]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 169]
[5 168]
[6 167]
[7 166]
[8 165]
[9 164]
[10 163]
[12 161]
[13 160]
[22 52]
[23 51]
[24 50]
[25 49]
[26 48]
[29 45]
[30 44]
[31 43]
[33 40]
[34 39]
[58 87]
[59 86]
[60 85]
[61 84]
[62 83]
[65 80]
[66 79]
[67 78]
[68 77]
[69 76]
[88 125]
[89 124]
[90 123]
[91 122]
[92 121]
[93 120]
[94 119]
[144 158]
[145 157]
[146 156]
[147 155]
[148 154]
[173 183]
[174 182]
[175 181]
[176 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
