%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 10:16:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUCUGAGAUUUGAAGCUGGAAAACCUGAUAGGUGAGACUACUUCAGUUUAUUCCAGCAAGAAAGAUUGUGAUGCAAGAUUUCUUUCUUCCUGAGACAAAAAAAAAAAAAGAAAAAAAAAUCUUUUCAAAAUUUACUUUGUCAAAUAAAAAUUUGUUUUUCAGAGAUUUACCACCCAGUUCAUGGUUAGAAAUAUUUUGUGGCAAUGAAGAAAACACUACGGAAAAUAAAAAAUAAGAUAAAGCCUUA\
) } def
/len { sequence length } bind def

/coor [
[71.13699341 262.63671875]
[76.57341766 248.60668945]
[84.56703186 235.85919189]
[94.82887268 224.85504150]
[106.98796844 215.99203491]
[120.60478210 209.59056091]
[116.90341949 195.05439758]
[113.20205688 180.51824951]
[109.50070190 165.98208618]
[105.70880127 151.46928406]
[101.82651520 136.98039246]
[94.82801819 134.28390503]
[91.28870392 148.86036682]
[88.82099152 163.65599060]
[74.19348907 166.97808838]
[65.57695007 154.69984436]
[73.67480469 142.07382202]
[80.83102417 128.89093018]
[73.83252716 126.19445038]
[61.23213959 134.33264160]
[48.63175201 142.47084045]
[36.03136063 150.60902405]
[23.43097305 158.74722290]
[10.83058453 166.88542175]
[-1.76980484 175.02360535]
[-14.31922150 183.24018860]
[-26.81717682 191.53483582]
[-34.03689957 205.61268616]
[-48.91976547 206.20387268]
[-61.41772461 214.49851990]
[-73.91567993 222.79315186]
[-86.41363525 231.08779907]
[-98.80722046 239.53759766]
[-111.09449768 248.14125061]
[-123.38178253 256.74490356]
[-125.87899780 272.35064697]
[-138.72854614 281.55197144]
[-154.30702209 278.88992310]
[-163.37199402 265.94378662]
[-160.54536438 250.39433289]
[-147.50413513 241.46675110]
[-131.98542786 244.45761108]
[-119.69814301 235.85397339]
[-107.41086578 227.25032043]
[-105.71644592 222.81079102]
[-101.22977448 219.37707520]
[-94.70827484 218.58984375]
[-82.21031952 210.29519653]
[-69.71236420 202.00056458]
[-57.21440887 193.70591736]
[-50.88862610 180.22134399]
[-35.11182022 179.03688049]
[-22.61386299 170.74223328]
[-18.78887177 164.44166565]
[-9.90799904 162.42321777]
[2.69239020 154.28503418]
[15.29277897 146.14683533]
[27.89316750 138.00863647]
[40.49355698 129.87045288]
[53.09394455 121.73225403]
[65.69433594 113.59405518]
[67.03035736 94.99086761]
[76.81040192 81.29199982]
[62.47681046 76.87067413]
[48.14321899 72.44934845]
[33.80962753 68.02801514]
[19.47603607 63.60668945]
[5.62629795 70.73567963]
[-8.84701920 66.04763794]
[-15.55807304 52.80009842]
[-29.89166451 48.37877274]
[-44.22525787 43.95744324]
[-58.55884933 39.53611755]
[-75.47648621 40.64516830]
[-81.22545624 24.69569778]
[-67.49077606 14.75614071]
[-54.13751984 25.20252419]
[-39.80392838 29.62385178]
[-25.47033691 34.04518127]
[-11.13674545 38.46650696]
[1.87079334 31.30134583]
[16.47007751 35.58101273]
[23.89736366 49.27309799]
[38.23095322 53.69442749]
[52.56454849 58.11575317]
[66.89813995 62.53708267]
[81.23172760 66.95841217]
[95.48014069 62.26983261]
[104.38744354 50.20086670]
[113.29474640 38.13189697]
[122.20204926 26.06293297]
[131.10935974 13.99396515]
[140.01666260 1.92499864]
[141.66558838 -16.42743492]
[158.03321838 -22.78836250]
[166.78938293 -34.96743393]
[164.44256592 -50.36646652]
[173.49604797 -62.59304047]
[188.19113159 -64.73546600]
[196.94729614 -76.91453552]
[205.70344543 -89.09360504]
[214.45959473 -101.27267456]
[223.21575928 -113.45174408]
[231.97190857 -125.63082123]
[217.10046387 -142.08863831]
[209.38415527 -163.98022461]
[210.75541687 -188.18386841]
[221.78677368 -210.92308044]
[241.48713684 -228.35510254]
[267.35003662 -237.21266174]
[264.92968750 -252.01609802]
[262.50930786 -266.81954956]
[260.08895874 -281.62298584]
[257.66857910 -296.42642212]
[255.24821472 -311.22985840]
[241.32742310 -318.08486938]
[234.12435913 -331.82879639]
[236.40872192 -347.17678833]
[247.30215454 -358.22726440]
[262.61590576 -360.73107910]
[276.46148682 -353.72543335]
[283.51504517 -339.90417480]
[281.06433105 -324.58187866]
[270.05166626 -313.65023804]
[272.47201538 -298.84677124]
[274.89239502 -284.04333496]
[277.31274414 -269.23989868]
[279.73312378 -254.43646240]
[282.15350342 -239.63302612]
[289.39791870 -237.69187927]
[293.28021240 -252.18077087]
[297.16250610 -266.66964722]
[296.37750244 -281.64910889]
[310.38122559 -287.02456665]
[319.82095337 -275.36734009]
[311.65139771 -262.78738403]
[307.76910400 -248.29847717]
[303.88681030 -233.80960083]
[311.13125610 -231.86845398]
[320.62908936 -243.47842407]
[330.12689209 -255.08839417]
[339.62472534 -266.69836426]
[349.12252808 -278.30834961]
[347.73953247 -293.82366943]
[357.53704834 -305.46252441]
[372.33706665 -306.68539429]
[381.83489990 -318.29534912]
[391.33270264 -329.90533447]
[400.83053589 -341.51528931]
[410.32833862 -353.12527466]
[419.82617188 -364.73522949]
[421.93685913 -380.99798584]
[437.17810059 -387.05081177]
[449.87100220 -376.66705322]
[446.95819092 -360.52865601]
[431.43612671 -355.23742676]
[421.93832397 -343.62744141]
[412.44049072 -332.01748657]
[402.94268799 -320.40750122]
[393.44485474 -308.79754639]
[383.94705200 -297.18756104]
[385.68096924 -282.43869019]
[376.21423340 -270.52923584]
[360.73251343 -268.81051636]
[351.23468018 -257.20056152]
[341.73687744 -245.59057617]
[332.23904419 -233.98060608]
[322.74124146 -222.37063599]
[326.45068359 -215.85218811]
[339.48754883 -223.27107239]
[352.52444458 -230.68995667]
[362.63082886 -241.77423096]
[376.29556274 -235.58753967]
[374.63409424 -220.67984009]
[359.94332886 -217.65307617]
[346.90643311 -210.23419189]
[333.86956787 -202.81532288]
[337.57901001 -196.29687500]
[352.41146851 -198.53251648]
[367.24392700 -200.76814270]
[377.88919067 -212.77056885]
[393.90206909 -211.78729248]
[402.99887085 -198.57261658]
[398.20132446 -183.26370239]
[383.18963623 -177.60424805]
[369.47955322 -185.93568420]
[354.64709473 -183.70004272]
[339.81463623 -181.46441650]
[339.94223022 -165.32240295]
[336.46353149 -149.93084717]
[329.72198486 -136.06582642]
[320.22100830 -124.38802338]
[308.59005737 -115.41150665]
[295.54476929 -109.48175812]
[281.84426880 -106.76398468]
[268.24731445 -107.24185944]
[255.47059631 -110.72648621]
[244.15098572 -116.87466431]
[235.39482117 -104.69559479]
[226.63867188 -92.51652527]
[217.88252258 -80.33745575]
[209.12635803 -68.15837860]
[200.37020874 -55.97931290]
[203.01953125 -41.36710358]
[194.31303406 -28.89105797]
[178.96844482 -26.21127892]
[170.21229553 -14.03220844]
[171.85639954 -2.06465602]
[164.68385315 8.14881325]
[152.08561707 10.83230114]
[143.17831421 22.90126801]
[134.27101135 34.97023392]
[125.36371613 47.03919983]
[116.45641327 59.10816956]
[107.54911041 71.17713165]
[121.08673859 76.98254395]
[130.72906494 89.00339508]
[133.71658325 104.81443787]
[128.72447205 120.82586670]
[116.31540680 133.09811401]
[120.19769287 147.58699036]
[125.42829132 155.04251099]
[124.03685760 162.28073120]
[127.73822021 176.81687927]
[131.43957520 191.35304260]
[135.14094543 205.88920593]
[150.16105652 204.99880981]
[165.07820129 206.96736145]
[179.35314941 211.72367859]
[192.46984863 219.09582520]
[203.95414734 228.81730652]
[213.39091492 240.53669739]
[220.43899536 253.83035278]
[224.84359741 268.21771240]
[226.44552612 283.17864990]
[225.18684387 298.17239380]
[221.11308289 312.65689087]
[214.37147522 326.10858154]
[205.20574951 338.04113770]
[193.94721985 348.02322388]
[181.00288391 355.69400024]
[166.84068298 360.77615356]
[151.97256470 363.08602905]
[136.93598938 362.54003906]
[122.27454376 359.15798950]
[108.51821136 353.06213379]
[96.16427612 344.47277832]
[85.65932465 333.70046997]
[77.38311768 321.13461304]
[71.63481903 307.22943115]
[68.62223816 292.48764038]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 226]
[7 225]
[8 224]
[9 223]
[10 221]
[11 220]
[19 61]
[20 60]
[21 59]
[22 58]
[23 57]
[24 56]
[25 55]
[26 53]
[27 52]
[29 50]
[30 49]
[31 48]
[32 47]
[33 44]
[34 43]
[35 42]
[63 87]
[64 86]
[65 85]
[66 84]
[67 83]
[70 80]
[71 79]
[72 78]
[73 77]
[88 215]
[89 214]
[90 213]
[91 212]
[92 211]
[93 210]
[95 207]
[96 206]
[99 203]
[100 202]
[101 201]
[102 200]
[103 199]
[104 198]
[110 129]
[111 128]
[112 127]
[113 126]
[114 125]
[115 124]
[139 168]
[140 167]
[141 166]
[142 165]
[143 164]
[146 161]
[147 160]
[148 159]
[149 158]
[150 157]
[151 156]
[178 188]
[179 187]
[180 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
