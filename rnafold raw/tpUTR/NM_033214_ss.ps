%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 18:49:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUACCAGCUAUGGAGUCCCAAGAUGUAAACAUUUUACAUAAUGAAAGCAUAUAGCAGUUCUGCCUCUUAAUAUAAUGACACUAUUAUAGACUCUGAUUUUGUUUAUAAACCACUUGCUACAUGACCCAUGAAAACCCUAGACUUGUGACCUGAAAUAAAGAAAAUACGUUAGAAGAGCACUGUA\
) } def
/len { sequence length } bind def

/coor [
[82.19888306 238.15863037]
[68.38388062 244.00205994]
[53.39668655 244.62176514]
[39.14641953 239.93884277]
[27.44831657 230.54977417]
[19.79252052 217.65060425]
[17.15424919 202.88444519]
[19.86956978 188.13224792]
[27.59103394 175.27499390]
[14.16358471 181.96107483]
[0.73613530 188.64715576]
[-12.69131374 195.33322144]
[-26.11876297 202.01930237]
[-39.54621124 208.70538330]
[-38.56133270 223.84822083]
[-43.43592834 238.17585754]
[-53.39770126 249.51502991]
[-66.90524292 256.15835571]
[-81.88647461 257.12145996]
[-96.05648804 252.28865051]
[-107.26605225 242.42585754]
[-120.69350433 249.11192322]
[-125.80334473 263.82678223]
[-139.51593018 270.41613770]
[-153.51281738 265.45401001]
[-166.94027710 272.14007568]
[-180.36772156 278.82614136]
[-193.79516602 285.51223755]
[-207.22262573 292.19830322]
[-220.65007019 298.88436890]
[-234.07751465 305.57046509]
[-245.56103516 318.04302979]
[-260.72512817 310.46102905]
[-257.63729858 293.79064941]
[-240.76359558 292.14300537]
[-227.33613586 285.45693970]
[-213.90869141 278.77084351]
[-200.48124695 272.08477783]
[-187.05380249 265.39871216]
[-173.62634277 258.71261597]
[-160.19889832 252.02655029]
[-155.72375488 237.86643982]
[-142.20166016 230.89453125]
[-127.37957764 235.68447876]
[-113.95213318 228.99839783]
[-115.06755066 214.10931396]
[-110.38487244 199.88897705]
[-100.58808899 188.51408386]
[-87.14648438 181.73834229]
[-72.09432220 180.62205505]
[-57.72301483 185.36637878]
[-46.23228836 195.27792358]
[-32.80484009 188.59185791]
[-19.37738991 181.90577698]
[-5.94994020 175.21969604]
[7.47750950 168.53363037]
[20.90495872 161.84754944]
[26.03794670 153.58940125]
[36.78530502 151.45236206]
[48.28496552 141.82127380]
[59.78462601 132.19018555]
[71.28428650 122.55909729]
[82.78395081 112.92801666]
[70.81813812 121.97341919]
[55.89626312 123.50234985]
[42.34472275 117.07151031]
[34.09260178 104.54544067]
[33.53250122 89.55590057]
[40.82680893 76.44891357]
[53.86063766 69.02467346]
[68.85500336 69.43575287]
[81.46248627 77.56295013]
[88.02728271 91.04748535]
[82.14183807 77.25032806]
[76.25639343 63.45317078]
[70.37094879 49.65601349]
[64.48550415 35.85885620]
[58.60006332 22.06169701]
[52.71462250 8.26453972]
[39.28247452 -1.14340508]
[40.98326874 -17.45411682]
[56.06737900 -23.88853455]
[69.01756287 -13.82747841]
[66.51177979 2.37909698]
[72.39722443 16.17625427]
[78.28266144 29.97341156]
[84.16810608 43.77056885]
[90.05355072 57.56772614]
[95.93899536 71.36488342]
[101.82444000 85.16204071]
[107.49938202 71.27697754]
[122.46317291 70.23536682]
[130.00711060 83.20027924]
[121.70651245 95.69547272]
[136.42742920 92.81547546]
[151.14836121 89.93547821]
[165.86927795 87.05548096]
[180.59020996 84.17548370]
[195.31112671 81.29547882]
[209.80543518 77.43348694]
[224.00770569 72.60691833]
[238.20996094 67.78035736]
[252.41223145 62.95379639]
[266.61450195 58.12723160]
[280.81674194 53.30067062]
[295.01901245 48.47410583]
[296.19335938 34.37874985]
[302.63528442 21.83540154]
[313.34143066 12.72539520]
[326.67169189 8.40090466]
[340.60043335 9.48430443]
[353.02435303 15.77883625]
[362.08001709 26.30332947]
[376.36135864 21.71603394]
[390.64270020 17.12873840]
[397.91064453 3.35142088]
[412.45932007 -1.09730625]
[425.54907227 5.91648912]
[439.79138184 1.20939362]
[453.99365234 -3.61716938]
[468.19592285 -8.44373226]
[482.08999634 -14.09656429]
[495.62786865 -20.55612564]
[509.16574097 -27.01568794]
[522.70361328 -33.47525024]
[534.39508057 -45.75314713]
[549.42962646 -37.91748047]
[546.06219482 -21.30132484]
[529.16320801 -19.93737411]
[515.62530518 -13.47781277]
[502.08743286 -7.01825094]
[488.54956055 -0.55868912]
[502.66683960 4.51107168]
[510.34457397 17.39719963]
[508.08297729 32.22572708]
[496.91296387 42.23726654]
[481.92623901 42.86818695]
[469.95431519 33.83089828]
[466.45440674 19.24492455]
[473.02249146 5.75853109]
[458.82022095 10.58509445]
[444.61795044 15.41165733]
[439.28533936 20.55150414]
[430.13638306 20.19783020]
[423.57943726 33.52232742]
[409.16146851 38.37794113]
[395.22998047 31.41007996]
[380.94863892 35.99737549]
[366.66729736 40.58467102]
[364.77658081 56.44245148]
[356.13244629 69.93997192]
[342.42037964 78.35134125]
[326.35534668 79.95169067]
[311.14422607 74.37061310]
[299.84558105 62.67636871]
[285.64331055 67.50292969]
[271.44107056 72.32949829]
[257.23880005 77.15605927]
[243.03652954 81.98262024]
[228.83425903 86.80918884]
[214.63200378 91.63574982]
[228.43289185 97.51243591]
[236.25497437 110.31146240]
[235.18965149 125.27358246]
[225.63307190 136.83523560]
[211.13877869 140.69728088]
[197.09637451 135.42364502]
[188.72746277 122.97529602]
[189.14396667 107.98107910]
[198.19113159 96.01640320]
[183.47019958 98.89640808]
[168.74928284 101.77640533]
[154.02835083 104.65640259]
[139.30743408 107.53639984]
[124.58650970 110.41639709]
[92.41503143 124.42767334]
[80.91537476 134.05876160]
[69.41571045 143.68984985]
[57.91604996 153.32092285]
[46.41638947 162.95201111]
[61.29137421 161.01942444]
[75.89762878 164.43368530]
[88.37458038 172.75990295]
[97.13286591 184.93743896]
[101.05683136 199.41508484]
[99.64662933 214.34864807]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 57]
[10 56]
[11 55]
[12 54]
[13 53]
[14 52]
[21 45]
[22 44]
[25 41]
[26 40]
[27 39]
[28 38]
[29 37]
[30 36]
[31 35]
[59 180]
[60 179]
[61 178]
[62 177]
[63 176]
[73 90]
[74 89]
[75 88]
[76 87]
[77 86]
[78 85]
[79 84]
[94 175]
[95 174]
[96 173]
[97 172]
[98 171]
[99 170]
[100 161]
[101 160]
[102 159]
[103 158]
[104 157]
[105 156]
[106 155]
[113 149]
[114 148]
[115 147]
[118 144]
[119 142]
[120 141]
[121 140]
[122 132]
[123 131]
[124 130]
[125 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
