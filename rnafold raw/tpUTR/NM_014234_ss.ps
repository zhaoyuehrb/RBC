%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 08:58:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCCUCAAGGACCCUGGACUCUGCUCACCCCCCCACCACUCUGCCUGGCCUCCUGCUGAUGAGGACUCUAAGUUCCCAGGAUACAAAAGGGGUGGCAGUGUAUGGUUCAGGAAUGCUGAAUAUGGGAAGCAGGGGUGCUUGUGACCCUAAUAAAUUCCAAGUCCUCUUCCCUGCCA\
) } def
/len { sequence length } bind def

/coor [
[151.52845764 189.00341797]
[145.91728210 181.19261169]
[142.32408142 172.25650024]
[140.96217346 162.70759583]
[141.91668701 153.09524536]
[145.13926697 143.97412109]
[133.22555542 134.86019897]
[121.31183624 125.74629974]
[108.05123901 132.43830872]
[93.20048523 132.72357178]
[79.69267273 126.54577637]
[70.19565582 115.12505341]
[66.58515167 100.71704865]
[69.57425690 86.16741943]
[57.66054153 77.05351257]
[45.74682236 67.93960571]
[33.83310318 58.82569504]
[21.91938782 49.71178436]
[10.00566959 40.59787750]
[-1.90804780 31.48396873]
[-13.82176495 22.37005997]
[-26.12589455 13.79052544]
[-38.79648590 5.76206636]
[-51.46707535 -2.26639247]
[-64.13766479 -10.29485130]
[-73.09107208 -12.25427628]
[-76.95928192 -18.57847404]
[-89.48620605 -26.82929802]
[-102.01313019 -35.08012390]
[-114.54006195 -43.33094788]
[-127.06698608 -51.58177567]
[-139.59391785 -59.83259964]
[-149.02543640 -51.23963928]
[-160.13825989 -44.98852921]
[-172.36270142 -41.39521790]
[-185.07319641 -40.63952637]
[-197.62014771 -42.75616074]
[-209.36323547 -47.63313293]
[-219.70402527 -55.01769257]
[-228.11653137 -64.52940369]
[-234.17388916 -75.67975616]
[-237.57009888 -87.89724731]
[-238.13542175 -100.55667877]
[-235.84486389 -113.01114655]
[-230.81930542 -124.62509918]
[-242.73301697 -133.73901367]
[-254.64672852 -142.85292053]
[-266.56045532 -151.96682739]
[-278.47418213 -161.08073425]
[-291.21511841 -168.99707031]
[-304.66333008 -175.64129639]
[-318.11154175 -182.28550720]
[-331.55975342 -188.92973328]
[-345.23434448 -181.59590149]
[-360.60342407 -183.73379517]
[-371.75729370 -194.52133179]
[-374.40704346 -209.81050110]
[-367.53378296 -223.72229004]
[-353.78042603 -230.90734863]
[-338.43542480 -228.60285950]
[-327.39923096 -217.69494629]
[-324.91552734 -202.37794495]
[-311.46731567 -195.73371887]
[-298.01910400 -189.08949280]
[-284.57089233 -182.44528198]
[-291.64996338 -195.66975403]
[-291.88171387 -210.66796875]
[-285.21463013 -224.10485840]
[-273.13125610 -232.99258423]
[-258.31842041 -235.35481262]
[-244.06999207 -230.66630554]
[-233.55426025 -219.96958923]
[-229.10955811 -205.64323425]
[-231.72421265 -190.87287903]
[-240.81681824 -178.94288635]
[-254.36552429 -172.50605774]
[-269.36026001 -172.99446106]
[-257.44653320 -163.88053894]
[-245.53282166 -154.76663208]
[-233.61911011 -145.65272522]
[-221.70539856 -136.53881836]
[-207.67636108 -146.78434753]
[-191.16604614 -152.24269104]
[-173.76013184 -152.37846375]
[-157.13375854 -147.16802979]
[-142.89028931 -137.10278320]
[-132.40663147 -123.14280701]
[-126.70026398 -106.62532043]
[-126.33035278 -89.13657379]
[-131.34309387 -72.35952759]
[-118.81616211 -64.10870361]
[-106.28923035 -55.85787582]
[-93.76230621 -47.60705185]
[-81.23538208 -39.35622406]
[-68.70845795 -31.10540009]
[-56.10920715 -22.96544075]
[-43.43861389 -14.93698215]
[-30.76802635 -6.90852356]
[-18.09743500 1.11993515]
[-18.60886574 -13.87134361]
[-7.32558727 -23.75504875]
[7.46784258 -21.27423668]
[14.90959740 -8.25040054]
[9.53569412 5.75392580]
[-4.70785666 10.45634174]
[7.20586109 19.57024956]
[19.11957932 28.68415833]
[31.03329659 37.79806900]
[42.94701385 46.91197586]
[54.86073303 56.02588654]
[66.77445221 65.13979340]
[78.68816376 74.25370026]
[91.94876099 67.56169891]
[106.79951477 67.27642059]
[120.30732727 73.45422363]
[129.80433655 84.87494659]
[133.41484070 99.28295135]
[130.42573547 113.83258057]
[142.33946228 122.94648743]
[154.25317383 132.06039429]
[173.08090210 122.72805023]
[193.97282410 124.14990234]
[211.24096680 135.86463928]
[220.22129822 154.61875916]
[218.53347778 175.26980591]
[231.47950745 182.84609985]
[244.42553711 190.42239380]
[257.37158203 197.99868774]
[270.31759644 205.57498169]
[283.26364136 213.15127563]
[292.28060913 214.79350281]
[296.36959839 220.97724915]
[309.17993164 228.78083801]
[321.99023438 236.58442688]
[327.26907349 236.70375061]
[331.53497314 238.65740967]
[334.25531006 241.74484253]
[335.25650024 245.15533447]
[347.63586426 253.62596130]
[360.01522827 262.09658813]
[372.39459229 270.56719971]
[384.77395630 279.03781128]
[393.65261841 281.31201172]
[397.29522705 287.76876831]
[409.52316284 296.45657349]
[423.14184570 289.47155762]
[438.44656372 289.62716675]
[451.92041016 296.88763428]
[460.46719360 309.58450317]
[462.12292480 324.80020142]
[456.50711060 339.03823853]
[444.91024780 349.02679443]
[429.99722290 352.47061157]
[415.19491577 348.57830811]
[403.90478516 338.24429321]
[398.72122192 323.84329224]
[400.83538818 308.68450928]
[388.60745239 299.99670410]
[376.30331421 291.41717529]
[363.92395020 282.94656372]
[351.54461670 274.47595215]
[339.16525269 266.00531006]
[326.78588867 257.53469849]
[314.18664551 249.39474487]
[301.37631226 241.59115601]
[288.56600952 233.78755188]
[275.68734741 226.09732056]
[262.74130249 218.52102661]
[249.79528809 210.94473267]
[236.84924316 203.36843872]
[223.90321350 195.79214478]
[210.95718384 188.21585083]
[203.90650940 194.61090088]
[195.52249146 199.14801025]
[186.28512573 201.55978394]
[176.72508240 201.70072937]
[167.39318848 199.55601501]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 120]
[7 119]
[8 118]
[14 112]
[15 111]
[16 110]
[17 109]
[18 108]
[19 107]
[20 106]
[21 105]
[22 99]
[23 98]
[24 97]
[25 96]
[27 95]
[28 94]
[29 93]
[30 92]
[31 91]
[32 90]
[45 81]
[46 80]
[47 79]
[48 78]
[49 77]
[50 65]
[51 64]
[52 63]
[53 62]
[125 172]
[126 171]
[127 170]
[128 169]
[129 168]
[130 167]
[132 166]
[133 165]
[134 164]
[138 163]
[139 162]
[140 161]
[141 160]
[142 159]
[144 158]
[145 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
