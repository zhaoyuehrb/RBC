%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 17:09:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCCAUAUUUUAAUGCAGUGGUUUCUCUGGUCACUCACGGUCCAGCACUAGCACGCAGCAGUCGGGGAAAUGCUGUGGGUAUGAGACGGCCUGGAUUUUGAAGGCGCUGCAUGAAAAAGAAUGUAGAGAAUCUGAAUGCAUUUUAUGUAUAGAUUGCAUGUUGAAAUGAUGCUGUUGGGAUAUAUUAGGCAAAAUAAAAUAUAUCACAAUUU\
) } def
/len { sequence length } bind def

/coor [
[70.40295410 139.86875916]
[60.66196442 130.29887390]
[53.89616394 118.43745422]
[50.61726379 105.18157959]
[51.07324982 91.53380585]
[36.84878159 86.77307892]
[22.62431526 82.01235199]
[4.66829967 86.09912872]
[-6.43589640 72.50877380]
[-20.72871590 67.95736694]
[-35.02153778 63.40596390]
[-49.31435776 58.85455704]
[-67.20844269 63.20448685]
[-78.51094818 49.77860260]
[-92.86904144 45.43750381]
[-107.22713470 41.09640503]
[-121.58523560 36.75531006]
[-135.94332886 32.41421127]
[-150.30142212 28.07311249]
[-164.65951538 23.73201370]
[-179.01760864 19.39091682]
[-194.46644592 22.80324936]
[-204.40985107 11.71370029]
[-218.76794434 7.37260199]
[-233.12603760 3.03150415]
[-247.48413086 -1.30959404]
[-261.96347046 -5.22731829]
[-276.55157471 -8.71829224]
[-291.13970947 -12.20926571]
[-305.75305176 -15.59306622]
[-320.39083862 -18.86951256]
[-335.02862549 -22.14595985]
[-349.66641235 -25.42240524]
[-364.45315552 -27.94275284]
[-379.34982300 -29.70034599]
[-394.24652100 -31.45794106]
[-409.14318848 -33.21553421]
[-424.03985596 -34.97312927]
[-438.93652344 -36.73072052]
[-453.83319092 -38.48831558]
[-468.72988892 -40.24591064]
[-483.62655640 -42.00350189]
[-498.56838989 -43.32302475]
[-513.54254150 -44.20333862]
[-523.41430664 -32.37733078]
[-538.18408203 -28.67500114]
[-552.13677979 -34.31288147]
[-560.00012207 -46.93453217]
[-574.97424316 -47.81484604]
[-589.94842529 -48.69515991]
[-598.69659424 -46.07522202]
[-605.13543701 -49.69989777]
[-620.09503174 -50.79993820]
[-633.13110352 -41.44900131]
[-648.53002930 -45.94929123]
[-654.47906494 -60.84857559]
[-646.41461182 -74.71739197]
[-630.52301025 -76.91677856]
[-618.99499512 -65.75954437]
[-604.03540039 -64.65950775]
[-589.06811523 -63.66930771]
[-574.09393311 -62.78899384]
[-559.11981201 -61.90867996]
[-549.83172607 -73.52201843]
[-535.31451416 -77.48618317]
[-521.08032227 -72.07873535]
[-512.66223145 -59.17748642]
[-497.68807983 -58.29717255]
[-495.50668335 -60.05431366]
[-492.49859619 -61.05425644]
[-488.94839478 -60.97809982]
[-485.25061035 -59.61561203]
[-481.86895752 -56.90017700]
[-466.97229004 -55.14258194]
[-452.07562256 -53.38498688]
[-437.17892456 -51.62739563]
[-422.28225708 -49.86980057]
[-407.38558960 -48.11220551]
[-392.48892212 -46.35461426]
[-377.59225464 -44.59701920]
[-362.69555664 -42.83942413]
[-372.06829834 -54.55062485]
[-371.84423828 -69.54895020]
[-362.12591553 -80.97497559]
[-347.35794067 -83.60304260]
[-334.29437256 -76.23121643]
[-328.90985107 -62.23097992]
[-333.66690063 -48.00528717]
[-346.38998413 -40.06019592]
[-331.75219727 -36.78374863]
[-317.11437988 -33.50730133]
[-302.47659302 -30.23085594]
[-295.26434326 -31.83699036]
[-287.64874268 -26.79738045]
[-273.06060791 -23.30640793]
[-258.47250366 -19.81543350]
[-256.01690674 -21.16308022]
[-252.88015747 -21.62036896]
[-249.39823914 -20.92320442]
[-245.99645996 -18.93374825]
[-243.14303589 -15.66768837]
[-228.78492737 -11.32658958]
[-214.42683411 -6.98549175]
[-200.06874084 -2.64439368]
[-185.64689636 -6.36723042]
[-174.67651367 5.03282213]
[-160.31842041 9.37392044]
[-145.96032715 13.71501827]
[-131.60223389 18.05611610]
[-117.24413300 22.39721489]
[-102.88603973 26.73831367]
[-88.52794647 31.07941055]
[-74.16985321 35.42050934]
[-63.36385345 29.98705482]
[-51.36738205 33.48447037]
[-44.76295471 44.56173706]
[-30.47013283 49.11314392]
[-16.17731285 53.66454697]
[-1.88449180 58.21595001]
[9.00010204 52.94171143]
[20.94394112 56.61485672]
[27.38504601 67.78787994]
[41.60951233 72.54861450]
[55.83398056 77.30934143]
[65.55490875 63.19198990]
[79.68382263 53.03741455]
[96.66146851 48.18136597]
[114.53995514 49.36267471]
[131.20616150 56.61677933]
[144.63146973 69.25121307]
[157.69462585 61.87870789]
[170.75778198 54.50619888]
[183.82095337 47.13369370]
[196.88410950 39.76118469]
[200.56683350 34.27480316]
[205.69692993 31.83622360]
[210.44075012 32.37043762]
[223.71470642 25.38459587]
[236.98867798 18.39875412]
[250.26263428 11.41291142]
[263.53659058 4.42706966]
[276.81054688 -2.55877209]
[288.01116943 -15.28600788]
[303.34164429 -8.04636669]
[300.62884521 8.68913460]
[283.79638672 10.71518803]
[270.52243042 17.70102882]
[257.24847412 24.68687057]
[243.97451782 31.67271233]
[230.70054626 38.65855408]
[217.42658997 45.64439774]
[204.25660706 52.82434464]
[191.19345093 60.19685364]
[178.13029480 67.56935883]
[165.06713867 74.94186401]
[152.00398254 82.31437683]
[154.84930420 97.04203796]
[169.71856689 99.01812744]
[184.58782959 100.99420929]
[199.45709229 102.97029877]
[209.35617065 91.13763428]
[224.08781433 86.55702209]
[238.95123291 90.69011688]
[249.20355225 102.21806335]
[251.57328796 117.46233368]
[245.30427551 131.55854797]
[232.39694214 140.00863647]
[216.96995544 140.11622620]
[203.94601440 131.84696960]
[197.48101807 117.83956146]
[182.61174011 115.86347961]
[167.74247742 113.88739014]
[152.87321472 111.91130829]
[145.26513672 125.44372559]
[134.50157166 135.70916748]
[143.17523193 147.94712830]
[151.84887695 160.18508911]
[160.52253723 172.42304993]
[174.81498718 179.20806885]
[175.86186218 194.06584167]
[184.53552246 206.30380249]
[193.20916748 218.54176331]
[201.88282776 230.77973938]
[210.55648804 243.01770020]
[219.23013306 255.25566101]
[227.90379333 267.49362183]
[236.57743835 279.73156738]
[251.73866272 277.63491821]
[266.13369751 282.83508301]
[276.45465088 294.13714600]
[280.32986450 308.94393921]
[276.86883545 323.85299683]
[266.86688232 335.43832397]
[252.62237549 341.03765869]
[237.40861511 339.36437988]
[224.72158813 330.80294800]
[217.47669983 317.32073975]
[217.33876038 302.01583862]
[224.33947754 288.40524292]
[215.66583252 276.16726685]
[206.99217224 263.92932129]
[198.31851196 251.69134521]
[189.64486694 239.45338440]
[180.97120667 227.21542358]
[172.29756165 214.97746277]
[163.62390137 202.73950195]
[149.95185852 196.82981873]
[148.28457642 181.09671021]
[139.61091614 168.85874939]
[130.93727112 156.62078857]
[122.26361084 144.38282776]
[109.33184814 148.76904297]
[95.69430542 149.46679688]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 124]
[6 123]
[7 122]
[9 119]
[10 118]
[11 117]
[12 116]
[14 113]
[15 112]
[16 111]
[17 110]
[18 109]
[19 108]
[20 107]
[21 106]
[23 104]
[24 103]
[25 102]
[26 101]
[27 96]
[28 95]
[29 94]
[30 92]
[31 91]
[32 90]
[33 89]
[34 81]
[35 80]
[36 79]
[37 78]
[38 77]
[39 76]
[40 75]
[41 74]
[42 73]
[43 68]
[44 67]
[48 63]
[49 62]
[50 61]
[52 60]
[53 59]
[130 156]
[131 155]
[132 154]
[133 153]
[134 152]
[137 151]
[138 150]
[139 149]
[140 148]
[141 147]
[142 146]
[157 173]
[158 172]
[159 171]
[160 170]
[175 211]
[176 210]
[177 209]
[178 208]
[180 206]
[181 205]
[182 204]
[183 203]
[184 202]
[185 201]
[186 200]
[187 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
