%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Sep  9 23:01:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUGCCCUACCAUUGGAAUAACAUAAUGAGAGGCCUGGGCAACCCAGAGAGAAGUGUAAAUGACAUCAGUUACUAAUAAGAACACUGCUGAAUUUUGAAAAACUUUUGCAUGCUUUAAUUUCUCCAUAUUUUAAGUAAUUAUACUAAUUAUGAGAGUGCUGUGUAUUAUUAGUUGUUUGGUCACAAAUAAAAACAAAAUUCAUUUCAAAUAUA\
) } def
/len { sequence length } bind def

/coor [
[39.86978149 249.18013000]
[31.59403038 253.32946777]
[22.60045052 255.78131104]
[13.23595715 256.41488647]
[3.86697745 255.18005371]
[-5.13489056 252.10035706]
[-13.73853683 264.38763428]
[-22.34218407 276.67492676]
[-30.85624886 289.02444458]
[-39.28028107 301.43554688]
[-40.13988113 307.98477173]
[-43.64922333 312.44882202]
[-48.13418579 314.08026123]
[-56.91563034 326.24108887]
[-65.69706726 338.40194702]
[-74.47850800 350.56280518]
[-83.25995636 362.72366333]
[-78.29423523 377.42471313]
[-82.95008087 392.22683716]
[-95.43721771 401.43829346]
[-110.95409393 401.51708984]
[-123.53414917 392.43295288]
[-128.34010315 377.67886353]
[-123.52394867 362.92813110]
[-110.93762207 353.85269165]
[-95.42080688 353.94219971]
[-86.63935852 341.78137207]
[-77.85791779 329.62051392]
[-69.07647705 317.45965576]
[-60.29503632 305.29879761]
[-51.69139099 293.01153564]
[-43.26736069 280.60040283]
[-42.11222458 273.30346680]
[-34.62946320 268.07128906]
[-26.02581787 255.78399658]
[-17.42217064 243.49671936]
[-26.37955093 231.46487427]
[-40.61819077 236.18304443]
[-54.85683060 240.90121460]
[-69.09546661 245.61938477]
[-83.33410645 250.33755493]
[-96.46744537 261.05911255]
[-110.40567017 251.40705872]
[-104.98930359 235.34158325]
[-88.05227661 236.09890747]
[-73.81363678 231.38073730]
[-59.57500076 226.66256714]
[-45.33636093 221.94439697]
[-31.09772110 217.22622681]
[-27.24241447 191.35346985]
[-10.69307423 171.90501404]
[13.04497910 164.33778381]
[36.59137344 170.31562805]
[45.72279358 158.41532898]
[54.85421371 146.51502991]
[63.98563766 134.61473083]
[73.11705780 122.71443176]
[82.24848175 110.81413269]
[80.41290283 103.54222870]
[65.86902618 107.21313477]
[62.19835663 92.66919708]
[76.74175262 88.99840546]
[74.90618134 81.72650146]
[61.22080231 75.58560944]
[47.53542709 69.44472504]
[33.85004807 63.30384445]
[17.59969711 65.50794983]
[7.78109503 52.37298965]
[14.49477959 37.41109085]
[30.83428764 36.01376724]
[39.99093246 49.61846542]
[53.67631149 55.75934982]
[67.36168671 61.90023804]
[81.04706573 68.04112244]
[95.21557617 63.11636353]
[102.14180756 49.81119919]
[109.06803894 36.50603867]
[115.99426270 23.20087624]
[122.92049408 9.89571381]
[129.84672546 -3.40944910]
[136.77294922 -16.71461105]
[133.64591980 -29.22544670]
[139.68574524 -40.16363907]
[151.17825317 -43.93083191]
[158.29725647 -57.13385391]
[165.41625977 -70.33687592]
[172.53526306 -83.53989410]
[172.27444458 -99.35894775]
[185.12519836 -106.88938904]
[192.24420166 -120.09240723]
[195.27746582 -134.78251648]
[193.97013855 -149.72543335]
[192.66279602 -164.66836548]
[191.35546875 -179.61128235]
[178.21920776 -187.65769958]
[172.40769958 -201.73178101]
[175.95591736 -216.35623169]
[187.29942322 -225.97196960]
[185.99209595 -240.91490173]
[184.57612610 -255.84791565]
[183.05158997 -270.77023315]
[181.52706909 -285.69256592]
[171.49308777 -298.66372681]
[177.95898438 -313.73437500]
[194.27322388 -315.40109253]
[203.65309143 -301.94934082]
[196.44940186 -287.21710205]
[197.97392273 -272.29476929]
[199.49844360 -257.37243652]
[203.30395508 -251.04014587]
[200.93501282 -242.22222900]
[202.24234009 -227.27931213]
[215.08328247 -219.77943420]
[221.11709595 -205.99330139]
[217.83782959 -191.12388611]
[206.29838562 -180.91860962]
[207.60571289 -165.97569275]
[208.91305542 -151.03277588]
[210.22039795 -136.08985901]
[217.01770020 -132.92021179]
[223.35717773 -146.51473999]
[236.95159912 -140.17504883]
[230.61231995 -126.58094025]
[237.40962219 -123.41130829]
[249.69689941 -132.01495361]
[261.98419189 -140.61859131]
[274.20858765 -149.31137085]
[286.36941528 -158.09281921]
[298.53027344 -166.87425232]
[310.69113159 -175.65570068]
[317.34960938 -190.00753784]
[332.19754028 -191.18563843]
[344.35839844 -199.96708679]
[347.40612793 -205.82734680]
[352.23062134 -208.82191467]
[357.00308228 -208.82099915]
[369.41418457 -217.24502563]
[381.82531738 -225.66905212]
[394.23641968 -234.09309387]
[400.89154053 -249.08113098]
[417.22543335 -250.54237366]
[426.43524170 -236.97358704]
[419.04666138 -222.33320618]
[402.66046143 -221.68197632]
[390.24932861 -213.25794983]
[377.83822632 -204.83390808]
[365.42712402 -196.40988159]
[353.13983154 -187.80622864]
[340.97897339 -179.02479553]
[335.19033813 -165.30105591]
[319.47256470 -163.49484253]
[307.31170654 -154.71340942]
[295.15087891 -145.93196106]
[282.99002075 -137.15052795]
[279.40884399 -130.68870544]
[270.58782959 -128.33131409]
[258.30053711 -119.72766876]
[246.01327515 -111.12402344]
[221.95436096 -103.80591583]
[205.44723511 -112.97340393]
[198.32821655 -99.77037811]
[199.09823608 -84.89569092]
[185.73828125 -76.42089081]
[178.61927795 -63.21786880]
[171.50027466 -50.01484680]
[164.38127136 -36.81182480]
[165.83453369 -19.32151222]
[150.07810974 -9.78838253]
[143.15188599 3.51678014]
[136.22566223 16.82194328]
[129.29942322 30.12710571]
[122.37319946 43.43226624]
[115.44696808 56.73743057]
[108.52073669 70.04259491]
[125.19265747 104.52373505]
[137.35351562 113.30518341]
[149.51435852 122.08662415]
[161.67521667 130.86805725]
[173.83605957 139.64950562]
[185.99691772 148.43093872]
[198.15776062 157.21238708]
[214.51809692 158.33992004]
[221.47773743 173.18901062]
[211.87719727 186.48419189]
[195.59268188 184.54850769]
[189.37631226 169.37324524]
[177.21546936 160.59179688]
[165.05461121 151.81034851]
[152.89376831 143.02891541]
[140.73291016 134.24746704]
[128.57206726 125.46603394]
[116.41121674 116.68458557]
[122.87332153 130.22125244]
[133.82495117 140.47122192]
[137.64506531 154.97662354]
[133.16270447 169.29124451]
[121.75183868 179.02737427]
[106.91011047 181.20065308]
[93.18682861 175.14494324]
[84.78847504 162.71644592]
[84.28931427 147.72474670]
[91.84050751 134.76689148]
[94.14878082 119.94555664]
[85.01735687 131.84585571]
[75.88594055 143.74615479]
[66.75451660 155.64645386]
[57.62309265 167.54675293]
[48.49167252 179.44705200]
[53.96050644 186.18861389]
[58.02124786 193.93356323]
[60.49182510 202.38903809]
[61.25084686 211.22962952]
[60.24328995 220.10986328]
[57.48367310 228.67771912]
[53.05645752 236.58854675]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 36]
[7 35]
[8 34]
[9 32]
[10 31]
[13 30]
[14 29]
[15 28]
[16 27]
[17 26]
[37 49]
[38 48]
[39 47]
[40 46]
[41 45]
[53 208]
[54 207]
[55 206]
[56 205]
[57 204]
[58 203]
[63 74]
[64 73]
[65 72]
[66 71]
[75 174]
[76 173]
[77 172]
[78 171]
[79 170]
[80 169]
[81 168]
[84 166]
[85 165]
[86 164]
[87 163]
[89 161]
[90 160]
[91 119]
[92 118]
[93 117]
[94 116]
[98 112]
[99 111]
[100 109]
[101 108]
[102 107]
[124 158]
[125 157]
[126 156]
[127 154]
[128 153]
[129 152]
[130 151]
[132 149]
[133 148]
[136 147]
[137 146]
[138 145]
[139 144]
[175 192]
[176 191]
[177 190]
[178 189]
[179 188]
[180 187]
[181 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
