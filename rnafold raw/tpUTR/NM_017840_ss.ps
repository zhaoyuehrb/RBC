%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 17:14:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUGUAGGAGAUAACUGUAUAUAGGCUACUGAAAGAAGGAUUCUGCAUUUCUAUUCCCCUCAGCCUACCCACUGAAGUCUUUGGGUAGCUCUUAAGCCAUAACUAAGGAGCAGCAUUUGAGUAGAUUUCUGAAAAACAAUGUUAUUUGUUGAUUUAAAAAGAAAACUGUAUUUUUAUUAAAUAAAAUUUAAACAUCACUUCAGGAUAUAA\
) } def
/len { sequence length } bind def

/coor [
[86.66118622 144.31253052]
[85.96703339 129.32859802]
[93.81237030 116.54341888]
[83.08908844 127.03205109]
[72.36580658 137.52067566]
[61.64252853 148.00929260]
[50.91924667 158.49792480]
[40.19596863 168.98655701]
[29.47268867 179.47517395]
[18.74940872 189.96380615]
[8.02612782 200.45242310]
[10.57146454 210.81042480]
[8.60351467 221.21130371]
[2.54308009 229.79145813]
[-6.46195841 235.04190063]
[-16.75355148 236.07347107]
[-26.46863556 232.76676941]
[-37.64536667 242.77079773]
[-33.49777603 257.41864014]
[-36.11061478 272.35382080]
[-44.91287994 284.62332153]
[-58.11517334 291.82473755]
[-73.07324982 292.57675171]
[-86.81755066 286.78369141]
[-97.99428558 296.78771973]
[-109.17101288 306.79174805]
[-113.76772308 322.53347778]
[-129.76083374 326.16009521]
[-140.69801331 313.94085693]
[-135.32801819 298.44583130]
[-119.17504883 295.61502075]
[-107.99831390 285.61099243]
[-96.82158661 275.60696411]
[-101.06195068 261.30712891]
[-98.66325378 246.52349854]
[-90.04839325 234.19689941]
[-76.88217926 226.80290222]
[-61.74982834 225.85479736]
[-47.64939880 231.59407043]
[-36.47266769 221.59002686]
[-36.82442856 202.11080933]
[-22.51453781 188.44392395]
[-2.46249771 189.72914124]
[8.26078224 179.24052429]
[18.98406219 168.75189209]
[29.70734215 158.26327515]
[40.43062210 147.77464294]
[51.15390396 137.28602600]
[61.87718201 126.79739380]
[72.60046387 116.30876923]
[83.32374573 105.82014465]
[85.52812195 90.98300171]
[78.31732941 77.82988739]
[71.10653687 64.67676544]
[63.89574814 51.52365112]
[56.68495941 38.37053299]
[49.47416687 25.21741486]
[42.26337814 12.06429672]
[29.17604065 15.45633793]
[15.55667019 15.35187817]
[2.33008862 11.70639038]
[-9.59224033 4.71754313]
[-19.37500763 -5.18484259]
[-26.31752205 -17.36495781]
[-29.90374565 -31.02169991]
[-29.84035683 -45.24131775]
[-26.08003807 -59.05853271]
[-18.82817650 -71.52207947]
[-29.85614586 -81.68986511]
[-40.88411331 -91.85765076]
[-51.91208267 -102.02543640]
[-62.94005203 -112.19322205]
[-73.96801758 -122.36101532]
[-89.53797150 -121.89797974]
[-100.57705688 -132.36665344]
[-100.92253876 -147.21307373]
[-117.03200531 -150.28182983]
[-122.17288208 -165.85435486]
[-111.05667877 -177.91096497]
[-95.11878967 -174.04887390]
[-90.75475311 -158.24104309]
[-75.92915344 -159.09973145]
[-64.60038757 -148.94525146]
[-63.80023193 -133.38897705]
[-52.77226639 -123.22119141]
[-41.74429703 -113.05340576]
[-30.71632576 -102.88562012]
[-19.68835831 -92.71783447]
[-8.66038895 -82.55004883]
[4.59764814 -89.56606293]
[2.39327192 -104.40319824]
[0.18889534 -119.24034119]
[-2.01548123 -134.07748413]
[-4.21985769 -148.91462708]
[-6.42423439 -163.75175476]
[-16.10557938 -176.26502991]
[-10.32266617 -189.99118042]
[-12.52704239 -204.82832336]
[-25.37099457 -214.03747559]
[-27.85871696 -229.64474487]
[-18.51428795 -242.39060974]
[-2.88159060 -244.71318054]
[9.76477146 -235.23452759]
[11.92193699 -219.57814026]
[2.31009769 -207.03269958]
[4.51447439 -192.19555664]
[14.03814793 -180.74353027]
[8.41290569 -165.95613098]
[10.61728191 -151.11900330]
[12.82165909 -136.28186035]
[15.02603531 -121.44471741]
[17.23041153 -106.60757446]
[19.43478775 -91.77043915]
[37.12244034 -89.97046661]
[53.18439102 -82.71472931]
[66.00089264 -70.84226227]
[74.31381226 -55.65187073]
[77.34975433 -38.76053238]
[74.89122009 -21.93141365]
[67.28910065 -6.88985443]
[55.41649628 4.85350609]
[62.62728500 18.00662422]
[69.83807373 31.15974236]
[77.04886627 44.31285858]
[84.25965881 57.46597672]
[91.47044373 70.61909485]
[98.68123627 83.77220917]
[110.75059509 85.67742920]
[119.13859558 96.08190155]
[133.69659424 99.69641113]
[148.25459290 103.31092834]
[162.81259155 106.92544556]
[177.37057495 110.53996277]
[191.92857361 114.15447998]
[206.48657227 117.76898956]
[214.90945435 108.53430176]
[226.39247131 103.78401947]
[238.73353577 104.36270905]
[249.59402466 110.09929657]
[256.94201660 119.85111237]
[259.43237305 131.73100281]
[273.87741089 135.77331543]
[288.32247925 139.81564331]
[302.76751709 143.85795593]
[317.21258545 147.90028381]
[325.62228394 135.34104919]
[337.48611450 126.00872040]
[351.63439941 120.80735016]
[366.67721558 120.23451233]
[381.14093018 124.33373260]
[393.61248779 132.69145203]
[402.87747192 144.47872925]
[408.03848267 158.53341675]
[408.60186768 173.47476196]
[423.04693604 177.51707458]
[437.49197388 181.55940247]
[451.93704224 185.60171509]
[466.38208008 189.64404297]
[480.82714844 193.68635559]
[496.20187378 189.95428467]
[506.37316895 200.83518982]
[520.81823730 204.87750244]
[535.26330566 208.91983032]
[549.70837402 212.96214294]
[564.15338135 217.00447083]
[576.95837402 208.02861023]
[592.53259277 209.43507385]
[603.52233887 220.55979919]
[604.73864746 236.15000916]
[595.60711670 248.84449768]
[580.43951416 252.64930725]
[566.39739990 245.76791382]
[560.11108398 231.44952393]
[545.66601562 227.40721130]
[531.22094727 223.36488342]
[516.77593994 219.32257080]
[502.33087158 215.28024292]
[487.98934937 219.30145264]
[476.78482056 208.13140869]
[462.33978271 204.08909607]
[447.89471436 200.04676819]
[433.44967651 196.00445557]
[419.00460815 191.96212769]
[404.55953979 187.91981506]
[396.32290649 200.39854431]
[384.61663818 209.73307800]
[370.57934570 214.99940491]
[355.58129883 215.67001343]
[341.09075928 211.66665649]
[328.53018188 203.36924744]
[319.13659668 191.57989502]
[313.83978271 177.44531250]
[313.17025757 162.34533691]
[298.72521973 158.30302429]
[284.28015137 154.26069641]
[269.83508301 150.21838379]
[255.39004517 146.17605591]
[242.06683350 157.76942444]
[224.29486084 159.05445862]
[209.17787170 149.32817078]
[202.87205505 132.32699585]
[188.31405640 128.71247864]
[173.75607300 125.09796143]
[159.19807434 121.48344421]
[144.64007568 117.86892700]
[130.08207703 114.25440979]
[115.52407837 110.63989258]
[128.76304626 117.69182587]
[135.75210571 130.96409607]
[134.07604980 145.87016296]
[124.31404877 157.25889587]
[109.83959961 161.19468689]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 51]
[4 50]
[5 49]
[6 48]
[7 47]
[8 46]
[9 45]
[10 44]
[11 43]
[17 40]
[18 39]
[24 33]
[25 32]
[26 31]
[52 127]
[53 126]
[54 125]
[55 124]
[56 123]
[57 122]
[58 121]
[68 89]
[69 88]
[70 87]
[71 86]
[72 85]
[73 84]
[76 81]
[90 113]
[91 112]
[92 111]
[93 110]
[94 109]
[95 108]
[97 106]
[98 105]
[129 207]
[130 206]
[131 205]
[132 204]
[133 203]
[134 202]
[135 201]
[141 197]
[142 196]
[143 195]
[144 194]
[145 193]
[154 184]
[155 183]
[156 182]
[157 181]
[158 180]
[159 179]
[161 177]
[162 176]
[163 175]
[164 174]
[165 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
