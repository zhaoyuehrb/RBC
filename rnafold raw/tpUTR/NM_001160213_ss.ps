%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 01:32:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCCACAUCUAGCCCUGAGCAGCAUUUCCACGGGUGUUUCUUCAGAGGACAGUGAGUUCCCAGCCCUCCCUCUCUCUUGACCUGGAUCAGCUCUUACAGGAGUAUAUCACGGUCCCAGCCUAUUUUGCAAGACACUAACUUUUGUUGAGUUUUGUCCACUUCCUGCCAUGGAGUGAGCUUUAGAACCAUACUACCAUCUCCAGGCCCAAACUCUGAAAUAAAGACAUGAGCAUGAGCACA\
) } def
/len { sequence length } bind def

/coor [
[24.77038383 384.63223267]
[21.48683548 399.26843262]
[18.20328522 413.90463257]
[14.91949177 428.54077148]
[0.28340277 425.25674438]
[3.56708646 410.62109375]
[6.85063648 395.98489380]
[10.13418579 381.34869385]
[13.41773605 366.71249390]
[16.70128632 352.07629395]
[19.98483658 337.44009399]
[23.26838493 322.80389404]
[15.95028687 321.16210938]
[7.03925371 333.22833252]
[-1.87177896 345.29455566]
[-10.78281212 357.36074829]
[-12.16148758 377.48556519]
[-30.23509789 384.39166260]
[-38.82987976 396.68515015]
[-47.42466354 408.97863770]
[-44.42260742 424.49517822]
[-53.34078598 437.54284668]
[-68.88820648 440.38067627]
[-81.84085083 431.32504272]
[-84.51416016 415.74850464]
[-75.32209015 402.89230347]
[-59.71814728 400.38385010]
[-51.12336349 388.09036255]
[-42.52857971 375.79687500]
[-45.20475006 365.96166992]
[-41.96807480 356.06539917]
[-33.65459442 349.43869019]
[-22.84902382 348.44973755]
[-13.93799210 336.38351440]
[-5.02695942 324.31729126]
[3.88407350 312.25109863]
[-9.31909180 292.20797729]
[-13.19219971 269.00759888]
[-7.45355654 246.69175720]
[6.53723478 228.99096680]
[26.07619858 218.70108032]
[47.63042831 217.24455261]
[51.10370255 202.65220642]
[54.57697296 188.05987549]
[58.05024338 173.46752930]
[61.52351761 158.87519836]
[64.99678802 144.28285217]
[68.47006226 129.69050598]
[59.40314102 117.74099731]
[44.41451645 117.15695953]
[30.32355309 124.35107422]
[17.90718651 116.12409973]
[2.91856122 115.54006958]
[-11.17240238 122.73418427]
[-23.58876801 114.50720978]
[-38.57739258 113.92317963]
[-53.56602097 113.33914185]
[-62.32120514 126.04151917]
[-76.56275940 131.97293091]
[-91.74625397 129.24070740]
[-103.02668762 118.71666718]
[-106.80451965 103.75901031]
[-101.87425232 89.14066315]
[-89.80912781 79.52629089]
[-74.45906830 77.98380280]
[-60.72222900 85.00540161]
[-52.98198700 98.35051727]
[-37.99336243 98.93454742]
[-23.00473595 99.51858521]
[-9.98585796 92.28269196]
[3.50259399 100.55144501]
[18.49122047 101.13547516]
[31.51009750 93.89958191]
[44.99855042 102.16833496]
[59.98717499 102.75236511]
[63.58154297 96.16977692]
[50.41647720 88.98081970]
[57.60564804 75.81587982]
[70.77027893 83.00459290]
[74.36464691 76.42199707]
[65.76985931 64.12851715]
[57.17507935 51.83503342]
[48.58029556 39.54154968]
[33.27237701 36.65964890]
[24.73117065 24.06987190]
[27.57296371 9.49387074]
[18.97818184 -2.79961157]
[10.38339901 -15.09309387]
[-4.92452049 -17.97499847]
[-13.46572685 -30.56477356]
[-10.62393475 -45.14077377]
[-19.21871758 -57.43425751]
[-27.81349945 -69.72773743]
[-36.40828323 -82.02122498]
[-45.00306320 -94.31470490]
[-60.08167267 -100.76199341]
[-61.76854324 -117.07415771]
[-48.32836914 -126.47062683]
[-33.58724594 -119.28513336]
[-32.70958328 -102.90948486]
[-24.11479950 -90.61600494]
[-15.52001667 -78.32252502]
[-6.92523432 -66.02903748]
[1.66954815 -53.73555756]
[16.33510399 -51.39952469]
[25.22656250 -39.05462265]
[22.67688179 -23.68787766]
[31.27166367 -11.39439392]
[39.86644745 0.89908826]
[54.53200150 3.23511910]
[63.42345810 15.58002281]
[60.87377930 30.94676781]
[69.46855927 43.24024963]
[78.06334686 55.53373337]
[86.65812683 67.82721710]
[94.15417480 67.58384705]
[92.50535583 52.67474747]
[90.85653687 37.76564026]
[89.20771027 22.85653877]
[83.63613129 8.92967606]
[91.84281158 -3.62621498]
[106.83493042 -4.11239672]
[115.83786774 7.88540125]
[111.18115997 22.14315033]
[110.50286865 37.12780762]
[109.82456970 52.11246109]
[109.14627838 67.09712219]
[116.64232635 66.85375214]
[124.42161560 54.02867126]
[132.20089722 41.20359039]
[139.98019409 28.37850952]
[147.75947571 15.55342960]
[155.53875732 2.72834849]
[163.31805420 -10.09673214]
[161.01341248 -22.77348518]
[167.74005127 -33.29026794]
[179.43946838 -36.31258392]
[187.38458252 -49.03559494]
[195.32971191 -61.75860977]
[203.27482605 -74.48162079]
[203.30134583 -90.88075256]
[217.64964294 -98.82168579]
[231.55941772 -90.13546753]
[230.72148132 -73.75774384]
[215.99784851 -66.53650665]
[208.05271912 -53.81349182]
[200.10760498 -41.09047699]
[192.16249084 -28.36746407]
[192.49139404 -10.81271648]
[176.14312744 -2.31744576]
[168.36384583 10.50763512]
[160.58454895 23.33271599]
[152.80526733 36.15779877]
[145.02598572 48.98287964]
[137.24668884 61.80796051]
[129.46740723 74.63304138]
[132.75907898 81.37209320]
[145.73472595 73.84661865]
[158.71035767 66.32113647]
[170.69085693 57.29520416]
[183.64013672 64.86595917]
[181.65135193 79.73353577]
[167.16702271 83.63450623]
[153.25473022 89.24235535]
[139.34242249 94.85021210]
[142.63409424 101.58927155]
[157.53182983 103.33782196]
[172.42956543 105.08638000]
[181.29626465 102.98146820]
[187.50889587 106.95555878]
[202.38267517 108.89736176]
[217.25645447 110.83916473]
[232.13023376 112.78096771]
[247.00401306 114.72277069]
[261.89010620 116.56798553]
[276.78784180 118.31654358]
[282.88226318 104.48364258]
[292.78454590 93.06275940]
[305.61410522 85.06941986]
[320.23019409 81.21440125]
[335.33316040 81.84048462]
[349.58004761 86.89199829]
[361.70404053 95.91976166]
[370.62704468 108.12104034]
[375.55569458 122.41089630]
[376.05166626 137.51869202]
[372.07092285 152.10104370]
[363.96740723 164.86131287]
[352.46166992 174.66484070]
[338.57678223 180.63993835]
[323.54742432 182.25527954]
[308.70993042 179.36723328]
[295.38369751 172.23260498]
[284.75366211 161.48579407]
[277.76504517 148.08241272]
[275.03927612 133.21427917]
[260.14154053 131.46572876]
[253.14662170 133.80265808]
[245.06221008 129.59655762]
[230.18843079 127.65474701]
[215.31465149 125.71294403]
[200.44087219 123.77114105]
[185.56709290 121.82933807]
[170.68101501 119.98411560]
[155.78327942 118.23556519]
[140.88554382 116.48700714]
[133.92727661 126.32662201]
[124.77162170 133.67230225]
[114.23461151 138.08862305]
[103.19912720 139.39094543]
[92.54157257 137.64797974]
[83.06240082 133.16378784]
[79.58912659 147.75611877]
[76.11585999 162.34846497]
[72.64258575 176.94081116]
[69.16931152 191.53314209]
[65.69604492 206.12548828]
[62.22277069 220.71781921]
[71.22923279 224.74304199]
[79.39324951 230.45999146]
[86.39709473 237.69303894]
[91.95954895 246.20700073]
[95.84703064 255.71456909]
[97.88323975 265.88604736]
[97.95680237 276.36071777]
[96.02664185 286.75970459]
[92.12486267 296.69958496]
[86.35691071 305.80661011]
[78.89907837 313.73062134]
[69.99325562 320.15856934]
[59.93918991 324.82675171]
[62.84167099 339.54324341]
[74.03586578 351.52749634]
[68.99613953 367.13305664]
[52.90692902 370.30624390]
[42.31943130 357.78280640]
[48.12516022 342.44573975]
[45.22268295 327.72921753]
[37.90458298 326.08746338]
[34.62103271 340.72363281]
[31.33748436 355.35983276]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 36]
[14 35]
[15 34]
[16 33]
[18 29]
[19 28]
[20 27]
[42 218]
[43 217]
[44 216]
[45 215]
[46 214]
[47 213]
[48 212]
[49 75]
[50 74]
[52 72]
[53 71]
[55 69]
[56 68]
[57 67]
[80 115]
[81 114]
[82 113]
[83 112]
[86 109]
[87 108]
[88 107]
[91 104]
[92 103]
[93 102]
[94 101]
[95 100]
[128 156]
[129 155]
[130 154]
[131 153]
[132 152]
[133 151]
[134 150]
[137 148]
[138 147]
[139 146]
[140 145]
[166 206]
[167 205]
[168 204]
[170 203]
[171 202]
[172 201]
[173 200]
[174 199]
[175 197]
[176 196]
[231 238]
[232 237]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
