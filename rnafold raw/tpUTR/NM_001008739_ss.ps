%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 11:11:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUUCCAGGUCCUUUGCGGCGGCGAUCUGGAGGGCGUGGCUACAGGACCCGGGAUGCCAUUCAGUUACUCAUCUUUUAUGCUUUCGUCCUGACCUGUCUCAACUAGACUUGCUCCUGCAACCACCAUGGGGGUUUUGCAUUUACAUUUGUGGACCAUGUUACAGUUAAGAAAAAUCCUGUUUCAGUCCUUAUAUGUAAUAAAAUGUUUUAUGAUGUAA\
) } def
/len { sequence length } bind def

/coor [
[231.36959839 173.33386230]
[219.30137634 164.04885864]
[214.96437073 149.26724243]
[200.88128662 144.10325623]
[186.79820251 138.93925476]
[172.71511841 133.77526855]
[158.63203430 128.61128235]
[144.51226807 123.54844666]
[130.35656738 118.58700562]
[116.20085144 113.62556458]
[105.51617432 120.43759918]
[92.85500336 119.92668152]
[82.75393677 112.27587891]
[78.83228302 100.22652435]
[64.74919891 95.06253815]
[50.66611481 89.89855194]
[36.58303070 84.73455811]
[22.49994659 79.57057190]
[8.41686344 74.40658569]
[-7.20342302 76.91999054]
[-16.48901749 65.27409363]
[-30.57209969 60.11010361]
[-44.65518188 54.94611740]
[-58.73826599 49.78213120]
[-72.82135010 44.61814117]
[-86.94110870 39.55529785]
[-101.09681702 34.59386063]
[-115.25253296 29.63242149]
[-129.40823364 24.67098236]
[-143.56394958 19.70954323]
[-163.18913269 24.33239555]
[-175.13633728 9.12438488]
[-189.42854309 4.57106400]
[-203.72074890 0.01774328]
[-218.01296997 -4.53557730]
[-232.30517578 -9.08889771]
[-241.42573547 -8.71177864]
[-246.76890564 -13.81139946]
[-260.99432373 -18.56926918]
[-270.42431641 -13.16357899]
[-281.05386353 -13.82311535]
[-289.39212036 -20.08957863]
[-292.83367920 -29.70313835]
[-306.91674805 -34.86712646]
[-320.99981689 -40.03111267]
[-335.08291626 -45.19510269]
[-349.16598511 -50.35908890]
[-363.24908447 -55.52307510]
[-369.80786133 -54.76975250]
[-374.98757935 -57.08980560]
[-377.65850830 -61.04248047]
[-391.58764648 -66.60833740]
[-405.51681519 -72.17419434]
[-419.44595337 -77.74005127]
[-428.57009888 -78.01751709]
[-433.53405762 -83.48693848]
[-447.38195801 -89.25202942]
[-458.80563354 -79.18920898]
[-473.40606689 -75.10086060]
[-488.27285767 -77.74630737]
[-500.46667480 -86.54811096]
[-507.60031128 -99.71705627]
[-508.30587769 -114.61563873]
[-522.15374756 -120.38072968]
[-535.32812500 -112.18217468]
[-550.80291748 -113.32666779]
[-562.62780762 -123.37412262]
[-566.25585938 -138.46109009]
[-560.29205322 -152.78633118]
[-547.02954102 -160.84149170]
[-531.56805420 -159.52919006]
[-519.85284424 -149.35404968]
[-516.38867188 -134.22860718]
[-502.54077148 -128.46351624]
[-491.47106934 -138.45983887]
[-477.09976196 -142.67596436]
[-462.26232910 -140.22421265]
[-449.91036987 -131.53805542]
[-442.52465820 -118.29653168]
[-441.61685181 -103.09991455]
[-427.76898193 -97.33481598]
[-413.88009644 -91.66919708]
[-399.95095825 -86.10334015]
[-386.02178955 -80.53749084]
[-372.09265137 -74.97163391]
[-358.08508301 -69.60616302]
[-344.00201416 -64.44216919]
[-329.91891479 -59.27818298]
[-315.83584595 -54.11419678]
[-301.75274658 -48.95021057]
[-287.66967773 -43.78622055]
[-268.90777588 -48.47769165]
[-256.23645020 -32.79469299]
[-242.01103210 -28.03682327]
[-227.75184631 -23.38110733]
[-213.45964050 -18.82778740]
[-199.16743469 -14.27446651]
[-184.87522888 -9.72114658]
[-170.58300781 -5.16782570]
[-161.97065735 -10.65344810]
[-151.54139709 -10.49284554]
[-142.73902893 -4.49779081]
[-138.60250854 5.55383348]
[-124.44680023 10.51527214]
[-110.29109192 15.47671127]
[-96.13538361 20.43815041]
[-81.97966766 25.39958954]
[-74.63203430 24.64602280]
[-67.65736389 30.53505898]
[-53.57427979 35.69904709]
[-39.49119568 40.86303329]
[-25.40811348 46.02702332]
[-11.32502937 51.19100952]
[3.28794074 48.30823898]
[13.58085060 60.32350159]
[27.66393471 65.48748779]
[41.74701691 70.65148163]
[55.83010101 75.81546783]
[69.91318512 80.97945404]
[83.99626923 86.14344025]
[98.81083679 78.86449432]
[114.34840393 84.43571472]
[121.16229248 99.46985626]
[135.31800842 104.43129730]
[149.47370911 109.39273071]
[158.60133362 109.27740479]
[163.79602051 114.52820587]
[177.87910461 119.69219208]
[191.96218872 124.85617828]
[206.04527283 130.02017212]
[220.12835693 135.18415833]
[232.99281311 126.70996094]
[248.20263672 127.42728424]
[259.93484497 136.85168457]
[263.82138062 151.20552063]
[277.90447998 156.36950684]
[291.98754883 161.53349304]
[306.07064819 166.69749451]
[320.15371704 171.86148071]
[334.23681641 177.02546692]
[348.31988525 182.18945312]
[362.84970093 185.91563416]
[377.67987061 188.16645813]
[392.51004028 190.41729736]
[407.34020996 192.66812134]
[422.17034912 194.91896057]
[436.97531128 189.34004211]
[448.39746094 198.89953613]
[463.22760010 201.15037537]
[478.03256226 195.57147217]
[489.45471191 205.13095093]
[504.28488159 207.38179016]
[519.11505127 209.63261414]
[533.94519043 211.88345337]
[540.22186279 209.83689880]
[545.76031494 211.07704163]
[549.16601562 214.41744995]
[563.92553711 217.09278870]
[576.82324219 208.35856628]
[591.75335693 211.28198242]
[600.00061035 223.63180542]
[614.76013184 226.30714417]
[629.51959229 228.98246765]
[644.27911377 231.65779114]
[653.20629883 219.27763367]
[666.62500000 212.00439453]
[681.87103271 211.28218079]
[695.91723633 217.25439453]
[705.97473145 228.73524475]
[710.04656982 243.44520569]
[707.32427979 258.46359253]
[698.34844971 270.80850220]
[684.90118408 278.02883911]
[669.65240479 278.69100952]
[655.62982178 272.66354370]
[645.61767578 261.14315796]
[641.60375977 246.41729736]
[626.84429932 243.74195862]
[612.08477783 241.06663513]
[597.32531738 238.39129639]
[585.26806641 247.06071472]
[570.26171875 244.55780029]
[561.25018311 231.85227966]
[546.49072266 229.17694092]
[531.69433594 226.71360779]
[516.86419678 224.46278381]
[502.03402710 222.21194458]
[487.20388794 219.96112061]
[473.45968628 225.70101929]
[460.97677612 215.98052979]
[446.14660645 213.72970581]
[432.40243530 219.46960449]
[419.91952515 209.74911499]
[405.08935547 207.49829102]
[390.25921631 205.24745178]
[375.42904663 202.99662781]
[360.59887695 200.74578857]
[372.27825928 210.15811157]
[379.53170776 223.28776550]
[381.28219604 238.18527222]
[377.26986694 252.63868713]
[368.09045410 264.50198364]
[355.10684204 272.01373291]
[340.24688721 274.05862427]
[325.71691895 270.33300781]
[313.67434692 261.39004517]
[305.90722656 248.55760193]
[303.56878662 233.74099731]
[307.00622559 219.14018250]
[315.70919800 206.92304993]
[328.38549805 198.90357971]
[343.15591431 196.27253723]
[329.07281494 191.10855103]
[314.98974609 185.94456482]
[300.90664673 180.78056335]
[286.82357788 175.61657715]
[272.74047852 170.45259094]
[258.65740967 165.28860474]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 131]
[4 130]
[5 129]
[6 128]
[7 127]
[8 125]
[9 124]
[10 123]
[14 120]
[15 119]
[16 118]
[17 117]
[18 116]
[19 115]
[21 113]
[22 112]
[23 111]
[24 110]
[25 109]
[26 107]
[27 106]
[28 105]
[29 104]
[30 103]
[32 99]
[33 98]
[34 97]
[35 96]
[36 95]
[38 94]
[39 93]
[43 91]
[44 90]
[45 89]
[46 88]
[47 87]
[48 86]
[51 85]
[52 84]
[53 83]
[54 82]
[56 81]
[57 80]
[63 74]
[64 73]
[135 218]
[136 217]
[137 216]
[138 215]
[139 214]
[140 213]
[141 212]
[142 197]
[143 196]
[144 195]
[145 194]
[146 193]
[148 191]
[149 190]
[151 188]
[152 187]
[153 186]
[154 185]
[157 184]
[158 183]
[161 180]
[162 179]
[163 178]
[164 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
