%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 10:39:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAGGAGCUGCCUUAGUGAAAGAGUGAGCUAGCUAAGGAAUUCUGAAUAGUCUAUAGUGGAAAGACUGACUGCGGAGACAGAGACUUGAACGCUGGCCUUGGUUUUCACUUUAAUCUGUGACCGCAGCUGUGUCACCAGCCAUUCUGACUCUCAGUACUCUCAGCUGAAGUGCAACAGGGCUGGACUUGAUGAUCUCU\
) } def
/len { sequence length } bind def

/coor [
[95.98365784 229.72033691]
[82.75930023 219.11125183]
[89.29291534 203.46682739]
[89.75711823 188.47399902]
[90.22131348 173.48118591]
[90.68551636 158.48837280]
[91.14971924 143.49555969]
[82.01741028 143.41604614]
[72.62699127 141.36138916]
[63.41283035 137.23876953]
[53.26709747 148.28703308]
[43.12136459 159.33529663]
[32.97563171 170.38356018]
[22.82989883 181.43182373]
[19.19462395 196.82972717]
[4.88720894 200.97062683]
[-5.25852394 212.01889038]
[-15.40425682 223.06715393]
[-25.54998970 234.11541748]
[-29.18526459 249.51332092]
[-43.49267960 253.65423584]
[-44.24943161 269.67941284]
[-57.33416367 278.96218872]
[-72.70938110 274.38156128]
[-78.58054352 259.45141602]
[-70.44378662 245.62487793]
[-54.54094315 243.50849915]
[-51.63135910 228.90084839]
[-36.59825134 223.96968079]
[-26.45251846 212.92141724]
[-16.30678749 201.87315369]
[-6.16105413 190.82490540]
[-3.25146914 176.21723938]
[11.78163624 171.28608704]
[21.92737007 160.23782349]
[32.07310104 149.18955994]
[42.21883392 138.14129639]
[52.36456680 127.09303284]
[50.58270645 119.80777740]
[36.38216782 124.63941956]
[22.18163109 129.47105408]
[7.98109388 134.30270386]
[-3.13304114 144.37622070]
[-18.07155609 143.01947021]
[-27.18899345 131.10845947]
[-24.59843254 116.33384705]
[-11.97254086 108.23527527]
[2.53642011 112.04178619]
[17.36394119 109.77361298]
[32.19146347 107.50543976]
[47.01898193 105.23726654]
[45.23712158 97.95201111]
[31.13732719 92.83382416]
[17.03753281 87.71564484]
[2.93773723 82.59746552]
[-11.16205788 77.47927856]
[-25.26185226 72.36109924]
[-37.46770477 81.79618073]
[-52.83887863 83.11172485]
[-66.47048187 75.88794708]
[-74.01271820 62.42993164]
[-73.05889893 47.03208160]
[-63.91337204 34.60779572]
[-49.49444962 29.12161636]
[-34.40315247 32.32416534]
[-23.45506096 43.19351578]
[-20.14367104 58.26130676]
[-6.04387617 63.37948608]
[8.05591869 68.49766541]
[22.15571404 73.61585236]
[36.25550842 78.73403168]
[50.35530472 83.85221100]
[68.97653961 62.98603439]
[93.85746765 56.04024124]
[94.32167053 41.04742432]
[94.78586578 26.05461121]
[95.25006866 11.06179523]
[95.71427155 -3.93102074]
[96.17847443 -18.92383575]
[85.63366699 -30.38877869]
[86.31801605 -45.58701324]
[97.31307220 -55.56921387]
[97.77726746 -70.56203461]
[98.24147034 -85.55484772]
[98.70567322 -100.54766083]
[99.16986847 -115.54047394]
[84.02066040 -124.43672180]
[75.50379944 -139.70056152]
[75.88494110 -157.08656311]
[84.96907043 -171.81097412]
[100.17895508 -179.86805725]
[100.17895508 -194.86805725]
[100.17895508 -209.86805725]
[100.17895508 -224.86805725]
[92.44165802 -238.66822815]
[100.17895508 -251.39549255]
[100.17895508 -266.39550781]
[100.17895508 -281.39550781]
[88.82781219 -292.39218140]
[88.66072083 -308.19558716]
[99.77680969 -319.42984009]
[115.58110046 -319.42984009]
[126.69718933 -308.19558716]
[126.53009033 -292.39218140]
[115.17895508 -281.39550781]
[115.17895508 -266.39550781]
[115.17895508 -251.39549255]
[122.91625214 -238.66822815]
[115.17895508 -224.86805725]
[115.17895508 -209.86805725]
[115.17895508 -194.86805725]
[115.17895508 -179.86805725]
[126.74264526 -174.76161194]
[135.54695129 -165.62580872]
[140.25727844 -153.79452515]
[140.14041138 -141.01387024]
[135.17837524 -129.18449402]
[126.07633972 -120.07901001]
[114.16268921 -115.07627869]
[113.69848633 -100.08345795]
[113.23428345 -85.09064484]
[112.77008820 -70.09783173]
[112.30588531 -55.10501480]
[122.66234589 -44.46173859]
[122.40515900 -29.25027657]
[111.17128754 -18.45963478]
[110.70708466 -3.46682000]
[110.24288177 11.52599525]
[109.77868652 26.51881027]
[109.31448364 41.51162720]
[108.85028076 56.50444031]
[122.16319275 61.54243851]
[133.19682312 70.53541565]
[140.81649780 82.55854034]
[144.23858643 96.37535095]
[143.11117554 110.56491089]
[156.86734009 116.54556274]
[170.62348938 122.52620697]
[184.37965393 128.50685120]
[198.27091980 134.16658020]
[212.28982544 139.50234985]
[226.30873108 144.83810425]
[240.32763672 150.17387390]
[254.34652710 155.50964355]
[268.36544800 160.84541321]
[280.28936768 151.26588440]
[295.30807495 148.95620728]
[309.37292480 154.43768311]
[318.74295044 166.14488220]
[320.97985840 180.87110901]
[334.99877930 186.20687866]
[349.05853271 191.43400574]
[363.15832520 196.55218506]
[377.25814819 201.67036438]
[386.39910889 201.65759277]
[391.53549194 206.97839355]
[405.55438232 212.31416321]
[419.57330322 217.64991760]
[433.59219360 222.98568726]
[447.61108398 228.32145691]
[461.17739868 220.54394531]
[476.55984497 223.35713196]
[486.49533081 235.43273926]
[486.29263306 251.06900024]
[476.04742432 262.88296509]
[460.59722900 265.29644775]
[447.23712158 257.16989136]
[442.27532959 242.34036255]
[428.25643921 237.00459290]
[414.23751831 231.66882324]
[400.21862793 226.33305359]
[386.19970703 220.99729919]
[372.13995361 215.77015686]
[358.04016113 210.65197754]
[343.94036865 205.53379822]
[336.57556152 206.20692444]
[329.66299438 200.22576904]
[315.64410400 194.89001465]
[304.18176270 204.40213013]
[289.39886475 206.91644287]
[275.24877930 201.65896606]
[265.56655884 189.94779968]
[263.02966309 174.86430359]
[249.01077271 169.52854919]
[234.99186707 164.19277954]
[220.97296143 158.85700989]
[206.95405579 153.52124023]
[192.93516541 148.18548584]
[189.58093262 149.29188538]
[185.52337646 148.82466125]
[181.50973511 146.47062683]
[178.39900208 142.26300049]
[164.64285278 136.28236389]
[150.88668823 130.30171204]
[137.13053894 124.32107544]
[128.82765198 133.75140381]
[118.21485901 140.47727966]
[106.14253235 143.95976257]
[105.67832947 158.95257568]
[105.21413422 173.94538879]
[104.74993134 188.93820190]
[104.28572845 203.93101501]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 202]
[4 201]
[5 200]
[6 199]
[7 198]
[10 38]
[11 37]
[12 36]
[13 35]
[14 34]
[16 32]
[17 31]
[18 30]
[19 29]
[21 27]
[52 72]
[53 71]
[54 70]
[55 69]
[56 68]
[57 67]
[74 131]
[75 130]
[76 129]
[77 128]
[78 127]
[79 126]
[82 123]
[83 122]
[84 121]
[85 120]
[86 119]
[91 112]
[92 111]
[93 110]
[94 109]
[96 107]
[97 106]
[98 105]
[136 195]
[137 194]
[138 193]
[139 192]
[140 188]
[141 187]
[142 186]
[143 185]
[144 184]
[145 183]
[150 178]
[151 177]
[152 175]
[153 174]
[154 173]
[156 172]
[157 171]
[158 170]
[159 169]
[160 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
