%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 14:30:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUAAGUCACUAUUGAAAUGGCAUCAACAUGAUGCUGCCCAUUCCACUGAAGUUCUGAAAUCUUUCGUCAUGUAAAUAAUUUCCAUAUUUCUCUUUUAUAAUAAACUAAUGAUAACUAAUGACAUCCAGUGUCUCCAAAAUUGUUUCCUUGUACUGAUAUAAACACUUCCAAAUAAAAAUAUGUAAAUGAGUGGUUAAUCUUUA\
) } def
/len { sequence length } bind def

/coor [
[208.45188904 316.30056763]
[208.74232483 307.76904297]
[210.45828247 299.40151978]
[213.55302429 291.43463135]
[217.94076538 284.09399414]
[223.49911499 277.58779907]
[214.68232727 265.45254517]
[205.86555481 253.31729126]
[197.04876709 241.18203735]
[183.30825806 235.43331909]
[181.45632935 219.72087097]
[172.63955688 207.58561707]
[163.82276917 195.45036316]
[145.63121033 188.90455627]
[143.82002258 168.83076477]
[134.63549805 156.97140503]
[125.45098114 145.11203003]
[116.26645660 133.25267029]
[107.08193207 121.39330292]
[92.15628815 119.90160370]
[80.80637360 129.70870972]
[69.45645905 139.51582336]
[58.10654068 149.32292175]
[46.75662231 159.13003540]
[35.40670395 168.93714905]
[24.05678558 178.74424744]
[16.02507019 193.67501831]
[-0.54559916 190.09043884]
[-1.68831885 173.17504883]
[14.24967766 167.39433289]
[25.59959602 157.58721924]
[36.94951248 147.78012085]
[48.29943085 137.97300720]
[59.64934921 128.16589355]
[70.99926758 118.35879517]
[82.34918213 108.55168152]
[81.83238220 101.06951141]
[67.17011261 104.23461914]
[52.50784302 107.39972687]
[40.86074829 116.85198212]
[25.87668037 116.16076660]
[15.14925766 105.67638397]
[14.11490917 90.71208191]
[23.29782104 78.85147095]
[38.04428864 76.10525513]
[50.88239288 83.86679840]
[65.84058380 84.98598480]
[80.79877472 86.10516357]
[80.28196716 78.62299347]
[67.69149017 70.46948242]
[55.10100555 62.31596375]
[42.51052475 54.16245270]
[29.92004395 46.00893784]
[15.49879265 51.42499924]
[0.82513970 47.35839081]
[-8.52964115 35.57059860]
[-9.14216614 20.71250725]
[-21.73264694 12.55899429]
[-34.32312775 4.40548134]
[-46.91361237 -3.74803209]
[-59.50409317 -11.90154552]
[-74.77077484 -8.80863953]
[-87.42316437 -17.25681686]
[-90.27769470 -31.83032990]
[-102.86817932 -39.98384094]
[-116.88093567 -33.53045654]
[-132.15498352 -35.70001602]
[-143.81642151 -45.80022812]
[-148.14414978 -60.60814285]
[-143.75718689 -75.39861298]
[-132.05538940 -85.45205688]
[-116.77278137 -87.56045532]
[-102.78597260 -81.05101776]
[-94.55810547 -68.00089264]
[-94.71466064 -52.57432556]
[-82.12418365 -44.42081070]
[-67.65810394 -47.77761078]
[-54.77341461 -39.68814468]
[-51.35057831 -24.49202728]
[-38.76009750 -16.33851433]
[-26.16961670 -8.18500042]
[-13.57913494 -0.03148697]
[-0.98865312 8.12202644]
[12.81997108 2.60297918]
[27.40312195 6.31723452]
[37.11644745 18.04347420]
[38.07355881 33.41845703]
[50.66403961 41.57197189]
[63.25452042 49.72548294]
[75.84500122 57.87899780]
[88.43548584 66.03250885]
[81.29529572 52.84093094]
[74.15511322 39.64935303]
[67.01493073 26.45777321]
[59.87474442 13.26619339]
[52.73456192 0.07461370]
[45.59437561 -13.11696529]
[37.71414185 -25.88027000]
[33.34151459 -40.22879410]
[32.76443100 -55.21768951]
[36.02088928 -69.85993958]
[42.89645004 -83.19135284]
[52.93836594 -94.33406067]
[65.48537445 -102.55432129]
[79.71125031 -107.31082153]
[94.67923737 -108.29035187]
[109.40367889 -105.42841339]
[122.91498566 -98.91346741]
[134.32344055 -89.17450714]
[142.87779236 -76.85285187]
[148.01472473 -62.75988388]
[149.39599609 -47.82361603]
[146.93064880 -33.02760315]
[140.78100586 -19.34615898]
[131.35574341 -7.68374395]
[127.63136292 6.84653187]
[123.90696716 21.37680817]
[120.18257904 35.90708542]
[116.45819092 50.43735886]
[112.73380280 64.96763611]
[109.00941467 79.49790955]
[119.24405670 68.53195953]
[129.47869873 57.56601334]
[139.71334839 46.60006332]
[149.94799805 35.63411331]
[156.33493042 19.92922974]
[173.19413757 21.71901703]
[176.14138794 38.41482544]
[160.91394043 45.86875916]
[150.67929077 56.83470917]
[140.44465637 67.80065918]
[130.21000671 78.76660919]
[119.97536469 89.73255920]
[134.21446228 85.01577759]
[147.36946106 77.80840302]
[162.28852844 79.36450195]
[173.67304993 89.13141632]
[177.47972107 103.64035034]
[172.35659790 117.73834229]
[160.12316895 126.41839600]
[145.12423706 126.59770966]
[132.68716431 118.21305847]
[118.94129944 112.20878601]
[128.12582397 124.06814575]
[137.31034851 135.92752075]
[146.49485779 147.78688049]
[155.67938232 159.64624023]
[166.53672791 160.39274597]
[175.01472473 166.86038208]
[178.45848083 176.71998596]
[175.95802307 186.63359070]
[184.77481079 198.76884460]
[193.59158325 210.90409851]
[207.96273804 217.52079773]
[209.18402100 232.36524963]
[218.00080872 244.50050354]
[226.81758118 256.63577271]
[235.63436890 268.77102661]
[257.29400635 263.12945557]
[279.23934937 267.31860352]
[297.23217773 280.49392700]
[307.81283569 300.07882690]
[308.96548462 322.26843262]
[300.50201416 342.76892090]
[311.38922119 353.08731079]
[322.27642822 363.40567017]
[333.16363525 373.72402954]
[344.05084229 384.04241943]
[358.74243164 379.78747559]
[373.49383545 383.43347168]
[384.36740112 393.90399170]
[388.51232910 408.31494141]
[384.91171265 422.76834106]
[395.79891968 433.08673096]
[406.68612671 443.40509033]
[422.47601318 442.73080444]
[434.06127930 453.48056030]
[434.56860352 469.27670288]
[423.69696045 480.74768066]
[407.89633179 481.08795166]
[396.54095459 470.09564209]
[396.36773682 454.29229736]
[385.48052979 443.97393799]
[374.59332275 433.65554810]
[360.35375977 438.02587891]
[345.74130249 434.65948486]
[334.70288086 424.36288452]
[330.27130127 409.82818604]
[333.73248291 394.92962646]
[322.84527588 384.61123657]
[311.95806885 374.29287720]
[301.07086182 363.97451782]
[290.18365479 353.65612793]
[283.11032104 358.31378174]
[275.35220337 361.72332764]
[267.12765503 363.78689575]
[258.66851807 364.44454956]
[250.21354675 363.67596436]
[242.00163269 361.50112915]
[234.26512146 357.97979736]
[227.22320557 353.20980835]
[221.07568359 347.32440186]
[215.99739075 340.48855591]
[212.13308716 332.89425659]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 158]
[7 157]
[8 156]
[9 155]
[11 153]
[12 152]
[13 151]
[15 147]
[16 146]
[17 145]
[18 144]
[19 143]
[20 36]
[21 35]
[22 34]
[23 33]
[24 32]
[25 31]
[26 30]
[49 91]
[50 90]
[51 89]
[52 88]
[53 87]
[57 83]
[58 82]
[59 81]
[60 80]
[61 79]
[64 76]
[65 75]
[121 133]
[122 132]
[123 131]
[124 130]
[125 129]
[164 193]
[165 192]
[166 191]
[167 190]
[168 189]
[173 184]
[174 183]
[175 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
