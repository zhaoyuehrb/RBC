%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 09:22:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUAACCCACUCCCAGCUCCCAGCCUGGCAUGAGCUUGGACAGUCUGGACCGCCACCCUCCCUGAACCAGGGAGACAGCCUCUGGGAUUGGAGGCCAGAGGCCAGGGUCAGACCCAGCCAGGACUCCUCAUUUCAUCUCACAGACACAAUAAAAAAGCAUAUUUGUCCUGCCUGGGAAGUGA\
) } def
/len { sequence length } bind def

/coor [
[212.87075806 157.70259094]
[212.01681519 151.37207031]
[198.02699280 145.96051025]
[183.36544800 148.58511353]
[173.28605652 136.39018250]
[159.29623413 130.97862244]
[145.30641174 125.56706238]
[131.31660461 120.15549469]
[118.22138214 140.99172974]
[91.51703644 151.78594971]
[59.34631729 144.25456238]
[47.82810974 153.86344910]
[36.30990219 163.47235107]
[30.66948128 178.25396729]
[15.93999672 180.46565247]
[4.42179012 190.07455444]
[-7.09641647 199.68344116]
[-18.61462402 209.29234314]
[-30.13282967 218.90124512]
[-41.39981079 228.80352783]
[-52.40808868 238.99263000]
[-63.41637039 249.18171692]
[-70.93335724 264.37814331]
[-87.61680603 261.36169434]
[-89.33669281 244.49522400]
[-73.60546875 238.17344666]
[-62.59719086 227.98434448]
[-51.58890915 217.79524231]
[-51.09540939 214.28028870]
[-48.85970306 210.83378601]
[-44.93463135 208.27893066]
[-39.74172592 207.38304138]
[-28.22352028 197.77413940]
[-16.70531464 188.16523743]
[-5.18710756 178.55633545]
[6.33109903 168.94744873]
[11.14766026 154.85311890]
[26.70100403 151.95414734]
[38.21921158 142.34524536]
[49.73741913 132.73634338]
[47.76520157 125.50030518]
[35.22021866 133.72364807]
[23.52285767 124.33366394]
[28.83875084 110.30722046]
[43.82077026 111.02821350]
[41.84855270 103.79216766]
[27.04759407 101.35667419]
[12.24663448 98.92118073]
[-2.89909959 105.20916748]
[-15.75120640 95.02312469]
[-13.08854008 78.84159088]
[2.34977651 73.31072998]
[14.68212700 84.12022400]
[29.48308563 86.55571747]
[44.28404236 88.99120331]
[47.40497971 82.17140198]
[53.64685059 68.53178406]
[56.76778412 61.71197891]
[45.24957657 52.10308075]
[33.73137283 42.49418259]
[22.21316528 32.88528824]
[10.69495869 23.27638817]
[-0.82324833 13.66749096]
[-12.34145546 4.05859327]
[-28.37725830 -1.44498086]
[-27.52791977 -18.37763977]
[-11.02187347 -22.24891853]
[-2.73255730 -7.45961332]
[8.78564930 2.14928436]
[20.30385590 11.75818157]
[31.82206345 21.36707878]
[43.34027100 30.97597694]
[54.85847473 40.58487320]
[66.37668610 50.19377136]
[73.50385284 52.51124954]
[79.97590637 55.64266205]
[85.70927429 59.49203873]
[90.63204956 63.95537567]
[89.85986328 48.97526550]
[89.08768463 33.99515152]
[88.31550598 19.01504135]
[87.54331970 4.03493023]
[86.77114105 -10.94518089]
[85.99896240 -25.92529297]
[85.22677612 -40.90540314]
[71.78552246 -48.47747803]
[64.59200287 -62.12506866]
[65.94164276 -77.49328613]
[75.40377045 -89.67818451]
[89.95906067 -94.79160309]
[104.96296692 -91.20187378]
[115.62780762 -80.05446625]
[118.55046844 -64.90647125]
[112.79833221 -50.59156799]
[100.20688629 -41.67758560]
[100.97907257 -26.69747353]
[101.75125122 -11.71736240]
[102.52342987 3.26274896]
[103.29561615 18.24286079]
[104.06779480 33.22297287]
[104.83997345 48.20308304]
[105.61215973 63.18319321]
[123.41427612 71.03890228]
[134.82456970 86.80065918]
[136.72816467 106.16567993]
[150.71798706 111.57723999]
[164.70779419 116.98880005]
[178.69761658 122.40036774]
[194.35980225 120.16283417]
[203.43855286 131.97068787]
[217.42837524 137.38224792]
[241.02534485 131.09574890]
[255.73731995 149.69784546]
[270.27499390 153.39326477]
[284.81265259 157.08868408]
[299.35034180 160.78410339]
[313.88800049 164.47952271]
[329.16900635 160.38053894]
[339.59783936 171.01486206]
[354.13549805 174.71028137]
[368.67315674 178.40570068]
[383.21084595 182.10112000]
[397.74850464 185.79653931]
[412.28619385 189.49195862]
[418.11624146 175.64031982]
[425.94577026 162.81237793]
[435.59985352 151.29470825]
[446.86276245 141.34461975]
[459.48291016 133.18440247]
[473.17837524 126.99635315]
[487.64318848 122.91872406]
[502.55419922 121.04260254]
[517.57824707 121.40991211]
[532.37976074 124.01244354]
[546.62805176 128.79205322]
[560.00476074 135.64195251]
[572.21105957 144.40913391]
[582.97430420 154.89772034]
[592.05401611 166.87339783]
[599.24731445 180.06861877]
[604.39355469 194.18859863]
[607.37768555 208.91790771]
[608.13317871 223.92747498]
[606.64300537 238.88197327]
[602.94055176 253.44732666]
[597.10852051 267.29812622]
[589.27716064 280.12496948]
[579.62145996 291.64126587]
[568.35711670 301.58975220]
[555.73577881 309.74816895]
[542.03942871 315.93426514]
[527.57403564 320.00982666]
[512.66278076 321.88381958]
[497.63876343 321.51437378]
[482.83764648 318.90972900]
[468.59005737 314.12811279]
[455.21432495 307.27627563]
[443.00924683 298.50738525]
[432.24749756 288.01724243]
[423.16952515 276.04028320]
[415.97808838 262.84402466]
[410.83386230 248.72331238]
[407.85180664 233.99359131]
[407.09848022 218.98391724]
[408.59075928 204.02963257]
[394.05310059 200.33421326]
[379.51541138 196.63879395]
[364.97775269 192.94337463]
[350.44006348 189.24795532]
[335.90240479 185.55253601]
[321.66125488 189.91584778]
[310.19259644 179.01719666]
[295.65490723 175.32177734]
[281.11724854 171.62635803]
[266.57958984 167.93093872]
[252.04190063 164.23551941]
[248.00651550 168.76239014]
[242.82704163 171.99378967]
[236.90913391 173.64985657]
[230.72389221 173.57519531]
[224.77035522 171.75308228]
[219.53526306 168.30873108]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 111]
[3 110]
[5 108]
[6 107]
[7 106]
[8 105]
[11 40]
[12 39]
[13 38]
[15 36]
[16 35]
[17 34]
[18 33]
[19 32]
[20 28]
[21 27]
[22 26]
[46 55]
[47 54]
[48 53]
[58 74]
[59 73]
[60 72]
[61 71]
[62 70]
[63 69]
[64 68]
[78 102]
[79 101]
[80 100]
[81 99]
[82 98]
[83 97]
[84 96]
[85 95]
[113 176]
[114 175]
[115 174]
[116 173]
[117 172]
[119 170]
[120 169]
[121 168]
[122 167]
[123 166]
[124 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
