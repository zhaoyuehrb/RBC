%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 03:33:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUCUUCUGGGACCUGCCGGCCUCCCGGGCCAGCUGCCCCACCCCUGCCCAUGCCUGUCCUGCACGGCUCUGCUGCUCGGGCCCACAGCGCCGUCCCAUCACAAGCCCGGGGAGGGAUCCCGCCUUUGAAAAUAAAGCUGUUAUGGGUGUCAUUCAGGAAAUA\
) } def
/len { sequence length } bind def

/coor [
[145.18997192 160.82826233]
[135.09687805 149.73188782]
[125.00379944 138.63549805]
[114.91070557 127.53913116]
[108.85512543 130.03863525]
[102.41203308 131.22363281]
[95.86339569 131.04225159]
[89.49577332 129.50244141]
[83.58782196 126.67158508]
[78.39808655 122.67355347]
[65.75144958 130.73970032]
[53.10482025 138.80584717]
[40.45818710 146.87199402]
[32.98381805 160.81631470]
[18.09266281 161.13693237]
[14.53706360 173.56530762]
[3.80097818 180.01716614]
[-8.05683327 177.48974609]
[-20.85384560 185.31512451]
[-28.59076118 199.11550903]
[-43.48531723 199.15426636]
[-56.28232956 206.97962952]
[-69.07934570 214.80500793]
[-81.87635803 222.63038635]
[-94.67337036 230.45574951]
[-105.03195190 243.87722778]
[-120.79645538 237.63890076]
[-119.16596985 220.76353455]
[-102.49874115 217.65873718]
[-89.70172882 209.83335876]
[-76.90471649 202.00799561]
[-64.10770416 194.18261719]
[-51.31068802 186.35725403]
[-44.48910141 173.11657715]
[-28.67921829 172.51811218]
[-15.88220596 164.69273376]
[-8.36359596 148.85675049]
[10.02651978 148.49029541]
[16.59631729 135.12290955]
[32.39204407 134.22535706]
[45.03867722 126.15921021]
[57.68531036 118.09306335]
[70.33193970 110.02692413]
[72.12361145 85.72975159]
[90.78672791 70.06927490]
[89.93554688 55.09344101]
[89.08436584 40.11761093]
[88.23319244 25.14178085]
[79.72526550 11.80290127]
[86.72788239 -1.34291852]
[85.87670135 -16.31874847]
[85.02552795 -31.29457855]
[73.51677704 -41.79154968]
[72.86688995 -56.99129868]
[82.94507599 -67.89844513]
[82.09389496 -82.87427521]
[73.58596802 -96.21315765]
[80.58859253 -109.35897064]
[79.73741150 -124.33480072]
[78.88623047 -139.31063843]
[67.37747955 -149.80760193]
[66.72760010 -165.00735474]
[76.80578613 -175.91450500]
[75.95460510 -190.89033508]
[65.49883270 -206.02331543]
[73.94927979 -221.38229370]
[72.81484985 -236.33932495]
[71.68041992 -251.29637146]
[70.54598999 -266.25341797]
[69.41156006 -281.21044922]
[60.65272522 -294.38592529]
[67.40531921 -307.66192627]
[66.27088928 -322.61895752]
[65.13645935 -337.57598877]
[51.66852951 -348.70687866]
[50.42012405 -365.79647827]
[61.67581558 -378.26559448]
[60.25853729 -393.19851685]
[50.31800079 -406.24142456]
[56.89201736 -421.26522827]
[73.21779633 -422.81469727]
[82.50078583 -409.29586792]
[75.19142914 -394.61578369]
[76.60871124 -379.68289185]
[87.60962677 -372.92498779]
[92.77404785 -360.87976074]
[90.00366974 -347.87094116]
[80.09349823 -338.71044922]
[81.22792816 -323.75338745]
[82.36235809 -308.79635620]
[91.04004669 -296.69070435]
[84.36859894 -282.34487915]
[85.50302887 -267.38784790]
[86.63745880 -252.43080139]
[87.77188873 -237.47375488]
[88.90631866 -222.51672363]
[97.89013672 -214.37506104]
[98.93376160 -201.89305115]
[90.93043518 -191.74150085]
[91.78161621 -176.76567078]
[103.03075409 -167.07070923]
[104.10730743 -151.89521790]
[93.86206055 -140.16181946]
[94.71324158 -125.18598175]
[95.56442261 -110.21015167]
[104.01146698 -97.94244385]
[97.06972504 -83.72545624]
[97.92090607 -68.74962616]
[109.17005157 -59.05465317]
[110.24660492 -43.87915802]
[100.00135803 -32.14575958]
[100.85253143 -17.16992760]
[101.70371246 -2.19409776]
[110.15075684 10.07361126]
[103.20902252 24.29060173]
[104.06019592 39.26643372]
[104.91137695 54.24226379]
[105.76255798 69.21809387]
[117.17235565 73.81139374]
[125.93324280 82.44438934]
[130.69383240 93.78540039]
[130.71978760 106.08504486]
[126.00708771 117.44603729]
[136.10017395 128.54241943]
[146.19326782 139.63879395]
[156.28634644 150.73516846]
[166.99284363 161.24093628]
[178.27822876 171.12222290]
[189.56362915 181.00350952]
[200.84901428 190.88481140]
[212.13441467 200.76609802]
[223.41979980 210.64738464]
[235.24134827 205.32861328]
[248.15014648 204.89302063]
[260.21554565 209.37022400]
[269.64651489 218.05772400]
[275.05755615 229.63088989]
[275.67199707 242.34487915]
[271.43353271 254.29765320]
[282.33691406 264.59890747]
[293.24032593 274.90017700]
[309.02914429 274.20111084]
[320.63125610 284.93267822]
[321.16336060 300.72799683]
[310.30975342 312.21603394]
[294.50967407 312.58108521]
[283.13705444 301.60662842]
[282.93905640 285.80358887]
[272.03564453 275.50231934]
[261.13226318 265.20104980]
[244.86418152 270.72720337]
[227.94578552 267.26101685]
[215.02943420 255.66413879]
[209.71313477 239.04650879]
[213.53851318 221.93278503]
[202.25311279 212.05148315]
[190.96772766 202.17019653]
[179.68232727 192.28890991]
[168.39694214 182.40762329]
[157.11155701 172.52632141]
[156.72821045 187.52142334]
[145.97538757 197.97975159]
[130.97541809 197.94664001]
[120.26889038 187.44091797]
[119.95178223 172.44427490]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 126]
[2 125]
[3 124]
[4 123]
[10 43]
[11 42]
[12 41]
[13 40]
[15 38]
[18 36]
[19 35]
[21 33]
[22 32]
[23 31]
[24 30]
[25 29]
[45 118]
[46 117]
[47 116]
[48 115]
[50 113]
[51 112]
[52 111]
[55 108]
[56 107]
[58 105]
[59 104]
[60 103]
[63 100]
[64 99]
[66 96]
[67 95]
[68 94]
[69 93]
[70 92]
[72 90]
[73 89]
[74 88]
[77 84]
[78 83]
[127 160]
[128 159]
[129 158]
[130 157]
[131 156]
[132 155]
[139 150]
[140 149]
[141 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
