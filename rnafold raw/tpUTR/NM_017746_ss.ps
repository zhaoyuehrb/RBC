%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 23:38:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGGCCAUAGUACCUCCUGUUUGAAGUUGUUUAUUCACAUCUAUCUUAUUUGAAGAAAAAGACUGAUGUAAUAGAUCUUUGUCAUUAAAGCUGAACUUUUAAAGAAGUUUACGAA\
) } def
/len { sequence length } bind def

/coor [
[84.06628418 163.86772156]
[74.60992432 160.73147583]
[67.28499603 173.82138062]
[59.96007156 186.91128540]
[52.63514709 200.00117493]
[59.25828171 214.03376770]
[56.33528900 229.27305603]
[44.99011612 239.85920715]
[29.58521461 241.72164917]
[16.04408455 234.14422607]
[9.57356548 220.04060364]
[12.66170406 204.83392334]
[24.12104797 194.37145996]
[39.54524612 192.67625427]
[46.87017059 179.58634949]
[54.19509888 166.49645996]
[61.52002335 153.40655518]
[47.56472015 139.79335022]
[38.20882416 122.68962860]
[34.27299118 103.59567261]
[36.10245514 84.18631744]
[43.53674698 66.16407776]
[55.92375946 51.10977554]
[72.17695618 40.34392548]
[67.42694092 26.11588097]
[62.67691803 11.88783360]
[57.92689896 -2.34021282]
[53.08824158 -7.15234566]
[51.71615601 -12.83792591]
[53.32613373 -17.46121979]
[49.34667206 -31.92372131]
[45.36721420 -46.38621902]
[41.38775635 -60.84872055]
[37.40829849 -75.31121826]
[33.42884064 -89.77371979]
[29.44938087 -104.23622131]
[24.08908463 -111.79740906]
[25.56281662 -119.14056396]
[21.97308159 -133.70469666]
[18.38334656 -148.26881409]
[14.79361057 -162.83294678]
[11.20387554 -177.39707947]
[-2.03843260 -185.59945679]
[-5.47146273 -200.42068481]
[2.42986012 -212.99465942]
[-1.15987492 -227.55877686]
[-4.74960995 -242.12290955]
[-8.33934498 -256.68704224]
[-13.49470615 -264.38940430]
[-11.82435703 -271.69036865]
[-15.02178001 -286.34561157]
[-18.21920395 -301.00085449]
[-29.65180779 -312.75790405]
[-24.92648315 -328.46148682]
[-8.90423679 -331.95715332]
[1.93261552 -319.64886475]
[-3.56394935 -304.19830322]
[-0.36652595 -289.54302979]
[2.83089733 -274.88778687]
[6.22478247 -260.27676392]
[9.81451702 -245.71264648]
[13.40425205 -231.14851379]
[16.99398804 -216.58439636]
[29.83367538 -209.12261963]
[33.68164825 -194.40367126]
[25.76800346 -180.98681641]
[29.35773849 -166.42268372]
[32.94747162 -151.85855103]
[36.53720856 -137.29443359]
[40.12694168 -122.73030090]
[43.91188049 -108.21568298]
[47.89133835 -93.75318146]
[51.87079620 -79.29067993]
[55.85025787 -64.82817841]
[59.82971573 -50.36568069]
[63.80917358 -35.90317917]
[67.78863525 -21.44067955]
[72.15494537 -7.09023285]
[76.90496826 7.13781404]
[81.65498352 21.36585999]
[86.40500641 35.59390640]
[99.78280640 34.17506790]
[113.16968536 35.50559616]
[126.00649261 39.52991486]
[137.75706482 46.07994080]
[147.93060303 54.88208771]
[156.10218811 65.56871033]
[161.93049622 77.69345856]
[165.17211914 90.74990082]
[165.69163513 104.19270325]
[163.46734619 117.46038055]
[158.59216309 129.99877930]
[151.26972961 141.28419495]
[161.80488586 151.96174622]
[172.34004211 162.63931274]
[182.87521362 173.31687927]
[193.41036987 183.99443054]
[203.94554138 194.67199707]
[214.48069763 205.34956360]
[225.01586914 216.02713013]
[240.96231079 219.85371399]
[245.36155701 235.65176392]
[233.68803406 247.16961670]
[217.95045471 242.55867004]
[214.33830261 226.56228638]
[203.80314636 215.88471985]
[193.26797485 205.20716858]
[182.73281860 194.52960205]
[172.19764709 183.85203552]
[161.66249084 173.17446899]
[151.12731934 162.49691772]
[140.59216309 151.81935120]
[132.30668640 157.35195923]
[123.28113556 161.57075500]
[113.72226715 164.37910461]
[103.84904480 165.71266174]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 17]
[3 16]
[4 15]
[5 14]
[24 81]
[25 80]
[26 79]
[27 78]
[30 77]
[31 76]
[32 75]
[33 74]
[34 73]
[35 72]
[36 71]
[38 70]
[39 69]
[40 68]
[41 67]
[42 66]
[45 63]
[46 62]
[47 61]
[48 60]
[50 59]
[51 58]
[52 57]
[93 112]
[94 111]
[95 110]
[96 109]
[97 108]
[98 107]
[99 106]
[100 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
