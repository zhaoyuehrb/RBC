%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 11:37:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCCCCUGGGAAGAGGGGAUGAGAGGAGAAGUCUUGGCUUCGCUUUUGGUGAGAAAGACAUGAAAAACACUGAAGAAAGUUUGAAUUUGUGGCCAGACCUGCCCCUCUCAGGCCUUCUAGGCAUGUGUCUGAGGGAAGUCUCCUGAGUGUUAGAAGUGUUAUUGGCAAAGCAAUCCAAUAAAAUAAGCUACCUAUGAUGCAA\
) } def
/len { sequence length } bind def

/coor [
[100.59428406 129.41035461]
[91.22037506 129.18711853]
[82.07084656 125.95034027]
[76.86825562 140.01921082]
[71.66567230 154.08807373]
[66.46308136 168.15695190]
[61.26048660 182.22581482]
[56.05789566 196.29467773]
[62.89032364 210.54577637]
[57.56579971 225.42613220]
[43.24327469 232.10749817]
[28.42004395 226.62594604]
[21.89046860 212.23358154]
[27.52843285 197.46913147]
[41.98902893 191.09208679]
[47.19161987 177.02322388]
[52.39421082 162.95436096]
[57.59680176 148.88548279]
[62.79939270 134.81661987]
[68.00198364 120.74774933]
[62.47581863 106.80280304]
[49.04836655 100.11672974]
[35.62091827 93.43065643]
[22.19347000 86.74458313]
[8.76601982 80.05850220]
[-4.66142941 73.37242889]
[-18.08887863 66.68635559]
[-33.89109802 67.46123505]
[-41.83527374 54.86205673]
[-55.31380463 48.27956772]
[-71.10221863 49.29770279]
[-79.23947144 36.82234955]
[-92.76828766 30.34384155]
[-106.29711151 23.86533356]
[-119.82592773 17.38682556]
[-128.92311096 16.50175095]
[-133.51202393 10.70296860]
[-146.93948364 4.01689339]
[-160.36692810 -2.66918206]
[-175.15222168 -5.19804096]
[-190.03852844 -3.35471630]
[-204.92483521 -1.51139200]
[-219.81114197 0.33193234]
[-234.69744873 2.17525673]
[-249.58375549 4.01858091]
[-264.55981445 11.96553612]
[-276.34197998 -0.22531290]
[-267.88919067 -14.92179394]
[-251.42707825 -10.86772633]
[-236.54077148 -12.71105099]
[-221.65446472 -14.55437565]
[-206.76815796 -16.39769936]
[-191.88185120 -18.24102402]
[-176.99554443 -20.08434868]
[-174.61210632 -27.19555283]
[-189.61146545 -27.33433723]
[-194.11434937 -41.64251709]
[-181.89782715 -50.34633636]
[-169.84523010 -41.41796112]
[-167.46180725 -48.52916718]
[-178.23048401 -58.97117615]
[-188.99916077 -69.41318512]
[-199.76783752 -79.85519409]
[-210.53651428 -90.29720306]
[-221.30519104 -100.73921204]
[-237.15829468 -96.05052948]
[-253.12165833 -99.97232056]
[-264.86248779 -111.34266663]
[-269.24331665 -126.99131775]
[-265.16003418 -142.62321472]
[-276.08822632 -152.89816284]
[-287.01644897 -163.17309570]
[-302.80352783 -162.43595886]
[-314.43151855 -173.13949585]
[-315.00170898 -188.93348694]
[-304.17581177 -200.44764709]
[-288.37667847 -200.85083008]
[-276.97763062 -189.90382385]
[-276.74148560 -174.10130310]
[-265.81329346 -163.82637024]
[-254.88508606 -153.55142212]
[-242.09356689 -158.34469604]
[-228.41918945 -157.15208435]
[-216.53654480 -150.14961243]
[-208.79440308 -138.65522766]
[-206.75154114 -124.88108063]
[-210.86318970 -111.50789642]
[-200.09451294 -101.06587982]
[-189.32582092 -90.62387085]
[-178.55714417 -80.18186188]
[-167.78846741 -69.73985291]
[-157.01979065 -59.29784775]
[-153.68084717 -16.09663200]
[-140.25340271 -9.41055584]
[-126.82595062 -2.72448087]
[-113.34741974 3.85800624]
[-99.81860352 10.33651447]
[-86.28977966 16.81502342]
[-72.76096344 23.29353142]
[-57.94022369 21.81201172]
[-48.83529663 34.75075150]
[-41.44063187 34.80436707]
[-35.14919662 41.43460464]
[-20.30739975 40.18149185]
[-11.40280342 53.25890350]
[2.02464604 59.94498062]
[15.45209503 66.63105774]
[28.87954521 73.31713104]
[42.30699539 80.00320435]
[55.73444366 86.68928528]
[69.16189575 93.37535858]
[84.21394348 75.81020355]
[105.28280640 74.30906677]
[112.37920380 61.09388351]
[119.47560883 47.87870026]
[126.57201385 34.66351700]
[128.73851013 17.84856606]
[145.49606323 15.27554893]
[152.60748291 30.66593742]
[139.78720093 41.75992203]
[132.69079590 54.97510529]
[125.59439087 68.19028473]
[118.49798584 81.40547180]
[124.38362885 90.33715057]
[126.21382904 100.87593842]
[140.43623352 105.64280701]
[154.65864563 110.40968323]
[168.88105774 115.17655182]
[183.10346985 119.94342041]
[197.32588196 124.71029663]
[211.34405518 117.91851807]
[225.69970703 122.95540619]
[232.08822632 136.36146545]
[246.31063843 141.12832642]
[260.53305054 145.89520264]
[272.40939331 140.85440063]
[284.15945435 145.12162781]
[289.66748047 155.89533997]
[303.81478882 160.88066101]
[317.96209717 165.86598206]
[332.87503052 167.47984314]
[347.76135254 165.63652039]
[360.50610352 156.26199341]
[374.08770752 162.37661743]
[388.97402954 160.53329468]
[403.86035156 158.68997192]
[418.74664307 156.84663391]
[433.72268677 148.89968872]
[445.50488281 161.09053040]
[437.05206299 175.78701782]
[420.58996582 171.73294067]
[405.70367432 173.57627869]
[390.81735229 175.41960144]
[375.93106079 177.26292419]
[364.25106812 186.50561523]
[349.60467529 180.52282715]
[334.71835327 182.36616516]
[333.11386108 189.69252014]
[329.90487671 204.34524536]
[328.30035400 211.67160034]
[341.05361938 219.56808472]
[353.80688477 227.46456909]
[366.56015015 235.36105347]
[379.31338501 243.25753784]
[392.06665039 251.15402222]
[404.81991577 259.05050659]
[418.69891357 252.31423950]
[434.01379395 254.17358398]
[445.87771606 264.03518677]
[450.50485229 278.75228882]
[446.41876221 293.62869263]
[434.92327881 303.91738892]
[419.68658447 306.33532715]
[405.57061768 300.11090088]
[397.07977295 287.23031616]
[396.92343140 271.80377197]
[384.17016602 263.90728760]
[371.41690063 256.01080322]
[358.66366577 248.11431885]
[345.91040039 240.21783447]
[333.15713501 232.32135010]
[320.40386963 224.42486572]
[313.13763428 216.81903076]
[308.47427368 208.39094543]
[306.40054321 199.86758423]
[306.72030640 191.92715454]
[309.07546997 185.15615845]
[312.97677612 180.01330566]
[298.82946777 175.02798462]
[284.68215942 170.04266357]
[267.63372803 174.19412231]
[255.76617432 160.11761475]
[241.54377747 155.35073853]
[227.32136536 150.58387756]
[214.14425659 157.43218994]
[199.65280151 152.80050659]
[192.55900574 138.93270874]
[178.33659363 134.16583252]
[164.11418152 129.39895630]
[149.89176941 124.63208771]
[135.66937256 119.86521912]
[121.44695282 115.09835052]
[116.40739441 121.80828094]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 20]
[4 19]
[5 18]
[6 17]
[7 16]
[8 15]
[21 111]
[22 110]
[23 109]
[24 108]
[25 107]
[26 106]
[27 105]
[29 103]
[30 101]
[32 99]
[33 98]
[34 97]
[35 96]
[37 95]
[38 94]
[39 93]
[40 54]
[41 53]
[42 52]
[43 51]
[44 50]
[45 49]
[60 92]
[61 91]
[62 90]
[63 89]
[64 88]
[65 87]
[70 81]
[71 80]
[72 79]
[113 123]
[114 122]
[115 121]
[116 120]
[125 202]
[126 201]
[127 200]
[128 199]
[129 198]
[130 197]
[133 194]
[134 193]
[135 192]
[138 190]
[139 189]
[140 188]
[141 157]
[142 156]
[144 154]
[145 153]
[146 152]
[147 151]
[160 182]
[161 181]
[162 180]
[163 179]
[164 178]
[165 177]
[166 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
