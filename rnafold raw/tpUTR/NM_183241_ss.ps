%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 00:17:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUGCAGCACAAGCGUGGCCCCGCGGGGAGUCCGCCUAUGAGGGGAGAGGCAGUCUUUGAGGCCCCCAUCAGAGACCCCCCGCCACCACCUCCACCUGCCUGUCCUGGGCCAGGACUAACACGGCUCCUCAAAUUCCUUCCCUGUCAAAUAAACAGCUCCCUUGGUUGGAGGCUCUGGUGGG\
) } def
/len { sequence length } bind def

/coor [
[107.08541107 128.68196106]
[102.09708405 114.53562927]
[96.35683441 128.39382935]
[90.61658478 142.25201416]
[98.55316162 155.45492554]
[97.20933533 170.62225342]
[87.30922699 181.95590210]
[72.80734253 185.24732971]
[67.06709290 199.10551453]
[69.74289703 215.28489685]
[56.89907074 225.48136902]
[41.74823380 219.20568848]
[39.87627411 202.91372681]
[53.20890045 193.36526489]
[58.94915009 179.50708008]
[51.02215958 166.92530823]
[52.03582764 151.91076660]
[61.81051254 140.23562622]
[76.75839233 136.51176453]
[82.49864197 122.65357208]
[88.23889160 108.79537964]
[84.96006775 102.05006409]
[78.40240479 88.55943298]
[75.12358093 81.81411743]
[60.67981720 77.76716614]
[46.23605728 73.72021484]
[31.79229927 69.67326355]
[17.34854126 65.62631226]
[2.90478110 61.57935715]
[-11.36372375 76.24748993]
[-37.34723663 72.69515991]
[-52.17049026 74.99107361]
[-66.99373627 77.28698730]
[-81.79685211 79.70935822]
[-94.08171844 89.67894745]
[-107.93857574 84.21664429]
[-122.72046661 86.76529694]
[-137.50236511 89.31395721]
[-147.89154053 101.53871155]
[-163.92163086 100.89413452]
[-173.29573059 87.87469482]
[-168.82283020 72.46778870]
[-153.93415833 66.49227905]
[-140.05101013 74.53206635]
[-125.26911926 71.98340607]
[-110.48722839 69.43475342]
[-99.25966644 59.64746094]
[-84.34550476 64.92746735]
[-78.27362061 60.68241882]
[-69.28964996 62.46373367]
[-54.46640015 60.16781998]
[-39.64315033 57.87190628]
[-35.84322357 43.36051178]
[-32.04362488 28.85041237]
[-43.83921432 19.58412933]
[-55.63480759 10.31784630]
[-67.43039703 1.05156279]
[-79.22599030 -8.21472073]
[-91.02158356 -17.48100281]
[-102.81717682 -26.74728584]
[-114.61277008 -36.01356888]
[-126.48703766 -45.17881775]
[-138.43911743 -54.24236298]
[-154.71322632 -58.99518967]
[-154.65127563 -75.94902039]
[-138.34284973 -80.58277893]
[-129.37556458 -66.19444275]
[-117.42349243 -57.13089371]
[-110.17668152 -55.59081268]
[-105.34648895 -47.80916214]
[-93.55089569 -38.54287720]
[-81.75530243 -29.27659607]
[-69.95970917 -20.01031303]
[-58.16411591 -10.74402905]
[-46.36852646 -1.47774637]
[-34.57293320 7.78853655]
[-22.77733994 17.05481911]
[1.99925113 26.93789291]
[6.95173264 47.13560104]
[21.39549255 51.18255234]
[35.83925247 55.22950363]
[50.28301239 59.27645493]
[64.72676849 63.32340622]
[79.17053223 67.37035370]
[117.12252045 85.70377350]
[131.90440369 83.15512085]
[146.68630981 80.60646057]
[161.46820068 78.05780792]
[176.25009155 75.50914764]
[190.96186829 72.58279419]
[205.59388733 69.28066254]
[220.22590637 65.97852325]
[234.85791016 62.67639160]
[249.48992920 59.37425613]
[264.12194824 56.07212448]
[278.72525024 52.64519882]
[293.29873657 49.09373093]
[305.53738403 20.98212242]
[341.08923340 17.58374786]
[350.75283813 6.11139393]
[360.41641235 -5.36096096]
[362.49014282 -28.45809937]
[383.79266357 -35.54552078]
[392.44287109 -47.80006790]
[401.09307861 -60.05461884]
[409.74328613 -72.30916595]
[418.39346313 -84.56371307]
[427.04367065 -96.81826019]
[431.23812866 -113.24516296]
[448.18417358 -113.76206207]
[453.37200928 -97.62134552]
[439.29821777 -88.16806030]
[430.64804077 -75.91351318]
[421.99783325 -63.65896225]
[413.34762573 -51.40441132]
[404.69741821 -39.14986420]
[396.04721069 -26.89531708]
[398.99130249 -20.36346626]
[399.47988892 -13.14706993]
[397.40432739 -6.14716625]
[392.97912598 -0.25435477]
[386.72082520 3.76448059]
[379.38781738 5.36582661]
[371.88876343 4.30263472]
[362.22518921 15.77498913]
[352.56158447 27.24734306]
[354.27505493 34.54899216]
[368.25579834 29.11402702]
[382.23654175 23.67906380]
[396.21728516 18.24410057]
[410.19802856 12.80913639]
[421.80789185 3.31118608]
[436.80706787 3.15599322]
[448.61099243 12.41168690]
[452.03768921 27.01502991]
[445.58288574 40.55517578]
[432.08023071 47.08802032]
[417.45791626 43.74600220]
[402.51892090 45.09757233]
[387.57995605 46.44914246]
[372.64096069 47.80071259]
[357.70196533 49.15228271]
[359.41543579 56.45392990]
[373.17361450 62.42994690]
[386.93176270 68.40596008]
[400.68994141 74.38198090]
[414.60018921 67.23779297]
[429.83666992 70.75673676]
[439.20523071 83.27728271]
[438.28231812 98.88761139]
[427.50366211 110.21699524]
[411.95867920 111.91605377]
[398.98718262 103.18253326]
[394.71392822 88.14015198]
[380.95574951 82.16413116]
[367.19760132 76.18811798]
[353.43942261 70.21209717]
[346.32043457 76.87625122]
[338.00030518 81.30269623]
[329.13247681 83.33349609]
[320.36846924 82.99114227]
[312.31042480 80.46651459]
[305.46984863 76.09495544]
[300.23513794 70.32279205]
[296.85021973 63.66723633]
[282.27670288 67.21870422]
[276.50866699 71.86820984]
[267.42407227 70.70413971]
[252.79206848 74.00627136]
[238.16004944 77.30841064]
[223.52803040 80.61054230]
[208.89601135 83.91267395]
[194.26400757 87.21481323]
[192.07600403 90.00842285]
[188.41552734 91.87037659]
[183.74029541 92.11543274]
[178.79873657 90.29104614]
[164.01684570 92.83969879]
[149.23495483 95.38835144]
[134.45306396 97.93701172]
[119.67117310 100.48566437]
[132.37228394 108.46575165]
[133.22273254 123.44161987]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 21]
[3 20]
[4 19]
[8 15]
[9 14]
[24 84]
[25 83]
[26 82]
[27 81]
[28 80]
[29 79]
[31 52]
[32 51]
[33 50]
[34 48]
[36 46]
[37 45]
[38 44]
[54 77]
[55 76]
[56 75]
[57 74]
[58 73]
[59 72]
[60 71]
[61 70]
[62 68]
[63 67]
[85 181]
[86 180]
[87 179]
[88 178]
[89 177]
[90 173]
[91 172]
[92 171]
[93 170]
[94 169]
[95 168]
[96 166]
[97 165]
[99 126]
[100 125]
[101 124]
[103 117]
[104 116]
[105 115]
[106 114]
[107 113]
[108 112]
[143 157]
[144 156]
[145 155]
[146 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
