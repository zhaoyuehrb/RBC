%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 16:21:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUCUCCUAGCCUGUGCCUCUGGGACUGGACAAUUGCUUCAAGCAUUCUUCAACCAGCAGAUGCUGUUUAAGUGACUGAUGGCUAAUGUACUGCAUAUGAAAGGACACUAGAAGAUUUUGAAAUUUUUAUUAAAUUAUGAGUUAUUUUUAUUUAUUUAAAUUUUAUUUUGGAAAAUAAAUUAUUUUUGGUGCAAAAGUCA\
) } def
/len { sequence length } bind def

/coor [
[248.95797729 197.51155090]
[245.38563538 182.94314575]
[247.24186707 168.05844116]
[254.28271484 154.81358337]
[265.58288574 144.94920349]
[279.65502930 139.76206970]
[264.87402344 137.20841980]
[250.09297180 134.65475464]
[235.31195068 132.10110474]
[223.32653809 140.86953735]
[208.30009460 138.49034119]
[199.18421936 125.85948181]
[185.32551575 131.31709290]
[173.04402161 121.34335327]
[158.26298523 118.78970337]
[143.48196411 116.23604584]
[128.70092773 113.68239594]
[113.91989899 111.12873840]
[84.99784088 141.30427551]
[70.79077148 146.11665344]
[56.62154770 151.03936768]
[42.49103165 156.07212830]
[28.36051941 161.10487366]
[14.23000431 166.13761902]
[10.13674068 176.22486877]
[1.34624517 182.26640320]
[-9.09865761 182.46420288]
[-17.74020004 176.99449158]
[-32.02039719 181.58534241]
[-46.30059433 186.17620850]
[-60.58079147 190.76705933]
[-63.89631271 204.15031433]
[-73.31838989 214.06768799]
[-86.30713654 218.00114441]
[-99.43709564 215.02513123]
[-109.30056000 206.02172852]
[-123.65042877 210.38995361]
[-138.00028992 214.75816345]
[-152.35015869 219.12638855]
[-165.74200439 229.52325439]
[-179.43978882 219.53291321]
[-173.63179016 203.60482788]
[-156.71838379 204.77651978]
[-142.36851501 200.40830994]
[-128.01864624 196.04008484]
[-113.66877747 191.67185974]
[-108.80772400 175.99580383]
[-95.42830658 166.20593262]
[-78.68392181 166.31840515]
[-65.17164612 176.48686218]
[-50.89145279 171.89601135]
[-36.61125565 167.30514526]
[-22.33106041 162.71429443]
[-10.43962955 147.47227478]
[9.19725418 152.00711060]
[23.32776833 146.97436523]
[37.45828247 141.94160461]
[51.58879471 136.90885925]
[56.83895111 131.69940186]
[65.97837830 131.90957642]
[80.18545532 127.09719849]
[81.69150543 119.74996185]
[84.70361328 105.05550385]
[86.20967102 97.70827484]
[75.04170227 87.69445038]
[63.87374496 77.68062592]
[52.70578384 67.66680908]
[41.53782272 57.65298462]
[30.36985970 47.63916016]
[15.52342701 51.83284378]
[0.77321589 47.31235504]
[-9.17403507 35.52016449]
[-11.14419365 20.21911812]
[-4.50858974 6.29172468]
[8.61537933 -1.81783652]
[24.03990364 -1.52183318]
[36.84307098 7.08528090]
[42.93944168 21.25700760]
[40.38368225 36.47119904]
[51.55164337 46.48501968]
[62.71960449 56.49884415]
[73.88756561 66.51266479]
[85.05552673 76.52648926]
[96.22348785 86.54031372]
[89.95040131 72.91502380]
[91.65245819 58.01190567]
[100.83616638 46.15190887]
[114.83883667 40.77368927]
[129.60057068 43.43658447]
[140.84141541 53.36853027]
[145.30223083 67.68988037]
[141.68965149 82.24835968]
[131.05110168 92.82292938]
[116.47354889 96.34770966]
[131.25457764 98.90135956]
[146.03561401 101.45501709]
[160.81663513 104.00866699]
[175.59767151 106.56232452]
[190.51361084 101.28736115]
[201.73786926 111.07844543]
[214.56320190 102.23827362]
[229.51689148 105.03860474]
[237.86560059 117.32007599]
[252.64663696 119.87373352]
[267.42767334 122.42738342]
[282.20867920 124.98104095]
[297.18646240 125.79714203]
[312.15747070 124.86459351]
[327.12844849 123.93205261]
[342.09942627 122.99950409]
[357.07040405 122.06696320]
[372.04138184 121.13441467]
[387.01239014 120.20187378]
[401.98336792 119.26932526]
[416.95434570 118.33678436]
[427.30752563 112.05617523]
[437.42974854 115.77601624]
[452.16928101 112.99279785]
[466.90881348 110.20957947]
[481.64834595 107.42636871]
[496.38784790 104.64315033]
[511.12738037 101.85993195]
[525.86694336 99.07671356]
[540.60644531 96.29350281]
[555.34594727 93.51028442]
[559.37036133 78.82812500]
[569.32971191 67.39581299]
[583.20837402 61.44570160]
[598.23236084 62.10873032]
[611.42425537 69.19988251]
[620.19274902 81.26548767]
[634.93225098 78.48226929]
[649.67181396 75.69905090]
[664.41131592 72.91584015]
[679.15087891 70.13262177]
[693.89038086 67.34940338]
[707.56530762 55.02239990]
[723.88854980 61.45753098]
[738.58300781 58.44542313]
[753.27746582 55.43331909]
[767.97192383 52.42121124]
[782.66638184 49.40910721]
[792.66607666 36.86378479]
[808.70855713 37.00408936]
[818.48730469 49.72239304]
[814.50097656 65.26229858]
[799.80749512 71.70291901]
[785.67846680 64.10356903]
[770.98400879 67.11567688]
[756.28955078 70.12777710]
[741.59509277 73.13988495]
[726.90063477 76.15199280]
[719.97576904 86.07585144]
[707.75280762 88.70228577]
[696.67358398 82.08893585]
[681.93408203 84.87214661]
[667.19451904 87.65536499]
[652.45501709 90.43858337]
[637.71545410 93.22180176]
[622.97595215 96.00501251]
[619.21093750 110.43727875]
[609.51324463 121.85059357]
[595.76550293 127.94650269]
[580.67272949 127.46695709]
[567.23034668 120.45352936]
[558.12921143 108.24981689]
[543.38964844 111.03302765]
[528.65014648 113.81624603]
[513.91058350 116.59946442]
[499.17108154 119.38267517]
[484.43154907 122.16589355]
[469.69201660 124.94911194]
[454.95248413 127.73233032]
[440.21295166 130.51554871]
[452.89071655 138.53266907]
[459.57312012 151.96195984]
[458.32269287 166.90974426]
[449.50195312 179.04212952]
[435.66839600 184.84147644]
[420.83285522 182.62635803]
[409.29669189 173.03901672]
[404.40469360 158.85916138]
[407.57519531 144.19805908]
[417.88690186 133.30776978]
[402.91589355 134.24031067]
[387.94491577 135.17285156]
[372.97393799 136.10539246]
[358.00296021 137.03794861]
[343.03198242 137.97048950]
[328.06097412 138.90303040]
[313.08999634 139.83557129]
[298.11901855 140.76812744]
[311.54611206 147.45491028]
[321.70700073 158.48924255]
[327.26629639 172.42100525]
[327.49343872 187.41929626]
[322.35858154 201.51301575]
[312.53649902 212.84999084]
[299.31805420 219.94032288]
[284.44039917 221.85217285]
[269.85873413 218.33432007]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 106]
[7 105]
[8 104]
[9 103]
[12 100]
[14 98]
[15 97]
[16 96]
[17 95]
[18 94]
[19 61]
[20 60]
[21 58]
[22 57]
[23 56]
[24 55]
[28 53]
[29 52]
[30 51]
[31 50]
[36 46]
[37 45]
[38 44]
[39 43]
[64 84]
[65 83]
[66 82]
[67 81]
[68 80]
[69 79]
[107 192]
[108 191]
[109 190]
[110 189]
[111 188]
[112 187]
[113 186]
[114 185]
[115 184]
[117 174]
[118 173]
[119 172]
[120 171]
[121 170]
[122 169]
[123 168]
[124 167]
[125 166]
[131 160]
[132 159]
[133 158]
[134 157]
[135 156]
[136 155]
[138 152]
[139 151]
[140 150]
[141 149]
[142 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
