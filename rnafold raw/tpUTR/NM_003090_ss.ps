%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 03:50:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGUGAGGCAGAUGUAUAAUAAUAGGCCCUCUUGGAACAAGUCUUGCUUUUCGAACAUGGUAUAAUAGCCUUGUUUGUGUUAGCAAAGUGGAAUCUAUCAGCAUUGUUGAAAUGCUUAAGACUGCUGCUGAUAAUUUUGUAAUAUAAGUUUUGAAAUCUAAAUGUCAAUUUUCUACAAAUUAUAAAAAUAAACUCCACUCACUAUGCUACCAA\
) } def
/len { sequence length } bind def

/coor [
[119.94152832 214.10502625]
[118.62812805 199.16264343]
[117.31472778 184.22024536]
[115.78313446 169.29864502]
[114.03367615 154.40101624]
[112.28422546 139.50338745]
[110.53476715 124.60575104]
[95.87019348 121.45135498]
[88.14984131 134.31199646]
[80.42948914 147.17263794]
[84.04010773 162.32524109]
[76.02736664 175.25778198]
[61.55943298 178.60658264]
[53.83908463 191.46722412]
[60.03159332 205.69509888]
[56.64564514 220.83824158]
[44.98319626 231.07382202]
[29.52870369 232.46603394]
[16.22472954 224.47953796]
[10.18692875 210.18533325]
[13.73695469 195.07980347]
[25.50975227 184.97134399]
[40.97843933 183.74687195]
[48.69879150 170.88623047]
[44.85167313 156.54275513]
[52.49800110 143.39024353]
[67.56884003 139.45228577]
[75.28919220 126.59164429]
[83.00954437 113.73100281]
[77.84357452 108.29383850]
[67.51163483 97.41950989]
[62.34566498 91.98234558]
[49.10717010 99.03517151]
[35.86867905 106.08799744]
[22.63018608 113.14081573]
[11.49402046 125.92448425]
[-3.87285423 118.76239777]
[-1.24463713 102.01340485]
[15.57736301 99.90232086]
[28.81585503 92.84950256]
[42.05434799 85.79667664]
[55.29284286 78.74385834]
[54.80004120 71.26006317]
[53.81443787 56.29248047]
[53.32163620 48.80868530]
[39.27261734 43.55272675]
[25.22360229 38.29676437]
[11.17458534 33.04080200]
[-2.87443089 27.78483963]
[-16.85424805 37.30899429]
[-33.59005356 36.62944794]
[-46.49298477 26.21202660]
[-50.60139084 10.31724930]
[-64.72570801 5.26712656]
[-78.85002136 0.21700339]
[-92.97433472 -4.83311987]
[-107.09864807 -9.88324261]
[-121.22296143 -14.93336582]
[-136.82244873 -12.29393291]
[-146.20176697 -23.86449051]
[-160.32608032 -28.91461372]
[-174.45039368 -33.96473694]
[-188.62673950 -26.97857666]
[-203.56382751 -32.14184570]
[-210.39970398 -46.39127350]
[-205.07879639 -61.27292252]
[-190.75790405 -67.95777893]
[-175.93333435 -62.47983170]
[-169.40026855 -48.08905029]
[-155.27595520 -43.03892899]
[-141.15164185 -37.98880386]
[-126.56241608 -40.98945618]
[-116.17284393 -29.05768013]
[-102.04852295 -24.00755692]
[-87.92420959 -18.95743370]
[-73.79989624 -13.90731144]
[-59.67558289 -8.85718822]
[-45.55126953 -3.80706453]
[-35.27325058 -12.32526970]
[-22.02216911 -14.67211056]
[-9.23984814 -10.12942886]
[-0.30013129 0.21723166]
[2.38153100 13.73582268]
[16.43054771 18.99178505]
[30.47956467 24.24774742]
[44.52857971 29.50370789]
[58.57759857 34.75967026]
[121.42046356 53.39440536]
[125.04552460 96.38213348]
[138.17955017 89.13663483]
[151.31358337 81.89112854]
[164.44760132 74.64562225]
[177.58163452 67.40012360]
[176.62356567 49.82417297]
[183.77998352 33.84033203]
[197.38903809 22.96040154]
[214.38122559 19.53372955]
[217.85626221 4.94180822]
[221.33129883 -9.65011215]
[224.80632019 -24.24203300]
[228.28135681 -38.83395386]
[231.75639343 -53.42587280]
[235.23143005 -68.01779175]
[238.70646667 -82.60971069]
[229.26760864 -97.33988190]
[233.32403564 -114.01046753]
[247.89044189 -122.41903687]
[251.15190125 -137.06018066]
[254.41334534 -151.70130920]
[242.69065857 -161.54190063]
[236.89460754 -175.70750427]
[238.35708618 -190.94297791]
[246.74203491 -203.74732971]
[260.12265015 -211.17819214]
[275.42416382 -211.52803040]
[289.13037109 -204.71644592]
[298.09176636 -192.30868530]
[300.24899292 -177.15596008]
[295.10638428 -162.74028015]
[283.84567261 -152.37422180]
[269.05450439 -148.43986511]
[265.79302979 -133.79872131]
[262.53158569 -119.15758514]
[270.89642334 -109.35894012]
[272.10934448 -96.33724213]
[265.50451660 -84.82467651]
[253.29838562 -79.13468170]
[249.82334900 -64.54276276]
[246.34831238 -49.95084000]
[242.87327576 -35.35891724]
[239.39825439 -20.76699829]
[235.92321777 -6.17507792]
[232.44818115 8.41684246]
[228.97314453 23.00876236]
[242.40997314 33.79457855]
[249.44645691 49.52257919]
[264.44284058 49.85132599]
[279.43923950 50.18006897]
[294.43563843 50.50881577]
[309.43203735 50.83755875]
[324.42843628 51.16630554]
[339.42483521 51.49504852]
[354.42123413 51.82379532]
[369.41763306 52.15253830]
[379.47442627 38.55085373]
[395.49804688 33.67314148]
[411.11465454 39.25255585]
[420.23510742 52.90320969]
[435.23471069 53.01279831]
[448.21426392 39.20938110]
[466.84201050 39.27863312]
[479.28411865 52.70953369]
[494.28051758 52.38078690]
[509.27691650 52.05204010]
[524.27331543 51.72329712]
[531.58892822 38.21859360]
[544.68524170 30.19467354]
[560.03930664 29.80993462]
[573.52099609 37.16786575]
[581.50384521 50.28922272]
[581.84045410 65.64442444]
[574.44030762 79.10300446]
[561.29394531 87.04466248]
[545.93780518 87.33314514]
[532.50250244 79.89083862]
[524.60205078 66.71969604]
[509.60565186 67.04843903]
[494.60925293 67.37718201]
[479.61285400 67.70593262]
[473.70040894 77.45932007]
[463.71118164 83.20816040]
[452.06799316 83.42469025]
[441.65985107 77.93952942]
[435.12512207 68.01239777]
[420.12551880 67.90280914]
[413.23168945 79.33402252]
[401.49588013 85.91959381]
[387.93054199 85.84648895]
[376.07876587 79.02686310]
[369.08886719 67.14894104]
[354.09249878 66.82019043]
[339.09609985 66.49144745]
[324.09970093 66.16270447]
[309.10330200 65.83395386]
[294.10690308 65.50521088]
[279.11050415 65.17646790]
[264.11410522 64.84772491]
[249.11770630 64.51897430]
[244.87449646 75.26324463]
[237.48516846 84.18676758]
[227.66288757 90.39514923]
[216.36604309 93.25767517]
[204.70460510 92.47129059]
[193.83120728 88.09255981]
[184.82713318 80.53414917]
[171.69311523 87.77964783]
[158.55908203 95.02515411]
[145.42506409 102.27066040]
[132.29103088 109.51616669]
[125.43239594 122.85630035]
[127.18185425 137.75392151]
[128.93130493 152.65156555]
[130.68077087 167.54919434]
[134.31629944 173.06552124]
[134.58258057 178.73851013]
[132.25711060 182.90684509]
[133.57051086 197.84922791]
[134.88392639 212.79162598]
[147.79997253 221.60691833]
[151.97808838 236.67601013]
[145.44549561 250.88371277]
[131.28666687 257.52160645]
[116.18697357 253.45547485]
[107.27603912 240.60520935]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 208]
[2 207]
[3 206]
[4 203]
[5 202]
[6 201]
[7 200]
[8 29]
[9 28]
[10 27]
[13 24]
[14 23]
[32 42]
[33 41]
[34 40]
[35 39]
[45 87]
[46 86]
[47 85]
[48 84]
[49 83]
[53 78]
[54 77]
[55 76]
[56 75]
[57 74]
[58 73]
[60 71]
[61 70]
[62 69]
[89 199]
[90 198]
[91 197]
[92 196]
[93 195]
[97 134]
[98 133]
[99 132]
[100 131]
[101 130]
[102 129]
[103 128]
[104 127]
[107 123]
[108 122]
[109 121]
[136 188]
[137 187]
[138 186]
[139 185]
[140 184]
[141 183]
[142 182]
[143 181]
[144 180]
[148 175]
[149 174]
[152 169]
[153 168]
[154 167]
[155 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
