%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 11:18:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUCUCUGGCACCCUGUCCGUCUCCAGCCAGCCAGCUCAUUUCACUUUACACCCUCAUGGACUGAGAUUAUACUCACCUUUUAUGAAAGCACUGCAUGAAUAAAAUUAUUCCUUUGUAUUUUUACUUUUAAAUGUCUUCUGUAUUCACUUAUAUGUUCUAAUUAAUAAAUUAUUUAUUAUUAAGAA\
) } def
/len { sequence length } bind def

/coor [
[130.13705444 250.96009827]
[108.08862305 253.72627258]
[85.87164307 253.28921509]
[63.94906235 249.65802002]
[42.77768326 242.90835571]
[22.79866219 233.18087769]
[4.42830753 220.67826843]
[-5.44616508 231.96961975]
[-15.32063866 243.26098633]
[-25.19511223 254.55233765]
[-35.06958389 265.84368896]
[-31.77717972 280.89248657]
[-37.90565491 294.83148193]
[-50.91292953 302.39947510]
[-65.70532990 300.87536621]
[-75.57979584 312.16671753]
[-85.45426941 323.45806885]
[-81.87744904 338.55728149]
[-87.88987732 352.86218262]
[-101.17965698 360.87225342]
[-116.63659668 359.50747681]
[-128.31718445 349.29260254]
[-131.72999573 334.15548706]
[-125.56274414 319.91665649]
[-112.18685913 312.05120850]
[-96.74562836 313.58358765]
[-86.87115479 302.29223633]
[-76.99668884 291.00088501]
[-80.47885132 276.54360962]
[-74.71206665 262.64367676]
[-61.71430206 254.71200562]
[-46.36094284 255.96922302]
[-36.48646927 244.67787170]
[-26.61199760 233.38650513]
[-16.73752403 222.09515381]
[-6.86305094 210.80378723]
[-15.24139977 202.06179810]
[-22.90672874 192.68833923]
[-29.81160927 182.74139404]
[-35.91331863 172.28251648]
[-41.17411041 161.37640381]
[-45.56142807 150.09054565]
[-49.04812622 138.49476624]
[-51.61264038 126.66082001]
[-53.23909378 114.66191101]
[-53.91743088 102.57228851]
[-53.64344788 90.46675110]
[-52.41884613 78.42020416]
[-50.25119781 66.50716400]
[-47.15391541 54.80135727]
[-43.14616394 43.37520218]
[-38.25273895 32.29939651]
[-32.50391769 21.64246559]
[-25.93527222 11.47034836]
[-18.58743858 1.84598136]
[-10.50588131 -7.17108774]
[-20.75214005 -18.12618637]
[-30.99839973 -29.08128357]
[-41.24465942 -40.03638077]
[-51.49091721 -50.99147797]
[-61.73717880 -61.94657898]
[-71.98343658 -72.90167236]
[-91.50717163 -77.86775208]
[-95.10910797 -96.85374451]
[-105.71571350 -107.46035004]
[-116.32231140 -118.06694794]
[-126.92891693 -128.67355347]
[-142.73121643 -128.42291260]
[-154.02406311 -139.47946167]
[-154.10760498 -155.28352356]
[-142.93229675 -166.45884705]
[-127.12821960 -166.37530518]
[-116.07167816 -155.08245850]
[-116.32231140 -139.28015137]
[-105.71571350 -128.67355347]
[-95.10910797 -118.06694794]
[-84.50251007 -107.46035004]
[-74.30115509 -108.37828827]
[-65.09039307 -103.41608429]
[-60.03693771 -94.00480652]
[-61.02833939 -83.14793396]
[-50.78207779 -72.19284058]
[-40.53582001 -61.23773956]
[-30.28956032 -50.28264236]
[-20.04330063 -39.32754135]
[-9.79704189 -28.37244415]
[0.44921702 -17.41734695]
[19.53064346 -31.23213959]
[40.49653244 -41.97369003]
[62.85589218 -49.39045334]
[86.08510590 -53.30873108]
[109.64019012 -53.63677597]
[132.96951294 -50.36689377]
[155.52673340 -43.57566833]
[161.61251831 -57.28564072]
[167.69830322 -70.99561310]
[173.78407288 -84.70558167]
[170.73423767 -104.61881256]
[186.80754089 -115.34685516]
[192.43179321 -129.25253296]
[198.05606079 -143.15820312]
[203.68032837 -157.06387329]
[209.30458069 -170.96954346]
[206.49368286 -187.12599182]
[219.25187683 -197.42942810]
[234.45462036 -191.28054810]
[236.46263123 -175.00480652]
[223.21025085 -165.34527588]
[217.58599854 -151.43960571]
[211.96173096 -137.53393555]
[206.33746338 -123.62826538]
[200.71321106 -109.72259521]
[205.54080200 -100.68907166]
[204.56814575 -90.27199554]
[197.87644958 -81.94547272]
[187.49404907 -78.61980438]
[181.40826416 -64.90982819]
[175.32249451 -51.19985962]
[169.23670959 -37.48989105]
[176.69580078 -33.47264481]
[183.92257690 -29.05112076]
[190.89517212 -24.23871803]
[197.59245300 -19.05000877]
[203.99414062 -13.50070858]
[210.08084106 -7.60762787]
[215.83410645 -1.38861489]
[221.23652649 5.13749361]
[226.27174377 11.95093060]
[230.92448425 19.03105736]
[235.18067932 26.35643196]
[239.02742004 33.90486526]
[242.45306396 41.65349197]
[245.44723511 49.57884598]
[248.00086975 57.65692139]
[250.10620117 65.86324310]
[251.75689697 74.17296600]
[252.94793701 82.56092072]
[253.67570496 91.00169373]
[253.93800354 99.46971893]
[253.73405457 107.93935394]
[253.06445312 116.38493347]
[251.93122864 124.78089142]
[250.33782959 133.10179138]
[248.28907776 141.32243347]
[245.79116821 149.41790771]
[242.85166931 157.36369324]
[239.47949219 165.13574219]
[235.68484497 172.71049500]
[231.47921753 180.06501770]
[226.87535095 187.17703247]
[221.88720703 194.02499390]
[216.52987671 200.58816528]
[210.81958008 206.84667969]
[204.77363586 212.78155518]
[198.41032410 218.37481689]
[191.74896240 223.60954285]
[184.80969238 228.46987915]
[192.45393372 241.37590027]
[200.09819031 254.28192139]
[207.74243164 267.18795776]
[223.06694031 268.75823975]
[234.39595032 278.93206787]
[237.52491760 293.65191650]
[231.45886230 307.22912598]
[239.10311890 320.13516235]
[246.74736023 333.04116821]
[254.39161682 345.94720459]
[262.03585815 358.85324097]
[269.68011475 371.75924683]
[277.32437134 384.66528320]
[290.59854126 395.21197510]
[284.13864136 410.88699341]
[267.28793335 409.01885986]
[264.41833496 392.30953979]
[256.77407837 379.40350342]
[249.12983704 366.49746704]
[241.48559570 353.59146118]
[233.84133911 340.68542480]
[226.19709778 327.77941895]
[218.55284119 314.87338257]
[203.73106384 313.66802979]
[192.32621765 303.85000610]
[188.84880066 289.02566528]
[194.83641052 274.83218384]
[187.19215393 261.92617798]
[179.54791260 249.02015686]
[171.90365601 236.11412048]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 36]
[8 35]
[9 34]
[10 33]
[11 32]
[15 28]
[16 27]
[17 26]
[56 87]
[57 86]
[58 85]
[59 84]
[60 83]
[61 82]
[62 81]
[64 77]
[65 76]
[66 75]
[67 74]
[94 119]
[95 118]
[96 117]
[97 116]
[99 112]
[100 111]
[101 110]
[102 109]
[103 108]
[157 187]
[158 186]
[159 185]
[160 184]
[164 180]
[165 179]
[166 178]
[167 177]
[168 176]
[169 175]
[170 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
