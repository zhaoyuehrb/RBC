%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 14:14:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUGGCCCGCCUUCCGCCAGCCGCGCCCUGCGCCACCUACCCGGGGUCCUCCACAGCGGAGGCCUGCAGGAAUGUCCCUUCCCACCACACCCCACUUCCCUCUCCUUCCACUUUCACAGCUGUCCUUCCCUGGCCGAGGCAUUGCUUUCUGGCCUCAGCUAUGUAAUUAAAACGCCCGAAGUAAAAUGGCCUUCUCCAAAA\
) } def
/len { sequence length } bind def

/coor [
[67.62112427 210.68028259]
[71.90193176 196.09455872]
[81.44248199 184.26043701]
[94.78791809 176.98254395]
[93.15813446 162.07135010]
[91.52835083 147.16015625]
[89.89857483 132.24894714]
[76.23700714 111.78527832]
[81.88813019 93.46166229]
[70.87725067 83.27537537]
[59.86637497 73.08908081]
[48.85549927 62.90278625]
[37.84461975 52.71649551]
[24.94475937 52.43602371]
[15.98291397 43.71908188]
[15.38586521 31.63272667]
[4.53473377 21.27642632]
[-6.31639719 10.92012596]
[-17.16752815 0.56382579]
[-28.01865959 -9.79247475]
[-27.18897820 -0.03719765]
[-28.27486801 9.95541382]
[-31.30611801 19.89781380]
[-42.78010559 29.55946922]
[-54.25409317 39.22112656]
[-65.72808075 48.88278198]
[-73.94944000 63.70997238]
[-90.47307587 59.91448593]
[-91.40011597 42.98590088]
[-75.38973999 37.40879440]
[-63.91575241 27.74713707]
[-52.44176102 18.08548164]
[-40.96777344 8.42382526]
[-41.55040359 0.94648963]
[-56.25181961 3.92446780]
[-68.02497864 13.21923733]
[-82.73709869 10.29458427]
[-90.06015015 -2.79636216]
[-84.85330200 -16.86365509]
[-70.77179718 -22.03194427]
[-57.70092010 -14.67299366]
[-42.71566010 -14.00818062]
[-43.29829025 -21.48551559]
[-56.13036346 -29.25326157]
[-68.96244049 -37.02100372]
[-81.79451752 -44.78874969]
[-94.62658691 -52.55649567]
[-108.75710297 -57.58924484]
[-123.61040497 -59.68197250]
[-138.46369934 -61.77470398]
[-153.31700134 -63.86743546]
[-168.17030334 -65.96016693]
[-181.79954529 -57.49711609]
[-196.86499023 -63.01179123]
[-201.80973816 -78.27381134]
[-192.84057617 -91.57545471]
[-176.83789062 -92.71283722]
[-166.07757568 -80.81346130]
[-151.22427368 -78.72073364]
[-136.37097168 -76.62800598]
[-121.51766968 -74.53527069]
[-106.66437531 -72.44254303]
[-103.34284973 -79.16693878]
[-116.79164124 -85.80998230]
[-130.24032593 -92.45325470]
[-123.59682465 -105.90182495]
[-110.14859009 -99.25877380]
[-96.69980621 -92.61573029]
[-93.37828064 -99.34011841]
[-104.06703949 -109.86392212]
[-114.75579834 -120.38772583]
[-125.44455719 -130.91152954]
[-141.24443054 -130.53802490]
[-152.62290955 -141.50642395]
[-152.82936096 -157.30935669]
[-141.74127197 -168.57124329]
[-125.93703461 -168.61059570]
[-114.79301453 -157.40406799]
[-114.92075348 -141.60028076]
[-104.23199463 -131.07649231]
[-93.54323578 -120.55268097]
[-82.85447693 -110.02887726]
[-67.96406555 -111.83876801]
[-54.60951996 -105.00823975]
[-47.36197662 -91.87534332]
[-48.70220947 -76.93533325]
[-58.17146683 -65.30205536]
[-72.52850342 -60.95747375]
[-86.85884857 -65.38856506]
[-74.02677155 -57.62082291]
[-61.19469452 -49.85308075]
[-48.36262131 -42.08533478]
[-35.53054428 -34.31759262]
[-45.34708023 -45.65935516]
[-53.19054031 -58.44529343]
[-58.85250854 -72.33565521]
[-62.18253708 -86.96134949]
[-63.09214401 -101.93373871]
[-61.55715561 -116.85499573]
[-57.61835861 -131.32862854]
[-51.38042068 -144.97003174]
[-43.00908661 -157.41674805]
[-32.72680283 -168.33804321]
[-20.80678558 -177.44371033]
[-7.56577301 -184.49180603]
[6.64439726 -189.29504395]
[21.44613647 -191.72578430]
[36.44613647 -191.71945190]
[51.24581528 -189.27621460]
[65.45192719 -184.46098328]
[78.68698120 -177.40170288]
[90.59930420 -168.28598022]
[100.87236786 -157.35600281]
[109.23318481 -144.90222168]
[115.45960236 -131.25555420]
[119.38617706 -116.77860260]
[120.90856934 -101.85605621]
[119.98632050 -86.88443756]
[116.64394379 -72.26155853]
[110.97024536 -58.37598419]
[103.11599731 -45.59667969]
[93.28988647 -34.26320648]
[81.75302124 -24.67671967]
[68.81195068 -17.09194946]
[54.81054688 -11.71043777]
[40.12084961 -8.67518044]
[25.13319016 -8.06682873]
[10.24582005 -9.90154934]
[-4.14567900 -14.13058853]
[-17.66235924 -20.64360619]
[-6.81122780 -10.28730488]
[4.03990316 0.06899511]
[14.89103413 10.42529583]
[25.74216461 20.78159523]
[42.99072266 23.99813843]
[48.03091431 41.70561600]
[59.04179001 51.89191055]
[70.05266571 62.07820129]
[81.06354523 72.26449585]
[92.07442474 82.45079041]
[113.77235413 77.33074951]
[133.74342346 98.15193939]
[147.79396057 103.40383911]
[161.84449768 108.65573883]
[175.89503479 113.90763092]
[189.94557190 119.15953064]
[203.99610901 124.41143036]
[218.04664612 129.66333008]
[230.08998108 125.03266907]
[241.68740845 129.70166016]
[246.82170105 140.65956116]
[260.78884888 146.12933350]
[274.75601196 151.59910583]
[283.99291992 139.64685059]
[296.22381592 130.78219604]
[310.45718384 125.72377014]
[325.53921509 124.88162231]
[340.24725342 128.32403564]
[353.38900757 135.77192688]
[363.89910889 146.62155151]
[370.92556763 159.99337769]
[373.89877319 174.80339050]
[372.57769775 189.85104370]
[367.06945801 203.91645813]
[357.82055664 215.85942078]
[345.58074951 224.71177673]
[331.34231567 229.75590515]
[316.25942993 230.58290100]
[301.55487061 227.12571716]
[288.42062378 219.66461182]
[277.92141724 208.80444336]
[270.90838623 195.42556763]
[267.95007324 180.61256409]
[269.28625488 165.56625366]
[255.31909180 160.09648132]
[241.35192871 154.62670898]
[224.17143250 158.18898010]
[212.79473877 143.71386719]
[198.74420166 138.46195984]
[184.69366455 133.21006775]
[170.64312744 127.95816803]
[156.59259033 122.70627594]
[142.54206848 117.45437622]
[128.49153137 112.20247650]
[122.57108307 116.80665588]
[124.62533569 131.66532898]
[110.73020935 126.01499939]
[104.80976868 130.61917114]
[106.43955231 145.53036499]
[108.06933594 160.44155884]
[109.69911957 175.35276794]
[124.30161285 179.57597351]
[136.17329407 189.06974792]
[143.50379944 202.38635254]
[145.17529297 217.49511719]
[140.93287659 232.09204102]
[131.42349243 243.95121765]
[118.09724426 251.26420593]
[102.98629761 252.91581726]
[88.39496613 248.65420532]
[76.54830933 239.12922668]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 191]
[5 190]
[6 189]
[7 188]
[9 140]
[10 139]
[11 138]
[12 137]
[13 136]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[23 33]
[24 32]
[25 31]
[26 30]
[43 93]
[44 92]
[45 91]
[46 90]
[47 89]
[48 62]
[49 61]
[50 60]
[51 59]
[52 58]
[69 82]
[70 81]
[71 80]
[72 79]
[142 184]
[143 183]
[144 182]
[145 181]
[146 180]
[147 179]
[148 178]
[151 176]
[152 175]
[153 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
