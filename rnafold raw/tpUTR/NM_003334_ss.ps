%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 02:59:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCGUCUGCUCCUCUAGGCUGGCCCCUUGUCCACCCCUCUCCACACCCCUUCCAGCCCAGGGUUCCCAUUUGGCUUCUGGCAGUGGCCCAACUAGCCAAGUCUGGUGUUCCCUCAUCAUCCCCCUACCUGAACCCCUCUUGCCACUGCCUUCUACCUUGUUUGAAACCUGAAUCCUAAUAAAGAAUUAAUAACUCCCA\
) } def
/len { sequence length } bind def

/coor [
[88.10437012 461.15795898]
[73.30728149 458.69909668]
[58.94941711 454.35720825]
[45.26936722 448.20446777]
[32.49443054 440.34310913]
[20.83688545 430.90374756]
[10.49043274 420.04321289]
[1.62699223 407.94201660]
[-5.60616016 394.80117798]
[-11.08883667 380.83908081]
[-14.72993565 366.28768921]
[-16.46895599 351.38885498]
[-16.27700043 336.39007568]
[-14.15726089 321.54061890]
[-10.14495850 307.08718872]
[-4.30676270 293.26995850]
[3.26031876 280.31854248]
[12.43226624 268.44616699]
[-1.51438057 273.96804810]
[-15.46102810 279.48992920]
[-29.40767479 285.01177979]
[-43.35432434 290.53366089]
[-57.30096817 296.05551147]
[-58.33644104 312.28897095]
[-66.31710052 326.39630127]
[-79.60198975 335.57983398]
[-95.50415039 338.04382324]
[-110.83403778 333.34533691]
[-122.53922272 322.47296143]
[-136.39741516 328.21322632]
[-150.25559998 333.95346069]
[-151.05996704 349.19537354]
[-158.40542603 362.57473755]
[-170.83352661 371.43505859]
[-185.87664795 374.01712036]
[-200.54798889 369.80825806]
[-211.93453979 359.64413452]
[-217.77548218 345.54284668]
[-216.91108704 330.30422974]
[-209.51301575 316.95388794]
[-197.05012512 308.14257812]
[-181.99693298 305.61978149]
[-167.34228516 309.88641357]
[-155.99586487 320.09527588]
[-142.13766479 314.35504150]
[-128.27946472 308.61477661]
[-128.18304443 294.73718262]
[-122.78601074 281.90463257]
[-112.87327576 272.06860352]
[-99.91908264 266.73843384]
[-85.86783600 266.74993896]
[-72.84229279 272.13436890]
[-62.82283783 282.10888672]
[-48.87619019 276.58700562]
[-34.92954254 271.06512451]
[-20.98289680 265.54327393]
[-7.03624868 260.02139282]
[6.91039848 254.49952698]
[18.00486565 244.40434265]
[24.81472206 231.03924561]
[31.62458038 217.67414856]
[38.43443680 204.30905151]
[33.60184097 190.26692200]
[40.31761169 176.61579895]
[55.07906342 171.64213562]
[61.88891983 158.27703857]
[57.05632401 144.23489380]
[63.77209473 130.58378601]
[78.53354645 125.61011505]
[85.34340668 112.24501801]
[80.96583557 98.43259430]
[87.54393768 85.52233124]
[101.29149628 80.94512177]
[108.10135651 67.58002472]
[98.94401550 55.41842270]
[95.98713684 40.54751968]
[99.76465607 25.92730904]
[109.47547150 14.44423008]
[123.15259552 8.34130096]
[138.06141663 8.78009224]
[144.87127686 -4.58500624]
[151.68113708 -17.95010376]
[158.49099731 -31.31520271]
[165.30084229 -44.68029785]
[172.11070251 -58.04539871]
[178.92056274 -71.41049194]
[185.73042297 -84.77559662]
[192.54028320 -98.14069366]
[179.11734009 -91.44556427]
[164.13917542 -92.25469208]
[151.51559448 -100.35687256]
[144.54177856 -113.63715363]
[145.03811646 -128.62893677]
[152.87506104 -141.41886902]
[166.00689697 -148.66835022]
[181.00576782 -148.48500061]
[193.95648193 -140.91671753]
[201.47845459 -127.93904877]
[201.60760498 -112.93721771]
[210.42437744 -125.07247162]
[219.24114990 -137.20771790]
[215.61631775 -150.18537903]
[220.06549072 -162.69761658]
[230.75205994 -170.24855042]
[243.64248657 -170.26264954]
[252.64880371 -182.25791931]
[255.30241394 -191.00798035]
[261.89196777 -194.36938477]
[271.08557129 -206.22171021]
[280.27917480 -218.07403564]
[289.47280884 -229.92636108]
[280.77737427 -242.29086304]
[276.11434937 -256.66958618]
[275.89834595 -271.78396606]
[280.14859009 -286.29006958]
[288.48712158 -298.89801025]
[300.17251587 -308.48669434]
[314.16571045 -314.20349121]
[329.22244263 -315.54010010]
[344.00387573 -312.37765503]
[357.19561768 -304.99734497]
[367.62472534 -294.05541992]
[374.36380005 -280.52487183]
[376.81365967 -265.60876465]
[374.75640869 -250.63349915]
[368.37503052 -236.93060303]
[358.23690796 -225.71855164]
[345.24353027 -217.99432373]
[330.55026245 -214.44474792]
[315.46362305 -215.38543701]
[301.32513428 -220.73275757]
[292.13150024 -208.88043213]
[282.93789673 -197.02810669]
[273.74429321 -185.17578125]
[264.64407349 -173.25161743]
[255.63775635 -161.25634766]
[258.71856689 -144.72721863]
[248.69778442 -130.80758667]
[231.37641907 -128.39094543]
[222.55963135 -116.25569153]
[213.74285889 -104.12043762]
[205.90538025 -91.33083344]
[199.09552002 -77.96573639]
[192.28565979 -64.60063934]
[185.47579956 -51.23553848]
[178.66593933 -37.87044144]
[171.85609436 -24.50534439]
[165.04623413 -11.14024639]
[158.23637390 2.22485137]
[151.42651367 15.58994961]
[160.54469299 27.39352417]
[163.64653015 42.04576111]
[160.06439209 56.65155792]
[150.45677185 68.30117798]
[136.68794250 74.64990997]
[121.46645355 74.38988495]
[114.65659332 87.75498199]
[119.03416443 101.56740570]
[112.45606232 114.47766876]
[98.70850372 119.05487823]
[91.89864349 132.41996765]
[96.55142975 147.28569031]
[89.45487213 160.74278259]
[75.25402069 165.08689880]
[68.44416046 178.45199585]
[73.09694672 193.31770325]
[66.00038910 206.77479553]
[51.79953384 211.11891174]
[44.98967743 224.48400879]
[38.17982101 237.84910583]
[31.36996269 251.21420288]
[44.05051804 243.20149231]
[57.65644455 236.88652039]
[71.96166229 232.37423706]
[86.72846985 229.73959351]
[101.71150208 229.02638245]
[116.66180420 230.24645996]
[131.33094788 233.37954712]
[145.47518921 238.37356567]
[158.85951233 245.14556885]
[171.26152039 253.58300781]
[182.47512817 263.54568481]
[192.31401062 274.86807251]
[200.61470032 287.36199951]
[207.23924255 300.81991577]
[212.07759094 315.01818848]
[215.04931641 329.72085571]
[216.10508728 344.68365479]
[215.22731018 359.65795898]
[212.43060303 374.39492798]
[207.76144409 388.64971924]
[201.29737854 402.18542480]
[193.14584351 414.77719116]
[183.44229126 426.21575928]
[172.34793091 436.31106567]
[160.04713440 444.89538574]
[146.74427795 451.82604980]
[132.66041565 456.98791504]
[118.02956390 460.29519653]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 58]
[19 57]
[20 56]
[21 55]
[22 54]
[23 53]
[29 46]
[30 45]
[31 44]
[59 171]
[60 170]
[61 169]
[62 168]
[65 165]
[66 164]
[69 161]
[70 160]
[73 157]
[74 156]
[80 150]
[81 149]
[82 148]
[83 147]
[84 146]
[85 145]
[86 144]
[87 143]
[88 142]
[99 141]
[100 140]
[101 139]
[105 136]
[106 135]
[108 134]
[109 133]
[110 132]
[111 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
