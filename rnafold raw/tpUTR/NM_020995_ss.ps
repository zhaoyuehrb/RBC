%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 22:25:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCAAGGCUGGCCGGAAGCCCUUGCCUGAAAGCAAGAUUUCAGCCUGGAAGAGGGCAAAGUGGACGGGAGUGGACAGGAGUGGAUGCGAUAAGAUGUGGUUUGAAGCUGAUGGGUGCCAGCCCUGCAUUGCUGAGUCAAUCAAUAAAGAGCUUUCUUUUGACCCA\
) } def
/len { sequence length } bind def

/coor [
[245.85876465 276.25769043]
[235.97746277 264.97229004]
[226.09617615 253.68690491]
[216.21488953 242.40150452]
[202.00953674 237.92298889]
[198.73986816 222.44332886]
[188.85856628 211.15794373]
[178.97727966 199.87254333]
[169.09599304 188.58715820]
[159.21469116 177.30175781]
[149.33340454 166.01637268]
[139.45211792 154.73097229]
[129.46447754 143.53959656]
[111.70281982 151.25325012]
[92.35342407 152.01327515]
[74.04145050 145.71658325]
[59.25132370 133.21742249]
[49.98964310 116.21159363]
[35.20670319 118.75416565]
[20.42376328 121.29674530]
[5.64082336 123.83931732]
[-9.14211655 126.38188934]
[-23.92505646 128.92446899]
[-37.77587509 141.02758789]
[-53.99342728 134.37184143]
[-68.72560883 137.19372559]
[-83.34044647 140.57106018]
[-97.81701660 144.49902344]
[-112.29358673 148.42698669]
[-126.77015686 152.35496521]
[-141.24671936 156.28292847]
[-148.88722229 170.11759949]
[-164.09541321 174.41722107]
[-177.84852600 166.63087463]
[-181.98712158 151.37808228]
[-174.05580139 137.70805359]
[-158.76011658 133.73095703]
[-145.17469788 141.80635071]
[-130.69812012 137.87838745]
[-116.22154999 133.95042419]
[-101.74497986 130.02246094]
[-87.26841736 126.09449005]
[-85.75792694 123.68335724]
[-83.18029022 121.73921204]
[-79.71364594 120.67949677]
[-75.68662262 120.84753418]
[-71.54747772 122.46154022]
[-56.81529999 119.63967133]
[-49.74401474 109.79119873]
[-37.46063232 107.33998871]
[-26.46763039 114.14152527]
[-11.68469048 111.59895325]
[3.09824920 109.05637360]
[17.88118935 106.51380157]
[32.66413116 103.97122955]
[47.44707108 101.42865753]
[48.04998779 91.93476868]
[50.35391998 82.70496368]
[54.28342438 74.04145050]
[59.70983505 66.22791290]
[66.45547485 59.52017212]
[58.63010025 46.72315979]
[43.52753067 42.90870667]
[35.77378845 29.81924057]
[39.50335693 15.44475269]
[31.67798424 2.64773941]
[17.02275467 -4.71135330]
[16.33855057 -21.09622192]
[30.32922363 -29.65151787]
[44.60237122 -21.57628632]
[44.47499847 -5.17763329]
[52.30036926 7.61938000]
[66.79523468 10.84962654]
[74.91357422 23.71614265]
[71.42711639 38.89778900]
[79.25248718 51.69480133]
[90.29357910 48.33147049]
[101.80252075 47.45856476]
[113.22457886 49.11815643]
[119.03032684 35.28727722]
[124.83608246 21.45639610]
[114.70472717 8.41582108]
[112.53177643 -7.85968018]
[118.81498718 -22.92836189]
[131.75730896 -32.72572327]
[147.77957153 -34.66074753]
[153.32255554 -48.59901810]
[151.23251343 -64.28156281]
[163.12528992 -73.24879456]
[168.66825867 -87.18707275]
[174.21124268 -101.12534332]
[174.44593811 -118.07765961]
[190.80072021 -122.54501343]
[199.62094116 -108.06605530]
[188.14950562 -95.58235931]
[182.60653687 -81.64408875]
[177.06355286 -67.70581818]
[179.55006409 -53.02022934]
[167.26081848 -43.05604172]
[161.71784973 -29.11776924]
[170.88525391 -18.96303940]
[174.79277039 -5.78319025]
[172.62071228 7.85811520]
[164.73777771 19.28164864]
[152.63996887 26.21883392]
[138.66696167 27.26215172]
[132.86120605 41.09302902]
[127.05545044 54.92390823]
[138.69561768 64.41207123]
[147.17837524 76.80405426]
[151.81158447 91.08872986]
[152.21719360 106.10052490]
[148.36209106 120.61454773]
[140.56085205 133.44650269]
[148.68803406 137.71424866]
[150.73750305 144.84968567]
[160.61880493 156.13508606]
[170.50009155 167.42047119]
[180.38137817 178.70587158]
[190.26266479 189.99125671]
[200.14396667 201.27665710]
[210.02525330 212.56204224]
[224.93739319 217.84776306]
[227.50027466 232.52021790]
[237.38157654 243.80560303]
[247.26286316 255.09100342]
[257.14416504 266.37640381]
[266.63027954 265.73867798]
[275.20880127 269.50646973]
[280.98446655 276.70800781]
[282.74615479 285.62921143]
[280.21920776 294.22076416]
[289.44418335 306.04867554]
[304.03234863 312.17208862]
[305.75851440 326.96633911]
[314.98348999 338.79425049]
[324.20846558 350.62219238]
[333.43347168 362.45010376]
[342.65844727 374.27801514]
[345.85586548 359.62277222]
[358.38418579 351.37405396]
[373.11010742 354.22845459]
[381.64907837 366.56076050]
[379.13928223 381.34930420]
[367.00970459 390.17388916]
[352.16644287 388.00997925]
[359.99182129 400.80697632]
[367.81719971 413.60400391]
[375.64257812 426.40100098]
[390.29779053 433.76010132]
[390.98199463 450.14495850]
[376.99133301 458.70025635]
[362.71820068 450.62503052]
[362.84555054 434.22637939]
[355.02017212 421.42938232]
[347.19482422 408.63235474]
[339.36944580 395.83535767]
[330.83050537 383.50299072]
[321.60552979 371.67507935]
[312.38055420 359.84716797]
[303.15557861 348.01922607]
[293.93060303 336.19131470]
[280.00225830 330.91390991]
[277.61627197 315.27365112]
[268.39129639 303.44573975]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 127]
[2 126]
[3 125]
[4 124]
[6 122]
[7 121]
[8 120]
[9 119]
[10 118]
[11 117]
[12 116]
[13 114]
[18 56]
[19 55]
[20 54]
[21 53]
[22 52]
[23 51]
[25 48]
[26 47]
[27 42]
[28 41]
[29 40]
[30 39]
[31 38]
[61 76]
[62 75]
[65 72]
[66 71]
[79 108]
[80 107]
[81 106]
[86 100]
[87 99]
[89 97]
[90 96]
[91 95]
[132 165]
[133 164]
[135 162]
[136 161]
[137 160]
[138 159]
[139 158]
[146 157]
[147 156]
[148 155]
[149 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
