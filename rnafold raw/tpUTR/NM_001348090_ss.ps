%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 05:05:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGCCCGUCCUGGCCCUGCGCGGGGAGGAGAACCAGCGGGGCCGCGGCAGAGCCUGGAGACGCGCCUCGUUCUGUAGACUUGUUGGUGACCUCGGCCCCUCGCUCGACGCAGCCCGCGCUCCCCGGAGGGCCCAGGACUUGGAGAAGGGAGCGCGCCUGGCCGCCGCUGGGUCACGGAGGAGGCCCGCCCUCCACGCGCCGAAGGCCUCAAUAAACGGAGCUGGCGCUGCGGGUCCGGCA\
) } def
/len { sequence length } bind def

/coor [
[78.13600159 247.42070007]
[77.55436707 232.43197632]
[74.16172028 225.88418579]
[77.06337738 217.24598694]
[76.67556763 202.25100708]
[76.28775787 187.25602722]
[75.89994812 172.26103210]
[75.51214600 157.26605225]
[75.12433624 142.27105713]
[74.73652649 127.27607727]
[66.01414490 115.07279205]
[51.95221329 109.85148621]
[37.89028168 104.63018036]
[23.82835197 99.40886688]
[9.76641941 94.18756104]
[-4.32896996 89.05725861]
[-18.45722771 84.01817322]
[-32.58548737 78.97909546]
[-46.71374512 73.94001770]
[-55.82601547 74.00674438]
[-60.99136353 68.74338531]
[-70.10373688 68.69230652]
[-75.20060730 63.36260986]
[-89.19386292 57.95994568]
[-103.18711853 52.55728149]
[-117.18037415 47.15461349]
[-131.17362976 41.75194931]
[-145.16688538 36.34928131]
[-159.16014099 30.94661522]
[-161.59904480 35.80323792]
[-165.30908203 40.24442673]
[-170.21038818 43.94503021]
[-176.14195251 46.59798050]
[-182.86625671 47.93409348]
[-190.07870483 47.74059296]
[-197.42138672 45.87716293]
[-204.50067139 42.28864670]
[-218.92492676 38.17273331]
[-233.34918213 34.05681610]
[-247.82543945 30.12772179]
[-262.35128784 26.38610458]
[-276.87713623 22.64448738]
[-291.40298462 18.90287018]
[-305.92883301 15.16125298]
[-320.45468140 11.41963673]
[-334.98052979 7.67801905]
[-350.27450562 11.72841263]
[-360.66946411 1.06098306]
[-375.19531250 -2.68063402]
[-389.74502563 -6.32827616]
[-404.31805420 -9.88179016]
[-418.99826050 -12.96251774]
[-433.77038574 -15.56724072]
[-448.54251099 -18.17196274]
[-463.47659302 -12.94858456]
[-474.66693115 -22.77840614]
[-489.43905640 -25.38312721]
[-504.21118164 -27.98785019]
[-519.14526367 -22.76447296]
[-530.33557129 -32.59429169]
[-545.10772705 -35.19901657]
[-559.87982178 -37.80373764]
[-568.85253906 -36.21366501]
[-574.82556152 -40.53880310]
[-589.56274414 -43.33428192]
[-604.29998779 -46.12976074]
[-620.98846436 -43.14121628]
[-628.48004150 -58.35017776]
[-615.93933105 -69.75924683]
[-601.50451660 -60.86697006]
[-586.76727295 -58.07149124]
[-572.03009033 -55.27601242]
[-557.27508545 -52.57585526]
[-542.50299072 -49.97113037]
[-527.73089600 -47.36640930]
[-513.85339355 -52.77609634]
[-501.60644531 -42.75996780]
[-486.83432007 -40.15524292]
[-472.06222534 -37.55052185]
[-458.18472290 -42.96020889]
[-445.93777466 -32.94408035]
[-431.16564941 -30.33935738]
[-416.39355469 -27.73463440]
[-422.83953857 -41.27898026]
[-416.38885498 -54.82108688]
[-401.80996704 -58.35037994]
[-389.87985229 -49.25794220]
[-389.41748047 -34.26507187]
[-400.76452637 -24.45479774]
[-386.19152832 -20.90128326]
[-378.96411133 -22.36703491]
[-371.45367432 -17.20648384]
[-356.92782593 -13.46486664]
[-342.67288208 -17.78288460]
[-331.23892212 -6.84783030]
[-316.71307373 -3.10621309]
[-302.18722534 0.63540405]
[-287.66137695 4.37702131]
[-273.13552856 8.11863804]
[-258.60968018 11.86025524]
[-244.08383179 15.60187244]
[-239.60520935 14.00002098]
[-234.07342529 15.17955589]
[-229.23326111 19.63255882]
[-214.80900574 23.74847412]
[-200.38475037 27.86438942]
[-194.79820251 22.86033821]
[-197.87896729 8.18011570]
[-183.62512207 12.85223484]
[-178.03857422 7.84818411]
[-180.54776001 -6.94046116]
[-183.05693054 -21.72910500]
[-195.25390625 -32.15088654]
[-194.56652832 -48.17920685]
[-181.52210999 -57.51851273]
[-166.12719727 -53.00448608]
[-160.19146729 -38.09990692]
[-168.26829529 -24.23828506]
[-165.75910950 -9.44964027]
[-163.24992371 5.33900452]
[-153.75747681 16.95335960]
[-139.76422119 22.35602570]
[-125.77095795 27.75869179]
[-111.77770233 33.16135788]
[-97.78444672 38.56402588]
[-83.79119110 43.96669006]
[-69.79793549 49.36935425]
[-55.77005386 54.68145370]
[-41.67466354 59.81175613]
[-27.54640579 64.85083771]
[-13.41814709 69.88991547]
[0.71011043 74.92900085]
[8.05021286 74.21725464]
[14.98772907 80.12562561]
[29.04965973 85.34693909]
[43.11159134 90.56824493]
[57.17352295 95.78955078]
[71.23545837 101.01086426]
[80.57383728 76.47711945]
[107.20146179 68.58226776]
[115.60542297 56.15756226]
[124.00938416 43.73285294]
[124.63413239 27.34560966]
[139.26255798 19.93338585]
[152.84620667 29.12124252]
[151.41137695 45.45750046]
[136.43409729 52.13681793]
[128.03013611 64.56152344]
[119.62616730 76.98623657]
[128.26948547 89.24564362]
[142.79533386 85.50402832]
[157.32118225 81.76241302]
[171.84703064 78.02079010]
[183.28097534 67.08573914]
[197.53593445 71.40375519]
[212.06179810 67.66213989]
[226.58764648 63.92052078]
[230.28417969 60.29557800]
[234.57070923 58.60555649]
[238.61679077 58.75305939]
[241.74937439 60.32712555]
[256.40939331 57.15156555]
[271.06939697 53.97600937]
[285.72940063 50.80044937]
[297.57876587 40.31697464]
[311.65557861 45.18449020]
[326.31558228 42.00893021]
[338.16494751 31.52545547]
[352.24172974 36.39296722]
[366.90176392 33.21741104]
[381.56176758 30.04185104]
[391.42114258 17.38595009]
[407.46417236 17.34759521]
[417.38397217 29.95621300]
[413.57092285 45.53954697]
[398.95010376 52.14339828]
[384.73730469 44.70185852]
[370.07730103 47.87741852]
[355.41729736 51.05297470]
[344.61651611 61.30931473]
[329.49111938 56.66893768]
[314.83111572 59.84449768]
[304.03033447 70.10083771]
[288.90496826 65.46045685]
[274.24493408 68.63601685]
[259.58493042 71.81157684]
[244.92492676 74.98713684]
[230.32925415 78.44637299]
[215.80340576 82.18798828]
[201.27755737 85.92960358]
[190.88259888 96.59703827]
[175.58865356 92.54663849]
[161.06280518 96.28826141]
[146.53695679 100.02987671]
[132.01109314 103.77149200]
[128.62887573 107.05258179]
[124.96809387 109.56358337]
[121.16593170 111.29106903]
[131.52986145 122.13490295]
[141.89379883 132.97874451]
[152.25773621 143.82257080]
[162.62167358 154.66641235]
[167.59086609 156.11959839]
[171.16036987 159.03321838]
[173.00926208 162.63519287]
[173.16709900 166.13745117]
[183.10276794 177.37500000]
[193.03843689 188.61254883]
[201.04899597 192.95637512]
[203.02876282 200.06019592]
[212.81832886 211.42524719]
[228.27059937 210.00865173]
[241.58715820 217.97413635]
[247.64752197 232.25880432]
[244.12133789 247.36991882]
[232.36450195 257.49694824]
[216.89776611 258.74581909]
[203.66841125 250.63635254]
[197.76336670 236.28677368]
[201.45327759 221.21481323]
[191.66371155 209.84976196]
[181.80088806 198.54821777]
[171.86521912 187.31066895]
[161.92955017 176.07312012]
[151.77784729 165.03034973]
[141.41390991 154.18650818]
[131.04997253 143.34268188]
[120.68602753 132.49884033]
[110.32209015 121.65500641]
[101.05516052 126.36467743]
[89.73151398 126.88826752]
[90.11932373 141.88325500]
[90.50712585 156.87823486]
[90.89493561 171.87322998]
[91.28274536 186.86820984]
[91.67055511 201.86320496]
[92.05835724 216.85818481]
[92.54309082 231.85035706]
[93.12471771 246.83906555]
[102.32180786 260.41647339]
[94.91953278 275.04992676]
[78.53271484 275.68582153]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 239]
[2 238]
[4 237]
[5 236]
[6 235]
[7 234]
[8 233]
[9 232]
[10 231]
[11 138]
[12 137]
[13 136]
[14 135]
[15 134]
[16 132]
[17 131]
[18 130]
[19 129]
[21 128]
[23 127]
[24 126]
[25 125]
[26 124]
[27 123]
[28 122]
[29 121]
[37 106]
[38 105]
[39 104]
[40 101]
[41 100]
[42 99]
[43 98]
[44 97]
[45 96]
[46 95]
[48 93]
[49 92]
[50 90]
[51 89]
[52 83]
[53 82]
[54 81]
[56 79]
[57 78]
[58 77]
[60 75]
[61 74]
[62 73]
[64 72]
[65 71]
[66 70]
[110 120]
[111 119]
[112 118]
[140 149]
[141 148]
[142 147]
[150 195]
[151 194]
[152 193]
[153 192]
[155 190]
[156 189]
[157 188]
[161 187]
[162 186]
[163 185]
[164 184]
[166 182]
[167 181]
[169 179]
[170 178]
[171 177]
[198 229]
[199 228]
[200 227]
[201 226]
[202 225]
[206 224]
[207 223]
[208 222]
[210 221]
[211 220]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
