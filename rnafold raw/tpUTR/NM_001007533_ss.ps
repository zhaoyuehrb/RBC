%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 07:52:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCAGCUUUGCCCGCCCGCCCCCGCGCCCAGGGCCGCCUCCCUGGAGAAGCCGCGCGUCGCCCAUGGGCCAGCACGUGCCCCACCCGUGGGCCAGGGGCGGCCGGACCCGUCCCUCCACGACCCCGCCACCCCUCCUAGGCCUGGCUUUGUCCCCAGGUGAAUUUUUUACUGUGACACUUUUUACUUUUUCAAUAAACGUGACUCCCAGGUGAGGGGGCCUGGGUCUACACACGUGG\
) } def
/len { sequence length } bind def

/coor [
[-0.05933844 629.14331055]
[-3.97349024 643.62365723]
[3.63849521 657.21392822]
[-0.53728878 671.84326172]
[-13.54044437 679.01635742]
[-17.45459557 693.49664307]
[-8.36560917 706.22161865]
[-9.63401413 721.80767822]
[-20.66090775 732.89556885]
[-36.23972702 734.24993896]
[-49.01463318 725.23132324]
[-52.95370483 710.09802246]
[-46.19702911 695.99548340]
[-31.93490791 689.58251953]
[-28.02075577 675.10223389]
[-35.63924789 662.35485840]
[-31.87601852 647.61401367]
[-18.45380211 639.70947266]
[-14.53964996 625.22918701]
[-20.28828812 614.59906006]
[-17.15948677 602.51190186]
[-6.30060291 595.57385254]
[-2.19565821 581.14648438]
[1.90928662 566.71911621]
[6.01423168 552.29168701]
[10.11917591 537.86431885]
[13.45699024 523.24041748]
[16.01836967 508.46069336]
[18.57975006 493.68099976]
[21.14113045 478.90133667]
[23.70251083 464.12164307]
[26.26389122 449.34194946]
[24.31280899 442.22787476]
[28.95785713 434.38461304]
[31.71409988 419.64001465]
[26.44717216 405.70773315]
[36.58850479 393.56423950]
[39.34474564 378.81964111]
[42.10099030 364.07504272]
[44.85723114 349.33044434]
[47.51610184 334.56799316]
[50.07748413 319.78829956]
[52.63886261 305.00860596]
[55.20024109 290.22891235]
[57.76162338 275.44921875]
[55.81053925 268.33514404]
[60.45558929 260.49188232]
[63.21183014 245.74728394]
[61.35482025 238.60809326]
[66.10299683 230.82682800]
[61.02042389 216.82623291]
[71.32115936 204.81767273]
[74.27178955 190.11074829]
[77.22241211 175.40380859]
[80.17304230 160.69688416]
[62.36497116 151.58317566]
[48.25085449 137.40649414]
[39.21601486 119.55828857]
[36.14723587 99.79039764]
[39.34572220 80.04309082]
[25.74646187 73.71378326]
[12.14719963 67.38448334]
[-1.45206225 61.05517960]
[-15.05132389 54.72587585]
[-28.65058708 48.39657211]
[-42.24984741 42.06726837]
[-55.84910965 35.73796844]
[-69.44837189 29.40866470]
[-84.13243103 37.82126236]
[-100.77133179 35.83666611]
[-112.82311249 24.43490410]
[-115.66857147 8.25906754]
[-129.35018921 2.10982037]
[-145.60188293 4.30399323]
[-155.41246033 -8.83696175]
[-148.68963623 -23.79475594]
[-132.34927368 -25.18209457]
[-123.20094299 -11.57180119]
[-109.51931763 -5.42255449]
[-98.60898590 -13.09943199]
[-85.22309875 -14.39784527]
[-72.84314728 -8.87277031]
[-64.74206543 2.13209081]
[-63.11906815 15.80940247]
[-49.51980591 22.13870430]
[-35.92054367 28.46800804]
[-22.32128334 34.79730988]
[-8.72202110 41.12661362]
[4.87724066 47.45591736]
[18.47650337 53.78522110]
[32.07576370 60.11452103]
[45.67502594 66.44382477]
[62.19585419 48.54063797]
[84.21928406 38.12764359]
[82.24503326 23.25813293]
[80.27078247 8.38862228]
[78.29653168 -6.48088789]
[76.32228088 -21.35039902]
[66.83596039 -34.01216125]
[72.83082581 -47.64707184]
[70.85657501 -62.51658249]
[68.88232422 -77.38609314]
[59.39599991 -90.04785156]
[65.39086914 -103.68276978]
[63.41661835 -118.55227661]
[51.85889816 -125.44691467]
[46.45577621 -137.55998230]
[48.97264481 -150.38433838]
[58.27233505 -159.28765869]
[56.49452591 -174.18194580]
[54.71672058 -189.07621765]
[42.14225388 -198.65005493]
[40.10331345 -214.32226562]
[49.80956268 -226.79479980]
[65.50245667 -228.66793823]
[77.87168121 -218.83036804]
[79.57878876 -203.11854553]
[69.61099243 -190.85401917]
[71.38880157 -175.95974731]
[73.16661072 -161.06547546]
[86.81999207 -151.23168945]
[89.17415619 -134.22975159]
[78.28613281 -120.52652740]
[80.26038361 -105.65701294]
[89.60549164 -94.05882263]
[83.75183868 -79.36034393]
[85.72608948 -64.49082947]
[87.70034027 -49.62132263]
[97.04544830 -38.02312851]
[91.19178772 -23.32464790]
[93.16603851 -8.45513821]
[95.14028931 6.41437149]
[97.11454010 21.28388214]
[99.08879089 36.15339279]
[107.46178436 35.53705978]
[115.97671509 36.03136063]
[124.48471832 37.66222382]
[132.83271790 40.43545532]
[140.86608887 44.33608627]
[148.43156433 49.32808685]
[159.24607849 38.93355942]
[170.06059265 28.53903198]
[180.87512207 18.14450645]
[191.68963623 7.74998045]
[202.50415039 -2.64454603]
[200.24734497 -17.99662781]
[207.47508240 -31.72759438]
[221.40814209 -38.55760956]
[236.68901062 -35.86039352]
[247.44184875 -24.67308044]
[249.53199768 -9.29741955]
[242.15573120 4.35433292]
[228.14938354 11.03279877]
[212.89868164 8.16997337]
[202.08416748 18.56449890]
[191.26963806 28.95902634]
[180.45512390 39.35354996]
[169.64060974 49.74807739]
[158.82608032 60.14260483]
[161.62747192 67.09977722]
[175.54180908 61.49699783]
[189.45616150 55.89422226]
[203.37049866 50.29144669]
[217.28483582 44.68866730]
[231.19926453 39.08610535]
[236.80160522 53.00062180]
[222.88761902 58.60300827]
[208.97326660 64.20578766]
[195.05892944 69.80856323]
[181.14459229 75.41133881]
[167.23025513 81.01411438]
[170.03163147 87.97129059]
[185.03163147 87.97129059]
[200.03163147 87.97129059]
[215.03163147 87.97129059]
[226.02832031 76.62014771]
[241.83172607 76.45305634]
[253.06597900 87.56914520]
[253.06597900 103.37342834]
[241.83172607 114.48951721]
[226.02832031 114.32242584]
[215.03163147 102.97129059]
[200.03163147 102.97129059]
[185.03163147 102.97129059]
[170.03163147 102.97129059]
[168.65589905 111.51302338]
[166.24981689 119.76179504]
[162.86445618 127.59478760]
[158.56535339 134.89724731]
[153.43127441 141.56420898]
[147.55285645 147.50198364]
[141.03097534 152.62947083]
[133.97508240 156.87922668]
[126.50137329 160.19834900]
[118.73084259 162.54911804]
[110.78740692 163.90931702]
[102.79586029 164.27244568]
[94.87996674 163.64750671]
[91.92934418 178.35443115]
[88.97872162 193.06137085]
[86.02809143 207.76829529]
[90.89961243 222.82083130]
[80.80992126 233.77745056]
[77.95642853 248.50354004]
[75.20018768 263.24813843]
[72.54131317 278.01058960]
[69.97993469 292.79028320]
[67.41855621 307.56997681]
[64.85717773 322.34967041]
[62.29579544 337.12936401]
[63.91241455 346.10043335]
[59.60182953 352.08670044]
[56.84558487 366.83129883]
[54.08934402 381.57589722]
[51.33309937 396.32049561]
[56.40288544 411.30740356]
[46.45869446 422.39624023]
[43.70245361 437.14083862]
[41.04358292 451.90332031]
[38.48220444 466.68301392]
[35.92082214 481.46270752]
[33.35944366 496.24240112]
[30.79806328 511.02209473]
[28.23668289 525.80175781]
[39.79766464 516.24438477]
[54.76165390 515.20562744]
[67.53231812 523.07391357]
[73.33360291 536.90667725]
[69.99590302 551.53057861]
[58.76748276 561.47656250]
[43.84760666 563.02490234]
[30.81611633 555.59661865]
[24.54656029 541.96923828]
[20.44161606 556.39666748]
[16.33667183 570.82403564]
[12.23172665 585.25140381]
[8.12678146 599.67883301]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 19]
[2 18]
[5 15]
[6 14]
[22 237]
[23 236]
[24 235]
[25 234]
[26 233]
[27 224]
[28 223]
[29 222]
[30 221]
[31 220]
[32 219]
[34 218]
[35 217]
[37 215]
[38 214]
[39 213]
[40 212]
[41 210]
[42 209]
[43 208]
[44 207]
[45 206]
[47 205]
[48 204]
[50 203]
[52 201]
[53 200]
[54 199]
[55 198]
[60 92]
[61 91]
[62 90]
[63 89]
[64 88]
[65 87]
[66 86]
[67 85]
[68 84]
[72 79]
[73 78]
[94 134]
[95 133]
[96 132]
[97 131]
[98 130]
[100 128]
[101 127]
[102 126]
[104 124]
[105 123]
[109 120]
[110 119]
[111 118]
[140 159]
[141 158]
[142 157]
[143 156]
[144 155]
[145 154]
[172 185]
[173 184]
[174 183]
[175 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
