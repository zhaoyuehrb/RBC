%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 08:54:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGAGAAAGCUGAUGGCCUUGUUUCAAAAUUCUCAUUUUUCAUUUCUUUUCUUUCUUGAAUUCUUAUUUUGGUUUGCCUGGAUGUUUUGCAGAUCCCAAUCUUUCUUUUAAGCUUCUGGGUCUAUUAAACUAGGUAGAUCUUUUCGUAUUGAUCAUAAUAAAAGUGAAUCAUUACUAUUGGAA\
) } def
/len { sequence length } bind def

/coor [
[23.41290283 235.44628906]
[8.70033455 237.46517944]
[-0.15783176 249.57026672]
[-9.01599789 261.67532349]
[-17.87416458 273.78042603]
[-26.73233032 285.88549805]
[-35.59049606 297.99057007]
[-31.00556183 312.69717407]
[-35.90225601 327.11508179]
[-48.20428848 335.78250122]
[-63.07312775 335.54681396]
[-71.93129730 347.65188599]
[-80.78945923 359.75695801]
[-74.51705933 373.77667236]
[-76.11082458 389.05264282]
[-85.14203644 401.47573853]
[-99.18134308 407.70416260]
[-114.45225525 406.06253052]
[-126.84695435 396.99240112]
[-133.03134155 382.93365479]
[-131.34185791 367.66796875]
[-122.23293304 355.30172729]
[-108.15485382 349.16143799]
[-92.89453888 350.89877319]
[-84.03636932 338.79370117]
[-75.17820740 326.68862915]
[-79.90089417 312.58776855]
[-75.36113739 298.24014282]
[-63.10011673 289.21124268]
[-47.69557571 289.13241577]
[-38.83740616 277.02731323]
[-29.97924232 264.92224121]
[-21.12107468 252.81716919]
[-12.26290894 240.71209717]
[-3.40474224 228.60700989]
[-5.93121147 213.97306824]
[2.87978745 201.57060242]
[18.24635315 199.01983643]
[27.10451889 186.91476440]
[35.96268463 174.80967712]
[44.82085037 162.70460510]
[53.67901993 150.59953308]
[46.88348770 143.41177368]
[41.19232178 135.32142639]
[36.72385025 126.49668884]
[33.57097626 117.12105560]
[31.79925537 107.38945007]
[31.44552040 97.50421143]
[32.51712799 87.67086029]
[18.14456749 83.37789917]
[3.77200818 79.08493805]
[-10.01336384 86.81404114]
[-25.20354652 82.45125580]
[-32.78647232 68.58493805]
[-28.26332474 53.44172668]
[-14.31760979 46.00582886]
[0.77692860 50.68882751]
[8.06496906 64.71237946]
[22.43752861 69.00534058]
[36.81008911 73.29830170]
[41.09815979 64.83583069]
[46.51272964 57.04586792]
[52.95023727 50.07740402]
[60.28757095 44.06370926]
[68.38439941 39.11979294]
[77.08588409 35.34020615]
[86.22559357 32.79723740]
[95.62873840 31.53951836]
[105.11547852 31.59110069]
[114.50439453 32.95100021]
[123.61590576 35.59321213]
[130.28849792 22.15905380]
[136.96107483 8.72489548]
[143.63366699 -4.70926189]
[150.30625916 -18.14341927]
[156.97883606 -31.57757759]
[163.65142822 -45.01173401]
[170.32400513 -58.44589233]
[176.99659729 -71.88005066]
[183.66918945 -85.31420898]
[183.33537292 -90.57119751]
[184.90820312 -94.98072815]
[187.73989868 -97.95520020]
[191.04286194 -99.25215912]
[198.39451599 -112.32706451]
[205.74615479 -125.40196991]
[213.09780884 -138.47688293]
[206.79206848 -152.53190613]
[209.93475342 -167.43080139]
[221.11558533 -177.50318909]
[235.90646362 -179.04202271]
[243.25811768 -192.11692810]
[250.60977173 -205.19184875]
[257.96142578 -218.26675415]
[265.31307983 -231.34165955]
[272.66473389 -244.41656494]
[264.09143066 -258.54159546]
[263.80584717 -274.96856689]
[271.79132080 -289.21936035]
[285.78921509 -297.45675659]
[301.93710327 -297.51748657]
[309.06448364 -310.71600342]
[316.19183350 -323.91452026]
[311.42910767 -338.98410034]
[318.79116821 -352.96893311]
[333.91024780 -357.57205200]
[347.81646729 -350.06256104]
[352.25949097 -334.89562988]
[344.60336304 -321.06961060]
[329.39035034 -316.78717041]
[322.26296997 -303.58865356]
[315.13562012 -290.39013672]
[323.05438232 -279.24749756]
[325.40597534 -265.71423340]
[321.67443848 -252.42591858]
[312.53427124 -241.99557495]
[299.72915649 -236.49963379]
[285.73962402 -237.06491089]
[278.38796997 -223.99000549]
[271.03631592 -210.91510010]
[263.68466187 -197.84019470]
[256.33300781 -184.76527405]
[248.98136902 -171.69036865]
[255.35165405 -158.25320435]
[252.55499268 -143.46662903]
[241.45797729 -133.04023743]
[226.17272949 -131.12522888]
[218.82107544 -118.05031586]
[211.46942139 -104.97541046]
[204.11776733 -91.90050507]
[197.10334778 -78.64162445]
[190.43075562 -65.20746613]
[183.75816345 -51.77330780]
[177.08558655 -38.33914948]
[170.41299438 -24.90499115]
[163.74041748 -11.47083378]
[157.06782532 1.96332407]
[150.39523315 15.39748192]
[143.72265625 28.83164024]
[137.05006409 42.26579666]
[151.40388489 54.57328415]
[161.85258484 70.33179474]
[167.60241699 88.34416199]
[168.21655273 107.24201965]
[163.64834595 125.58970642]
[154.24484253 141.99337769]
[165.03097534 152.41734314]
[175.81712341 162.84130859]
[191.11738586 166.86776733]
[194.89237976 181.27606201]
[205.67851257 191.70002747]
[216.46466064 202.12399292]
[227.25080872 212.54795837]
[238.12554932 222.87947083]
[249.08808899 233.11776733]
[260.05062866 243.35606384]
[275.55014038 241.28263855]
[288.72848511 249.70079041]
[293.36322021 264.63574219]
[287.26599121 279.03567505]
[273.31573486 286.10137939]
[258.09930420 282.49661255]
[248.80145264 269.92349243]
[249.81231689 254.31860352]
[238.84977722 244.08030701]
[227.88723755 233.84201050]
[220.83592224 231.56890869]
[216.82684326 223.33410645]
[206.04069519 212.91014099]
[195.25454712 202.48617554]
[184.46841431 192.06219482]
[169.93963623 188.78132629]
[165.39315796 173.62745667]
[154.60700989 163.20347595]
[143.82086182 152.77951050]
[126.02671814 163.47090149]
[105.84922028 168.35006714]
[85.13609314 166.97021484]
[65.78409576 159.45768738]
[56.92593002 171.56277466]
[48.06776047 183.66784668]
[39.20959473 195.77291870]
[30.35142899 207.87800598]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 35]
[3 34]
[4 33]
[5 32]
[6 31]
[7 30]
[11 26]
[12 25]
[13 24]
[38 183]
[39 182]
[40 181]
[41 180]
[42 179]
[49 60]
[50 59]
[51 58]
[71 140]
[72 139]
[73 138]
[74 137]
[75 136]
[76 135]
[77 134]
[78 133]
[79 132]
[80 131]
[84 130]
[85 129]
[86 128]
[87 127]
[91 123]
[92 122]
[93 121]
[94 120]
[95 119]
[96 118]
[101 112]
[102 111]
[103 110]
[146 175]
[147 174]
[148 173]
[150 171]
[151 170]
[152 169]
[153 168]
[154 166]
[155 165]
[156 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
