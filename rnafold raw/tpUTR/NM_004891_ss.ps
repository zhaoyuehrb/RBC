%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 23:21:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGGUGGAUUGAAAAUGACUUUGAUUUAUAAAGAGAAGACUGAGGGCGGGGAUACUGAUUCAGAAAUCCUGUAGCGUGUAAUAAAAGAAGAGGAAAUGGCAUGGAAUCACUGCCUCCUGUGAUUUGAAGGCCAUUGUGAAGGAAAACAAUGCAGUGAAAGAAAGUUCUUCAUAUUAGGACAGAUAUCAUUGCAUCACAUUUAUUUAUCUUUCUGGGUAUUUUUAUAGCCCUUAAUAAAAAAUAUUAAAAUAGCCU\
GUGC\
) } def
/len { sequence length } bind def

/coor [
[30.22634888 610.94940186]
[20.64524269 610.37426758]
[11.17587376 608.81219482]
[1.91962087 606.28015137]
[-3.90424991 620.10339355]
[-9.72812080 633.92663574]
[-15.55199146 647.74993896]
[-21.37586212 661.57318115]
[-27.19973373 675.39642334]
[-33.02360535 689.21966553]
[-38.84747314 703.04296875]
[-44.67134476 716.86621094]
[-50.49521637 730.68945312]
[-44.30411911 745.23065186]
[-50.28593445 759.85919189]
[-64.89175415 765.89617920]
[-79.45620728 759.76000977]
[-85.33846283 745.09118652]
[-79.04868317 730.59246826]
[-64.31847382 724.86560059]
[-58.49460602 711.04235840]
[-52.67073441 697.21905518]
[-46.84686279 683.39581299]
[-41.02299500 669.57257080]
[-35.19912338 655.74932861]
[-29.37525177 641.92602539]
[-23.55138206 628.10278320]
[-17.72751045 614.27954102]
[-11.90363979 600.45623779]
[-29.48983383 588.60150146]
[-43.92674255 573.05700684]
[-54.45738220 554.63409424]
[-60.52872086 534.29486084]
[-61.82070160 513.10241699]
[-58.26314163 492.16494751]
[-50.03952026 472.57791138]
[-37.57751465 455.36676025]
[-21.52677727 441.43319702]
[-2.72505498 431.50793457]
[17.84553337 426.11239624]
[39.10979462 425.53131104]
[41.63515091 410.74542236]
[44.16050720 395.95950317]
[46.68585968 381.17361450]
[49.21121597 366.38772583]
[51.73657227 351.60183716]
[54.26192856 336.81594849]
[56.51889420 321.98672485]
[58.50673294 307.11901855]
[60.49457169 292.25131226]
[62.48241043 277.38360596]
[64.47024536 262.51593018]
[66.45808411 247.64822388]
[68.44592285 232.78051758]
[70.43376160 217.91282654]
[72.42160034 203.04512024]
[70.85908508 200.75274658]
[70.09629059 197.71261597]
[70.41908264 194.22119141]
[72.00266266 190.67175293]
[74.88151550 187.51380920]
[77.58534241 172.75950623]
[80.28916931 158.00521851]
[82.99299622 143.25091553]
[85.69682312 128.49661255]
[88.40065002 113.74231720]
[81.11089325 100.63279724]
[67.15094757 95.14464569]
[53.19099426 89.65649414]
[39.23104095 84.16835022]
[29.97842216 96.10843658]
[17.73587608 104.95698547]
[3.49585724 109.99668121]
[-11.58726215 110.81897736]
[-26.29076195 107.35721588]
[-39.42269516 99.89202881]
[-49.91851044 89.02857971]
[-56.92736435 75.64752197]
[-59.88108063 60.83360291]
[-58.54021072 45.78771210]
[-53.01345444 31.72956085]
[-43.74884415 19.79877472]
[-31.49741554 10.96253109]
[-17.25234032 5.93714523]
[-2.16840267 5.13000107]
[12.53161144 8.60653114]
[25.65603638 16.08490753]
[36.14093781 26.95889473]
[43.13634491 40.34698486]
[46.07517624 55.16386414]
[44.71919250 70.20839691]
[58.67914200 75.69654846]
[72.63909149 81.18469238]
[86.59904480 86.67284393]
[97.26953125 76.13051605]
[91.95045471 62.10527039]
[86.63138580 48.08002853]
[81.31230927 34.05478287]
[75.99324036 20.02954102]
[70.67416382 6.00429726]
[56.14097977 -5.32655811]
[59.66635513 -22.53106499]
[47.41637421 -32.54348373]
[49.96058655 -47.21918488]
[44.47243881 -61.17913818]
[38.98428726 -75.13908386]
[33.49613953 -89.09903717]
[28.00799179 -103.05899048]
[22.51984406 -117.01893616]
[17.03169441 -130.97889709]
[1.97824693 -134.74363708]
[-7.96155500 -146.65917969]
[-8.96565437 -162.14372253]
[-0.64795440 -175.24317932]
[13.79321957 -180.92050171]
[28.80494118 -176.99267578]
[38.61489868 -164.97001648]
[39.45095825 -149.47547913]
[30.99164581 -136.46704102]
[36.47979355 -122.50708771]
[41.96794128 -108.54713440]
[47.45609283 -94.58718872]
[52.94424057 -80.62723541]
[58.43238831 -66.66728210]
[63.92053604 -52.70733261]
[75.77796936 -43.69342422]
[73.62630463 -28.01921272]
[84.57223511 -22.91543007]
[89.26833344 -11.35515690]
[84.69940948 0.68522412]
[90.01847839 14.71046734]
[95.33755493 28.73571205]
[100.65663147 42.76095581]
[105.97570038 56.78619766]
[111.29477692 70.81143951]
[125.79145050 74.66454315]
[137.37222290 65.13114166]
[148.95298767 55.59774017]
[160.53376770 46.06433868]
[145.57926941 47.23192596]
[132.01010132 40.83837128]
[123.38981628 28.56275749]
[121.98229218 13.62894154]
[128.15718079 -0.04112503]
[140.29283142 -8.85737514]
[155.20211792 -10.50446510]
[168.96955872 -4.54983044]
[177.97950745 7.44270706]
[179.86573792 22.32363892]
[174.13442993 36.18286896]
[186.77989197 28.11488533]
[199.42535400 20.04690170]
[212.07081604 11.97891712]
[224.71627808 3.91093254]
[237.36172485 -4.15705204]
[250.00718689 -12.22503662]
[262.65264893 -20.29302216]
[260.43887329 -34.23534393]
[263.69079590 -47.92819214]
[271.88644409 -59.31611252]
[283.76419067 -66.70255280]
[297.51705933 -69.00259399]
[311.06750488 -65.90219879]
[322.38125610 -57.90062332]
[335.12326050 -65.81523132]
[347.86529541 -73.72983551]
[360.60729980 -81.64443207]
[373.34930420 -89.55903625]
[375.38796997 -105.06316376]
[386.95040894 -115.59143066]
[402.57717896 -116.17269897]
[414.88980103 -106.53253174]
[418.07467651 -91.22270966]
[410.62792969 -77.47206116]
[396.06576538 -71.77322388]
[381.26391602 -76.81701660]
[368.52191162 -68.90242004]
[355.77987671 -60.98781204]
[343.03787231 -53.07320786]
[330.29583740 -45.15860367]
[332.30432129 -29.29146194]
[327.16650391 -14.08389854]
[315.86486816 -2.60288286]
[300.63031006 2.81278181]
[284.50189209 1.02877903]
[270.72064209 -7.64756250]
[258.07516479 0.42042193]
[245.42971802 8.48840618]
[232.78425598 16.55639076]
[220.13879395 24.62437630]
[207.49333191 32.69235992]
[194.84788513 40.76034546]
[182.20242310 48.82833099]
[170.06716919 57.64510727]
[158.48638916 67.17851257]
[146.90562439 76.71191406]
[135.32485962 86.24531555]
[150.24241638 87.81569672]
[163.26000977 95.26836395]
[172.16687012 107.33766174]
[175.45037842 121.97386932]
[172.55288696 136.69136047]
[163.96649170 148.99069214]
[151.14938354 156.78311157]
[136.27825928 158.74522400]
[121.87866974 154.54382324]
[110.39604950 144.89242554]
[103.78047180 131.43011475]
[103.15494537 116.44614410]
[100.45111847 131.20043945]
[97.74729156 145.95474243]
[95.04346466 160.70903015]
[92.33964539 175.46333313]
[89.63581848 190.21763611]
[87.28929901 205.03295898]
[85.30146027 219.90066528]
[83.31362152 234.76835632]
[81.32578278 249.63606262]
[79.33794403 264.50375366]
[77.35011292 279.37145996]
[75.36227417 294.23916626]
[73.37443542 309.10687256]
[71.38659668 323.97454834]
[73.35002899 328.74536133]
[73.31129456 333.33786011]
[71.66825104 337.02539062]
[69.04782104 339.34130859]
[66.52246094 354.12719727]
[63.99710846 368.91308594]
[61.47175217 383.69897461]
[58.94639587 398.48486328]
[56.42103958 413.27075195]
[53.89568710 428.05664062]
[63.08481216 430.92587280]
[71.92727661 434.72903442]
[80.32846832 439.42514038]
[88.19851685 444.96377563]
[95.45326233 451.28546143]
[102.01514435 458.32226562]
[107.81404114 465.99877930]
[112.78801727 474.23260498]
[116.88398743 482.93545532]
[120.05827332 492.01409912]
[122.27708435 501.37115479]
[123.51685333 510.90643311]
[123.76451111 520.51776123]
[123.01761627 530.10223389]
[121.28437805 539.55718994]
[118.58356476 548.78143311]
[114.94429016 557.67620850]
[110.40573120 566.14636230]
[105.01667786 574.10125732]
[98.83501434 581.45587158]
[91.92710114 588.13153076]
[84.36705780 594.05688477]
[76.23598480 599.16870117]
[67.62107086 603.41235352]
[58.61465836 606.74261475]
[49.31328201 609.12402344]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 29]
[5 28]
[6 27]
[7 26]
[8 25]
[9 24]
[10 23]
[11 22]
[12 21]
[13 20]
[41 233]
[42 232]
[43 231]
[44 230]
[45 229]
[46 228]
[47 227]
[48 223]
[49 222]
[50 221]
[51 220]
[52 219]
[53 218]
[54 217]
[55 216]
[56 215]
[61 214]
[62 213]
[63 212]
[64 211]
[65 210]
[66 209]
[67 94]
[68 93]
[69 92]
[70 91]
[95 135]
[96 134]
[97 133]
[98 132]
[99 131]
[100 130]
[102 127]
[104 125]
[105 124]
[106 123]
[107 122]
[108 121]
[109 120]
[110 119]
[136 197]
[137 196]
[138 195]
[139 194]
[150 193]
[151 192]
[152 191]
[153 190]
[154 189]
[155 188]
[156 187]
[157 186]
[164 180]
[165 179]
[166 178]
[167 177]
[168 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
