%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 09:28:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCUCGCCCUCCUAGGGCCUGGGUACAGGGCAUGAGUUGGACGGACCCCAGGGUUAUUAUUGCCUUUGCUUUUUAGCAAAUCUGCUGUGGCAGGCUGUGGAUUUUGAGAGUCAGGGGAGGGGUGUGUGUGUGAGGGGGUGGCUUACUCCGGAGUCUGGGAUUCAUCCCGUCAUUUCUUUCAAUAAAUAAUUAUUGGAUAGCUA\
) } def
/len { sequence length } bind def

/coor [
[39.06085205 102.05818176]
[40.31737900 87.51798248]
[26.12423897 82.66465759]
[11.93109894 77.81133270]
[-2.26204181 72.95800781]
[-16.45518303 68.10468292]
[-32.01647568 70.96067810]
[-41.55569839 59.52159882]
[-55.74884033 54.66827393]
[-70.04978943 50.14246368]
[-84.45098114 45.94656372]
[-98.85217285 41.75065994]
[-113.45760345 38.33285522]
[-128.22526550 35.70298386]
[-142.99291992 33.07311249]
[-157.93588257 38.27105331]
[-169.10948181 28.42219353]
[-183.87713623 25.79232025]
[-198.64479065 23.16244888]
[-213.41246033 20.53257561]
[-228.18011475 17.90270424]
[-242.94776917 15.27283192]
[-253.95606995 22.00041962]
[-266.20440674 19.50281143]
[-273.23300171 9.65407562]
[-287.95864868 6.79820871]
[-302.68426514 3.94234204]
[-317.40988159 1.08647549]
[-332.13552856 -1.76939118]
[-347.12451172 -2.34393215]
[-362.02554321 -0.62368083]
[-376.92657471 1.09657061]
[-391.82760620 2.81682205]
[-401.63784790 14.91627884]
[-416.77410889 16.44858742]
[-428.24862671 7.02145338]
[-443.14965820 8.74170494]
[-458.05068970 10.46195602]
[-447.02276611 20.62978745]
[-446.27282715 35.61103058]
[-456.23016357 46.82937241]
[-471.19454956 47.86266327]
[-482.59927368 38.11936569]
[-483.91552734 23.17722893]
[-474.39053345 11.59056950]
[-489.38656616 11.93534756]
[-504.38259888 12.28012657]
[-519.37866211 12.62490463]
[-533.09960938 21.60636139]
[-547.61431885 13.97383881]
[-547.99127197 -2.42097592]
[-533.84265137 -10.71250439]
[-519.72338867 -2.37113237]
[-504.72738647 -2.71591091]
[-489.73135376 -3.06068945]
[-474.73529053 -3.40546799]
[-459.77096558 -4.43907499]
[-444.86993408 -6.15932655]
[-429.96890259 -7.87957811]
[-420.94421387 -19.67324638]
[-405.85693359 -21.63009644]
[-393.54785156 -12.08420944]
[-378.64682007 -13.80446053]
[-363.74578857 -15.52471256]
[-348.84475708 -17.24496269]
[-344.64886475 -31.64615822]
[-356.29397583 -41.10084152]
[-367.93911743 -50.55552673]
[-379.58422852 -60.01021194]
[-391.22933960 -69.46489716]
[-402.87448120 -78.91958618]
[-419.14495850 -80.96993256]
[-425.25424194 -96.18862152]
[-414.91766357 -108.91996002]
[-398.76858521 -106.06704712]
[-393.41979980 -90.56470490]
[-381.77465820 -81.11002350]
[-370.12954712 -71.65533447]
[-358.48440552 -62.20065308]
[-346.83929443 -52.74596786]
[-335.19418335 -43.29128265]
[-330.91098022 -37.87491226]
[-328.26440430 -32.08943558]
[-327.21496582 -26.35109520]
[-327.62680054 -21.04317093]
[-329.27963257 -16.49501610]
[-314.55401611 -13.63914967]
[-299.82839966 -10.78328228]
[-285.10278320 -7.92741632]
[-270.37713623 -5.07154942]
[-254.12176514 -11.67899895]
[-240.31790161 0.50517219]
[-225.55024719 3.13504434]
[-210.78257751 5.76491690]
[-196.01492310 8.39478874]
[-181.24726868 11.02466106]
[-166.47959900 13.65453339]
[-152.59292603 8.26848507]
[-140.36305237 18.30545235]
[-125.59539032 20.93532562]
[-110.82773590 23.56519699]
[-119.45289612 11.29300976]
[-118.30045319 -3.66265368]
[-107.89695740 -14.46854401]
[-92.99577332 -16.18744469]
[-80.40525055 -8.03399086]
[-75.87801361 6.26650286]
[-81.48255157 20.18013382]
[-94.65627289 27.34946442]
[-80.25508118 31.54536819]
[-65.85388184 35.74127197]
[-62.60019684 34.37104797]
[-58.52035904 34.51157379]
[-54.33298111 36.53430939]
[-50.89551544 40.47513199]
[-36.70237732 45.32845688]
[-22.15626907 42.12532043]
[-11.60185909 53.91154099]
[2.59128213 58.76486588]
[16.78442383 63.61819077]
[30.97756386 68.47151184]
[45.17070389 73.32483673]
[54.71032715 59.17523575]
[67.79747772 48.22343063]
[83.40704346 41.32726669]
[100.31632996 39.02692413]
[117.20083618 41.50259018]
[132.73800659 48.56034088]
[145.71081543 59.64734650]
[155.10311890 73.89516449]
[160.17919922 90.18777466]
[175.16819763 89.61322784]
[190.15718079 89.03868866]
[205.14617920 88.46414948]
[218.63986206 80.20394135]
[231.65415955 87.44807434]
[246.64314270 86.87353516]
[261.63214111 86.29899597]
[276.62112427 85.72444916]
[291.61013794 85.14990997]
[306.59912109 84.57537079]
[321.58810425 84.00083160]
[326.66110229 74.60584259]
[335.11328125 68.21498108]
[345.37741089 65.92916870]
[355.58474731 68.09584808]
[363.90539551 74.25799561]
[368.87615967 83.24855804]
[383.87573242 83.36348724]
[398.87527466 83.47842407]
[413.87484741 83.59336090]
[428.87438965 83.70829773]
[444.75939941 77.78350067]
[454.85003662 91.40755463]
[444.55178833 104.87538147]
[428.75946045 98.70785522]
[413.75988770 98.59291840]
[398.76034546 98.47798920]
[383.76077271 98.36305237]
[368.76123047 98.24811554]
[355.92807007 112.89968872]
[336.15225220 113.40486908]
[322.16265869 98.98982239]
[307.17367554 99.56436157]
[292.18466187 100.13890076]
[277.19567871 100.71344757]
[262.20669556 101.28798676]
[247.21768188 101.86252594]
[232.22869873 102.43706512]
[219.80712891 110.65618134]
[205.72071838 103.45314026]
[190.73171997 104.02767944]
[175.74273682 104.60222626]
[160.75373840 105.17676544]
[158.98130798 115.46032715]
[155.48133850 125.29105377]
[150.35633850 134.38102722]
[143.75642395 142.46398926]
[135.87492371 149.30320740]
[143.14147949 162.42559814]
[150.40803528 175.54798889]
[157.67459106 188.67037964]
[164.94114685 201.79277039]
[172.20771790 214.91516113]
[179.47427368 228.03755188]
[186.74082947 241.15994263]
[201.06527710 249.14382935]
[201.04266357 265.54296875]
[186.69625854 273.48730469]
[172.78440857 264.80441284]
[173.61843872 248.42649841]
[166.35188293 235.30410767]
[159.08532715 222.18171692]
[151.81875610 209.05932617]
[144.55220032 195.93693542]
[137.28564453 182.81454468]
[130.01908875 169.69215393]
[122.75252533 156.56976318]
[108.65784454 160.35609436]
[94.06714630 160.68457031]
[79.81635284 157.53639221]
[66.72188568 151.09190369]
[55.53395081 141.72033691]
[46.89350510 129.95857239]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 122]
[3 121]
[4 120]
[5 119]
[6 118]
[8 116]
[9 115]
[10 111]
[11 110]
[12 109]
[13 101]
[14 100]
[15 99]
[17 97]
[18 96]
[19 95]
[20 94]
[21 93]
[22 92]
[25 90]
[26 89]
[27 88]
[28 87]
[29 86]
[30 65]
[31 64]
[32 63]
[33 62]
[36 59]
[37 58]
[38 57]
[45 56]
[46 55]
[47 54]
[48 53]
[66 81]
[67 80]
[68 79]
[69 78]
[70 77]
[71 76]
[131 174]
[132 173]
[133 172]
[134 171]
[136 169]
[137 168]
[138 167]
[139 166]
[140 165]
[141 164]
[142 163]
[148 160]
[149 159]
[150 158]
[151 157]
[152 156]
[179 198]
[180 197]
[181 196]
[182 195]
[183 194]
[184 193]
[185 192]
[186 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
