%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 11:21:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCCGGCCCACACCCGACACCAGCCCUGCUGCUUCCUAACUUAUUGCCUGGGCAGUGCCCACCAUGCACCCCUGAUGUUCGCCGUCUGGCGAGCCCUUAGCCUUGCUGUAGAGACUUCCGUCACCCUUGGUAGAGUUUAUUUUUUUGAUGGCUAAGAUACUGCUGAUGCUGAAAUAAACUAGGGUUUUGGCCUGCCUGCGUCUGA\
) } def
/len { sequence length } bind def

/coor [
[109.43717194 348.46173096]
[122.18731689 340.07147217]
[120.14482117 325.21118164]
[110.69773865 317.65295410]
[108.87604523 305.28704834]
[116.19628906 294.66491699]
[114.37954712 279.77532959]
[112.56280518 264.88577271]
[110.74606323 249.99620056]
[97.65655518 242.93908691]
[91.15559387 229.36700439]
[93.92529297 214.39428711]
[105.10958862 203.80099487]
[103.29284668 188.91142273]
[101.47610474 174.02185059]
[99.65936279 159.13227844]
[91.91719818 158.57824707]
[84.31430054 157.01492310]
[76.98165894 154.46923828]
[70.04561615 150.98506165]
[63.62568665 146.62243652]
[57.83247757 141.45651245]
[52.76580429 135.57629395]
[48.51296616 129.08311462]
[34.62232590 134.74440002]
[20.73168945 140.40568542]
[6.84105110 146.06697083]
[-4.10921574 160.86965942]
[-21.38759804 157.80738831]
[-35.19071960 163.67883301]
[-34.36111069 178.81446838]
[-38.76119614 193.32015991]
[-47.85964584 205.44425964]
[-60.55777740 213.72274780]
[-75.32222748 217.15594482]
[-90.37011719 215.32925415]
[-103.88434601 208.46328735]
[-114.23300171 197.38714600]
[-120.16642761 183.43829346]
[-120.96813965 168.30114746]
[-116.54132843 153.80360413]
[-107.42055511 141.69627380]
[-94.70719147 133.44120789]
[-79.93643951 130.03523254]
[-64.89193726 131.88964844]
[-51.39038467 138.78050232]
[-41.06216049 149.87570190]
[-27.25904083 144.00425720]
[-22.44551468 132.90452576]
[-10.99136257 127.90087891]
[1.17976320 132.17633057]
[15.07040119 126.51504517]
[28.96103859 120.85375977]
[42.85167694 115.19247437]
[37.49290466 100.57563782]
[36.02442551 84.24810028]
[21.89051247 79.22490692]
[7.75659895 74.20171356]
[-6.37731504 69.17852020]
[-19.76758385 77.25532532]
[-35.20870972 74.78435516]
[-45.40986252 62.93232727]
[-45.55437088 47.29541397]
[-35.57400513 35.25687790]
[-20.18118477 32.50095367]
[-6.64393139 40.32890320]
[-1.35412097 55.04460526]
[12.77979279 60.06780243]
[26.91370583 65.09099579]
[41.04761887 70.11418915]
[45.86852646 64.36885834]
[34.37786102 54.72704315]
[20.47011185 49.10792160]
[21.51650810 34.14446259]
[36.07096100 30.51570511]
[44.01967621 43.23637390]
[55.51034164 52.87818909]
[60.33124924 47.13285446]
[52.93003845 34.08593750]
[45.52883148 21.03901672]
[38.12762070 7.99209785]
[30.72641373 -5.05482149]
[23.32520485 -18.10173988]
[15.92399502 -31.14866066]
[1.51815474 -38.98471832]
[1.37200809 -55.38321304]
[15.63589859 -63.47478104]
[29.63635826 -54.93550873]
[28.97091484 -38.54986954]
[36.37212372 -25.50295067]
[43.77333069 -12.45603085]
[51.17454147 0.59088904]
[58.57574844 13.63780880]
[65.97695923 26.68472862]
[73.37816620 39.73164749]
[84.14846039 39.53350449]
[94.28359222 41.14369583]
[94.73882294 26.15060425]
[95.08026886 11.15449047]
[95.30791473 -3.84378195]
[95.53556061 -18.84205437]
[95.76319885 -33.84032822]
[89.95793152 -49.76939392]
[103.65743256 -59.75739288]
[117.04749298 -49.35823059]
[110.76147461 -33.61268234]
[110.53382874 -18.61441231]
[110.30619049 -3.61613894]
[110.07854462 11.38213348]
[113.12120819 18.12001038]
[109.73191071 26.60583687]
[109.27667999 41.59892654]
[112.02532959 40.01995850]
[114.91577148 38.57091522]
[121.51179504 25.09900093]
[128.10781860 11.62708569]
[126.44948578 -4.68799877]
[139.90608215 -14.06094551]
[154.63459778 -6.84967136]
[155.48362732 9.52748394]
[141.57972717 18.22310638]
[134.98370361 31.69502258]
[128.38769531 45.16693878]
[140.77209473 53.63016891]
[150.92691040 42.59025192]
[161.08172607 31.55033875]
[167.35455322 15.79952908]
[184.22631836 17.46695137]
[187.29461670 34.14093781]
[172.12164307 41.70515442]
[161.96682739 52.74506760]
[151.81201172 63.78498459]
[156.44624329 74.70751953]
[158.86611938 86.06282806]
[159.07679749 97.41655731]
[174.02456665 98.66718292]
[188.97233582 99.91781616]
[203.92012024 101.16844940]
[218.86788940 102.41907501]
[233.81565857 103.66970825]
[248.76344299 104.92034149]
[263.71121216 106.17096710]
[278.65899658 107.42160034]
[293.60675049 108.67222595]
[300.62121582 95.21589661]
[312.22192383 85.49648285]
[326.62106323 80.97119904]
[341.61514282 82.29991913]
[354.92199707 89.24915314]
[364.52835083 100.73234558]
[368.99417114 114.97964478]
[383.94195557 116.23027802]
[398.88973999 117.48090363]
[408.20162964 105.18083191]
[422.69311523 99.88922119]
[437.73992920 103.29459381]
[448.54074097 114.31031036]
[451.64901733 129.42131042]
[446.07296753 143.80570984]
[433.59182739 152.87350464]
[418.18832397 153.73120117]
[404.77764893 146.10510254]
[397.63909912 132.42868042]
[382.69131470 131.17805481]
[367.74356079 129.92741394]
[360.97232056 143.23455811]
[349.59136963 152.96180725]
[335.31475830 157.60322571]
[320.30834961 156.42190552]
[306.86135864 149.56683350]
[297.03701782 138.05485535]
[292.35610962 123.62000275]
[277.40835571 122.36936951]
[262.46057129 121.11874390]
[247.51280212 119.86811066]
[232.56503296 118.61747742]
[217.61726379 117.36685181]
[202.66947937 116.11621857]
[187.72171021 114.86558533]
[172.77394104 113.61495972]
[157.82617188 112.36432648]
[142.59919739 141.01280212]
[114.54894257 157.31553650]
[116.36568451 172.20510864]
[118.18242645 187.09468079]
[119.99916840 201.98425293]
[133.40248108 209.57749939]
[139.69110107 223.44497681]
[136.64425659 238.18202209]
[125.63564301 248.17945862]
[127.45238495 263.06903076]
[129.26911926 277.95858765]
[131.08586121 292.84817505]
[142.49528503 307.29992676]
[135.00511169 323.16870117]
[137.04760742 338.02899170]
[151.58860779 342.66815186]
[162.67083740 353.16323853]
[168.09391785 367.43045044]
[166.78106689 382.63699341]
[158.99296570 395.76361084]
[146.27595520 404.20401001]
[131.15499878 406.28234863]
[116.63237762 401.58596802]
[105.59156036 391.04730225]
[100.22472382 376.75885010]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 196]
[3 195]
[6 193]
[7 192]
[8 191]
[9 190]
[13 186]
[14 185]
[15 184]
[16 183]
[24 54]
[25 53]
[26 52]
[27 51]
[29 48]
[30 47]
[56 70]
[57 69]
[58 68]
[59 67]
[78 95]
[79 94]
[80 93]
[81 92]
[82 91]
[83 90]
[84 89]
[97 112]
[98 111]
[99 109]
[100 108]
[101 107]
[102 106]
[114 123]
[115 122]
[116 121]
[124 132]
[125 131]
[126 130]
[135 181]
[136 180]
[137 179]
[138 178]
[139 177]
[140 176]
[141 175]
[142 174]
[143 173]
[144 172]
[151 165]
[152 164]
[153 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
