%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 13:44:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCAACUGGGGUGGGUGGGGCAGUGCUUGGCCCAGGAGUUUGGCCAGAAGUCAAGGCUUAGACCCUCAUGCUGCCAAUAUCCUAAUAAAAAGGUGACCAUCUGUGCCGGGAA\
) } def
/len { sequence length } bind def

/coor [
[68.80419159 357.62219238]
[54.26999664 352.44909668]
[44.85792923 340.22549438]
[43.57134247 324.85186768]
[50.82078552 311.23391724]
[64.29298401 303.71704102]
[65.12660217 288.74020386]
[65.96022797 273.76339722]
[66.79384613 258.78659058]
[59.77581787 245.64897156]
[68.26810455 232.30012512]
[69.10172272 217.32331848]
[69.93534851 202.34649658]
[70.76896667 187.36967468]
[71.60259247 172.39285278]
[72.43621063 157.41604614]
[73.26982880 142.43922424]
[74.10345459 127.46240234]
[82.26432037 89.35819244]
[74.70420837 76.40270233]
[67.14409637 63.44720840]
[59.58398819 50.49171829]
[52.02387619 37.53623199]
[44.46376419 24.58073997]
[33.63114166 22.37717628]
[26.01289940 14.67531395]
[24.01151657 4.25399971]
[28.06247711 -5.31418610]
[21.23404884 -18.66980553]
[17.21146393 -21.04251289]
[14.51080513 -24.28936577]
[13.24541092 -27.85495377]
[13.32490158 -31.20782089]
[14.48310280 -33.90862656]
[9.17902946 -47.93955231]
[3.87495613 -61.97047424]
[-2.16983795 -69.01055908]
[-1.37559021 -76.46585083]
[-6.28758001 -90.63880157]
[-11.19957066 -104.81174469]
[-16.11156082 -118.98468781]
[-21.02355003 -133.15763855]
[-26.13207626 -147.26092529]
[-31.43614960 -161.29185486]
[-36.74022293 -175.32276917]
[-51.85045624 -178.43473816]
[-62.86354828 -189.23823547]
[-66.26525879 -204.28588867]
[-60.97011185 -218.77606201]
[-48.66777420 -228.08497620]
[-33.28387451 -229.24221802]
[-19.72736168 -221.87847900]
[-12.32406521 -208.34353638]
[-13.43635368 -192.95632935]
[-22.70929909 -180.62684631]
[-17.40522575 -166.59591675]
[-12.10115242 -152.56500244]
[-6.71664143 -147.34779358]
[-6.85060596 -138.06962585]
[-1.93861592 -123.89667511]
[2.97337413 -109.72373199]
[7.88536406 -95.55078888]
[12.79735470 -81.37784576]
[17.90587997 -67.27454376]
[23.20995331 -53.24362564]
[28.51402473 -39.21269989]
[34.58966827 -25.49823380]
[41.41809464 -12.14261532]
[58.37274551 -3.02105069]
[57.41925430 17.02062988]
[64.97936249 29.97611809]
[72.53947449 42.93160629]
[80.09958649 55.88709641]
[87.65969849 68.84259033]
[95.21981049 81.79808044]
[96.39279938 66.84400940]
[108.22452545 57.62391663]
[123.01190186 60.14057541]
[131.12753296 72.75550842]
[127.28769684 87.25570679]
[113.99279022 94.20071411]
[128.87554932 96.07244110]
[143.75831604 97.94416046]
[155.10238647 87.18099213]
[170.71395874 86.27935791]
[183.22171021 95.66499329]
[186.71987915 110.90628052]
[179.55671692 124.80675507]
[165.11445618 130.80303955]
[150.21231079 126.06385803]
[141.88659668 112.82692719]
[127.00382996 110.95520020]
[112.12106323 109.08348083]
[106.36086273 113.88661957]
[108.92024994 128.66665649]
[94.84046936 123.49288940]
[89.08026886 128.29602051]
[88.24665070 143.27284241]
[87.41302490 158.24966431]
[86.57940674 173.22648621]
[85.74578857 188.20329285]
[84.91216278 203.18011475]
[84.07854462 218.15693665]
[83.24491882 233.13374329]
[90.20332336 247.34259033]
[81.77066803 259.62020874]
[80.93704224 274.59701538]
[80.10342407 289.57382202]
[79.26979828 304.55065918]
[91.82457733 313.51620483]
[97.51794434 327.85458374]
[94.53317261 342.99044800]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 109]
[7 108]
[8 107]
[9 106]
[11 104]
[12 103]
[13 102]
[14 101]
[15 100]
[16 99]
[17 98]
[18 97]
[19 75]
[20 74]
[21 73]
[22 72]
[23 71]
[24 70]
[28 68]
[29 67]
[34 66]
[35 65]
[36 64]
[38 63]
[39 62]
[40 61]
[41 60]
[42 59]
[43 57]
[44 56]
[45 55]
[81 93]
[82 92]
[83 91]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
