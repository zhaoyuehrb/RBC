%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 23:08:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCCUAGGGCAUGGGAGAGGAGGGACGCCCAGGGUGGGGAGGAAGAGUCUGCAAGCAGGGCUGUGGAGUUAGGGUUCACCCCAAUGGGACCACCCUCCUGGGUCCCCUGGUGCCGUUUUUCCUUAGAAAUCAGAGAAAUGGGAAAGGGGGGGAAACUGAUUUUACACUUAAAUAAUAAAAUCCUAUUAGUAACUCUGAA\
) } def
/len { sequence length } bind def

/coor [
[94.94152069 217.11401367]
[85.92785645 221.94816589]
[82.90097046 236.63958740]
[79.87408447 251.33100891]
[85.54984283 266.71664429]
[74.85677338 279.15008545]
[58.79497910 275.84085083]
[53.88746643 260.19323730]
[65.18266296 248.30412292]
[68.20954895 233.61270142]
[71.23643494 218.92127991]
[63.81407928 201.07148743]
[77.41916656 186.20368958]
[71.97335052 172.34034729]
[81.95754242 160.06735229]
[84.52377319 145.28849792]
[87.09000397 130.50964355]
[89.65624237 115.73079681]
[81.75389862 102.98117065]
[67.37660217 98.70408630]
[52.99931335 94.42699432]
[38.62202072 90.14990997]
[24.24472809 85.87282562]
[9.86743546 81.59574127]
[-4.50985718 77.31864929]
[-17.79582024 87.78042603]
[-34.53331757 88.25995636]
[-48.12401581 78.76626587]
[-53.32804871 63.20111084]
[-67.77043152 59.14925003]
[-82.21281433 55.09739304]
[-96.65519714 51.04553223]
[-105.82330322 56.91719437]
[-116.48980713 56.77223206]
[-125.13137817 50.90025330]
[-129.02644348 41.44279099]
[-143.33512878 36.94152451]
[-157.64382935 32.44025421]
[-171.95251465 27.93898392]
[-186.26119995 23.43771553]
[-198.04327393 28.69909859]
[-209.87181091 24.64954567]
[-215.57814026 13.97775269]
[-229.81472778 9.25339985]
[-244.05131531 4.52904654]
[-258.42861938 0.25196004]
[-272.93255615 -3.57368159]
[-288.24969482 0.38811037]
[-298.58273315 -10.33931446]
[-313.08666992 -14.16495609]
[-327.59060669 -17.99059677]
[-342.09457397 -21.81623840]
[-356.59851074 -25.64188004]
[-371.10244751 -29.46752167]
[-380.20675659 -28.63037872]
[-385.80227661 -33.46795654]
[-400.24465942 -37.51981354]
[-417.12826538 -35.97677231]
[-423.28482056 -51.77338409]
[-409.80987549 -62.06229782]
[-396.19281006 -51.96219635]
[-381.75042725 -47.91033936]
[-367.27682495 -43.97146988]
[-352.77288818 -40.14582825]
[-338.26892090 -36.32018661]
[-323.76498413 -32.49454498]
[-309.26104736 -28.66890335]
[-294.75708008 -24.84326172]
[-280.47735596 -29.07868767]
[-269.10690308 -18.07762718]
[-254.60296631 -14.25198650]
[-252.11099243 -15.55249882]
[-248.95170593 -15.94018364]
[-245.47167969 -15.15514851]
[-242.10536194 -13.06818962]
[-239.32696533 -9.70754337]
[-225.09037781 -4.98319054]
[-210.85377502 -0.25883761]
[-193.88589478 -4.72394514]
[-181.75993347 9.12902641]
[-167.45124817 13.63029575]
[-153.14254761 18.13156509]
[-138.83386230 22.63283539]
[-124.52517700 27.13410378]
[-106.01465607 21.56033325]
[-92.60334015 36.60314941]
[-78.16095734 40.65501022]
[-63.71857071 44.70686722]
[-49.27618790 48.75872803]
[-39.61253357 39.54051971]
[-26.55060196 36.27690506]
[-13.47825146 39.92465210]
[-3.84073639 49.63348007]
[-0.23277028 62.94136047]
[14.14452171 67.21844482]
[28.52181435 71.49552917]
[42.89910507 75.77262115]
[57.27639771 80.04970551]
[71.65369415 84.32678986]
[86.03098297 88.60388184]
[100.74561310 85.69189453]
[102.55360413 70.22034454]
[114.51747131 60.82244873]
[129.25608826 62.64143372]
[140.92065430 53.21074295]
[152.58522034 43.78004837]
[164.24978638 34.34935760]
[175.91433716 24.91866302]
[187.57890320 15.48797035]
[188.84796143 -3.40820479]
[203.27330017 -15.18091965]
[221.40768433 -12.72204113]
[226.81257629 -27.59139442]
[241.50506592 -30.03677940]
[252.86918640 -39.82743454]
[264.23330688 -49.61809158]
[275.59741211 -59.40874863]
[286.96151733 -69.19940186]
[298.32562256 -78.99005890]
[309.68972778 -88.78071594]
[321.05386353 -98.57137299]
[332.41796875 -108.36203003]
[328.89883423 -123.25747681]
[332.71627808 -138.07926941]
[342.99310303 -149.42147827]
[357.36773682 -154.67774963]
[372.53701782 -152.64021301]
[385.01513672 -143.77709961]
[391.93475342 -130.12507629]
[391.70571899 -114.82128143]
[384.38073730 -101.38241577]
[371.64300537 -92.89662933]
[356.41955566 -91.31389618]
[342.20861816 -96.99791718]
[330.84451294 -87.20726013]
[319.48040771 -77.41660309]
[308.11627197 -67.62594604]
[296.75216675 -57.83529282]
[285.38806152 -48.04463577]
[274.02395630 -38.25397873]
[262.65985107 -28.46332359]
[251.29573059 -18.67266846]
[246.70365906 -4.50360823]
[231.19833374 -1.35792863]
[232.83831787 9.94216824]
[228.77426147 20.74115562]
[219.90872192 28.31205559]
[208.37170410 30.68362045]
[197.00959778 27.15253258]
[185.34503174 36.58322525]
[173.68046570 46.01391983]
[162.01591492 55.44461060]
[150.35134888 64.87530518]
[138.68678284 74.30599976]
[137.37857056 89.09870148]
[125.68338776 98.82893372]
[110.17630768 97.35646057]
[125.52081299 95.15460968]
[141.13587952 94.99404144]
[153.22966003 103.86762238]
[165.32344055 112.74121094]
[177.41722107 121.61479187]
[189.51100159 130.48837280]
[201.60478210 139.36195374]
[213.69856262 148.23553467]
[227.42237854 141.45942688]
[242.72293091 141.84884644]
[256.08425903 149.31430054]
[264.43606567 162.14028931]
[265.85913086 177.37950134]
[260.02645874 191.53005981]
[248.27835083 201.34028625]
[233.31443787 204.55586243]
[218.57331848 200.43786621]
[207.44239807 189.93257141]
[202.47946167 175.45404053]
[204.82498169 160.32931519]
[192.73120117 151.45573425]
[180.63742065 142.58215332]
[168.54364014 133.70857239]
[156.44985962 124.83498383]
[144.35607910 115.96140289]
[132.26229858 107.08782196]
[125.30549622 109.89012146]
[131.66456604 123.47549438]
[138.02363586 137.06086731]
[149.02204895 147.26062012]
[146.30136108 162.01181030]
[132.38793945 167.61686707]
[120.20143127 158.87107849]
[121.05844879 143.89468384]
[116.22517395 129.69470215]
[111.39189148 115.49472809]
[104.43508911 118.29702759]
[101.86885834 133.07588196]
[99.30262756 147.85473633]
[96.73638916 162.63359070]
[101.99865723 177.55401611]
[92.19802094 188.76992798]
[98.96922302 197.29525757]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 11]
[3 10]
[4 9]
[13 199]
[15 197]
[16 196]
[17 195]
[18 194]
[19 100]
[20 99]
[21 98]
[22 97]
[23 96]
[24 95]
[25 94]
[29 89]
[30 88]
[31 87]
[32 86]
[36 84]
[37 83]
[38 82]
[39 81]
[40 80]
[43 78]
[44 77]
[45 76]
[46 71]
[47 70]
[49 68]
[50 67]
[51 66]
[52 65]
[53 64]
[54 63]
[56 62]
[57 61]
[101 157]
[104 154]
[105 153]
[106 152]
[107 151]
[108 150]
[109 149]
[112 144]
[114 142]
[115 141]
[116 140]
[117 139]
[118 138]
[119 137]
[120 136]
[121 135]
[122 134]
[159 183]
[160 182]
[161 181]
[162 180]
[163 179]
[164 178]
[165 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
