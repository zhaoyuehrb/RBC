%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 03:22:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACUGUGACCCUAGUCACCAGAAUUCAGGACUGUCUCCUCCAGGACCAAAGUGGCCAGGUAAUAGGAGAAUAGGUGAAAUAACACAUGUGGGCAUUUUCACAACAAUCUCUCCCCAGCCUCCCAAAUCAAGUCUCUCCAUCACUUGAUCAAUGUUUCAGCCCUAGACUGCCCAAGGAGUAUUAUUAAUUAUUAAUAAAUGAAUUCUGUGCUUUUAA\
) } def
/len { sequence length } bind def

/coor [
[119.85648346 322.78561401]
[105.19142151 319.63348389]
[92.80660248 311.17083740]
[84.54054260 298.65396118]
[81.62034607 283.94235229]
[76.71743774 298.11843872]
[71.81452942 312.29452515]
[66.91161346 326.47061157]
[62.00870514 340.64669800]
[65.64539337 356.63754272]
[53.43302155 367.58239746]
[37.93463516 362.22216797]
[35.09364700 346.07098389]
[47.83261871 335.74380493]
[52.73552704 321.56771851]
[57.63843918 307.39163208]
[62.54134750 293.21554565]
[67.44425964 279.03942871]
[70.88784027 264.44006348]
[72.83676147 249.56721497]
[74.78568268 234.69436646]
[76.73460388 219.82151794]
[78.68352509 204.94866943]
[80.63244629 190.07580566]
[82.58136749 175.20295715]
[84.53029633 160.33010864]
[86.47921753 145.45726013]
[73.09420776 140.43559265]
[61.52206039 131.47709656]
[52.91685486 119.22375488]
[48.20860291 104.65387726]
[33.24042130 105.63040924]
[18.27224350 106.60694122]
[3.30406427 107.58347321]
[-11.65665340 108.66833496]
[-26.60912704 109.86145782]
[-41.56159973 111.05458069]
[-56.51407242 112.24770355]
[-71.46654510 113.44082642]
[-86.37821198 115.06632996]
[-101.23656464 117.12286377]
[-113.84561920 126.67913055]
[-127.51351166 120.75982666]
[-142.37185669 122.81635284]
[-150.43913269 127.09103394]
[-157.46003723 124.79349518]
[-172.34660339 126.63470459]
[-187.23316956 128.47592163]
[-202.21035767 136.42074585]
[-213.99079895 124.22822571]
[-205.53590393 109.53294373]
[-189.07438660 113.58934784]
[-174.18782043 111.74813080]
[-159.30123901 109.90692139]
[-144.42839050 107.95800018]
[-129.57003784 105.90147400]
[-118.02375031 96.49230194]
[-103.29309845 102.26450348]
[-88.43473816 100.20797729]
[-86.63825989 98.06160736]
[-83.88522339 96.49586487]
[-80.39194489 95.87793732]
[-76.50328827 96.49024963]
[-72.65966797 98.48834991]
[-57.70719528 97.29522705]
[-42.75472260 96.10210419]
[-27.80224991 94.90898132]
[-12.84977627 93.71585846]
[-6.43508863 90.05204773]
[2.32753205 92.61529541]
[17.29571152 91.63876343]
[32.26388931 90.66223145]
[47.23207092 89.68569946]
[52.13497925 75.50961304]
[40.96845245 65.49418640]
[29.80192757 55.47876740]
[14.03650761 56.58652115]
[2.16033173 46.15905762]
[1.21932304 30.38280678]
[11.77176571 18.61754036]
[27.55708122 17.84337997]
[39.21012497 28.51962090]
[39.81734848 44.31224060]
[50.98387527 54.32766342]
[62.15040207 64.34308624]
[78.56455994 47.06075668]
[102.84666443 37.83664322]
[96.93132782 24.05227470]
[91.01598358 10.26790810]
[85.10064697 -3.51645947]
[79.18531036 -17.30082703]
[64.41748047 -22.92993355]
[58.03176880 -37.38670349]
[63.81669235 -52.09418869]
[78.34017181 -58.32670212]
[92.98567200 -52.38660431]
[99.06428528 -37.79804611]
[92.96968079 -23.21616364]
[98.88501740 -9.43179703]
[104.80035400 4.35257006]
[110.71569061 18.13693619]
[116.63102722 31.92130470]
[123.96638489 33.48418045]
[125.38376617 18.55129814]
[126.80114746 3.61841345]
[128.21852112 -11.31447124]
[129.63591003 -26.24735451]
[131.05328369 -41.18024063]
[132.47067261 -56.11312485]
[133.88804626 -71.04600525]
[130.37113953 -85.62789154]
[135.36978149 -99.77050781]
[147.26869202 -108.90373230]
[162.22279358 -110.07621002]
[175.39974976 -102.90906525]
[182.54147339 -89.71831512]
[181.34014893 -74.76650238]
[172.18550110 -62.88631439]
[167.39286804 -48.67256165]
[162.60025024 -34.45881271]
[157.80761719 -20.24506187]
[153.01498413 -6.03131294]
[148.22235107 8.18243694]
[143.42971802 22.39618683]
[138.63708496 36.60993576]
[145.97244263 38.17281342]
[156.99281311 27.99678612]
[168.01316833 17.82075500]
[179.03353882 7.64472628]
[190.05389404 -2.53130341]
[201.07426453 -12.70733356]
[212.09461975 -22.88336372]
[209.31671143 -38.05856323]
[215.20523071 -52.31790543]
[227.88119507 -61.11128235]
[243.29974365 -61.63276672]
[256.54086304 -53.71594620]
[263.37939453 -39.88705444]
[261.63314819 -24.55883980]
[251.85935974 -12.62247849]
[237.17681885 -7.88682175]
[222.27066040 -11.86299896]
[211.25028992 -1.68696940]
[200.22993469 8.48906040]
[189.20956421 18.66509056]
[178.18920898 28.84111977]
[167.16883850 39.01715088]
[156.14846802 49.19318008]
[158.23777771 56.39628983]
[172.64399719 52.21767807]
[187.05021667 48.03907013]
[201.45643616 43.86045837]
[215.86273193 39.68207169]
[220.04089355 54.08842468]
[205.63505554 58.26668167]
[191.22883606 62.44528961]
[176.82261658 66.62390137]
[162.41638184 70.80251312]
[164.50569153 78.00562286]
[179.26074219 80.70533752]
[194.03495789 83.29817963]
[208.82754517 85.78401184]
[223.62013245 88.26983643]
[238.51171875 82.92651367]
[249.78076172 92.66601562]
[262.50653076 83.29421997]
[278.11911011 85.74841309]
[287.35583496 98.57254791]
[284.73672485 114.15830231]
[271.81564331 123.25892639]
[256.25845337 120.47517395]
[247.29493713 107.45860291]
[233.46141052 112.97972870]
[221.13429260 103.06242371]
[206.34170532 100.57659912]
[191.54911804 98.09076691]
[184.43508911 100.08130646]
[176.56101990 95.46038818]
[161.80596924 92.76067352]
[153.22505188 113.15641785]
[139.10833740 126.82745361]
[149.98022461 137.16195679]
[160.85211182 147.49645996]
[171.72401428 157.83096313]
[182.59590149 168.16546631]
[193.46778870 178.49996948]
[204.33967590 188.83447266]
[219.98550415 195.36477661]
[218.04161072 212.20690918]
[201.31953430 215.00135803]
[194.00517273 199.70637512]
[183.13328552 189.37187195]
[172.26139832 179.03736877]
[161.38951111 168.70286560]
[150.51760864 158.36836243]
[139.64572144 148.03385925]
[128.77383423 137.69935608]
[115.82554626 144.70710754]
[101.35206604 147.40617371]
[99.40314484 162.27903748]
[97.45422363 177.15188599]
[95.50530243 192.02473450]
[93.55638123 206.89758301]
[91.60746002 221.77043152]
[89.65853882 236.64329529]
[87.70961761 251.51614380]
[85.76069641 266.38897705]
[94.94847870 254.53215027]
[107.93706512 247.02903748]
[122.79830933 244.99349976]
[137.32606506 248.72769165]
[149.36370850 257.67727661]
[157.12425232 270.51373291]
[159.45564270 285.33142090]
[156.01179504 299.93075562]
[147.30395508 312.14440918]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 18]
[6 17]
[7 16]
[8 15]
[9 14]
[19 207]
[20 206]
[21 205]
[22 204]
[23 203]
[24 202]
[25 201]
[26 200]
[27 199]
[31 73]
[32 72]
[33 71]
[34 70]
[35 68]
[36 67]
[37 66]
[38 65]
[39 64]
[40 59]
[41 58]
[43 56]
[44 55]
[46 54]
[47 53]
[48 52]
[74 85]
[75 84]
[76 83]
[87 102]
[88 101]
[89 100]
[90 99]
[91 98]
[126 148]
[127 147]
[128 146]
[129 145]
[130 144]
[131 143]
[132 142]
[159 179]
[160 178]
[161 176]
[162 175]
[163 174]
[165 172]
[181 197]
[182 196]
[183 195]
[184 194]
[185 193]
[186 192]
[187 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
