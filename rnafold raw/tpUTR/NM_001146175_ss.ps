%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 06:46:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCCGCCGCUUUGGGGGUGGGCCAUGGGAUGUGGGUAGUUUUGUCAUUUGGAGGGGGCUGCAGGGAAGGGGGGCUGGGGUGGACAAUAAAGAAGGCGCCAUGAGCCAGCCUA\
) } def
/len { sequence length } bind def

/coor [
[93.86466980 142.22622681]
[76.10618591 137.70628357]
[61.15280533 125.75491333]
[51.61694717 137.33366394]
[42.08109283 148.91241455]
[32.54523468 160.49116516]
[23.00938034 172.06991577]
[13.47352409 183.64866638]
[10.67297745 199.22003174]
[-3.39060259 204.12564087]
[-5.55463839 220.38137817]
[-20.81565857 226.38415527]
[-33.47443390 215.95881653]
[-30.50870132 199.83007812]
[-14.96935272 194.58978271]
[-12.85087395 179.84660339]
[1.89477396 174.11280823]
[11.43062973 162.53405762]
[20.96648598 150.95530701]
[30.50234222 139.37655640]
[40.03820038 127.79780579]
[49.57405472 116.21905518]
[43.35992813 102.56678009]
[28.36562157 102.15346527]
[13.37131691 101.74015045]
[-1.62298763 101.32683563]
[-14.21684456 111.26536560]
[-29.80583000 107.47549438]
[-36.43140793 92.86450195]
[-29.01100349 78.64067841]
[-13.23691463 75.71532440]
[-1.20967245 86.33253479]
[13.78463173 86.74584961]
[28.77893639 87.15916443]
[43.77324295 87.57247925]
[51.97746277 75.01497650]
[45.57581711 61.44962311]
[39.17417145 47.88426590]
[32.77252579 34.31890869]
[26.37087822 20.75354958]
[19.96923065 7.18819237]
[13.56758499 -6.37716532]
[7.16593790 -19.94252205]
[-5.72093344 -29.12071037]
[-4.15535021 -43.93280792]
[-10.55699635 -57.49816513]
[-25.11123657 -64.24751282]
[-28.76865959 -79.86809540]
[-18.72360420 -92.37715149]
[-2.68177772 -92.17879486]
[7.05090427 -79.42518616]
[3.00836086 -63.89981079]
[9.41000748 -50.33445358]
[21.83898926 -42.12655258]
[20.73129463 -26.34416962]
[27.13294220 -12.77881145]
[33.53458786 0.78654563]
[39.93623352 14.35190296]
[46.33788300 27.91726112]
[52.73952866 41.48261642]
[59.14117432 55.04797363]
[65.54282379 68.61333466]
[81.48182678 59.02228546]
[99.26860046 56.67995834]
[115.87409210 61.45615005]
[128.67591858 72.05093384]
[135.87187195 86.29235840]
[136.72691345 101.56377411]
[151.26792908 105.24605560]
[165.80892944 108.92834473]
[179.27583313 101.10018158]
[193.97003174 105.04167938]
[201.34999084 117.92855835]
[215.89099121 121.61083984]
[230.43199158 125.29312897]
[244.97300720 128.97540283]
[260.25027466 124.86260986]
[270.68872070 135.48750305]
[285.27908325 138.96908569]
[299.91601562 142.24931335]
[314.55297852 145.52952576]
[329.18991089 148.80973816]
[337.90875244 136.35781860]
[350.73171997 128.19450378]
[365.70343018 125.56465149]
[380.54080200 128.86929321]
[392.98126221 137.60449219]
[401.12768555 150.43820190]
[403.73785400 165.41336060]
[400.41369629 180.24638367]
[391.66213989 192.67532349]
[378.81771851 200.80487061]
[363.83914185 203.39532471]
[349.01049805 200.05166626]
[336.59307861 191.28375244]
[328.48043823 178.42866516]
[325.90969849 163.44668579]
[311.27273560 160.16647339]
[296.63580322 156.88624573]
[281.99887085 153.60603333]
[274.68289185 155.23652649]
[267.00643921 150.02851868]
[252.76921082 154.40469360]
[241.29072571 143.51641846]
[226.74971008 139.83413696]
[212.20870972 136.15184021]
[197.66770935 132.46955872]
[185.04374695 140.29077148]
[170.24464417 136.76354980]
[162.12664795 123.46934509]
[147.58564758 119.78706360]
[133.04463196 116.10478210]
[124.85493469 129.70262146]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 22]
[4 21]
[5 20]
[6 19]
[7 18]
[8 17]
[10 15]
[23 35]
[24 34]
[25 33]
[26 32]
[36 62]
[37 61]
[38 60]
[39 59]
[40 58]
[41 57]
[42 56]
[43 55]
[45 53]
[46 52]
[68 112]
[69 111]
[70 110]
[73 107]
[74 106]
[75 105]
[76 104]
[78 102]
[79 100]
[80 99]
[81 98]
[82 97]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
