%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 10:39:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAACAUGAAUUACCAAAGAAAGCACCUUCUUGGCCUGACAGACCAUUGGUGGGGCUGGCACGAAUCCAGAUCUGGAUCCUACAUCUGUUGGGUCUUAGGCCUCCUUCCCUCCUCAGUGUCUUUCAAAUGACUUUCAUCAAAUGACUUUCAAAAUAAAACCUUAUUUUGGCAAAGGCA\
) } def
/len { sequence length } bind def

/coor [
[269.53713989 420.27194214]
[263.11950684 408.30148315]
[260.33670044 394.99014282]
[261.42422485 381.41766357]
[266.30310059 368.68780518]
[274.58575439 357.83840942]
[265.94024658 345.58053589]
[257.29470825 333.32269287]
[248.64916992 321.06484985]
[240.00364685 308.80700684]
[225.73606873 313.27883911]
[210.76458740 313.12155151]
[196.55552673 308.33795166]
[184.50445557 299.38458252]
[175.79905701 287.12820435]
[171.30215454 272.76184082]
[171.46614075 257.68862915]
[176.28755188 243.38490295]
[185.30613708 231.25549316]
[176.66059875 218.99765015]
[168.01507568 206.73979187]
[159.36955261 194.48194885]
[150.72401428 182.22410583]
[141.97125244 170.04258728]
[133.11193848 157.93835449]
[124.25261688 145.83413696]
[105.14665985 151.59912109]
[85.27841949 149.72154236]
[67.59064484 140.47950745]
[54.70315933 125.24188995]
[48.52477264 106.26558685]
[49.97059250 86.36125946]
[58.82647705 68.47702789]
[48.36040497 57.73173523]
[37.89433289 46.98644257]
[27.42826271 36.24114609]
[16.96219063 25.49585152]
[6.49611998 14.75055695]
[0.20280799 12.57578182]
[-3.47554469 8.19577789]
[-4.14044189 3.43969250]
[-14.22296619 -7.66628361]
[-24.30549049 -18.77225876]
[-34.38801575 -29.87823486]
[-44.47053909 -40.98421097]
[-62.40250015 -38.46822357]
[-78.12826538 -47.12437820]
[-85.46550751 -63.33504868]
[-81.65866852 -80.55627441]
[-92.12474060 -91.30157471]
[-102.59081268 -102.04686737]
[-113.05688477 -112.79216003]
[-123.61684418 -123.44519806]
[-134.26988220 -134.00515747]
[-144.92291260 -144.56512451]
[-143.39523315 -129.64311218]
[-150.06550598 -116.20781708]
[-162.87583923 -108.40426636]
[-177.87399292 -108.64002991]
[-190.43272400 -116.84236145]
[-196.67741394 -130.48068237]
[-194.68145752 -145.34729004]
[-185.06065369 -156.85556030]
[-170.78320312 -161.45494080]
[-156.25387573 -157.72636414]
[-165.11318970 -169.83059692]
[-173.97251892 -181.93482971]
[-182.83183289 -194.03906250]
[-191.69116211 -206.14329529]
[-206.90602112 -212.26213074]
[-208.94619751 -228.53387451]
[-195.71292114 -238.21955872]
[-180.81945801 -231.35537720]
[-179.58692932 -215.00262451]
[-170.72760010 -202.89839172]
[-161.86828613 -190.79415894]
[-153.00897217 -178.68992615]
[-144.14964294 -166.58569336]
[-134.36296082 -155.21815491]
[-123.70992279 -144.65820312]
[-113.05688477 -134.09823608]
[-106.07257080 -131.61512756]
[-102.31158447 -123.25823212]
[-91.84551239 -112.51293945]
[-81.37944794 -101.76764679]
[-70.91337585 -91.02234650]
[-59.25746918 -94.53073883]
[-47.14606857 -92.72851562]
[-36.89635086 -85.89823151]
[-30.49578094 -75.29029846]
[-29.21685791 -62.89447784]
[-33.36456299 -51.06673431]
[-23.28203964 -39.96075821]
[-13.19951534 -28.85478401]
[-3.11699057 -17.74880791]
[6.96553373 -6.64283228]
[17.24141502 4.28448582]
[27.70748520 15.02978039]
[38.17355728 25.77507591]
[48.63962936 36.52037048]
[59.10569763 47.26566315]
[69.57176971 58.01095963]
[78.49417114 52.81466293]
[88.26923370 49.48915100]
[98.50939178 48.16627884]
[108.80864716 48.89848709]
[118.75865936 51.65675354]
[127.96493530 56.33171463]
[136.06246948 62.73802185]
[142.73020935 70.62167358]
[147.70379639 79.67011261]
[150.78604126 89.52458191]
[151.85475159 99.79437256]
[150.86752319 110.07231903]
[147.86352539 119.95092773]
[142.96185303 129.03852844]
[136.35684204 136.97480774]
[145.21617126 149.07904053]
[154.07548523 161.18327332]
[161.69230652 166.27902222]
[162.98187256 173.57856750]
[171.62739563 185.83642578]
[180.27291870 198.09426880]
[188.91845703 210.35211182]
[197.56398010 222.60997009]
[212.01657104 218.18502808]
[227.10881042 218.44354248]
[241.36288452 223.34761047]
[253.38693237 232.40505981]
[262.01098633 244.71879578]
[266.40075684 259.07571411]
[266.13839722 274.06607056]
[261.26214600 288.22207642]
[252.26148987 300.16146851]
[260.90701294 312.41931152]
[269.55255127 324.67718506]
[278.19808960 336.93502808]
[286.84359741 349.19287109]
[302.81732178 344.62835693]
[319.36364746 345.79580688]
[334.49136353 352.53723145]
[346.38598633 364.02481079]
[353.62738037 378.86267090]
[355.35928345 395.25640869]
[351.39059448 411.23013306]
[342.21618652 424.86456299]
[351.28656006 436.81146240]
[360.35693359 448.75833130]
[369.63558960 460.54418945]
[379.11965942 472.16540527]
[388.60372925 483.78662109]
[398.08779907 495.40783691]
[407.57186890 507.02902222]
[417.05593872 518.65026855]
[426.54000854 530.27148438]
[436.02404785 541.89263916]
[445.50811768 553.51385498]
[461.02392578 558.82348633]
[463.91763306 574.96533203]
[451.21243286 585.33404541]
[435.97836304 579.26318359]
[433.88693237 562.99792480]
[424.40286255 551.37670898]
[414.91879272 539.75549316]
[405.43472290 528.13433838]
[395.95065308 516.51312256]
[386.46658325 504.89190674]
[376.98251343 493.27069092]
[367.49844360 481.64947510]
[358.01440430 470.02825928]
[353.40994263 468.66384888]
[349.62530518 464.37536621]
[348.41006470 457.82873535]
[339.33966064 445.88183594]
[330.26928711 433.93493652]
[317.59664917 438.58282471]
[304.11068726 439.46731567]
[290.90670776 436.50704956]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 138]
[7 137]
[8 136]
[9 135]
[10 134]
[19 125]
[20 124]
[21 123]
[22 122]
[23 121]
[24 119]
[25 118]
[26 117]
[33 102]
[34 101]
[35 100]
[36 99]
[37 98]
[38 97]
[41 96]
[42 95]
[43 94]
[44 93]
[45 92]
[49 86]
[50 85]
[51 84]
[52 83]
[53 81]
[54 80]
[55 79]
[65 78]
[66 77]
[67 76]
[68 75]
[69 74]
[146 175]
[147 174]
[148 173]
[149 170]
[150 169]
[151 168]
[152 167]
[153 166]
[154 165]
[155 164]
[156 163]
[157 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
