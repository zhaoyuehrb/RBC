%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 19:15:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGAAAUGAGCAGUUCGCUCCUCCCUGAUAAGAGUUGUCCCAAAGGGUCGCUUAAGGAAUCUGCCCCACAGCUUCCCCCAUAGAAGGAUUUCAUGAGCAGAUCAGGACACUUAGCAAAUGUAAAAAUAAAAUCUAACUCUCAUUUGACAAGCAGAGAAAGAAAAGUUAAAUACCAGAUAAGCUUUUGAUUUUUGUAUUGUUUGCAUCCCCUUGCCCUCAAUAAAUAAAGUUCUUUUUUAGUUCCAAAUUUGA\
) } def
/len { sequence length } bind def

/coor [
[108.28990173 128.64141846]
[96.52561188 129.61389160]
[91.08663940 143.59306335]
[85.64766693 157.57225037]
[95.13902283 169.56648254]
[97.33792114 184.60182190]
[91.75290680 198.62586975]
[79.97694397 207.90933228]
[65.23462677 210.03762817]
[59.79565048 224.01681519]
[54.35667801 237.99600220]
[48.91770554 251.97517395]
[54.03427887 267.18045044]
[45.21572876 280.58242798]
[29.22689056 281.90023804]
[18.33303642 270.12298584]
[20.89099693 254.28518677]
[34.93852234 246.53620911]
[40.37749481 232.55702209]
[45.81646729 218.57783508]
[51.25543976 204.59866333]
[41.82807922 193.06651306]
[39.42282486 178.26547241]
[44.78448105 164.15451050]
[56.56670761 154.55889893]
[71.66848755 152.13328552]
[77.10746002 138.15409851]
[82.54642487 124.17491150]
[78.39237976 120.54663849]
[74.97766876 116.21531677]
[72.41914368 111.32916260]
[70.80434418 106.05535889]
[70.18852997 100.57436371]
[55.60081863 97.08170319]
[41.01310730 93.58904266]
[26.42539597 90.09638977]
[17.37927437 91.14124298]
[11.67940617 86.46926880]
[-2.86399198 82.79644775]
[-17.40739059 79.12363434]
[-31.95078850 75.45082092]
[-38.15744400 80.94131470]
[-45.93450165 83.51839447]
[-54.00495529 82.83649445]
[-61.07383728 79.07895660]
[-66.03598022 72.91667175]
[-68.14866638 65.38944244]
[-82.49263763 61.00189590]
[-96.83660126 56.61434937]
[-111.18057251 52.22680283]
[-125.55139923 47.92804337]
[-139.94853210 43.71824265]
[-154.34567261 39.50843811]
[-168.74281311 35.29863739]
[-183.13995361 31.08883476]
[-198.55697632 34.64209747]
[-208.60122681 23.64381409]
[-222.99836731 19.43401146]
[-237.39550781 15.22420788]
[-251.79264832 11.01440525]
[-266.18978882 6.80460215]
[-280.58691406 2.59479952]
[-294.98406982 -1.61500323]
[-302.67547607 11.35777378]
[-313.35202026 22.00962639]
[-326.34259033 29.67097092]
[-340.83056641 33.86020660]
[-355.90518188 34.31399918]
[-370.61892700 31.00382042]
[-384.04678345 24.13774872]
[-395.34472656 14.14739418]
[-403.80255127 1.66075706]
[-408.88858032 -12.53724098]
[-410.28311157 -27.55410194]
[-407.89846802 -42.44585419]
[-401.88455200 -56.27639008]
[-392.61941528 -68.17630768]
[-380.68545532 -77.39756775]
[-366.83288574 -83.36051941]
[-351.93246460 -85.69033051]
[-336.92083740 -84.24053192]
[-322.74163818 -79.10226440]
[-310.28622437 -70.59853363]
[-300.33755493 -59.26388168]
[-293.52096558 -45.81081772]
[-290.26495361 -31.08501244]
[-290.77426147 -16.01214027]
[-276.37710571 -11.80233765]
[-261.97998047 -7.59253502]
[-247.58283997 -3.38273215]
[-233.18569946 0.82707059]
[-218.78857422 5.03687334]
[-204.39143372 9.24667645]
[-190.00418091 5.39229822]
[-178.93014526 16.69169617]
[-164.53300476 20.90149879]
[-150.13587952 25.11130142]
[-135.73873901 29.32110596]
[-121.34159851 33.53090668]
[-114.05976105 32.39479446]
[-106.79302979 37.88283539]
[-92.44905853 42.27038193]
[-78.10508728 46.65792847]
[-63.76111984 51.04547501]
[-43.22223663 44.19253540]
[-28.27797318 60.90742111]
[-13.73457432 64.58023834]
[0.80882365 68.25305176]
[15.35222149 71.92586517]
[29.91805458 75.50867462]
[44.50576782 79.00133514]
[59.09347916 82.49399567]
[73.68119049 85.98665619]
[90.17532349 71.84809875]
[111.88489532 72.65401459]
[127.28536224 87.97657013]
[142.09187317 85.57509613]
[156.89839172 83.17362213]
[171.70491028 80.77215576]
[186.51142883 78.37068176]
[189.39857483 63.50831985]
[197.18179321 50.55480957]
[208.90516663 41.06361389]
[223.14160156 36.16525650]
[238.16658020 36.43268585]
[252.16702271 41.81432724]
[263.46008301 51.64263916]
[270.69546509 64.71684265]
[285.50198364 62.31536865]
[300.30850220 59.91389465]
[315.11502075 57.51242065]
[329.92153931 55.11094666]
[336.98126221 41.41910934]
[350.59042358 34.58946228]
[365.43597412 37.05381012]
[375.85903931 47.66033173]
[390.66555786 45.25885773]
[405.47204590 42.85738373]
[420.27856445 40.45590973]
[422.89691162 21.41581917]
[431.55154419 4.27778530]
[445.29150391 -9.10370731]
[462.61621094 -17.28538132]
[481.63961792 -19.39083481]
[500.29531860 -15.20439243]
[516.56103516 -5.19312811]
[528.67791748 9.54520893]
[542.51831055 3.76213408]
[556.35870361 -2.02094102]
[570.19909668 -7.80401611]
[584.03942871 -13.58709145]
[597.84381104 -19.45564842]
[611.61157227 -25.40946007]
[625.37939453 -31.36327362]
[639.14715576 -37.31708527]
[652.91497803 -43.27089691]
[666.68273926 -49.22471237]
[680.45056152 -55.17852402]
[683.93017578 -68.17324066]
[694.10437012 -76.67398834]
[707.12316895 -77.75548553]
[718.22509766 -71.24660492]
[732.06549072 -77.02967834]
[745.90582275 -82.81275177]
[759.74621582 -88.59583282]
[773.58660889 -94.37890625]
[787.42700195 -100.16197968]
[801.26733398 -105.94505310]
[802.02459717 -121.18937683]
[809.32861328 -134.59138489]
[821.72924805 -143.49008179]
[836.76434326 -146.11863708]
[851.44860840 -141.95515442]
[862.86651611 -131.82629395]
[868.75103760 -117.74314117]
[867.93377686 -102.50192261]
[860.57702637 -89.12878418]
[848.14141846 -80.27898407]
[833.09613037 -77.70964813]
[818.42834473 -81.93093109]
[807.05041504 -92.10467529]
[793.21002197 -86.32160187]
[779.36968994 -80.53852844]
[765.52929688 -74.75545502]
[751.68890381 -68.97237396]
[737.84851074 -63.18930054]
[724.00817871 -57.40622711]
[718.27899170 -41.58119202]
[702.56213379 -34.67231750]
[686.40435791 -41.41073227]
[672.63659668 -35.45692062]
[658.86877441 -29.50310707]
[645.10101318 -23.54929352]
[631.33319092 -17.59547997]
[617.56542969 -11.64166737]
[603.79760742 -5.68785477]
[598.91925049 -0.16360307]
[589.82250977 0.25328594]
[575.98211670 6.03636122]
[562.14178467 11.81943607]
[548.30139160 17.60251045]
[534.46099854 23.38558578]
[536.45452881 40.73974991]
[533.17980957 57.89833832]
[546.55334473 64.69165802]
[559.92681885 71.48498535]
[574.87194824 66.34494781]
[589.03741455 73.35314941]
[594.01910400 88.35174561]
[586.86157227 102.44232941]
[571.81115723 107.26522064]
[557.79699707 99.95906830]
[553.13348389 84.85848999]
[539.76000977 78.06517029]
[526.38647461 71.27185059]
[520.56072998 78.52532196]
[513.64428711 84.75578308]
[505.81457520 89.80103302]
[497.27276611 93.52931213]
[488.23870850 95.84272766]
[478.94519043 96.67981720]
[469.63208008 96.01719666]
[460.53988647 93.87020874]
[451.90383911 90.29254913]
[443.94757080 85.37494659]
[436.87747192 79.24286652]
[430.87722778 72.05329895]
[426.10317993 63.99072647]
[422.68005371 55.26242447]
[407.87353516 57.66389847]
[393.06701660 60.06537247]
[378.26049805 62.46684647]
[371.72415161 75.82402039]
[358.41848755 82.85421753]
[343.34835815 80.67607880]
[332.32299805 69.91746521]
[317.51647949 72.31893921]
[302.70996094 74.72041321]
[287.90344238 77.12188721]
[273.09692383 79.52336121]
[270.36477661 94.21419525]
[262.75704956 107.10803986]
[251.17524719 116.63887024]
[237.00502014 121.64147949]
[221.95018005 121.49388123]
[207.82794189 116.19459534]
[196.34953308 106.36513519]
[188.91290283 93.17719269]
[174.10638428 95.57866669]
[159.29986572 97.98014069]
[144.49334717 100.38161469]
[129.68682861 102.78308868]
[126.28036499 114.08531189]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 28]
[3 27]
[4 26]
[9 21]
[10 20]
[11 19]
[12 18]
[33 113]
[34 112]
[35 111]
[36 110]
[38 109]
[39 108]
[40 107]
[41 106]
[47 104]
[48 103]
[49 102]
[50 101]
[51 99]
[52 98]
[53 97]
[54 96]
[55 95]
[57 93]
[58 92]
[59 91]
[60 90]
[61 89]
[62 88]
[63 87]
[116 252]
[117 251]
[118 250]
[119 249]
[120 248]
[128 240]
[129 239]
[130 238]
[131 237]
[132 236]
[136 232]
[137 231]
[138 230]
[139 229]
[147 202]
[148 201]
[149 200]
[150 199]
[151 198]
[152 196]
[153 195]
[154 194]
[155 193]
[156 192]
[157 191]
[158 190]
[162 187]
[163 186]
[164 185]
[165 184]
[166 183]
[167 182]
[168 181]
[204 215]
[205 214]
[206 213]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
