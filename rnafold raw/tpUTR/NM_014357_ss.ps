%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 18:45:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGGGCUAAGAAGAACUCUUUGGACAGAAUGUUUAAGAACCUCCUACAGCCUGAUGCUUAACCCUUUCCAUUUCCUCUCAUUCCAUUCAUGGGUGGACAGCGACCACAAAGACUCAUGGGGCUUCCCUGGGAGAACUUUGCACUUGAUGGAGCACCUCAAUUGCAGGUUUUGUUUUCCUCCUUUACCUCAUGUUAUAAUAAAGCUCUGAUUUCUGACUCACAA\
) } def
/len { sequence length } bind def

/coor [
[11.04724503 305.60653687]
[8.07291698 290.90438843]
[9.12379646 275.94125366]
[14.12211704 261.80261230]
[3.40502667 272.29754639]
[-7.31206369 282.79251099]
[-18.02915382 293.28744507]
[-28.74624443 303.78240967]
[-33.29060745 321.63183594]
[-50.45220184 325.31930542]
[-61.02171326 335.96286011]
[-65.25562286 351.20703125]
[-79.71385956 354.78598022]
[-90.28337097 365.42953491]
[-88.68576813 378.79736328]
[-94.98412323 390.47561646]
[-106.68376160 396.31045532]
[-119.41666412 394.37365723]
[-130.13375854 404.86859131]
[-140.85084534 415.36355591]
[-151.56793213 425.85848999]
[-155.50431824 434.08975220]
[-162.50868225 436.42385864]
[-173.37126160 446.76815796]
[-184.23384094 457.11245728]
[-195.09642029 467.45675659]
[-205.95899963 477.80102539]
[-213.25958252 493.10260010]
[-229.98416138 490.32321167]
[-231.94322205 473.48284912]
[-216.30329895 466.93844604]
[-205.44071960 456.59417725]
[-194.57814026 446.24987793]
[-183.71556091 435.90557861]
[-172.85298157 425.56127930]
[-162.06288147 415.14141846]
[-151.34579468 404.64645386]
[-140.62870789 394.15151978]
[-129.91162109 383.65655518]
[-130.45135498 366.84286499]
[-118.42329407 354.60351562]
[-100.92693329 354.86001587]
[-90.35742188 344.21646118]
[-86.87950897 329.73358154]
[-71.66527557 325.39337158]
[-61.09576416 314.74978638]
[-60.82632828 302.66259766]
[-52.11665726 293.70919800]
[-39.24119568 293.06530762]
[-28.52410316 282.57034302]
[-17.80701447 272.07540894]
[-7.08992338 261.58044434]
[3.62716675 251.08551025]
[12.69615364 239.13755798]
[19.92245865 225.99296570]
[20.38989258 218.62474060]
[27.34252930 212.71630859]
[34.75165939 199.67387390]
[42.16078568 186.63145447]
[49.56991196 173.58903503]
[40.94797897 166.86851501]
[33.21275330 159.14392090]
[26.48038673 150.53123474]
[20.85196686 141.15979004]
[16.41201210 131.17030334]
[13.22718906 120.71276855]
[11.34532166 109.94421387]
[10.79466724 99.02634430]
[11.58349419 88.12309265]
[13.69995689 77.39818573]
[17.11227608 67.01265717]
[21.76921463 57.12245941]
[27.60084152 47.87609863]
[34.51959610 39.41241074]
[24.40505791 28.33558083]
[14.29052258 17.25875092]
[-0.72861725 12.28522110]
[-3.59699631 -2.33058119]
[-13.71153259 -13.40741158]
[-23.82606888 -24.48424149]
[-33.94060516 -35.56107330]
[-44.05514145 -46.63790131]
[-59.67038345 -45.80233765]
[-72.13831329 -55.24081421]
[-75.57194519 -70.49677277]
[-68.35002899 -84.36680603]
[-53.88253403 -90.30192566]
[-39.00056458 -85.49973297]
[-30.73093605 -72.22768402]
[-32.97830963 -56.75243759]
[-22.86377335 -45.67560577]
[-12.74923801 -34.59877777]
[-2.63470221 -23.52194786]
[7.47983360 -12.44511700]
[21.77551460 -8.26387501]
[25.36735344 7.14421558]
[35.48188782 18.22104645]
[45.59642410 29.29787636]
[52.69338989 24.36519241]
[60.23437119 20.14241219]
[68.14859009 16.66917038]
[76.36176300 13.97806454]
[84.79680634 12.09435558]
[93.37454224 11.03572178]
[102.01447296 10.81210136]
[110.63548279 11.42559147]
[119.15667725 12.87043476]
[127.49806976 15.13306999]
[135.58135986 18.19226074]
[143.33068848 22.01929283]
[150.67332458 26.57824707]
[157.54032898 31.82633018]
[163.86727905 37.71429062]
[169.59477234 44.18685532]
[174.66905212 51.18328094]
[179.04249573 58.63789749]
[192.87043762 52.82516479]
[206.69839478 47.01242828]
[220.52633667 41.19969559]
[234.35427856 35.38696289]
[248.18223572 29.57422829]
[262.01016235 23.76149368]
[261.51876831 9.53262043]
[265.90298462 -3.98151112]
[274.61712646 -15.16494465]
[286.59909058 -22.68773842]
[300.39968872 -25.66410637]
[314.35803223 -23.75668526]
[326.80130005 -17.21462822]
[336.24523926 -6.84128857]
[350.15301514 -12.46038723]
[364.06076050 -18.07948685]
[377.96850586 -23.69858551]
[391.87628174 -29.31768417]
[405.78402710 -34.93678284]
[419.69180298 -40.55588150]
[433.59954834 -46.17498016]
[447.34500122 -52.18021774]
[460.91738892 -58.56690598]
[474.48980713 -64.95359802]
[488.06219482 -71.34028625]
[501.63461304 -77.72697449]
[515.20703125 -84.11366272]
[524.39941406 -96.99040985]
[539.20977783 -95.40850067]
[552.78216553 -101.79518890]
[566.35455322 -108.18187714]
[579.92700195 -114.56856537]
[586.35137939 -121.04742432]
[593.73376465 -120.94819641]
[607.39404297 -127.14476776]
[616.49517822 -140.78663635]
[632.84027100 -139.45587158]
[639.61480713 -124.52143860]
[629.84979248 -111.34660339]
[613.59057617 -113.48451233]
[599.93035889 -107.28794098]
[586.31365967 -100.99616241]
[572.74127197 -94.60947418]
[559.16888428 -88.22278595]
[545.59643555 -81.83609772]
[537.37487793 -69.41616821]
[521.59368896 -70.54125977]
[508.02130127 -64.15457153]
[494.44888306 -57.76787949]
[480.87649536 -51.38119125]
[467.30407715 -44.99449921]
[453.73168945 -38.60781097]
[452.65478516 -36.03005600]
[450.49713135 -33.72127151]
[447.35519409 -32.09334564]
[443.47207642 -31.51595879]
[439.21865845 -32.26722336]
[425.31088257 -26.64812469]
[411.40313721 -21.02902603]
[397.49536133 -15.40992641]
[383.58761597 -9.79082775]
[369.67987061 -4.17172861]
[355.77209473 1.44737017]
[341.86434937 7.06646919]
[341.96856689 22.91772461]
[335.96542358 37.63027954]
[324.74734497 48.93861771]
[310.01223755 55.08917236]
[294.00643921 55.11221313]
[279.18240356 48.97460556]
[267.82290649 37.58944321]
[253.99496460 43.40217590]
[240.16702271 49.21490860]
[226.33906555 55.02764130]
[212.51112366 60.84037781]
[198.68318176 66.65311432]
[184.85522461 72.46584320]
[189.06919861 94.97834778]
[187.41236877 117.82183838]
[179.99392700 139.49064636]
[167.30285645 158.55650330]
[150.17565918 173.76274109]
[129.74125671 184.10705566]
[107.34650421 188.90763855]
[84.46752167 187.84805298]
[62.61233902 180.99815369]
[55.20320892 194.04058838]
[47.79408264 207.08300781]
[40.38495255 220.12542725]
[33.06705856 233.21926880]
[25.84075356 246.36386108]
[38.11787415 237.74572754]
[52.24755859 232.71064758]
[67.20805359 231.62275696]
[81.91752625 234.56069946]
[95.31228638 241.31202698]
[106.42371368 251.38853455]
[114.44831848 264.06158447]
[118.80581665 278.41470337]
[119.18109894 293.41000366]
[115.54703522 307.96313477]
[108.16640472 321.02169800]
[97.57293701 331.64141846]
[84.53266144 339.05432129]
[69.98857117 342.72439575]
[54.99238205 342.38623047]
[40.62852097 338.06423950]
[27.93567276 330.07101440]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 53]
[5 52]
[6 51]
[7 50]
[8 49]
[10 46]
[11 45]
[13 43]
[14 42]
[18 39]
[19 38]
[20 37]
[21 36]
[23 35]
[24 34]
[25 33]
[26 32]
[27 31]
[54 207]
[55 206]
[57 205]
[58 204]
[59 203]
[60 202]
[74 98]
[75 97]
[76 96]
[78 94]
[79 93]
[80 92]
[81 91]
[82 90]
[116 193]
[117 192]
[118 191]
[119 190]
[120 189]
[121 188]
[122 187]
[130 180]
[131 179]
[132 178]
[133 177]
[134 176]
[135 175]
[136 174]
[137 173]
[138 168]
[139 167]
[140 166]
[141 165]
[142 164]
[143 163]
[145 161]
[146 160]
[147 159]
[148 158]
[150 157]
[151 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
