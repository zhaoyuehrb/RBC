%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 08:13:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAGUUUCCAGCCAAUGCAAUGAAGCCGGGUUGCAGAGAUUAGGUUGUGGCCAGAGCUAGAGUGAUUCCUUAAGCUUGUUUUAAAAUCUGCUCCAGCCUAAAGAGUUAAGGGAAAACCAUUUGUUCCCUUAAAGAGUUAAGGGAAAACCCUUGGCUCUGAGUCUUGUUGUGAAUAUUUCUUUGAUGAUUGUUAAUAAAAAGUGUUUUUUCUUUUUUCCCAUUUUUAAAAAUAACAAUAAAGUUUUAAAUAAGUU\
GAU\
) } def
/len { sequence length } bind def

/coor [
[159.91137695 247.88467407]
[152.90248108 250.55401611]
[147.22532654 264.43817139]
[149.16400146 280.14016724]
[137.18530273 288.99224854]
[131.50813293 302.87643433]
[125.83098602 316.76058960]
[120.15382385 330.64474487]
[114.47666931 344.52890015]
[121.53684998 360.55001831]
[114.94149780 376.40231323]
[99.23200226 382.44436646]
[93.72367096 396.39636230]
[96.66893768 412.52886963]
[83.99694824 422.93814087]
[68.74355316 416.91601562]
[66.60014343 400.65753174]
[79.77166748 390.88803101]
[85.27999878 376.93603516]
[78.55340576 365.96649170]
[79.37603760 352.93026733]
[87.67143250 342.58993530]
[100.59250641 338.85174561]
[106.26966858 324.96759033]
[111.94682312 311.08343506]
[117.62397766 297.19927979]
[123.30113220 283.31509399]
[120.95639038 268.60620117]
[133.34117126 258.76101685]
[139.01832581 244.87686157]
[124.90129089 234.92491150]
[116.53854370 220.60498047]
[114.95102692 204.79048157]
[119.86168671 190.39999390]
[129.84365845 179.85952759]
[122.84803772 166.59071350]
[115.85241699 153.32191467]
[108.85679626 140.05310059]
[101.86117554 126.78429413]
[94.86555481 113.51548004]
[82.69829559 104.74291992]
[67.89895630 102.29762268]
[53.09961700 99.85231781]
[38.30027390 97.40701294]
[23.50093460 94.96171570]
[8.70159245 92.51641083]
[-6.09774828 90.07110596]
[-20.89708900 87.62580872]
[-35.77399063 93.00989532]
[-47.06966782 83.30130005]
[-61.86901093 80.85599518]
[-76.66835022 78.41069794]
[-84.51803589 82.16815186]
[-92.22124481 80.99613190]
[-97.24018097 76.28214264]
[-112.22666931 75.64552307]
[-127.21315002 75.00890350]
[-142.19963074 74.37228394]
[-157.18612671 73.73567200]
[-171.30224609 80.88030243]
[-183.68966675 72.60980988]
[-198.67614746 71.97319794]
[-213.66262817 71.33657837]
[-225.13116455 82.21077728]
[-240.92742920 81.70700073]
[-251.67976379 70.12413788]
[-251.00901794 54.33408737]
[-239.31311035 43.70481110]
[-223.53103638 44.54246902]
[-213.02601624 56.35009384]
[-198.03953552 56.98670959]
[-183.05303955 57.62332916]
[-170.00886536 50.43315887]
[-156.54949951 58.74918365]
[-141.56301880 59.38580322]
[-126.57653809 60.02241898]
[-111.59004974 60.65903854]
[-96.60356903 61.29565811]
[-108.56738281 52.24760818]
[-115.63224792 39.01554108]
[-116.49491119 24.04036713]
[-110.99623871 10.08455944]
[-100.15055847 -0.27745673]
[-85.95858765 -5.13420057]
[-71.03831482 -3.58974862]
[-58.14207458 4.07099342]
[-49.64883804 16.43484879]
[-47.12535095 31.22105980]
[-51.03712463 45.70201492]
[-60.66255188 57.20640945]
[-74.22305298 63.61135483]
[-59.42370987 66.05665588]
[-44.62436676 68.50196075]
[-30.80601501 62.94296265]
[-18.45178795 72.82646942]
[-3.65244651 75.27176666]
[11.14689445 77.71707153]
[25.94623566 80.16236877]
[40.74557877 82.60767365]
[55.54491806 85.05297852]
[70.34426117 87.49827576]
[85.14360046 89.94358063]
[90.26708221 84.46636200]
[79.31281281 74.21921539]
[89.56014252 63.26511765]
[100.51404572 73.51192474]
[105.63753510 68.03470612]
[102.21109009 53.43130112]
[98.78464508 38.82789230]
[95.35820007 24.22448730]
[91.93175507 9.62108040]
[88.50531006 -4.98232603]
[85.07886505 -19.58573151]
[81.65242767 -34.18914032]
[78.22598267 -48.79254532]
[63.65150452 -53.85102081]
[54.14347458 -66.00012970]
[52.73587418 -81.36314392]
[59.87786102 -95.03778076]
[73.29045105 -102.66050720]
[88.69374084 -101.79894257]
[101.17258453 -92.72801208]
[106.74504852 -78.34220886]
[103.63295746 -63.23199844]
[92.82938385 -52.21899033]
[96.25582886 -37.61558151]
[99.68227386 -23.01217651]
[103.10871887 -8.40876961]
[106.53516388 6.19463682]
[109.96160889 20.79804230]
[113.38805389 35.40145111]
[116.81449127 50.00485611]
[120.24093628 64.60826111]
[135.17890930 65.97097015]
[141.19119263 52.22860718]
[147.20346069 38.48624420]
[153.21572876 24.74388123]
[159.22801208 11.00151825]
[165.24028015 -2.74084544]
[171.25256348 -16.48320961]
[177.26483154 -30.22557259]
[183.27709961 -43.96793747]
[189.28938293 -57.71030045]
[195.30165100 -71.45265961]
[192.94525146 -87.68163300]
[205.98754883 -97.62297821]
[221.01176453 -91.04990387]
[222.56225586 -74.72421265]
[209.04402161 -65.44039154]
[203.03173828 -51.69802475]
[197.01947021 -37.95566177]
[191.00720215 -24.21329880]
[184.99491882 -10.47093487]
[178.98265076 3.27142906]
[172.97036743 17.01379204]
[166.95809937 30.75615692]
[160.94583130 44.49851990]
[154.93354797 58.24088287]
[148.92127991 71.98324585]
[160.78598022 62.80562592]
[172.65069580 53.62800598]
[184.51539612 44.45038605]
[199.39183044 46.37179565]
[213.11831665 52.42021561]
[224.57513428 62.10223770]
[232.82765198 74.62804413]
[237.20269775 88.97583008]
[237.34333801 103.97517395]
[233.23812866 118.40248108]
[225.22195435 131.08084106]
[213.94873047 140.97601318]
[200.33807373 147.28077698]
[185.50028992 149.48081970]
[170.64578247 147.39668274]
[156.98631287 141.19837952]
[145.63629150 131.39164734]
[133.13565063 123.10105133]
[120.63500214 114.81045532]
[108.13436890 106.51985931]
[115.12998962 119.78867340]
[122.12561035 133.05747986]
[129.12123108 146.32629395]
[136.11685181 159.59509277]
[143.11247253 172.86390686]
[163.24560547 171.63241577]
[181.61883545 182.53105164]
[191.21565247 202.94229126]
[187.52815247 226.40180969]
[201.00296021 232.99191284]
[214.47778320 239.58200073]
[227.95259094 246.17210388]
[241.42739868 252.76220703]
[254.90222168 259.35229492]
[268.37704468 265.94241333]
[284.16375732 256.97372437]
[302.01419067 259.27999878]
[314.77746582 271.74618530]
[317.45568848 289.22567749]
[331.08639526 295.48696899]
[344.71710205 301.74826050]
[358.34780884 308.00958252]
[371.97851562 314.27087402]
[385.60919189 320.53216553]
[399.23989868 326.79348755]
[410.10946655 316.20022583]
[424.07327271 310.25244141]
[439.24288940 309.75451660]
[453.56668091 314.77380371]
[465.10751343 324.63146973]
[472.30456543 337.99435425]
[474.18450928 353.05523682]
[470.49310303 367.77725220]
[461.72955322 380.16937256]
[449.07910156 388.55566406]
[434.25256348 391.80197144]
[419.25512695 389.46920776]
[406.11508179 381.87289429]
[396.60952759 370.04037476]
[392.02398682 355.57189941]
[392.97860718 340.42419434]
[379.34790039 334.16287231]
[365.71719360 327.90158081]
[352.08648682 321.64028931]
[338.45578003 315.37896729]
[324.82507324 309.11767578]
[311.19436646 302.85638428]
[301.63851929 310.28866577]
[289.76168823 312.98025513]
[277.79449463 310.36294556]
[268.01113892 302.87158203]
[262.29733276 291.87301636]
[261.78692627 279.41720581]
[248.31211853 272.82711792]
[234.83731079 266.23703003]
[221.36248779 259.64691162]
[207.88768005 253.05682373]
[194.41287231 246.46672058]
[180.93804932 239.87661743]
[173.92915344 242.54597473]
[182.59495544 254.78948975]
[191.26075745 267.03302002]
[199.92655945 279.27655029]
[208.59236145 291.52008057]
[217.25814819 303.76361084]
[229.03540039 313.05319214]
[235.97508240 326.35134888]
[236.85981750 341.32522583]
[231.53439331 355.34805298]
[220.93301392 365.95986938]
[206.91545105 371.29913330]
[191.94068909 370.42913818]
[178.63571167 363.50256348]
[169.33451843 351.73449707]
[165.66877747 337.18930054]
[168.28260803 322.41601562]
[166.60836792 307.50973511]
[164.93411255 292.60348511]
[163.25987244 277.69720459]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 30]
[3 29]
[5 27]
[6 26]
[7 25]
[8 24]
[9 23]
[12 19]
[13 18]
[35 184]
[36 183]
[37 182]
[38 181]
[39 180]
[40 179]
[41 102]
[42 101]
[43 100]
[44 99]
[45 98]
[46 97]
[47 96]
[48 95]
[50 93]
[51 92]
[52 91]
[55 78]
[56 77]
[57 76]
[58 75]
[59 74]
[61 72]
[62 71]
[63 70]
[107 133]
[108 132]
[109 131]
[110 130]
[111 129]
[112 128]
[113 127]
[114 126]
[115 125]
[134 159]
[135 158]
[136 157]
[137 156]
[138 155]
[139 154]
[140 153]
[141 152]
[142 151]
[143 150]
[144 149]
[188 238]
[189 237]
[190 236]
[191 235]
[192 234]
[193 233]
[194 232]
[198 226]
[199 225]
[200 224]
[201 223]
[202 222]
[203 221]
[204 220]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
