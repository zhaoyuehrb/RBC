%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 04:02:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAAAACUCUGAAUGUAAGGAAUGUGGAAAUCUUUUAGGAAUUUCUCAUACCAUAAUUACCACAUUUGAAUUCACACUGAAGAGAAAUUUUAUUGGUACAAAGAAUGUGAGGAGGCCUUCAGUUAUCCCCAUUCACUUCGAAGACAUGAAAGAACUCAUACUCUAUGUGUCCCCUAUAAAUUUUAGGAAUGUUAGGGAGCCAAUGGAAUCU\
) } def
/len { sequence length } bind def

/coor [
[224.64009094 312.90795898]
[215.22911072 305.16241455]
[207.64544678 295.61117554]
[202.22822571 284.67633057]
[199.22067261 272.84204102]
[198.75930786 260.63299561]
[200.86769104 248.59106445]
[205.45520020 237.25146484]
[212.32102966 227.11877441]
[202.23484802 216.01612854]
[192.14866638 204.91348267]
[175.33039856 204.82566833]
[163.54788208 192.35525513]
[164.44798279 174.88429260]
[154.19914246 163.93159485]
[143.95030212 152.97891235]
[133.70146179 142.02622986]
[123.05582428 131.45880127]
[112.02785492 121.29102325]
[100.99988556 111.12322998]
[89.89723969 101.03704834]
[78.72050476 91.03301239]
[67.54377747 81.02898407]
[56.36704254 71.02494812]
[45.19031143 61.02091599]
[29.74730873 57.58227158]
[25.42430305 43.32881927]
[14.24757195 33.32478714]
[3.07084060 23.32075500]
[-12.01492405 26.43939209]
[-25.88230133 20.15057373]
[-33.29980469 7.05688715]
[-31.60518265 -7.71694946]
[-42.78191376 -17.72098160]
[-56.05429459 -15.43322659]
[-68.04612732 -21.12378883]
[-74.47604370 -32.51302719]
[-73.19194031 -45.33323669]
[-84.21990967 -55.50102234]
[-95.24787903 -65.66880798]
[-108.14247894 -65.92632294]
[-117.11825562 -74.62084961]
[-117.74348450 -86.70027161]
[-128.62028503 -97.02960205]
[-139.49710083 -107.35893250]
[-150.37390137 -117.68826294]
[-161.25071716 -128.01759338]
[-172.12751770 -138.34692383]
[-183.00433350 -148.67625427]
[-193.88113403 -159.00558472]
[-204.75794983 -169.33491516]
[-218.33407593 -162.63313293]
[-233.35577393 -160.98364258]
[-248.00788879 -164.56634521]
[-260.52661133 -172.93008423]
[-269.41168213 -185.04934692]
[-273.60635376 -199.45001221]
[-272.62289429 -214.38861084]
[-266.59921265 -228.06343079]
[-277.47601318 -238.39276123]
[-288.35281372 -248.72209167]
[-299.22961426 -259.05142212]
[-310.10641479 -269.38073730]
[-332.21893311 -273.01525879]
[-337.53936768 -293.99499512]
[-349.00631714 -303.66503906]
[-360.47323608 -313.33508301]
[-371.94015503 -323.00509644]
[-386.92736816 -319.44287109]
[-400.97421265 -325.31994629]
[-408.77468872 -338.18917847]
[-407.51654053 -353.00656128]
[-418.98345947 -362.67660522]
[-430.45040894 -372.34661865]
[-441.91732788 -382.01666260]
[-457.92361450 -387.60543823]
[-456.98422241 -404.53335571]
[-440.45782471 -408.31677246]
[-432.24728394 -393.48358154]
[-420.78036499 -383.81353760]
[-409.31344604 -374.14352417]
[-397.84649658 -364.47348022]
[-383.45413208 -368.21481323]
[-369.45285034 -362.69866943]
[-361.28894043 -349.84548950]
[-362.27014160 -334.47204590]
[-350.80319214 -324.80200195]
[-339.33627319 -315.13195801]
[-327.86935425 -305.46194458]
[-320.34530640 -307.78591919]
[-312.42187500 -306.93780518]
[-305.39645386 -302.98193359]
[-300.44873047 -296.49740601]
[-298.44284058 -288.49453735]
[-299.77709961 -280.25756836]
[-288.90029907 -269.92822266]
[-278.02349854 -259.59890747]
[-267.14666748 -249.26956177]
[-256.26986694 -238.94023132]
[-242.92408752 -245.66151428]
[-228.05613708 -247.41450500]
[-213.45820618 -243.96849060]
[-200.89662170 -235.72058105]
[-191.89807129 -223.65010071]
[-187.56410217 -209.20237732]
[-188.43627930 -194.11558533]
[-194.42861938 -180.21171570]
[-183.55180359 -169.88238525]
[-172.67500305 -159.55305481]
[-161.79818726 -149.22372437]
[-150.92138672 -138.89439392]
[-140.04457092 -128.56507874]
[-129.16777039 -118.23574066]
[-118.29096222 -107.90641022]
[-107.41415405 -97.57707977]
[-90.15474701 -94.39862823]
[-85.08009338 -76.69677734]
[-74.05212402 -66.52899170]
[-63.02415466 -56.36120605]
[-46.26393890 -57.76014709]
[-33.42539215 -46.37986374]
[-32.77788162 -28.89771461]
[-21.60115051 -18.89368057]
[-7.10468864 -22.20888901]
[6.72781610 -16.28218460]
[14.50907230 -3.19381404]
[13.07487392 12.14402294]
[24.25160408 22.14805603]
[35.42833710 32.15208817]
[50.07190323 34.87517548]
[55.19434357 49.84418488]
[66.37107849 59.84821701]
[77.54780579 69.85224915]
[88.72454071 79.85628510]
[99.90126801 89.86031342]
[107.52905273 92.46185303]
[111.16767883 100.09526062]
[122.19564819 110.26305389]
[133.22361755 120.43083954]
[135.22410583 105.56483459]
[148.01562500 97.73047638]
[162.16709900 102.70396423]
[167.24481201 116.81838226]
[159.50498962 129.66732788]
[144.65415955 131.77738953]
[154.90298462 142.73007202]
[165.15182495 153.68275452]
[175.40066528 164.63545227]
[188.82330322 163.52966309]
[200.26527405 170.25779724]
[205.66345215 182.17074585]
[203.25131226 194.82728577]
[213.33750916 205.92994690]
[223.42369080 217.03259277]
[239.68092346 209.19792175]
[257.54159546 206.73396301]
[275.27984619 209.86840820]
[291.18478394 218.28848267]
[303.72567749 231.17210388]
[311.69903564 247.26820374]
[314.34426880 265.01809692]
[311.41616821 282.70651245]
[303.20761108 298.62731934]
[314.08444214 308.95666504]
[324.96124268 319.28598022]
[335.83804321 329.61532593]
[346.71484375 339.94464111]
[362.28994751 339.71130371]
[373.17343140 350.34164429]
[373.29989624 365.19155884]
[384.17669678 375.52087402]
[399.51156616 379.41351318]
[403.41229248 393.78826904]
[414.28912354 404.11758423]
[425.16592407 414.44692993]
[436.04272461 424.77624512]
[446.91952515 435.10559082]
[460.25363159 433.21029663]
[472.07238770 439.25204468]
[478.16360474 450.82598877]
[476.50192261 463.60275269]
[487.22521973 474.09136963]
[497.94848633 484.57998657]
[508.67178345 495.06863403]
[524.22277832 501.82156372]
[522.03869629 518.63421631]
[505.27844238 521.18969727]
[498.18313599 505.79190063]
[487.45986938 495.30328369]
[476.73657227 484.81466675]
[466.01330566 474.32601929]
[449.21911621 475.23004150]
[436.72180176 463.47604370]
[436.59020996 445.98239136]
[425.71340942 435.65307617]
[414.83657837 425.32373047]
[403.95977783 414.99441528]
[393.08297729 404.66506958]
[378.52609253 401.51126099]
[373.84738159 386.39770508]
[362.97058105 376.06835938]
[348.13394165 376.70828247]
[336.95614624 366.38781738]
[336.38552856 350.82144165]
[325.50872803 340.49212646]
[314.63189697 330.16278076]
[303.75509644 319.83346558]
[292.87829590 309.50411987]
[282.70626831 316.13903809]
[271.36300659 320.49789429]
[259.35095215 322.38430786]
[247.20300293 321.71148682]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 154]
[10 153]
[11 152]
[14 148]
[15 147]
[16 146]
[17 145]
[18 139]
[19 138]
[20 137]
[21 135]
[22 134]
[23 133]
[24 132]
[25 131]
[27 129]
[28 128]
[29 127]
[33 123]
[34 122]
[38 119]
[39 118]
[40 117]
[43 115]
[44 114]
[45 113]
[46 112]
[47 111]
[48 110]
[49 109]
[50 108]
[51 107]
[59 99]
[60 98]
[61 97]
[62 96]
[63 95]
[65 89]
[66 88]
[67 87]
[68 86]
[72 82]
[73 81]
[74 80]
[75 79]
[163 208]
[164 207]
[165 206]
[166 205]
[167 204]
[170 201]
[171 200]
[173 198]
[174 197]
[175 196]
[176 195]
[177 194]
[181 191]
[182 190]
[183 189]
[184 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
