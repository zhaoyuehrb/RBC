%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 06:23:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCAGUGAAACUACUUAACACAGCUAAUUUUUUUCUCUGAAAAAUCAUCGAGACAAAAGAGCCACAGAGUACAAGUUUUUAUGAUUUUAUAGUCAAAAGAUGAUUAUUGAUUGUGAGAUAGGUUAGGUUUUGGGGGGCCAGUAGUUCAGUGAGAAUGUUUAUGUUUACAACUAGCCUUCCCAGUAAAAAA\
) } def
/len { sequence length } bind def

/coor [
[62.47171783 125.24243927]
[72.80125427 114.36582947]
[86.99834442 109.52742004]
[72.18109894 111.86174774]
[62.87904358 124.35613251]
[47.81899261 126.51239777]
[35.96483231 117.56731415]
[21.14758301 119.90164948]
[6.33033323 122.23597717]
[-8.48691654 124.57031250]
[-23.30416679 126.90464020]
[-38.12141800 129.23896790]
[-52.87656784 131.93812561]
[-67.56064606 135.00047302]
[-82.24472046 138.06282043]
[-96.92879486 141.12515259]
[-99.78906250 153.73803711]
[-107.18520355 164.29054260]
[-117.98689270 171.23164368]
[-130.56651306 173.55754089]
[-143.04443359 170.95672607]
[-153.56979370 163.85112000]
[-160.59507751 153.32815552]
[-175.37193298 155.90586853]
[-190.14878845 158.48359680]
[-195.47969055 162.44056702]
[-201.15544128 163.01235962]
[-205.45344543 160.89471436]
[-220.30708313 162.98503113]
[-235.16072083 165.07533264]
[-250.01435852 167.16564941]
[-264.86801147 169.25596619]
[-277.45529175 178.84088135]
[-291.13659668 172.95266724]
[-305.99023438 175.04298401]
[-320.84387207 177.13328552]
[-335.69754028 179.22360229]
[-350.51477051 181.55793762]
[-365.29162598 184.13565063]
[-380.06848145 186.71337891]
[-392.29629517 197.64097595]
[-407.78710938 192.25883484]
[-410.60525513 176.10365295]
[-397.85171509 165.79447937]
[-382.64620972 171.93652344]
[-367.86935425 169.35881042]
[-353.09249878 166.78108215]
[-349.65374756 163.44458008]
[-344.07711792 162.24365234]
[-337.78784180 164.36996460]
[-322.93420410 162.27964783]
[-308.08056641 160.18934631]
[-293.22692871 158.09902954]
[-281.70205688 148.66363525]
[-266.95831299 154.40232849]
[-252.10467529 152.31201172]
[-237.25103760 150.22169495]
[-222.39739990 148.13139343]
[-207.54376221 146.04107666]
[-192.72650146 143.70674133]
[-177.94966125 141.12902832]
[-163.17280579 138.55130005]
[-157.85586548 122.19016266]
[-144.92512512 110.70883179]
[-127.87528992 107.33065796]
[-111.37560272 113.07252502]
[-99.99113464 126.44108582]
[-85.30706024 123.37873840]
[-70.62298584 120.31639862]
[-55.93891144 117.25405884]
[-53.70728302 114.50347900]
[-50.02505875 112.70487976]
[-45.35784912 112.53156281]
[-40.45574951 114.42172241]
[-25.63849831 112.08739471]
[-10.82124901 109.75305939]
[3.99600124 107.41873169]
[18.81325150 105.08439636]
[33.63050079 102.75006104]
[42.16029739 90.59365845]
[57.15384293 88.01523590]
[69.84676361 97.04450226]
[84.66401672 94.71016693]
[95.48643494 84.32386780]
[98.42790985 69.61510468]
[101.36938477 54.90634155]
[104.31085968 40.19757843]
[107.25234222 25.48881340]
[110.19381714 10.78005028]
[113.13529205 -3.92871261]
[116.07677460 -18.63747597]
[119.01824951 -33.34623718]
[121.95972443 -48.05500031]
[124.90119934 -62.76376343]
[127.84268188 -77.47252655]
[130.78414917 -92.18128967]
[119.19433594 -102.25956726]
[114.21157837 -116.78773499]
[117.17620850 -131.85778809]
[127.29076385 -143.41595459]
[141.83447266 -148.35316467]
[156.89517212 -145.34130859]
[168.42156982 -135.19056702]
[173.31317139 -120.63144684]
[170.25411987 -105.58027649]
[160.06730652 -94.08573914]
[145.49291992 -89.23981476]
[142.55143738 -74.53105164]
[139.60997009 -59.82228851]
[136.66848755 -45.11352539]
[133.72700500 -30.40476227]
[130.78553772 -15.69599819]
[127.84405518 -0.98723555]
[124.90258026 13.72152805]
[121.96110535 28.43029022]
[119.01962280 43.13905334]
[116.07814789 57.84781647]
[113.13667297 72.55657959]
[110.19519806 87.26534271]
[119.82833862 75.76741028]
[126.69185638 62.42978668]
[139.50982666 54.63880539]
[154.50975037 54.68746567]
[167.27691650 62.56145096]
[174.05374146 75.94332886]
[172.84571838 90.89459991]
[164.00839233 103.01489258]
[150.14270020 108.73702240]
[135.32966614 106.37692261]
[120.36048889 107.33813477]
[133.95799255 113.67119598]
[147.55551147 120.00425720]
[161.15303040 126.33731842]
[174.75053406 132.67037964]
[188.34805298 139.00344849]
[201.99717712 145.22445679]
[215.69702148 151.33302307]
[229.39685059 157.44158936]
[245.15177917 155.99488831]
[253.62495422 168.24455261]
[267.32479858 174.35311890]
[281.02462769 180.46168518]
[296.77954102 179.01498413]
[305.25274658 191.26464844]
[318.95257568 197.37321472]
[333.48040771 188.72663879]
[350.13470459 190.41996765]
[362.37948608 201.58979797]
[365.52789307 217.69287109]
[379.32635498 223.57528687]
[393.12481689 229.45768738]
[406.92324829 235.34010315]
[420.72171021 241.22250366]
[436.92773438 238.71316528]
[446.99163818 251.66113281]
[440.56054688 266.74664307]
[424.25018311 268.45104980]
[414.83929443 255.02096558]
[401.04083252 249.13854980]
[387.24240112 243.25613403]
[373.44393921 237.37373352]
[359.64547729 231.49131775]
[348.86807251 239.38694763]
[335.48880005 240.93429565]
[322.99435425 235.62234497]
[314.69418335 224.74174500]
[312.84399414 211.07304382]
[299.14416504 204.96447754]
[284.36914062 206.84811401]
[274.91607666 194.16151428]
[261.21621704 188.05294800]
[247.51640320 181.94439697]
[232.74137878 183.82801819]
[223.28828430 171.14141846]
[209.58845520 165.03286743]
[195.88862610 158.92430115]
[188.48660278 159.07203674]
[182.01498413 152.60095215]
[168.41746521 146.26788330]
[154.81996155 139.93482971]
[141.22244263 133.60176086]
[127.62493896 127.26870728]
[114.02742767 120.93564606]
[120.46456909 134.48419189]
[119.87664032 149.47267151]
[112.39800262 162.47535706]
[99.73796082 170.52043152]
[84.79002380 171.76913452]
[70.97064209 165.93606567]
[61.43831253 154.35441589]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 83]
[4 82]
[7 79]
[8 78]
[9 77]
[10 76]
[11 75]
[12 74]
[13 70]
[14 69]
[15 68]
[16 67]
[23 62]
[24 61]
[25 60]
[28 59]
[29 58]
[30 57]
[31 56]
[32 55]
[34 53]
[35 52]
[36 51]
[37 50]
[38 47]
[39 46]
[40 45]
[84 119]
[85 118]
[86 117]
[87 116]
[88 115]
[89 114]
[90 113]
[91 112]
[92 111]
[93 110]
[94 109]
[95 108]
[96 107]
[130 183]
[131 182]
[132 181]
[133 180]
[134 179]
[135 178]
[136 176]
[137 175]
[138 174]
[140 172]
[141 171]
[142 170]
[144 168]
[145 167]
[149 162]
[150 161]
[151 160]
[152 159]
[153 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
