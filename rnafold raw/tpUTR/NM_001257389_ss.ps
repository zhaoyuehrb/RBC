%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 09:09:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUCUGGUCUCCUCAGCCUCCUCAUCUGGGGGAGUGGAAUAGUAUCCUCCAGGUUUUUCAAUUAAACGGAUUAUUUUUUCAGACCGAAAAGAGAUGGUCUGAGUUUGUCUUAGAGUG\
) } def
/len { sequence length } bind def

/coor [
[67.64682770 175.44931030]
[59.75034332 188.20257568]
[51.85385895 200.95582581]
[49.95756912 210.02304077]
[43.57683945 213.93763733]
[35.34646225 226.47801208]
[27.11608696 239.01837158]
[18.88570976 251.55874634]
[20.72426033 267.49609375]
[9.30855179 278.76824951]
[-6.60425949 276.72814941]
[-14.80722713 262.94079590]
[-9.00773716 247.98268127]
[6.34533930 243.32836914]
[14.57571602 230.78799438]
[22.80609322 218.24763489]
[31.03647041 205.70726013]
[39.10060120 193.05934143]
[46.99708557 180.30609131]
[54.89356613 167.55282593]
[53.94348907 148.31437683]
[71.61640930 138.79258728]
[78.82883453 125.64036560]
[86.04125214 112.48814392]
[82.12710571 98.00783539]
[69.27072906 90.28037262]
[56.41434860 82.55291748]
[43.55797195 74.82546234]
[30.70159721 67.09800720]
[17.84522057 59.37054825]
[4.98884439 51.64309311]
[-7.86753225 43.91563416]
[-20.72390747 36.18817902]
[-33.58028412 28.46072197]
[-46.62506104 36.46649551]
[-61.89687729 37.48147202]
[-75.88638306 31.27242088]
[-85.37889099 19.26613617]
[-88.19309235 4.22157478]
[-83.68231201 -10.40413475]
[-72.88307953 -21.25011063]
[-58.27698898 -25.82402802]
[-43.22040939 -23.07483292]
[-31.17323875 -13.63427067]
[-24.90382195 0.32828677]
[-25.85282707 15.60434532]
[-12.99645138 23.33180237]
[-0.14007525 31.05925941]
[12.71630096 38.78671646]
[25.57267761 46.51417160]
[38.42905426 54.24163055]
[51.28543091 61.96908569]
[64.14180756 69.69654083]
[76.99818420 77.42400360]
[89.85456085 85.15145874]
[79.39717102 74.39771271]
[74.02312469 60.39344025]
[74.60198212 45.40461349]
[81.04006958 31.85651207]
[92.29566956 21.94130135]
[106.54756927 17.26331902]
[121.48971558 18.57949066]
[134.70437622 25.67685127]
[144.05335999 37.40700531]
[148.02394104 51.87194824]
[145.97363281 66.73116302]
[138.23422241 79.58034515]
[126.05796814 88.34041595]
[111.41247559 91.59399414]
[126.40071869 92.18783569]
[141.38896179 92.78167725]
[156.37719727 93.37551880]
[161.91598511 83.09586334]
[170.89019775 75.70619202]
[181.94273376 72.27331543]
[193.42120361 73.26947021]
[203.62501526 78.50779724]
[211.05726624 87.17584991]
[214.64430237 97.96135712]
[229.53857422 99.73916626]
[244.43286133 101.51696777]
[259.32711792 103.29477692]
[274.22140503 105.07258606]
[289.11569214 106.85038757]
[304.00994873 108.62819672]
[318.90423584 110.40600586]
[333.79849243 112.18381500]
[344.24359131 100.70862579]
[359.44555664 97.59745026]
[373.55895996 104.04659271]
[381.15692139 117.57622528]
[379.31781006 132.98393250]
[368.74887085 144.34512329]
[353.51403809 147.29121399]
[339.47140503 140.68934631]
[332.02069092 127.07808685]
[317.12640381 125.30027771]
[302.23214722 123.52246857]
[287.33786011 121.74466705]
[272.44360352 119.96685791]
[257.54931641 118.18904877]
[242.65504456 116.41124725]
[227.76077271 114.63343811]
[212.86650085 112.85562897]
[201.14059448 127.24327850]
[183.00489807 131.83674622]
[165.57083130 124.65317535]
[155.78335571 108.36376190]
[140.79510498 107.76992035]
[125.80686951 107.17607117]
[110.81863403 106.58222961]
[109.31419373 111.77667236]
[105.36582184 116.51615906]
[99.19347382 119.70056152]
[91.98105621 132.85278320]
[84.76863861 146.00500488]
[88.45323944 156.40692139]
[85.78888702 166.88761902]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 20]
[2 19]
[3 18]
[5 17]
[6 16]
[7 15]
[8 14]
[22 116]
[23 115]
[24 114]
[25 55]
[26 54]
[27 53]
[28 52]
[29 51]
[30 50]
[31 49]
[32 48]
[33 47]
[34 46]
[69 111]
[70 110]
[71 109]
[72 108]
[79 104]
[80 103]
[81 102]
[82 101]
[83 100]
[84 99]
[85 98]
[86 97]
[87 96]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
