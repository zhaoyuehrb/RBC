%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 14:30:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUCCUGUGCCCUCGUCCAGCUGCUGCCCUCCACAGCGGUUCUUCACAGGAUCCCAGCAAUGAACUGUUCUAGGGAAAGUGGCUUCCUGCCCAAACUGGAUGGGACACGUGGGGAGUGGGGUGGGGGGAGCUAUUUCCAAGGCCCCUCCCUGUUUCCCCAGCAAUUAAAACGGACUCAUCUCUGGCCCCAUGGCCUUGAUCUCAGCA\
) } def
/len { sequence length } bind def

/coor [
[126.01392365 168.05751038]
[119.24446869 154.67190552]
[112.47501373 141.28630066]
[105.70556641 127.90068817]
[98.93611145 114.51508331]
[86.85433960 105.62514496]
[72.06089020 103.14447021]
[57.26743698 100.66378784]
[42.47398376 98.18311310]
[27.58425522 103.53161621]
[16.31181908 93.79603577]
[1.51836765 91.31536102]
[-7.46505165 92.98265076]
[-13.47907543 88.68387604]
[-28.23337364 85.98004913]
[-42.98767090 83.27622986]
[-57.74197006 80.57240295]
[-72.49626923 77.86857605]
[-87.25056458 75.16474915]
[-102.00486755 72.46092224]
[-118.58128357 88.51712799]
[-143.22280884 86.63327026]
[-159.15655518 65.64689636]
[-174.15484619 65.87344360]
[-189.15313721 66.09999847]
[-204.73445129 75.91142273]
[-219.71864319 66.77875519]
[-234.71180725 67.23179626]
[-249.70495605 67.68484497]
[-264.69812012 68.13788605]
[-271.00775146 78.21714783]
[-281.29464722 83.93956757]
[-292.94610596 83.98413849]
[-303.06607056 78.45549774]
[-309.19491577 68.82920074]
[-324.19491577 68.82920074]
[-339.19491577 68.82920074]
[-354.19491577 68.82920074]
[-369.19491577 68.82920074]
[-384.19491577 68.82920074]
[-399.19491577 68.82920074]
[-414.19491577 68.82920074]
[-420.06304932 82.82351685]
[-430.81298828 93.47630310]
[-444.78469849 99.18636322]
[-459.83734131 99.11240387]
[-473.67727661 93.29682922]
[-484.20761108 82.65455627]
[-489.84576416 68.82920074]
[-504.84576416 68.82920074]
[-520.68487549 74.87553406]
[-530.87963867 61.32919693]
[-520.68487549 47.78285980]
[-504.84576416 53.82919693]
[-489.84576416 53.82919693]
[-484.20761108 40.00384140]
[-473.67727661 29.36156845]
[-459.83734131 23.54599571]
[-444.78469849 23.47203445]
[-430.81298828 29.18209457]
[-420.06304932 39.83488083]
[-414.19491577 53.82919693]
[-399.19491577 53.82919693]
[-384.19491577 53.82919693]
[-369.19491577 53.82919693]
[-354.19491577 53.82919693]
[-339.19491577 53.82919693]
[-324.19491577 53.82919693]
[-309.19491577 53.82919693]
[-297.05545044 40.12931442]
[-278.43795776 39.64265442]
[-265.15115356 53.14472961]
[-250.15800476 52.69168472]
[-235.16485596 52.23863983]
[-220.17169189 51.78559494]
[-211.65351868 43.19472885]
[-199.16462708 42.69592667]
[-189.37968445 51.10170746]
[-174.38139343 50.87515640]
[-159.38310242 50.64860916]
[-152.11315918 37.52809525]
[-159.87322998 24.69137383]
[-167.63328552 11.85465527]
[-182.80337524 6.63466406]
[-188.04463196 -8.52807617]
[-179.33644104 -22.00200844]
[-163.35896301 -23.45108604]
[-152.36875916 -11.76369953]
[-154.79656982 4.09458828]
[-147.03649902 16.93130684]
[-139.27644348 29.76802635]
[-127.15879059 28.36966133]
[-115.81229401 31.42719650]
[-106.75587463 38.19291306]
[-101.07633209 47.44719696]
[-99.30104065 57.70662689]
[-84.54674530 60.41044998]
[-69.79244232 63.11427689]
[-55.03814697 65.81809998]
[-40.28384781 68.52192688]
[-25.52954865 71.22575378]
[-10.77524948 73.92958069]
[3.99904704 76.52190399]
[18.79249954 79.00258636]
[32.62410355 73.47664642]
[44.95466614 83.38965607]
[59.74811554 85.87033844]
[74.54157257 88.35101318]
[89.33502197 90.83169556]
[108.65125275 73.77762604]
[120.73302460 64.88769531]
[132.81478882 55.99776459]
[144.89656067 47.10783005]
[156.97831726 38.21789932]
[169.06008911 29.32796478]
[181.14186096 20.43803215]
[188.13504028 3.40462303]
[205.63771057 2.14418077]
[217.58383179 -6.92721176]
[229.52995300 -15.99860477]
[241.47607422 -25.06999779]
[247.78742981 -39.57783127]
[262.60275269 -41.11272049]
[274.54885864 -50.18411255]
[286.49499512 -59.25550842]
[298.44110107 -68.32689667]
[310.10778809 -77.75495911]
[321.48440552 -87.53109741]
[332.86102295 -97.30722809]
[344.23764038 -107.08335876]
[349.15151978 -122.72898865]
[365.21463013 -126.03167725]
[375.90264893 -113.59389496]
[370.22064209 -98.21057129]
[354.01376343 -95.70674896]
[342.63714600 -85.93061829]
[331.26052856 -76.15448761]
[319.88394165 -66.37834930]
[319.53924561 -63.59414673]
[318.06961060 -60.77891541]
[315.45773315 -58.36228561]
[311.84225464 -56.77219009]
[307.51251221 -56.38077545]
[295.56637573 -47.30938339]
[283.62026978 -38.23799133]
[271.67413330 -29.16659927]
[266.21722412 -15.30761147]
[250.54747009 -13.12387466]
[238.60133362 -4.05248260]
[226.65521240 5.01891041]
[214.70909119 14.09030247]
[212.75904846 26.03013039]
[202.87873840 33.68523788]
[190.03178406 32.51979828]
[177.95002747 41.40973282]
[165.86825562 50.29966354]
[153.78648376 59.18959808]
[141.70472717 68.07952881]
[129.62295532 76.96945953]
[117.54118347 85.85939789]
[132.40599060 83.85005188]
[145.65490723 76.81681061]
[160.65142822 77.13956451]
[173.58547974 84.73630524]
[181.17094421 97.67696381]
[181.48063660 112.67376709]
[174.43585205 125.91654205]
[161.82644653 134.04075623]
[146.85601807 134.98231506]
[133.32806396 128.50202942]
[124.67987061 116.24715424]
[112.32171631 107.74562836]
[119.09117126 121.13123322]
[125.86062622 134.51684570]
[132.63008118 147.90245056]
[139.39953613 161.28805542]
[161.07676697 172.50540161]
[159.31982422 196.13812256]
[167.46405029 208.73460388]
[175.60829163 221.33108521]
[189.01655579 222.62365723]
[199.08477783 231.27688599]
[202.28271484 243.96118164]
[197.65991211 255.99006653]
[205.61297607 268.70812988]
[213.56604004 281.42617798]
[221.51908875 294.14422607]
[236.24723816 301.35629272]
[237.09539795 317.73348999]
[223.19105530 326.42837524]
[208.83779907 318.49639893]
[208.80104065 302.09729004]
[200.84797668 289.37924194]
[192.89492798 276.66119385]
[184.94186401 263.94311523]
[168.40829468 260.87002563]
[159.02729797 246.50775146]
[163.01181030 229.47532654]
[154.86756897 216.87884521]
[146.72332764 204.28234863]
[140.75808716 204.84645081]
[134.83291626 203.71511841]
[129.42324829 200.95625305]
[124.96952057 196.76916504]
[121.84130859 191.47042847]
[120.30677795 185.46995544]
[120.50975037 179.23934937]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 176]
[2 175]
[3 174]
[4 173]
[5 172]
[6 109]
[7 108]
[8 107]
[9 106]
[11 104]
[12 103]
[14 102]
[15 101]
[16 100]
[17 99]
[18 98]
[19 97]
[20 96]
[23 80]
[24 79]
[25 78]
[27 75]
[28 74]
[29 73]
[30 72]
[35 69]
[36 68]
[37 67]
[38 66]
[39 65]
[40 64]
[41 63]
[42 62]
[49 55]
[50 54]
[81 91]
[82 90]
[83 89]
[110 160]
[111 159]
[112 158]
[113 157]
[114 156]
[115 155]
[116 154]
[118 151]
[119 150]
[120 149]
[121 148]
[123 146]
[124 145]
[125 144]
[126 143]
[127 138]
[128 137]
[129 136]
[130 135]
[178 200]
[179 199]
[180 198]
[184 195]
[185 194]
[186 193]
[187 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
