%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 20:43:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGCAGCCUUGUUCCAGAAUGUCCUGAGACAGAGAUCGUGAAAGAAGAAGUCGUGAGCCUGCGGUCCAGUCAGUCCAGCUCGGGACCGAUGCCUGCUGUGCCUUCCUGCUGAGGGACACCUGCUUAUUUUCCCCCGUGGGCCUCACUCUAUCCCUGAAAACAGUGAAUGUUAUAUGAAGUUUGUUCUCAAGUUCUCUCUA\
) } def
/len { sequence length } bind def

/coor [
[3.38944340 547.98968506]
[-0.73519844 562.41143799]
[-4.85984039 576.83319092]
[-8.98448181 591.25500488]
[-8.33566284 600.37292480]
[-13.28614998 605.86706543]
[-17.63347816 620.22326660]
[-13.37703896 636.06042480]
[-25.15407372 647.47241211]
[-40.84938049 642.71960449]
[-44.31697083 626.69122314]
[-31.98968697 615.87597656]
[-27.64235878 601.51977539]
[-23.40624809 587.13031006]
[-19.28160667 572.70855713]
[-15.15696430 558.28680420]
[-11.03232288 543.86505127]
[-7.13135433 529.38116455]
[-3.45499444 514.83868408]
[0.22136569 500.29617310]
[-7.60497427 487.67538452]
[-4.08378601 472.87484741]
[9.20711040 464.75143433]
[1.38077009 452.13067627]
[4.90195847 437.33013916]
[18.19285393 429.20672607]
[21.86921501 414.66421509]
[25.43293762 400.09368896]
[28.88380814 385.49603271]
[32.33467865 370.89840698]
[35.78555298 356.30075073]
[39.12336731 341.67681885]
[42.34792328 327.02749634]
[45.57247925 312.37820435]
[48.79703522 297.72888184]
[40.58387375 285.35635376]
[43.64534760 270.45394897]
[56.67848206 261.92312622]
[59.90304184 247.27380371]
[63.12759781 232.62449646]
[66.35214996 217.97518921]
[69.57671356 203.32588196]
[64.75629425 189.23287964]
[75.27932739 177.41864014]
[78.50388336 162.76933289]
[73.68346405 148.67631531]
[84.20649719 136.86207581]
[73.45518494 130.06027222]
[65.37536621 120.23319244]
[60.78018951 108.36981964]
[60.13212585 95.66410828]
[63.49639130 83.39476013]
[70.53440857 72.79657745]
[80.53786469 64.93616486]
[92.50000000 60.60460281]
[92.50000000 45.60460281]
[92.50000000 30.60460091]
[92.50000000 15.60460091]
[92.50000000 0.60460097]
[92.38393402 -14.39494991]
[92.15180206 -29.39315414]
[91.91967773 -44.39135742]
[91.68754578 -59.38956070]
[91.45542145 -74.38776398]
[91.22328949 -89.38597107]
[90.99116516 -104.38417053]
[70.18887329 -112.28585815]
[54.88556290 -128.37185669]
[48.06125641 -149.44705200]
[51.01769638 -171.35099792]
[63.13029480 -189.77931213]
[54.42657471 -201.99591064]
[45.72285461 -214.21250916]
[31.41376877 -220.96237183]
[30.33036232 -235.81752014]
[21.62664413 -248.03411865]
[12.92292595 -260.25070190]
[4.21920729 -272.46731567]
[-11.40641975 -274.83697510]
[-20.71239853 -287.61096191]
[-18.17765808 -303.21066284]
[-5.30601501 -312.38104248]
[10.26601410 -309.68151855]
[19.29981995 -296.71365356]
[16.43580627 -281.17102051]
[25.13952446 -268.95443726]
[33.84324265 -256.73782349]
[42.54696274 -244.52124023]
[56.23350143 -238.64518738]
[57.93945694 -222.91622925]
[66.64317322 -210.69963074]
[75.34689331 -198.48303223]
[80.90673828 -200.87597656]
[86.71642303 -202.57469177]
[92.68962860 -203.55395508]
[98.73759460 -203.79919434]
[104.77047729 -203.30677795]
[109.11780548 -217.66299438]
[104.51079559 -235.48847961]
[117.76504517 -246.98612976]
[121.88968658 -261.40789795]
[126.01432800 -275.82965088]
[130.02725220 -290.28289795]
[133.92822266 -304.76678467]
[137.82919312 -319.25064087]
[141.73016357 -333.73452759]
[145.63113403 -348.21838379]
[138.90589905 -362.78378296]
[146.22895813 -377.05795288]
[161.98269653 -380.09100342]
[174.08218384 -369.55621338]
[173.24574280 -353.53497314]
[160.11499023 -344.31741333]
[156.21403503 -329.83355713]
[152.31306458 -315.34967041]
[148.41209412 -300.86581421]
[144.51112366 -286.38192749]
[145.80792236 -279.10104370]
[140.43609619 -271.70501709]
[136.31146240 -257.28326416]
[132.18681335 -242.86148071]
[137.78335571 -232.13290405]
[134.46029663 -220.08119202]
[123.47401428 -213.31565857]
[119.12668610 -198.95945740]
[128.81211853 -192.93803406]
[136.87760925 -184.85836792]
[142.89437866 -175.14239502]
[146.54081726 -164.29924011]
[147.61970520 -152.89855957]
[146.06887817 -141.54058838]
[141.96472168 -130.82450867]
[135.51849365 -121.31691742]
[127.06542206 -113.52178192]
[117.04730225 -107.85380554]
[105.98936462 -104.61630249]
[106.22149658 -89.61809540]
[106.45362091 -74.61989594]
[106.68575287 -59.62168884]
[106.91787720 -44.62348557]
[107.15000916 -29.62528229]
[107.38213348 -14.62707806]
[110.63101959 -7.98343801]
[107.50000000 0.60460097]
[107.50000000 15.60460091]
[107.50000000 30.60460091]
[107.50000000 45.60460281]
[107.50000000 60.60460281]
[118.45127869 64.39385223]
[127.86187744 71.15622711]
[134.94599915 80.32706451]
[139.11212158 91.14059448]
[140.01237488 102.69388580]
[154.52600098 106.48265839]
[169.83302307 102.48196411]
[180.19328308 113.18309784]
[194.70690918 116.97187805]
[209.22052002 120.76065826]
[224.88116455 115.89482117]
[236.74014282 127.22162628]
[232.59796143 143.08903503]
[216.71574402 147.17399597]
[205.43174744 135.27427673]
[190.91812134 131.48550415]
[176.40451050 127.69671631]
[162.13558960 131.96841431]
[150.73722839 120.99628448]
[136.22360229 117.20750427]
[120.94050598 134.20149231]
[98.85580444 140.08663940]
[103.44558716 155.22746277]
[93.15319061 165.99388123]
[89.92863464 180.64318848]
[94.51840973 195.78401184]
[84.22602081 206.55043030]
[81.00146484 221.19975281]
[77.77690887 235.84906006]
[74.55234528 250.49836731]
[71.32778931 265.14767456]
[79.57434082 278.36251831]
[76.09549713 293.17306519]
[63.44634247 300.95346069]
[60.22178650 315.60275269]
[56.99723053 330.25207520]
[53.77267456 344.90136719]
[54.98432159 353.96170044]
[50.38320541 359.75161743]
[46.93233490 374.34927368]
[43.48146057 388.94692993]
[40.03059006 403.54455566]
[41.10188293 412.62255859]
[36.41171646 418.34057617]
[32.73535538 432.88308716]
[40.56900406 446.34680176]
[36.63348770 461.04260254]
[23.74961281 468.42779541]
[31.58325768 481.89151001]
[27.64774323 496.58731079]
[14.76386833 503.97253418]
[11.08750820 518.51501465]
[7.41114807 533.05755615]
[8.84464741 539.52233887]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 17]
[2 16]
[3 15]
[4 14]
[6 13]
[7 12]
[18 201]
[19 200]
[20 199]
[23 196]
[26 193]
[27 192]
[28 190]
[29 189]
[30 188]
[31 187]
[32 185]
[33 184]
[34 183]
[35 182]
[38 179]
[39 178]
[40 177]
[41 176]
[42 175]
[44 173]
[45 172]
[47 170]
[55 148]
[56 147]
[57 146]
[58 145]
[59 144]
[60 142]
[61 141]
[62 140]
[63 139]
[64 138]
[65 137]
[66 136]
[71 92]
[72 91]
[73 90]
[75 88]
[76 87]
[77 86]
[78 85]
[97 125]
[98 124]
[100 121]
[101 120]
[102 119]
[103 117]
[104 116]
[105 115]
[106 114]
[107 113]
[153 168]
[154 167]
[156 165]
[157 164]
[158 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
