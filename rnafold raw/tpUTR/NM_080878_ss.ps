%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 13:42:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACAGAGCUCUGCGGUGUCAGGGCGAGAACCCAUCUUCCAACCCCGGCUAUUUGGAGACGGAAAAACUGGAAUUCUAACAAGGAGGAGAGGAGACUAAAUCACAUCAAUUUGCA\
) } def
/len { sequence length } bind def

/coor [
[59.58257675 396.83721924]
[51.57508850 396.03637695]
[43.71624374 394.31149292]
[36.11228180 391.68624878]
[28.86596680 388.19644165]
[22.07517242 383.88967896]
[15.83158207 378.82446289]
[4.59347582 388.75949097]
[-6.64463043 398.69454956]
[-17.88273621 408.62957764]
[-29.12084198 418.56460571]
[-40.35894775 428.49963379]
[-41.07948303 444.28750610]
[-52.80883408 454.87985229]
[-68.58818817 453.99243164]
[-79.05593872 442.15176392]
[-78.00174713 426.38265991]
[-66.05104828 416.04067993]
[-50.29398727 417.26153564]
[-39.05588150 407.32650757]
[-27.81777382 397.39147949]
[-16.57966805 387.45642090]
[-5.34156179 377.52139282]
[5.89654446 367.58636475]
[-4.83429193 344.24826050]
[-6.30765724 318.57849121]
[1.69806480 294.11813354]
[18.09559631 274.24816895]
[40.63639069 261.72213745]
[66.21896362 258.28451538]
[68.66660309 243.48556519]
[59.81248856 231.56330872]
[62.08393097 216.52018738]
[74.64912415 207.31401062]
[77.09677124 192.51506042]
[79.54441071 177.71611023]
[81.99205780 162.91716003]
[84.43969727 148.11819458]
[86.88734436 133.31924438]
[71.64643860 124.86749268]
[61.55406570 109.57615662]
[59.58271790 90.46138763]
[66.99409485 71.76572418]
[82.87572479 58.01644135]
[78.82877350 43.57268143]
[74.78182220 29.12892342]
[63.60819626 17.92799759]
[67.62480164 3.58518887]
[63.57785034 -10.85857010]
[49.68077087 -18.38497353]
[45.25616455 -33.55726624]
[52.92907715 -47.37399292]
[68.14730072 -51.63793945]
[81.88213348 -43.81937790]
[85.98494720 -28.55692482]
[78.02160645 -14.90552235]
[82.06855774 -0.46176264]
[92.95272064 9.70604897]
[89.22557831 25.08197212]
[93.27252960 39.52573013]
[97.31948090 53.96949005]
[104.54135895 55.99296570]
[100.82434845 41.46080017]
[111.55114746 30.97577095]
[125.99481964 35.02303696]
[129.71151733 49.55528259]
[118.98512268 60.03991699]
[126.20700073 62.06339264]
[137.16954041 51.82509613]
[148.13208008 41.58679962]
[152.39465332 25.75131798]
[168.30744934 21.78709412]
[179.50074768 33.77218246]
[174.45982361 49.37734985]
[158.37037659 52.54933929]
[147.40783691 62.78763580]
[136.44529724 73.02593231]
[142.52526855 91.15882874]
[140.46054077 109.35343170]
[131.31575012 124.27172089]
[117.39123535 133.46432495]
[101.68629456 135.76689148]
[99.23865509 150.56584167]
[96.79100800 165.36479187]
[94.34336853 180.16375732]
[91.89572144 194.96270752]
[89.44807434 209.76165771]
[98.37995148 222.52330017]
[95.68687439 237.49667358]
[83.46556091 245.93319702]
[81.01791382 260.73214722]
[88.66239166 263.36599731]
[95.94795227 266.86901855]
[102.77619171 271.19351196]
[109.05491638 276.28063965]
[114.69940948 282.06134033]
[119.63355255 288.45715332]
[123.79087830 295.38134766]
[127.11545563 302.74002075]
[129.56260681 310.43350220]
[131.09959412 318.35760498]
[131.70594788 326.40509033]
[131.37380981 334.46697998]
[130.10804749 342.43429565]
[127.92613220 350.19924927]
[124.85791016 357.65695190]
[120.94522858 364.70657349]
[116.24132538 371.25296021]
[110.81011963 377.20776367]
[104.72535706 382.49060059]
[98.06959534 387.03033447]
[90.93305969 390.76577759]
[83.41247559 393.64675903]
[75.60971069 395.63464355]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 24]
[8 23]
[9 22]
[10 21]
[11 20]
[12 19]
[30 91]
[31 90]
[34 87]
[35 86]
[36 85]
[37 84]
[38 83]
[39 82]
[44 61]
[45 60]
[46 59]
[48 57]
[49 56]
[68 77]
[69 76]
[70 75]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
