%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 00:48:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCACAGGGACAUCUUUCUUUGAGUGACCGUCUGUGCAGGCCCUGUAGUCCGCCACAGGGCUCUGAGCUGCACUGGCCCCGGUGCUGGCAUCUGGUGGAGCGGACCCACUCCCCUCACAUUCCACAGGCCCAUGGACUCACUUUUGUAACAAACUCCUACCAACACUGACCAAUAAAAAAAAAUGUGGGUUUUUUUUUUUUUAAUAUA\
) } def
/len { sequence length } bind def

/coor [
[311.89770508 486.46826172]
[310.59124756 471.85733032]
[311.71627808 457.22839355]
[315.24288940 442.98336792]
[321.07513428 429.51385498]
[329.05368042 417.19021606]
[338.96017456 406.35153198]
[329.74697876 394.51443481]
[320.53378296 382.67730713]
[311.32061768 370.84020996]
[297.66375732 376.97036743]
[282.92770386 379.65533447]
[267.96829224 378.73480225]
[253.65530396 374.25790405]
[240.82208252 366.48074341]
[230.21681213 355.85168457]
[222.45904541 342.98553467]
[218.00347900 328.62792969]
[217.11320496 313.61215210]
[219.84434509 298.81079102]
[226.04240417 285.08502197]
[235.35104370 273.23452759]
[226.13786316 261.39739990]
[216.92466736 249.56030273]
[207.71147156 237.72319031]
[198.49829102 225.88609314]
[189.28509521 214.04898071]
[179.89501953 202.35168457]
[170.33018494 190.79685974]
[160.42234802 179.53477478]
[150.18048096 168.57557678]
[139.93859863 157.61637878]
[129.69671631 146.65719604]
[119.45483398 135.69799805]
[109.21295929 124.73880005]
[98.97107697 113.77960968]
[85.10212708 108.06540680]
[70.11271667 108.62895966]
[55.12330627 109.19250488]
[40.13855362 109.86869812]
[25.15930939 110.65749359]
[10.18006229 111.44628143]
[-4.79918337 112.23507690]
[-19.77842903 113.02386475]
[-34.75767517 113.81266022]
[-49.73691940 114.60144806]
[-58.07159042 127.69010925]
[-72.52011108 133.34872437]
[-87.52672577 129.40144348]
[-97.32109833 117.36608124]
[-98.13707733 101.87047577]
[-89.66091156 88.87300110]
[-75.15186310 83.37145996]
[-60.18894577 87.48130035]
[-50.52571487 99.62220764]
[-35.54646683 98.83341217]
[-20.56722069 98.04462433]
[-5.58797550 97.25582886]
[9.39127064 96.46703339]
[24.37051582 95.67824554]
[39.34976196 94.88945007]
[45.86503220 91.39797974]
[54.55975342 94.20309448]
[69.54916382 93.63954926]
[84.53857422 93.07599640]
[89.93888092 79.08111572]
[95.33871460 65.08747864]
[84.61321259 54.60112762]
[73.88771057 44.11477280]
[63.08370209 33.70932388]
[52.20179367 23.38536644]
[41.31988525 13.06141090]
[30.43797684 2.73745561]
[19.55606651 -7.58650017]
[8.67415810 -17.91045570]
[-7.38992405 -21.20852852]
[-12.30829620 -36.85274887]
[-1.02135813 -48.74968719]
[14.85985565 -44.66078949]
[18.99811363 -28.79236412]
[29.88002205 -18.46840858]
[40.76193237 -8.14445305]
[51.64384079 2.17950249]
[62.52574921 12.50345802]
[73.40766144 22.82741356]
[80.42481232 25.15093040]
[84.37406921 33.38927078]
[95.09957123 43.87562561]
[105.82506561 54.36198044]
[112.71582031 51.40097046]
[106.79402161 37.61937714]
[120.57572174 31.69781113]
[126.49731445 45.47895050]
[133.38806152 42.51794052]
[133.16259766 27.51963425]
[129.90414429 18.98445129]
[133.04817200 12.29459286]
[133.04817200 -2.70540714]
[133.04817200 -17.70540619]
[133.04817200 -32.70540619]
[125.31086731 -46.50558090]
[133.04817200 -59.23285294]
[124.38446808 -73.15665436]
[132.34858704 -87.49208832]
[148.74774170 -87.49208832]
[156.71186829 -73.15665436]
[148.04817200 -59.23285294]
[155.78546143 -46.50558090]
[148.04817200 -32.70540619]
[148.04817200 -17.70540619]
[148.04817200 -2.70540714]
[148.04817200 12.29459286]
[148.16090393 27.29416847]
[148.38636780 42.29247284]
[161.45693970 49.65182114]
[170.57432556 61.56288910]
[174.26568604 76.10158539]
[171.93475342 90.91937256]
[163.95805359 103.62261200]
[151.62411499 112.15924835]
[136.92535400 115.15029144]
[122.23616791 112.11257935]
[109.93027496 103.53773499]
[120.17214966 114.49692535]
[130.41403198 125.45611572]
[140.65591431 136.41531372]
[150.89778137 147.37451172]
[161.13966370 158.33369446]
[171.38154602 169.29289246]
[175.58119202 170.40983582]
[178.87496948 172.58677673]
[181.04080200 175.40850830]
[182.01434326 178.43029785]
[181.88500977 181.23204041]
[191.44984436 192.78684998]
[197.50633240 195.44462585]
[200.81381226 200.06845093]
[201.12220764 204.83578491]
[210.33538818 216.67289734]
[219.54858398 228.51000977]
[228.76177979 240.34710693]
[237.97496033 252.18421936]
[247.18815613 264.02133179]
[260.96118164 257.90664673]
[275.78848267 255.26773071]
[290.80737305 256.25369263]
[305.14511108 260.80285645]
[317.96960449 268.64669800]
[328.53765869 279.32550049]
[336.23800659 292.21554565]
[340.62680054 306.56524658]
[341.45309448 321.53927612]
[338.67315674 336.26693726]
[332.45285034 349.89291382]
[323.15771484 361.62701416]
[332.37091064 373.46411133]
[341.58410645 385.30123901]
[350.79727173 397.13833618]
[364.38687134 389.91659546]
[379.01803589 385.15652466]
[394.24902344 383.00067139]
[409.61999512 383.51300049]
[424.66726685 386.67687988]
[438.93698120 392.39575195]
[451.99896240 400.49606323]
[463.45968628 410.73236084]
[472.97409058 422.79498291]
[480.25592041 436.31924438]
[485.08651733 450.89648438]
[487.32113647 466.08654785]
[486.89346313 481.43087769]
[483.81750488 496.46649170]
[478.18725586 510.73995972]
[470.17358398 523.82098389]
[460.01925659 535.31542969]
[469.40933228 547.01275635]
[478.79940796 558.71002197]
[488.18948364 570.40728760]
[497.57955933 582.10461426]
[506.96963501 593.80187988]
[516.35968018 605.49914551]
[525.74975586 617.19647217]
[535.13983154 628.89373779]
[544.52990723 640.59100342]
[560.00244141 646.02557373]
[562.76586914 662.19018555]
[549.97753906 672.45611572]
[534.79290771 666.26269531]
[532.83264160 649.98107910]
[523.44256592 638.28381348]
[514.05249023 626.58654785]
[504.66241455 614.88922119]
[495.27233887 603.19195557]
[485.88226318 591.49468994]
[476.49218750 579.79736328]
[467.10211182 568.10009766]
[457.71203613 556.40283203]
[448.32199097 544.70550537]
[435.54730225 551.84442139]
[421.76620483 556.77624512]
[407.35690308 559.36450195]
[392.71505737 559.53723145]
[378.24291992 557.28869629]
[364.33819580 552.67968750]
[351.38314819 545.83587646]
[339.73413086 536.94451904]
[329.71173096 526.24896240]
[321.59204102 514.04248047]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 158]
[8 157]
[9 156]
[10 155]
[22 143]
[23 142]
[24 141]
[25 140]
[26 139]
[27 138]
[28 135]
[29 134]
[30 129]
[31 128]
[32 127]
[33 126]
[34 125]
[35 124]
[36 123]
[37 65]
[38 64]
[39 63]
[40 61]
[41 60]
[42 59]
[43 58]
[44 57]
[45 56]
[46 55]
[67 89]
[68 88]
[69 87]
[70 85]
[71 84]
[72 83]
[73 82]
[74 81]
[75 80]
[94 114]
[95 113]
[97 112]
[98 111]
[99 110]
[100 109]
[102 107]
[175 198]
[176 197]
[177 196]
[178 195]
[179 194]
[180 193]
[181 192]
[182 191]
[183 190]
[184 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
