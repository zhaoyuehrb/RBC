%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 22:10:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAAGACACACCUCCCCAACCUCAGUCUUCCCAUCUGAACGAUGGGUCCUGAGGCACAGCUCUGAGCACAGAGGUCCCUUCUGCCACCUACCAUGCACCAUGUUCCUUGCCAGGCCUCCCCAACCCCUGGCCUCAAUUUCCCUUUCUAUAAAAUGGAAGAUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[88.34448242 315.06045532]
[75.19575500 307.12280273]
[67.79151917 293.66647339]
[68.12346649 278.31115723]
[76.10231018 265.18737793]
[89.58177948 257.82534790]
[89.85896301 242.82791138]
[90.13614655 227.83047485]
[90.41333008 212.83303833]
[78.70124054 211.21852112]
[67.22132111 208.39167786]
[56.09870148 204.38330078]
[45.45463181 199.23709106]
[35.40513611 193.00914001]
[26.05975723 185.76734924]
[17.52036667 177.59063721]
[9.88004875 168.56816101]
[3.22208643 158.79824829]
[-2.38094497 148.38739014]
[-6.86796951 137.44909668]
[-10.19007587 126.10259247]
[-24.98308754 128.58589172]
[-39.77610016 131.06921387]
[-54.56911087 133.55252075]
[-69.36212158 136.03582764]
[-84.15512848 138.51913452]
[-89.06079865 149.39961243]
[-98.52404022 156.47381592]
[-110.11005402 158.06677246]
[-120.90721893 153.89550781]
[-128.25874329 145.11102295]
[-143.13340759 147.04602051]
[-158.00807190 148.98100281]
[-172.88275146 150.91598511]
[-187.75741577 152.85098267]
[-202.63209534 154.78596497]
[-213.51808167 166.57048035]
[-229.50779724 165.26333618]
[-238.33529663 151.86726379]
[-233.22886658 136.65858459]
[-218.10574341 131.30409241]
[-204.56707764 139.91130066]
[-189.69241333 137.97630310]
[-174.81773376 136.04132080]
[-159.94306946 134.10633850]
[-145.06838989 132.17134094]
[-130.19372559 130.23635864]
[-119.95865631 115.09306335]
[-101.59689331 112.15029907]
[-86.63844299 123.72612000]
[-71.84542847 121.24281311]
[-57.05241776 118.75950623]
[-42.25940704 116.27619171]
[-27.46639633 113.79288483]
[-12.67338467 111.30957794]
[-12.99569702 92.57231140]
[-10.22339630 74.03846741]
[-4.43240547 56.21563339]
[4.21867609 39.59191895]
[15.49292088 24.62260437]
[4.98477554 13.91845226]
[-5.52336979 3.21429992]
[-20.93409348 -3.85294461]
[-18.40915108 -20.61781883]
[-1.60048211 -22.83253288]
[5.18078232 -7.29384565]
[15.68892765 3.41030669]
[26.19707298 14.11445904]
[42.17634964 2.63664269]
[59.90106964 -5.90219069]
[55.53022385 -20.25125694]
[51.15937805 -34.60032272]
[46.78853226 -48.94939041]
[42.41768646 -63.29845428]
[38.04684067 -77.64752197]
[27.64752388 -91.03746796]
[37.63536453 -104.73707581]
[53.56450272 -98.93199158]
[52.39590454 -82.01837158]
[56.76675415 -67.66930389]
[61.13759995 -53.32023621]
[65.50844574 -38.97116852]
[69.87928772 -24.62210274]
[74.25013733 -10.27303696]
[82.19496155 -11.83102703]
[90.23079681 -12.81737804]
[98.31656647 -13.22704697]
[106.41094971 -13.05794048]
[114.47255707 -12.31092262]
[122.46018219 -10.98981190]
[130.33300781 -9.10136127]
[138.05076599 -6.65522432]
[145.57403564 -3.66390419]
[152.50709534 -16.96550941]
[159.44015503 -30.26711464]
[166.37321472 -43.56872177]
[168.33238220 -60.40908813]
[185.05697632 -63.18835831]
[192.35746765 -47.88674545]
[179.67481995 -36.63566208]
[172.74176025 -23.33405685]
[165.80870056 -10.03245068]
[158.87564087 3.26915407]
[168.46443176 9.80122089]
[177.33450317 17.28015709]
[185.39276123 25.62745476]
[192.55458069 34.75548172]
[198.74481201 44.56842422]
[203.89846802 54.96326065]
[207.96142578 65.83087921]
[222.53063965 62.26184845]
[237.09985352 58.69282150]
[251.66906738 55.12379074]
[266.23828125 51.55476379]
[280.80749512 47.98573685]
[284.42953491 33.11497498]
[294.55615234 21.63848495]
[308.86038208 16.19347382]
[324.05517578 18.03116608]
[336.64886475 26.72927666]
[343.74755859 40.28903961]
[343.72000122 55.59452438]
[336.57254028 69.12863922]
[323.94760132 77.78134155]
[308.74627686 79.56431580]
[294.46176147 74.06783295]
[284.37652588 62.55495071]
[269.80731201 66.12397766]
[255.23809814 69.69300842]
[240.66888428 73.26203156]
[226.09967041 76.83106232]
[211.53045654 80.40009308]
[212.84472656 90.55200958]
[213.23686218 100.78113556]
[212.70364380 111.00387573]
[211.24943542 121.13669586]
[208.88612366 131.09678650]
[205.63301086 140.80276489]
[201.51667786 150.17532349]
[196.57077026 159.13783264]
[190.83570862 167.61709595]
[184.35835266 175.54380798]
[177.19163513 182.85317993]
[186.66729736 194.48123169]
[196.14297485 206.10929871]
[205.61863708 217.73735046]
[215.09429932 229.36541748]
[230.57948303 228.37117004]
[243.67364502 236.69718933]
[249.34178162 251.14198303]
[245.40441895 266.15118408]
[233.37551880 275.95349121]
[217.88044739 276.77972412]
[204.87739563 268.31213379]
[199.36627197 253.80670166]
[203.46623230 238.84107971]
[193.99057007 227.21302795]
[184.51490784 215.58496094]
[175.03924561 203.95690918]
[165.56358337 192.32884216]
[136.97709656 207.03219604]
[105.41077423 213.11021423]
[105.13359070 228.10765076]
[104.85640717 243.10510254]
[104.57922363 258.10253906]
[117.77745056 265.95761108]
[125.26589966 279.36727905]
[125.03022003 294.72436523]
[117.13380432 307.89788818]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 165]
[7 164]
[8 163]
[9 162]
[21 55]
[22 54]
[23 53]
[24 52]
[25 51]
[26 50]
[31 47]
[32 46]
[33 45]
[34 44]
[35 43]
[36 42]
[60 68]
[61 67]
[62 66]
[70 84]
[71 83]
[72 82]
[73 81]
[74 80]
[75 79]
[93 103]
[94 102]
[95 101]
[96 100]
[110 132]
[111 131]
[112 130]
[113 129]
[114 128]
[115 127]
[143 160]
[144 159]
[145 158]
[146 157]
[147 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
