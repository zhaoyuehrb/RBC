%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 09:43:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUAGCCUUGCUGAAUGUAACAUGUAUACUUGGUCUUGAAUUCAUUGUACUGAUAUUAAACAUGCAUGCUGGAUGUUUUCAAGUUGUGUUUUAGAAAACUAAUAAUAAUGAGUAAACACAGUUACCAUACUUUUCAAUUGAAAUGAAGGUUUUUCAUCAGCCUUAAAAGUGUAAGAAAAAUAAAGUUGUCAUUCAUUCGA\
) } def
/len { sequence length } bind def

/coor [
[89.32696533 113.85147095]
[75.59532928 119.88819885]
[61.86368942 125.92492676]
[48.13204956 131.96165466]
[34.40040970 137.99838257]
[20.66877174 144.03511047]
[15.26816368 155.75402832]
[3.70029974 160.49720764]
[-7.62217474 156.22511292]
[-21.44648552 162.04649353]
[-35.27079391 167.86785889]
[-49.04919052 173.79710388]
[-62.78083038 179.83383179]
[-66.14747620 196.40582275]
[-78.60276794 207.59687805]
[-95.10842896 209.14622498]
[-109.14453888 200.64073181]
[-122.78015137 206.89132690]
[-136.41577148 213.14193726]
[-145.73649597 225.92608643]
[-160.53028870 224.19610596]
[-174.16590881 230.44671631]
[-180.66941833 236.87272644]
[-188.06382751 236.68659973]
[-201.79547119 242.72332764]
[-215.52709961 248.76005554]
[-229.25874329 254.79678345]
[-242.99038696 260.83352661]
[-248.39099121 272.55242920]
[-259.95886230 277.29562378]
[-271.28134155 273.02349854]
[-285.10565186 278.84487915]
[-298.92996216 284.66625977]
[-302.33258057 299.80566406]
[-314.00628662 310.02838135]
[-329.46231079 311.40356445]
[-342.75747681 303.40243530]
[-348.77954102 289.10159302]
[-345.21286011 273.99996948]
[-333.42895508 263.90447998]
[-317.95892334 262.69705200]
[-304.75131226 270.84194946]
[-290.92700195 265.02056885]
[-277.10269165 259.19918823]
[-267.27542114 244.66404724]
[-249.02711487 247.10188293]
[-235.29547119 241.06515503]
[-221.56382751 235.02842712]
[-207.83219910 228.99168396]
[-194.10055542 222.95495605]
[-180.41651917 216.81111145]
[-166.78089905 210.56050110]
[-158.43548584 198.22343445]
[-142.66636658 199.50633240]
[-129.03076172 193.25572205]
[-115.39514923 187.00511169]
[-113.98687744 173.72436523]
[-106.13554382 162.78718567]
[-93.80620575 157.11447144]
[-80.17643738 158.28599548]
[-68.81755829 166.10218811]
[-55.08591843 160.06546021]
[-50.22392273 154.49114990]
[-41.09217453 154.04354858]
[-27.26786232 148.22216797]
[-13.44355202 142.40080261]
[-3.61626959 127.86564636]
[14.63204193 130.30348206]
[28.36368179 124.26674652]
[42.09531784 118.23001862]
[55.82695770 112.19329071]
[69.55859375 106.15656281]
[83.29023743 100.11983490]
[90.58628845 87.01381683]
[88.48321533 72.16197968]
[86.38014221 57.31014252]
[84.27706909 42.45830536]
[82.17399597 27.60646820]
[72.57826996 15.02741337]
[78.45471954 1.34104800]
[66.10685730 -8.15464020]
[64.18561554 -23.24647522]
[73.31439972 -34.95975494]
[71.21132660 -49.81159210]
[69.10825348 -64.66342926]
[67.00518036 -79.51526642]
[64.90210724 -94.36710358]
[53.27287292 -101.17196655]
[47.76888657 -113.25682831]
[50.19673538 -126.11419678]
[59.44921875 -135.08871460]
[57.57852554 -149.97161865]
[55.70783234 -164.85450745]
[53.83713531 -179.73739624]
[43.50459290 -192.47201538]
[49.61873245 -207.68876648]
[65.88984680 -209.73394775]
[75.57961273 -196.50366211]
[68.72003174 -181.60809326]
[70.59072113 -166.72520447]
[72.46141815 -151.84230042]
[74.33211517 -136.95941162]
[88.04143524 -127.22438812]
[90.52085876 -110.25268555]
[79.75394440 -96.47017670]
[81.85701752 -81.61833954]
[83.96009064 -66.76650238]
[86.06316376 -51.91466522]
[88.16623688 -37.06282806]
[100.18819427 -28.34456825]
[102.53258514 -13.31265163]
[93.30655670 -0.76202512]
[102.75186157 10.75472641]
[97.02583313 25.50339508]
[99.12890625 40.35523224]
[101.23197937 55.20706940]
[103.33505249 70.05890656]
[105.43812561 84.91074371]
[103.63729095 70.01924133]
[110.51496124 56.68891144]
[123.69440460 49.52635574]
[138.62117004 51.00675583]
[150.13699341 60.61852646]
[154.26229858 75.04010010]
[149.57150269 89.28778076]
[137.68562317 98.43796539]
[122.71174622 99.32852173]
[137.70030212 98.74254608]
[152.68884277 98.15657806]
[167.67739868 97.57061005]
[182.66593933 96.98464203]
[197.65449524 96.39867401]
[212.64305115 95.81270599]
[227.63159180 95.22673798]
[214.96850586 87.18644714]
[207.40856934 74.23085785]
[206.63854980 59.25063705]
[212.83027649 45.58818436]
[224.60221863 36.29188538]
[239.32783508 33.43593979]
[253.72151184 37.65756989]
[264.57171631 48.01483917]
[269.45755005 62.19682693]
[267.28884888 77.03922272]
[258.54953003 89.23038483]
[245.18801880 96.05055237]
[260.05584717 98.03749847]
[274.92367554 100.02443695]
[289.79147339 102.01138306]
[304.65930176 103.99832916]
[319.52713013 105.98527527]
[330.95422363 95.31028748]
[346.57229614 94.52960968]
[359.00698853 104.01184082]
[362.38699341 119.27976990]
[355.11636353 133.12434387]
[340.62811279 139.00857544]
[325.76312256 134.15411377]
[317.54016113 120.85308838]
[302.67236328 118.86614990]
[287.80453491 116.87920380]
[272.93670654 114.89225769]
[258.06890869 112.90531158]
[243.20108032 110.91837311]
[228.21755981 110.21528625]
[213.22901917 110.80125427]
[198.24046326 111.38722229]
[183.25190735 111.97319031]
[168.26336670 112.55916595]
[153.27481079 113.14513397]
[138.28627014 113.73110199]
[123.29771423 114.31707001]
[136.73233032 120.98872375]
[150.56867981 126.78141785]
[163.00242615 135.17201233]
[173.55186462 145.83546448]
[181.80833435 158.35867310]
[187.45196533 172.25650024]
[190.26412964 186.99053955]
[190.13589478 201.98999023]
[187.07220459 216.67378235]
[181.19177246 230.47306824]
[172.72239685 242.85328674]
[161.99217224 253.33480835]
[149.41677856 261.51156616]
[135.48341370 267.06686401]
[120.73181152 269.78540039]
[105.73348236 269.56192017]
[91.06943512 266.40505981]
[77.30776215 260.43713379]
[64.98158264 251.88929749]
[54.56840515 241.09272766]
[46.47164536 228.46568298]
[41.00496292 214.49729919]
[38.38013840 199.72874451]
[38.69885635 184.73213196]
[41.94876480 170.08842468]
[48.00396729 156.36492920]
[56.62989044 144.09327698]
[67.49236298 133.74887085]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 73]
[2 72]
[3 71]
[4 70]
[5 69]
[6 68]
[9 66]
[10 65]
[11 64]
[12 62]
[13 61]
[17 56]
[18 55]
[19 54]
[21 52]
[22 51]
[24 50]
[25 49]
[26 48]
[27 47]
[28 46]
[31 44]
[32 43]
[33 42]
[74 118]
[75 117]
[76 116]
[77 115]
[78 114]
[80 112]
[83 109]
[84 108]
[85 107]
[86 106]
[87 105]
[91 102]
[92 101]
[93 100]
[94 99]
[127 172]
[128 171]
[129 170]
[130 169]
[131 168]
[132 167]
[133 166]
[134 165]
[146 164]
[147 163]
[148 162]
[149 161]
[150 160]
[151 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
