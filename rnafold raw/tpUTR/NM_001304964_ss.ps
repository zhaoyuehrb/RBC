%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 22:16:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAUUUAUAUACAAAAGAAAUUCUCAAAUGUUAAAAUAAAGGAAUAGUUUAUUGCUUAAUAUAACUUAUCAUCACUUUGCUUCUUUACUGAAUCUUCUACACUCUUGCCUGAUACCUAAAUUUAAUGUUUGUUUUUAACUCAAAAAAUGUACUGUAGUAUGGAAAAUGGAUAGCAGUAGAAUAAAGUCUUAAGAUUAUUUUUUAAUUACAA\
) } def
/len { sequence length } bind def

/coor [
[-15.65856934 475.64968872]
[-14.48357582 490.63092041]
[-15.50248051 505.62356567]
[-18.69356728 520.30804443]
[-23.98881340 534.37145996]
[-31.27535629 547.51391602]
[-40.39787674 559.45532227]
[-51.16193390 569.94116211]
[-63.33808899 578.74792480]
[-76.66680145 585.68786621]
[-90.86397552 590.61315918]
[-105.62699890 593.41870117]
[-120.64118958 594.04473877]
[-135.58651733 592.47796631]
[-150.14443970 588.75170898]
[-164.00462341 582.94543457]
[-176.87167358 575.18286133]
[-188.47129822 565.62951660]
[-198.55627441 554.48901367]
[-206.91162109 541.99877930]
[-213.35925293 528.42504883]
[-217.76173401 514.05712891]
[-220.02522278 499.20135498]
[-220.10148621 484.17431641]
[-217.98887634 469.29632568]
[-213.73245239 454.88449097]
[-207.42291260 441.24603271]
[-199.19476318 428.67163086]
[-189.22338867 417.42935181]
[-177.72131348 407.75875854]
[-164.93373108 399.86602783]
[-151.13317871 393.91937256]
[-136.61383057 390.04556274]
[-121.68516541 388.32714844]
[-106.66539764 388.80078125]
[-91.87465668 391.45632935]
[-77.62822723 396.23724365]
[-70.83799744 382.86215210]
[-64.04776764 369.48709106]
[-65.18550110 354.63598633]
[-52.03927231 345.83331299]
[-45.24904251 332.45822144]
[-38.45881271 319.08312988]
[-31.66858482 305.70806885]
[-24.87835503 292.33297729]
[-18.08812523 278.95791626]
[-11.29789543 265.58282471]
[-4.50766516 252.20774841]
[2.28256440 238.83265686]
[9.07279396 225.45758057]
[15.86302376 212.08250427]
[22.65325356 198.70741272]
[14.71481037 184.33755493]
[16.92881393 167.90299988]
[28.61892891 155.90806580]
[45.31927490 153.21896362]
[51.91242981 139.74563599]
[58.50558472 126.27231598]
[65.09873962 112.79900360]
[52.85324860 121.46202087]
[40.60775757 130.12504578]
[32.25182724 142.58210754]
[20.93614388 152.42869568]
[7.44398689 158.98321533]
[-7.29069996 161.79194641]
[-22.24796486 160.66049194]
[-36.39244843 155.66712952]
[-48.74505615 147.15754700]
[-58.45072556 135.72076416]
[-64.83762360 122.14845276]
[-67.46363068 107.38011169]
[-66.14698029 92.43800354]
[-60.97881317 78.35645294]
[-52.31687164 66.11019897]
[-40.76074600 56.54693985]
[-27.11036682 50.32864761]
[-12.31062603 47.88576889]
[2.61402178 49.38739777]
[16.63047600 54.72959137]
[28.76849937 63.54255676]
[38.18795776 75.21636963]
[51.14804840 82.76859283]
[64.10813904 90.32081604]
[56.35531616 77.47972107]
[48.60250092 64.63861847]
[33.20140457 61.09153748]
[24.89029884 47.64902496]
[28.60001564 32.28629303]
[42.12964249 24.11777496]
[57.45229721 27.98970795]
[65.47731781 41.60494232]
[61.44359970 56.88580322]
[69.19641876 69.72689819]
[76.94923401 82.56800079]
[89.43287659 75.49423981]
[102.66417694 75.67146301]
[113.02961731 81.95066833]
[125.39359283 73.45759583]
[137.75756836 64.96453094]
[150.12153625 56.47145844]
[162.48550415 47.97838974]
[174.84947205 39.48532104]
[175.76611328 26.04889488]
[184.13131714 15.74365139]
[196.71774292 12.18992996]
[208.87019348 16.46932793]
[221.35751343 8.15867615]
[224.58964539 -7.07914114]
[237.37194824 -15.32943821]
[251.87895203 -12.15418816]
[264.36627197 -20.46483994]
[262.34664917 -35.55398941]
[267.05947876 -49.96496582]
[277.51907349 -60.85609055]
[291.61227417 -66.10426331]
[306.52499390 -64.71875000]
[319.30438232 -57.02767181]
[331.79171753 -65.33832550]
[330.65435791 -77.78457642]
[334.89117432 -89.46588898]
[343.64077759 -98.18713379]
[355.19995117 -102.33724976]
[367.35504150 -101.18665314]
[377.80587769 -95.01470184]
[390.53179932 -102.95519257]
[403.25769043 -110.89567566]
[406.93576050 -126.03204346]
[419.95474243 -133.90353394]
[434.36230469 -130.30378723]
[447.08819580 -138.24427795]
[454.70031738 -152.11389160]
[469.59393311 -152.28698730]
[482.31982422 -160.22747803]
[495.04574585 -168.16796875]
[507.77163696 -176.10845947]
[520.49755859 -184.04895020]
[533.22344971 -191.98942566]
[545.94934082 -199.92991638]
[549.26995850 -215.38142395]
[562.58905029 -223.88897705]
[578.00457764 -220.40518188]
[586.37078857 -206.99691772]
[582.72424316 -191.61907959]
[569.22827148 -183.39505005]
[553.88983154 -187.20401001]
[541.16394043 -179.26353455]
[528.43804932 -171.32304382]
[515.71209717 -163.38255310]
[502.98620605 -155.44206238]
[490.26031494 -147.50157166]
[477.53442383 -139.56109619]
[470.83255005 -126.25942993]
[455.02868652 -125.51836395]
[442.30279541 -117.57788086]
[439.20343018 -103.05446625]
[426.41067505 -94.82039642]
[411.19818115 -98.16976929]
[398.47229004 -90.22928619]
[385.74636841 -82.28879547]
[385.32220459 -64.63220978]
[374.28546143 -50.64271545]
[356.90835571 -46.04035950]
[340.10235596 -52.85100937]
[327.61505127 -44.54035950]
[329.77606201 -29.78246117]
[325.29678345 -15.49101543]
[315.01452637 -4.51667118]
[300.92962646 0.92725009]
[285.81646729 -0.28898227]
[272.67694092 -7.97752523]
[260.18960571 0.33312762]
[257.51794434 14.94126701]
[244.97241211 23.54733658]
[229.66816711 20.64599228]
[217.18084717 28.95664406]
[214.57632446 45.57259369]
[200.48210144 55.35543442]
[183.34254456 51.84929276]
[170.97857666 60.34236145]
[158.61460876 68.83543396]
[146.25062561 77.32849884]
[133.88665771 85.82157135]
[121.52268982 94.31463623]
[119.77799988 114.41548157]
[101.41015625 126.64972687]
[78.57205963 119.39215851]
[71.97890472 132.86547852]
[65.38574982 146.33879089]
[58.79259491 159.81211853]
[66.13555145 171.47557068]
[66.75223541 185.13584900]
[60.58842087 197.22064209]
[49.34909058 204.62249756]
[36.02833557 205.49765015]
[29.23810387 218.87272644]
[22.44787407 232.24780273]
[15.65764523 245.62289429]
[8.86741543 258.99798584]
[2.07718539 272.37304688]
[-4.71304417 285.74813843]
[-11.50327396 299.12319946]
[-18.29350471 312.49829102]
[-25.08373260 325.87338257]
[-31.87396240 339.24844360]
[-38.66419220 352.62353516]
[-38.01214981 368.43130493]
[-50.67268753 376.27731323]
[-57.46291733 389.65240479]
[-64.25315094 403.02746582]
[-51.98593521 411.70697021]
[-41.11325836 422.08013916]
[-31.86686325 433.92590332]
[-24.44384193 446.99176025]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 209]
[38 208]
[39 207]
[41 205]
[42 204]
[43 203]
[44 202]
[45 201]
[46 200]
[47 199]
[48 198]
[49 197]
[50 196]
[51 195]
[52 194]
[56 189]
[57 188]
[58 187]
[59 186]
[83 94]
[84 93]
[85 92]
[97 183]
[98 182]
[99 181]
[100 180]
[101 179]
[102 178]
[106 175]
[107 174]
[110 171]
[111 170]
[117 164]
[118 163]
[124 159]
[125 158]
[126 157]
[129 154]
[130 153]
[132 151]
[133 150]
[134 149]
[135 148]
[136 147]
[137 146]
[138 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
