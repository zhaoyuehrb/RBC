%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 01:37:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCCACCAGAGGUUACAAGGGGAGAGUGGCCCUUCCCUCACAAGUCCGACAUCUCCAGGCCCCCACUGAACUCCGGGGACCUCUACUGACUGCUUGCUGGGACAGUCACCAGGGUUGGGGGGAAGGGCCACAAAAUGAAACCAUUAAAGACCCUUAAGAGCCAGCAA\
) } def
/len { sequence length } bind def

/coor [
[160.20118713 724.92156982]
[146.16624451 730.60479736]
[131.04626465 731.42047119]
[116.48138428 727.28009033]
[104.05146027 718.63275146]
[95.10482025 706.41650391]
[90.61191559 691.95648193]
[91.06010437 676.82116699]
[96.40077972 662.65234375]
[106.05461121 650.98693848]
[118.97443390 643.09027100]
[133.75880432 639.81896973]
[135.42837524 624.91217041]
[137.09794617 610.00537109]
[138.76751709 595.09863281]
[127.66068268 585.21038818]
[124.46840668 570.50415039]
[130.61973572 556.57525635]
[143.94738770 548.84997559]
[145.61695862 533.94317627]
[147.28652954 519.03637695]
[148.95610046 504.12960815]
[150.62567139 489.22280884]
[133.35185242 474.52706909]
[127.93621826 454.04760742]
[134.68705750 435.55215454]
[149.59245300 425.11492920]
[146.82008362 410.37335205]
[144.04771423 395.63177490]
[141.27536011 380.89019775]
[138.50299072 366.14862061]
[135.73062134 351.40704346]
[132.95826721 336.66549683]
[130.18589783 321.92391968]
[127.41352844 307.18234253]
[124.64116669 292.44076538]
[121.86880493 277.69918823]
[119.09644318 262.95761108]
[116.32407379 248.21604919]
[113.55171204 233.47447205]
[109.20752716 227.45768738]
[110.86749268 218.43325806]
[108.36962891 203.64270020]
[105.87176514 188.85214233]
[101.64016724 182.75566101]
[103.46760559 173.76364136]
[101.24510193 158.92921448]
[99.02259827 144.09477234]
[88.44971466 142.56636047]
[78.55442810 138.54078674]
[69.91725159 132.25419617]
[63.04489899 124.07540131]
[58.34052277 114.48421478]
[56.08011627 104.04330444]
[56.39628601 93.36519623]
[59.27048492 83.07632446]
[64.53408813 73.78028107]
[71.87831879 66.02243042]
[64.41860199 53.00887299]
[56.95888519 39.99531937]
[43.38320541 31.87056923]
[43.76640320 16.98089409]
[36.30668640 3.96733856]
[28.84696770 -9.04621696]
[21.38725090 -22.05977249]
[6.02839327 -22.02711868]
[-7.28109264 -29.69218063]
[-14.96102142 -42.99309158]
[-14.94553185 -58.35197830]
[-7.23878908 -71.63737488]
[6.08613014 -79.27557373]
[21.44489098 -79.21193695]
[34.70606232 -71.46359253]
[42.30245590 -58.11479568]
[42.19068146 -42.75630951]
[34.40080643 -29.51948929]
[41.86052322 -16.50593376]
[49.32024002 -3.49237847]
[56.77995682 9.52117729]
[69.82206726 16.71510887]
[69.97244263 32.53560257]
[77.43215942 45.54915619]
[84.89187622 58.56270981]
[90.81549072 56.86128235]
[96.91844177 56.00217819]
[103.08155823 56.00217819]
[109.18450928 56.86128235]
[115.10812378 58.56270981]
[122.56784058 45.54915619]
[130.02755737 32.53560257]
[137.48727417 19.52204514]
[144.94699097 6.50849056]
[152.40670776 -6.50506496]
[159.74514771 -19.58739281]
[166.96168518 -32.73736191]
[174.17820740 -45.88733292]
[176.49783325 -62.68184662]
[193.27815247 -65.10205841]
[200.24902344 -49.64750671]
[187.32818604 -38.67080307]
[180.11164856 -25.52083397]
[172.89512634 -12.37086296]
[172.43191528 -4.96417618]
[165.42027283 0.95465219]
[157.96055603 13.96820736]
[150.50083923 26.98176193]
[143.04112244 39.99531937]
[135.58140564 53.00887299]
[128.12168884 66.02243042]
[141.48034668 85.01048279]
[143.34573364 108.15178680]
[133.20100403 129.03442383]
[113.85703278 141.87226868]
[116.07953644 156.70671082]
[118.30204010 171.54113770]
[120.66232300 186.35427856]
[123.16019440 201.14483643]
[125.65805817 215.93539429]
[128.29328918 230.70210266]
[131.06564331 245.44367981]
[133.83801270 260.18524170]
[136.61038208 274.92681885]
[139.38273621 289.66839600]
[142.15510559 304.40997314]
[144.92747498 319.15155029]
[147.69982910 333.89312744]
[150.47219849 348.63470459]
[153.24456787 363.37628174]
[156.01692200 378.11782837]
[158.78929138 392.85940552]
[161.56166077 407.60098267]
[164.33401489 422.34255981]
[182.74104309 426.14770508]
[196.80624390 441.47250366]
[199.56301880 464.11584473]
[212.64533997 471.45428467]
[225.72767639 478.79272461]
[238.80999756 486.13116455]
[255.19226074 485.38702393]
[263.79870605 499.34628296]
[255.77575684 513.64886475]
[239.37673950 513.58154297]
[231.47155762 499.21350098]
[218.38923645 491.87506104]
[205.30690002 484.53662109]
[192.22457886 477.19818115]
[185.55154419 480.62173462]
[196.18766785 491.19873047]
[189.41505432 504.58273315]
[174.59326172 502.27746582]
[172.20549011 487.46884155]
[165.53247070 490.89239502]
[163.86289978 505.79916382]
[162.19332886 520.70599365]
[160.52375793 535.61279297]
[158.85418701 550.51953125]
[170.14257812 561.00183105]
[173.06004333 575.94647217]
[166.69346619 589.58209229]
[153.67430115 596.76818848]
[152.00473022 611.67498779]
[150.33515930 626.58178711]
[148.66558838 641.48858643]
[162.35993958 647.94946289]
[173.21270752 658.50866699]
[180.04664612 672.02075195]
[182.12046814 687.02001953]
[179.20922852 701.87945557]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 163]
[13 162]
[14 161]
[15 160]
[19 156]
[20 155]
[21 154]
[22 153]
[23 152]
[27 132]
[28 131]
[29 130]
[30 129]
[31 128]
[32 127]
[33 126]
[34 125]
[35 124]
[36 123]
[37 122]
[38 121]
[39 120]
[40 119]
[42 118]
[43 117]
[44 116]
[46 115]
[47 114]
[48 113]
[58 83]
[59 82]
[60 81]
[62 79]
[63 78]
[64 77]
[65 76]
[88 109]
[89 108]
[90 107]
[91 106]
[92 105]
[93 104]
[94 102]
[95 101]
[96 100]
[135 146]
[136 145]
[137 144]
[138 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
