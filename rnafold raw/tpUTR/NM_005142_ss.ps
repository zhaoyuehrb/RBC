%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 16:57:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGAGGUGGGUUCAGCUUCUAUCAAACAUCUCCAAAGGAUGGGUGAAAUUUUUUCCACUUCAUUUUAAAUCUAUGCAAAAAAGCGAAUGCCUGUGAUGCUACCAUAUUCCUGGUAAAAACAUGGAGAACCACUAUGUAGAAUAAAAAUGCAAAGUUCACUGGAGUCUCAACAUCUAUGACUCAUGAAAAUAAAAUUUUCAUCUUCUCAA\
) } def
/len { sequence length } bind def

/coor [
[31.43518829 153.50856018]
[42.28639984 142.01826477]
[41.61977005 127.03308868]
[40.95314407 112.04790497]
[27.65940285 105.09977722]
[14.97546291 113.10713196]
[2.29152274 121.11447906]
[-10.39241695 129.12182617]
[-23.07635689 137.12918091]
[-35.76029587 145.13653564]
[-48.44423676 153.14389038]
[-61.12817764 161.15122986]
[-57.54393005 173.06596375]
[-56.92315674 185.48156738]
[-59.29681396 197.67269897]
[-64.52107239 208.92839050]
[-72.28602600 218.59352112]
[-82.13404083 226.10694885]
[-93.48676300 231.03411865]
[-105.67907715 233.09213257]
[-117.99804688 232.16601562]
[-129.72462463 228.31517029]
[-140.17561340 221.76950073]
[-148.74346924 212.91580200]
[-161.87950134 220.15768433]
[-175.01551819 227.39956665]
[-179.50538635 242.31529236]
[-192.93034363 249.47247314]
[-207.12254333 245.10014343]
[-220.25856018 252.34202576]
[-233.39459229 259.58392334]
[-246.53060913 266.82580566]
[-259.66662598 274.06768799]
[-265.48754883 289.01748657]
[-280.84729004 293.64978027]
[-293.96316528 284.41110229]
[-294.77380371 268.38854980]
[-282.65734863 257.87326050]
[-266.90850830 260.93167114]
[-253.77249146 253.68977356]
[-240.63647461 246.44789124]
[-227.50044250 239.20600891]
[-214.36442566 231.96412659]
[-210.48550415 217.62921143]
[-197.26687622 210.09779358]
[-182.25740051 214.26354980]
[-169.12138367 207.02166748]
[-155.98535156 199.77978516]
[-159.25006104 182.39897156]
[-156.37815857 164.92483521]
[-147.69903564 149.46168518]
[-134.24238586 137.87724304]
[-117.61604309 131.57713318]
[-99.81395721 131.33427429]
[-82.97699738 137.19413757]
[-69.13552856 148.46730042]
[-56.45158768 140.45994568]
[-43.76764679 132.45259094]
[-31.08370781 124.44524384]
[-18.39976883 116.43788910]
[-5.71582794 108.43054199]
[6.96811199 100.42318726]
[19.65205193 92.41584015]
[20.70441055 84.99003601]
[5.73427677 85.93614197]
[-9.23585606 86.88224792]
[-22.31455040 94.22716522]
[-37.20028687 92.37924194]
[-48.08605957 82.05935669]
[-50.72526932 67.29336548]
[-44.08834457 53.84155273]
[-30.76438904 46.95154953]
[-15.95114613 49.31118011]
[-5.42644930 60.00175095]
[8.69133759 65.07009125]
[22.80912590 70.13843536]
[23.86148262 62.71263123]
[13.90185165 51.49631500]
[-1.88754475 50.81036758]
[-12.50556278 39.10424805]
[-11.65272045 23.32298851]
[0.16500577 12.82932758]
[15.93636799 13.84897137]
[26.30449677 25.77698135]
[25.11816597 41.53668213]
[35.07779694 52.75299835]
[42.57265091 52.47520828]
[39.20964050 37.85706329]
[33.11359787 24.15165520]
[41.05106354 11.42386532]
[56.04076767 10.86822224]
[64.89875031 22.97343254]
[59.83401489 37.09263992]
[57.56235886 51.91962814]
[65.05721283 51.64183807]
[74.15921783 39.71902466]
[83.26121521 27.79620743]
[92.36322021 15.87339020]
[101.10791016 3.68608689]
[109.48761749 -8.75499821]
[117.86731720 -21.19608307]
[122.98600769 -35.29569244]
[124.53919983 -50.21506119]
[126.09239197 -65.13442993]
[127.64557648 -80.05380249]
[129.19876099 -94.97317505]
[119.04730225 -107.08611298]
[120.51748657 -122.82187653]
[132.73707581 -132.84469604]
[148.45642090 -131.20823669]
[158.34948730 -118.88335419]
[156.54692078 -103.18219757]
[144.11813354 -93.41998291]
[142.56494141 -78.50061035]
[141.01176453 -63.58124542]
[139.45857239 -48.66187286]
[137.90538025 -33.74250412]
[144.79118347 -30.77001572]
[156.82530212 -39.72434235]
[158.56280518 -24.82503891]
[165.44860840 -21.85255051]
[175.24093628 -33.21522141]
[185.03326416 -44.57788849]
[194.82559204 -55.94055557]
[204.61793518 -67.30322266]
[214.41026306 -78.66589355]
[211.71949768 -94.07023621]
[219.60466003 -107.57424927]
[234.34260559 -112.80174255]
[248.97454834 -107.28446198]
[256.59170532 -93.62749481]
[253.59751892 -78.27924347]
[241.40573120 -68.48668671]
[225.77293396 -68.87356567]
[215.98060608 -57.51089478]
[206.18826294 -46.14822388]
[196.39593506 -34.78555679]
[186.60360718 -23.42288780]
[176.81126404 -12.06021976]
[190.85240173 -17.33720589]
[199.13560486 -4.83165884]
[201.72625732 9.94293118]
[198.19197083 24.52061462]
[189.12265015 36.46830750]
[176.03199768 43.79188538]
[161.10490417 45.26900482]
[146.83277893 40.65312958]
[135.59770203 30.71467209]
[129.27485657 17.11240578]
[128.91909790 2.11914015]
[130.30839539 -12.81638241]
[121.92869568 -0.37529695]
[113.54899597 12.06578827]
[113.95217133 14.83914661]
[113.28150177 17.93925667]
[111.40705109 20.95806694]
[108.34881592 23.44806290]
[104.28603363 24.97539139]
[95.18403625 36.89820862]
[86.08203125 48.82102585]
[76.98003387 60.74384308]
[110.41890717 56.77093887]
[136.62062073 76.66027832]
[141.54476929 108.39756775]
[155.08674622 114.84854126]
[168.62870789 121.29952240]
[182.17068481 127.75049591]
[195.71264648 134.20147705]
[207.92413330 124.97444916]
[223.02677917 122.49073029]
[237.55009460 127.32106018]
[248.15672302 138.35545349]
[252.40934753 153.05830383]
[249.33073425 168.05099487]
[239.62834167 179.88832092]
[225.53170776 185.85014343]
[210.28012085 184.56648254]
[197.37829590 176.33232117]
[189.79096985 163.03979492]
[189.26167297 147.74343872]
[175.71969604 141.29246521]
[162.17773438 134.84149170]
[148.63575745 128.39050293]
[135.09379578 121.93952942]
[124.96905518 133.00703430]
[132.59701538 145.92268372]
[140.22499084 158.83833313]
[147.85295105 171.75399780]
[155.48092651 184.66964722]
[163.10888672 197.58529663]
[170.73684692 210.50096130]
[178.36482239 223.41661072]
[191.62567139 233.98004150]
[185.14602661 249.64691162]
[168.29769897 247.75750732]
[165.44915771 231.04457092]
[157.82119751 218.12892151]
[150.19323730 205.21327209]
[142.56526184 192.29760742]
[134.93730164 179.38195801]
[127.30933380 166.46630859]
[119.68136597 153.55065918]
[112.05339813 140.63499451]
[78.36136627 138.24993896]
[55.93832397 111.38127899]
[56.60494995 126.36646271]
[57.27157974 141.35163879]
[69.10021210 151.83299255]
[69.96947479 167.61335754]
[59.36364365 179.33052063]
[43.57496643 180.03289795]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 207]
[3 206]
[4 205]
[5 63]
[6 62]
[7 61]
[8 60]
[9 59]
[10 58]
[11 57]
[12 56]
[24 48]
[25 47]
[26 46]
[29 43]
[30 42]
[31 41]
[32 40]
[33 39]
[77 86]
[78 85]
[95 161]
[96 160]
[97 159]
[98 158]
[99 153]
[100 152]
[101 151]
[102 117]
[103 116]
[104 115]
[105 114]
[106 113]
[121 139]
[122 138]
[123 137]
[124 136]
[125 135]
[126 134]
[164 184]
[165 183]
[166 182]
[167 181]
[168 180]
[185 203]
[186 202]
[187 201]
[188 200]
[189 199]
[190 198]
[191 197]
[192 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
