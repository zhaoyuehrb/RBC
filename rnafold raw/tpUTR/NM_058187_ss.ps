%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 17:47:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCACAUGCAUCUUGAUGCGAUCGCACUUUCUGAAGAAGGAAGGAUCCCAAAUGCCCCUCCAGUUCUGGUUCACCUGUACCUUCUAUGAAGGAGAAUUCGUCAUGUCAUUCAACACUCGUGAGGCCAGGAAGCUAUUAAAGGGAUGUUUCAAGCUGUUUCUAGCACAUUCCAAAAUAAAUGAGGAGGGAAGAGUCUUUGUUUUCUGUA\
) } def
/len { sequence length } bind def

/coor [
[59.82060623 264.47167969]
[49.56936264 275.42208862]
[34.59157944 276.23822021]
[23.21121025 266.46646118]
[21.75292587 251.53752136]
[31.02820778 239.74758911]
[38.18754578 226.56640625]
[45.34688568 213.38520813]
[52.50622559 200.20401001]
[45.40499878 197.79101562]
[32.80268478 205.92622375]
[20.20037270 214.06144714]
[7.59806156 222.19665527]
[2.08538556 229.48008728]
[-5.25299501 230.35755920]
[-17.97503090 238.30424500]
[-30.69706726 246.25093079]
[-34.13383484 251.89895630]
[-39.15351868 254.56349182]
[-43.91831207 254.23828125]
[-49.75071335 261.26828003]
[-57.12095642 261.81719971]
[-70.18514252 269.18789673]
[-83.24932861 276.55859375]
[-96.31350708 283.92929077]
[-98.96667480 288.42459106]
[-102.70502472 291.17739868]
[-106.68310547 292.06616211]
[-110.12973785 291.32247925]
[-123.51000977 298.10247803]
[-136.89028931 304.88244629]
[-150.27055359 311.66244507]
[-163.65083313 318.44244385]
[-177.03109741 325.22244263]
[-183.36915588 339.96041870]
[-198.88090515 344.05499268]
[-211.66705322 334.36511230]
[-211.91917419 318.32403564]
[-199.44384766 308.23709106]
[-183.81109619 311.84216309]
[-170.43081665 305.06216431]
[-157.05055237 298.28216553]
[-143.67027283 291.50219727]
[-130.29000854 284.72219849]
[-116.90972900 277.94219971]
[-103.68420410 270.86508179]
[-90.62001801 263.49441528]
[-77.55583191 256.12371826]
[-64.49164581 248.75302124]
[-51.48269272 241.28527832]
[-38.64375305 233.52890015]
[-25.92171478 225.58221436]
[-13.19967937 217.63552856]
[-0.53715444 209.59434509]
[12.06515789 201.45913696]
[24.66746902 193.32391357]
[37.26977921 185.18870544]
[47.75728226 174.46432495]
[55.60903931 161.68348694]
[63.46079254 148.90263367]
[71.31254578 136.12179565]
[79.16430664 123.34095001]
[87.01605988 110.56011200]
[81.35519409 102.43879700]
[80.96571350 91.43850708]
[87.13572693 81.00817108]
[84.25045013 66.28828430]
[81.36518097 51.56838989]
[78.47991180 36.84849930]
[75.59463501 22.12860680]
[72.70936584 7.40871572]
[69.82408905 -7.31117535]
[66.82931519 -22.00918007]
[63.72520828 -36.68448257]
[60.62109756 -51.35978317]
[57.51698685 -66.03508759]
[44.55436707 -74.67269135]
[41.61541367 -89.59975433]
[49.92993164 -101.90440369]
[46.82582092 -116.57970428]
[25.15715027 -123.19714355]
[15.85190105 -150.11357117]
[8.38416004 -163.12252808]
[0.91641843 -176.13148499]
[-6.55132294 -189.14044189]
[-14.01906395 -202.14938354]
[-27.14833641 -212.87591553]
[-20.47554207 -228.46150208]
[-3.65184474 -226.36399841]
[-1.01011157 -209.61712646]
[6.45762968 -196.60816956]
[13.92537117 -183.59922791]
[21.39311218 -170.59027100]
[28.86085320 -157.58131409]
[36.07812881 -159.62115479]
[57.72995758 -165.74064636]
[57.28335190 -180.73400879]
[56.83674622 -195.72735596]
[56.39014053 -210.72070312]
[42.82835388 -217.92996216]
[34.70174789 -230.96276855]
[34.19633484 -246.31333923]
[41.44807434 -259.85244751]
[54.50628281 -267.93817139]
[69.85836792 -268.39547729]
[83.37469482 -261.10131836]
[91.41943359 -248.01783752]
[91.82860565 -232.66439819]
[84.49213409 -219.17100525]
[71.38349152 -211.16731262]
[71.83009338 -196.17396545]
[72.27670288 -181.18060303]
[72.72331238 -166.18725586]
[79.71028900 -151.27066040]
[78.82415009 -136.44117737]
[71.75167084 -125.23667145]
[61.50112534 -119.68381500]
[64.60523224 -105.00851440]
[77.19004822 -97.12448120]
[80.54711914 -82.28585815]
[72.19229126 -69.13919830]
[75.29640198 -54.46389389]
[78.40050507 -39.78859329]
[81.50461578 -25.11328888]
[85.96426392 -19.21978569]
[84.54398346 -10.19644833]
[87.42925262 4.52344322]
[90.31452942 19.24333382]
[93.19979858 33.96322632]
[96.08507538 48.68311691]
[98.97034454 63.40300751]
[101.85562134 78.12290192]
[106.38064575 63.82170486]
[107.08184052 48.83810425]
[115.53899384 36.44953918]
[129.23791504 30.33894348]
[144.10614014 32.32291031]
[155.72354126 41.81163025]
[160.63645935 55.98425293]
[157.38435364 70.62747192]
[146.93402100 81.38806915]
[132.39135742 85.06707001]
[119.28150940 92.35624695]
[134.28109741 92.24458313]
[149.28068542 92.13291168]
[164.28027344 92.02124786]
[179.27984619 91.90957642]
[194.27943420 91.79791260]
[209.27902222 91.68624878]
[200.58895874 79.45993042]
[204.58268738 65.00136566]
[218.31617737 58.96886444]
[231.66561890 65.80936432]
[234.79029846 80.48030090]
[225.38829041 92.16609192]
[240.35464478 93.17034912]
[255.32098389 94.17461395]
[270.28732300 95.17887115]
[284.75991821 87.46681976]
[298.52999878 96.37284088]
[297.43206787 112.73519897]
[282.59558105 119.72168732]
[269.28308105 110.14521790]
[254.31672668 109.14095306]
[239.35038757 108.13669586]
[224.38403320 107.13243866]
[209.39068604 106.68582916]
[194.39109802 106.79750061]
[179.39151001 106.90916443]
[164.39193726 107.02082825]
[149.39234924 107.13249969]
[134.39276123 107.24416351]
[119.39318085 107.35583496]
[134.35487366 108.42708588]
[147.24906921 116.09129333]
[155.33978271 128.72221375]
[156.91030884 143.63977051]
[151.62739563 157.67868042]
[140.61199951 167.86009216]
[126.20143127 172.02366638]
[111.45337677 169.28596497]
[99.49716949 160.22787476]
[92.86972046 146.77137756]
[92.97727966 131.77177429]
[99.79690552 118.41186523]
[91.94514465 131.19270325]
[84.09339142 143.97355652]
[76.24163818 156.75439453]
[68.38987732 169.53523254]
[60.53812408 182.31608582]
[75.92128754 186.80789185]
[87.93893433 202.40609741]
[92.97585297 216.53512573]
[98.01277161 230.66415405]
[103.04968262 244.79318237]
[117.97444153 249.03952026]
[127.52638245 261.26815796]
[128.03259277 276.77697754]
[119.29842377 289.60250854]
[104.68234253 294.81304932]
[89.80452728 290.40505981]
[80.38581085 278.07351685]
[80.04786682 262.56011963]
[88.92065430 249.83009338]
[83.88374329 235.70106506]
[78.84682465 221.57203674]
[73.80990601 207.44300842]
[66.70867920 205.03001404]
[64.35517120 219.84422302]
[62.00166321 234.65844727]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 57]
[11 56]
[12 55]
[13 54]
[15 53]
[16 52]
[17 51]
[20 50]
[22 49]
[23 48]
[24 47]
[25 46]
[29 45]
[30 44]
[31 43]
[32 42]
[33 41]
[34 40]
[58 190]
[59 189]
[60 188]
[61 187]
[62 186]
[63 185]
[66 132]
[67 131]
[68 130]
[69 129]
[70 128]
[71 127]
[72 126]
[73 124]
[74 123]
[75 122]
[76 121]
[79 118]
[80 117]
[82 94]
[83 93]
[84 92]
[85 91]
[86 90]
[96 113]
[97 112]
[98 111]
[99 110]
[143 173]
[144 172]
[145 171]
[146 170]
[147 169]
[148 168]
[149 167]
[155 166]
[156 165]
[157 164]
[158 163]
[192 207]
[193 206]
[194 205]
[195 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
