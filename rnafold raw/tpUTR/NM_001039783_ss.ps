%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Sep  9 23:36:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCUCACAUGGAAGAAGCCAAAGCAGCUACACCCAAUGGCUUAGCAAUAAGAAACACCAAACCAGACAAACACCACUGCUGCUGGGAAAGGGACCUGGCAGAAGGAAAAGGCUGUUCAGAGAGCAGAGGUAUUUCGUGUGAGCCUUUUAGGGCUUCUUGUCUCUUUAGACCACAUGCACAUAUUACUUGUAUAAAAUAAUGCACCAGAUACAAACAAUGAAAUACAAGUGCUGAGUUCGAUAGACUCAUACA\
) } def
/len { sequence length } bind def

/coor [
[276.88763428 312.33068848]
[271.03933716 303.60531616]
[266.85321045 293.96414185]
[264.46798706 283.72070312]
[263.96389771 273.20858765]
[265.35974121 262.77059937]
[268.61239624 252.74751282]
[273.61804199 243.46708679]
[262.31500244 233.60598755]
[251.01196289 223.74488831]
[239.70892334 213.88378906]
[216.16992188 209.32315063]
[216.67448425 181.42778015]
[203.93849182 173.50347900]
[191.20249939 165.57917786]
[178.46650696 157.65487671]
[165.73051453 149.73059082]
[152.99452209 141.80628967]
[140.25852966 133.88198853]
[127.52253723 125.95768738]
[120.76739502 133.06329346]
[112.16609192 138.37400818]
[102.20500183 141.40972900]
[91.49481964 141.82437134]
[80.73316956 139.43768311]
[70.65921021 134.25672913]
[62.00307083 126.48473358]
[50.22619247 135.77478027]
[38.44931030 145.06483459]
[26.67242622 154.35488892]
[24.67892456 169.80363464]
[12.60315037 179.05729675]
[-2.11258054 177.06158447]
[-13.88946247 186.35163879]
[-19.45564461 201.77725220]
[-35.64323807 204.40287781]
[-45.79983139 191.52749634]
[-39.47719574 176.39619446]
[-23.17951393 174.57475281]
[-11.40263176 165.28471375]
[-9.91701412 150.50875854]
[1.89407861 140.91957092]
[17.38237572 142.57800293]
[29.15925789 133.28794861]
[40.93613815 123.99790192]
[52.71302032 114.70784760]
[52.75940323 107.20799255]
[37.97032928 109.71464539]
[23.18125534 112.22129059]
[8.39218044 114.72794342]
[-6.39689350 117.23458862]
[-21.18596649 119.74123383]
[-35.97504044 122.24788666]
[-50.76411438 124.75453186]
[-65.55319214 127.26118469]
[-77.73396301 136.01496887]
[-92.24340057 139.81973267]
[-107.15235901 138.16958618]
[-120.47856140 131.28393555]
[-130.45019531 120.07827759]
[-135.74142456 106.04250336]
[-135.64875793 91.04279327]
[-130.18450928 77.07347107]
[-120.07520294 65.99187469]
[-106.66493988 59.27139282]
[-91.73673248 57.80557251]
[-77.27540588 61.78930664]
[-65.20335388 70.69331360]
[-50.44641495 73.38268280]
[-35.68947601 76.07205200]
[-20.93253517 78.76142120]
[-6.17559528 81.45079803]
[8.58134556 84.14016724]
[23.33828545 86.82953644]
[38.09522629 89.51890564]
[52.85216522 92.20828247]
[52.89854813 84.70841980]
[41.23746872 75.27342224]
[25.64237785 72.60813141]
[20.61488914 58.58766174]
[8.95380974 49.15266418]
[-2.70727086 39.71766663]
[-14.36835098 30.28266525]
[-26.02943230 20.84766769]
[-37.69050980 11.41266823]
[-49.35159302 1.97766912]
[-61.01267242 -7.45732975]
[-76.32609558 -4.28981733]
[-90.06829834 -11.75210953]
[-95.75064087 -26.32074165]
[-90.69008636 -41.11685181]
[-77.27607727 -49.15416336]
[-61.84230042 -46.63771057]
[-51.67611313 -34.75568390]
[-51.57767487 -19.11841011]
[-39.91659164 -9.68341160]
[-28.25551224 -0.24841215]
[-16.59443283 9.18658733]
[-4.93335199 18.62158585]
[6.72772837 28.05658531]
[18.38880920 37.49158478]
[30.04988861 46.92658234]
[44.81089783 48.91701889]
[50.67246628 63.61234283]
[62.33354568 73.04734039]
[77.56996918 64.40296936]
[93.41948700 62.74428558]
[93.79050446 47.74887466]
[94.16152191 32.75346375]
[94.53253174 17.75805092]
[94.90354919 2.76264048]
[95.27456665 -12.23276997]
[95.64558411 -27.22818184]
[96.01660156 -42.22359085]
[82.50548553 -49.23865128]
[73.41703033 -61.37483978]
[70.51102448 -76.19291687]
[74.31127167 -90.74348450]
[84.01220703 -102.15406036]
[97.64889526 -108.19611359]
[98.01990509 -123.19152069]
[98.39092255 -138.18693542]
[98.76194000 -153.18234253]
[99.04021454 -168.17976379]
[99.22573853 -183.17861938]
[90.73490906 -197.20851135]
[98.87573242 -211.44435120]
[115.27362823 -211.24151611]
[123.05984497 -196.80867004]
[114.22459412 -182.99308777]
[114.03907013 -167.99424744]
[117.09045410 -161.28567505]
[113.75735474 -152.81132507]
[113.38633728 -137.81591797]
[113.01531982 -122.82050323]
[112.64430237 -107.82509613]
[125.96549988 -101.11605072]
[135.09027100 -89.23969269]
[138.16629028 -74.51898956]
[134.53102112 -59.86275864]
[124.85351562 -48.19087601]
[111.01200867 -41.85257721]
[110.64099121 -26.85716438]
[110.26998138 -11.86175442]
[109.89896393 3.13365698]
[109.52794647 18.12906837]
[109.15692902 33.12447739]
[108.78591156 48.11988831]
[108.41489410 63.11529922]
[126.93126678 73.42937469]
[136.99478149 92.08310699]
[135.44683838 113.22169495]
[148.18283081 121.14599609]
[160.91882324 129.07029724]
[173.65481567 136.99459839]
[186.39080811 144.91889954]
[199.12680054 152.84318542]
[211.86279297 160.76748657]
[224.59877014 168.69178772]
[239.59161377 168.22804260]
[251.81350708 159.53176880]
[264.03540039 150.83549500]
[276.25729370 142.13922119]
[282.57952881 127.00775146]
[298.87716675 125.18588257]
[308.38458252 138.54780579]
[301.32138062 153.34790039]
[284.95358276 154.36112976]
[272.73168945 163.05740356]
[260.50976562 171.75367737]
[248.28788757 180.44995117]
[251.85240173 188.20640564]
[252.11346436 195.99673462]
[249.57002258 202.58074951]
[260.87307739 212.44184875]
[272.17611694 222.30294800]
[283.47915649 232.16403198]
[299.48129272 222.15197754]
[317.82281494 217.77478027]
[336.58273315 219.47805786]
[353.80023193 227.07127380]
[367.67974854 239.74890137]
[376.77822876 256.17593384]
[380.15505981 274.62835693]
[377.46932983 293.17422485]
[391.08566284 299.46676636]
[404.70196533 305.75927734]
[418.31829834 312.05181885]
[431.93460083 318.34436035]
[445.55093384 324.63687134]
[459.16723633 330.92941284]
[472.78353882 337.22195435]
[486.39987183 343.51446533]
[495.33181763 331.39813232]
[506.52014160 321.32806396]
[519.50671387 313.71664429]
[533.75970459 308.87551880]
[548.69549561 307.00292969]
[563.70251465 308.17559814]
[578.16613770 312.34545898]
[591.49420166 319.34179688]
[603.14080811 328.87808228]
[612.62915039 340.56384277]
[619.57055664 353.92053223]
[623.68090820 368.40121460]
[624.79187012 383.41290283]
[622.85784912 398.34088135]
[617.95812988 412.57385254]
[610.29333496 425.52899170]
[600.17736816 436.67581177]
[588.02441406 445.55783081]
[574.33215332 451.81137085]
[559.66125488 455.18029785]
[544.61248779 455.52670288]
[529.80212402 452.83639526]
[515.83660889 447.21951294]
[503.28781128 438.90609741]
[492.66964722 428.23654175]
[484.41687012 415.64779663]
[478.86746216 401.65533447]
[476.24862671 386.83215332]
[476.66763306 371.78524780]
[480.10733032 357.13079834]
[466.49102783 350.83825684]
[452.87469482 344.54571533]
[439.25839233 338.25320435]
[425.64205933 331.96066284]
[412.02575684 325.66815186]
[398.40945435 319.37561035]
[384.79312134 313.08306885]
[371.17681885 306.79055786]
[360.80319214 319.05902100]
[347.45828247 328.00558472]
[352.19927979 342.23663330]
[356.94027710 356.46768188]
[361.68127441 370.69873047]
[366.42227173 384.92980957]
[371.16326904 399.16085815]
[384.81036377 407.59503174]
[386.58197021 423.53997803]
[375.11901855 434.76406860]
[359.21490479 432.65716553]
[351.06991577 418.83547974]
[356.93218994 403.90185547]
[352.19119263 389.67080688]
[347.45019531 375.43972778]
[342.70922852 361.20867920]
[337.96823120 346.97763062]
[333.22723389 332.74655151]
[322.82095337 333.84152222]
[312.38073730 333.04626465]
[302.24734497 330.38439941]
[292.75195312 325.94036865]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 177]
[9 176]
[10 175]
[11 174]
[13 159]
[14 158]
[15 157]
[16 156]
[17 155]
[18 154]
[19 153]
[20 152]
[27 46]
[28 45]
[29 44]
[30 43]
[33 40]
[34 39]
[77 105]
[78 104]
[80 102]
[81 101]
[82 100]
[83 99]
[84 98]
[85 97]
[86 96]
[87 95]
[107 149]
[108 148]
[109 147]
[110 146]
[111 145]
[112 144]
[113 143]
[114 142]
[120 136]
[121 135]
[122 134]
[123 133]
[124 131]
[125 130]
[160 171]
[161 170]
[162 169]
[163 168]
[185 231]
[186 230]
[187 229]
[188 228]
[189 227]
[190 226]
[191 225]
[192 224]
[193 223]
[233 249]
[234 248]
[235 247]
[236 246]
[237 245]
[238 244]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
