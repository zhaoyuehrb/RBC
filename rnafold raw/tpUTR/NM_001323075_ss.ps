%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 03:28:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGAGCCAGCAUCUUCCUACAAGAUGAGCAGCUGCUACCUUUGGAGCUCCGGAGCUGCAGCUAAGCGGGUUCCCUCCAUAUCCUGUUCAGCCAGGGCUUCCUCUCUUCUGCUGCAUUUGCCCCCUUCCCAACACAGUUCAAAGCAGUGUGAAAUAAAGUUGUUCUCAUA\
) } def
/len { sequence length } bind def

/coor [
[12.83775997 305.08786011]
[2.52947187 305.69815063]
[-4.04881525 319.17874146]
[-3.14736056 334.97424316]
[-15.68249226 343.01910400]
[-22.26078033 356.49966431]
[-28.83906746 369.98025513]
[-35.41735458 383.46084595]
[-28.01665306 397.09936523]
[-30.07925224 412.47872925]
[-40.81204224 423.68530273]
[-56.08804703 426.40988159]
[-70.03333282 419.60482788]
[-77.28564453 405.88681030]
[-75.05632782 390.53073120]
[-64.20259857 379.44125366]
[-48.89793777 376.88256836]
[-42.31964874 363.40197754]
[-35.74136353 349.92138672]
[-29.16307640 336.44079590]
[-30.53505325 321.60952759]
[-17.52939987 312.60043335]
[-10.95111179 299.11987305]
[-18.64932632 281.25717163]
[-10.65748215 263.19122314]
[8.31278515 256.67416382]
[14.14727497 242.85539246]
[13.85116100 235.44369507]
[20.21521759 228.84017944]
[26.29967308 215.12962341]
[32.38412857 201.41906738]
[38.46858215 187.70851135]
[44.55303955 173.99795532]
[50.63749695 160.28739929]
[56.72195053 146.57682800]
[62.80640793 132.86627197]
[54.68638229 120.25417328]
[39.68700027 120.11798096]
[24.68761826 119.98178101]
[16.04217148 123.04181671]
[9.41774654 119.70446014]
[-5.57668877 119.29592133]
[-21.57462311 124.90862274]
[-31.39664841 111.08964539]
[-20.83672905 97.82599640]
[-5.16815042 104.30148315]
[9.82628536 104.71002197]
[24.82381248 104.98239899]
[39.82319260 105.11859894]
[54.82257462 105.25479126]
[56.45387268 91.75920105]
[61.91908646 79.69510651]
[70.52348328 70.09091949]
[81.31633759 63.69548798]
[77.01911926 49.32419968]
[72.72190857 34.95291138]
[68.42469025 20.58162308]
[64.12747192 6.21033478]
[59.83025742 -8.16095352]
[45.34001541 -13.38963509]
[36.80678940 -26.00063896]
[37.32943344 -41.04028320]
[46.49806213 -52.74815369]
[42.20084763 -67.11943817]
[37.90362930 -81.49073029]
[26.53714371 -92.49588776]
[30.30401993 -106.90630341]
[26.00680542 -121.27758789]
[21.70958900 -135.64888000]
[17.41237259 -150.02017212]
[13.11515713 -164.39144897]
[8.81794167 -178.76274109]
[-6.26249695 -181.11712646]
[-18.82309723 -189.78857422]
[-26.36994171 -203.05537415]
[-27.40460014 -218.28338623]
[-21.72163963 -232.44908142]
[-10.44941616 -242.73983765]
[4.17396212 -247.11242676]
[19.24501228 -244.69866943]
[31.77136612 -235.97782898]
[39.26590729 -222.68141174]
[40.24058914 -207.44944763]
[34.50189209 -193.30624390]
[23.18922997 -183.05995178]
[27.48644638 -168.68867493]
[31.78366089 -154.31738281]
[36.08087921 -139.94609070]
[40.37809372 -125.57480621]
[44.67530823 -111.20351410]
[55.73442841 -101.22628784]
[52.27492142 -85.78794861]
[56.57213593 -71.41665649]
[60.86935043 -57.04536819]
[74.96001434 -52.29235077]
[83.65283966 -40.00826263]
[83.44304657 -24.78297424]
[74.20154572 -12.45816898]
[78.49876404 1.91311920]
[82.79597473 16.28440857]
[87.09319305 30.65569687]
[91.39041138 45.02698517]
[95.68762207 59.39827347]
[106.36186218 59.66857910]
[116.60100555 62.69713974]
[125.70481110 68.27683258]
[133.05067444 76.02606964]
[138.13621521 85.41487122]
[140.61361694 95.80114746]
[155.56356812 97.02555084]
[170.51351929 98.24995422]
[185.47395325 99.33856201]
[200.44366455 100.29129791]
[215.41337585 101.24402618]
[230.38310242 102.19676208]
[245.35281372 103.14949036]
[260.32250977 104.10222626]
[269.12176514 101.51749420]
[275.55462646 105.21060181]
[290.50457764 106.43500519]
[305.45452881 107.65940857]
[320.40447998 108.88381195]
[326.00946045 94.84545135]
[335.50460815 83.08393097]
[348.04562378 74.64506531]
[362.51736450 70.27923584]
[377.63299561 70.37464905]
[392.04846191 74.92282104]
[404.48193359 83.51933289]
[413.82785034 95.39978790]
[419.25518799 109.50778198]
[420.28131104 124.58884430]
[416.81503296 139.30197144]
[409.16452026 152.33889771]
[398.01010132 162.54037476]
[384.34356689 168.99929810]
[369.38018799 171.14132690]
[354.45046997 168.77603149]
[340.88192749 162.11369324]
[329.88113403 151.74674988]
[322.42620850 138.59701538]
[319.18005371 123.83375549]
[304.23013306 122.60935211]
[289.28018188 121.38494873]
[274.33023071 120.16054535]
[259.36978149 119.07193756]
[244.40007019 118.11920166]
[229.43035889 117.16647339]
[214.46064758 116.21373749]
[199.49093628 115.26100922]
[184.52122498 114.30828094]
[177.62147522 117.03122711]
[169.28910828 113.19989777]
[154.33917236 111.97549438]
[139.38922119 110.75109100]
[133.59956360 124.79932404]
[122.87855530 136.04277039]
[108.50416565 142.78424072]
[92.32369232 143.88531494]
[76.51696777 138.95072937]
[70.43251038 152.66128540]
[64.34805298 166.37184143]
[58.26359558 180.08241272]
[52.17914200 193.79296875]
[46.09468460 207.50352478]
[40.01023102 221.21408081]
[33.92577362 234.92463684]
[27.96605682 248.68988037]
[22.13156700 262.50866699]
[28.51978111 271.13116455]
[30.71679306 281.55224609]
[28.38886261 291.86190796]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 23]
[3 22]
[5 20]
[6 19]
[7 18]
[8 17]
[26 169]
[27 168]
[29 167]
[30 166]
[31 165]
[32 164]
[33 163]
[34 162]
[35 161]
[36 160]
[37 50]
[38 49]
[39 48]
[41 47]
[42 46]
[54 103]
[55 102]
[56 101]
[57 100]
[58 99]
[59 98]
[63 94]
[64 93]
[65 92]
[67 90]
[68 89]
[69 88]
[70 87]
[71 86]
[72 85]
[109 155]
[110 154]
[111 153]
[112 151]
[113 150]
[114 149]
[115 148]
[116 147]
[117 146]
[119 145]
[120 144]
[121 143]
[122 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
