%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 15:03:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAUGUAUUGUACAUCUAAAGAGUAAUAGCUUUUCCUGAUACAUUUUAUUAUAUAAGGUAUGUAAAGGAGUUGUACCACACCACUUAAACAUAAAAAAUGGAAAACUGCUAA\
) } def
/len { sequence length } bind def

/coor [
[13.14361572 274.50573730]
[-5.38900328 283.52871704]
[-25.89137268 282.25573730]
[-33.08842468 295.41638184]
[-40.28547668 308.57702637]
[-47.48252869 321.73767090]
[-54.67958069 334.89831543]
[-56.97433853 351.69622803]
[-73.75104523 354.14129639]
[-80.74480438 338.69708252]
[-67.84021759 327.70126343]
[-60.64316940 314.54061890]
[-53.44611740 301.37997437]
[-46.24906540 288.21932983]
[-39.05201340 275.05868530]
[-45.92837524 267.89886475]
[-50.85203934 259.26245117]
[-53.51794815 249.67047119]
[-53.75750732 239.70356750]
[-51.54921722 229.96684265]
[-47.02039337 221.05311584]
[-40.43985748 213.50686646]
[-32.20199585 207.79093933]
[-22.80310631 204.25813293]
[-12.81151390 203.12954712]
[-2.83320904 204.48059082]
[6.52491522 208.23612976]
[16.13118744 196.71572876]
[25.73746109 185.19532776]
[35.34373474 173.67494202]
[44.62604904 161.89195251]
[53.57723236 149.85549927]
[62.52841568 137.81904602]
[71.47959900 125.78258514]
[80.43077850 113.74612427]
[89.38196564 101.70967102]
[94.49048615 87.60636902]
[95.32411194 72.62955475]
[88.36570740 58.42071152]
[96.79837036 46.14310837]
[97.63198853 31.16628838]
[98.46560669 16.18947029]
[99.29923248 1.21265280]
[99.92459106 -13.77430630]
[100.34156036 -28.76850891]
[100.75852966 -43.76271439]
[101.17550659 -58.75691605]
[93.82481384 -72.76683807]
[101.91291809 -85.27410889]
[102.32988739 -100.26831055]
[102.74685669 -115.26251221]
[103.16383362 -130.25671387]
[103.58080292 -145.25091553]
[103.99777222 -160.24513245]
[104.41474915 -175.23933411]
[98.81104279 -191.24041748]
[112.63554382 -201.05467224]
[125.89324951 -190.48728943]
[119.40895081 -174.82235718]
[118.99198151 -159.82815552]
[118.57500458 -144.83395386]
[118.15803528 -129.83975220]
[117.74106598 -114.84554291]
[117.32408905 -99.85134125]
[116.90711975 -84.85713959]
[124.28763580 -71.91970062]
[116.16970825 -58.33994293]
[115.75273132 -43.34574127]
[115.33576202 -28.35153770]
[114.91879272 -13.35733414]
[117.92078400 -6.48708439]
[114.27604675 2.04627419]
[113.44242859 17.02309227]
[112.60880280 31.99991035]
[111.77518463 46.97672653]
[118.79321289 60.11433029]
[110.30092621 73.46317291]
[109.46730804 88.43999481]
[119.03345490 76.88625336]
[131.30404663 68.25882721]
[145.41320801 63.16650772]
[160.36529541 61.96864319]
[175.10522461 64.74975586]
[188.59284973 71.31360626]
[199.87640381 81.19699860]
[208.15965271 93.70250702]
[212.85807800 107.94766998]
[213.64015198 122.92726898]
[210.45066833 137.58424377]
[203.51470947 150.88433838]
[193.32170105 161.88900757]
[180.59092712 169.82168579]
[166.22074890 174.12260437]
[151.22520447 174.48828125]
[136.66247559 170.89288330]
[123.56017303 163.59014893]
[112.84290314 153.09539795]
[105.26691437 140.14918518]
[101.36681366 125.66507721]
[101.41841888 110.66085052]
[92.46723938 122.69731140]
[83.51605225 134.73376465]
[74.56487274 146.77021790]
[65.61368561 158.80668640]
[56.66250610 170.84313965]
[55.48152542 177.58164978]
[51.58953476 181.96531677]
[46.86412811 183.28120422]
[37.25785828 194.80160522]
[27.65158463 206.32200623]
[18.04531097 217.84239197]
[26.68052864 236.79174805]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 15]
[4 14]
[5 13]
[6 12]
[7 11]
[27 111]
[28 110]
[29 109]
[30 108]
[31 105]
[32 104]
[33 103]
[34 102]
[35 101]
[36 100]
[37 78]
[38 77]
[40 75]
[41 74]
[42 73]
[43 72]
[44 70]
[45 69]
[46 68]
[47 67]
[49 65]
[50 64]
[51 63]
[52 62]
[53 61]
[54 60]
[55 59]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
