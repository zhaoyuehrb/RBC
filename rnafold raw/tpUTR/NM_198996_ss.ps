%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 05:19:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGCCUUCUUCCAUCAAAUGCACUUGCUUGUGAAUUAAUGGACUUGUAAAUGAAACAAUGCAAUCAGUCUUUUAUAAUGCACUGUUCAAUUUGAGAUUCAAGUAUUUCUAUUUCUUGGAAAAAAUUUUAAGAAUCAAAAAUAAAGAAAAUAAAAAAUGCAUACAGUUAAACAUUCCAA\
) } def
/len { sequence length } bind def

/coor [
[97.78559113 171.90751648]
[110.45095062 163.65646362]
[106.31639099 149.23753357]
[102.18183136 134.81860352]
[98.04727173 120.39968109]
[90.95587921 117.95792389]
[90.69390869 132.95562744]
[76.34922791 137.34085083]
[67.74604034 125.05324554]
[76.77310181 113.07440186]
[69.68170929 110.63263702]
[57.54645538 119.44941711]
[45.41120148 128.26618958]
[33.27594757 137.08297729]
[21.14069176 145.89974976]
[18.34821320 158.51075745]
[8.03576374 165.60200500]
[-3.94554663 163.81323242]
[-16.23282814 172.41688538]
[-28.52010727 181.02052307]
[-35.38661575 195.27400208]
[-50.25011826 196.23605347]
[-62.53739929 204.83969116]
[-74.82467651 213.44334412]
[-77.32189178 229.04908752]
[-90.17144775 238.25042725]
[-105.74992371 235.58836365]
[-114.81488800 222.64224243]
[-111.98826599 207.09277344]
[-98.94703674 198.16519165]
[-83.42832947 201.15605164]
[-71.14104462 192.55241394]
[-58.85376358 183.94876099]
[-52.86612701 170.31068420]
[-37.12375641 168.73324585]
[-24.83647346 160.12960815]
[-12.54919338 151.52595520]
[-6.01718187 135.25077820]
[12.32391357 133.76449585]
[24.45916939 124.94772339]
[36.59442520 116.13094330]
[48.72967911 107.31416321]
[60.86493301 98.49738312]
[63.59846497 83.74855804]
[55.42887878 71.16850281]
[47.25929642 58.58844376]
[39.08971024 46.00838470]
[30.37916565 33.79664993]
[21.14424324 21.97649002]
[11.90932083 10.15632915]
[2.67439866 -1.66383231]
[-6.56052351 -13.48399353]
[-21.99978447 -15.54965878]
[-31.19692612 -27.66853905]
[-29.13248253 -42.37478256]
[-38.36740494 -54.19494629]
[-47.60232544 -66.01510620]
[-56.83724976 -77.83526611]
[-71.43055725 -83.94639587]
[-73.16917419 -98.73918152]
[-82.40409851 -110.55934143]
[-91.63901520 -122.37950134]
[-100.87393951 -134.19966125]
[-115.39358521 -129.77876282]
[-130.52947998 -130.90541077]
[-144.23460388 -137.42721558]
[-154.65545654 -148.46217346]
[-160.38270569 -162.51788330]
[-160.64179993 -177.69343567]
[-155.39767456 -191.93644714]
[-145.35957336 -203.32069397]
[-131.88505554 -210.30651855]
[-116.79644775 -211.94917297]
[-102.13435364 -208.02648926]
[-89.88170624 -199.06896973]
[-81.69557190 -186.28807068]
[-78.68305969 -171.41227722]
[-81.25158691 -156.45343018]
[-89.05377960 -143.43458557]
[-79.81885529 -131.61442566]
[-70.58393860 -119.79426575]
[-61.34901428 -107.97409821]
[-47.41624832 -102.70843506]
[-45.01708603 -87.07019043]
[-35.78216553 -75.25003052]
[-26.54724312 -63.42986679]
[-17.31232071 -51.60970688]
[-2.54348016 -50.05506516]
[6.99042702 -38.19929504]
[5.25963783 -22.71891594]
[14.49456024 -10.89875412]
[23.72948265 0.92140687]
[32.96440506 12.74156857]
[42.19932556 24.56172943]
[46.74457169 10.26694870]
[60.68956757 4.74090910]
[73.79272461 12.04208469]
[76.43074036 26.80829239]
[66.66616821 38.19482803]
[51.66976929 37.83879852]
[59.83935165 50.41885757]
[68.00894165 62.99891663]
[76.17852783 75.57897186]
[116.29172516 82.14938354]
[130.09930420 76.28841400]
[143.90687561 70.42744446]
[157.71444702 64.56648254]
[171.52201843 58.70551300]
[173.48791504 43.53704453]
[182.72132874 31.46886063]
[196.66296387 25.68117332]
[211.53021240 27.63586044]
[223.34332275 36.70867538]
[237.15089417 30.84770966]
[250.95846558 24.98674202]
[264.76605225 19.12577629]
[278.57360840 13.26480865]
[292.38119507 7.40384197]
[306.18875122 1.54287481]
[319.99633789 -4.31809187]
[333.80389404 -10.17905903]
[343.23565674 -23.59450340]
[359.54333496 -21.86478424]
[365.95098877 -6.76928902]
[355.86697388 6.16303062]
[339.66485596 3.62851381]
[325.85729980 9.48948097]
[312.04971313 15.35044765]
[298.24215698 21.21141434]
[284.43457031 27.07238197]
[270.62701416 32.93334961]
[256.81942749 38.79431534]
[243.01185608 44.65528107]
[229.20428467 50.51625061]
[227.52464294 65.31639862]
[218.60307312 77.36884308]
[204.75508118 83.37714386]
[189.65989685 81.63584137]
[177.38298035 72.51308441]
[163.57540894 78.37405396]
[149.76783752 84.23502350]
[135.96026611 90.09598541]
[122.15269470 95.95695496]
[137.07987976 97.43317413]
[152.00706482 98.90939331]
[166.41348267 94.73148346]
[181.27584839 96.75881958]
[194.03697205 104.64257812]
[202.50120544 117.02630615]
[205.21221924 131.77928162]
[201.70355225 146.36315918]
[192.57890320 158.26864624]
[179.40823364 165.44734192]
[164.45767212 166.66407776]
[150.29954529 161.70950317]
[139.36990356 151.43611145]
[133.54862976 137.60829163]
[123.00741577 126.93670654]
[112.46619415 116.26512146]
[116.60075378 130.68405151]
[120.73531342 145.10296631]
[124.86987305 159.52189636]
[139.98310852 159.80758667]
[154.34017944 164.53684998]
[166.66445923 173.28919983]
[175.86009216 185.28634644]
[181.10939026 199.46154785]
[181.94561768 214.55433655]
[178.29438782 229.22267151]
[170.48039246 242.16224670]
[159.19842529 252.22250366]
[145.45169067 258.50888062]
[130.46252441 260.46240234]
[115.56375122 257.90933228]
[102.08016968 251.07673645]
[91.21072388 240.57214355]
[83.92192078 227.32960510]
[80.86187744 212.52665710]
[82.30268860 197.47953796]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 162]
[3 161]
[4 160]
[5 159]
[11 43]
[12 42]
[13 41]
[14 40]
[15 39]
[18 37]
[19 36]
[20 35]
[22 33]
[23 32]
[24 31]
[44 103]
[45 102]
[46 101]
[47 100]
[48 94]
[49 93]
[50 92]
[51 91]
[52 90]
[55 87]
[56 86]
[57 85]
[58 84]
[60 82]
[61 81]
[62 80]
[63 79]
[104 143]
[105 142]
[106 141]
[107 140]
[108 139]
[113 134]
[114 133]
[115 132]
[116 131]
[117 130]
[118 129]
[119 128]
[120 127]
[121 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
