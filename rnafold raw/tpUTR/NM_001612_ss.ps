%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 23:08:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGCCUGGGCCCUUGCUUGUUUUGACUCAGGCAGUAAAAAGCCUCCAUCACUCUAUUUGGCUCAUUUUAUAUUUAGUUCCUUCCCCAGUCAACAACUGACCACAUCUGCCUCUGCCUGAGCAUUAGGAUGCUCAAACAUCCUAUCUUUCUUCUUCUAUUCAUGCUUUUAUCCAUUCUUCUCUGUCCUGUCUUCCCUGCUCCAACUCUUUCUCUCAAUAUUCCUGAUUUUUUUUUCAAUAAAUUUCACAUGGUUAA\
AGCA\
) } def
/len { sequence length } bind def

/coor [
[75.92877197 251.39239502]
[72.51527405 265.99884033]
[69.10177612 280.60528564]
[65.68827820 295.21173096]
[73.76345825 308.53198242]
[70.09361267 323.29635620]
[57.34501648 330.91271973]
[62.61281586 346.44274902]
[51.59537888 358.58969116]
[35.62650299 354.85778809]
[31.13359833 339.08612061]
[42.73857880 327.49920654]
[34.68590546 315.02163696]
[37.93960190 300.16000366]
[51.08183670 291.79821777]
[54.49533463 277.19177246]
[57.90883255 262.58532715]
[61.32233047 247.97889709]
[64.55909729 233.33229065]
[67.61865234 218.64762878]
[70.67820740 203.96298218]
[73.73776245 189.27832031]
[76.79731750 174.59365845]
[79.85687256 159.90901184]
[82.91642761 145.22434998]
[85.97598267 130.53968811]
[89.03553772 115.85504150]
[80.73969269 103.35787964]
[66.01914215 100.47597504]
[51.29859161 97.59407806]
[36.57804108 94.71217346]
[21.85748863 91.83027649]
[7.13693714 88.94837189]
[-7.58361483 86.06647491]
[-35.79151535 116.79022980]
[-50.05736160 121.42548370]
[-64.32321167 126.06074524]
[-78.58905792 130.69599915]
[-92.85490417 135.33125305]
[-107.06370544 140.13853455]
[-121.21337891 145.11715698]
[-135.36305237 150.09577942]
[-149.51274109 155.07438660]
[-149.95800781 170.24562073]
[-155.85728455 184.22999573]
[-166.41275024 195.13626099]
[-180.19686890 201.48942566]
[-195.34544373 202.43026733]
[-209.80975342 197.83154297]
[-221.63362122 188.31521606]
[-229.21797180 175.16827393]
[-231.53706360 160.16873169]
[-228.27728271 145.34515381]
[-219.87948608 132.70231628]
[-207.47938538 123.95005798]
[-192.75401306 120.27204895]
[-177.69485474 122.16569519]
[-164.33851624 129.37492371]
[-154.49134827 140.92471313]
[-140.34167480 135.94609070]
[-126.19200134 130.96748352]
[-112.04232025 125.98886108]
[-109.21684265 122.17295837]
[-103.97695923 120.07415009]
[-97.49015808 121.06540680]
[-83.22431183 116.43015289]
[-68.95846558 111.79489136]
[-54.69261551 107.15963745]
[-40.42676926 102.52438354]
[-38.98582077 95.16410828]
[-53.72753906 92.39251709]
[-68.46925354 89.62092590]
[-83.21097565 86.84932709]
[-97.95269775 84.07773590]
[-112.69441223 81.30614471]
[-127.43613434 78.53455353]
[-141.78445435 82.90782928]
[-152.92056274 72.85859680]
[-150.03858948 58.13805389]
[-135.93505859 53.03019714]
[-124.29527283 62.49127579]
[-109.59671783 65.48332214]
[-94.89815521 68.47536469]
[-80.19960022 71.46741486]
[-65.50103760 74.45946503]
[-50.80247879 77.45150757]
[-36.10391998 80.44355774]
[-34.66296768 73.08328247]
[-46.12770462 63.41064835]
[-57.59243774 53.73801422]
[-69.05717468 44.06538010]
[-85.10001373 43.98252106]
[-94.92426300 31.29931641]
[-90.99359894 15.74523544]
[-76.32328796 9.25203896]
[-62.16714478 16.80075073]
[-59.38454056 32.60064697]
[-47.91980743 42.27327728]
[-36.45507050 51.94591141]
[-24.99033546 61.61854553]
[-32.68400574 48.74192047]
[-33.78947449 33.78271484]
[-28.07217598 19.91503525]
[-16.74523354 10.08140087]
[-2.21205306 6.36835766]
[12.44364262 9.56375790]
[24.11213684 18.98958588]
[30.31755257 32.64582443]
[29.74319267 47.63482285]
[22.51092911 60.77614594]
[10.15533924 69.28140259]
[-4.70171404 71.34592438]
[10.01883793 74.22782135]
[24.73938942 77.10972595]
[39.45994186 79.99162292]
[54.18049240 82.87352753]
[68.90104675 85.75542450]
[83.62159729 88.63732910]
[96.45831299 80.87725830]
[100.74750519 66.50357056]
[105.03668976 52.12988281]
[109.32587433 37.75619888]
[113.61505890 23.38250923]
[116.40797424 8.64481544]
[117.67517853 -6.30156136]
[118.94239044 -21.24793816]
[120.20959473 -36.19431686]
[121.47679901 -51.14069366]
[122.74401093 -66.08706665]
[124.01121521 -81.03344727]
[113.62966156 -92.94977570]
[114.79824829 -108.71080017]
[126.82366943 -118.96578979]
[142.57145691 -117.63063049]
[152.69873047 -105.49745941]
[151.19715881 -89.76466370]
[138.95759583 -79.76623535]
[137.69038391 -64.81986237]
[136.42318726 -49.87348557]
[135.15597534 -34.92710876]
[133.88876343 -19.98073006]
[132.62155151 -5.03435326]
[131.35435486 9.91202354]
[139.17359924 -2.88873434]
[150.69134521 -12.49818611]
[164.68601990 -17.89715958]
[179.67337036 -18.51304436]
[194.06384277 -14.28052139]
[206.33119202 -5.64848614]
[215.17436218 6.46755219]
[219.65544128 20.78257561]
[219.29917908 35.77834320]
[214.14335632 49.86441803]
[204.73478699 61.54683685]
[192.07135010 69.58657074]
[177.49612427 73.13093567]
[162.55493164 71.80402374]
[148.83242798 65.74655151]
[137.78401184 55.60097885]
[130.58148193 42.44333649]
[127.98874664 27.67169571]
[123.69956207 42.04538345]
[119.41037750 56.41907120]
[115.12118530 70.79275513]
[110.83200073 85.16644287]
[121.48722839 74.60869598]
[132.14245605 64.05094147]
[142.79768372 53.49318695]
[153.45291138 42.93543625]
[164.10813904 32.37768173]
[174.76336670 21.81992912]
[185.41859436 11.26217747]
[189.77165222 -3.09229422]
[195.74465942 -16.85177231]
[203.25852966 -29.83413124]
[212.21383667 -41.86752701]
[222.49201965 -52.79267883]
[233.95703125 -62.46498108]
[246.45712280 -70.75640106]
[259.82684326 -77.55718994]
[273.88922119 -82.77732849]
[288.45809937 -86.34771729]
[303.34063721 -88.22110748]
[318.33987427 -88.37268829]
[333.25726318 -86.80046844]
[347.89532471 -83.52523804]
[362.06030273 -78.59037018]
[375.56472778 -72.06117249]
[388.22985840 -64.02407837]
[399.88800049 -54.58546448]
[410.38488770 -43.87026596]
[419.58154297 -32.02031708]
[427.35626221 -19.19246674]
[433.60614014 -5.55651331]
[438.24841309 8.70704937]
[441.22167969 23.40942383]
[442.48654175 38.35599899]
[442.02627563 53.34893417]
[439.84695435 68.18978119]
[435.97747803 82.68209076]
[430.46899414 96.63403320]
[423.39447021 109.86094666]
[414.84753418 122.18773651]
[404.94131470 133.45124817]
[393.80691528 143.50239563]
[381.59176636 152.20811462]
[368.45748901 159.45320129]
[354.57800293 165.14173889]
[340.13696289 169.19844055]
[325.32556152 171.56959534]
[310.33984375 172.22383118]
[295.37817383 171.15248108]
[280.63854980 168.36972046]
[266.31610107 163.91239929]
[252.60041809 157.83950806]
[239.66807556 150.22808838]
[226.19125366 143.64207458]
[212.71444702 137.05606079]
[199.23764038 130.47004700]
[185.76083374 123.88402557]
[172.28402710 117.29801178]
[158.80722046 110.71199036]
[145.33039856 104.12597656]
[153.99990845 116.36687469]
[162.66941833 128.60777283]
[177.99461365 131.39637756]
[186.61235046 143.93389893]
[183.85939026 158.52693176]
[192.52890015 170.76783752]
[201.19841003 183.00872803]
[216.71539307 183.06155396]
[229.21794128 192.25210571]
[233.89855957 207.04640198]
[228.95745850 221.75576782]
[216.29460144 230.72412109]
[200.77909851 230.50297546]
[188.37698364 221.17733765]
[183.85713196 206.33312988]
[188.95751953 191.67823792]
[180.28800964 179.43734741]
[171.61849976 167.19644165]
[156.93898010 164.94978333]
[147.97248840 152.65927124]
[150.42852783 137.27728271]
[141.75901794 125.03638458]
[133.08950806 112.79548645]
[125.74717712 114.32526398]
[121.05479431 128.57241821]
[111.06252289 117.38481903]
[103.72019196 118.91459656]
[100.66063690 133.59925842]
[97.60108185 148.28390503]
[94.54152679 162.96856689]
[91.48197174 177.65321350]
[88.42241669 192.33787537]
[85.36286163 207.02253723]
[82.30330658 221.70718384]
[79.24375153 236.39184570]
[80.93318176 242.73274231]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 18]
[2 17]
[3 16]
[4 15]
[7 12]
[19 258]
[20 257]
[21 256]
[22 255]
[23 254]
[24 253]
[25 252]
[26 251]
[27 250]
[28 118]
[29 117]
[30 116]
[31 115]
[32 114]
[33 113]
[34 112]
[35 69]
[36 68]
[37 67]
[38 66]
[39 65]
[40 62]
[41 61]
[42 60]
[43 59]
[88 100]
[89 99]
[90 98]
[91 97]
[119 165]
[120 164]
[121 163]
[122 162]
[123 161]
[124 143]
[125 142]
[126 141]
[127 140]
[128 139]
[129 138]
[130 137]
[223 246]
[224 245]
[225 244]
[228 241]
[229 240]
[230 239]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
