%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 05:11:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGGCAGUGCUGGUACCCACUGCCCACCCUGGCUGCCGCUGGGCGGGAACCCCAACAGGGCCCCGGGAGGGAACCCUGCCCCCAACCCCCCACAGCAAGGCUGUACAGUCUCGCCCUUGGAAGACUGAGCUGGGACCCCCACAGCCAUCCGCUGGCUUGGCCAGCAGAACCAGCCCCAAGCCAGCACCUUUGGUAAAUAAAGCAGCAUCUGAGAUUUUAA\
) } def
/len { sequence length } bind def

/coor [
[82.26583862 331.46627808]
[72.57559967 332.55926514]
[62.83914566 332.08920288]
[53.30688477 330.06942749]
[47.32240295 343.82391357]
[41.33792114 357.57839966]
[35.35344315 371.33288574]
[29.36896324 385.08737183]
[23.38448143 398.84188843]
[17.40000153 412.59637451]
[25.38811111 425.89935303]
[23.99778557 441.35403442]
[13.76363564 453.01773071]
[-1.37909985 456.40551758]
[-15.60772991 450.21475220]
[-23.45105743 436.82586670]
[-21.89315987 421.38720703]
[-11.53308392 409.83520508]
[3.64551187 406.61187744]
[9.62999249 392.85739136]
[15.61447239 379.10290527]
[21.59895325 365.34841919]
[27.58343315 351.59393311]
[33.56791306 337.83944702]
[39.55239487 324.08493042]
[23.75040436 310.70358276]
[13.34883499 292.77639771]
[9.56677628 272.37814331]
[12.85631752 251.87481689]
[22.84855270 233.64903259]
[38.39489746 219.82324219]
[57.69910049 212.01257324]
[78.52479553 211.13609314]
[82.30446625 196.62010193]
[86.08413696 182.10411072]
[89.86380768 167.58810425]
[93.64347839 153.07211304]
[63.49739456 127.63139343]
[62.34968948 94.09008026]
[48.27865601 88.89334869]
[34.20762634 83.69660950]
[20.13659286 78.49987793]
[6.02914286 73.40283203]
[-8.11401844 68.40573883]
[-17.23973274 68.49826813]
[-22.42110634 63.23656464]
[-36.49213791 58.03983307]
[-50.56317139 52.84309769]
[-59.96055603 64.68144989]
[-72.53991699 73.02424622]
[-87.06234741 77.06494141]
[-102.10226440 76.41994476]
[-116.18729401 71.16498566]
[-127.94243622 61.82649231]
[-136.22431946 49.32886887]
[-140.23234558 34.90299225]
[-139.58612061 19.96500969]
[-153.65716553 14.76827526]
[-167.72819519 9.57154083]
[-181.79922485 4.37480688]
[-195.87025452 -0.82192755]
[-213.94676208 2.70775270]
[-224.62324524 -11.22421551]
[-238.76640320 -16.22131348]
[-252.90956116 -21.21841049]
[-268.92422485 -17.68817329]
[-279.78762817 -29.97307396]
[-274.32440186 -45.43545914]
[-258.15469360 -48.16895294]
[-247.91246033 -35.36157227]
[-233.76930237 -30.36447525]
[-219.62614441 -25.36737823]
[-208.58532715 -30.29735947]
[-196.76484680 -26.25617027]
[-190.67352295 -14.89295959]
[-176.60249329 -9.69622612]
[-162.53146362 -4.49949121]
[-148.46041870 0.69724286]
[-134.38938904 5.89397717]
[-125.17100525 -5.87812090]
[-112.74850464 -14.23584938]
[-98.33144379 -18.35026741]
[-83.32826996 -17.80633926]
[-69.20875549 -12.64475536]
[-57.35998917 -3.35918880]
[-48.95011520 9.15090179]
[-44.81318283 23.66738510]
[-45.36643600 38.77206421]
[-31.29540443 43.96879959]
[-17.22437286 49.16553497]
[-3.11692190 54.26257706]
[11.02623940 59.25967407]
[18.37417221 58.52483368]
[25.33332634 64.42884827]
[39.40435791 69.62557983]
[53.47539139 74.82231140]
[67.54642487 80.01905060]
[77.62747955 69.14642334]
[91.09476471 62.94369507]
[105.90991974 62.34968948]
[111.10665131 48.27865601]
[116.30339050 34.20762634]
[121.50012207 20.13659286]
[126.69685364 6.06556082]
[131.89358521 -8.00547218]
[122.31011963 -21.94760704]
[122.92213440 -38.68838501]
[133.29023743 -51.63396454]
[149.17143250 -55.80361176]
[154.16853333 -69.94677734]
[159.16563416 -84.08993530]
[164.16273499 -98.23310089]
[169.15982056 -112.37625885]
[174.15692139 -126.51942444]
[169.31121826 -138.46705627]
[173.75852966 -150.14079285]
[184.60694885 -155.48085022]
[189.80368042 -169.55189514]
[195.00041199 -183.62292480]
[200.19714355 -197.69395447]
[205.39387512 -211.76498413]
[202.09062195 -227.82800293]
[214.52801514 -238.51646423]
[229.91154480 -232.83499146]
[232.41595459 -216.62820435]
[219.46492004 -206.56825256]
[214.26817322 -192.49722290]
[209.07144165 -178.42619324]
[203.87471008 -164.35514832]
[198.67797852 -150.28411865]
[202.56855774 -133.16831970]
[188.30007935 -121.52232361]
[183.30299377 -107.37916565]
[178.30589294 -93.23600006]
[173.30879211 -79.09284210]
[168.31169128 -64.94967651]
[163.31460571 -50.80651474]
[171.86996460 -40.56303024]
[174.26783752 -27.32393265]
[169.77706909 -14.52626801]
[159.46910095 -5.54626417]
[145.96461487 -2.80873752]
[140.76788330 11.26229477]
[135.57115173 25.33332634]
[130.37442017 39.40435791]
[125.17768860 53.47539139]
[119.98094940 67.54642487]
[129.04380798 70.80760956]
[137.55984497 76.61009216]
[144.82345581 84.84733582]
[150.15615845 95.22015381]
[152.95811462 107.24524689]
[167.92057800 108.30570984]
[182.88304138 109.36617279]
[197.84550476 110.42663574]
[212.80798340 111.48709869]
[227.77044678 112.54756165]
[242.73291016 113.60802460]
[257.69537354 114.66848755]
[272.65783691 115.72895050]
[287.62030029 116.78941345]
[295.40246582 109.20481110]
[305.85784912 107.19216156]
[315.49383545 111.17820740]
[321.22534180 119.62578583]
[336.15182495 121.10924530]
[347.21170044 110.05426788]
[362.79449463 108.74633026]
[375.54244995 117.80300903]
[379.43640137 132.94801331]
[372.63772583 147.03033447]
[358.35653687 153.40074158]
[343.33599854 149.05131531]
[334.66836548 136.03572083]
[319.74188232 134.55226135]
[302.74383545 143.77902222]
[286.55984497 131.75187683]
[271.59738159 130.69142151]
[256.63491821 129.63095093]
[241.67243958 128.57049561]
[226.70997620 127.51002502]
[211.74751282 126.44956207]
[196.78504944 125.38909912]
[181.82258606 124.32863617]
[166.86010742 123.26817322]
[151.89764404 122.20771027]
[146.30479431 136.12605286]
[157.84082031 145.71354675]
[169.37683105 155.30105591]
[185.42282104 160.77485657]
[184.60491943 177.70906067]
[168.10607910 181.61097717]
[159.78933716 166.83708191]
[148.25331116 157.24957275]
[136.71730042 147.66206360]
[129.57783508 149.95950317]
[135.10514832 163.90399170]
[143.17744446 176.54669189]
[134.09719849 188.48608398]
[119.75769043 184.08396912]
[118.94129181 169.10540771]
[115.29892731 154.55435181]
[108.15947723 156.85179138]
[104.37980652 171.36778259]
[100.60013580 185.88377380]
[96.82046509 200.39976501]
[93.04078674 214.91575623]
[101.83322906 219.27551270]
[109.81242371 224.98255920]
[116.77382660 231.88909912]
[122.53926086 239.81658936]
[126.96140289 248.56036377]
[129.92761230 257.89492798]
[131.36279297 267.57980347]
[131.23123169 277.36563110]
[129.53756714 287.00076294]
[126.32660675 296.23751831]
[121.68210602 304.83868408]
[115.72463989 312.58361816]
[108.60845184 319.27386475]
[100.51744843 324.73818970]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 25]
[5 24]
[6 23]
[7 22]
[8 21]
[9 20]
[10 19]
[33 207]
[34 206]
[35 205]
[36 204]
[37 203]
[39 97]
[40 96]
[41 95]
[42 94]
[43 92]
[44 91]
[46 90]
[47 89]
[48 88]
[57 79]
[58 78]
[59 77]
[60 76]
[61 75]
[63 72]
[64 71]
[65 70]
[100 147]
[101 146]
[102 145]
[103 144]
[104 143]
[105 142]
[109 137]
[110 136]
[111 135]
[112 134]
[113 133]
[114 132]
[117 130]
[118 129]
[119 128]
[120 127]
[121 126]
[152 186]
[153 185]
[154 184]
[155 183]
[156 182]
[157 181]
[158 180]
[159 179]
[160 178]
[161 177]
[165 175]
[166 174]
[187 195]
[188 194]
[189 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
