%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 16:52:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUUUGAUAGUUAAUCUACCAGUGUGAGCUUGCCUAUUUCUGCCUAAUCAUGUACAUUAUCCACCAAAAAUUAGGUCAUCAUAGUUGAGGUAUGUGUCUGCUAUUUGCAAAGAAGUUGGUCGUAUUUUUUUAAAAAGUAUUUCACAAGAAUGGAACAAAUCUACUUAUCCAGUUAUACCUUUGAAUAAAAAAACCUCCUUUUAUUGUCUCUUUUCA\
) } def
/len { sequence length } bind def

/coor [
[7.71264124 190.27261353]
[-0.79270548 177.91708374]
[-4.69859219 163.43453979]
[-3.55924106 148.47787476]
[2.49531436 134.75408936]
[12.77406788 123.82946777]
[26.10631561 116.95008850]
[11.13123035 116.08590698]
[-3.84385514 115.22172546]
[-18.81894112 114.35754395]
[-33.79402542 113.49337006]
[-48.76911163 112.62918854]
[-62.42900467 125.76217651]
[-81.03109741 124.75194550]
[-92.77817535 110.70703125]
[-107.77194977 110.27476501]
[-121.78936005 117.61116028]
[-134.28837585 109.51029968]
[-149.28215027 109.07802582]
[-164.27590942 108.64575958]
[-179.26968384 108.21348572]
[-194.26930237 108.10540771]
[-207.95654297 116.04077148]
[-220.79399109 108.48767853]
[-235.79243469 108.70383453]
[-250.79086304 108.91999817]
[-265.78930664 109.13615417]
[-280.78775024 109.35231018]
[-287.25015259 119.32356262]
[-297.61618042 124.88243103]
[-309.25802612 124.75095367]
[-319.28723145 119.07735443]
[-325.27108765 109.37062073]
[-340.26953125 109.15446472]
[-355.26797485 108.93830109]
[-370.26641846 108.72214508]
[-385.26486206 108.50598907]
[-388.01647949 123.28897095]
[-393.22705078 137.39422607]
[-400.74658203 150.41590881]
[-410.35879517 161.97938538]
[-421.78704834 171.75192261]
[-434.70260620 179.45236206]
[-448.73379517 184.85913086]
[-463.47695923 187.81669617]
[-478.50790405 188.23992920]
[-493.39413452 186.11666870]
[-507.70733643 181.50799561]
[-521.03576660 174.54652405]
[-532.99578857 165.43255615]
[-543.24346924 154.42828369]
[-551.48382568 141.85035706]
[-557.47985840 128.06065369]
[-561.05895996 113.45594025]
[-562.11822510 98.45640564]
[-560.62713623 83.49362946]
[-556.62860107 68.99811554]
[-550.23773193 55.38693237]
[-541.63830566 43.05169678]
[-531.07781982 32.34732437]
[-518.86004639 23.58179665]
[-505.33657837 17.00731468]
[-490.89648438 12.81304073]
[-475.95526123 11.11965370]
[-460.94274902 11.97587395]
[-446.29095459 15.35706806]
[-432.42138672 21.16595078]
[-419.73312378 29.23538780]
[-408.59121704 39.33320999]
[-399.31625366 51.16887665]
[-392.17507935 64.40185547]
[-387.37316895 78.65141296]
[-385.04870605 93.50754547]
[-370.05026245 93.72370148]
[-355.05181885 93.93986511]
[-340.05337524 94.15602112]
[-325.05493164 94.37217712]
[-312.71182251 80.84809113]
[-294.08343506 80.64277649]
[-281.00390625 94.35386658]
[-266.00546265 94.13771057]
[-251.00703430 93.92155457]
[-236.00859070 93.70539856]
[-221.01014709 93.48923492]
[-208.39569092 85.56933594]
[-194.48545837 93.10696411]
[-191.78179932 90.85131836]
[-187.85304260 89.79041290]
[-183.27137756 90.48500824]
[-178.83741760 93.21971893]
[-163.84364319 93.65198517]
[-148.84986877 94.08425903]
[-133.85610962 94.51652527]
[-120.91114807 87.14921570]
[-107.33967590 95.28099060]
[-92.34590912 95.71326447]
[-85.94812012 86.27421570]
[-75.68309021 81.03937531]
[-64.04641724 81.41117096]
[-53.93035126 87.41286469]
[-47.90493393 97.65409851]
[-32.92984772 98.51828003]
[-17.95476151 99.38246155]
[-2.97967553 100.24664307]
[11.99540997 101.11081696]
[26.97049522 101.97499847]
[35.69183350 97.29241180]
[46.20983887 101.00377655]
[61.02176666 98.63591003]
[75.83369446 96.26804352]
[90.64562225 93.90017700]
[105.44010162 91.42565155]
[120.21636963 88.84458160]
[134.99264526 86.26351929]
[149.76890564 83.68244934]
[164.54518127 81.10138702]
[173.63760376 68.45364380]
[188.65960693 66.04656982]
[200.66127014 74.79275513]
[215.43754578 72.21169281]
[230.21380615 69.63062286]
[235.33656311 56.83739090]
[246.02604675 48.31255341]
[259.42459106 46.19836807]
[272.01708984 50.94124985]
[280.55325317 61.20276260]
[295.36517334 58.83489990]
[310.17712402 56.46703339]
[322.58285522 46.64828110]
[336.37194824 52.27947235]
[351.18386841 49.91160965]
[365.99581909 47.54374313]
[380.80773926 45.17588043]
[395.61965942 42.80801392]
[410.43157959 40.44015121]
[418.61337280 30.47354698]
[430.99530029 28.80389977]
[440.86972046 35.78556061]
[455.71423340 33.63138962]
[470.55874634 31.47721672]
[485.40325928 29.32304382]
[494.85638428 16.94257736]
[509.94152832 14.96940708]
[521.68615723 24.05782509]
[509.59091187 15.18621540]
[505.91006470 0.64484936]
[512.32775879 -12.91293049]
[525.90759277 -19.28381920]
[540.43615723 -15.55284309]
[549.26599121 -3.42709494]
[548.35705566 11.54534054]
[538.12628174 22.51333809]
[553.11224365 21.86504555]
[568.09826660 21.21675301]
[583.08422852 20.56846237]
[588.63201904 6.38601828]
[599.47326660 -4.30917025]
[613.72967529 -9.66409779]
[628.93121338 -8.75099182]
[642.44409180 -1.72805142]
[651.92718506 10.18795490]
[655.73742676 24.93250847]
[653.21472168 39.95102310]
[644.79608154 52.64145279]
[631.94018555 60.80510712]
[616.87432861 63.02757645]
[602.20874023 58.92380905]
[590.48437500 49.20480728]
[583.73248291 35.55444717]
[568.74652100 36.20273590]
[553.76055908 36.85102844]
[538.77453613 37.49932098]
[523.84033203 38.90233612]
[515.16351318 50.95423126]
[500.13973999 53.35033417]
[487.55743408 44.16755676]
[472.71292114 46.32172775]
[457.86840820 48.47589874]
[443.02389526 50.63007355]
[429.84594727 62.22258377]
[412.79946899 55.25207901]
[397.98751831 57.61994171]
[383.17559814 59.98780823]
[368.36367798 62.35567093]
[353.55175781 64.72353363]
[338.73980713 67.09140015]
[327.39352417 76.74079132]
[312.54498291 71.27896118]
[297.73306274 73.64682770]
[282.92111206 76.01469421]
[275.96020508 90.88417816]
[261.36077881 98.75175476]
[244.78450012 96.34125519]
[232.79487610 84.40689087]
[218.01860046 86.98796082]
[203.24234009 89.56902313]
[194.91641235 101.86595917]
[179.96794128 104.69402313]
[167.12623596 95.87765503]
[152.34997559 98.45871735]
[137.57369995 101.03978729]
[122.79743958 103.62084961]
[108.02117157 106.20191956]
[101.25786591 110.57879639]
[93.01348877 108.71210480]
[78.20156097 111.07997131]
[63.38962936 113.44783783]
[48.57770157 115.81570435]
[62.53280640 121.31616211]
[73.86003876 131.14945984]
[81.26661682 144.19332886]
[83.90724182 158.95907593]
[81.48052979 173.76147461]
[74.26344299 186.91114807]
[63.07966995 196.90730286]
[49.20561218 202.60910034]
[34.22470856 203.36576843]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 106]
[8 105]
[9 104]
[10 103]
[11 102]
[12 101]
[15 96]
[16 95]
[18 93]
[19 92]
[20 91]
[21 90]
[22 86]
[24 84]
[25 83]
[26 82]
[27 81]
[28 80]
[33 77]
[34 76]
[35 75]
[36 74]
[37 73]
[108 208]
[109 207]
[110 206]
[111 205]
[112 203]
[113 202]
[114 201]
[115 200]
[116 199]
[119 196]
[120 195]
[121 194]
[126 190]
[127 189]
[128 188]
[130 186]
[131 185]
[132 184]
[133 183]
[134 182]
[135 181]
[138 179]
[139 178]
[140 177]
[141 176]
[144 173]
[152 172]
[153 171]
[154 170]
[155 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
