%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 14:50:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCAGCGCCCCGCGCCUGGCUCCAGGUGGACUCCAGGGCACCUGGCUUUAUUUCUGGUGCACUCCUCUCCUGAGAGUGUAGACCAAGGUUGCCUAAUAAACUCAAGGGAUGAA\
) } def
/len { sequence length } bind def

/coor [
[108.72247314 190.82591248]
[116.84412384 178.12544250]
[127.76969147 167.73815918]
[120.32891083 154.71376038]
[112.88813782 141.68937683]
[105.44735718 128.66497803]
[98.00658417 115.64058685]
[84.78380585 108.55834198]
[69.81877136 109.58197784]
[54.85374069 110.60561371]
[43.09319305 125.32128143]
[24.63703537 126.88307190]
[11.04241848 114.77265167]
[-3.84438229 116.61199188]
[-12.10810375 120.82060242]
[-19.16223335 118.29251099]
[-34.09371948 119.72452545]
[-49.02520752 121.15654755]
[-63.95669556 122.58856964]
[-78.88818359 124.02059174]
[-93.54608917 135.06167603]
[-109.23252869 127.32451630]
[-124.11933136 129.16384888]
[-139.00613403 131.00318909]
[-151.76249695 141.30888367]
[-166.96632385 135.16270447]
[-168.97723389 118.88731384]
[-155.72656250 109.22544098]
[-140.84547424 116.11638641]
[-125.95867157 114.27705383]
[-111.07186890 112.43771362]
[-103.31448364 103.04560852]
[-90.83054352 101.46089935]
[-80.32020569 109.08910370]
[-65.38871765 107.65708160]
[-50.45722961 106.22505951]
[-35.52574158 104.79304504]
[-20.59425545 103.36102295]
[-5.68371964 101.72518921]
[9.20308113 99.88584900]
[14.19142056 89.44968414]
[23.73249626 82.69892883]
[35.47397232 81.44210052]
[46.44993591 86.11501312]
[53.83010483 95.64057922]
[68.79513550 94.61694336]
[83.76016998 93.59330750]
[69.44874573 89.10074615]
[60.13445282 77.34302521]
[59.03605652 62.38329315]
[66.53313446 49.39122391]
[80.03489685 42.85651398]
[94.87551117 45.03738403]
[105.92646790 55.18018341]
[109.36885834 69.77983856]
[104.01287842 83.79138947]
[114.10048676 72.69003296]
[124.18809509 61.58867264]
[134.27571106 50.48731232]
[144.05632019 39.11455536]
[153.52264404 27.47888565]
[162.98895264 15.84321690]
[172.45527649 4.20754766]
[181.92160034 -7.42812204]
[191.38790894 -19.06379128]
[194.43539429 -27.82246971]
[201.27519226 -30.88337135]
[211.05580139 -42.25613022]
[213.56600952 -58.46202087]
[228.95156860 -64.13797760]
[241.38514709 -53.44506073]
[238.07612610 -37.38322830]
[222.42855835 -32.47551727]
[212.64794922 -21.10275841]
[203.02359009 -9.59747219]
[193.55726624 2.03819728]
[184.09094238 13.67386627]
[174.62461853 25.30953598]
[165.15830994 36.94520569]
[155.69198608 48.58087540]
[155.30491638 53.46587753]
[151.75395203 58.12158203]
[145.37705994 60.57492065]
[135.28945923 71.67627716]
[125.20184326 82.77764130]
[115.11423492 93.87899780]
[115.43811035 99.32873535]
[113.95579529 104.28474426]
[111.03097534 108.19980621]
[118.47175598 121.22419739]
[125.91252899 134.24859619]
[133.35330200 147.27299500]
[140.79408264 160.29737854]
[155.29077148 156.16104126]
[170.35614014 155.61488342]
[185.11428833 158.69065857]
[198.70721436 165.20954895]
[210.34461975 174.79255676]
[219.34996033 186.88252258]
[225.19963074 200.77658081]
[227.55357361 215.66693115]
[226.27491760 230.68786621]
[221.43800354 244.96609497]
[213.32405090 257.67147827]
[202.40478516 268.06539917]
[189.31504822 275.54348755]
[174.81585693 279.67105103]
[159.75015259 280.20806885]
[144.99388123 277.12335205]
[131.40490723 270.59622192]
[119.77330780 261.00616455]
[110.77530670 248.91072083]
[104.93405151 235.01313782]
[102.58914185 220.12136841]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 93]
[4 92]
[5 91]
[6 90]
[7 89]
[8 47]
[9 46]
[10 45]
[13 40]
[14 39]
[16 38]
[17 37]
[18 36]
[19 35]
[20 34]
[22 31]
[23 30]
[24 29]
[56 86]
[57 85]
[58 84]
[59 83]
[60 80]
[61 79]
[62 78]
[63 77]
[64 76]
[65 75]
[67 74]
[68 73]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
