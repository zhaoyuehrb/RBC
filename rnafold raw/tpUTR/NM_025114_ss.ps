%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 08:18:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCACCUAUAAACUUUGUUUCAUUUAACUAUUUAUUAACUUUAUAAGUUAAAUAUACUUGGAAAUAAGCAGUUCUCCGAACUGUAGUAUUUCCUUCUCACUACCUUGUACCUUUAUACUUAGAUUGGAAUUCUUAAUAAAUAAAAUUAUAUGAAAUUUUCAACUUAUUA\
) } def
/len { sequence length } bind def

/coor [
[68.48354340 594.82244873]
[65.75898743 609.57293701]
[63.03443527 624.32342529]
[66.10322571 640.99731445]
[50.93048096 648.56201172]
[39.46121979 636.07629395]
[48.28395081 621.59887695]
[51.00850296 606.84838867]
[53.73305511 592.09790039]
[37.83089066 584.60040283]
[24.62384796 572.97686768]
[15.15354347 558.13482666]
[10.16944695 541.23590088]
[10.06957626 523.60510254]
[14.86872101 506.62673950]
[24.19673538 491.63583374]
[37.32707977 479.81317139]
[53.23339844 472.09222412]
[70.66975403 469.08551025]
[72.03773499 454.14801025]
[73.40570831 439.21051025]
[74.77368927 424.27304077]
[76.14166260 409.33554077]
[77.50964355 394.39804077]
[78.87761688 379.46057129]
[72.33326721 366.08068848]
[81.29688263 353.04367065]
[82.66485596 338.10617065]
[84.03283691 323.16867065]
[74.64561462 306.28851318]
[86.43235779 289.96490479]
[87.25386810 274.98739624]
[88.07538605 260.00991821]
[88.89690399 245.03242493]
[89.71842194 230.05494690]
[90.53993988 215.07745361]
[91.36145782 200.09997559]
[92.18297577 185.12248230]
[93.00449371 170.14498901]
[93.82600403 155.16751099]
[93.96299744 140.16813660]
[93.41516113 125.17813873]
[79.76908112 116.37097931]
[74.00215912 101.18795776]
[78.36038208 85.54227448]
[91.14639282 75.52730560]
[90.32488251 60.54982376]
[89.50336456 45.57233429]
[88.68184662 30.59484863]
[87.86032867 15.61736202]
[86.90206146 0.64800185]
[85.80713654 -14.31198215]
[84.71220398 -29.27196693]
[83.61727905 -44.23195267]
[71.93911743 -54.54012299]
[71.04181671 -69.72727203]
[80.94105530 -80.79708099]
[79.84612274 -95.75706482]
[78.75119019 -110.71705627]
[73.64328766 -116.92389679]
[72.69925690 -124.08776855]
[75.38603973 -129.91569519]
[71.32762146 -144.35623169]
[67.26919556 -158.79676819]
[63.21077728 -173.23730469]
[59.15235519 -187.67785645]
[55.09393692 -202.11839294]
[51.03551483 -216.55892944]
[37.56395340 -229.08772278]
[42.51476288 -245.90751648]
[38.19327927 -260.27151489]
[33.87179184 -274.63552856]
[29.55030441 -288.99954224]
[25.22881889 -303.36355591]
[20.90733147 -317.72756958]
[16.58584595 -332.09158325]
[6.23262691 -345.51718140]
[16.26750946 -359.18237305]
[32.17659378 -353.32257080]
[30.94985390 -336.41305542]
[35.27133942 -322.04904175]
[39.59282684 -307.68502808]
[43.91431427 -293.32104492]
[48.23580170 -278.95703125]
[52.55728531 -264.59301758]
[56.87877274 -250.22900391]
[67.39875031 -244.21101379]
[71.10253906 -232.25041199]
[65.47605896 -220.61735535]
[69.53447723 -206.17681885]
[73.59289551 -191.73626709]
[77.65132141 -177.29573059]
[81.70973969 -162.85519409]
[85.76815796 -148.41465759]
[89.82657623 -133.97410583]
[94.76451111 -148.13803101]
[104.88397980 -159.21035767]
[118.54759979 -165.39950562]
[133.54450989 -165.70405579]
[147.44812012 -160.07470703]
[158.00874329 -149.42233276]
[163.51762390 -135.47055054]
[163.08337402 -120.47683716]
[156.77627563 -106.86726379]
[145.61683655 -96.84394073]
[131.41073608 -92.02870941]
[116.45658112 -93.20068359]
[103.17407227 -100.17024994]
[93.71117401 -111.81198120]
[94.80610657 -96.85199738]
[95.90103912 -81.89201355]
[107.30655670 -72.38150787]
[108.63008118 -57.22555542]
[98.57726288 -45.32688141]
[99.67218781 -30.36689568]
[100.76712036 -15.40691185]
[101.86204529 -0.44692785]
[105.49977875 6.01842308]
[102.83781433 14.79584408]
[103.65933228 29.77333069]
[104.48085022 44.75081635]
[105.30236816 59.72830582]
[106.12388611 74.70579529]
[117.78859711 81.00355530]
[124.83799744 92.23001099]
[125.44310760 105.47241974]
[119.44691467 117.29498291]
[108.40515900 124.63031006]
[108.95298767 139.62030029]
[121.04837036 130.74890137]
[135.57356262 134.49305725]
[141.87312317 148.10612488]
[135.32579041 161.60177612]
[120.73458099 165.07980347]
[108.80349731 155.98902893]
[107.98197937 170.96650696]
[107.16046143 185.94400024]
[106.33894348 200.92149353]
[105.51742554 215.89897156]
[104.69590759 230.87646484]
[103.87438965 245.85394287]
[103.05287170 260.83142090]
[102.23136139 275.80892944]
[101.40984344 290.78640747]
[109.15459442 298.48965454]
[111.31624603 308.97247314]
[107.41416931 318.70254517]
[98.97032928 324.53665161]
[97.60234833 339.47415161]
[96.23437500 354.41165161]
[102.68087769 368.85992432]
[93.81510925 380.82852173]
[92.44713593 395.76602173]
[91.07915497 410.70352173]
[89.71118164 425.64102173]
[88.34320068 440.57849121]
[86.97522736 455.51599121]
[85.60724640 470.45349121]
[97.58196259 474.32232666]
[108.54663086 480.48577881]
[118.06700897 488.69708252]
[125.76658630 498.62835693]
[131.34147644 509.88381958]
[134.57240295 522.01544189]
[135.33335876 534.54095459]
[133.59648132 546.96270752]
[129.43304443 558.78790283]
[123.01062012 569.54766846]
[114.58625031 578.81591797]
[104.49620056 586.22631836]
[93.14254761 591.48638916]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 9]
[2 8]
[3 7]
[19 158]
[20 157]
[21 156]
[22 155]
[23 154]
[24 153]
[25 152]
[27 150]
[28 149]
[29 148]
[31 144]
[32 143]
[33 142]
[34 141]
[35 140]
[36 139]
[37 138]
[38 137]
[39 136]
[40 135]
[41 129]
[42 128]
[46 123]
[47 122]
[48 121]
[49 120]
[50 119]
[51 117]
[52 116]
[53 115]
[54 114]
[57 111]
[58 110]
[59 109]
[62 95]
[63 94]
[64 93]
[65 92]
[66 91]
[67 90]
[68 89]
[70 86]
[71 85]
[72 84]
[73 83]
[74 82]
[75 81]
[76 80]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
