%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 04:45:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUGUACAGAAGCUGGAGGCAGCAUAAAGGACUCAAGGACCACAGCCUCUGCCCACCAGCAUGUUCCUUGAAGCCCAUCGCCUCUAGCGGGGACCCUCCUUUCCUCCCCAUCCCACCUGUGUGCAGUGCCCUUGCCUGCCUUCACCCCCACCACCACUUCUCCAAUAAAGCCGCCUGGCCUUGUCUCUGUC\
) } def
/len { sequence length } bind def

/coor [
[110.04886627 226.40678406]
[96.81288147 234.50544739]
[81.34717560 233.24392700]
[69.59861755 223.10731506]
[66.08477783 207.99333191]
[72.15679169 193.71360779]
[85.47985077 185.75901794]
[86.69932556 170.80867004]
[87.91880798 155.85832214]
[89.13828278 140.90797424]
[90.35776520 125.95762634]
[66.95921326 92.28745270]
[104.12887573 60.04540634]
[89.18894958 58.70428848]
[74.24902344 57.36317444]
[59.30909348 56.02205658]
[44.36916733 54.68094254]
[29.42924118 53.33982849]
[14.48931503 51.99871063]
[-0.45061138 50.65759659]
[-15.39053822 49.31647873]
[-24.23302269 51.66854095]
[-30.56205368 47.83000946]
[-39.44165421 50.03783035]
[-45.70736313 46.09678650]
[-60.59572220 44.27009201]
[-68.78025818 51.46300507]
[-79.35594177 52.92544937]
[-88.78870392 48.41296768]
[-94.06006622 39.63774109]
[-108.88108063 37.32740402]
[-121.55936432 46.37720490]
[-136.55706787 43.82306671]
[-145.10653687 31.68049049]
[-159.92755127 29.37015343]
[-174.74855042 27.05981827]
[-189.56956482 24.74948120]
[-204.39057922 22.43914604]
[-219.21157837 20.12880898]
[-234.03259277 17.81847382]
[-240.34983826 19.85035706]
[-245.90605164 18.56858444]
[-249.29522705 15.18414783]
[-264.03317261 12.39261818]
[-278.77114868 9.60108757]
[-287.11807251 18.09199333]
[-298.41384888 21.45804405]
[-309.81259155 18.97213364]
[-318.50057983 11.36652184]
[-322.39065552 0.62234133]
[-337.02993774 -2.64742446]
[-351.66921997 -5.91719007]
[-365.92956543 1.43279886]
[-380.50762939 -5.26493883]
[-384.22036743 -20.87247086]
[-374.21969604 -33.41703796]
[-358.17727661 -33.27551651]
[-348.39947510 -20.55647469]
[-333.76019287 -17.28670883]
[-319.12091064 -14.01694298]
[-304.29959106 -24.74278259]
[-286.02893066 -21.18300056]
[-275.97961426 -5.13686848]
[-261.24166870 -2.34533834]
[-246.50370789 0.44619179]
[-231.72225952 2.99746299]
[-216.90124512 5.30779886]
[-202.08024597 7.61813498]
[-187.25923157 9.92847157]
[-172.43821716 12.23880768]
[-157.61720276 14.54914379]
[-142.79620361 16.85947990]
[-130.95654297 7.89521265]
[-115.89301300 10.02709103]
[-106.57074738 22.50639343]
[-91.74973297 24.81673050]
[-74.28812408 16.53179932]
[-58.76902771 29.38173485]
[-43.88067245 31.20842934]
[-28.97793961 32.91389084]
[-14.04942226 34.37655258]
[0.89050418 35.71767044]
[15.83043098 37.05878448]
[30.77035713 38.39989853]
[45.71028519 39.74101639]
[60.65021133 41.08213043]
[75.59014130 42.42324829]
[90.53006744 43.76436234]
[105.46999359 45.10547638]
[117.09896088 35.63092804]
[118.80442047 20.72819519]
[120.50988007 5.82546329]
[122.21533966 -9.07726765]
[123.92079926 -23.97999954]
[111.22927856 -32.53475189]
[103.97729492 -46.01315689]
[103.83129883 -61.31796646]
[110.82485199 -74.93225861]
[123.35087585 -83.72755432]
[138.53099060 -85.68277740]
[152.87690735 -80.34861755]
[163.09204102 -68.95082855]
[166.82904053 -54.10853958]
[163.22915649 -39.23240280]
[153.11961365 -27.74084473]
[138.82353210 -22.27453804]
[137.11807251 -7.37180758]
[135.41261292 7.53092384]
[133.70715332 22.43365479]
[132.00169373 37.33638763]
[137.96728516 41.88189316]
[146.60871887 29.62115669]
[155.25015259 17.36042213]
[161.11053467 3.55259776]
[176.09582520 4.21653128]
[180.71211243 18.48853111]
[168.95455933 27.80253983]
[159.42652893 39.38772202]
[149.89848328 50.97290802]
[155.86408997 55.51841354]
[169.77995300 49.91944122]
[183.69583130 44.32047272]
[195.38259888 27.90758896]
[214.38876343 31.41660500]
[228.11502075 25.36764526]
[241.84127808 19.31868553]
[255.56753540 13.26972580]
[262.17077637 6.93578911]
[269.56680298 7.23604155]
[283.38967896 1.41130519]
[292.85659790 -11.97935772]
[309.15966797 -10.20687771]
[315.52770996 4.90536976]
[305.40982056 17.81119919]
[289.21441650 15.23420143]
[275.39154053 21.05893707]
[261.61648560 26.99598122]
[247.89024353 33.04494095]
[234.16398621 39.09389877]
[220.43772888 45.14286041]
[217.60382080 54.97957611]
[209.65118408 61.76889420]
[199.05555725 63.07909393]
[189.29479980 58.23634720]
[175.37892151 63.83531570]
[161.46305847 69.43428802]
[159.18028259 76.57844543]
[174.07690430 78.33650970]
[188.97352600 80.09457397]
[203.87013245 81.85264587]
[218.76675415 83.61071014]
[232.87181091 78.50702667]
[247.70831299 80.71561432]
[259.71524048 89.70635986]
[266.01071167 103.32131958]
[265.08367920 118.29264832]
[257.15661621 131.02693176]
[244.13223267 138.46771240]
[229.13658142 138.82904053]
[215.76892090 132.02421570]
[207.23867798 119.68900299]
[194.08270264 112.48344421]
[180.92671204 105.27787781]
[167.77073669 98.07231903]
[154.61474609 90.86675262]
[152.33198547 98.01091003]
[160.42291260 110.64170074]
[168.51383972 123.27249146]
[176.60478210 135.90327454]
[190.56373596 143.35029602]
[190.91355896 158.24078369]
[199.00448608 170.87158203]
[207.09541321 183.50236511]
[221.90113831 190.55377197]
[222.92739868 206.92079163]
[209.11845398 215.76640320]
[194.67976379 207.99102783]
[194.46463013 191.59329224]
[186.37368774 178.96250916]
[178.28276062 166.33171082]
[164.90252686 159.78814697]
[163.97398376 143.99421692]
[155.88305664 131.36341858]
[147.79212952 118.73263550]
[139.70118713 106.10184479]
[124.47096252 123.50210571]
[105.30811310 127.17710114]
[104.08863068 142.12745667]
[102.86915588 157.07778931]
[101.64967346 172.02813721]
[100.43019867 186.97848511]
[112.28802490 196.98706055]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 191]
[8 190]
[9 189]
[10 188]
[11 187]
[13 89]
[14 88]
[15 87]
[16 86]
[17 85]
[18 84]
[19 83]
[20 82]
[21 81]
[23 80]
[25 79]
[26 78]
[30 76]
[31 75]
[34 72]
[35 71]
[36 70]
[37 69]
[38 68]
[39 67]
[40 66]
[43 65]
[44 64]
[45 63]
[50 60]
[51 59]
[52 58]
[90 110]
[91 109]
[92 108]
[93 107]
[94 106]
[120 146]
[121 145]
[122 144]
[124 140]
[125 139]
[126 138]
[127 137]
[129 136]
[130 135]
[166 185]
[167 184]
[168 183]
[169 182]
[171 180]
[172 179]
[173 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
