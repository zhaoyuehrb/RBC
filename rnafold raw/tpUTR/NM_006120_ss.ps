%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 23:15:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCUUCCAGACCAGAGUUUGAUGCCAGCAGCUUCGGCCAUCCAAACAGAGGAUGCUCAGAUUUCUCACAUCCUGCCCAGGAUCUCCUCUUAGGGUAGAAGUCUCUGGGACAUCCCUGGGGUGUGUGUGUAGAUUUCCCACCUGGGGACUCUGCUGUCCCUGGGCUUGCAUCCCAGGGAUCCCAGAGUGGCCUGCCUAUCACAACCACAUCCCUUCCCCCCACAAGGCAAUAAAUCUCAUUUCUUUAUAUC\
) } def
/len { sequence length } bind def

/coor [
[104.29419708 468.54040527]
[91.39289856 460.54534912]
[82.25405884 448.42733765]
[78.11363220 433.82525635]
[79.53158569 418.71386719]
[86.31614685 405.13690186]
[97.54975891 394.93051147]
[111.71317291 389.47503662]
[111.71317291 374.47503662]
[111.71317291 359.47503662]
[99.57475281 350.88452148]
[94.76544189 336.62496948]
[99.32819366 322.09793091]
[111.71317291 312.93722534]
[111.71317291 297.93722534]
[111.71317291 282.93722534]
[111.61930084 267.93753052]
[111.43155670 252.93870544]
[111.24382019 237.93988037]
[111.05607605 222.94105530]
[103.16008759 210.31161499]
[110.72406006 196.41569519]
[110.53632355 181.41687012]
[110.34857941 166.41804504]
[110.16084290 151.41921997]
[97.04711151 144.13703918]
[84.21600342 151.90637207]
[71.38488770 159.67570496]
[58.55377579 167.44503784]
[50.75658417 181.21145630]
[35.86200333 181.18507385]
[23.03088951 188.95440674]
[10.19977856 196.72373962]
[-2.63133407 204.49308777]
[-0.68204522 219.59672546]
[-5.05070782 234.18557739]
[-14.98042488 245.73204041]
[-28.75081253 252.23559570]
[-43.97606659 252.56948853]
[-58.01832581 246.67585754]
[-68.44467163 235.57580566]
[-73.44869232 221.19248962]
[-72.16339874 206.01791382]
[-64.81147766 192.68115234]
[-52.66670227 183.49287415]
[-37.83321762 180.04502869]
[-22.88102150 182.93496704]
[-10.40066814 191.66197205]
[2.43044376 183.89263916]
[15.26155567 176.12330627]
[28.09266853 168.35397339]
[34.97209167 155.14326477]
[50.78444290 154.61392212]
[63.61555481 146.84458923]
[76.44667053 139.07525635]
[89.27777863 131.30592346]
[70.71938324 121.18061066]
[60.81735992 100.45660400]
[47.27386856 94.00882721]
[33.73037720 87.56104279]
[20.18688774 81.11326599]
[6.64339733 74.66548920]
[-6.90009356 68.21770477]
[-20.44358444 61.76992416]
[-33.98707581 55.32214737]
[-39.13931274 55.73054886]
[-43.50558090 54.28178024]
[-46.51361465 51.58032227]
[-47.91101074 48.36964798]
[-61.20290375 41.41799164]
[-74.49479675 34.46633148]
[-87.78668976 27.51467323]
[-101.07858276 20.56301308]
[-114.37047577 13.61135483]
[-126.65958405 19.08624268]
[-139.66975403 16.52927208]
[-148.70379639 7.09156466]
[-150.63159180 -5.63342333]
[-163.83543396 -12.75089836]
[-177.03927612 -19.86837387]
[-193.40670776 -18.84891701]
[-202.24659729 -32.66153336]
[-194.46524048 -47.09698486]
[-178.06741333 -47.30532074]
[-169.92181396 -33.07221985]
[-156.71795654 -25.95474434]
[-143.51411438 -18.83726883]
[-127.61073303 -24.34302330]
[-112.35118103 -16.47707939]
[-107.41882324 0.31946111]
[-94.12693024 7.27112007]
[-80.83502960 14.22277832]
[-67.54313660 21.17443848]
[-54.25124359 28.12609673]
[-40.95935059 35.07775497]
[-27.53929520 41.77865601]
[-13.99580383 48.22643661]
[-0.45231351 54.67421341]
[13.09117699 61.12199402]
[26.63466835 67.56977844]
[40.17815781 74.01755524]
[53.72164917 80.46533203]
[67.26513672 86.91311646]
[72.74780273 81.79545593]
[83.71312714 71.56014252]
[89.19578552 66.44248962]
[83.69487762 52.48756027]
[78.19396210 38.53263474]
[65.02762604 28.75614738]
[67.17967987 12.49881935]
[82.43627167 6.48479843]
[95.10272980 16.90079308]
[92.14888763 33.03172302]
[97.64979553 46.98664474]
[103.15071106 60.94157028]
[132.66839600 84.54849243]
[127.18543243 118.86740875]
[139.61166382 110.46568298]
[152.03788757 102.06395721]
[164.46411133 93.66223907]
[176.89033508 85.26051331]
[189.31655884 76.85878754]
[201.74278259 68.45706940]
[214.16900635 60.05534363]
[226.48908997 51.49874878]
[238.70112610 42.78863144]
[250.91316223 34.07851028]
[263.12521362 25.36839104]
[275.28250122 16.58201790]
[287.38455200 7.71973467]
[299.48660278 -1.14254832]
[296.79232788 -16.12594795]
[300.85415649 -30.73377228]
[310.81484985 -42.08299637]
[324.65850830 -47.95790100]
[339.61837769 -47.24253464]
[352.72979736 -40.13228607]
[364.83187866 -48.99456787]
[376.93392944 -57.85685349]
[389.03601074 -66.71913910]
[401.08236694 -75.65698242]
[413.07257080 -84.67003632]
[425.06274414 -93.68309784]
[437.05294800 -102.69615936]
[449.04315186 -111.70921326]
[434.04388428 -111.85656738]
[421.45645142 -120.01480865]
[415.19650269 -133.64613342]
[417.21130371 -148.51020813]
[426.87411499 -159.98321533]
[441.17910767 -164.49621582]
[455.67639160 -160.64535522]
[465.85623169 -149.62852478]
[468.55197144 -134.87274170]
[462.92663574 -120.97016144]
[475.85397339 -128.57829285]
[488.78134155 -136.18643188]
[501.70867920 -143.79455566]
[514.63604736 -151.40269470]
[527.56335449 -159.01081848]
[540.49072266 -166.61895752]
[553.41809082 -174.22708130]
[566.34539795 -181.83522034]
[568.75366211 -197.28625488]
[580.56414795 -207.53546143]
[596.20031738 -207.74348450]
[608.27929688 -197.81208801]
[611.09771729 -182.43058777]
[603.32482910 -168.86164856]
[588.63073730 -163.51211548]
[573.95355225 -168.90786743]
[561.02618408 -161.29974365]
[548.09887695 -153.69160461]
[535.17150879 -146.08346558]
[522.24414062 -138.47534180]
[509.31680298 -130.86720276]
[496.38946533 -123.25907898]
[483.46212769 -115.65094757]
[470.53475952 -108.04281616]
[458.05621338 -99.71901703]
[446.06600952 -90.70596313]
[434.07580566 -81.69290161]
[422.08563232 -72.67984772]
[410.09542847 -63.66678619]
[406.64620972 -57.15245056]
[397.89828491 -54.61707306]
[385.79623413 -45.75478745]
[373.69415283 -36.89250565]
[361.59210205 -28.03022385]
[364.41275024 -13.38408470]
[360.57885742 1.09385681]
[350.79910278 12.51826668]
[336.97253418 18.58834457]
[321.82000732 18.05108261]
[308.34890747 10.95951462]
[296.24682617 19.82179832]
[284.14477539 28.68408203]
[280.61428833 35.15473938]
[271.83532715 37.58042526]
[259.62329102 46.29054642]
[247.41125488 55.00066757]
[235.19921875 63.71078491]
[233.54339600 68.16538239]
[229.08607483 71.63821411]
[222.57072449 72.48156738]
[210.14450073 80.88329315]
[197.71827698 89.28501129]
[185.29205322 97.68673706]
[172.86582947 106.08846283]
[160.43960571 114.49018097]
[148.01338196 122.89190674]
[135.58715820 131.29362488]
[148.41787720 123.52365112]
[163.32449341 121.85254669]
[177.55720520 126.58859253]
[188.49047852 136.85812378]
[194.10748291 150.76673889]
[193.37200928 165.74868774]
[186.41976929 179.04028320]
[174.53323364 188.18960571]
[159.90509033 191.50888062]
[145.23381042 188.38581848]
[133.22579956 179.39649963]
[126.09617615 166.19921875]
[125.15966797 151.23147583]
[125.34740448 166.23030090]
[125.53514862 181.22912598]
[125.72288513 196.22795105]
[133.63230896 209.93020630]
[126.05490112 222.75331116]
[126.24264526 237.75213623]
[126.43038177 252.75096130]
[126.61812592 267.74978638]
[129.84783936 276.26583862]
[126.71317291 282.93722534]
[126.71317291 297.93722534]
[126.71317291 312.93722534]
[139.09814453 322.09793091]
[143.66090393 336.62496948]
[138.85159302 350.88452148]
[126.71317291 359.47503662]
[126.71317291 374.47503662]
[126.71317291 389.47503662]
[140.87658691 394.93051147]
[152.11019897 405.13690186]
[158.89476013 418.71386719]
[160.31271362 433.82525635]
[156.17228699 448.42733765]
[147.03344727 460.54534912]
[134.13214111 468.54040527]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 243]
[9 242]
[10 241]
[14 237]
[15 236]
[16 235]
[17 233]
[18 232]
[19 231]
[20 230]
[22 228]
[23 227]
[24 226]
[25 225]
[26 56]
[27 55]
[28 54]
[29 53]
[31 51]
[32 50]
[33 49]
[34 48]
[58 103]
[59 102]
[60 101]
[61 100]
[62 99]
[63 98]
[64 97]
[65 96]
[69 95]
[70 94]
[71 93]
[72 92]
[73 91]
[74 90]
[78 87]
[79 86]
[80 85]
[106 115]
[107 114]
[108 113]
[117 212]
[118 211]
[119 210]
[120 209]
[121 208]
[122 207]
[123 206]
[124 205]
[125 202]
[126 201]
[127 200]
[128 199]
[129 197]
[130 196]
[131 195]
[137 189]
[138 188]
[139 187]
[140 186]
[141 184]
[142 183]
[143 182]
[144 181]
[145 180]
[155 179]
[156 178]
[157 177]
[158 176]
[159 175]
[160 174]
[161 173]
[162 172]
[163 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
