%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 02:26:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCUGCUGGAAGCAGAUUCUGGAAAAGGUGCUUUCACCUGCUGGUAAAAGAUACAUCUGUAUAUCUGAAAUGCAAGAUAUUGAUUUUUAAAAUAAAUUUGUUUUAUGACUUAA\
) } def
/len { sequence length } bind def

/coor [
[90.48018646 131.61685181]
[77.49781036 124.50109100]
[70.35860443 137.69319153]
[63.21939087 150.88529968]
[56.08018112 164.07740784]
[48.94097137 177.26951599]
[41.80175781 190.46162415]
[39.58076096 207.26947021]
[22.81494522 209.78813171]
[15.75346279 194.37477112]
[28.60965347 183.32241821]
[35.74886322 170.13031006]
[42.88807678 156.93820190]
[50.02728653 143.74609375]
[57.16649628 130.55398560]
[64.30570984 117.36187744]
[56.81401443 130.35705566]
[43.66939926 137.58332825]
[28.68296242 136.94554138]
[16.19982910 128.62861633]
[9.83931446 115.04391479]
[11.44556713 100.13016510]
[20.55287361 88.21140289]
[34.52069473 82.74330902]
[49.29924011 85.31129456]
[60.60232925 95.16875458]
[49.56647110 85.00952911]
[38.53061295 74.85030365]
[27.49475288 64.69107819]
[16.45889473 54.53185654]
[5.01263380 44.83736801]
[-6.82447386 35.62417984]
[-18.66158104 26.41098785]
[-30.49868965 17.19779587]
[-46.14131165 14.82737255]
[-51.43257141 0.90430313]
[-63.26967621 -8.30888748]
[-75.10678864 -17.52207756]
[-91.41597748 -19.23737717]
[-97.83698273 -34.32719803]
[-87.76441956 -47.26843262]
[-71.56007385 -44.74824142]
[-65.89359283 -29.35918617]
[-54.05648804 -20.14599609]
[-42.21937943 -10.93280411]
[-27.42342567 -9.22136974]
[-21.28549767 5.36068916]
[-9.44839096 14.57387924]
[2.38871670 23.78707123]
[14.22582436 33.00025940]
[17.88106918 32.86419296]
[21.77508163 34.58212662]
[24.99260330 38.24107742]
[26.61811829 43.49599838]
[37.65397644 53.65522385]
[48.68983459 63.81444550]
[59.72569275 73.97367096]
[70.76155090 84.13289642]
[86.08225250 70.14855957]
[106.51140594 68.05016327]
[123.99941254 78.41727448]
[134.15864563 67.38141632]
[144.31785583 56.34555817]
[154.47708130 45.30970001]
[164.63630676 34.27384186]
[174.79553223 23.23798180]
[171.60494995 8.05247021]
[177.98023987 -6.09444904]
[191.46997070 -13.76299572]
[206.88708496 -12.00445747]
[218.30335999 -1.49502838]
[221.32902527 13.72420216]
[214.80064392 27.80112839]
[201.22851562 35.32288742]
[185.83139038 33.39720535]
[175.67216492 44.43306351]
[165.51293945 55.46892166]
[155.35372925 66.50478363]
[145.19450378 77.54064178]
[135.03527832 88.57649994]
[136.68539429 103.48545837]
[149.01206970 112.03257751]
[161.33872986 120.57970428]
[177.08818054 122.08480835]
[183.13839722 135.69525146]
[195.46505737 144.24237061]
[211.21452332 145.74748230]
[217.26472473 159.35792542]
[229.59140015 167.90504456]
[241.91806030 176.45216370]
[254.24473572 184.99928284]
[266.57141113 193.54640198]
[278.89807129 202.09353638]
[291.22473145 210.64065552]
[307.60366821 211.45491028]
[314.84616089 226.16809082]
[305.50180054 239.64454651]
[289.18322754 238.02084351]
[282.67761230 222.96731567]
[270.35095215 214.42019653]
[258.02429199 205.87307739]
[245.69761658 197.32595825]
[233.37094116 188.77883911]
[221.04428101 180.23171997]
[208.71760559 171.68458557]
[193.84983826 170.79083252]
[186.91793823 156.56904602]
[174.59127808 148.02192688]
[159.72351074 147.12815857]
[152.79161072 132.90637207]
[140.46495056 124.35924530]
[128.13827515 115.81212616]
[118.58927917 126.68814850]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 16]
[3 15]
[4 14]
[5 13]
[6 12]
[7 11]
[26 58]
[27 57]
[28 56]
[29 55]
[30 54]
[31 50]
[32 49]
[33 48]
[34 47]
[36 45]
[37 44]
[38 43]
[61 80]
[62 79]
[63 78]
[64 77]
[65 76]
[66 75]
[81 112]
[82 111]
[83 110]
[85 108]
[86 107]
[88 105]
[89 104]
[90 103]
[91 102]
[92 101]
[93 100]
[94 99]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
