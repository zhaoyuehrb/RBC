%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 13:24:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACACCUGGAGCGAUGGAAUCCGGCCAGGACUCCCCUGGCACCUGACAUCUCCCACGCUCCACCUGCGCGCCCACCGCCCCCUCCGCCGCCCCUUCCCCAGCCCUGCCCCCGCAGACUCCCCCUGCCGCCAAGACUUCCAAUAAAACGUGCGUUCCUCUCGACAGCA\
) } def
/len { sequence length } bind def

/coor [
[-36.27136612 292.74682617]
[-45.49114609 280.91482544]
[-51.54707336 267.19165039]
[-54.07346344 252.40594482]
[-52.91776657 237.45053101]
[-48.14975739 223.22850037]
[-40.05736542 210.59864807]
[-29.13295174 200.32633972]
[-43.66308594 204.05130005]
[-58.19321823 207.77624512]
[-72.72335052 211.50119019]
[-87.25348663 215.22613525]
[-101.78361511 218.95108032]
[-116.31375122 222.67602539]
[-124.39269257 235.99400330]
[-139.18138123 239.56463623]
[-151.82824707 231.78051758]
[-166.35838318 235.50547791]
[-180.88850403 239.23042297]
[-195.19706726 255.14749146]
[-214.84727478 248.90711975]
[-229.14718628 253.43617249]
[-237.18797302 270.55532837]
[-254.87258911 276.30291748]
[-270.88372803 267.48883057]
[-285.00543213 272.54629517]
[-299.12710571 277.60375977]
[-313.24880981 282.66119385]
[-327.37048340 287.71865845]
[-341.49218750 292.77609253]
[-349.61968994 306.60806274]
[-365.52108765 308.73510742]
[-376.99826050 297.52554321]
[-375.24682617 281.57836914]
[-361.61038208 273.12692261]
[-346.54965210 278.65438843]
[-332.42794800 273.59695435]
[-318.30624390 268.53948975]
[-304.18457031 263.48205566]
[-290.06286621 258.42459106]
[-275.94116211 253.36715698]
[-273.40109253 242.19613647]
[-265.69042969 233.56152344]
[-254.65005493 229.69935608]
[-243.00151062 231.68482971]
[-233.67623901 239.13624573]
[-219.37631226 234.60719299]
[-216.59873962 226.10008240]
[-210.10313416 219.74542236]
[-201.27302551 217.07511902]
[-192.07339478 218.81655884]
[-184.61346436 224.70028687]
[-170.08332825 220.97534180]
[-155.55319214 217.25039673]
[-148.21109009 204.34190369]
[-133.52851868 200.35728455]
[-120.03869629 208.14588928]
[-105.50856781 204.42094421]
[-90.97843170 200.69599915]
[-76.44829559 196.97105408]
[-61.91816330 193.24610901]
[-47.38803101 189.52116394]
[-32.85789871 185.79621887]
[-29.69591141 181.40693665]
[-24.37515068 178.66323853]
[-17.80923653 178.59832764]
[-5.78973389 169.62438965]
[6.22976828 160.65045166]
[18.24927139 151.67651367]
[30.26877213 142.70257568]
[42.28827667 133.72863770]
[36.23062897 120.04324341]
[33.36961365 105.35312653]
[33.84864426 90.39466858]
[37.64370728 75.91770172]
[44.56456375 62.64793396]
[54.26428604 51.25054932]
[66.25664520 42.29687500]
[79.94049835 36.23574448]
[94.62988281 33.37098312]
[109.58846283 33.84619904]
[124.06639862 37.63756943]
[137.33793640 44.55504227]
[148.73779297 54.25185776]
[160.75729370 45.27791977]
[167.82478333 26.42732811]
[187.07650757 24.89422607]
[198.75413513 15.47972393]
[204.64151001 0.79471654]
[219.40599060 -1.16978765]
[231.08363342 -10.58428955]
[226.53404236 -22.55844307]
[225.54866028 -35.31182098]
[228.19746399 -47.80760574]
[234.25532532 -59.03278732]
[243.22125244 -68.08028412]
[254.35968018 -74.22223663]
[266.76086426 -76.96855927]
[279.41519165 -76.10604858]
[291.29537964 -71.71486664]
[301.43981934 -64.16124725]
[313.62405396 -72.91020966]
[316.49023438 -85.51298523]
[326.85244751 -92.54544067]
[338.82949829 -90.67725372]
[351.17425537 -99.19821930]
[363.51901245 -107.71919250]
[375.86376953 -116.24016571]
[382.40130615 -131.27987671]
[398.72326660 -132.86897278]
[408.03903198 -119.37274933]
[400.76535034 -104.67494202]
[384.38473511 -103.89540863]
[372.03997803 -95.37443542]
[359.69522095 -86.85346222]
[347.35046387 -78.33249664]
[340.71676636 -62.10421753]
[322.37301636 -60.72597504]
[310.18878174 -51.97700882]
[314.66693115 -35.24955750]
[312.39953613 -18.04673386]
[303.70498657 -2.99009609]
[289.88323975 7.61549807]
[273.02145386 12.13470745]
[255.67880249 9.85382462]
[240.49812317 1.09334481]
[228.82049561 10.50784683]
[223.76838684 24.51946640]
[208.16864014 27.15735817]
[196.49101257 36.57186127]
[196.31144714 46.83792114]
[190.36837769 55.47920609]
[180.43797302 59.48469162]
[169.73123169 57.29742432]
[157.71173096 66.27136230]
[163.76936340 79.95675659]
[166.63038635 94.64687347]
[166.15135193 109.60533142]
[162.35629272 124.08229828]
[155.43544006 137.35206604]
[145.73571777 148.74945068]
[133.74334717 157.70312500]
[120.05950165 163.76425171]
[105.37011719 166.62901306]
[90.41153717 166.15380859]
[75.93360138 162.36242676]
[62.66207123 155.44496155]
[51.26221466 145.74813843]
[39.24271011 154.72207642]
[27.22320938 163.69601440]
[15.20370674 172.66995239]
[3.18420410 181.64389038]
[-8.83529854 190.61782837]
[6.02291059 188.56025696]
[20.93429947 190.18829346]
[34.99844360 195.40364075]
[47.36608124 203.89137268]
[57.29039764 215.13894653]
[64.17211151 228.46717834]
[67.59566498 243.07127380]
[67.35433960 258.06933594]
[63.46269989 272.55569458]
[56.15574265 285.65563965]
[45.87469864 296.57809448]
[33.24039078 304.66354370]
[19.01573372 309.42370605]
[4.05968618 310.57116699]
[-10.72463322 308.03662109]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 63]
[9 62]
[10 61]
[11 60]
[12 59]
[13 58]
[14 57]
[17 54]
[18 53]
[19 52]
[21 47]
[22 46]
[25 41]
[26 40]
[27 39]
[28 38]
[29 37]
[30 36]
[66 153]
[67 152]
[68 151]
[69 150]
[70 149]
[71 148]
[84 135]
[85 134]
[87 130]
[88 129]
[90 127]
[91 126]
[101 119]
[102 118]
[105 116]
[106 115]
[107 114]
[108 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
