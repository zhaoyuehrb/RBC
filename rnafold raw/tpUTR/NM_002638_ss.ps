%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 22:39:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGGAGCCGGUCCUUGCUGCACCUGUGCCGUCCCCAGAGCUACAGGCCCCAUCUGGUCCUAAGUCCCUGCUGCCCUUCCCCUUCCCACACUGUCCAUUCUUCCUCCCAUUCAGGAUGCCCACGGCUGGAGCUGCCUCUCUCAUCCACUUUCCAAUAAAGAGUUCCUUCUGCUCCA\
) } def
/len { sequence length } bind def

/coor [
[270.21450806 328.96347046]
[261.70196533 316.61291504]
[253.18942261 304.26232910]
[244.67687988 291.91177368]
[236.16433716 279.56118774]
[227.65179443 267.21060181]
[219.13925171 254.86004639]
[205.54580688 248.77171326]
[204.08485413 233.01809692]
[195.57231140 220.66752625]
[187.05976868 208.31695557]
[178.43795776 196.04241943]
[169.70755005 183.84487915]
[160.97715759 171.64732361]
[149.08033752 169.35246277]
[141.71038818 159.23475647]
[143.27047729 146.41072083]
[134.75793457 134.06015015]
[126.24539185 121.70957184]
[117.73284912 109.35900116]
[113.44462585 123.34306335]
[98.64512634 133.79782104]
[76.92213440 133.53913879]
[62.72354126 138.37648010]
[48.52494431 143.21382141]
[34.32635117 148.05117798]
[20.12775612 152.88851929]
[5.97265005 157.85168457]
[-8.13785362 162.94026184]
[-22.20264435 168.15386963]
[-27.16183090 182.98425293]
[-40.52052307 191.11317444]
[-55.97116089 188.70239258]
[-66.21842194 176.89021301]
[-66.42385864 161.25398254]
[-56.49047852 149.17665100]
[-41.10851669 146.36076355]
[-27.54086113 154.13589478]
[-22.39281082 148.80032349]
[-13.22643661 148.82975769]
[0.88406700 143.74118042]
[6.12600231 138.49781799]
[15.29041100 138.68992615]
[29.48900604 133.85258484]
[43.68759918 129.01522827]
[57.88619614 124.17788696]
[72.08478546 119.34054565]
[73.67015839 112.01001740]
[58.89057159 109.44802094]
[44.47026825 113.57776642]
[33.52000809 103.32633972]
[36.69120026 88.66539001]
[50.89920044 83.85574341]
[62.32344437 93.57490540]
[76.84089661 97.34896851]
[78.42626953 90.01844025]
[67.49538422 79.74635315]
[56.56449890 69.47426605]
[52.23393250 68.62422943]
[48.76205063 66.62667847]
[46.40653229 63.89846802]
[45.26090622 60.89742661]
[45.25554276 58.06449890]
[35.08086395 47.04288483]
[24.90618706 36.02127457]
[9.09564209 31.66711426]
[5.22358322 15.73164463]
[17.27325249 4.60790920]
[32.84898376 9.73905277]
[35.92779922 25.84659576]
[46.10247803 36.86820984]
[56.27715302 47.88982010]
[66.83658600 58.54338074]
[77.76747131 68.81546783]
[88.69835663 79.08755493]
[96.17444611 78.48915863]
[91.50639343 64.23400879]
[86.83834076 49.97886276]
[82.17028809 35.72371292]
[72.75183105 24.04927063]
[70.71208191 9.18860435]
[76.63665009 -4.59179544]
[88.82460785 -13.33557796]
[103.77678680 -14.53240681]
[117.20041656 -7.83867121]
[125.24158478 4.82385778]
[125.59166718 19.81977272]
[118.15006256 32.84384537]
[115.80891418 47.66001892]
[113.46777344 62.47619629]
[111.12662506 77.29236603]
[118.60271454 76.69397736]
[127.76051331 64.81396484]
[125.92901611 49.34517670]
[135.38557434 37.42761230]
[150.14398193 35.77688599]
[159.30177307 23.89687538]
[168.45957947 12.01686287]
[177.61738586 0.13685146]
[186.77517700 -11.74316025]
[195.93298340 -23.62317085]
[189.48413086 -37.50376511]
[190.23617554 -52.79078674]
[198.01629639 -65.97138977]
[211.03668213 -74.01676941]
[226.30534363 -75.07815552]
[240.31365967 -68.91164398]
[249.84260559 -56.93426514]
[252.70251465 -41.89832687]
[248.23620605 -27.25897598]
[237.46998596 -16.38022995]
[222.87785339 -11.76194572]
[207.81300354 -14.46537018]
[198.65519714 -2.58535862]
[189.49739075 9.29465294]
[180.33959961 21.17466354]
[171.18179321 33.05467606]
[162.02398682 44.93468857]
[164.18409729 59.62718582]
[155.06602478 71.80566406]
[139.64053345 73.97176361]
[130.48272705 85.85177612]
[130.08341980 100.84645844]
[138.59596252 113.19702911]
[147.10850525 125.54759979]
[155.62104797 137.89817810]
[172.42318726 145.39735413]
[173.17469788 162.91693115]
[181.90509033 175.11447144]
[190.63549805 187.31201172]
[198.19952393 192.48973083]
[199.41033936 199.80441284]
[207.92288208 212.15498352]
[216.43542480 224.50555420]
[230.63772583 231.47729492]
[231.48982239 246.34750366]
[240.00236511 258.69805908]
[248.51490784 271.04864502]
[257.02743530 283.39923096]
[265.53997803 295.74978638]
[274.05252075 308.10037231]
[282.56506348 320.45092773]
[281.43679810 305.49343872]
[285.10116577 290.94790649]
[293.18130493 278.31021118]
[304.84631348 268.88003540]
[318.89648438 263.62719727]
[333.88693237 263.09185791]
[348.27600098 267.32913208]
[360.58395386 275.90319824]
[369.54498291 287.93231201]
[374.23754883 302.17941284]
[374.17907715 317.17929077]
[369.37557983 331.38937378]
[360.32104492 343.34826660]
[347.94662476 351.82614136]
[333.52496338 355.95108032]
[318.53915405 355.29891968]
[304.53033447 349.93667603]
[292.93966675 340.41635132]
[298.15325928 354.48114014]
[303.36685181 368.54592896]
[308.58047485 382.61071777]
[323.36627197 387.70132446]
[331.37631226 401.13162231]
[328.82852173 416.56027222]
[316.92584229 426.70230103]
[301.28842163 426.76898193]
[289.29971313 416.72879028]
[286.62045288 401.32244873]
[294.51568604 387.82434082]
[289.30206299 373.75955200]
[284.08847046 359.69476318]
[278.87487793 345.62997437]
[274.82263184 343.73083496]
[271.53143311 340.02655029]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 142]
[2 141]
[3 140]
[4 139]
[5 138]
[6 137]
[7 136]
[9 134]
[10 133]
[11 132]
[12 130]
[13 129]
[14 128]
[17 126]
[18 125]
[19 124]
[20 123]
[23 47]
[24 46]
[25 45]
[26 44]
[27 43]
[28 41]
[29 40]
[30 38]
[56 75]
[57 74]
[58 73]
[63 72]
[64 71]
[65 70]
[92 122]
[93 121]
[96 118]
[97 117]
[98 116]
[99 115]
[100 114]
[101 113]
[160 174]
[161 173]
[162 172]
[163 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
