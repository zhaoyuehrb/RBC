%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 10:17:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCUCCUCACCCCAGACUCCUGACUGUCUCCCGGGACUACCUGGGACCUCCACCGUUGGUGUUCACCGCCCCCACCCUGAGCGCCUGGGUCCAGGGGAGGCCUUCCAGGGACGAAGAAGAGCCACAGUGAGGGAGAUCCCAUCCCCUUGUCUGAACUGGAGCCAUGGGCACAAAGGGCCCAGAUUAAAGUCUUUAUCCUC\
) } def
/len { sequence length } bind def

/coor [
[296.08087158 129.16813660]
[286.26287842 112.74713898]
[271.27920532 112.04753113]
[256.29553223 111.34793091]
[241.31184387 110.64832306]
[226.32817078 109.94871521]
[211.34449768 109.24910736]
[196.36082458 108.54950714]
[181.37713623 107.84989929]
[166.38122559 107.50000000]
[151.38122559 107.50000000]
[136.38122559 107.50000000]
[121.38122559 107.50000000]
[114.05099487 130.81648254]
[83.36988831 141.89918518]
[73.70823669 153.37316895]
[64.04657745 164.84715271]
[54.38492203 176.32115173]
[58.24340057 191.35084534]
[52.49945068 205.76565552]
[39.36174393 214.02278137]
[23.88198853 212.94720459]
[12.01247406 202.95248413]
[8.31726646 187.88182068]
[14.21724987 173.53016663]
[27.44375992 165.41604614]
[42.91093445 166.65948486]
[52.57258987 155.18550110]
[62.23424530 143.71151733]
[71.89590454 132.23751831]
[63.15478897 120.04765320]
[49.18762589 125.51743317]
[35.22046661 130.98719788]
[21.25330353 136.45697021]
[7.28614330 141.92674255]
[-6.68101740 147.39651489]
[-16.48685074 160.54101562]
[-32.73933792 158.35269165]
[-38.71931076 143.08273315]
[-28.27508926 130.43954468]
[-12.15079021 133.42936707]
[1.81637061 127.95958710]
[15.78353119 122.48981476]
[29.75069237 117.02004242]
[43.71785355 111.55027008]
[57.68501282 106.08049774]
[58.84675217 98.67102051]
[43.96706390 96.77497864]
[29.08737946 94.87894440]
[14.20769310 92.98291016]
[-0.11255074 97.44728088]
[-11.46784210 87.64639282]
[-9.14441395 72.82743073]
[4.66556931 66.97214508]
[16.93236923 75.60511017]
[31.67831993 78.35409546]
[46.42427063 81.10307312]
[61.17022324 83.85205841]
[62.33195877 76.44258118]
[50.70910263 66.96053314]
[39.08624649 57.47848892]
[27.46339035 47.99644470]
[15.84053326 38.51439667]
[4.21767664 29.03235054]
[-7.40517998 19.55030441]
[-19.02803612 10.06825733]
[-34.54146194 11.47232533]
[-46.19361496 1.69061017]
[-47.43657684 -13.10772228]
[-63.13290787 -11.26362038]
[-75.48391724 -21.12405586]
[-77.16196442 -36.83900833]
[-67.17149353 -49.08507156]
[-51.43968201 -50.59687805]
[-39.29992294 -40.47749710]
[-37.95452881 -24.73057938]
[-23.20803261 -26.48454666]
[-11.28572750 -17.03397560]
[-9.54598999 -1.55459905]
[2.07686639 7.92744732]
[13.69972324 17.40949440]
[25.32258034 26.89154053]
[36.94543457 36.37358475]
[48.56829453 45.85563278]
[60.19115067 55.33768082]
[71.81400299 64.81972504]
[109.32669830 67.44084167]
[121.38122559 92.50000000]
[136.38122559 92.50000000]
[151.38122559 92.50000000]
[166.38122559 92.50000000]
[170.91302490 89.88066101]
[175.53381348 89.32237244]
[179.44198608 90.51280975]
[182.07675171 92.86621857]
[197.06042480 93.56582642]
[212.04409790 94.26543427]
[227.02777100 94.96504211]
[242.01145935 95.66464233]
[256.99511719 96.36425018]
[271.97879028 97.06385803]
[286.96249390 97.76346588]
[292.46621704 87.69341278]
[301.29272461 80.43985748]
[312.14050293 77.02275085]
[323.42837524 77.89997101]
[333.52600098 82.90635681]
[340.98928833 91.28315735]
[344.76696777 101.79275513]
[359.70169067 103.19044495]
[374.63644409 104.58812714]
[389.57116699 105.98581696]
[404.03225708 99.56806946]
[415.98321533 108.45762634]
[430.91793823 109.85531616]
[445.85269165 111.25300598]
[460.78744507 112.65069580]
[475.72216797 114.04838562]
[481.74401855 99.39667511]
[491.82141113 87.20041656]
[505.04141235 78.54585266]
[520.21197510 74.19924927]
[535.96929932 74.53903961]
[550.90045166 79.52290344]
[563.67016602 88.69265747]
[573.14007568 101.21631622]
[587.19061279 95.96441650]
[601.24114990 90.71252441]
[615.25042725 85.35152435]
[629.21759033 79.88175201]
[643.18475342 74.41197968]
[657.15191650 68.94220734]
[671.11907959 63.47243500]
[685.08618164 58.00265884]
[691.94189453 51.95508575]
[699.31335449 52.55828857]
[713.36389160 47.30639267]
[727.41442871 42.05449295]
[740.13397217 30.84517479]
[754.42639160 39.96461105]
[749.61987305 56.22295380]
[732.66632080 56.10503006]
[718.61578369 61.35692978]
[704.56524658 66.60882568]
[690.55596924 71.96981812]
[676.58880615 77.43959808]
[662.62164307 82.90937042]
[648.65447998 88.37914276]
[634.68731689 93.84891510]
[620.72015381 99.31868744]
[615.63458252 104.68890381]
[606.49304199 104.76306152]
[592.44250488 110.01495361]
[578.39196777 115.26685333]
[579.58795166 126.46194458]
[578.36462402 137.65409851]
[574.77856445 148.32650757]
[587.36285400 156.48957825]
[599.94714355 164.65263367]
[612.53143311 172.81570435]
[621.44110107 174.86283875]
[625.24658203 181.20484924]
[637.70239258 189.56263733]
[650.15820312 197.92041016]
[670.30712891 198.36140442]
[678.07849121 216.06256104]
[690.78820801 224.02893066]
[707.18725586 224.08285522]
[715.10418701 238.44439697]
[706.39477539 252.33964539]
[690.01849365 251.47434998]
[682.82183838 236.73864746]
[670.11212158 228.77227783]
[660.38964844 231.94529724]
[650.31518555 229.18122864]
[643.28338623 221.16087341]
[641.80047607 210.37623596]
[629.34460449 202.01844788]
[616.88879395 193.66065979]
[604.36834717 185.39999390]
[591.78405762 177.23692322]
[579.19976807 169.07386780]
[566.61547852 160.91081238]
[554.83740234 170.98594666]
[540.61016846 177.18505859]
[525.17248535 178.95579529]
[509.87228394 176.13192749]
[496.04876709 168.94891357]
[484.91537476 158.02426147]
[477.45318604 144.30448914]
[474.32449341 128.98312378]
[459.38973999 127.58543396]
[444.45501709 126.18774414]
[429.52026367 124.79005432]
[414.58551025 123.39236450]
[401.19265747 129.91007996]
[388.17349243 120.92056274]
[373.23873901 119.52287292]
[358.30401611 118.12518311]
[343.36926270 116.72749329]
[331.86465454 131.44709778]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 102]
[3 101]
[4 100]
[5 99]
[6 98]
[7 97]
[8 96]
[9 95]
[10 91]
[11 90]
[12 89]
[13 88]
[15 30]
[16 29]
[17 28]
[18 27]
[31 46]
[32 45]
[33 44]
[34 43]
[35 42]
[36 41]
[59 86]
[60 85]
[61 84]
[62 83]
[63 82]
[64 81]
[65 80]
[66 79]
[69 76]
[109 200]
[110 199]
[111 198]
[112 197]
[114 195]
[115 194]
[116 193]
[117 192]
[118 191]
[126 154]
[127 153]
[128 152]
[129 150]
[130 149]
[131 148]
[132 147]
[133 146]
[134 145]
[136 144]
[137 143]
[138 142]
[157 183]
[158 182]
[159 181]
[160 180]
[162 179]
[163 178]
[164 177]
[166 173]
[167 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
