%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 11:32:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGUCCAGACCAUUGUCUUCCAACCCCAGCUGGCCUCUAGAACACCCACUGGCCAGUCCUAGAGCUCCUGUCCCUACCCACUCUUUGCUACAAUAAAUGCUGAAUGAAUCC\
) } def
/len { sequence length } bind def

/coor [
[61.89356995 162.67060852]
[55.71614456 158.46919250]
[45.48447418 169.43791199]
[49.85584259 184.09527588]
[46.32699585 198.87513733]
[35.94305801 209.83142090]
[21.56544495 214.09056091]
[7.08392334 210.60472107]
[-3.14774632 221.57344055]
[-13.37941647 232.54216003]
[-23.61108589 243.51089478]
[-26.77335167 259.60226440]
[-42.37546921 264.65258789]
[-54.36731720 253.46655273]
[-50.41271210 237.55137634]
[-34.57981110 233.27922058]
[-24.34814072 222.31050110]
[-14.11647129 211.34176636]
[-3.88480210 200.37304688]
[-8.36794567 186.16857910]
[-5.11758900 171.52989197]
[5.09109354 160.41012573]
[19.59018898 155.86335754]
[34.51575089 159.20623779]
[44.74742126 148.23751831]
[33.01347733 129.87493896]
[27.19247627 108.87527466]
[27.79824066 87.09218597]
[34.77729797 66.44847870]
[47.51359940 48.76638031]
[37.90732956 37.24598312]
[28.30105591 25.72558784]
[18.69478226 14.20519257]
[9.08850956 2.68479657]
[-0.51776278 -8.83559990]
[-10.12403584 -20.35599518]
[-24.49569511 -15.47543907]
[-39.65976334 -16.12000465]
[-53.56542587 -22.20252228]
[-64.33205414 -32.90037918]
[-70.50354767 -46.76678085]
[-71.24526978 -61.92640686]
[-66.45690155 -76.32904816]
[-56.78603745 -88.02685547]
[-43.54057693 -95.43780518]
[-28.51185799 -97.55962372]
[-13.73239803 -94.10535431]
[-1.20099342 -85.54216003]
[7.38758516 -73.02813721]
[10.87180328 -58.25571060]
[8.78044891 -43.22272491]
[1.39636075 -29.96226883]
[11.00263309 -18.44187164]
[20.60890579 -6.92147636]
[30.21517944 4.59891987]
[39.82145309 16.11931610]
[49.42772293 27.63971138]
[59.03399658 39.16010666]
[76.86257172 30.39852524]
[96.38836670 26.74249458]
[116.17909241 28.46020126]
[134.78302002 35.42564392]
[150.83546448 47.12787628]
[163.15892029 62.70849609]
[176.78761292 56.44280243]
[190.41629028 50.17711258]
[191.74867249 33.76367188]
[201.08908081 20.31503677]
[215.83482361 13.41420174]
[231.95893860 14.84220123]
[245.10972595 24.11948395]
[258.55899048 17.47736168]
[261.04510498 2.16074252]
[272.08297729 -8.74543667]
[287.42834473 -11.04752636]
[301.18057251 -3.86032629]
[308.05166626 10.05253792]
[305.39953613 25.34128761]
[294.24398804 36.12708282]
[278.87454224 38.26256943]
[265.20111084 30.92660904]
[251.75184631 37.56872940]
[251.75303650 51.30093384]
[245.78155518 63.74055099]
[234.96226501 72.41140747]
[221.39117432 75.55997467]
[207.72955322 72.50980377]
[196.68199158 63.80580139]
[183.05329895 70.07148743]
[169.42460632 76.33718109]
[171.47155762 83.52206421]
[172.77700806 90.87789917]
[173.32742310 98.32837677]
[173.11709595 105.79619598]
[172.14820862 113.20388031]
[170.43080139 120.47457886]
[167.98269653 127.53285980]
[164.82929993 134.30549622]
[161.00332642 140.72222900]
[156.54446411 146.71647644]
[151.49897766 152.22605896]
[145.91918945 157.19381714]
[139.86302185 161.56822205]
[133.39328003 165.30386353]
[126.57711029 168.36199951]
[119.48519897 170.71090698]
[112.19113922 172.32621765]
[104.77059937 173.19116211]
[97.30056763 173.29678345]
[89.85854340 172.64198303]
[82.52172852 171.23353577]
[75.36624908 169.08605957]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 25]
[3 24]
[8 19]
[9 18]
[10 17]
[11 16]
[30 58]
[31 57]
[32 56]
[33 55]
[34 54]
[35 53]
[36 52]
[64 90]
[65 89]
[66 88]
[71 82]
[72 81]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
