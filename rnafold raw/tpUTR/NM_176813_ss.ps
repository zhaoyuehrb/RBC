%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 11:21:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAUGAUGGAAAAAAGCCUUCACUUCAAAGAAGUCAAAUUUCAUGAAGAAAACCUCUGGCACAUUGACAAAUACUAAAUGUGCAAGUAUAUAGAUUUUGUAAUAUUACUAUUUAGUUUUUUUAAUGUGUUUGCAAUAGUCUUAUUAAAAUAAAUGUUUUUUAAAUCUGAGACUGA\
) } def
/len { sequence length } bind def

/coor [
[81.13889313 120.09179688]
[68.28367615 127.82116699]
[55.42844772 135.55053711]
[51.74336243 161.66557312]
[24.68342590 173.74182129]
[17.53189468 186.92724609]
[10.38036251 200.11268616]
[10.60218048 215.93232727]
[-2.26709437 223.43106079]
[-9.41862583 236.61650085]
[-3.51304865 251.09606934]
[-8.34559917 265.96820068]
[-21.63449478 274.21075439]
[-37.10512543 271.93179321]
[-47.45273209 260.20739746]
[-47.79149246 244.57350159]
[-37.96145248 232.41191101]
[-22.60405731 229.46496582]
[-15.45252514 216.27954102]
[-16.18586922 201.40299988]
[-2.80506897 192.96115112]
[4.34646225 179.77571106]
[11.49799347 166.59028625]
[2.13078618 154.87467957]
[-12.30513859 158.94949341]
[-26.74106407 163.02429199]
[-41.17698669 167.09910583]
[-55.61291504 171.17391968]
[-62.59677505 182.04202271]
[-74.72798157 185.12713623]
[-85.35123444 179.30073547]
[-99.85720825 183.11868286]
[-114.36318207 186.93664551]
[-128.86915588 190.75460815]
[-143.37512207 194.57255554]
[-157.15361023 204.45130920]
[-170.46055603 193.94598389]
[-164.04953003 178.25093079]
[-147.19308472 180.06658936]
[-132.68710327 176.24862671]
[-118.18113708 172.43067932]
[-103.67516327 168.61271667]
[-89.16918945 164.79476929]
[-77.40888977 151.78724670]
[-59.68772125 156.73799133]
[-45.25179672 152.66317749]
[-30.81587219 148.58837891]
[-16.37994766 144.51356506]
[-1.94402337 140.43875122]
[1.87042916 129.03520203]
[9.37226868 120.18917847]
[19.24826050 114.96432495]
[29.93583679 113.83262634]
[39.86723328 116.64494324]
[47.69907379 122.69532013]
[60.55429840 114.96595001]
[73.40952301 107.23657227]
[77.73421478 83.76250458]
[98.76319885 72.47016907]
[102.19364166 57.86769867]
[105.62409210 43.26523209]
[109.05453491 28.66276550]
[112.48498535 14.06029892]
[115.91543579 -0.54216814]
[119.34587860 -15.14463520]
[122.77632904 -29.74710083]
[126.20677185 -44.34956741]
[129.63722229 -58.95203400]
[128.55281067 -68.05408478]
[133.26029968 -73.78211212]
[136.94937134 -88.32139587]
[140.63845825 -102.86067200]
[136.53279114 -118.13987732]
[147.16256714 -128.57334900]
[150.85163879 -143.11262512]
[154.54071045 -157.65190125]
[158.22978210 -172.19119263]
[161.91885376 -186.73046875]
[165.60794067 -201.26976013]
[169.29701233 -215.80903625]
[172.85690308 -230.38047791]
[176.28735352 -244.98295593]
[179.71780396 -259.58541870]
[168.64227295 -270.13433838]
[164.36219788 -284.71438599]
[167.93098450 -299.38171387]
[178.29286194 -310.22085571]
[192.59263611 -314.39004517]
[196.02308655 -328.99252319]
[199.45353699 -343.59497070]
[202.88397217 -358.19744873]
[193.37684631 -370.61309814]
[194.12625122 -386.23272705]
[204.77832031 -397.68118286]
[220.30348206 -399.55288696]
[233.37123108 -390.96408081]
[237.81137085 -375.97009277]
[231.52742004 -361.65066528]
[217.48645020 -354.76699829]
[214.05599976 -340.16452026]
[210.62554932 -325.56207275]
[207.19509888 -310.95959473]
[218.14265442 -300.85925293]
[222.59426880 -286.54006958]
[219.25881958 -271.81793213]
[208.93438721 -260.66882324]
[194.32026672 -256.15496826]
[190.88981628 -241.55250549]
[187.45938110 -226.95004272]
[188.99542236 -219.69667053]
[183.83628845 -212.11996460]
[180.14721680 -197.58068848]
[176.45814514 -183.04139709]
[172.76907349 -168.50212097]
[169.08000183 -153.96282959]
[165.39091492 -139.42355347]
[161.70184326 -124.88426971]
[166.07138062 -110.64501190]
[155.17773438 -99.17160034]
[151.48866272 -84.63231659]
[147.79959106 -70.09303284]
[144.23968506 -55.52158737]
[140.80923462 -40.91912079]
[137.37879944 -26.31665421]
[133.94834900 -11.71418762]
[130.51789856 2.88827872]
[127.08744812 17.49074554]
[123.65700531 32.09321213]
[120.22655487 46.69567871]
[116.79611206 61.29814529]
[113.36566162 75.90061188]
[119.29023743 80.31985474]
[123.82713318 86.15481567]
[126.64998627 92.98574829]
[127.55573273 100.32127380]
[126.47920990 107.63368225]
[123.49785614 114.39694977]
[133.67253113 125.41855621]
[143.84721375 136.44017029]
[154.02189636 147.46177673]
[164.19656372 158.48339844]
[174.37124634 169.50500488]
[184.54592896 180.52662659]
[194.72059631 191.54823303]
[205.18507385 202.29508972]
[215.93193054 212.75955200]
[226.67877197 223.22402954]
[237.42562866 233.68850708]
[248.17248535 244.15296936]
[258.91934204 254.61744690]
[274.18829346 251.85362244]
[288.15100098 258.62283325]
[295.43853760 272.32214355]
[293.24868774 287.68392944]
[282.42349243 298.80123901]
[267.12545776 301.39926147]
[253.23698425 294.47897339]
[246.09848022 280.70141602]
[248.45486450 265.36428833]
[237.70800781 254.89982605]
[226.96115112 244.43534851]
[216.21430969 233.97088623]
[205.46745300 223.50640869]
[194.72059631 213.04193115]
[191.17852783 212.73379517]
[187.61386108 210.67536926]
[184.85644531 206.87692261]
[183.69898987 201.72291565]
[173.52430725 190.70129395]
[163.34963989 179.67968750]
[153.17495728 168.65808105]
[143.00027466 157.63645935]
[132.82560730 146.61485291]
[122.65092468 135.59323120]
[112.47624969 124.57162476]
[101.70603180 127.50474548]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 57]
[2 56]
[3 55]
[5 23]
[6 22]
[7 21]
[9 19]
[10 18]
[24 49]
[25 48]
[26 47]
[27 46]
[28 45]
[31 43]
[32 42]
[33 41]
[34 40]
[35 39]
[59 131]
[60 130]
[61 129]
[62 128]
[63 127]
[64 126]
[65 125]
[66 124]
[67 123]
[68 122]
[70 121]
[71 120]
[72 119]
[74 117]
[75 116]
[76 115]
[77 114]
[78 113]
[79 112]
[80 111]
[81 109]
[82 108]
[83 107]
[88 102]
[89 101]
[90 100]
[91 99]
[137 175]
[138 174]
[139 173]
[140 172]
[141 171]
[142 170]
[143 169]
[144 168]
[145 164]
[146 163]
[147 162]
[148 161]
[149 160]
[150 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
