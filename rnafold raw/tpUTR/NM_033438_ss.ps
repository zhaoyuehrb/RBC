%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 17:57:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCUCCUUGGGAACCCCAGUCCUGAGCUUGGUUUCUUCCCAGCACCCAGAGAAUCCUUCCUCAGCUCUCUUCUUUCCAGGGGAAGGAGGUGCUCAGGGGUGGGUAUCCAGAGAGCCAUACUUCUGAGGGAAGACUGGCUGGCAAUAAAGUCAAAUUAAGUGACCACAA\
) } def
/len { sequence length } bind def

/coor [
[102.35073853 176.78817749]
[111.38488007 167.08760071]
[104.94807434 153.53889465]
[98.51126862 139.99018860]
[92.07445526 126.44147491]
[84.66175079 110.93572235]
[89.93709564 99.58897400]
[77.96683502 90.54945374]
[65.99658203 81.50993347]
[50.32103729 79.36797333]
[44.82722092 65.52358246]
[32.85696411 56.48405838]
[20.88670540 47.44453812]
[5.43684435 49.42937469]
[-6.57392836 40.09149551]
[-8.37095261 25.35018349]
[-20.34121132 16.31066322]
[-32.31147003 7.27114344]
[-44.28172684 -1.76837611]
[-59.95726776 -3.91033888]
[-65.45108795 -17.75473213]
[-77.42134094 -26.79425240]
[-89.39160156 -35.83377075]
[-101.36186218 -44.87329102]
[-113.33211517 -53.91281128]
[-125.30237579 -62.95233154]
[-137.27262878 -71.99185181]
[-149.24288940 -81.03137207]
[-160.51818848 -77.11754608]
[-172.16061401 -79.13031006]
[-181.28013611 -86.45204163]
[-185.67019653 -97.16210938]
[-184.34107971 -108.53952026]
[-195.96914673 -118.01518250]
[-207.59719849 -127.49085236]
[-219.22526550 -136.96650696]
[-230.85331726 -146.44218445]
[-242.48138428 -155.91784668]
[-254.10943604 -165.39350891]
[-265.73748779 -174.86917114]
[-277.36557007 -184.34483337]
[-291.51037598 -175.64875793]
[-307.74957275 -172.31163025]
[-324.12670898 -174.71766663]
[-338.67480469 -182.56022644]
[-349.65261841 -194.88073730]
[-355.75299072 -210.18592834]
[-356.25851440 -226.62869263]
[-351.12591553 -242.23109436]
[-363.09619141 -251.27061462]
[-375.06643677 -260.31011963]
[-387.03671265 -269.34963989]
[-399.00695801 -278.38916016]
[-412.31356812 -270.98281860]
[-427.48275757 -269.63552856]
[-441.88641357 -274.58074951]
[-453.02896118 -284.96166992]
[-458.97991943 -298.97970581]
[-458.70825195 -314.20620728]
[-452.26101685 -328.00305176]
[-440.75521851 -337.97985840]
[-426.18432617 -342.40811157]
[-411.07284546 -340.52053833]
[-398.03890991 -332.64422607]
[-389.34075928 -320.14373779]
[-386.48535156 -305.18490601]
[-389.96743774 -290.35943604]
[-377.99719238 -281.31991577]
[-366.02691650 -272.28039551]
[-354.05667114 -263.24087524]
[-342.08639526 -254.20135498]
[-331.13998413 -262.11685181]
[-318.38821411 -266.62530518]
[-304.86550903 -267.35095215]
[-291.67169189 -264.22525024]
[-279.88253784 -257.49322510]
[-270.46206665 -247.69444275]
[-264.18365479 -235.61962891]
[-261.56661987 -222.24690247]
[-262.83322144 -208.66258240]
[-267.88989258 -195.97290039]
[-256.26184082 -186.49723816]
[-244.63377380 -177.02157593]
[-233.00572205 -167.54589844]
[-221.37765503 -158.07023621]
[-209.74960327 -148.59457397]
[-198.12153625 -139.11891174]
[-186.49348450 -129.64324951]
[-174.86541748 -120.16757965]
[-156.83090210 -123.13950348]
[-142.07431030 -111.82328033]
[-140.20336914 -93.00162506]
[-128.23312378 -83.96210480]
[-116.26285553 -74.92259216]
[-104.29260254 -65.88307190]
[-92.32234192 -56.84355164]
[-80.35208130 -47.80403137]
[-68.38182068 -38.76451111]
[-56.41156769 -29.72499084]
[-41.59221649 -28.22959518]
[-35.24220657 -13.73863411]
[-23.27194977 -4.69911480]
[-11.30169106 4.34040451]
[0.66856694 13.37992382]
[15.33891869 11.07419586]
[27.60723305 20.07103348]
[29.92622375 35.47428131]
[41.89648438 44.51380157]
[53.86674118 53.55332184]
[68.68608856 55.04871750]
[75.03610229 69.53968048]
[87.00635529 78.57919312]
[98.97661591 87.61871338]
[113.24246216 92.25397491]
[128.23989868 91.97679138]
[143.23733521 91.69960022]
[158.23478699 91.42241669]
[173.23222351 91.14523315]
[184.16212463 80.04681396]
[199.37561035 79.97935486]
[209.88890076 90.46774292]
[224.88633728 90.19055939]
[239.88377380 89.91337585]
[254.88121033 89.63619232]
[269.87866211 89.35900879]
[285.60336304 83.02101135]
[296.04669189 96.37665558]
[286.10400391 110.10906982]
[270.15582275 104.35645294]
[255.15840149 104.63363647]
[240.16096497 104.91082001]
[225.16351318 105.18800354]
[210.16607666 105.46518707]
[200.04753113 116.33489227]
[184.84194946 116.82964325]
[173.50939941 106.14267731]
[158.51196289 106.41986084]
[143.51452637 106.69704437]
[128.51708984 106.97422791]
[113.51964569 107.25141144]
[105.62316132 120.00466919]
[112.05997467 133.55337524]
[118.49678040 147.10208130]
[124.93359375 160.65078735]
[142.07029724 160.40809631]
[157.54765320 167.63914490]
[168.28784180 180.85285950]
[172.17831421 197.37380981]
[168.48712158 213.88388062]
[158.00013733 227.08865356]
[164.93319702 240.39025879]
[171.86624146 253.69186401]
[178.79930115 266.99346924]
[194.10600281 270.19332886]
[203.73408508 282.51544189]
[203.13748169 298.14163208]
[192.59788513 309.69372559]
[177.09176636 311.71716309]
[163.94064331 303.25656128]
[159.35408020 288.30673218]
[165.49769592 273.92654419]
[158.56463623 260.62493896]
[151.63159180 247.32331848]
[144.69853210 234.02171326]
[131.74981689 235.49102783]
[119.04407501 232.45335388]
[108.10669708 225.25099182]
[100.25839233 214.72750854]
[96.45572662 202.12907410]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 144]
[3 143]
[4 142]
[5 141]
[7 113]
[8 112]
[9 111]
[11 109]
[12 108]
[13 107]
[16 104]
[17 103]
[18 102]
[19 101]
[21 99]
[22 98]
[23 97]
[24 96]
[25 95]
[26 94]
[27 93]
[28 92]
[33 89]
[34 88]
[35 87]
[36 86]
[37 85]
[38 84]
[39 83]
[40 82]
[41 81]
[49 71]
[50 70]
[51 69]
[52 68]
[53 67]
[114 140]
[115 139]
[116 138]
[117 137]
[118 136]
[121 133]
[122 132]
[123 131]
[124 130]
[125 129]
[150 164]
[151 163]
[152 162]
[153 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
