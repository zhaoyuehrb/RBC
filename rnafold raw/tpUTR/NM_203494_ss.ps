%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 12:22:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAGCUUUGAUAACACACGAGUCAGUGAGAUUCCAGAUACUUCUGUUCAAAAUGCUAUGGAUCUCCUGUUCUAUAGCUGCCAGCCCUUUUCCAUACCAAUACAAAAGCGUUAAGAGCCAGGAAAAUGGUGUUUCCUGAACACUGCAAAACAAGCAGUCAGCAUCUGGUGGUAGAGUUUUGCUUGGUCAUUAAACUCUUAGAACUUA\
) } def
/len { sequence length } bind def

/coor [
[-144.48632812 356.14422607]
[-156.43244934 365.21560669]
[-168.37857056 374.28701782]
[-180.32469177 383.35839844]
[-192.27081299 392.42977905]
[-204.21693420 401.50119019]
[-216.02468872 410.75198364]
[-227.69137573 420.18002319]
[-239.35806274 429.60809326]
[-251.02474976 439.03616333]
[-262.69143677 448.46423340]
[-260.24569702 454.50662231]
[-259.36038208 461.16973877]
[-260.19067383 468.04458618]
[-262.78335571 474.68435669]
[-267.06793213 480.63339233]
[-272.85540771 485.45797729]
[-279.84539795 488.77740479]
[-287.64120483 490.29235840]
[-295.77203369 489.80932617]
[-306.69415283 500.09072876]
[-317.61627197 510.37213135]
[-328.53839111 520.65356445]
[-339.46051025 530.93499756]
[-341.38031006 546.86273193]
[-355.10528564 555.16961670]
[-370.10681152 549.48333740]
[-374.87698364 534.16583252]
[-365.75653076 520.96746826]
[-349.74191284 520.01287842]
[-338.81979370 509.73144531]
[-327.89767456 499.45004272]
[-316.97558594 489.16860962]
[-306.05346680 478.88720703]
[-313.91024780 466.10946655]
[-328.01422119 471.21609497]
[-342.11819458 476.32272339]
[-356.22216797 481.42938232]
[-366.36474609 494.31582642]
[-382.55520630 491.70782471]
[-388.13815308 476.28826904]
[-377.37039185 463.91946411]
[-361.32882690 467.32540894]
[-347.22485352 462.21875000]
[-333.12084961 457.11212158]
[-319.01687622 452.00549316]
[-297.82632446 430.95843506]
[-272.11950684 436.79754639]
[-260.45281982 427.36947632]
[-248.78613281 417.94140625]
[-237.11944580 408.51333618]
[-225.45274353 399.08526611]
[-224.06683350 394.51269531]
[-219.79234314 390.76309204]
[-213.28833008 389.55505371]
[-201.34220886 380.48367310]
[-189.39608765 371.41229248]
[-177.44996643 362.34088135]
[-165.50384521 353.26950073]
[-153.55770874 344.19808960]
[-156.73489380 333.61105347]
[-156.53678894 322.53271484]
[-152.96600342 312.01568604]
[-146.34640503 303.06408691]
[-137.29370117 296.53784180]
[-126.65831757 293.07000732]
[-115.44542694 293.00534058]
[-104.71999359 296.36618042]
[-95.50561523 302.84878540]
[-83.03357697 294.51522827]
[-70.56153107 286.18167114]
[-58.08948517 277.84811401]
[-45.61744308 269.51455688]
[-33.14539719 261.18099976]
[-30.32664871 251.20436096]
[-22.13203049 244.16851807]
[-10.98362541 242.78236389]
[-2.27717996 230.56770325]
[6.42926502 218.35304260]
[15.13571072 206.13839722]
[23.84215546 193.92373657]
[32.54859924 181.70907593]
[41.25504684 169.49443054]
[49.96149063 157.27976990]
[43.86461639 151.51292419]
[38.43033600 145.09892273]
[33.72714233 138.11367798]
[29.81484413 130.64033508]
[26.74381447 122.76826477]
[24.55434799 114.59201050]
[23.27613258 106.21014404]
[22.92784309 97.72409058]
[23.51689339 89.23686981]
[25.03928947 80.85189056]
[27.47965240 72.67163849]
[30.81135941 64.79646301]
[34.99683762 57.32335281]
[39.98797226 50.34469604]
[45.72668076 43.94718170]
[52.14556503 38.21069336]
[59.16870880 33.20734406]
[66.71258545 29.00054169]
[74.68702698 25.64419937]
[82.99633026 23.18204880]
[91.54039001 21.64706421]
[100.21591187 21.06103325]
[108.91762543 21.43425369]
[117.53963470 22.76535797]
[121.56761169 8.31629658]
[112.57904816 -4.47978115]
[113.97006226 -20.05537415]
[125.08386230 -31.05616379]
[140.67286682 -32.28791428]
[153.37640381 -23.16902733]
[157.19625854 -8.00516701]
[150.32882690 6.04375839]
[136.01667786 12.34427452]
[131.98869324 26.79333687]
[145.10922241 34.06327820]
[155.22448730 22.98712730]
[165.33976746 11.91097736]
[175.45504761 0.83482581]
[185.57032776 -10.24132538]
[195.68560791 -21.31747627]
[205.80088806 -32.39362717]
[204.83473206 -48.16835785]
[215.36840820 -59.95043182]
[231.15246582 -60.74975204]
[242.82252502 -50.09209824]
[243.45491028 -34.30046844]
[232.67448425 -22.74375153]
[216.87704468 -22.27834892]
[206.76176453 -11.20219707]
[196.64648438 -0.12604596]
[186.53120422 10.95010471]
[176.41592407 22.02625656]
[166.30064392 33.10240555]
[156.18536377 44.17855835]
[162.10992432 52.13212967]
[166.93687439 60.68318939]
[170.61071777 69.68334961]
[173.09567261 78.97982788]
[187.84996033 76.27600098]
[202.60426331 73.57217407]
[217.35856628 70.86834717]
[232.11286926 68.16452026]
[239.68275452 54.48129654]
[254.29553223 48.91344833]
[269.05148315 54.08994675]
[276.98327637 67.56661224]
[274.34579468 82.98016357]
[262.38436890 93.05280304]
[246.74679565 93.02854156]
[234.81668091 82.91882324]
[220.06239319 85.62265015]
[205.30809021 88.32646942]
[190.55378723 91.03029633]
[175.79949951 93.73412323]
[174.08863831 117.19587708]
[165.29040527 139.01266479]
[150.24642944 157.09745789]
[130.39585876 169.72027588]
[107.63758087 175.67358398]
[84.14868927 174.38790894]
[62.17614746 165.98622131]
[53.46969986 178.20086670]
[44.76325607 190.41552734]
[36.05681229 202.63018799]
[27.35036659 214.84483337]
[18.64392090 227.05949402]
[9.93747616 239.27415466]
[1.23103070 251.48880005]
[1.68407619 266.48196411]
[11.11213970 278.14865112]
[20.54020309 289.81533813]
[29.96826553 301.48202515]
[39.39632797 313.14871216]
[48.82439041 324.81539917]
[58.25245667 336.48208618]
[73.09872437 332.93936157]
[88.01006317 336.19738770]
[100.02580261 345.60931396]
[106.76022339 359.30642700]
[106.87619781 374.56909180]
[100.35069275 388.36694336]
[88.47935486 397.96038818]
[73.61925507 401.44464111]
[58.72086334 398.12789917]
[46.74227142 388.66873169]
[40.06184387 374.94522095]
[40.00597763 359.68218994]
[46.58576584 345.91015625]
[37.15770340 334.24346924]
[27.72964096 322.57678223]
[18.30157661 310.91009521]
[8.87351418 299.24340820]
[-0.55454928 287.57672119]
[-9.98261261 275.91003418]
[-24.81184387 273.65304565]
[-37.28388596 281.98660278]
[-49.75593185 290.32015991]
[-62.22797775 298.65371704]
[-74.70001984 306.98727417]
[-87.17206573 315.32083130]
[-85.09004211 334.43704224]
[-92.97311401 351.88650513]
[-108.56011963 362.86584473]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 60]
[2 59]
[3 58]
[4 57]
[5 56]
[6 55]
[7 52]
[8 51]
[9 50]
[10 49]
[11 48]
[20 34]
[21 33]
[22 32]
[23 31]
[24 30]
[35 46]
[36 45]
[37 44]
[38 43]
[69 204]
[70 203]
[71 202]
[72 201]
[73 200]
[74 199]
[77 172]
[78 171]
[79 170]
[80 169]
[81 168]
[82 167]
[83 166]
[84 165]
[108 118]
[109 117]
[119 138]
[120 137]
[121 136]
[122 135]
[123 134]
[124 133]
[125 132]
[142 158]
[143 157]
[144 156]
[145 155]
[146 154]
[173 198]
[174 197]
[175 196]
[176 195]
[177 194]
[178 193]
[179 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
