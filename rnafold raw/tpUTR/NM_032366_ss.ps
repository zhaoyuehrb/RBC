%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 10:31:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCCUCCUUCACCCCCGCACACCUGCAUCCCUGCCGGAGGCUCUGUGAGGCACGAACCCUGCCUCCCUAGGCCGGACCUUGUGGACGACAGCCCCACCCAGUCUGUGCUCUCAGCCGCUGGCCGAAGGGCCCAGCCUGCUCAGAAUAAAGCAUGUCCUGCUGCCGGCUU\
) } def
/len { sequence length } bind def

/coor [
[60.56647491 180.13185120]
[60.01544189 165.14198303]
[59.46441269 150.15209961]
[45.61943817 144.38005066]
[34.58357620 154.53926086]
[23.54771996 164.69848633]
[12.51186085 174.85771179]
[1.47600210 185.01693726]
[0.66377604 200.57258606]
[-10.67287636 210.71827698]
[-25.49779892 209.84806824]
[-36.53365707 220.00729370]
[-32.18180466 234.59574890]
[-34.58570480 249.56599426]
[-43.21567535 261.95727539]
[-56.31605911 269.34243774]
[-71.26216125 270.30340576]
[-85.08607483 264.70294189]
[-96.12193298 274.86215210]
[-107.15779114 285.02139282]
[-111.53409576 300.82580566]
[-127.47497559 304.67553711]
[-138.58181763 292.61029053]
[-133.42884827 277.04177856]
[-117.31700897 273.98553467]
[-106.28115082 263.82629395]
[-95.24529266 253.66708374]
[-99.68505096 239.42790222]
[-97.49314880 224.61221313]
[-89.05136871 212.16642761]
[-75.98975372 204.58920288]
[-60.87212753 203.42974854]
[-46.69288254 208.97143555]
[-35.65702438 198.81221008]
[-35.30001450 183.96606445]
[-24.25280762 173.50595093]
[-8.68322182 173.98107910]
[2.35263729 163.82185364]
[13.38849545 153.66262817]
[24.42435455 143.50340271]
[35.46021271 133.34419250]
[47.72038269 113.19699860]
[64.81082916 100.62136078]
[83.89881134 96.53525543]
[71.04840851 88.79787445]
[58.19799805 81.06049347]
[39.80173111 81.16577148]
[31.88225174 65.52351379]
[18.89187050 58.02350998]
[5.90148926 50.52350998]
[-7.08889198 43.02350998]
[-20.07927322 35.52350998]
[-33.06965256 28.02350998]
[-47.70130920 33.54154205]
[-62.43953323 28.31479836]
[-70.32537842 14.81119251]
[-67.63540649 -0.59328830]
[-55.63972092 -10.62511921]
[-40.00233078 -10.54757500]
[-28.10672760 -0.39727172]
[-25.56965446 15.03312874]
[-12.57927322 22.53312874]
[0.41110811 30.03312874]
[13.40148926 37.53313065]
[26.39187050 45.03313065]
[39.38225174 52.53313065]
[51.16859055 49.70718384]
[62.06246567 55.88103867]
[65.93537903 68.21009064]
[78.78578186 75.94746399]
[91.63619232 83.68484497]
[105.31686401 77.53348541]
[108.05716705 62.78591919]
[110.66189575 48.01380157]
[113.13081360 33.21838379]
[115.59973145 18.42296410]
[118.06864929 3.62754393]
[120.53756714 -11.16787529]
[109.82930756 -22.24214172]
[107.71985626 -37.32204819]
[114.81062317 -50.59552383]
[128.19743347 -57.07094955]
[130.66635132 -71.86637115]
[133.13526917 -86.66178894]
[135.60418701 -101.45720673]
[124.10688782 -111.74387360]
[120.01815796 -126.61955261]
[124.64270020 -141.33746338]
[136.50483704 -151.20118713]
[151.81942749 -153.06324768]
[165.69960022 -146.32945251]
[173.71627808 -133.14852905]
[173.31135559 -117.72648621]
[164.61404419 -104.98442078]
[150.39961243 -98.98828888]
[147.93069458 -84.19287109]
[145.46177673 -69.39744568]
[142.99285889 -54.60203171]
[153.55177307 -44.13076782]
[155.94844055 -29.27412224]
[149.05685425 -15.69622231]
[135.33299255 -8.69895649]
[132.86407471 6.09646273]
[130.39515686 20.89188194]
[127.92623138 35.68730164]
[125.45731354 50.48272324]
[127.46559143 57.62511444]
[122.80474091 65.52622223]
[120.06443024 80.27378845]
[129.81138611 91.67540741]
[144.80569458 91.26209259]
[159.80000305 90.84877777]
[173.38172913 82.73416138]
[186.31736755 90.11782837]
[201.31167603 89.70451355]
[216.30598450 89.29119873]
[231.74172974 79.28263092]
[246.84600830 88.18537903]
[261.83020020 87.49667358]
[276.81436157 86.80797577]
[291.79855347 86.11927032]
[306.78274536 85.43056488]
[321.75994873 84.60424805]
[336.72897339 83.64038849]
[350.06729126 74.09988403]
[364.88485718 81.12639618]
[365.93859863 97.49165344]
[352.14456177 106.36048126]
[337.69281006 98.60939026]
[322.72381592 99.57324982]
[316.22610474 103.15466309]
[307.47143555 100.41474915]
[292.48727417 101.10345459]
[277.50308228 101.79215240]
[262.51889038 102.48085785]
[247.53471375 103.16956329]
[239.13264465 111.90505219]
[226.62915039 112.58007050]
[216.71929932 104.28550720]
[201.72499084 104.69882202]
[186.73068237 105.11213684]
[174.22143555 113.19718933]
[160.21331787 105.84307861]
[145.21900940 106.25639343]
[130.22470093 106.66970825]
[126.65509796 113.26576233]
[139.84709167 120.40518188]
[132.70747375 133.59706116]
[119.51588440 126.45787048]
[115.94628143 133.05392456]
[123.80137634 145.83271790]
[131.65646362 158.61151123]
[139.51156616 171.39028931]
[154.71995544 176.49758911]
[160.07357788 191.62103271]
[151.46557617 205.15919495]
[135.49929810 206.72677612]
[124.42268372 195.12124634]
[126.73277283 179.24539185]
[118.87767792 166.46659851]
[111.02258301 153.68780518]
[103.16748810 140.90901184]
[95.98918915 143.08203125]
[92.57469177 157.68823242]
[81.63258362 147.42805481]
[74.45428467 149.60107422]
[75.00531769 164.59094238]
[75.55635071 179.58082581]
[82.18046570 195.18714905]
[69.01778412 205.87265015]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 168]
[2 167]
[3 166]
[4 41]
[5 40]
[6 39]
[7 38]
[8 37]
[11 34]
[12 33]
[18 27]
[19 26]
[20 25]
[44 71]
[45 70]
[46 69]
[48 66]
[49 65]
[50 64]
[51 63]
[52 62]
[53 61]
[72 109]
[73 108]
[74 106]
[75 105]
[76 104]
[77 103]
[78 102]
[82 98]
[83 97]
[84 96]
[85 95]
[110 145]
[111 144]
[112 143]
[114 141]
[115 140]
[116 139]
[118 136]
[119 135]
[120 134]
[121 133]
[122 132]
[123 130]
[124 129]
[150 162]
[151 161]
[152 160]
[153 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
