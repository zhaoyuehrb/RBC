%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 20:21:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUACAAGCUGAAAGAGUCUUGGAAAAAAAUGGGAUCUGAAAGUACAGAACAUGAACAUUGAUGAAGACUGUUAACAUGUCUAAAAAUAAAUUCAGAGCAUCAAAGUAGA\
) } def
/len { sequence length } bind def

/coor [
[-16.58209991 331.75836182]
[-29.90778732 332.24270630]
[-42.94010162 329.47033691]
[-54.89582825 323.61309814]
[-64.71874237 334.94937134]
[-74.54164886 346.28561401]
[-84.36456299 357.62185669]
[-94.02459717 369.09719849]
[-103.51978302 380.70932007]
[-103.35592651 396.75152588]
[-115.88655853 406.76965332]
[-131.49923706 403.07864380]
[-138.21726990 388.50991821]
[-130.88714600 374.23937988]
[-115.13190460 371.21414185]
[-105.63671875 359.60202026]
[-103.81182861 352.32351685]
[-95.70080566 347.79891968]
[-85.87789154 336.46267700]
[-76.05498505 325.12643433]
[-66.23207092 313.79019165]
[-75.20166016 299.70541382]
[-79.46969604 283.54348755]
[-78.62184143 266.83135986]
[-72.72765350 251.15133667]
[-62.33494949 237.99125671]
[-48.41896057 228.60333252]
[-32.29080200 223.88500977]
[-15.47394180 224.29313660]
[0.43968356 229.79981995]
[9.25646210 217.66456604]
[18.07324028 205.52931213]
[14.70500469 189.12136841]
[24.37645531 175.03631592]
[41.56164169 172.17594910]
[50.02828979 159.79386902]
[58.49493790 147.41178894]
[66.96158600 135.02970886]
[75.42823792 122.64762878]
[83.89488220 110.26554871]
[81.32369995 96.00598145]
[89.50221252 84.04528809]
[103.72303772 81.26779938]
[112.18968201 68.88572693]
[111.89952087 46.56002426]
[131.37036133 37.24212646]
[138.37037659 23.97563171]
[145.37039185 10.70913696]
[146.64392090 1.50921690]
[152.76441956 -2.83203173]
[160.14041138 -15.89322281]
[167.51640320 -28.95441437]
[174.89241028 -42.01560593]
[181.89241028 -55.28210068]
[188.51072693 -68.74307251]
[195.12904358 -82.20404816]
[201.74736023 -95.66503143]
[208.17279053 -109.21913910]
[214.40400696 -122.86361694]
[208.64685059 -137.58200073]
[215.05982971 -152.02668762]
[229.83824158 -157.62792969]
[244.21432495 -151.06259155]
[249.65901184 -136.22576904]
[242.94204712 -121.91989899]
[228.04849243 -116.63239288]
[221.81727600 -102.98791504]
[221.90266418 -95.48460388]
[215.20834351 -89.04671478]
[208.59002686 -75.58573914]
[201.97171021 -62.12475967]
[195.35339355 -48.66378403]
[196.07612610 -43.80435944]
[193.64663696 -38.45773697]
[187.95359802 -34.63961029]
[180.57760620 -21.57842064]
[173.20161438 -8.51722908]
[165.82560730 4.54396248]
[158.63687134 17.70914650]
[151.63687134 30.97564125]
[144.63685608 44.24213409]
[148.66920471 51.38874817]
[149.46864319 59.65099335]
[146.82136536 67.61866760]
[141.10844421 73.90043640]
[133.25303650 77.36672974]
[124.57176208 77.35237122]
[116.10511780 89.73445129]
[118.67630005 103.99401855]
[110.49778748 115.95471191]
[96.27696228 118.73220062]
[87.81031799 131.11427307]
[79.34366608 143.49635315]
[70.87702179 155.87843323]
[62.41036987 168.26051331]
[53.94372177 180.64259338]
[57.94687653 193.59637451]
[53.77296448 206.29051208]
[43.17803955 214.10864258]
[30.20849609 214.34608459]
[21.39171791 226.48133850]
[12.57493877 238.61659241]
[21.00832748 249.06777954]
[26.63904572 261.24813843]
[29.13289642 274.42248535]
[28.34484673 287.79708862]
[24.32744789 300.56729126]
[17.32736778 311.96615601]
[7.77024937 321.31039429]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 21]
[5 20]
[6 19]
[7 18]
[8 16]
[9 15]
[30 102]
[31 101]
[32 100]
[35 96]
[36 95]
[37 94]
[38 93]
[39 92]
[40 91]
[43 88]
[44 87]
[46 81]
[47 80]
[48 79]
[50 78]
[51 77]
[52 76]
[53 75]
[54 72]
[55 71]
[56 70]
[57 69]
[58 67]
[59 66]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
