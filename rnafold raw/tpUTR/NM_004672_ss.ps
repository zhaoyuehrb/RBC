%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 01:53:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCUGAAUGAGGGCAUCAUAGGCCAGACAGGCCCAAGGAUGGAUGAAUGGAGAGGACAAAGGCAGCUUCUGACACACCAGCCCCAGGACCUGGGGCGACUGGAGGAAGCCAGGCGAGUGGGGCCCAGGACUGGUUCCAGUGAGAGAAACCAACCACAGGCACCCAAGCACUACCAGACAAAGCGUAUUAAACAGAACACUUUUGAACCUUU\
) } def
/len { sequence length } bind def

/coor [
[11.82755375 276.54470825]
[14.60746193 288.31524658]
[15.14657593 300.39248657]
[13.42793179 312.35379028]
[9.51353455 323.78100586]
[3.54212403 334.27496338]
[-4.27574062 343.46945190]
[-13.66510677 351.04403687]
[-24.29629707 356.73522949]
[-35.79648590 360.34555054]
[-47.76277161 361.75054932]
[-59.77629852 360.90292358]
[-71.41690063 357.83425903]
[-82.27782440 352.65368652]
[-91.97991943 345.54421997]
[-103.15665436 355.54824829]
[-114.33338165 365.55227661]
[-125.51011658 375.55633545]
[-123.56317139 392.35900879]
[-131.93246460 406.86694336]
[-147.14770508 413.46099854]
[-163.13316345 409.72390747]
[-174.16113281 419.89169312]
[-185.18910217 430.05947876]
[-196.21707153 440.22726440]
[-198.30168152 456.13430786]
[-212.11190796 464.29867554]
[-227.05375671 458.45736694]
[-231.66510010 443.09133911]
[-222.40850830 429.98806763]
[-206.38485718 429.19931030]
[-195.35688782 419.03152466]
[-184.32891846 408.86373901]
[-173.30094910 398.69595337]
[-176.07676697 385.63781738]
[-172.00550842 372.81027222]
[-162.04853821 363.59585571]
[-148.73373413 360.47964478]
[-135.51414490 364.37957764]
[-124.33741760 354.37554932]
[-113.16068268 344.37152100]
[-101.98395538 334.36749268]
[-110.24420166 318.28787231]
[-113.70581055 300.53271484]
[-112.08861542 282.50335693]
[-105.51358795 265.62481689]
[-94.49380493 251.23300171]
[-79.89444733 240.46902466]
[-62.86484146 234.18875122]
[-44.74800491 232.89474487]
[-26.97471619 236.69602966]
[-10.95053101 245.29896545]
[-0.70169365 234.34628296]
[9.54714394 223.39360046]
[19.79598045 212.44091797]
[30.04481888 201.48822021]
[33.09590530 184.20584106]
[50.75984955 179.00079346]
[60.84603119 167.89813232]
[70.93222046 156.79548645]
[81.01840210 145.69282532]
[91.10458374 134.59017944]
[101.19077301 123.48752594]
[85.83688354 116.90863800]
[79.56665039 102.58020020]
[84.45252991 88.84616852]
[76.66698456 76.02487946]
[68.88144684 63.20359421]
[61.09590912 50.38230896]
[53.31037140 37.56101990]
[45.52483368 24.73973465]
[30.43419456 20.87833405]
[22.72119522 7.76481819]
[26.49544907 -6.59800148]
[18.70991135 -19.41928864]
[6.22633314 -18.79921150]
[-5.26983261 -23.51762390]
[-13.62071514 -32.62253952]
[-17.28710938 -44.34500122]
[-15.63194370 -56.44257736]
[-9.03004360 -66.62828064]
[-16.43404198 -79.67361450]
[-23.83803940 -92.71894836]
[-31.24203682 -105.76428986]
[-38.64603424 -118.80962372]
[-46.05003357 -131.85496521]
[-53.45402908 -144.90029907]
[-66.53066254 -155.69094849]
[-59.78168488 -171.24368286]
[-42.96844864 -169.06388855]
[-40.40869141 -152.30429077]
[-33.00469589 -139.25895691]
[-25.60069656 -126.21362305]
[-18.19669914 -113.16828918]
[-10.79270172 -100.12294769]
[-3.38870430 -87.07761383]
[4.01529312 -74.03227234]
[21.63836288 -72.87407684]
[35.15658951 -61.26580811]
[39.03315353 -43.71313095]
[31.53119659 -27.20482635]
[39.31673431 -14.38354015]
[53.80148315 -11.10823345]
[61.87977219 1.78346586]
[58.34611893 16.95419502]
[66.13166046 29.77548218]
[73.91719818 42.59676743]
[81.70273590 55.41805649]
[89.48827362 68.23934174]
[97.27381134 81.06063080]
[110.25822449 82.14087677]
[120.44145966 91.71492004]
[122.60655975 106.48270416]
[135.70614624 99.17510986]
[143.98851013 85.69501495]
[158.87271118 86.25166321]
[163.28779602 71.31362915]
[176.67674255 64.08930206]
[190.89065552 68.39047241]
[203.99023438 61.08288193]
[217.08982849 53.77528763]
[230.18940735 46.46769714]
[243.23474121 39.06369781]
[256.22512817 31.56369781]
[269.21551514 24.06369781]
[273.43353271 7.08568287]
[288.33261108 -1.42061853]
[304.44995117 3.38487673]
[317.32830811 -4.30589914]
[321.23294067 -16.59779930]
[332.11642456 -22.73858452]
[343.87704468 -19.91165924]
[356.86743164 -27.41165924]
[369.85778809 -34.91165924]
[382.84817505 -42.41165924]
[395.83856201 -49.91165924]
[403.92120361 -63.51244354]
[418.81201172 -63.17538071]
[421.34909058 -78.60578156]
[433.24468994 -88.75608826]
[448.88208008 -88.83363342]
[460.87774658 -78.80179596]
[463.56771851 -63.39731979]
[455.68188477 -49.89371109]
[440.94366455 -44.66696930]
[426.31201172 -50.18500137]
[419.15850830 -37.12066650]
[403.33856201 -36.92127991]
[390.34817505 -29.42127991]
[377.35778809 -21.92127991]
[364.36743164 -14.42127895]
[351.37704468 -6.92127895]
[343.43331909 8.72758102]
[325.01907349 8.57245350]
[312.14074707 16.26322937]
[310.76910400 29.07436752]
[302.14068604 38.90336609]
[289.23687744 42.01441193]
[276.71551514 37.05407715]
[263.72512817 44.55407715]
[250.73474121 52.05407715]
[246.51443481 58.11987305]
[237.49699402 59.56727982]
[224.39741516 66.87487030]
[211.29783630 74.18246460]
[198.19824219 81.49005890]
[194.39118958 95.84421539]
[181.21044922 103.44176483]
[166.18029785 99.35124207]
[158.83489990 112.30865479]
[143.01373291 112.27469635]
[129.91415405 119.58229065]
[143.70359802 113.67881012]
[158.42927551 110.82318878]
[173.42582703 111.14445496]
[188.01570129 114.62808228]
[201.53968811 121.11667633]
[213.38674927 130.31706238]
[223.02160645 141.81356812]
[230.00894165 155.08674622]
[234.03303528 169.53688049]
[234.91210938 184.51110840]
[232.60641479 199.33283997]
[227.22013855 213.33241272]
[218.99664307 225.87728882]
[208.30746460 236.40068054]
[195.63558960 244.42710876]
[181.55355835 249.59393311]
[166.69758606 251.66769409]
[151.73893738 250.55470276]
[137.35345459 246.30523682]
[124.19110870 239.11131287]
[112.84659576 229.29795837]
[103.83248901 217.30854797]
[97.55605316 203.68479919]
[94.30088043 189.04226685]
[94.21404266 174.04252625]
[97.29946136 159.36328125]
[103.41773224 145.66778564]
[112.29341888 133.57371521]
[102.20723724 144.67636108]
[92.12105560 155.77902222]
[82.03486633 166.88166809]
[71.94868469 177.98431396]
[61.86249924 189.08697510]
[61.70008850 201.98312378]
[53.07199097 211.02276611]
[40.99750519 211.73706055]
[30.74866676 222.68974304]
[20.49983025 233.64244080]
[10.25099277 244.59512329]
[0.00215508 255.54780579]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 42]
[16 41]
[17 40]
[18 39]
[22 34]
[23 33]
[24 32]
[25 31]
[52 212]
[53 211]
[54 210]
[55 209]
[56 208]
[58 205]
[59 204]
[60 203]
[61 202]
[62 201]
[63 200]
[66 110]
[67 109]
[68 108]
[69 107]
[70 106]
[71 105]
[74 102]
[75 101]
[81 97]
[82 96]
[83 95]
[84 94]
[85 93]
[86 92]
[87 91]
[113 172]
[114 171]
[116 169]
[119 166]
[120 165]
[121 164]
[122 163]
[123 161]
[124 160]
[125 159]
[128 155]
[129 154]
[132 152]
[133 151]
[134 150]
[135 149]
[136 148]
[138 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
