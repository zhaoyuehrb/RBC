%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 21:45:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGAUCAGCUGCUGAAGCCCUGUCCCUGGAUAAUGCAGUAUUUCAAGACUGCCUUUAUGCUGGAUCAUGUGCUACUGGUAUAAAGUUCUGGCCUUCUACCUUAAAUGA\
) } def
/len { sequence length } bind def

/coor [
[229.43031311 324.89605713]
[221.99279785 311.86981201]
[214.55528259 298.84353638]
[207.11776733 285.81729126]
[191.27343750 287.25427246]
[176.32150269 281.65136719]
[165.24333191 270.07217407]
[160.27108765 254.77713013]
[162.43812561 238.78242493]
[171.36466980 225.26522827]
[163.55485535 212.45870972]
[155.74504089 199.65219116]
[147.93524170 186.84568787]
[139.94168091 174.15304565]
[126.51776886 167.69953918]
[125.48311615 151.91220093]
[117.30748749 139.33605957]
[109.13185883 126.75992584]
[100.77585602 114.30291748]
[88.22064972 108.14999390]
[86.88883972 94.23173523]
[78.35418701 81.89643097]
[63.06052780 78.93981171]
[54.58089828 66.30847931]
[57.49383163 51.74652863]
[48.95918274 39.41122055]
[34.74440765 32.46494293]
[33.86568451 17.59628105]
[19.65090942 10.65000343]
[18.77218628 -4.21865845]
[10.23753452 -16.55396271]
[1.70288432 -28.88926697]
[-6.83176613 -41.22457123]
[-23.61663055 -48.62358475]
[-24.53386307 -66.08320618]
[-33.42044830 -78.16743469]
[-42.30702972 -90.25166321]
[-51.19361496 -102.33589172]
[-60.08020020 -114.42012024]
[-75.59565735 -114.19601440]
[-88.26023102 -123.16196442]
[-93.20412445 -137.87037659]
[-88.52632141 -152.66557312]
[-76.02552795 -161.85850525]
[-60.50855637 -161.91427612]
[-47.94199371 -152.81146240]
[-43.15794373 -138.05029297]
[-47.99596786 -123.30670929]
[-39.10938644 -111.22248077]
[-30.22280121 -99.13824463]
[-21.33621597 -87.05401611]
[-12.44963264 -74.96978760]
[-0.45367327 -72.79368591]
[7.03368759 -62.66632462]
[5.50353861 -49.75922394]
[14.03818893 -37.42391968]
[22.57283974 -25.08861351]
[31.10749054 -12.75330925]
[44.71180725 -6.68933439]
[46.20098877 9.06163120]
[59.80530548 15.12560654]
[61.29448700 30.87657166]
[69.82913971 43.21187592]
[84.48310852 45.61949158]
[93.31417847 58.00766373]
[90.68949127 73.36177826]
[99.22414398 85.69708252]
[111.77935028 91.85000610]
[113.11116028 105.76826477]
[120.68547821 111.14830017]
[121.70799255 118.58430481]
[129.88362122 131.16043091]
[138.05924988 143.73657227]
[152.06794739 151.08959961]
[152.51782227 165.97741699]
[159.93394470 171.57348633]
[160.74174500 179.03587341]
[168.55155945 191.84237671]
[176.36137390 204.64889526]
[184.17118835 217.45541382]
[198.25289917 215.52604675]
[211.95761108 219.12644958]
[223.20346069 227.67521667]
[230.29534912 239.84190369]
[232.18035889 253.75401306]
[228.60401917 267.28506470]
[220.14402771 278.37976074]
[227.58154297 291.40603638]
[235.01905823 304.43228149]
[242.45657349 317.45855713]
[257.20605469 314.15032959]
[272.27523804 315.33822632]
[286.32418823 320.91662598]
[298.10366821 330.38949585]
[306.56625366 342.91448975]
[310.95950317 357.37792969]
[310.89270020 372.49371338]
[306.37185669 386.91775513]
[297.79888916 399.36749268]
[285.93615723 408.73590088]
[271.83847046 414.18994141]
[256.75939941 415.24465942]
[242.03971863 411.80624390]
[228.98832703 404.18045044]
[218.76574707 393.04534912]
[212.28096008 379.39108276]
[210.11058044 364.43179321]
[212.44760132 349.49758911]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 90]
[2 89]
[3 88]
[4 87]
[10 80]
[11 79]
[12 78]
[13 77]
[14 75]
[16 73]
[17 72]
[18 71]
[19 69]
[21 67]
[22 66]
[25 63]
[26 62]
[28 60]
[30 58]
[31 57]
[32 56]
[33 55]
[35 52]
[36 51]
[37 50]
[38 49]
[39 48]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
