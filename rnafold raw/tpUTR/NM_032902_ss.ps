%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 00:58:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUGUUGCUCAGCAUGCAGGGGCCCUGUCGCGGGCACAGCCCAAGGCUGCCUCCCCACGGUGCGUGCCCUGGUGCUGCGGGUGCAGCACGGAAACCCCGGCUUCUACUGUACAGGACACUGGCCCCUCUCAGGUCAGAAGACAUGCCUGGAGGGAUGUCUGGCUGCAAAGACUAUUUUUAUCCUGCAACUCUUGAUAAAGGGCUGUUUUGCCAUGGA\
) } def
/len { sequence length } bind def

/coor [
[36.02648544 399.85244751]
[30.56068039 413.82113647]
[25.09487534 427.78985596]
[19.62907028 441.75857544]
[21.80580902 457.42932129]
[9.96281433 466.46218872]
[4.49700880 480.43090820]
[-0.96879625 494.39962769]
[-6.43460131 508.36834717]
[1.21651053 522.00628662]
[-1.73950219 537.36193848]
[-13.90690041 547.18481445]
[-29.54061127 546.83685303]
[-41.25887299 536.48229980]
[-43.52868271 521.01031494]
[-35.27830505 507.72628784]
[-20.40331459 502.90252686]
[-14.93751049 488.93380737]
[-9.47170544 474.96508789]
[-4.00589991 460.99639893]
[-6.57358980 446.32476807]
[5.66035604 436.29275513]
[11.12616062 422.32406616]
[16.59196663 408.35534668]
[22.05777168 394.38662720]
[27.32263756 380.34094238]
[32.38547897 366.22119141]
[37.44832611 352.10144043]
[42.51116943 337.98165894]
[39.52365875 323.38973999]
[51.46478653 313.01092529]
[56.52762985 298.89117432]
[61.59047318 284.77139282]
[66.65332031 270.65164185]
[71.71616364 256.53189087]
[71.01531219 249.17903137]
[76.95422363 242.24678040]
[82.21909332 228.20109558]
[87.48395538 214.15541077]
[92.74882507 200.10972595]
[98.01369476 186.06405640]
[103.27855682 172.01837158]
[108.54342651 157.97268677]
[81.84854126 152.39750671]
[61.99737930 135.94059753]
[52.72396469 113.47789764]
[54.92293167 90.76499939]
[40.91537094 85.39952850]
[26.90781403 80.03404999]
[12.90025520 74.66857910]
[-1.10730326 69.30310059]
[-10.76111221 74.29808807]
[-21.35244751 73.18185425]
[-29.41340065 66.56246185]
[-32.43815613 56.80974197]
[-46.28603363 51.04465103]
[-60.13391113 45.27956009]
[-75.84786987 47.11862183]
[-84.62383270 35.08401489]
[-98.47171021 29.31892395]
[-112.31958771 23.55383110]
[-126.16746521 17.78874016]
[-140.01533508 12.02364826]
[-153.86322021 6.25855589]
[-167.03756714 14.45711040]
[-182.51237488 13.31261826]
[-194.33726501 3.26516008]
[-197.96534729 -11.82181263]
[-192.00151062 -26.14704895]
[-178.73901367 -34.20220566]
[-163.27752686 -32.88990784]
[-151.56231689 -22.71476364]
[-148.09812927 -7.58932161]
[-134.25024414 -1.82422984]
[-120.40237427 3.94086218]
[-106.55449677 9.70595455]
[-92.70661926 15.47104645]
[-78.85874176 21.23613739]
[-64.13527679 18.98471832]
[-54.36882019 31.43168259]
[-40.52094269 37.19677353]
[-26.67306519 42.96186447]
[-7.72668409 39.08192062]
[4.25817013 55.29554367]
[18.26572800 60.66101837]
[32.27328873 66.02648926]
[46.28084564 71.39196777]
[60.28840256 76.75743866]
[55.84816742 67.50295258]
[52.98819351 57.11958694]
[46.92648315 43.39895630]
[40.86477280 29.67832756]
[26.48319626 22.56849098]
[23.21605873 6.86163378]
[33.56962967 -5.39328766]
[49.60153580 -4.79534674]
[59.01347351 8.19676781]
[54.58540344 23.61661720]
[60.64711380 37.33724594]
[66.70882416 51.05787659]
[81.21154022 47.22757721]
[79.70782471 32.30313873]
[66.68048096 23.65315437]
[62.31066895 8.63853645]
[68.66168213 -5.65127182]
[82.73477173 -12.46905899]
[97.88504791 -8.59567451]
[106.95902252 4.13998795]
[105.67223358 19.72453690]
[94.63226318 30.79942703]
[96.13597870 45.72386551]
[111.10540009 46.69152832]
[126.07349396 47.65911865]
[129.48619080 33.05249023]
[132.89888000 18.44586563]
[127.63022614 2.91610956]
[138.64698792 -9.23143768]
[154.61607361 -5.50042200]
[159.10984802 10.27100849]
[147.50550842 21.85855865]
[144.09280396 36.46518326]
[140.68011475 51.07181168]
[137.18745422 55.80619049]
[133.64041138 60.49745178]
[130.03938293 65.14511871]
[141.55307007 55.53080750]
[153.06675720 45.91649246]
[164.58044434 36.30218124]
[176.09413147 26.68786621]
[180.67182922 18.79030228]
[187.84263611 17.01965141]
[199.49304199 7.57148695]
[211.14346313 -1.87667763]
[222.79388428 -11.32484245]
[227.48439026 -19.15592766]
[234.67985535 -20.82353401]
[246.46459961 -30.10360336]
[246.76968384 -45.73821259]
[257.09201050 -57.48485184]
[272.55770874 -59.79712677]
[285.86431885 -51.58324432]
[290.72888184 -36.72154999]
[284.85452271 -22.22928429]
[271.01489258 -14.94925022]
[255.74467468 -18.31885719]
[243.95993042 -9.03878498]
[232.24205017 0.32557335]
[220.59162903 9.77373791]
[208.94120789 19.22190285]
[197.29080200 28.67006683]
[185.70845032 38.20155334]
[174.19476318 47.81586456]
[162.68107605 57.43017960]
[151.16738892 67.04449463]
[139.65370178 76.65880585]
[147.58003235 83.96769714]
[154.02536011 93.59536743]
[158.36685181 105.20899963]
[173.35720825 105.74683380]
[188.34754944 106.28466034]
[203.33790588 106.82248688]
[212.79646301 94.52146149]
[227.68846130 90.16161346]
[242.28761292 95.41941071]
[250.98025513 108.27310944]
[250.42388916 123.78020477]
[240.83244324 135.97790527]
[225.89402771 140.17594910]
[211.35276794 134.76008606]
[202.80007935 121.81284332]
[187.80972290 121.27501678]
[172.81936646 120.73718262]
[157.82901001 120.19935608]
[155.09611511 127.18371582]
[169.06474304 132.64974976]
[163.59846497 146.61828613]
[149.63031006 141.15243530]
[146.89739990 148.13677979]
[158.27198792 157.91526794]
[169.64657593 167.69375610]
[181.02116394 177.47224426]
[192.39575195 187.25073242]
[203.77033997 197.02920532]
[219.31480408 196.02548218]
[230.71095276 206.10429382]
[231.57206726 220.92974854]
[247.61344910 221.16130066]
[257.31970215 233.93502808]
[253.24504089 249.45199585]
[238.51518250 255.80894470]
[224.42961121 248.12933350]
[221.79357910 232.30433655]
[207.00677490 233.67761230]
[195.33201599 223.92286682]
[193.99185181 208.40379333]
[182.61726379 198.62530518]
[171.24269104 188.84683228]
[159.86810303 179.06834412]
[148.49351501 169.28985596]
[137.11892700 159.51136780]
[122.58910370 163.23754883]
[117.32424164 177.28323364]
[112.05937195 191.32891846]
[106.79450989 205.37460327]
[101.52964020 219.42028809]
[96.26477814 233.46595764]
[90.99990845 247.51164246]
[85.83592224 261.59472656]
[80.77307892 275.71447754]
[75.71023560 289.83425903]
[70.64739227 303.95401001]
[65.58454895 318.07376099]
[68.20993042 333.67562866]
[56.63092804 343.04449463]
[51.56808472 357.16427612]
[46.50524139 371.28402710]
[41.44239807 385.40377808]
[42.24274445 391.95697021]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 25]
[2 24]
[3 23]
[4 22]
[6 20]
[7 19]
[8 18]
[9 17]
[26 217]
[27 216]
[28 215]
[29 214]
[31 212]
[32 211]
[33 210]
[34 209]
[35 208]
[37 207]
[38 206]
[39 205]
[40 204]
[41 203]
[42 202]
[43 201]
[47 88]
[48 87]
[49 86]
[50 85]
[51 84]
[55 82]
[56 81]
[57 80]
[59 78]
[60 77]
[61 76]
[62 75]
[63 74]
[64 73]
[90 100]
[91 99]
[92 98]
[101 111]
[102 110]
[113 122]
[114 121]
[115 120]
[125 155]
[126 154]
[127 153]
[128 152]
[129 151]
[131 150]
[132 149]
[133 148]
[134 147]
[136 146]
[137 145]
[158 173]
[159 172]
[160 171]
[161 170]
[178 200]
[179 199]
[180 198]
[181 197]
[182 196]
[183 195]
[186 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
