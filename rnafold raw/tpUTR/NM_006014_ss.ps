%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 18:59:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUGGCCUGGGCAAAUGGAGCGAGGUCCCACUUUGCGUCUCCUUGUAGGCAGUGCGUCCAUCCUUCCCUAGGGCAGGAAUUCCCACAGUUGCUACUUUCCUGGGAGGGCCUCAUGUUUUAUCUGGUUCUUAAAUGUUUGUUACUACAGAAAAUAAAACUGCGCUACUAUUCCAA\
) } def
/len { sequence length } bind def

/coor [
[78.89883423 117.36540985]
[91.79692841 109.71363831]
[76.94960785 111.84836578]
[62.10228729 113.98308563]
[47.25496292 116.11780548]
[34.69639206 125.74032593]
[20.99753189 119.89305878]
[6.15020943 122.02777863]
[-8.69711208 124.16249847]
[-23.54443359 126.29722595]
[-38.39175415 128.43194580]
[-53.23907852 130.56666565]
[-43.11529160 141.63504028]
[-45.27553177 156.47866821]
[-58.13418198 164.20234680]
[-72.25300598 159.13688660]
[-77.26878357 145.00033569]
[-69.49870300 132.16810608]
[-84.47720337 132.97096252]
[-99.45570374 133.77383423]
[-114.43420410 134.57669067]
[-122.86784363 138.17080688]
[-129.68675232 135.25779724]
[-144.67718506 135.79318237]
[-159.66226196 136.46232605]
[-174.64076233 137.26519775]
[-188.00701904 145.73004150]
[-201.13017273 138.68505859]
[-214.49642944 147.14990234]
[-227.61959839 140.10491943]
[-242.59808350 140.90777588]
[-257.57659912 141.71064758]
[-272.55508423 142.51350403]
[-287.51687622 143.58360291]
[-302.45715332 144.92056274]
[-317.39746094 146.25753784]
[-332.33776855 147.59451294]
[-347.27807617 148.93147278]
[-357.21923828 161.21759033]
[-372.94485474 162.79258728]
[-385.12518311 152.72207642]
[-386.53384399 136.98068237]
[-376.33508301 124.90752411]
[-360.57968140 123.66536713]
[-348.61502075 133.99118042]
[-333.67474365 132.65420532]
[-318.73443604 131.31724548]
[-303.79412842 129.98027039]
[-288.85385132 128.64329529]
[-285.14059448 125.59323120]
[-279.46334839 124.86476898]
[-273.35794067 127.53501129]
[-258.37945557 126.73214722]
[-243.40095520 125.92928314]
[-228.42245483 125.12641907]
[-216.12756348 116.71899414]
[-201.93304443 123.70655823]
[-189.63813782 115.29912567]
[-175.44361877 122.28668976]
[-160.46511841 121.48382568]
[-153.93299866 117.97463226]
[-145.21257019 120.80273438]
[-130.22213745 120.26734924]
[-115.23706818 119.59819794]
[-100.25856781 118.79533386]
[-85.28006744 117.99246979]
[-70.30156708 117.18960571]
[-55.37379837 115.71934509]
[-40.52647781 113.58462524]
[-25.67915726 111.44990540]
[-10.83183479 109.31517792]
[4.01548672 107.18045807]
[18.86280823 105.04573822]
[30.35940170 95.57591248]
[45.12024307 101.27048492]
[59.96756363 99.13576508]
[74.81488800 97.00103760]
[89.66220856 94.86631775]
[88.93447113 90.10097504]
[90.17276001 84.73835754]
[93.59368896 79.52194214]
[96.78216553 64.86473846]
[99.97064972 50.20753860]
[103.15912628 35.55033493]
[106.34761047 20.89313316]
[109.53608704 6.23592949]
[101.73903656 -13.70200729]
[116.15647125 -28.44619942]
[118.55587006 -43.25305176]
[120.95526123 -58.05990601]
[114.63035583 -73.19026184]
[124.78502655 -86.06716919]
[140.97300720 -83.44396973]
[146.54150391 -68.01918793]
[135.76211548 -55.66051483]
[133.36271667 -40.85366058]
[130.96333313 -26.04680634]
[137.29737854 -19.74485397]
[140.04512024 -11.09801769]
[138.46360779 -2.02399206]
[132.78518677 5.40258837]
[124.19329071 9.42440891]
[121.00480652 24.08161163]
[117.81632996 38.73881531]
[114.62785339 53.39601898]
[111.43936920 68.05322266]
[108.25089264 82.71042633]
[116.69542694 95.10759735]
[131.50227356 97.50698853]
[146.30912781 99.90637970]
[157.22846985 93.00154114]
[169.52880859 95.32604218]
[176.69956970 105.09320831]
[191.46122742 107.75650024]
[200.49537659 106.19823456]
[206.46159363 110.60132599]
[221.17338562 113.52768707]
[235.88516235 116.45404053]
[250.59693909 119.38039398]
[265.30871582 122.30674744]
[280.02050781 125.23310089]
[294.80535889 127.76454926]
[309.65267944 129.89927673]
[324.50000000 132.03399658]
[339.34732056 134.16871643]
[345.43652344 120.35481262]
[355.02777100 108.69674683]
[367.40933228 100.05962372]
[381.66238403 95.08438110]
[396.72927856 94.14021301]
[411.49191284 97.29718781]
[424.85485840 104.32102966]
[435.82647705 114.69052124]
[443.59259033 127.63618469]
[447.57690430 142.19735718]
[447.48373413 157.29351807]
[443.32003784 171.80441284]
[435.39477539 184.65324402]
[424.29602051 194.88655090]
[410.84741211 201.74494934]
[396.04693604 204.71949768]
[380.99282837 203.58947754]
[366.80227661 198.43872070]
[354.52825928 189.64945984]
[345.08160400 177.87391663]
[339.16333008 163.98591614]
[337.21258545 149.01603699]
[322.36526489 146.88131714]
[307.51794434 144.74659729]
[292.67062378 142.61187744]
[289.62503052 144.44845581]
[285.53024292 144.88241577]
[281.06390381 143.43313599]
[277.09414673 139.94488525]
[262.38235474 137.01852417]
[247.67057800 134.09217834]
[232.95880127 131.16581726]
[218.24702454 128.23945618]
[203.53524780 125.31311035]
[188.79792786 122.51817322]
[174.03627014 119.85487366]
[157.88444519 126.68146515]
[143.90974426 114.71323395]
[129.10289001 112.31384277]
[114.29603577 109.91445160]
[127.05769348 117.79734039]
[135.33557129 130.30641174]
[137.60266113 145.13409424]
[133.44073486 159.54515076]
[123.61754608 170.88114929]
[109.94518280 177.05096436]
[94.94578552 176.91642761]
[81.38629150 170.50238037]
[71.76801300 158.99200439]
[67.86524200 144.50862122]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 78]
[3 77]
[4 76]
[5 75]
[7 73]
[8 72]
[9 71]
[10 70]
[11 69]
[12 68]
[18 67]
[19 66]
[20 65]
[21 64]
[23 63]
[24 62]
[25 60]
[26 59]
[28 57]
[30 55]
[31 54]
[32 53]
[33 52]
[34 49]
[35 48]
[36 47]
[37 46]
[38 45]
[81 107]
[82 106]
[83 105]
[84 104]
[85 103]
[86 102]
[88 97]
[89 96]
[90 95]
[108 165]
[109 164]
[110 163]
[113 161]
[114 160]
[116 159]
[117 158]
[118 157]
[119 156]
[120 155]
[121 154]
[122 150]
[123 149]
[124 148]
[125 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
