%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 01:18:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCCCAGGCACCCACCCAGCUGGGGUGUUUUUGGGGGAGUCGCCGCCAAGCCCAGGCUGCUGGAGCCAGGCACCCUCCUCUGUCACUUGCUGCUUGGAGCCUUAACUCCAGAUGGGGGGGUCACCAAGAGGGAGUGGGCACCCUGGCGGGCCCUCUCCCCACCUCACCUCUUAAUAAAGGUCAGACACUGGCCAGGCGAGGC\
) } def
/len { sequence length } bind def

/coor [
[43.45717621 210.52746582]
[33.23729706 209.46830750]
[24.57069016 221.71125793]
[15.90408325 233.95420837]
[7.23747540 246.19717407]
[-1.42913198 258.44012451]
[-10.09573936 270.68307495]
[-18.76234627 282.92602539]
[-27.23939323 295.30099487]
[-35.52486801 307.80502319]
[-43.81034088 320.30905151]
[-52.09581757 332.81311035]
[-60.38129044 345.31713867]
[-68.66676331 357.82116699]
[-62.36110687 371.90103149]
[-64.69118500 387.15139771]
[-74.91347504 398.70599365]
[-89.76609039 402.87774658]
[-104.50960541 398.33544922]
[-114.43942261 386.52859497]
[-116.38697815 371.22463989]
[-109.73080444 357.30706787]
[-96.59487152 349.21691895]
[-81.17079926 349.53570557]
[-72.88533020 337.03164673]
[-64.59985352 324.52761841]
[-56.31437683 312.02359009]
[-48.02890396 299.51956177]
[-39.74342728 287.01550293]
[-39.79985809 282.23489380]
[-36.84995270 277.36920166]
[-31.00530052 274.25942993]
[-22.33869362 262.01647949]
[-13.67208576 249.77351379]
[-5.00547838 237.53056335]
[3.66112924 225.28761292]
[12.32773685 213.04464722]
[20.99434471 200.80169678]
[16.30472565 181.89826965]
[27.18982697 165.38090515]
[47.01258087 162.13581848]
[55.10451889 149.50567627]
[63.19645691 136.87553406]
[71.28839111 124.24539185]
[79.38033295 111.61524963]
[73.85416412 97.67030334]
[59.30721283 94.01159668]
[44.76026154 90.35289001]
[31.30605888 98.20287323]
[16.60549736 94.28519440]
[9.20465374 81.41029358]
[-5.34230089 77.75158691]
[-19.91699600 74.20500183]
[-34.51856613 70.77074432]
[-49.12013626 67.33648682]
[-63.72170639 63.90222931]
[-79.25922394 69.14794159]
[-91.39049530 58.11325073]
[-87.63590240 42.14969635]
[-71.85784912 37.67921829]
[-60.28744888 49.30065918]
[-45.68587875 52.73491669]
[-31.08430862 56.16917419]
[-16.48273659 59.60343170]
[-9.24779797 58.07384491]
[-1.68359482 63.20463562]
[12.86335945 66.86334229]
[25.47462654 59.02169037]
[40.27942657 62.52490997]
[48.41896439 75.80593872]
[62.96591949 79.46463776]
[77.51287079 83.12334442]
[88.67549133 73.10356903]
[86.60314178 58.24740982]
[84.53079987 43.39125443]
[82.45845032 28.53509712]
[80.38610840 13.67894077]
[78.31376648 -1.17721558]
[76.24141693 -16.03337288]
[74.16907501 -30.88952827]
[70.40674591 -36.33706665]
[70.02230072 -42.01412964]
[72.26897430 -46.23431396]
[70.65511322 -61.14724350]
[69.04124451 -76.06017303]
[61.49866486 -63.09446716]
[48.53486252 -55.54861832]
[33.53566742 -55.39342117]
[20.41850090 -62.66940689]
[12.60925198 -75.47626495]
[12.14750671 -90.46916199]
[19.15386200 -103.73229980]
[31.79842567 -111.80168915]
[46.77874756 -112.56978607]
[60.18232727 -105.83599091]
[68.50825500 -93.35967255]
[69.20100403 -108.34367371]
[69.89375305 -123.32766724]
[70.58650970 -138.31166077]
[71.27925873 -153.29565430]
[60.44809723 -164.80484009]
[61.01103973 -180.59910583]
[72.63410187 -191.30798340]
[88.42152405 -190.57807922]
[99.00691223 -178.84245300]
[98.11014557 -163.06362915]
[86.26325226 -152.60290527]
[85.57050323 -137.61891174]
[84.87774658 -122.63491058]
[84.18499756 -107.65091705]
[83.49224854 -92.66692352]
[83.95417023 -77.67404175]
[85.56803894 -62.76110840]
[87.18190765 -47.84818268]
[89.02523041 -32.96187210]
[91.09757233 -18.10571671]
[93.16992188 -3.24956083]
[95.24226379 11.60659599]
[97.31461334 26.46275139]
[99.38695526 41.31890869]
[101.45929718 56.17506409]
[103.53164673 71.03121948]
[109.71912384 75.26974487]
[115.02289581 61.23870468]
[118.81392670 46.72567368]
[132.86633301 41.47878647]
[145.24136353 49.95573807]
[145.42533875 64.95460510]
[133.26170349 73.73258209]
[122.09408569 83.74678802]
[128.28157043 87.98531342]
[142.88314819 84.55105591]
[157.48471069 81.11679840]
[172.08628845 77.68254089]
[186.68785095 74.24828339]
[198.35000610 63.55694199]
[212.51068115 68.17480469]
[227.11224365 64.74054718]
[241.71382141 61.30628967]
[256.31539917 57.87203217]
[263.95770264 52.85833359]
[271.16824341 54.49915314]
[285.82095337 51.29015732]
[295.65145874 38.61179352]
[311.69433594 38.53683853]
[321.64288330 51.12279129]
[317.86538696 66.71478271]
[303.25967407 73.35197449]
[289.02996826 65.94287872]
[274.37722778 69.15187836]
[259.74963379 72.47360229]
[245.14807129 75.90785980]
[230.54650879 79.34211731]
[215.94493103 82.77638245]
[205.32717896 93.22207642]
[190.12211609 88.84985352]
[175.52053833 92.28411102]
[160.91897583 95.71836853]
[146.31739807 99.15262604]
[131.71583557 102.58688354]
[128.73933411 109.47096252]
[143.19989014 113.45748138]
[157.66044617 117.44400024]
[172.12100220 121.43052673]
[186.58155823 125.41704559]
[201.04211426 129.40356445]
[215.97395325 127.97525787]
[229.15725708 135.13072205]
[236.09573364 148.42950439]
[234.42294312 163.33593750]
[224.70941162 174.76603699]
[210.26803589 178.82147217]
[196.02416992 174.11909485]
[186.83531189 162.26132202]
[174.02551270 154.45687866]
[161.21572876 146.65243530]
[148.40594482 138.84799194]
[135.59614563 131.04354858]
[122.78636169 123.23911285]
[119.80987549 130.12318420]
[127.30987549 143.11357117]
[134.80987549 156.10395813]
[142.30987549 169.09432983]
[149.80987549 182.08471680]
[157.30987549 195.07510376]
[170.46572876 205.76901245]
[163.83161926 221.37110901]
[147.00277710 219.31535339]
[144.31948853 202.57510376]
[136.81948853 189.58471680]
[129.31948853 176.59432983]
[121.81948853 163.60395813]
[114.31948853 150.61357117]
[106.81948853 137.62318420]
[96.94328308 129.59323120]
[92.01047516 119.70718384]
[83.91854095 132.33732605]
[75.82659912 144.96746826]
[67.73466492 157.59761047]
[59.64272308 170.22776794]
[64.45575714 179.76014709]
[64.87158966 190.34974670]
[60.88213730 200.08068848]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 38]
[3 37]
[4 36]
[5 35]
[6 34]
[7 33]
[8 32]
[9 29]
[10 28]
[11 27]
[12 26]
[13 25]
[14 24]
[41 200]
[42 199]
[43 198]
[44 197]
[45 196]
[46 72]
[47 71]
[48 70]
[51 67]
[52 66]
[53 64]
[54 63]
[55 62]
[56 61]
[73 122]
[74 121]
[75 120]
[76 119]
[77 118]
[78 117]
[79 116]
[80 115]
[83 114]
[84 113]
[85 112]
[96 111]
[97 110]
[98 109]
[99 108]
[100 107]
[131 160]
[132 159]
[133 158]
[134 157]
[135 156]
[137 154]
[138 153]
[139 152]
[140 151]
[142 150]
[143 149]
[180 194]
[181 193]
[182 192]
[183 191]
[184 190]
[185 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
