%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 10:31:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUGUUGGGUUGGGUAGCAGCGCCCGUACCUCCAGCCCUGCUCUGGCGGUGGUUGUCCAGGCUCUGCAGAGCGCAGCAGGGCUUUUCAUUAAAGGUAUUUAUAUUUGUA\
) } def
/len { sequence length } bind def

/coor [
[313.17477417 321.85726929]
[302.12365723 311.71466064]
[291.07254028 301.57202148]
[280.02142334 291.42941284]
[268.97030640 281.28677368]
[257.91918945 271.14416504]
[246.86805725 261.00152588]
[232.25958252 258.09606934]
[227.32420349 243.06434631]
[216.27308655 232.92172241]
[205.22196960 222.77909851]
[195.21409607 226.02491760]
[184.69026184 224.73452759]
[175.62457275 219.08065796]
[169.74679565 210.06095886]
[168.21252441 199.32258606]
[171.37644958 188.86157227]
[161.23382568 177.81045532]
[151.09120178 166.75933838]
[140.94857788 155.70822144]
[126.64233398 151.56329346]
[123.01139069 136.16436768]
[112.86876678 125.11325073]
[102.72614288 114.06213379]
[89.44696045 109.68549347]
[86.22274017 96.08049011]
[71.19102478 91.14510345]
[68.28555298 76.53662872]
[58.14292526 65.48551178]
[42.58852005 64.64990997]
[32.45988464 53.29801941]
[33.35236740 38.47441864]
[23.20974350 27.42330170]
[13.06711960 16.37218475]
[-1.96459806 11.43679905]
[-4.87007236 -3.17167425]
[-15.16946602 -14.07683277]
[-25.62352943 -24.83381081]
[-41.42779922 -24.80885124]
[-52.56161499 -36.02552414]
[-52.41947937 -51.82917404]
[-41.08572006 -62.84377670]
[-25.28445625 -62.53456116]
[-14.39029694 -51.08498383]
[-14.86655235 -35.28787231]
[-4.41248894 -24.53089714]
[2.61055398 -21.88821411]
[6.18104458 -13.31429768]
[20.48729324 -9.16936111]
[24.11823654 6.22956181]
[34.26086044 17.28067970]
[44.40348434 28.33179665]
[59.24908066 28.71111870]
[69.69256592 39.77403641]
[69.19404602 55.34289169]
[79.33666992 66.39401245]
[93.64291382 70.53894806]
[97.27385712 85.93786621]
[110.55303955 90.31450653]
[113.77725983 103.91950989]
[123.91988373 114.97062683]
[134.06250000 126.02174377]
[149.09422302 130.95712280]
[151.99969482 145.56559753]
[162.14231873 156.61671448]
[172.28494263 167.66783142]
[182.42756653 178.71894836]
[202.37300110 178.35351562]
[216.12207031 192.39195251]
[215.36459351 211.72798157]
[226.41571045 221.87060547]
[237.46682739 232.01322937]
[252.86575317 235.64416504]
[257.01068115 249.95042419]
[268.06179810 260.09304810]
[279.11291504 270.23565674]
[290.16403198 280.37829590]
[301.21514893 290.52090454]
[312.26626587 300.66354370]
[323.31738281 310.80615234]
[336.16262817 318.55212402]
[350.29028320 323.59286499]
[364.41796875 328.63360596]
[378.54562378 333.67434692]
[392.67327881 338.71508789]
[406.80096436 343.75582886]
[422.82644653 340.27505493]
[433.65185547 352.59344482]
[428.14093018 368.03887939]
[411.96282959 370.72244263]
[401.76022339 357.88348389]
[387.63253784 352.84274292]
[373.50488281 347.80200195]
[359.37722778 342.76126099]
[345.24954224 337.72052002]
[331.12188721 332.67977905]
[339.18484497 345.32846069]
[341.93695068 360.07382202]
[338.97940063 374.77935791]
[330.74078369 387.31430054]
[318.41476440 395.86239624]
[303.78741455 399.18505859]
[288.97808838 396.80084229]
[276.13265991 389.05523682]
[267.11233521 377.07052612]
[263.22412109 362.58322144]
[265.03140259 347.69247437]
[272.27230835 334.55593872]
[283.89770508 325.07696533]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 80]
[2 79]
[3 78]
[4 77]
[5 76]
[6 75]
[7 74]
[9 72]
[10 71]
[11 70]
[17 67]
[18 66]
[19 65]
[20 64]
[22 62]
[23 61]
[24 60]
[26 58]
[28 56]
[29 55]
[32 52]
[33 51]
[34 50]
[36 48]
[37 46]
[38 45]
[81 96]
[82 95]
[83 94]
[84 93]
[85 92]
[86 91]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
