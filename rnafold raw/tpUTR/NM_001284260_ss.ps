%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 17:33:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGGCGAAAGGCCUAGUCCUGGGGACCCUCCCACCUCAGGGGCUGCAGGCGGACUGCCCCAGCUCCCCCAGCCCCACGAAACUGGGCCUUUCCUGCUGAGAGGAAGUGACUUUUUACAGAAGCCACUGAACCUGGUUAUUUUGGCAAAUCGUCCGUCUCGAGGGCCUUGGGGGGAACUGAAAUAUACAGCCUGAACGUUAAAAGUG\
) } def
/len { sequence length } bind def

/coor [
[142.55014038 144.43473816]
[142.77635193 135.76615906]
[144.27430725 127.22156525]
[130.33100891 121.69127655]
[116.38769531 116.16098022]
[102.44438934 110.63069153]
[87.63262177 108.26179504]
[72.65998840 109.16747284]
[57.68735886 110.07315063]
[42.71472549 110.97882843]
[27.74209023 111.88450623]
[12.76945782 112.79018402]
[-2.20317578 113.69586182]
[-17.17580986 114.60153961]
[-32.14844131 115.50721741]
[-47.12107468 116.41289520]
[-62.09370804 117.31857300]
[-77.06634521 118.22425079]
[-84.66423035 138.79890442]
[-105.13259888 151.44581604]
[-131.17124939 148.62219238]
[-142.24739075 158.73747253]
[-153.32354736 168.85273743]
[-164.39970398 178.96801758]
[-175.47584534 189.08329773]
[-179.91493225 204.87020874]
[-195.87100220 208.65655518]
[-206.92979431 196.54725647]
[-201.71498108 180.99932861]
[-185.59112549 178.00715637]
[-174.51496887 167.89187622]
[-163.43882751 157.77659607]
[-152.36267090 147.66131592]
[-141.28652954 137.54603577]
[-143.35501099 130.33691406]
[-155.78927612 138.72674561]
[-167.61074829 129.49351501]
[-162.48228455 115.39745331]
[-147.49198914 115.91868591]
[-149.56048584 108.70957184]
[-164.31478882 106.00574493]
[-179.06907654 103.30191803]
[-193.82337952 100.59809875]
[-208.57768250 97.89427185]
[-223.33197021 95.19044495]
[-238.08627319 92.48661804]
[-244.43547058 94.34384155]
[-249.94209290 92.92687225]
[-253.24244690 89.47187042]
[-267.90835571 86.32365417]
[-276.95806885 87.58232117]
[-282.77120972 83.01554871]
[-297.38787842 79.64618683]
[-312.00457764 76.27683258]
[-326.64627075 73.01795197]
[-341.31219482 69.86973572]
[-355.97808838 66.72151947]
[-372.73345947 69.30885315]
[-379.85800171 53.92454147]
[-367.04721069 42.81960678]
[-352.82986450 52.05561066]
[-338.16397095 55.20382690]
[-323.49807739 58.35204315]
[-316.29675293 56.68196487]
[-308.63519287 61.66014862]
[-294.01852417 65.02951050]
[-279.40185547 68.39886475]
[-264.76013184 71.65774536]
[-250.09422302 74.80596161]
[-235.38244629 77.73232269]
[-220.62814331 80.43614197]
[-205.87385559 83.13996887]
[-191.11955261 85.84379578]
[-176.36524963 88.54762268]
[-161.61096191 91.25144958]
[-146.85665894 93.95527649]
[-135.53404236 81.94277954]
[-121.01676178 75.59070587]
[-105.83249664 75.44508362]
[-92.41945648 81.01651001]
[-82.73510742 90.93695831]
[-77.97202301 103.25161743]
[-62.99938583 102.34593964]
[-48.02675247 101.44026184]
[-33.05411911 100.53458405]
[-18.08148575 99.62890625]
[-3.10885334 98.72322845]
[11.86378002 97.81755066]
[26.83641243 96.91187286]
[41.80904770 96.00619507]
[56.78168106 95.10051727]
[71.75431061 94.19483948]
[86.72694397 93.28916168]
[97.49253082 82.84396362]
[98.85001373 67.90551758]
[100.20749664 52.96706772]
[97.86718750 44.13504791]
[101.69995880 37.81383514]
[103.28291321 22.89759254]
[104.86585999 7.98134947]
[106.44880676 -6.93489265]
[108.03175354 -21.85113525]
[109.61470032 -36.76737595]
[111.19764709 -51.68362045]
[101.07036591 -63.81678772]
[102.57193756 -79.54958344]
[114.81150055 -89.54801178]
[130.52754211 -87.88018799]
[140.39601135 -75.53559875]
[138.56211853 -59.83807373]
[126.11388397 -50.10066986]
[124.53093719 -35.18442917]
[122.94799042 -20.26818657]
[121.36504364 -5.35194540]
[119.78209686 9.56429672]
[118.19915009 24.48053932]
[116.61620331 39.39678192]
[115.14595032 54.32455063]
[113.78846741 69.26300049]
[112.43098450 84.20144653]
[112.08828735 89.09484863]
[110.52942657 93.34202576]
[107.97467804 96.68737793]
[121.91799164 102.21767426]
[135.86129761 107.74796295]
[149.80461121 113.27825928]
[164.18775940 96.17689514]
[183.88581848 85.68133545]
[206.05061340 83.28718567]
[227.48547363 89.32024384]
[245.10629272 102.89230347]
[256.38522339 122.03188324]
[259.71331787 143.97058105]
[274.50677490 146.45126343]
[289.30023193 148.93193054]
[302.08178711 140.02857971]
[317.04910278 142.75508118]
[325.45834351 154.99520874]
[340.25177002 157.47587585]
[355.04522705 159.95655823]
[369.83868408 162.43724060]
[384.63214111 164.91792297]
[399.42559814 167.39860535]
[414.21905518 169.87928772]
[429.01248169 172.35995483]
[433.40197754 167.09573364]
[439.16012573 163.47372437]
[445.70596313 161.82177734]
[452.39044189 162.27085876]
[458.56079102 164.74517822]
[463.62442017 168.97279358]
[467.10562134 174.51504517]
[468.69033813 180.81204224]
[483.19860840 184.62132263]
[497.70684814 188.43061829]
[506.80429077 187.58316040]
[512.40460205 192.40855408]
[526.85369873 196.43652344]
[541.30273438 200.46450806]
[555.75177002 204.49249268]
[570.20086670 208.52046204]
[584.64990234 212.54844666]
[599.09899902 216.57641602]
[615.97998047 215.00546265]
[622.16265869 230.79188538]
[608.70471191 241.10305786]
[595.07098389 231.02548218]
[580.62194824 226.99749756]
[566.17285156 222.96952820]
[551.72381592 218.94154358]
[537.27478027 214.91357422]
[522.82568359 210.88558960]
[508.37661743 206.85762024]
[493.89755249 202.93887329]
[479.38931274 199.12957764]
[464.88107300 195.32028198]
[443.43814087 203.97491455]
[426.53182983 187.15341187]
[411.73837280 184.67272949]
[396.94491577 182.19204712]
[382.15145874 179.71138000]
[367.35800171 177.23069763]
[352.56454468 174.75001526]
[337.77111816 172.26933289]
[322.97766113 169.78865051]
[311.03564453 178.61613464]
[295.99765015 176.31111145]
[286.81954956 163.72538757]
[272.02609253 161.24470520]
[257.23263550 158.76402283]
[254.15234375 166.80162048]
[249.92289734 174.30233765]
[244.63525391 181.10290527]
[238.40338135 187.05511475]
[231.36186218 192.02905273]
[223.66296387 195.91595459]
[215.47335815 198.63056946]
[206.97045898 200.11305237]
[198.33865356 200.33024597]
[189.76527405 199.27644348]
[181.43653870 196.97354126]
[173.53344727 193.47056580]
[166.22796631 188.84266663]
[159.67916870 183.18942261]
[154.02984619 176.63279724]
[149.40336609 169.31446838]
[145.90097046 161.39273071]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 126]
[4 125]
[5 124]
[6 123]
[7 93]
[8 92]
[9 91]
[10 90]
[11 89]
[12 88]
[13 87]
[14 86]
[15 85]
[16 84]
[17 83]
[18 82]
[21 34]
[22 33]
[23 32]
[24 31]
[25 30]
[40 76]
[41 75]
[42 74]
[43 73]
[44 72]
[45 71]
[46 70]
[49 69]
[50 68]
[52 67]
[53 66]
[54 65]
[55 63]
[56 62]
[57 61]
[94 120]
[95 119]
[96 118]
[98 117]
[99 116]
[100 115]
[101 114]
[102 113]
[103 112]
[104 111]
[133 190]
[134 189]
[135 188]
[138 185]
[139 184]
[140 183]
[141 182]
[142 181]
[143 180]
[144 179]
[145 178]
[153 176]
[154 175]
[155 174]
[157 173]
[158 172]
[159 171]
[160 170]
[161 169]
[162 168]
[163 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
