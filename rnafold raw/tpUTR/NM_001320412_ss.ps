%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 10:23:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGCUUCCCAGGUGCAGCUCCCGGCAGGUCUGGACAGUUCCACAGAGCACGGUACUGGCCCUGUCCUCAGUUCCCGUCCACCCUUCAACCAGUGGCUCCUGGGAGACUUUUCCUCCCUGCCUCAGCUCCCUGCCCAGCCAGCCUCCUGUCUCCAGAGAAGUUCUCCAUUAAAAAAUAAUUUAGCAAAUCA\
) } def
/len { sequence length } bind def

/coor [
[436.28536987 535.77349854]
[450.91253662 532.44989014]
[465.89636230 531.75341797]
[480.76873779 533.70581055]
[495.07153320 538.24865723]
[484.50817871 527.59899902]
[473.94482422 516.94934082]
[459.27719116 519.39837646]
[445.82077026 512.66125488]
[438.82995605 499.13418579]
[441.17184448 483.90847778]
[430.60848999 473.25881958]
[420.04513550 462.60913086]
[409.48178101 451.95947266]
[402.52868652 449.42068481]
[398.83493042 441.04943848]
[391.92407227 438.39779663]
[388.36706543 429.96752930]
[378.15594482 418.97967529]
[367.94485474 407.99179077]
[357.73373413 397.00393677]
[344.90878296 398.33718872]
[333.48950195 391.94073486]
[327.75927734 379.95684814]
[330.01486206 366.66879272]
[319.98394775 355.51617432]
[309.95303345 344.36355591]
[299.92214966 333.21096802]
[289.89123535 322.05834961]
[279.86032104 310.90573120]
[267.01538086 312.03005981]
[255.70172119 305.44857788]
[250.16732788 293.37298584]
[252.63888550 280.12344360]
[242.79083252 268.80902100]
[232.94279480 257.49459839]
[216.06733704 252.70295715]
[212.67535400 234.61103821]
[202.64443970 223.45841980]
[192.61354065 212.30580139]
[182.49218750 201.23519897]
[172.28108215 190.24732971]
[162.06996155 179.25946045]
[155.20318604 176.49569702]
[151.78387451 168.00865173]
[141.75296021 156.85603333]
[131.72204590 145.70341492]
[121.60070801 134.63281250]
[111.38959503 123.64494324]
[101.17848206 112.65707397]
[58.63050842 123.98990631]
[45.80595016 116.20975494]
[32.98139572 108.42960358]
[20.15683746 100.64945221]
[1.74970913 100.68366241]
[-6.09878111 84.99475861]
[-19.04827690 77.42438507]
[-31.99777222 69.85401154]
[-44.94726944 62.28364182]
[-57.89676285 54.71326828]
[-72.05171204 61.07070541]
[-87.23319244 57.86096573]
[-97.60360718 46.31825638]
[-99.17532349 30.88098526]
[-91.34398651 17.48509789]
[-77.12090302 11.28158760]
[-61.97513962 14.65582848]
[-51.73054886 26.31035805]
[-50.32638931 41.76377106]
[-37.37689590 49.33414459]
[-24.42739868 56.90451813]
[-11.47790337 64.47489166]
[1.47159243 72.04526520]
[13.25822258 69.28266144]
[24.11254501 75.49637604]
[27.93698502 87.82489777]
[40.76154327 95.60504913]
[53.58610153 103.38520050]
[66.41065979 111.16534424]
[72.41305542 106.66854095]
[90.42024231 93.17813110]
[86.55761719 78.68399048]
[82.69498444 64.18984985]
[67.84416962 60.27208710]
[56.95318222 49.44241333]
[52.95163345 34.61395264]
[56.91593170 19.77549171]
[67.77969360 8.91849899]
[82.62062073 4.96345282]
[97.44657898 8.97424030]
[108.26947021 19.87197876]
[112.17797852 34.72523117]
[108.12073517 49.53855133]
[97.18912506 60.32722473]
[101.05175781 74.82136536]
[104.91438293 89.31550598]
[112.16635132 102.44596100]
[122.37746429 113.43383026]
[132.58857727 124.42169952]
[140.73591614 128.58613586]
[142.87466431 135.67250061]
[152.90557861 146.82511902]
[162.93649292 157.97773743]
[173.05783081 169.04835510]
[183.26893616 180.03620911]
[193.48005676 191.02407837]
[201.62739563 195.18852234]
[203.76614380 202.27488708]
[213.79705811 213.42750549]
[223.82797241 224.58012390]
[236.65284729 226.04339600]
[244.77803040 235.55171204]
[244.25720215 247.64656067]
[254.10525513 258.96096802]
[263.95330811 270.27539062]
[281.41705322 271.16021729]
[292.62286377 284.14111328]
[291.01293945 300.87481689]
[301.04385376 312.02743530]
[311.07476807 323.18005371]
[321.10565186 334.33267212]
[331.13656616 345.48529053]
[341.16748047 356.63790894]
[358.64334106 357.23834229]
[370.05892944 370.03512573]
[368.72158813 386.79281616]
[378.93270874 397.78070068]
[389.14382935 408.76855469]
[399.35491943 419.75640869]
[409.65512085 430.66082764]
[420.13146973 441.39611816]
[430.69479370 452.04577637]
[441.25814819 462.69546509]
[451.82150269 473.34515381]
[467.06576538 471.12725830]
[480.53549194 478.22793579]
[487.16290283 491.73873901]
[484.59451294 506.38595581]
[495.15786743 517.03564453]
[505.72122192 527.68530273]
[513.65795898 529.59295654]
[518.47625732 535.14202881]
[532.93847656 539.12249756]
[547.40069580 543.10296631]
[562.75927734 539.30511475]
[572.97705078 550.14239502]
[587.43933105 554.12286377]
[601.93347168 557.98547363]
[616.45855713 561.72998047]
[630.98364258 565.47454834]
[646.62939453 560.56103516]
[658.52282715 571.85162354]
[654.42901611 587.73156738]
[638.55932617 591.86492920]
[627.23907471 579.99963379]
[612.71398926 576.25512695]
[598.18890381 572.51055908]
[590.91595459 573.88720703]
[583.45886230 568.58508301]
[568.99664307 564.60461426]
[554.67242432 568.68713379]
[543.42022705 557.56518555]
[528.95800781 553.58471680]
[514.49578857 549.60424805]
[525.46636963 559.83392334]
[534.46466064 571.83520508]
[541.20947266 585.23321533]
[545.49017334 599.60943604]
[547.17303467 614.51477051]
[546.20544434 629.48352051]
[542.61767578 644.04809570]
[536.52178955 657.75360107]
[528.10821533 670.17181396]
[517.63977051 680.91479492]
[505.44345093 689.64691162]
[491.90036011 696.09552002]
[477.43347168 700.05902100]
[462.49478149 701.41369629]
[447.55090332 700.11718750]
[433.06872559 696.20996094]
[419.50061035 689.81414795]
[407.27044678 681.12951660]
[396.76025391 670.42736816]
[388.29840088 658.04199219]
[382.14923096 644.36035156]
[378.50479126 629.80981445]
[377.47897339 614.84497070]
[379.10379028 599.93322754]
[383.32852173 585.54046631]
[390.02117920 572.11627197]
[398.97265625 560.08001709]
[409.90335083 549.80773926]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 140]
[6 139]
[7 138]
[11 134]
[12 133]
[13 132]
[14 131]
[16 130]
[18 129]
[19 128]
[20 127]
[21 126]
[25 123]
[26 122]
[27 121]
[28 120]
[29 119]
[30 118]
[34 115]
[35 114]
[36 113]
[38 110]
[39 109]
[40 108]
[41 106]
[42 105]
[43 104]
[45 103]
[46 102]
[47 101]
[48 99]
[49 98]
[50 97]
[51 79]
[52 78]
[53 77]
[54 76]
[56 73]
[57 72]
[58 71]
[59 70]
[60 69]
[81 96]
[82 95]
[83 94]
[142 164]
[143 163]
[144 162]
[146 160]
[147 159]
[148 157]
[149 156]
[150 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
