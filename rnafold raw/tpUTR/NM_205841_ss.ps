%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 11:56:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUAAAGCCAAUGUUUCUUGGUGACUUGCCAGCUUUUGCAGCCUUCUUUUCUCACUUCUGCUUAUACUUUUGCUGGUGGAUUCCUUUAAUUCAUAAAGACAUACCUACUCUGCCUGGGUCUUGAGGAGUUCAAUGUAUGUCUAUUUCUCUUGAUUCACUUGUCAAUAAAGUACAUUCUGCAAAAGCA\
) } def
/len { sequence length } bind def

/coor [
[-42.07321930 374.83709717]
[-48.38724136 388.44348145]
[-54.70126343 402.04983521]
[-54.22930145 407.28823853]
[-55.68065643 411.73239136]
[-58.42603683 414.77981567]
[-61.68781662 416.16757202]
[-68.67572784 429.44042969]
[-75.66364288 442.71331787]
[-82.65155792 455.98617554]
[-89.63947296 469.25903320]
[-84.71825409 484.27761841]
[-91.93259430 498.33920288]
[-107.00234985 503.10137939]
[-120.98690033 495.73876953]
[-125.58946228 480.61950684]
[-118.07941437 466.71359253]
[-102.91234589 462.27111816]
[-95.92443085 448.99826050]
[-88.93651581 435.72540283]
[-81.94860077 422.45251465]
[-74.96068573 409.17965698]
[-68.30762482 395.73580933]
[-61.99360275 382.12945557]
[-55.67958450 368.52310181]
[-61.46862793 361.11862183]
[-64.16917419 352.05551147]
[-63.36731720 342.57449341]
[-59.13170624 333.98968506]
[-52.00983429 327.50646973]
[-42.95763016 324.05233765]
[-33.21125031 324.14434814]
[-26.00252151 310.99008179]
[-18.79379654 297.83584595]
[-11.58506966 284.68161011]
[-4.37634325 271.52734375]
[2.83238316 258.37310791]
[10.04110909 245.21885681]
[17.24983597 232.06460571]
[24.45856285 218.91035461]
[31.66728783 205.75610352]
[22.20293236 191.39289856]
[21.30020332 174.12652588]
[29.29699326 158.69679260]
[44.07579422 149.38490295]
[61.62361145 148.82572937]
[68.38876343 135.43794250]
[75.15391541 122.05015564]
[81.91906738 108.66237640]
[78.19843292 94.13113403]
[65.83181000 85.64192963]
[56.96646118 83.35807800]
[53.33108902 76.90611267]
[41.10804367 68.21144867]
[28.88500023 59.51678467]
[16.66195679 50.82212067]
[6.03409863 53.25175476]
[-3.96677208 49.49779510]
[-10.11236954 41.03060913]
[-10.56232834 30.79792786]
[-22.48801422 21.69968414]
[-36.63024902 27.69073868]
[-51.87133789 25.79210091]
[-64.11150360 16.51449394]
[-70.05819702 2.35354733]
[-68.11179352 -12.88151360]
[-58.79586411 -25.09253502]
[-44.61634827 -30.99481392]
[-29.38746262 -29.00066566]
[-17.20570183 -19.64650726]
[-11.34789848 -5.44856071]
[-13.38977146 9.77399921]
[-1.46408546 18.87224197]
[17.83259583 19.91145325]
[25.35662079 38.59907532]
[37.57966614 47.29374313]
[49.80270767 55.98840714]
[62.02575302 64.68307495]
[74.32101440 73.27530670]
[86.68763733 81.76451111]
[79.90484619 68.38565826]
[73.12205505 55.00680542]
[62.34917068 44.56913376]
[56.29290009 30.84610558]
[55.84256363 15.85286713]
[61.06430054 1.79109371]
[71.19132233 -9.27432060]
[84.73653412 -15.71848202]
[99.71089935 -16.59510040]
[113.91551208 -11.77544880]
[125.26450348 -1.96726727]
[132.09133911 11.38916779]
[133.39352417 26.33253670]
[128.97985840 40.66849136]
[119.49921417 52.29124451]
[114.32418823 66.37027740]
[109.14916992 80.44930267]
[120.44052124 70.57482910]
[131.73188782 60.70035934]
[143.02323914 50.82588577]
[154.31460571 40.95141220]
[165.60595703 31.07694054]
[176.89732361 21.20246696]
[188.18867493 11.32799339]
[188.44412231 -8.74369049]
[203.13063049 -21.97673607]
[222.51393127 -20.20199203]
[233.29627991 -30.62987900]
[244.07862854 -41.05776596]
[254.86099243 -51.48565292]
[265.64334106 -61.91353989]
[266.64248657 -74.78600311]
[275.85455322 -83.25005341]
[287.96325684 -83.16277313]
[285.91574097 -98.54417419]
[293.32983398 -112.17541504]
[307.35464478 -118.81501770]
[322.59735107 -115.90991211]
[333.19680786 -104.57717896]
[335.07733154 -89.17446899]
[327.51580811 -75.62445831]
[313.41979980 -69.13739014]
[298.20950317 -72.20767212]
[294.02688599 -55.17313385]
[276.07122803 -51.13118362]
[265.28887939 -40.70329666]
[254.50651550 -30.27540970]
[243.72416687 -19.84752464]
[232.94181824 -9.41963768]
[235.54742432 0.54449642]
[233.75767517 10.76908684]
[227.83076477 19.38898087]
[218.78570557 24.80343246]
[208.22766113 25.97319221]
[198.06315613 22.61935234]
[186.77178955 32.49382401]
[175.48043823 42.36829758]
[164.18907166 52.24277115]
[152.89772034 62.11724472]
[141.60635376 71.99171448]
[130.31500244 81.86618805]
[119.02363586 91.74066162]
[119.64955902 99.21450043]
[134.29272461 95.96219635]
[148.70265198 91.79635620]
[158.05374146 103.52482605]
[150.78303528 116.64491272]
[135.88154602 114.93357849]
[120.90139771 114.16217041]
[121.52731323 121.63600922]
[134.30380249 129.49484253]
[147.08029175 137.35368347]
[159.85678101 145.21252441]
[172.63327026 153.07136536]
[187.94699097 149.16427612]
[201.49533081 157.30171204]
[205.24031067 172.65588379]
[196.96008301 186.11743164]
[181.56716919 189.69987488]
[168.19390869 181.27778625]
[164.77442932 165.84785461]
[151.99794006 157.98901367]
[139.22145081 150.13017273]
[126.44496155 142.27133179]
[113.66847229 134.41249084]
[101.09962463 126.55385590]
[95.30685425 115.42752838]
[88.54170227 128.81530762]
[81.77655029 142.20309448]
[75.01139832 155.59088135]
[83.08787537 165.69621277]
[86.72263336 178.06263733]
[85.40818787 190.83795166]
[79.37557983 202.12266541]
[69.55471802 210.25244141]
[57.43117142 214.04347229]
[44.82153702 212.96482849]
[37.61281204 226.11907959]
[30.40408516 239.27333069]
[23.19535828 252.42758179]
[15.98663235 265.58181763]
[8.77790546 278.73608398]
[1.56917930 291.89031982]
[-5.63954687 305.04458618]
[-12.84827328 318.19882202]
[-20.05699921 331.35305786]
[-12.84328556 351.08468628]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 25]
[2 24]
[3 23]
[7 22]
[8 21]
[9 20]
[10 19]
[11 18]
[32 186]
[33 185]
[34 184]
[35 183]
[36 182]
[37 181]
[38 180]
[39 179]
[40 178]
[41 177]
[46 170]
[47 169]
[48 168]
[49 167]
[50 80]
[51 79]
[53 78]
[54 77]
[55 76]
[56 75]
[60 73]
[61 72]
[97 142]
[98 141]
[99 140]
[100 139]
[101 138]
[102 137]
[103 136]
[104 135]
[107 129]
[108 128]
[109 127]
[110 126]
[111 125]
[114 123]
[150 165]
[151 164]
[152 163]
[153 162]
[154 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
