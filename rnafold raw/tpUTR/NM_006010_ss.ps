%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 20:01:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGCUCAAUCUCUGUUGCACCUGAGGGGGAAAAAACAGUUCAACUGCUUACUCCCAAAACAGCCUUUUUGUAAUUUAUUUUUUAAGUGGGCUCCUGACAAUACUGUAUCAGAUGUGAAGCCUGGAGCUUUCCUGAUGAUGCUGGCCCUACAGUACCCCCAUGAGGGGAUUCCCUUCCUUCUGUUGCUGGUGUACUCUAGGACUUCAAAGUGUGUCUGGGAUUUUUUUAUUAAAGAAAAAAAAUUUCUAGCUGUC\
CUUGCAGAAUUAUAGUGAAUACCAAAAUGGGGUUUUGCCCCAGGAGGCUCCUA\
) } def
/len { sequence length } bind def

/coor [
[364.98580933 423.65216064]
[358.36004639 410.19485474]
[351.73425293 396.73754883]
[345.10848999 383.28024292]
[338.48269653 369.82293701]
[308.14517212 361.06912231]
[294.01147461 335.61212158]
[301.32135010 309.97204590]
[290.63415527 299.44662476]
[279.94699097 288.92123413]
[269.25982666 278.39581299]
[258.57266235 267.87039185]
[247.88548279 257.34497070]
[233.38836670 253.92697144]
[228.98526001 238.73081970]
[214.13943481 239.10084534]
[203.15118408 228.57881165]
[202.86372375 213.00463867]
[192.17655945 202.47921753]
[181.48937988 191.95379639]
[170.80221558 181.42839050]
[153.58740234 177.90921021]
[148.89044189 160.07960510]
[138.09681702 149.66339111]
[127.30318451 139.24717712]
[116.50955200 128.83094788]
[105.71592712 118.41473389]
[90.72077179 118.03351593]
[79.41181183 127.88782501]
[68.10284424 137.74212646]
[56.79388428 147.59643555]
[55.55749512 163.12411499]
[43.94821930 172.95669556]
[29.15256119 171.68229675]
[17.84359741 181.53659058]
[12.52227116 196.43606567]
[-2.15626073 198.96389771]
[-13.46522331 208.81820679]
[-24.77418709 218.67251587]
[-36.08314896 228.52682495]
[-44.05259323 243.49092102]
[-60.63805389 239.97540283]
[-61.85123444 223.06491089]
[-45.93745804 217.21786499]
[-34.62849426 207.36355591]
[-23.31953049 197.50924683]
[-12.01056671 187.65493774]
[-7.49813271 173.46031189]
[7.98929167 170.22763062]
[19.29825401 160.37332153]
[20.06023407 145.54244995]
[31.38875198 135.38768005]
[46.93957520 136.28747559]
[58.24853897 126.43316650]
[69.55750275 116.57885742]
[80.86646271 106.72454834]
[78.25360107 99.69440460]
[66.49619293 109.00908661]
[54.00426865 100.70536041]
[58.04154587 86.25889587]
[73.02788544 85.63410950]
[70.41502380 78.60396576]
[55.41521454 78.52771759]
[40.41540909 78.45146179]
[25.41560364 78.37521362]
[10.41579723 78.29895782]
[-3.42352891 85.96600342]
[-16.11130333 78.16410828]
[-31.11111069 78.08785248]
[-46.11091614 78.01160431]
[-61.11072159 77.93534851]
[-74.95005035 85.60240173]
[-87.63782501 77.80049896]
[-102.63762665 77.72425079]
[-113.69187927 89.01934052]
[-129.49592590 89.10609436]
[-140.67352295 77.93304443]
[-140.59318542 62.12895584]
[-129.30258179 51.07012177]
[-113.50022125 51.31755066]
[-102.56137848 62.72444153]
[-87.56156921 62.80069351]
[-74.79513550 55.12819290]
[-61.03446960 62.93554688]
[-46.03466415 63.01179886]
[-31.03485870 63.08805084]
[-16.03505135 63.16430283]
[-3.26861238 55.49179840]
[10.49204922 63.29915237]
[25.49185562 63.37540436]
[40.49166107 63.45165634]
[55.49146652 63.52790833]
[70.49127197 63.60416031]
[80.34558105 52.29519653]
[78.21772003 37.44689178]
[76.08985901 22.59858513]
[73.88654327 7.76128626]
[71.60783386 -7.06461906]
[59.14844894 -16.41349411]
[57.04871368 -31.48153114]
[66.03821564 -43.30203629]
[63.75951004 -58.12794495]
[61.48079681 -72.95384979]
[59.20208740 -87.77975464]
[56.92337799 -102.60565948]
[54.56932831 -117.41979218]
[52.14000320 -132.22175598]
[49.71067810 -147.02374268]
[39.84051895 -159.38862610]
[45.41442871 -173.20097351]
[42.98510361 -188.00294495]
[40.55577850 -202.80491638]
[38.12645340 -217.60688782]
[28.25629425 -229.97177124]
[33.83020401 -243.78411865]
[29.37341881 -251.69702148]
[31.45222092 -258.74887085]
[29.17350960 -273.57476807]
[26.89480019 -288.40066528]
[24.61608887 -303.22659302]
[21.41625214 -307.22064209]
[20.15937042 -311.60278320]
[20.67352486 -315.58010864]
[22.50114059 -318.53869629]
[20.67562294 -333.42721558]
[18.85010529 -348.31570435]
[17.02458763 -363.20422363]
[12.89320278 -371.29177856]
[15.25698948 -378.25326538]
[13.58293438 -393.15954590]
[11.90888023 -408.06585693]
[10.23482513 -422.97213745]
[8.56077099 -437.87841797]
[6.88671589 -452.78472900]
[-2.34239721 -465.63516235]
[3.92615652 -479.14645386]
[2.25210190 -494.05273438]
[0.57804722 -508.95901489]
[-13.12061596 -525.48016357]
[-3.86979032 -543.95928955]
[-5.99765110 -558.80761719]
[-8.12551212 -573.65594482]
[-10.25337315 -588.50421143]
[-12.38123417 -603.35253906]
[-25.17754173 -612.62780762]
[-27.58477402 -628.24768066]
[-18.17476273 -640.94519043]
[-2.53030157 -643.18713379]
[10.06702900 -633.64343262]
[12.14345646 -617.97613525]
[2.46707273 -605.48040771]
[4.59493351 -590.63208008]
[6.72279453 -575.78381348]
[8.85065556 -560.93548584]
[10.97851658 -546.08715820]
[18.77938843 -542.03790283]
[23.94535637 -534.75842285]
[25.23141098 -525.78686523]
[22.22912979 -517.09014893]
[15.48433876 -510.63308716]
[17.15839386 -495.72677612]
[18.83244896 -480.82049561]
[27.94182205 -469.03625488]
[21.79300880 -454.45877075]
[23.46706200 -439.55249023]
[25.14111710 -424.64617920]
[26.81517220 -409.73989868]
[28.48922729 -394.83361816]
[30.16328239 -379.92730713]
[31.91308975 -365.02972412]
[33.73860931 -350.14123535]
[35.56412506 -335.25271606]
[37.38964081 -320.36422729]
[39.44199371 -305.50527954]
[41.72070694 -290.67938232]
[43.99941635 -275.85348511]
[46.27812576 -261.02758789]
[48.63217545 -246.21343994]
[58.32857132 -234.90728760]
[52.92842484 -220.03620911]
[55.35774994 -205.23423767]
[57.78707504 -190.43226624]
[60.21640015 -175.63029480]
[69.91279602 -164.32414246]
[64.51264954 -149.45306396]
[66.94197845 -134.65109253]
[69.37129974 -119.84911346]
[73.53366089 -113.78903198]
[71.74928284 -104.88436890]
[74.02799225 -90.05846405]
[76.30670166 -75.23255920]
[78.58541107 -60.40665436]
[80.86412811 -45.58074951]
[92.98843384 -37.00539017]
[95.51056671 -22.00227547]
[86.43373871 -9.34332943]
[88.71244812 5.48257589]
[92.81298065 11.58466339]
[90.93816376 20.47072411]
[93.06602478 35.31903076]
[95.19388580 50.16733551]
[127.77473450 80.47162628]
[116.13214874 107.62110901]
[126.92577362 118.03732300]
[137.71940613 128.45353699]
[148.51303101 138.86976624]
[159.30665588 149.28598022]
[172.15960693 149.82890320]
[180.93197632 158.68350220]
[181.32763672 170.74121094]
[192.01480103 181.26663208]
[202.70196533 191.79205322]
[213.38914490 202.31745911]
[228.96589661 202.36738586]
[239.65426636 213.19389343]
[239.51068115 228.04364014]
[254.77221680 232.21449280]
[258.41088867 246.65780640]
[269.09808350 257.18322754]
[279.78524780 267.70864868]
[290.47241211 278.23403931]
[301.15957642 288.75946045]
[311.84674072 299.28488159]
[317.11038208 295.59735107]
[323.13192749 292.91293335]
[329.71621704 291.38662720]
[336.63665771 291.13479614]
[343.64300537 292.22879028]
[350.47039795 294.69021606]
[356.84930420 298.48803711]
[362.51605225 303.53778076]
[367.22354126 309.70269775]
[370.75161743 316.79702759]
[372.91668701 324.59167480]
[387.65216064 327.39639282]
[402.38760376 330.20111084]
[417.12304688 333.00582886]
[431.85848999 335.81057739]
[445.87902832 328.01284790]
[460.66180420 334.24578857]
[464.86672974 349.72796631]
[455.26815796 362.58282471]
[439.22930908 362.94918823]
[429.05377197 350.54602051]
[414.31832886 347.74130249]
[399.58288574 344.93655396]
[384.84741211 342.13183594]
[370.11196899 339.32711792]
[365.56896973 345.29461670]
[377.50399780 354.38061523]
[389.43902588 363.46658325]
[401.37405396 372.55258179]
[413.30895996 381.63873291]
[404.22259521 393.57348633]
[392.28808594 384.48760986]
[380.35305786 375.40161133]
[368.41802979 366.31564331]
[356.48300171 357.22964478]
[351.94000244 363.19717407]
[358.56579590 376.65447998]
[365.19155884 390.11178589]
[371.81735229 403.56909180]
[378.44311523 417.02639771]
[387.60485840 418.82885742]
[394.82177734 424.53515625]
[398.57504272 432.78479004]
[398.14825439 441.70080566]
[393.76086426 449.31668091]
[399.97314453 462.96978760]
[406.18545532 476.62289429]
[412.55487061 483.09649658]
[412.39074707 490.44653320]
[418.46389771 504.16207886]
[428.75970459 507.46292114]
[435.42431641 515.69671631]
[436.46353149 526.01867676]
[431.77578735 535.02722168]
[437.56881714 548.86346436]
[451.15423584 551.01348877]
[461.82690430 559.51751709]
[466.87588501 572.07916260]
[465.08612061 585.38964844]
[457.02905273 595.99926758]
[462.68112183 609.89367676]
[468.33319092 623.78802490]
[473.98526001 637.68243408]
[479.63735962 651.57684326]
[485.28942871 665.47119141]
[496.85836792 677.86456299]
[488.15194702 692.41223145]
[471.76263428 688.07324219]
[471.39505005 671.12329102]
[465.74295044 657.22888184]
[460.09088135 643.33453369]
[454.43881226 629.44012451]
[448.78674316 615.54571533]
[443.13464355 601.65136719]
[427.05862427 598.21447754]
[416.10314941 585.73529053]
[414.75006104 569.01757812]
[423.73260498 554.65649414]
[417.93957520 540.82031250]
[401.74438477 530.20227051]
[404.74835205 510.23526001]
[398.67517090 496.51968384]
[392.53234863 482.83517456]
[386.32003784 469.18206787]
[380.10775757 455.52896118]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 263]
[2 262]
[3 261]
[4 260]
[5 259]
[8 223]
[9 222]
[10 221]
[11 220]
[12 219]
[13 218]
[15 216]
[18 213]
[19 212]
[20 211]
[21 210]
[23 207]
[24 206]
[25 205]
[26 204]
[27 203]
[28 56]
[29 55]
[30 54]
[31 53]
[34 50]
[35 49]
[37 47]
[38 46]
[39 45]
[40 44]
[62 93]
[63 92]
[64 91]
[65 90]
[66 89]
[68 87]
[69 86]
[70 85]
[71 84]
[73 82]
[74 81]
[94 201]
[95 200]
[96 199]
[97 197]
[98 196]
[101 193]
[102 192]
[103 191]
[104 190]
[105 189]
[106 187]
[107 186]
[108 185]
[110 183]
[111 182]
[112 181]
[113 180]
[115 178]
[117 177]
[118 176]
[119 175]
[120 174]
[124 173]
[125 172]
[126 171]
[127 170]
[129 169]
[130 168]
[131 167]
[132 166]
[133 165]
[134 164]
[136 162]
[137 161]
[138 160]
[140 155]
[141 154]
[142 153]
[143 152]
[144 151]
[234 248]
[235 247]
[236 246]
[237 245]
[238 244]
[268 308]
[269 307]
[270 306]
[272 305]
[273 304]
[277 302]
[278 301]
[283 297]
[284 296]
[285 295]
[286 294]
[287 293]
[288 292]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
