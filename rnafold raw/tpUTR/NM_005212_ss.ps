%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 22:39:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACACCAAGGAAAUAUCAAAGAACACAACGCAGGACUUGCUGAAACCAAAUUACUACUUCACACUCUCCUUCAGCCAUUUGUCUGCCUUCAGUCAACAGAAAAUGUGAUUUUCACAGAUUCAGCUCUUCUCUCCUUACAUUUUACAUUCAUGCCACAUUCAAUAUUUUGAUUCUUGCACAAUAAAGCCAACUGAUUGCAA\
) } def
/len { sequence length } bind def

/coor [
[59.99074173 155.29336548]
[49.26006317 145.22080994]
[40.97884750 133.12841797]
[35.51220703 119.59593964]
[33.09110260 105.26535034]
[33.80267715 90.81044769]
[37.58740616 76.90516663]
[44.24309921 64.19214630]
[32.62024307 54.71010208]
[20.99738693 45.22805786]
[9.37452984 35.74600983]
[-2.24832654 26.26396370]
[-13.02146912 36.26473999]
[-25.04899597 44.71222687]
[-38.10870743 51.45097733]
[-51.95941162 56.35710526]
[-66.34539032 59.34056854]
[-81.00111389 60.34681320]
[-95.65614319 59.35778046]
[-110.04012299 56.39221573]
[-123.88777161 51.50532913]
[-136.94374084 44.78776550]
[-148.96740723 36.36391068]
[-159.73718262 26.38960266]
[-169.05473328 15.04924107]
[-176.74850464 2.55238080]
[-182.67700195 -10.87014294]
[-186.73129272 -24.97047424]
[-188.83706665 -39.48831940]
[-188.95594788 -54.15574265]
[-187.08625793 -68.70212555]
[-201.56503296 -72.62195587]
[-216.04380798 -76.54178619]
[-230.52258301 -80.46160889]
[-245.00135803 -84.38143921]
[-257.16000366 -71.70135498]
[-273.97909546 -66.94582367]
[-290.80499268 -71.33699036]
[-303.02944946 -83.57907104]
[-307.35165405 -100.23897552]
[-321.94531250 -103.70661926]
[-336.53900146 -107.17426300]
[-351.13265991 -110.64190674]
[-365.72634888 -114.10955048]
[-380.32003784 -117.57719421]
[-387.08432007 -104.11090088]
[-396.77227783 -92.56793976]
[-408.86148071 -83.57080078]
[-422.69989014 -77.60469055]
[-437.54129028 -74.99134827]
[-452.58529663 -75.87171936]
[-467.02056885 -80.19832611]
[-480.06866455 -87.73783112]
[-491.02587891 -98.08364105]
[-499.30136108 -110.67782593]
[-504.44876099 -124.84118652]
[-506.19052124 -139.80992126]
[-504.43270874 -154.77677917]
[-499.27014160 -168.93461609]
[-490.98117065 -181.51992798]
[-480.01284790 -191.85398865]
[-466.95669556 -199.37950134]
[-452.51678467 -203.69062805]
[-437.47186279 -204.55487061]
[-422.63327026 -201.92562866]
[-408.80123901 -195.94468689]
[-396.72171021 -186.93458557]
[-387.04614258 -175.38124084]
[-380.29626465 -161.90771484]
[-376.83615112 -147.24060059]
[-376.85238647 -132.17086792]
[-362.25869751 -128.70323181]
[-347.66503906 -125.23558807]
[-333.07135010 -121.76794434]
[-318.47766113 -118.30029297]
[-303.88400269 -114.83264923]
[-296.24197388 -124.90327454]
[-285.31732178 -131.35722351]
[-272.71658325 -133.20428467]
[-260.30850220 -130.13482666]
[-249.94668579 -122.57094574]
[-243.19288635 -111.60888672]
[-241.08154297 -98.86021423]
[-226.60275269 -94.94038391]
[-212.12397766 -91.02056122]
[-197.64520264 -87.10073090]
[-183.16642761 -83.18090057]
[-178.49212646 -94.52735138]
[-172.56042480 -105.27007294]
[-165.44796753 -115.27027893]
[-157.24664307 -124.39877319]
[-148.06240845 -132.53762817]
[-138.01391602 -139.58169556]
[-127.23098755 -145.43997192]
[-115.85291290 -150.03677368]
[-104.02669525 -153.31271362]
[-91.90512848 -155.22546387]
[-79.64479828 -155.75032043]
[-67.40410614 -154.88050842]
[-55.34119034 -152.62725830]
[-50.75033188 -166.90745544]
[-46.15946960 -181.18765259]
[-53.12385559 -195.12088013]
[-48.26464462 -209.53762817]
[-34.93851089 -216.09124756]
[-30.34765434 -230.37144470]
[-25.75679588 -244.65164185]
[-21.16593552 -258.93182373]
[-16.57507706 -273.21203613]
[-17.48359108 -290.14163208]
[-1.46711910 -295.70120239]
[8.30899525 -281.84970093]
[-2.29488063 -268.62118530]
[-6.88573933 -254.34097290]
[-11.47659874 -240.06077576]
[-16.06745720 -225.78057861]
[-20.65831566 -211.50038147]
[-13.64778709 -198.40885925]
[-18.10014343 -183.86131287]
[-31.87927437 -176.59678650]
[-36.47013474 -162.31658936]
[-41.06099319 -148.03639221]
[-25.21114731 -140.15806580]
[-10.85820198 -129.79388428]
[1.61142325 -117.22135162]
[11.86176205 -102.77738190]
[19.61634636 -86.84937286]
[24.66566467 -69.86476898]
[26.87282372 -52.27959442]
[26.17725945 -34.56622314]
[22.59639359 -17.20067596]
[16.22520828 -0.64983714]
[7.23371983 14.64110661]
[18.85657692 24.12315369]
[30.47943306 33.60519791]
[42.10229111 43.08724594]
[53.72514725 52.56929398]
[63.32019806 44.54056549]
[74.28888702 38.43442154]
[86.24921417 34.48186111]
[98.78121185 32.83858109]
[111.44160461 33.57887650]
[123.77957916 36.69245529]
[135.35276794 42.08423233]
[145.74311829 49.57714844]
[154.57205200 58.91794586]
[161.51414490 69.78572845]
[166.30920410 81.80292511]
[168.77194214 94.54846954]
[168.79908752 107.57248688]
[166.37364197 120.41220856]
[161.56602478 132.60839844]
[175.16610718 138.93592834]
[188.76620483 145.26344299]
[200.59252930 135.67703247]
[215.34817505 132.19021606]
[230.09413147 135.44245911]
[241.91714478 144.73638916]
[248.50531006 158.18650818]
[248.59997559 173.10148621]
[262.20007324 179.42901611]
[275.80017090 185.75653076]
[289.40023804 192.08406067]
[305.67922974 190.10246277]
[315.31723022 203.37051392]
[308.39950562 218.23916626]
[292.04238892 219.41284180]
[283.07272339 205.68415833]
[269.47262573 199.35662842]
[255.87254333 193.02909851]
[242.27246094 186.70156860]
[230.80252075 196.23605347]
[216.27059937 199.85990906]
[201.54603577 196.80241394]
[189.56025696 187.61755371]
[182.72317505 174.08459473]
[182.43867493 158.86354065]
[168.83859253 152.53601074]
[155.23849487 146.20848083]
[144.46823120 156.64884949]
[150.36973572 170.43914795]
[156.27124023 184.22944641]
[162.17274475 198.01974487]
[173.83755493 203.53491211]
[178.46707153 215.14814758]
[174.08483887 226.42788696]
[179.77116394 240.30828857]
[193.06657410 249.90852356]
[191.13127136 266.19308472]
[175.95616150 272.40979004]
[163.15206909 262.16345215]
[165.89076233 245.99461365]
[160.20443726 232.11421204]
[145.76571655 222.14515686]
[148.38244629 203.92124939]
[142.48094177 190.13095093]
[136.57943726 176.34065247]
[130.67793274 162.55035400]
[116.45980072 167.40414429]
[101.59172821 169.08279419]
[86.77116394 167.53404236]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 137]
[9 136]
[10 135]
[11 134]
[12 133]
[31 87]
[32 86]
[33 85]
[34 84]
[35 83]
[40 76]
[41 75]
[42 74]
[43 73]
[44 72]
[45 71]
[100 122]
[101 121]
[102 120]
[105 117]
[106 116]
[107 115]
[108 114]
[109 113]
[152 179]
[153 178]
[154 177]
[160 171]
[161 170]
[162 169]
[163 168]
[180 198]
[181 197]
[182 196]
[183 195]
[186 193]
[187 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
