%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 11:03:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAUUGACAUUGUGGCCACAGGCCACUGGCCCUGGGUGGCUCUGUCAGGGUGCACAGCCCCUCAUGCCUGGAGCAAUGAGGGUCUAGUCCAGGGGCCAAAAGCAGUCUGAGGUAUUGGGUAUACUUAUACUCUAUAGGGUCGUUGAAUAAAUGGCUUAGAAUGUGG\
) } def
/len { sequence length } bind def

/coor [
[110.37664795 257.74447632]
[95.29173279 260.97692871]
[80.86196136 255.51934814]
[71.69181824 243.11322021]
[70.70746613 227.71730042]
[78.22300720 214.24435425]
[91.84025574 206.99356079]
[92.96791077 192.03601074]
[94.09555817 177.07846069]
[95.22321320 162.12091064]
[96.35086060 147.16334534]
[82.50621033 141.39053345]
[72.67360687 152.71836853]
[62.84100342 164.04620361]
[53.00840378 175.37405396]
[43.17580414 186.70188904]
[33.34320068 198.02972412]
[27.52667618 213.95469666]
[10.61389446 212.77394104]
[7.06657314 196.19525146]
[22.01536179 188.19712830]
[31.84796333 176.86929321]
[41.68056488 165.54144287]
[51.51316452 154.21360779]
[61.34576416 142.88577271]
[71.17836761 131.55792236]
[67.16681671 125.22093964]
[55.13216400 106.20996094]
[40.68674850 110.25100708]
[26.24133682 114.29205322]
[11.79592419 118.33309937]
[4.26383877 132.22709656]
[-10.91026115 136.64549255]
[-24.72385025 128.96693420]
[-28.98157310 113.74697113]
[-21.15739632 100.01533508]
[-5.89326668 95.91876221]
[7.75487947 103.88768005]
[22.20029259 99.84664154]
[36.64570618 95.80559540]
[51.09111786 91.76454926]
[84.27726746 60.27819824]
[121.69698334 71.46967316]
[111.06709290 59.75148392]
[115.75933075 45.61528015]
[112.40186310 30.99586105]
[109.04440308 16.37644005]
[105.68694305 1.75702047]
[102.32948303 -12.86240005]
[91.69959259 -24.58058929]
[96.39182281 -38.71678925]
[93.03436279 -53.33621216]
[89.67690277 -67.95563507]
[72.81607056 -74.52701569]
[63.32984161 -89.75315094]
[64.83624268 -107.47199249]
[76.54850006 -120.64396667]
[72.64350891 -135.12675476]
[68.73851776 -149.60952759]
[64.83351898 -164.09231567]
[60.92852402 -178.57510376]
[57.02352905 -193.05789185]
[47.25128555 -197.95571899]
[41.91858673 -207.24462891]
[42.58865738 -217.71391296]
[48.79622650 -225.89628601]
[38.16633224 -237.61448669]
[42.85856628 -251.75068665]
[39.50110626 -266.37011719]
[36.14364624 -280.98953247]
[32.78618240 -295.60894775]
[29.42872238 -310.22836304]
[18.79883003 -321.94656372]
[23.49106407 -336.08276367]
[9.96652985 -344.25970459]
[6.26638842 -359.62475586]
[14.58586979 -373.06207275]
[29.98917198 -376.59954834]
[43.33779144 -368.13848877]
[46.71222687 -352.69863892]
[38.11048508 -339.44021606]
[48.50022888 -328.76770020]
[44.04814148 -313.58581543]
[47.40560532 -298.96640015]
[50.76306534 -284.34698486]
[54.12052536 -269.72756958]
[57.47798920 -255.10813904]
[67.86772919 -244.43563843]
[63.41564560 -229.25375366]
[77.59963226 -216.14883423]
[71.50631714 -196.96287537]
[75.41130829 -182.48010254]
[79.31630707 -167.99731445]
[83.22129822 -153.51452637]
[87.12628937 -139.03173828]
[91.03128815 -124.54896545]
[102.93424988 -121.92890167]
[112.64077759 -114.43909454]
[118.25969696 -103.46089935]
[118.66316223 -91.06252289]
[113.71246338 -79.60944366]
[104.29632568 -71.31309509]
[107.65378571 -56.69367218]
[111.01124573 -42.07425308]
[121.40099335 -31.40174103]
[116.94890594 -16.21986198]
[120.30636597 -1.60044086]
[123.66382599 13.01898003]
[127.02128601 27.63839912]
[130.37875366 42.25782013]
[140.76849365 52.93033218]
[136.31640625 68.11221313]
[148.18083191 77.29019928]
[163.17485046 76.86698914]
[178.16888428 76.44377899]
[191.74525452 68.32019806]
[204.68577576 75.69532776]
[219.67979431 75.27211761]
[234.67382812 74.84889984]
[249.66784668 74.42568970]
[264.66189575 74.00247955]
[279.65591431 73.57926941]
[293.32974243 64.52616119]
[307.88415527 72.08265686]
[308.34686279 88.47528076]
[294.24182129 96.84069824]
[280.07913208 88.57329559]
[265.08508301 88.99650574]
[250.09106445 89.41971588]
[235.09703064 89.84293365]
[220.10301208 90.26614380]
[205.10897827 90.68935394]
[192.60507202 98.78266907]
[178.59210205 91.43780518]
[163.59806824 91.86101532]
[148.60403442 92.28423309]
[142.83122253 106.12888336]
[153.08296204 117.07885742]
[163.33470154 128.02882385]
[173.58644104 138.97879028]
[183.83818054 149.92877197]
[194.08990479 160.87873840]
[204.34164429 171.82870483]
[214.59338379 182.77867126]
[230.51589966 184.74169922]
[238.78552246 198.48916626]
[233.05851746 213.47518921]
[217.72816467 218.20378113]
[204.55458069 209.04757690]
[203.64341736 193.03041077]
[193.39167786 182.08044434]
[183.13993835 171.13047791]
[172.88819885 160.18051147]
[162.63645935 149.23052979]
[152.38471985 138.28056335]
[142.13298035 127.33059692]
[131.88124084 116.38062286]
[129.21041870 127.94944763]
[122.31671906 139.09098816]
[111.30841827 148.29100037]
[110.18076324 163.24855042]
[109.05311584 178.20611572]
[107.92546082 193.16366577]
[106.79781342 208.12121582]
[119.17404938 217.33166504]
[124.58467102 231.77909851]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 164]
[8 163]
[9 162]
[10 161]
[11 160]
[12 26]
[13 25]
[14 24]
[15 23]
[16 22]
[17 21]
[28 41]
[29 40]
[30 39]
[31 38]
[43 112]
[45 110]
[46 109]
[47 108]
[48 107]
[49 106]
[51 104]
[52 103]
[53 102]
[57 96]
[58 95]
[59 94]
[60 93]
[61 92]
[62 91]
[66 89]
[68 87]
[69 86]
[70 85]
[71 84]
[72 83]
[74 81]
[113 136]
[114 135]
[115 134]
[117 132]
[118 131]
[119 130]
[120 129]
[121 128]
[122 127]
[137 157]
[138 156]
[139 155]
[140 154]
[141 153]
[142 152]
[143 151]
[144 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
