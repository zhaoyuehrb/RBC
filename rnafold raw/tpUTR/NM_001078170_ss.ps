%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 10:30:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGCAACCAUGUUCUACUAUGGUGCCAAAAAUAGUUGAACAUCGACAUCAAAAAGAUUCUUUCUGUCUGCUUAUUCACAUAUUCUGGUUUGAAUUAAAAGUGAUGAAAUUAUCCUAAAUACAGUUGGCCCUCUGUAUCCAUGGGUUCCACAUCCACAAAUUCAACCAACUGUGGAUGGAAAAGACUUGAAAA\
) } def
/len { sequence length } bind def

/coor [
[141.09266663 138.52929688]
[122.88688660 152.80125427]
[100.02565765 158.76576233]
[76.19262695 155.05656433]
[69.18871307 168.32099915]
[62.18479919 181.58543396]
[60.94164658 190.64959717]
[54.95855713 195.00659180]
[47.74076843 208.15586853]
[40.52297974 221.30514526]
[33.30519104 234.45442200]
[26.08740234 247.60369873]
[30.74656868 262.70562744]
[23.28866768 276.63958740]
[8.13834095 281.13882446]
[-5.71599150 273.53399658]
[-10.05480099 258.33697510]
[-2.30394793 244.56381226]
[12.93812370 240.38591003]
[20.15591240 227.23663330]
[27.37370300 214.08735657]
[34.59149170 200.93807983]
[41.80928040 187.78880310]
[48.92036438 174.58151245]
[55.92428207 161.31707764]
[62.92819595 148.05264282]
[58.30648422 142.14588928]
[46.49297333 151.38931274]
[34.67945862 160.63275146]
[22.86580658 169.87599182]
[13.62274361 158.06219482]
[25.43603325 148.81922913]
[37.24954605 139.57580566]
[49.06305695 130.33238220]
[44.44134140 124.42562103]
[29.88169861 128.03349304]
[15.32205486 131.64137268]
[0.76241022 135.24925232]
[-13.79723454 138.85711670]
[-27.71708107 148.53565979]
[-40.87078094 137.83909607]
[-34.23354721 122.23834991]
[-17.40510750 124.29747772]
[-2.84546423 120.68960571]
[11.71417999 117.08172607]
[26.27382469 113.47385406]
[40.83346939 109.86598206]
[40.54680634 99.00028992]
[42.22178268 88.35656738]
[45.76889038 78.28286743]
[51.03799057 69.10229492]
[57.82434464 61.10263443]
[65.87642670 54.52735519]
[74.90508270 49.56827545]
[84.59391785 46.36004639]
[94.61027527 44.97667694]
[104.61669922 45.43014526]
[114.28226471 47.67111206]
[123.29354095 51.59169769]
[131.36474609 57.03015518]
[138.24678040 63.77727890]
[150.49522400 55.11845016]
[162.74368286 46.45961761]
[174.99214172 37.80078888]
[182.30075073 20.90631104]
[199.81842041 19.96534538]
[211.92506409 11.10930920]
[224.03169250 2.25327325]
[236.13833618 -6.60276222]
[238.49703979 -23.92955017]
[252.37974548 -33.99723816]
[268.91760254 -30.97688866]
[280.87924194 -40.02780533]
[292.84088135 -49.07872391]
[304.80252075 -58.12964249]
[316.76416016 -67.18055725]
[328.72579956 -76.23147583]
[340.68743896 -85.28239441]
[352.64907837 -94.33331299]
[364.61071777 -103.38423157]
[363.39151001 -114.00818634]
[366.67456055 -124.10046387]
[373.80154419 -131.85476685]
[383.43273926 -135.91268921]
[393.79840088 -135.60150146]
[403.02389526 -131.04472351]
[415.41094971 -139.50407410]
[427.79800415 -147.96342468]
[440.18508911 -156.42279053]
[452.57214355 -164.88214111]
[457.90377808 -172.31707764]
[465.22897339 -173.37628174]
[477.75140381 -181.63394165]
[490.27383423 -189.89160156]
[502.79623413 -198.14926147]
[515.31866455 -206.40693665]
[514.91833496 -220.19290161]
[521.33459473 -232.27882385]
[532.79522705 -239.55485535]
[546.24621582 -240.20889282]
[558.16540527 -234.17686462]
[563.73498535 -241.43525696]
[571.09063721 -242.25669861]
[583.87390137 -250.10452271]
[596.65716553 -257.95236206]
[609.44042969 -265.80020142]
[608.33843994 -279.75244141]
[613.33447266 -292.75515747]
[623.39929199 -302.28881836]
[636.52758789 -306.53250122]
[650.13726807 -304.71151733]
[661.57720947 -297.23812866]
[674.48590088 -304.87792969]
[687.39453125 -312.51773071]
[700.30322266 -320.15753174]
[701.65679932 -337.01083374]
[712.67572021 -349.61486816]
[728.87243652 -353.13732910]
[743.82794189 -346.38473511]
[756.61114502 -354.23257446]
[769.39440918 -362.08038330]
[782.17767334 -369.92822266]
[794.96093750 -377.77606201]
[807.74420166 -385.62387085]
[808.81481934 -401.10397339]
[818.80572510 -412.97668457]
[833.87518311 -416.67672729]
[848.22875977 -410.78134155]
[856.34710693 -397.55743408]
[855.10858154 -382.08984375]
[844.98950195 -370.32623291]
[829.88073730 -366.78988647]
[815.59197998 -372.84063721]
[802.80877686 -364.99279785]
[790.02551270 -357.14495850]
[777.24224854 -349.29714966]
[764.45898438 -341.44931030]
[751.67572021 -333.60147095]
[751.87707520 -320.24438477]
[745.39697266 -308.43908691]
[733.83587646 -301.32379150]
[720.16058350 -300.85012817]
[707.94299316 -307.24887085]
[695.03436279 -299.60906982]
[682.12567139 -291.96926880]
[669.21704102 -284.32946777]
[669.78857422 -268.18716431]
[662.10083008 -253.87493896]
[648.16674805 -245.34022522]
[631.73651123 -244.99095154]
[617.28826904 -253.01693726]
[604.50500488 -245.16909790]
[591.72174072 -237.32127380]
[578.93847656 -229.47343445]
[566.21917725 -221.52236938]
[565.73828125 -205.12016296]
[555.47674561 -192.10307312]
[539.31958008 -187.71879578]
[523.57635498 -193.88450623]
[511.05389404 -185.62684631]
[498.53149414 -177.36918640]
[486.00906372 -169.11152649]
[473.48663330 -160.85386658]
[461.03149414 -152.49508667]
[448.64443970 -144.03572083]
[436.25735474 -135.57637024]
[423.87030029 -127.11701202]
[411.48324585 -118.65766144]
[409.30810547 -99.31040192]
[393.37335205 -87.60189056]
[373.66165161 -91.42259216]
[361.70001221 -82.37167358]
[349.73837280 -73.32075500]
[337.77673340 -64.26983643]
[325.81506348 -55.21891785]
[313.85342407 -46.16799927]
[301.89178467 -37.11708450]
[289.93014526 -28.06616402]
[277.96850586 -19.01524734]
[278.00170898 -6.12177277]
[270.48684692 4.59401274]
[257.98690796 9.08691788]
[244.99436951 5.50387383]
[232.88772583 14.35990906]
[220.78109741 23.21594429]
[208.67445374 32.07197952]
[206.50755310 43.98194504]
[196.48138428 51.45776367]
[183.65097046 50.04924393]
[171.40251160 58.70807266]
[159.15405273 67.36690521]
[146.90560913 76.02573395]
[153.78492737 96.55686188]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 26]
[5 25]
[6 24]
[8 23]
[9 22]
[10 21]
[11 20]
[12 19]
[35 47]
[36 46]
[37 45]
[38 44]
[39 43]
[61 192]
[62 191]
[63 190]
[64 189]
[66 186]
[67 185]
[68 184]
[69 183]
[72 179]
[73 178]
[74 177]
[75 176]
[76 175]
[77 174]
[78 173]
[79 172]
[80 171]
[86 168]
[87 167]
[88 166]
[89 165]
[90 164]
[92 163]
[93 162]
[94 161]
[95 160]
[96 159]
[101 155]
[103 154]
[104 153]
[105 152]
[106 151]
[112 146]
[113 145]
[114 144]
[115 143]
[119 138]
[120 137]
[121 136]
[122 135]
[123 134]
[124 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
