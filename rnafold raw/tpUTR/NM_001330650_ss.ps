%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 01:38:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCAUCUUGAACCGGGGCUGGGUAAACUGAGGCUGCAACCUGCUGGACUGCAUUCCCAGGGGGUUGAGGCUUUCUAAGUCACAGGAUGAGACAGGUCACAACAUACA\
) } def
/len { sequence length } bind def

/coor [
[145.95899963 243.44035339]
[157.07647705 233.18087769]
[150.79167175 219.56098938]
[144.31124878 206.03308105]
[137.63656616 192.59997559]
[130.96186829 179.16687012]
[124.28717804 165.73374939]
[117.61248779 152.30064392]
[110.93779755 138.86752319]
[104.26310730 125.43441772]
[92.66952515 124.72544861]
[82.56295013 119.00086212]
[69.64522552 126.62532043]
[56.72749710 134.24977112]
[54.33877945 149.70384216]
[42.54124451 159.96795654]
[26.90531921 160.19572449]
[14.81381321 150.27960205]
[11.97596455 134.90167236]
[19.73171997 121.32292938]
[34.41904831 115.95484161]
[49.10303879 121.33204651]
[62.02076721 113.70758820]
[74.93849945 106.08313751]
[74.99521637 93.68777466]
[80.82855988 82.75067139]
[91.09090424 75.79852295]
[90.22673035 60.82343674]
[89.36254883 45.84835052]
[87.85195923 30.92460632]
[85.69779205 16.08009338]
[83.54361725 1.23558128]
[81.38944244 -13.60893059]
[79.23527527 -28.45344353]
[77.08110046 -43.29795456]
[67.44213867 -55.84391022]
[73.27145386 -69.55042267]
[71.11727905 -84.39493561]
[68.96311188 -99.23944092]
[66.80893707 -114.08395386]
[64.65476990 -128.92846680]
[62.50059509 -143.77297974]
[52.86163330 -156.31893921]
[58.69094849 -170.02545166]
[56.53677750 -184.86996460]
[54.38260651 -199.71447754]
[52.22843170 -214.55897522]
[38.14454269 -220.85562134]
[29.71977425 -233.77949524]
[29.64243507 -249.20666504]
[37.93720627 -262.21438599]
[51.95726013 -268.65188599]
[67.22884369 -266.46505737]
[78.87885284 -256.35165405]
[83.18981171 -241.53884888]
[78.78610229 -226.75334167]
[67.07294464 -216.71315002]
[69.22711945 -201.86863708]
[71.38128662 -187.02412415]
[73.53546143 -172.17961121]
[83.02033997 -160.69543457]
[77.34510803 -145.92715454]
[79.49927521 -131.08264160]
[81.65345001 -116.23812866]
[83.80762482 -101.39361572]
[85.96179199 -86.54910278]
[88.11596680 -71.70458984]
[97.60084534 -60.22041321]
[91.92561340 -45.45212555]
[94.07978058 -30.60761452]
[96.23395538 -15.76310253]
[98.38813019 -0.91859078]
[100.54229736 13.92592144]
[102.69647217 28.77043343]
[105.44101715 31.20857430]
[107.06492615 35.16247177]
[106.83866882 40.05301285]
[104.33763123 44.98416901]
[105.20181274 59.95925522]
[106.06599426 74.93434143]
[121.02841187 85.07051849]
[125.66397858 102.53841400]
[117.69622040 118.75971985]
[124.37091064 132.19284058]
[131.04560852 145.62594604]
[137.72029114 159.05906677]
[144.39498901 172.49217224]
[151.06967163 185.92529297]
[157.74436951 199.35839844]
[164.46754456 205.77041626]
[164.41156006 213.27618408]
[170.69636536 226.89607239]
[185.71665955 225.09443665]
[200.55815125 228.02450562]
[213.76681519 235.39920044]
[224.04861450 246.49604797]
[230.39624023 260.22787476]
[232.18780518 275.24935913]
[229.24780273 290.08889771]
[221.86424255 303.29260254]
[210.76052856 313.56698608]
[197.02445984 319.90539551]
[182.00175476 321.68688965]
[167.16419983 318.73693848]
[153.96542358 311.34454346]
[143.69851685 300.23394775]
[137.36929321 286.49362183]
[135.59786987 271.46972656]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 92]
[3 91]
[4 89]
[5 88]
[6 87]
[7 86]
[8 85]
[9 84]
[10 83]
[12 24]
[13 23]
[14 22]
[27 80]
[28 79]
[29 78]
[30 74]
[31 73]
[32 72]
[33 71]
[34 70]
[35 69]
[37 67]
[38 66]
[39 65]
[40 64]
[41 63]
[42 62]
[44 60]
[45 59]
[46 58]
[47 57]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
