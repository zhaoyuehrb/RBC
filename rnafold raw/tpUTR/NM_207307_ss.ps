%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 09:10:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUAGCCAGGUGUUGCCGGACCCAGCCUUCCUGGGCCAGGGGCCAGUGCAGCCAGCGGCCCAGAGCCCAGACACAAGAGGAGUGUCAAAGAGUCAAACUAAAGAAAUCCUUUCAAAGAGGGAUGGACCGGGGGCCAGUUCCCUCUGGACUCAAAGUGUCCAGUGUCUCAGAGGGUAGAUGUGUCCAAGGAAUGACGUGCAGUUUUUGACUAUUUCCCUCCCCUGACCUCUGCCCUUUCUACAUAAAGCAGGUUG\
GAGUUUUUCUCAUUUCA\
) } def
/len { sequence length } bind def

/coor [
[99.18184662 479.19183350]
[87.06320190 488.54049683]
[71.98614502 491.17504883]
[57.41527557 486.49014282]
[46.69887161 475.56234741]
[42.29948044 460.90274048]
[45.22805405 445.88000488]
[54.81162643 433.94628906]
[68.84796143 427.84384155]
[69.88282776 412.87957764]
[70.91769409 397.91531372]
[71.95256805 382.95108032]
[72.98743439 367.98681641]
[61.19634628 361.13488770]
[53.46414948 349.82125854]
[51.34291458 336.21606445]
[55.30175400 322.95886230]
[64.62455750 312.64651489]
[77.53878021 307.32452393]
[78.74578094 292.37316895]
[79.95278168 277.42181396]
[81.15978241 262.47045898]
[82.28073120 247.51240540]
[83.31559753 232.54814148]
[84.35046387 217.58387756]
[85.38533020 202.61962891]
[86.42019653 187.65536499]
[87.45506287 172.69110107]
[88.48993683 157.72685242]
[72.62448120 152.11000061]
[58.99704361 142.23301697]
[48.72169876 128.90339661]
[34.82257843 134.54382324]
[20.92346001 140.18426514]
[7.02433968 145.82469177]
[-6.87478018 151.46511841]
[-20.77389908 157.10556030]
[-24.60517502 172.02626038]
[-36.35031509 181.71672058]
[-51.37175751 182.62237549]
[-63.89618683 174.60510254]
[-77.79530334 180.24552917]
[-91.69442749 185.88597107]
[-105.59354401 191.52639771]
[-119.49266815 197.16682434]
[-125.71204376 211.44818115]
[-139.88807678 216.97038269]
[-153.46484375 210.95315552]
[-167.36395264 216.59358215]
[-177.00805664 229.85719299]
[-193.28613281 227.86810303]
[-199.45268250 212.67251587]
[-189.16409302 199.90235901]
[-173.00439453 202.69445801]
[-159.10527039 197.05403137]
[-153.56114197 183.27729797]
[-139.54580688 177.35910034]
[-125.13309479 183.26771545]
[-111.23397827 177.62727356]
[-97.33485413 171.98684692]
[-83.43573761 166.34642029]
[-69.53661346 160.70597839]
[-66.14097595 146.22814941]
[-54.73641205 136.40980530]
[-39.55982208 135.17510986]
[-26.41433144 143.20643616]
[-12.51521206 137.56600952]
[1.38390803 131.92556763]
[15.28302765 126.28514099]
[29.18214798 120.64470673]
[43.08126831 115.00427246]
[41.66038513 107.83323669]
[41.13933945 100.54137421]
[41.52617264 93.24116516]
[42.81491470 86.04520416]
[44.98568726 79.06448364]
[48.00500870 72.40667725]
[35.75912476 63.74421310]
[23.51323700 55.08175278]
[11.26735115 46.41928864]
[-0.97853518 37.75682449]
[-13.22442150 29.09436226]
[-26.12727928 32.88051987]
[-38.67547989 28.61767197]
[-46.37275314 18.06934357]
[-46.59737015 5.20752287]
[-58.74276352 -3.59528518]
[-71.47182465 1.63783801]
[-85.01815796 -0.07886038]
[-95.86623383 -8.19231701]
[-101.25392914 -20.50345039]
[-99.87542725 -33.76228714]
[-111.91871643 -42.70427322]
[-123.96201324 -51.64625931]
[-140.28344727 -56.23395920]
[-140.39326477 -73.18755341]
[-124.13262177 -77.98629761]
[-115.02002716 -63.68955231]
[-102.97673035 -54.74756241]
[-90.93344116 -45.80557632]
[-75.41619873 -51.21358871]
[-59.57842255 -46.24427795]
[-49.73668289 -32.67141342]
[-49.93995667 -15.74067783]
[-37.79456329 -6.93787003]
[-21.29678154 -10.28756905]
[-7.21372557 -0.46059147]
[-4.56195831 16.84847450]
[7.68392801 25.51093864]
[19.92981339 34.17340088]
[32.17570114 42.83586502]
[44.42158508 51.49832916]
[56.66747284 60.16078949]
[62.64260864 53.23109818]
[69.73233032 47.20999527]
[77.79633331 42.27737045]
[86.66526794 38.59108353]
[84.94292450 23.69029236]
[83.22058105 8.78950310]
[81.49823761 -6.11128712]
[79.77589417 -21.01207733]
[78.05355072 -35.91286850]
[76.33121490 -50.81365585]
[74.43751526 -65.69364166]
[72.37271118 -80.55084991]
[70.30790710 -95.40805054]
[66.04128265 -103.44203949]
[68.30584717 -110.44799805]
[66.41214752 -125.32798004]
[58.41455460 -140.27705383]
[70.56545258 -152.10041809]
[85.29045868 -143.69741821]
[81.29213715 -127.22167969]
[83.18582916 -112.34169769]
[85.16511536 -97.47285461]
[87.22991943 -82.61564636]
[89.29472351 -67.75844574]
[92.46744537 -64.23362732]
[93.48307800 -58.68916321]
[91.23200226 -52.53599930]
[92.95434570 -37.63520813]
[94.67668915 -22.73441887]
[96.39903259 -7.83362961]
[98.12136841 7.06716013]
[99.84371185 21.96795082]
[101.56605530 36.86874008]
[116.41114044 39.01899338]
[122.29063416 25.21930122]
[128.17013550 11.41961002]
[134.04963684 -2.38008118]
[126.80818939 -16.23993111]
[130.22032166 -31.50070953]
[142.67494202 -40.95674133]
[158.29135132 -40.14318085]
[169.69595337 -29.44416428]
[171.50384521 -13.91144085]
[162.86140442 -0.87908685]
[147.84931946 3.49941778]
[141.96983337 17.29911041]
[136.09033203 31.09880066]
[130.21083069 44.89849472]
[149.77543640 64.99539948]
[158.14349365 90.82369232]
[173.13728333 90.39221954]
[188.13107300 89.96073914]
[203.12487793 89.52925873]
[211.16546631 78.75115204]
[223.75790405 74.62081909]
[236.24826050 78.42952728]
[244.15446472 88.57688141]
[259.15222168 88.31797028]
[274.14999390 88.05905914]
[289.14776611 87.80014801]
[304.14553833 87.54123688]
[319.14331055 87.28233337]
[334.14105225 87.02342224]
[349.13882446 86.76451111]
[364.13659668 86.50559998]
[379.13436890 86.24668884]
[387.62405396 82.97956848]
[394.30596924 86.07209778]
[402.83270264 82.90287781]
[409.47857666 86.07209778]
[424.47833252 86.15840149]
[439.47808838 86.24470520]
[448.70989990 73.91264343]
[463.26293945 69.43355560]
[477.49456787 74.32483673]
[486.01510620 86.51248169]
[501.01486206 86.59878540]
[516.01458740 86.68508911]
[527.21020508 75.85477448]
[542.42089844 76.15598297]
[552.67694092 86.89604187]
[567.67669678 86.98235321]
[581.52117920 79.32458496]
[594.20367432 87.13498688]
[609.20343018 87.22129059]
[615.07427979 84.31231689]
[620.69647217 84.71694946]
[624.54638672 87.48616028]
[639.54016113 87.91764069]
[654.53399658 88.34911346]
[669.52777100 88.78059387]
[685.53424072 83.19236755]
[695.33514404 97.02635956]
[684.75494385 110.27384186]
[669.09631348 103.77438354]
[654.10247803 103.34291077]
[639.10870361 102.91143036]
[624.11492920 102.47994995]
[609.11712646 102.22104645]
[594.11737061 102.13473511]
[581.34582520 109.79867554]
[567.59039307 101.98210144]
[552.59063721 101.89579773]
[542.21166992 112.51712799]
[526.99853516 112.64327240]
[515.92828369 101.68484497]
[500.92855835 101.59853363]
[485.92880249 101.51222992]
[477.26858521 113.60102081]
[462.98159790 118.32820129]
[448.48107910 113.68193817]
[439.39178467 101.24446106]
[424.39202881 101.15815735]
[409.39227295 101.07184601]
[394.39227295 101.07184601]
[379.39328003 101.24446106]
[364.39550781 101.50336456]
[349.39773560 101.76227570]
[334.39996338 102.02118683]
[319.40219116 102.28009796]
[304.40444946 102.53900909]
[289.40667725 102.79791260]
[274.40890503 103.05682373]
[259.41113281 103.31573486]
[244.41337585 103.57464600]
[233.23664856 116.16345215]
[216.07456970 116.76763153]
[203.55635071 104.52305603]
[188.56256104 104.95452881]
[173.56877136 105.38600922]
[158.57496643 105.81748962]
[155.60049438 119.32498169]
[149.55624390 131.76551819]
[140.77593994 142.45225525]
[129.74433899 150.79513550]
[117.07050323 156.33354187]
[103.45419312 158.76171875]
[102.41932678 173.72596741]
[101.38446045 188.69023132]
[100.34959412 203.65449524]
[99.31472015 218.61874390]
[98.27985382 233.58300781]
[97.24498749 248.54727173]
[99.76814270 257.28698730]
[96.11113739 263.67745972]
[94.90413666 278.62881470]
[93.69714355 293.58016968]
[92.49014282 308.53152466]
[106.20505524 317.79818726]
[113.32469177 332.63653564]
[111.98668671 348.94570923]
[102.65174866 362.27124023]
[87.95169067 369.02166748]
[86.91682434 383.98593140]
[85.88195801 398.95019531]
[84.84709167 413.91445923]
[83.81222534 428.87872314]
[96.87491608 436.85522461]
[104.72454071 449.99453735]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 270]
[10 269]
[11 268]
[12 267]
[13 266]
[19 261]
[20 260]
[21 259]
[22 258]
[23 256]
[24 255]
[25 254]
[26 253]
[27 252]
[28 251]
[29 250]
[32 71]
[33 70]
[34 69]
[35 68]
[36 67]
[37 66]
[41 62]
[42 61]
[43 60]
[44 59]
[45 58]
[48 55]
[49 54]
[77 113]
[78 112]
[79 111]
[80 110]
[81 109]
[82 108]
[86 105]
[87 104]
[92 100]
[93 99]
[94 98]
[117 146]
[118 145]
[119 144]
[120 143]
[121 142]
[122 141]
[123 140]
[124 137]
[125 136]
[126 135]
[128 134]
[129 133]
[147 161]
[148 160]
[149 159]
[150 158]
[163 244]
[164 243]
[165 242]
[166 241]
[170 238]
[171 237]
[172 236]
[173 235]
[174 234]
[175 233]
[176 232]
[177 231]
[178 230]
[179 229]
[181 228]
[183 227]
[184 226]
[185 225]
[189 221]
[190 220]
[191 219]
[194 216]
[195 215]
[197 213]
[198 212]
[201 211]
[202 210]
[203 209]
[204 208]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
