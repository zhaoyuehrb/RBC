%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 03:08:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAAGAUUCACGUCUUUCUCUUUGUUUUAUUUUUCUUUCUGGUCCCCAUUGCCACCAGGGUGAAAUGUGCCGUGAAAGACACCUAUAGUUGCUUUAUCAUGAGAGGCAAAUGUCGACAUGAGUGUCAUGAUUUUGAAAAACCAAUUGGUUUCUGCACAAAACUAAAUGCCAACUGUUAUAUGUAG\
) } def
/len { sequence length } bind def

/coor [
[258.35012817 224.63397217]
[246.08296204 216.00167847]
[233.81579590 207.36938477]
[221.54861450 198.73709106]
[209.56777954 200.49848938]
[199.27323914 193.38931274]
[196.50387573 180.77798462]
[184.38345337 171.94082642]
[172.26303101 163.10368347]
[160.14260864 154.26652527]
[148.02218628 145.42936707]
[133.17979431 144.18313599]
[126.58724976 129.80090332]
[114.46682739 120.96374512]
[102.34639740 112.12658691]
[112.11277008 123.51158142]
[118.18637085 137.22695923]
[120.05249023 152.11041260]
[117.55299377 166.90071106]
[110.89970398 180.34442139]
[100.65643311 191.30232239]
[87.69123840 198.84577942]
[73.10282898 202.33552551]
[58.12748337 201.47584534]
[44.03426361 196.33959961]
[32.01747513 187.36203003]
[23.09546471 175.30392456]
[18.02431488 161.18714905]
[17.23376846 146.20799255]
[20.79082298 131.63584900]
[28.39404106 118.70561218]
[39.39909744 108.51303101]
[52.87338638 101.92185974]
[67.67504883 99.49066162]
[82.55350494 101.42652130]
[68.52140045 96.12557983]
[54.48929596 90.82463837]
[40.45719147 85.52368927]
[26.42508507 80.22274780]
[12.39297962 74.92180634]
[-1.68315864 69.73891449]
[-15.80233574 64.67444611]
[-29.92151260 59.60997772]
[-44.04069138 54.54550934]
[-53.61635208 59.75971603]
[-64.26097870 58.84998703]
[-72.46793365 52.35902405]
[-75.66766357 42.62781525]
[-89.60873413 37.09189224]
[-103.54981232 31.55596924]
[-117.49088287 26.02004623]
[-129.63471985 30.40666962]
[-141.14010620 25.49304008]
[-146.04283142 14.42025471]
[-159.88893127 8.65091419]
[-173.73504639 2.88157320]
[-189.91999817 5.52339935]
[-200.08947754 -7.34181356]
[-193.78199768 -22.47943878]
[-177.48614502 -24.31718254]
[-167.96569824 -10.96453476]
[-154.11959839 -5.19519377]
[-140.27348328 0.57414716]
[-123.02713776 -2.62250352]
[-111.95496368 12.07897091]
[-98.01388550 17.61489487]
[-84.07281494 23.15081787]
[-70.13173676 28.68674278]
[-51.27327728 24.47030258]
[-38.97622299 40.42633438]
[-24.85704422 45.49080276]
[-10.73786736 50.55526733]
[3.38130951 55.61973572]
[10.75431252 54.91722107]
[17.69392395 60.88969803]
[31.72602844 66.19064331]
[45.75813675 71.49158478]
[59.79024124 76.79252625]
[73.82234955 82.09347534]
[87.85445404 87.39441681]
[94.45207977 83.82772827]
[83.59029388 73.48260498]
[90.07263184 59.95562363]
[104.94071198 61.94065094]
[107.64734650 76.69435120]
[114.24497223 73.12766266]
[117.49498749 58.48397827]
[120.74499512 43.84029770]
[116.18154144 28.69152069]
[126.49263000 17.94299889]
[129.74264526 3.29931760]
[132.99264526 -11.34436417]
[136.24266052 -25.98804665]
[139.49267578 -40.63172913]
[142.74269104 -55.27540970]
[145.99269104 -69.91909027]
[136.33309937 -82.21649933]
[136.88970947 -97.84417725]
[147.39971924 -109.42320251]
[162.90060425 -111.48632812]
[176.07333374 -103.05939484]
[180.69815063 -88.12135315]
[174.59135437 -73.72548676]
[160.63638306 -66.66908264]
[157.38636780 -52.02539825]
[154.13635254 -37.38171768]
[150.88635254 -22.73803520]
[147.63633728 -8.09435368]
[144.38632202 6.54932880]
[141.13630676 21.19301033]
[145.93223572 35.29437256]
[135.38867188 47.09030914]
[132.13867188 61.73398972]
[128.88865662 76.37767029]
[122.84228516 91.85693359]
[111.18355560 100.00616455]
[123.30397797 108.84331512]
[135.42440796 117.68047333]
[151.13371277 119.55879974]
[156.85932922 133.30894470]
[168.97975159 142.14610291]
[181.10018921 150.98324585]
[193.22061157 159.82040405]
[205.34103394 168.65756226]
[223.68264771 170.17796326]
[230.18090820 186.46992493]
[242.44808960 195.10221863]
[254.71525574 203.73451233]
[266.98242188 212.36680603]
[259.95361328 199.11553955]
[260.81555176 184.14033508]
[269.31829834 171.78302002]
[282.99664307 165.62646484]
[297.88470459 167.45565796]
[309.66586304 176.74026489]
[314.92437744 190.78833008]
[312.13558960 205.52679443]
[302.10806274 216.68246460]
[287.75158691 221.02081299]
[302.51882935 223.65310669]
[317.28604126 226.28540039]
[332.05328369 228.91769409]
[346.82049561 231.54998779]
[362.04861450 225.46415710]
[374.76397705 235.82037354]
[371.88616943 251.96504211]
[356.37557983 257.28991699]
[344.18820190 246.31721497]
[329.42098999 243.68492126]
[314.65374756 241.05262756]
[299.88653564 238.42033386]
[285.11929321 235.78804016]
[276.90399170 248.33828735]
[285.22442627 260.81906128]
[293.54489136 273.29986572]
[301.86532593 285.78063965]
[310.18579102 298.26144409]
[325.57214355 299.01370239]
[337.42669678 308.57000732]
[341.33483887 323.10241699]
[336.00015259 336.98330688]
[344.32061768 349.46411133]
[352.64105225 361.94488525]
[367.74929810 359.77612305]
[382.29977417 364.38552856]
[393.40347290 374.85791016]
[398.85571289 389.11398315]
[397.57397461 404.32321167]
[389.81274414 417.46572876]
[377.11303711 425.93212891]
[361.99636841 428.04141235]
[347.46417236 423.37472534]
[336.40182495 412.85867310]
[331.00573730 398.58123779]
[332.34735107 383.37719727]
[340.16027832 370.26535034]
[331.83981323 357.78454590]
[323.51937866 345.30377197]
[308.65444946 344.88916016]
[296.74313354 335.69216919]
[292.48147583 321.07397461]
[297.70501709 306.58187866]
[289.38455200 294.10110474]
[281.06408691 281.62030029]
[272.74365234 269.13952637]
[264.42318726 256.65872192]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 129]
[2 128]
[3 127]
[4 126]
[7 124]
[8 123]
[9 122]
[10 121]
[11 120]
[13 118]
[14 117]
[15 116]
[35 80]
[36 79]
[37 78]
[38 77]
[39 76]
[40 75]
[41 73]
[42 72]
[43 71]
[44 70]
[48 68]
[49 67]
[50 66]
[51 65]
[54 63]
[55 62]
[56 61]
[86 114]
[87 113]
[88 112]
[90 110]
[91 109]
[92 108]
[93 107]
[94 106]
[95 105]
[96 104]
[139 152]
[140 151]
[141 150]
[142 149]
[143 148]
[153 186]
[154 185]
[155 184]
[156 183]
[157 182]
[161 178]
[162 177]
[163 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
