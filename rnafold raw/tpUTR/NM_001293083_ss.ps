%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Sep  9 23:33:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAGUCCAUGCUGCCUGGCUUUCCUCCUGCUACCAACAGCCCUCCCCUUGGGCUGGCUACCAGUUCUUUGUUUCUAUCUUCUAGAAUAUAUGCAAGAUGCUAGGAAUAUUCUGGCUAUUGUGUUCAGAAAUCACUUUCAACAAGACGAGCAGAGCUGUAAUUUUCCACUGAAAUAAACAAGUUCUAUAACAGA\
) } def
/len { sequence length } bind def

/coor [
[150.12095642 201.79492188]
[144.62356567 216.03364563]
[133.48675537 226.47080994]
[118.92175293 231.03408813]
[103.82045746 228.81744385]
[91.18122864 220.26100159]
[83.51360321 207.06364441]
[82.33999634 191.84570312]
[87.89342499 177.62873840]
[99.07125092 167.23551941]
[113.65410614 162.72962952]
[115.83253479 147.88865662]
[118.01096344 133.04768372]
[111.29564667 129.70785522]
[97.86501312 123.02816772]
[91.14969635 119.68833160]
[80.62932587 130.38046265]
[70.10894775 141.07260132]
[59.58857346 151.76472473]
[63.09006882 166.78947449]
[57.89120102 181.31446838]
[45.65090942 190.70483398]
[30.27503014 191.96412659]
[16.66994667 184.69052124]
[9.17699337 171.20500183]
[10.18714333 155.81074524]
[19.37806320 143.42001343]
[33.81696320 137.98661804]
[48.89644241 141.24435425]
[59.41681671 130.55221558]
[69.93718719 119.86009216]
[80.45756531 109.16795349]
[77.28181458 102.37350464]
[63.69280624 108.72479248]
[57.34172440 95.13568878]
[70.93031311 88.78459167]
[67.75456238 81.99014282]
[52.80370331 83.20334625]
[37.85284805 84.41654968]
[22.90198898 85.62976074]
[7.95113277 86.84296417]
[-6.99972439 88.05617523]
[-15.90140533 100.91284943]
[-30.99815941 104.98985291]
[-45.16176224 98.36215973]
[-51.70459366 84.15915680]
[-47.53733063 69.08706665]
[-34.62762070 60.26247025]
[-19.07104111 61.85207367]
[-8.21293068 73.10531616]
[6.73792601 71.89210510]
[21.68878365 70.67890167]
[36.63964081 69.46569824]
[51.59049606 68.25248718]
[66.54135132 67.03928375]
[51.74237442 64.59178925]
[41.53814697 53.59752655]
[40.19897079 38.65742874]
[48.28527069 26.02367401]
[62.41306305 20.98328781]
[76.67009735 25.64558983]
[85.09002686 38.05948257]
[84.14878082 53.03112030]
[88.69152832 38.73554611]
[93.23428345 24.43997192]
[97.77703094 10.14439964]
[102.08769989 -4.22286081]
[106.16514587 -18.65803909]
[110.24259949 -33.09321976]
[114.32005310 -47.52839661]
[118.39749908 -61.96357727]
[122.47495270 -76.39875793]
[108.44130707 -86.95223999]
[99.54637909 -102.05073547]
[97.12737274 -119.37124634]
[101.52752686 -136.26087952]
[112.04770660 -150.14323425]
[127.05734253 -158.91130066]
[144.24711609 -161.24736023]
[147.61874390 -175.86352539]
[150.99038696 -190.47967529]
[154.36201477 -205.09584045]
[153.24133301 -214.17596436]
[157.90840149 -219.92045593]
[161.51628113 -234.48010254]
[165.12414551 -249.03974915]
[168.73202515 -263.59939575]
[167.36886597 -267.75601196]
[167.40451050 -271.72848511]
[168.60746765 -275.09741211]
[170.63330078 -277.56256104]
[173.07354736 -278.96945190]
[177.61630249 -293.26501465]
[182.15905762 -307.56057739]
[186.70179749 -321.85617065]
[179.17025757 -333.03292847]
[179.45155334 -346.31283569]
[187.21867371 -356.84719849]
[199.45236206 -360.91900635]
[204.22601318 -375.13912964]
[208.99964905 -389.35928345]
[213.77330017 -403.57940674]
[218.54693604 -417.79953003]
[223.32058716 -432.01968384]
[228.09423828 -446.23980713]
[227.40293884 -463.17965698]
[243.48939514 -468.53335571]
[253.08705139 -454.55761719]
[242.31437683 -441.46618652]
[237.54072571 -427.24603271]
[232.76707458 -413.02590942]
[227.99343872 -398.80575562]
[223.21978760 -384.58563232]
[218.44615173 -370.36547852]
[213.67250061 -356.14535522]
[221.79887390 -341.42852783]
[216.67268372 -325.06362915]
[200.99737549 -317.31341553]
[196.45462036 -303.01785278]
[191.91188049 -288.72225952]
[187.36912537 -274.42669678]
[183.29167175 -259.99151611]
[179.68379211 -245.43186951]
[176.07592773 -230.87222290]
[172.46804810 -216.31257629]
[168.97817993 -201.72419739]
[165.60653687 -187.10804749]
[162.23490906 -172.49188232]
[158.86326599 -157.87573242]
[169.71174622 -151.45434570]
[178.32710266 -142.22659302]
[184.00569153 -130.93136597]
[186.27955627 -118.47698975]
[184.95503235 -105.86821747]
[180.12910461 -94.12509918]
[172.18251038 -84.20053101]
[161.74957275 -76.90290833]
[149.66770935 -72.83026886]
[136.91012573 -72.32130432]
[132.83268738 -57.88612747]
[128.75523376 -43.45094681]
[124.67778015 -29.01576805]
[120.60032654 -14.58058834]
[116.52288055 -0.14540960]
[118.03910828 4.39705563]
[116.70779419 9.94041443]
[112.07260132 14.68715000]
[107.52985382 28.98272324]
[102.98709869 43.27829742]
[98.44435120 57.57387161]
[171.04066467 113.80046844]
[182.23107910 123.78919220]
[193.42147827 133.77792358]
[204.61189270 143.76664734]
[215.80230713 153.75538635]
[226.99272156 163.74411011]
[238.26364136 173.64190674]
[249.61433411 183.44812012]
[264.64300537 180.06503296]
[278.61868286 186.10934448]
[286.26498413 199.07075500]
[284.83007812 213.87207031]
[296.18075562 223.67828369]
[307.53146362 233.48449707]
[318.88214111 243.29071045]
[335.08233643 245.83743286]
[340.72363281 261.23574829]
[330.00271606 273.64517212]
[313.94839478 270.29998779]
[309.07592773 254.64140320]
[297.72525024 244.83518982]
[286.37454224 235.02897644]
[275.02386475 225.22276306]
[260.58786011 228.79203796]
[246.65339661 223.10917664]
[238.64349365 210.15946960]
[239.80812073 194.79881287]
[228.45742798 184.99259949]
[221.33042908 182.99594116]
[217.00398254 174.93452454]
[205.81358337 164.94578552]
[194.62316895 154.95706177]
[183.43275452 144.96833801]
[172.24234009 134.97961426]
[161.05194092 124.99087524]
[154.00193787 127.54969025]
[159.11933899 141.64976501]
[145.01918030 146.76695251]
[139.90193176 132.66731262]
[132.85192871 135.22612000]
[130.67350769 150.06709290]
[128.49507141 164.90806580]
[141.16790771 173.41467285]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 192]
[12 191]
[13 190]
[16 32]
[17 31]
[18 30]
[19 29]
[37 55]
[38 54]
[39 53]
[40 52]
[41 51]
[42 50]
[63 150]
[64 149]
[65 148]
[66 147]
[67 144]
[68 143]
[69 142]
[70 141]
[71 140]
[72 139]
[79 129]
[80 128]
[81 127]
[82 126]
[84 125]
[85 124]
[86 123]
[87 122]
[92 121]
[93 120]
[94 119]
[95 118]
[99 115]
[100 114]
[101 113]
[102 112]
[103 111]
[104 110]
[105 109]
[151 185]
[152 184]
[153 183]
[154 182]
[155 181]
[156 180]
[157 178]
[158 177]
[162 173]
[163 172]
[164 171]
[165 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
