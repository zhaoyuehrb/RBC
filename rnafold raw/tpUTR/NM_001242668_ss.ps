%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 22:55:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAAGAAAGCAAUGGCAGGAAAAGUUGAAUAAAGCAGACCCUUCAUGGUAAAUCUGGUUGGUAAAUUGCCUGUGACCACAUGUGGGACAAUCACUGGAGGAACCCCAGUUACAUUUGGUCAGAGUGUGGCGAGGGGAACCUUCUCAGGAAAGAAAAUAGAGGUCCUGUUUUAGGAAAAAAAAUAAAGAUCAGAAACCUG\
) } def
/len { sequence length } bind def

/coor [
[2.15521336 272.58566284]
[7.45003700 286.62005615]
[7.05206680 301.61477661]
[1.02025461 315.34857178]
[-9.75188446 325.78701782]
[-23.66863251 331.38381958]
[-38.66844940 331.30990601]
[-52.52935791 325.57620239]
[-63.19808960 315.03210449]
[-69.09424591 301.23950195]
[-69.34440613 286.24160767]
[-63.91248322 272.26159668]
[-75.76480865 281.45520020]
[-87.61713409 290.64880371]
[-99.46945953 299.84240723]
[-104.33792114 307.58212280]
[-111.58092499 309.08560181]
[-123.57619476 318.09188843]
[-135.57147217 327.09820557]
[-133.83590698 342.29473877]
[-139.89981079 356.22766113]
[-152.04281616 365.19503784]
[-166.94427490 366.86911011]
[-180.59100342 360.89981079]
[-192.58627319 369.90612793]
[-204.58154297 378.91241455]
[-206.55996704 394.59240723]
[-219.09738159 404.21469116]
[-234.75555420 402.07058716]
[-244.24478149 389.43215942]
[-241.93524170 373.79751587]
[-229.19717407 364.44247437]
[-213.58784485 366.91714478]
[-201.59257507 357.91085815]
[-189.59730530 348.90454102]
[-191.52226257 334.13430786]
[-185.75727844 320.29159546]
[-173.75817871 311.13253784]
[-158.68672180 309.19659424]
[-144.57777405 315.10293579]
[-132.58250427 306.09661865]
[-120.58722687 297.09033203]
[-108.66306305 287.99008179]
[-96.81073761 278.79647827]
[-84.95841217 269.60287476]
[-73.10608673 260.40927124]
[-62.33419418 249.97058105]
[-52.77283478 238.41287231]
[-43.21147537 226.85517883]
[-45.08475113 216.79898071]
[-41.02391434 207.17149353]
[-32.14919662 201.25054932]
[-21.26109314 201.19514465]
[-11.34141541 189.94348145]
[-1.42173731 178.69181824]
[8.49794102 167.44015503]
[18.41761780 156.18849182]
[28.33729744 144.93682861]
[38.25697327 133.68515015]
[35.44625473 118.95084381]
[22.08115768 112.14099121]
[8.71605968 105.33113098]
[-4.64903879 98.52127075]
[-21.50679016 96.71778870]
[-24.44047356 80.01958466]
[-9.20697117 72.57803345]
[2.16081882 85.15617371]
[15.52591705 91.96603394]
[28.89101410 98.77589417]
[42.25611115 105.58574677]
[52.52476883 94.65072632]
[62.79252625 83.71669006]
[55.15690613 70.80555725]
[47.52128220 57.89442825]
[39.88566208 44.98329926]
[31.74903870 32.38189316]
[23.12396049 20.10964966]
[14.49888134 7.83740330]
[-0.59558451 1.42732239]
[-2.32268476 -14.88062572]
[11.09427261 -24.31022072]
[25.85307312 -17.16110611]
[26.77112770 -0.78767532]
[35.39620590 11.48457050]
[44.02128601 23.75681686]
[49.18090820 9.67213345]
[63.35787201 4.77174997]
[76.11391449 12.66373539]
[78.05696869 27.53735352]
[67.75640869 38.44141006]
[52.79679108 37.34767532]
[60.43241501 50.25880814]
[68.06803131 63.16993713]
[75.70365906 76.08106995]
[92.92222595 71.12152100]
[107.80091095 75.85706329]
[116.42598724 63.58481979]
[125.05107117 51.31257629]
[133.67614746 39.04032898]
[142.30122375 26.76808357]
[139.78945923 11.39509487]
[148.71133423 -0.92783999]
[163.38261414 -3.22769070]
[172.00769043 -15.49993610]
[180.63276672 -27.77218246]
[189.25784302 -40.04442978]
[190.46458435 -58.41487122]
[206.65100098 -65.18490601]
[215.08224487 -77.59111023]
[223.51350403 -89.99732208]
[231.94474792 -102.40352631]
[240.37600708 -114.80973816]
[248.80725098 -127.21595001]
[257.23849487 -139.62216187]
[265.66973877 -152.02836609]
[274.10101318 -164.43457031]
[272.51934814 -180.39947510]
[284.11508179 -191.48631287]
[299.99298096 -189.19023132]
[307.97286987 -175.27258301]
[301.93325806 -160.40979004]
[286.50720215 -156.00332642]
[278.07595825 -143.59710693]
[269.64471436 -131.19090271]
[261.21347046 -118.78469849]
[252.78221130 -106.37848663]
[244.35095215 -93.97227478]
[235.91970825 -81.56607056]
[227.48844910 -69.15985870]
[219.05720520 -56.75365448]
[221.01446533 -44.81081390]
[214.08415222 -34.40419006]
[201.53009033 -31.41934967]
[192.90501404 -19.14710426]
[184.27993774 -6.87485743]
[175.65486145 5.39738798]
[178.46069336 19.98035431]
[169.88845825 32.54902267]
[154.57347107 35.39316177]
[145.94839478 47.66540909]
[137.32331848 59.93765259]
[128.69824219 72.20989990]
[120.07315826 84.48214722]
[118.50517273 123.27272797]
[73.60627747 121.58238220]
[88.34059143 124.39310455]
[103.07489777 127.20381927]
[117.80920410 130.01454163]
[132.54351807 132.82525635]
[141.20018005 120.29601288]
[154.20791626 112.37650299]
[169.31306458 110.43882751]
[183.89854431 114.81871033]
[195.43736267 124.75730896]
[201.93032837 138.53269958]
[202.25250244 153.75820923]
[196.34806824 167.79592896]
[185.24000549 178.21372986]
[170.85284424 183.20668030]
[155.67926025 181.90971375]
[142.34815979 174.54754639]
[133.16923523 162.39570618]
[129.73280334 147.55957031]
[114.99848938 144.74885559]
[100.26417542 141.93812561]
[85.52986908 139.12741089]
[70.79556274 136.31669617]
[82.37860107 145.84733582]
[97.01661682 149.12277222]
[109.99623108 156.64138794]
[120.12016296 167.70964050]
[126.45453644 181.30653381]
[128.41505432 196.17785645]
[125.82085419 210.95182800]
[118.91125488 224.26564026]
[108.32361603 234.89115906]
[95.03457642 241.84828186]
[80.26996613 244.49522400]
[65.39173126 242.58784485]
[51.77228928 236.30206299]
[40.66795349 226.21774292]
[33.10302734 213.26506042]
[29.77532387 198.63883972]
[30.99180412 183.68824768]
[36.64025879 169.79238892]
[46.19763947 158.23484802]
[49.50864029 143.60482788]
[39.58896255 154.85650635]
[29.66928482 166.10816956]
[19.74960709 177.35983276]
[9.82992840 188.61149597]
[-0.08974919 199.86315918]
[-10.00942707 211.11482239]
[-13.08816910 231.03086853]
[-31.65377617 236.41653442]
[-41.21513748 247.97424316]
[-50.77649689 259.53195190]
[-36.63096237 254.54154968]
[-21.64834213 255.26338196]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 46]
[13 45]
[14 44]
[15 43]
[17 42]
[18 41]
[19 40]
[24 35]
[25 34]
[26 33]
[47 197]
[48 196]
[49 195]
[53 193]
[54 192]
[55 191]
[56 190]
[57 189]
[58 188]
[59 187]
[60 70]
[61 69]
[62 68]
[63 67]
[72 94]
[73 93]
[74 92]
[75 91]
[76 85]
[77 84]
[78 83]
[96 143]
[97 142]
[98 141]
[99 140]
[100 139]
[103 136]
[104 135]
[105 134]
[106 133]
[108 130]
[109 129]
[110 128]
[111 127]
[112 126]
[113 125]
[114 124]
[115 123]
[116 122]
[145 167]
[146 166]
[147 165]
[148 164]
[149 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
