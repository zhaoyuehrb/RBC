%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Sep  9 23:27:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAGGGAACCGGCACUCUACUGAGGACAAAGCAGGGCUCACCUAGCAAUGGAAGCUCUUCAAUACUUAAGGUAGCUAAUUCAAUGUUUGUAAAAGGCAUUUACAACAGAAAACCAAAGAUUGAACUUCAGCUUCAGAUUUGUAAACCAUUCACAUCUCUGCAACUUAAAACAGUAAAUAAAGAUUAUCAAUGCACAA\
) } def
/len { sequence length } bind def

/coor [
[108.95683289 201.72747803]
[105.22648621 216.25622559]
[101.49613953 230.78497314]
[102.90650177 237.25904846]
[101.10068512 242.65942383]
[97.41369629 245.70785522]
[93.22883606 260.11227417]
[94.61611938 277.00936890]
[78.76340485 283.01998901]
[68.59918976 269.45074463]
[78.82442474 255.92739868]
[83.00929260 241.52299500]
[86.96739197 227.05462646]
[90.69773865 212.52587891]
[94.42808533 197.99713135]
[92.64068604 195.14471436]
[91.73747253 191.59556580]
[91.96397400 187.64129639]
[93.46636200 183.65382385]
[96.26678467 180.05125427]
[95.56018829 165.06790161]
[94.85359192 150.08456421]
[94.14699554 135.10121155]
[93.44039917 120.11785889]
[87.30427551 115.80532074]
[78.67899323 128.07742310]
[66.40703583 119.45194244]
[75.03202820 107.18024445]
[68.89590454 102.86770630]
[54.55901337 107.27831268]
[47.12148666 120.96483612]
[32.51900482 125.23358154]
[19.51683044 118.05869293]
[5.17993546 122.46929932]
[-9.12187672 126.99236298]
[-23.38772392 131.62762451]
[-37.65357208 136.26287842]
[-46.18880463 149.84703064]
[-62.14645004 151.50024414]
[-73.28517151 139.95431519]
[-71.06028748 124.06628418]
[-57.17854309 116.02410126]
[-42.28882599 121.99702454]
[-28.02297974 117.36177063]
[-13.75713158 112.72651672]
[-8.36230946 107.66515350]
[0.76933080 108.13240051]
[15.10622597 103.72179413]
[21.82718658 90.47927856]
[36.30400848 85.80206299]
[50.14840698 92.94141388]
[64.48530579 88.53080750]
[72.32278442 75.74120331]
[69.74384308 60.96456528]
[67.16490936 46.18792725]
[64.58596802 31.41128731]
[62.00703430 16.63464737]
[59.42809677 1.85800695]
[44.70093536 -13.70082760]
[52.57754517 -32.77251434]
[49.30539703 -47.41126633]
[46.03324890 -62.05001831]
[42.76110077 -76.68876648]
[39.48895264 -91.32752228]
[36.21680069 -105.96627045]
[31.28658676 -113.66680145]
[33.01013565 -120.86061096]
[29.96832657 -135.54895020]
[26.92651749 -150.23728943]
[16.59039116 -157.96246338]
[14.36304092 -170.26554871]
[20.90239143 -180.44882202]
[18.09167290 -195.18313599]
[15.28095245 -209.91743469]
[0.63706803 -219.47915649]
[-2.50332546 -236.34066772]
[7.32203007 -249.98492432]
[4.28022051 -264.67324829]
[-11.53347397 -268.48431396]
[-24.05863953 -278.77160645]
[-30.82136917 -293.43759155]
[-30.51459694 -309.52658081]
[-23.25041771 -323.82040405]
[-10.52750301 -333.48199463]
[-13.79965210 -348.12075806]
[-17.07180023 -362.75949097]
[-20.34394836 -377.39825439]
[-23.61609840 -392.03701782]
[-26.88824654 -406.67575073]
[-30.16039467 -421.31451416]
[-42.88103104 -431.09024048]
[-43.02516174 -447.13265991]
[-30.48222351 -457.13537598]
[-14.87408638 -453.42517090]
[-8.17397594 -438.84820557]
[-15.52164364 -424.58666992]
[-12.24949551 -409.94790649]
[-8.97734642 -395.30914307]
[-5.70519781 -380.67041016]
[-2.43304920 -366.03164673]
[0.83909941 -351.39291382]
[4.11124802 -336.75415039]
[17.76563072 -334.27319336]
[29.47917366 -326.75024414]
[37.46445847 -315.29400635]
[40.48804474 -301.61630249]
[38.06090927 -287.77627563]
[30.51717186 -275.87042236]
[18.96856308 -267.71508789]
[22.01037216 -253.02673340]
[33.66797638 -247.52549744]
[40.12244797 -236.14308167]
[38.82073212 -222.92730713]
[30.01526070 -212.72816467]
[32.82598114 -197.99385071]
[35.63669968 -183.25953674]
[47.80315781 -170.61791992]
[41.61486053 -153.27909851]
[44.65666962 -138.59075928]
[47.69847870 -123.90242004]
[50.85555267 -109.23841858]
[54.12770081 -94.59967041]
[57.39985275 -79.96091461]
[60.67200089 -65.32216644]
[63.94414902 -50.68341446]
[67.21629333 -36.04466248]
[75.40160370 -32.56469727]
[81.15121460 -25.59914589]
[83.07467651 -16.63349724]
[80.61564636 -7.65690613]
[74.20473480 -0.72092956]
[76.78367615 14.05571079]
[79.36260986 28.83234978]
[81.94155121 43.60898972]
[84.52048492 58.38563156]
[87.09941864 73.16226959]
[128.31660461 82.38899231]
[143.30920410 81.91783142]
[158.30180359 81.44667053]
[169.08723450 70.20779419]
[184.29856873 69.94354248]
[194.94665527 80.29505920]
[209.93925476 79.82389832]
[224.93185425 79.35273743]
[232.77235413 66.06627655]
[246.56167603 59.14830399]
[261.89968872 60.80632782]
[273.89208984 70.51126862]
[278.71212769 85.16632080]
[274.82177734 100.09511566]
[263.46243286 110.53391266]
[248.25880432 113.15174866]
[234.06230164 107.11326599]
[225.40301514 94.34533691]
[210.41041565 94.81649780]
[195.41781616 95.28765869]
[185.44071960 106.28734589]
[170.24279785 106.97874451]
[158.77296448 96.43927002]
[143.78036499 96.91043091]
[128.78776550 97.38159180]
[123.69676208 102.88900757]
[137.07989502 109.66336060]
[152.07551575 110.02568054]
[163.74642944 119.44850922]
[167.26106262 134.03094482]
[161.16439819 147.73606873]
[147.98037720 154.89019775]
[133.16696167 152.53160095]
[122.85669708 141.63671875]
[121.31825256 126.71421051]
[113.51475525 113.90384674]
[108.42374420 119.41126251]
[109.13034058 134.39460754]
[109.83693695 149.37796021]
[110.54354095 164.36131287]
[111.25013733 179.34465027]
[117.23806763 165.59167480]
[126.39917755 153.71420288]
[138.18025208 144.42948914]
[151.86991882 138.29815674]
[166.64151001 135.69047546]
[181.60305786 136.76390076]
[195.85110474 141.45359802]
[208.52526855 149.47640991]
[218.86024475 160.34783936]
[226.23194885 173.41145325]
[230.19523621 187.87840271]
[230.51078796 202.87507629]
[227.15956116 217.49592590]
[220.34390259 230.85806274]
[210.47537231 242.15461731]
[198.14988708 250.70346069]
[184.11172485 255.98834229]
[169.20858765 257.69015503]
[154.34037781 255.70614624]
[140.40490723 250.15611267]
[128.24369812 241.37516785]
[118.59107971 229.89356995]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 15]
[2 14]
[3 13]
[6 12]
[7 11]
[20 177]
[21 176]
[22 175]
[23 174]
[24 173]
[29 52]
[30 51]
[33 48]
[34 47]
[35 45]
[36 44]
[37 43]
[53 136]
[54 135]
[55 134]
[56 133]
[57 132]
[58 131]
[60 126]
[61 125]
[62 124]
[63 123]
[64 122]
[65 121]
[67 120]
[68 119]
[69 118]
[72 116]
[73 115]
[74 114]
[77 110]
[78 109]
[84 102]
[85 101]
[86 100]
[87 99]
[88 98]
[89 97]
[90 96]
[137 161]
[138 160]
[139 159]
[142 156]
[143 155]
[144 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
