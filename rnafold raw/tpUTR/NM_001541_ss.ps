%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 09:15:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGCCACAGACCCAGCACCCAGCAAAUCCCUCUCUACCUCCCAAGGUGAUAUGGGCAGCUGCCCACCACUCCAGAGGUAGCAGCAUCCUUGGGGGAAGGGAAAGGUGCAUGGUCCACAAUGUAUGGUUUGGUCCCAUGGGACAUGUCAUAGCCUUGGUUUAGUUUUGGGUGGAGCUGAAUAAACCCAAAUCUCAGGGC\
) } def
/len { sequence length } bind def

/coor [
[117.49660492 141.67407227]
[105.70067596 144.38583374]
[93.72903442 143.85676575]
[82.44713593 140.18928528]
[72.65345764 133.71040344]
[65.02303314 124.94352722]
[60.06101990 114.56671143]
[58.06954193 103.36040497]
[59.12996292 92.14884186]
[45.15044022 86.71073914]
[31.17091942 81.27263641]
[17.19139862 75.83452606]
[2.86596680 81.95169830]
[-11.23378849 76.23754883]
[-16.97729301 62.54273987]
[-30.95681572 57.10463715]
[-44.93633652 51.66653442]
[-58.91585922 46.22843170]
[-72.89537811 40.79032516]
[-85.92292023 49.01160812]
[-101.11582947 47.99731064]
[-112.66170502 38.34553146]
[-116.26711273 23.91850662]
[-129.29464722 32.13978577]
[-144.48756409 31.12549210]
[-156.03343201 21.47371101]
[-159.63885498 7.04668808]
[-173.61837769 1.60858464]
[-187.59790039 -3.82951856]
[-201.57742310 -9.26762199]
[-215.55694580 -14.70572472]
[-229.53645325 -20.14382744]
[-241.38189697 -18.77770996]
[-248.99749756 -26.16278839]
[-263.60620117 -29.56653023]
[-278.21493530 -32.97027206]
[-292.82363892 -36.37401199]
[-307.43234253 -39.77775574]
[-322.04107666 -43.18149567]
[-336.64978027 -46.58523941]
[-346.37515259 -36.80969620]
[-359.55691528 -33.14765930]
[-372.72094727 -36.45320511]
[-382.45242310 -45.75852966]
[-386.28164673 -58.55399704]
[-400.83480835 -62.18793106]
[-415.38796997 -65.82186890]
[-429.94113159 -69.45580292]
[-438.93807983 -63.32127380]
[-449.60650635 -63.15985489]
[-458.41439819 -68.78320312]
[-462.57861328 -78.12757874]
[-477.00979614 -82.21912384]
[-491.44097900 -86.31066895]
[-505.87216187 -90.40221405]
[-520.30334473 -94.49375916]
[-536.06237793 -89.95658112]
[-547.68182373 -101.52897644]
[-543.20861816 -117.30625916]
[-527.24444580 -121.05811310]
[-516.21179199 -108.92494965]
[-501.78063965 -104.83340454]
[-487.34942627 -100.74185944]
[-472.91824341 -96.65031433]
[-458.48706055 -92.55876923]
[-440.14447021 -98.65937042]
[-426.30718994 -84.00896454]
[-411.75402832 -80.37503052]
[-397.20086670 -76.74109650]
[-382.64770508 -73.10716248]
[-370.41784668 -84.05067444]
[-353.90991211 -85.56687164]
[-339.60736084 -76.86148834]
[-333.24603271 -61.19395065]
[-318.63732910 -57.79021072]
[-304.02862549 -54.38647079]
[-289.41989136 -50.98272705]
[-274.81118774 -47.57898712]
[-260.20245361 -44.17524338]
[-245.59375000 -40.77150345]
[-254.53140259 -52.81801224]
[-256.57254028 -67.67848969]
[-251.21383667 -81.68864441]
[-239.77667236 -91.39385986]
[-225.08119202 -94.40101624]
[-210.75102234 -89.96862793]
[-200.31967163 -79.18962097]
[-196.35931396 -64.72187805]
[-199.84648132 -50.13285446]
[-209.92132568 -39.01990128]
[-224.09835815 -34.12334824]
[-210.11883545 -28.68524742]
[-196.13931274 -23.24714279]
[-182.15979004 -17.80904007]
[-168.18026733 -12.37093735]
[-154.20074463 -6.93283415]
[-141.79400635 -15.13104820]
[-126.76099396 -14.44351482]
[-114.87644958 -4.92454243]
[-110.82901001 9.93898582]
[-98.42227173 1.74077129]
[-83.38925934 2.42830467]
[-71.50471497 11.94727707]
[-67.45727539 26.81080437]
[-53.47775650 32.24890900]
[-39.49823380 37.68701172]
[-25.51871109 43.12511444]
[-11.53919029 48.56321716]
[1.94880617 42.34955978]
[16.20349693 47.66542435]
[22.62950134 61.85500717]
[36.60902405 67.29311371]
[50.58854675 72.73121643]
[64.56806946 78.16931915]
[71.97467041 68.48075104]
[81.99143982 61.24330521]
[93.82281494 57.14716721]
[106.49510193 56.62839890]
[118.93657684 59.82446289]
[130.06811523 66.55470276]
[138.89672852 76.32803345]
[144.60388184 88.37786865]
[158.31027222 82.28403473]
[172.01666260 76.19019318]
[185.72305298 70.09635925]
[199.42944336 64.00251770]
[201.29302979 50.33976364]
[209.60038757 39.46974945]
[222.09509277 34.16872787]
[235.46942139 35.72379684]
[246.23986816 43.62217712]
[260.04074097 37.74547195]
[273.84161377 31.86876678]
[287.64251709 25.99205971]
[297.05895996 12.56587219]
[313.36859131 14.27699566]
[319.79345703 29.36517525]
[309.72421265 42.30898285]
[293.51922607 39.79294205]
[279.71832275 45.66964722]
[265.91744995 51.54635239]
[252.11657715 57.42306137]
[248.95933533 73.52778625]
[236.70462036 84.69168091]
[220.04554749 86.37158203]
[205.52328491 77.70890808]
[191.81689453 83.80274963]
[178.11050415 89.89658356]
[164.40411377 95.99042511]
[150.69772339 102.08425903]
[147.87304688 116.81590271]
[158.35333252 127.54734039]
[168.83360291 138.27877808]
[179.31388855 149.01022339]
[189.79415894 159.74165344]
[200.27442932 170.47309875]
[204.51614380 171.50042725]
[207.86866760 173.61566162]
[210.09854126 176.40383911]
[211.13174438 179.41676331]
[211.05068970 182.22813416]
[220.83287048 193.59954834]
[235.69818115 199.01554871]
[238.13259888 213.70985413]
[247.91477966 225.08126831]
[257.69696045 236.45268250]
[267.47912598 247.82409668]
[277.26129150 259.19552612]
[287.04348755 270.56692505]
[296.82565308 281.93835449]
[312.34515381 283.27346802]
[322.10366821 294.94506836]
[320.73519897 309.73229980]
[336.51187134 310.66625977]
[346.94464111 322.53775024]
[345.84396362 338.30368042]
[333.86282349 348.61035156]
[318.10943604 347.34304810]
[307.92999268 335.25360107]
[309.36376953 319.51449585]
[294.53805542 318.65817261]
[284.45553589 307.26531982]
[285.45422363 291.72052002]
[275.67205811 280.34909058]
[265.88989258 268.97769165]
[256.10769653 257.60626221]
[246.32553101 246.23486328]
[236.54336548 234.86344910]
[226.76118469 223.49203491]
[212.59556580 218.88940430]
[209.46145630 203.38172913]
[199.67927551 192.01031494]
[189.54299927 180.95336914]
[179.06271362 170.22193909]
[168.58244324 159.49049377]
[158.10217285 148.75906372]
[147.62188721 138.02761841]
[137.14161682 127.29618073]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 114]
[10 113]
[11 112]
[12 111]
[15 108]
[16 107]
[17 106]
[18 105]
[19 104]
[23 100]
[27 96]
[28 95]
[29 94]
[30 93]
[31 92]
[32 91]
[34 80]
[35 79]
[36 78]
[37 77]
[38 76]
[39 75]
[40 74]
[45 70]
[46 69]
[47 68]
[48 67]
[52 65]
[53 64]
[54 63]
[55 62]
[56 61]
[122 150]
[123 149]
[124 148]
[125 147]
[126 146]
[131 142]
[132 141]
[133 140]
[134 139]
[151 198]
[152 197]
[153 196]
[154 195]
[155 194]
[156 193]
[161 192]
[162 191]
[164 189]
[165 188]
[166 187]
[167 186]
[168 185]
[169 184]
[170 183]
[173 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
