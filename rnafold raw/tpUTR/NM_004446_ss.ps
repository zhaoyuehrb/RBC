%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 15:16:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAUGAACGAAAGCCCCCUCUUCAACUCCUCUCACUUUUUAAAGCAUUGAUAUUAGUAUCUUCUCAGAUACAGACCGUUUUAUGAUUUUUUAAAAAGUAAAAGUUCUAAAAUGAAGUCACACAGGACAAUUAUUCUUAUGCCUAAGUUAACAGUGGAUAAAAGACUUUUCUGUAAACAACUCCAGUAAUAAAUAUCAUGAACUAA\
) } def
/len { sequence length } bind def

/coor [
[-49.89293289 343.03979492]
[-56.89477539 356.30532837]
[-63.89661407 369.57086182]
[-70.89845276 382.83639526]
[-77.69816589 396.20663452]
[-84.29418945 409.67855835]
[-90.89021301 423.15048218]
[-97.48622894 436.62240601]
[-98.44993591 445.70907593]
[-104.28594208 450.24755859]
[-111.08565521 463.61782837]
[-103.91088867 477.37655640]
[-106.22684479 492.71981812]
[-117.14299011 503.74783325]
[-132.46185303 506.22012329]
[-146.29301453 499.18600464]
[-153.31809998 485.35025024]
[-150.83583069 470.03302002]
[-139.80070496 459.12405396]
[-124.45591736 456.81811523]
[-117.65620422 443.44784546]
[-110.95814514 430.02636719]
[-104.36212158 416.55447388]
[-97.76610565 403.08255005]
[-91.17008209 389.61062622]
[-91.84436035 384.87969971]
[-89.55165863 379.67532349]
[-84.16398621 375.83453369]
[-77.16213989 362.56903076]
[-70.16030121 349.30349731]
[-63.15846252 336.03796387]
[-71.47285461 328.78750610]
[-78.19760132 320.03405762]
[-83.06632996 310.12005615]
[-85.88532257 299.43399048]
[-86.54125977 288.39517212]
[-85.00572968 277.43728638]
[-81.33648682 266.99136353]
[-75.67527771 257.46884155]
[-68.24232483 249.24531555]
[-59.32782745 242.64575195]
[-49.28057861 237.93161011]
[-38.49434280 235.29057312]
[-27.39242172 234.82897949]
[-16.41103745 236.56759644]
[-5.98219156 240.44067383]
[2.38681912 227.99238586]
[10.75582981 215.54411316]
[11.87929058 208.23693848]
[19.34750366 202.97174072]
[27.90446854 190.65190125]
[36.46143341 178.33206177]
[45.01839828 166.01223755]
[53.57536316 153.69239807]
[62.13232803 141.37255859]
[46.22959900 115.94971466]
[45.69771957 85.96746826]
[31.80708313 80.30617523]
[17.91644478 74.64488983]
[4.02580786 68.98360443]
[-9.86483002 63.32231522]
[-23.75546837 57.66102600]
[-39.91934967 60.42887497]
[-50.18875504 47.64328384]
[-43.99940491 32.45697403]
[-27.71836662 30.49232101]
[-18.09417915 43.77038956]
[-4.20354223 49.43167877]
[9.68709564 55.09296417]
[23.57773399 60.75425339]
[37.46837234 66.41554260]
[51.35900879 72.07682800]
[63.94855499 57.03556442]
[80.94746399 47.24916840]
[77.78427124 32.58648682]
[74.62107086 17.92380714]
[71.23571777 3.31082082]
[67.62898254 -11.24910545]
[64.02224731 -25.80903244]
[60.41550827 -40.36895752]
[56.80877304 -54.92888641]
[53.20203781 -69.48881531]
[49.59530258 -84.04873657]
[38.76676559 -95.58361053]
[43.21680450 -109.79791260]
[39.61006927 -124.35784149]
[36.00333405 -138.91777039]
[32.39659882 -153.47769165]
[28.78986549 -168.03761292]
[25.18312836 -182.59754944]
[21.57639313 -197.15747070]
[7.14795637 -202.86709595]
[-1.14041972 -215.98512268]
[-0.10168450 -231.46739197]
[9.86474705 -243.36065674]
[24.92657852 -247.09172058]
[39.29222870 -241.22590637]
[47.43781281 -228.01875305]
[46.23118591 -212.54866028]
[36.13632202 -200.76420593]
[39.74305725 -186.20428467]
[43.34979248 -171.64434814]
[46.95652771 -157.08442688]
[50.56326294 -142.52450562]
[54.16999817 -127.96457672]
[57.77673340 -113.40464783]
[68.34729767 -102.91120148]
[64.15522766 -87.65547180]
[67.76196289 -73.09555054]
[71.36869812 -58.53562164]
[74.97543335 -43.97569275]
[78.58216858 -29.41576767]
[82.18890381 -14.85584068]
[85.79563904 -0.29591450]
[89.35314941 2.89477086]
[90.94214630 8.35527039]
[89.28375244 14.76061058]
[92.44694519 29.42329025]
[95.61014557 44.08597183]
[105.35655212 44.17028809]
[114.94118500 45.94067764]
[124.07459259 49.34367371]
[132.48094177 54.27650452]
[139.90635681 60.59020233]
[151.89273071 51.57207108]
[163.87911987 42.55393600]
[168.85723877 34.89137268]
[176.11653137 33.49153900]
[188.23838806 24.65635490]
[186.52999878 9.39277077]
[192.69699097 -4.67363739]
[205.08045959 -13.75907612]
[220.34931946 -15.41960812]
[234.39633179 -9.20855904]
[243.44291687 3.20333004]
[245.05557251 18.47732353]
[238.80052185 32.50479507]
[226.36033630 41.51242447]
[211.08137512 43.07720184]
[197.07357788 36.77821350]
[184.95172119 45.61339951]
[172.89724731 54.54031754]
[160.91087341 63.55844879]
[148.92448425 72.57658386]
[153.37927246 82.78654480]
[155.72836304 93.67554474]
[155.87910461 104.81402588]
[170.51736450 108.08839417]
[185.15562439 111.36276245]
[200.31196594 106.82451630]
[211.04331970 117.15347290]
[225.68156433 120.42784882]
[240.31982422 123.70221710]
[254.95808411 126.97658539]
[270.11444092 122.43833923]
[280.84576416 132.76730347]
[295.48403931 136.04167175]
[310.12228394 139.31604004]
[321.67388916 128.95553589]
[337.11251831 127.39707184]
[350.50167847 135.23991394]
[356.69296265 149.46830750]
[353.30572510 164.61117554]
[341.64239502 174.84574890]
[326.18780518 176.23664856]
[312.88449097 168.24902344]
[306.84793091 153.95429993]
[292.20965576 150.67991638]
[277.57141113 147.40554810]
[263.46209717 152.17800903]
[251.68371582 141.61483765]
[237.04545593 138.34046936]
[222.40719604 135.06610107]
[207.76895142 131.79173279]
[193.65962219 136.56417847]
[181.88124084 126.00101471]
[167.24299622 122.72664642]
[152.60473633 119.45227814]
[149.88027954 125.64386749]
[146.43022156 131.46241760]
[142.30476379 136.82330322]
[137.56391907 141.64854431]
[132.27665710 145.86793518]
[126.51986694 149.42010498]
[120.37730408 152.25337219]
[113.93832397 154.32653809]
[107.29659271 155.60943604]
[100.54871368 156.08340454]
[93.79285431 155.74154663]
[87.12729645 154.58885193]
[80.64897919 152.64207458]
[74.45216370 149.92951965]
[65.89519501 162.24935913]
[57.33823395 174.56919861]
[48.78126907 186.88903809]
[40.22430420 199.20886230]
[31.66734123 211.52870178]
[23.20410919 223.91311646]
[14.83509827 236.36140442]
[6.46608782 248.80967712]
[18.43376160 263.95294189]
[24.55393219 282.23550415]
[24.11607742 301.48861694]
[17.18668938 319.43365479]
[4.59968185 333.95178223]
[-12.14395523 343.33410645]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 31]
[2 30]
[3 29]
[4 28]
[5 25]
[6 24]
[7 23]
[8 22]
[10 21]
[11 20]
[46 200]
[47 199]
[48 198]
[50 197]
[51 196]
[52 195]
[53 194]
[54 193]
[55 192]
[57 72]
[58 71]
[59 70]
[60 69]
[61 68]
[62 67]
[74 119]
[75 118]
[76 117]
[77 114]
[78 113]
[79 112]
[80 111]
[81 110]
[82 109]
[83 108]
[85 106]
[86 105]
[87 104]
[88 103]
[89 102]
[90 101]
[91 100]
[124 144]
[125 143]
[126 142]
[128 141]
[129 140]
[147 178]
[148 177]
[149 176]
[151 174]
[152 173]
[153 172]
[154 171]
[156 169]
[157 168]
[158 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
