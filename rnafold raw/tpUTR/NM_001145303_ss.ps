%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Sep  9 23:18:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCCGCAGCCCACGUCCCGCUUUCAGACCCCAGGCCCAUUGUAAGCCUAGGUCACAACAUCUGUAAACUAGGAGAACUGGAGAAGACUCCACGCCCUUCCAGCUUUGGUAUCUGGAGAUUUCCAGGGCCCCUCGCCGCCACGUCCUGACUCUCGGGUGAUCUUCCUUGUAUCAAUAAAUACAGCCGAGGUUGCUGAGCGCGCUUUGAAA\
) } def
/len { sequence length } bind def

/coor [
[122.84416962 363.39761353]
[110.49593353 372.01940918]
[96.58278656 377.78469849]
[81.75548553 380.42382812]
[66.70751190 379.81338501]
[52.14270020 375.98190308]
[38.74226761 369.10858154]
[27.13297653 359.51489258]
[17.85781670 347.64959717]
[11.35060215 334.06762695]
[7.91568899 319.40420532]
[7.71373367 304.34521484]
[10.75418186 289.59497070]
[16.89482689 275.84338379]
[25.84845734 263.73361206]
[37.19629669 253.83206177]
[50.40758896 246.60185242]
[64.86441803 242.38114929]
[79.89060211 241.36738586]
[82.11572266 226.53334045]
[84.34083557 211.69929504]
[78.57711792 197.96507263]
[88.27594757 185.46534729]
[90.50106812 170.63130188]
[92.72618103 155.79725647]
[94.95130157 140.96321106]
[83.26371765 131.56106567]
[69.25069427 136.91224670]
[55.23767471 142.26342773]
[41.22465134 147.61462402]
[35.25527573 159.04830933]
[23.47362900 163.21684265]
[12.37760830 158.39968872]
[-1.71353209 163.54165649]
[-15.80467319 168.68360901]
[-29.89581299 173.82557678]
[-33.18178177 188.89892578]
[-44.11151886 199.78672791]
[-59.19739151 203.01473999]
[-73.62554932 197.55288696]
[-82.79202271 185.14404297]
[-83.77182007 169.74783325]
[-76.25228882 156.27711487]
[-62.63289261 149.03034973]
[-47.25952530 150.31996155]
[-35.03777313 159.73443604]
[-20.94663239 154.59246826]
[-6.85549164 149.45051575]
[7.23564911 144.30854797]
[17.76351929 130.26821899]
[35.87346649 133.60159302]
[49.88648605 128.25041199]
[63.89950943 122.89922333]
[77.91253662 117.54803467]
[76.79688263 102.58958435]
[62.14509583 99.37631226]
[47.49330902 96.16304016]
[33.26142883 103.56797791]
[18.65764236 96.92652130]
[14.88472366 81.33342743]
[24.83693314 68.75038147]
[40.87978745 68.83001709]
[50.70658493 81.51124573]
[65.35836792 84.72452545]
[80.01016235 87.93779755]
[84.26357269 81.76054382]
[71.90906525 73.25371552]
[59.55469513 64.74668121]
[68.06193542 52.39245605]
[80.41589355 60.89920807]
[92.77040100 69.40603638]
[97.02381134 63.22877884]
[88.79500580 50.68737793]
[80.56620026 38.14597702]
[72.33738708 25.60457802]
[57.12103653 22.27285767]
[48.95451355 9.43687248]
[52.22457123 -5.04906225]
[43.90262604 -17.52885628]
[35.48800659 -29.94635201]
[27.07338905 -42.36384583]
[18.65877151 -54.78134155]
[10.24415207 -67.19883728]
[-4.73884678 -73.86530304]
[-6.18769217 -90.20032501]
[7.38806391 -99.39983368]
[22.02284813 -92.00016022]
[22.66164780 -75.61345673]
[31.07626534 -63.19596100]
[39.49088287 -50.77846527]
[47.90550232 -38.36096954]
[56.32012177 -25.94347382]
[62.67466736 -22.16967964]
[64.76596832 -13.27787018]
[79.35632324 -10.51071453]
[87.88016510 2.09082603]
[84.87879181 17.37577057]
[93.10759735 29.91716957]
[101.33640289 42.45857239]
[109.56521606 54.99996948]
[123.76766968 59.82596970]
[137.93380737 54.89437485]
[152.09994507 49.96278000]
[166.26606750 45.03118896]
[180.43220520 40.09959412]
[194.59834290 35.16799927]
[208.76448059 30.23640633]
[222.93061829 25.30481339]
[237.09675598 20.37322044]
[251.26287842 15.44162655]
[227.49282837 -2.68727565]
[217.28793335 -36.62363052]
[228.12025452 -77.88496399]
[234.19409180 -91.60023499]
[240.26792908 -105.31549835]
[246.34176636 -119.03076172]
[252.41558838 -132.74603271]
[250.13198853 -148.98539734]
[263.21871948 -158.86816406]
[278.21331787 -152.22778320]
[279.69058228 -135.89530945]
[266.13085938 -126.67219543]
[260.05703735 -112.95693207]
[253.98318481 -99.24166107]
[247.90936279 -85.52639771]
[241.83552551 -71.81113434]
[254.19003296 -63.30430222]
[264.83602905 -73.87135315]
[275.48205566 -84.43840027]
[276.97940063 -100.41142273]
[290.47955322 -109.07888031]
[305.62640381 -103.79183197]
[310.80053711 -88.60605621]
[302.03283691 -75.17077637]
[286.04910278 -73.79238892]
[275.40307617 -63.22534180]
[264.75708008 -52.65829468]
[268.39370728 -46.09894943]
[281.51251221 -53.37195969]
[288.78530884 -40.25302505]
[275.66693115 -32.98025513]
[279.30352783 -26.42090797]
[293.90585327 -29.85196877]
[301.54418945 -34.86135483]
[308.75109863 -33.22369385]
[323.40289307 -36.43696594]
[338.05468750 -39.65024185]
[352.70648193 -42.86351395]
[367.35824585 -46.07678986]
[381.53445435 -55.37579727]
[394.39443970 -44.32782745]
[387.33819580 -28.91205406]
[370.57153320 -31.42500114]
[355.91973877 -28.21172714]
[341.26794434 -24.99845314]
[326.61618042 -21.78517914]
[311.96438599 -18.57190514]
[297.33691406 -15.24964523]
[282.73458862 -11.81858444]
[281.67727661 -4.39348602]
[296.52749634 -2.27886200]
[311.37768555 -0.16423787]
[326.22784424 1.95061564]
[324.11276245 16.80074692]
[309.26306152 14.68595982]
[294.41287231 12.57133579]
[279.56265259 10.45671177]
[278.50534058 17.88181114]
[291.56954956 25.25250053]
[304.63372803 32.62318802]
[317.69790649 39.99387741]
[330.76208496 47.36456680]
[345.91732788 42.88188934]
[359.76333618 50.50182724]
[364.08554077 65.70360565]
[356.31964111 79.46828461]
[341.07299805 83.62951660]
[327.39120483 75.71852875]
[323.39141846 60.42875290]
[310.32720947 53.05806351]
[297.26303101 45.68737411]
[284.19885254 38.31668472]
[271.13467407 30.94599533]
[256.19448853 29.60776138]
[242.02835083 34.53935623]
[227.86221313 39.47094727]
[213.69607544 44.40254211]
[199.52993774 49.33413696]
[185.36380005 54.26572800]
[171.19766235 59.19732285]
[157.03153992 64.12891388]
[142.86540222 69.06050873]
[128.69926453 73.99210358]
[139.58026123 112.49869537]
[109.78534698 143.18832397]
[107.56022644 158.02236938]
[105.33511353 172.85641479]
[103.10999298 187.69046021]
[108.71455383 202.48571777]
[99.17488098 213.92440796]
[96.94976044 228.75845337]
[94.72464752 243.59249878]
[108.79209137 248.97033691]
[121.37431335 257.24691772]
[131.88282776 268.03509521]
[139.82614136 280.83032227]
[144.83271790 295.03414917]
[146.66839600 309.98220825]
[145.24731445 324.97534180]
[140.63594055 339.31234741]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 202]
[20 201]
[21 200]
[23 198]
[24 197]
[25 196]
[26 195]
[27 54]
[28 53]
[29 52]
[30 51]
[33 49]
[34 48]
[35 47]
[36 46]
[55 65]
[56 64]
[57 63]
[72 100]
[73 99]
[74 98]
[75 97]
[78 94]
[79 92]
[80 91]
[81 90]
[82 89]
[83 88]
[101 193]
[102 192]
[103 191]
[104 190]
[105 189]
[106 188]
[107 187]
[108 186]
[109 185]
[110 184]
[113 126]
[114 125]
[115 124]
[116 123]
[117 122]
[127 137]
[128 136]
[129 135]
[142 159]
[143 158]
[145 157]
[146 156]
[147 155]
[148 154]
[149 153]
[168 183]
[169 182]
[170 181]
[171 180]
[172 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
