%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 01:22:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAGGGAUGGUGCGCCCCCAACAUGGUCCGGAGAUACACCCAGCUACCAAUUCGGGACCAGGACCAACAGGACCGGACCCGCCUCCCUGGACCUCGGACCUGAUGAGGCCACGACCCCUGCGCUUCUCUCCUCCCCCUGUCCCUCCCACCUGUGCUCAAAAUAAACCUCUGGACUGACCGGCU\
) } def
/len { sequence length } bind def

/coor [
[292.58929443 230.50175476]
[280.99920654 220.97970581]
[269.40908813 211.45765686]
[257.12588501 202.84820557]
[244.22123718 195.20162964]
[231.31658936 187.55505371]
[218.41194153 179.90846252]
[203.51829529 180.07693481]
[195.59013367 166.38551331]
[180.69648743 166.55398560]
[172.76832581 152.86256409]
[159.86367798 145.21598816]
[146.95903015 137.56939697]
[139.58491516 136.86288452]
[133.90174866 129.68182373]
[121.12882233 121.81721497]
[108.35588074 113.95260620]
[96.86896515 115.95909119]
[86.99169159 109.76113892]
[83.80187988 98.54506683]
[71.16432953 90.46469879]
[55.36962509 89.54936218]
[48.81487274 76.17459106]
[36.17732620 68.09422302]
[27.23915863 66.10046387]
[23.39541054 59.76781082]
[10.89689541 51.47401047]
[-1.60162020 43.18021011]
[-14.10013580 34.88640976]
[-26.59864998 26.59261131]
[-39.09716797 18.29881096]
[-48.00018692 16.15356255]
[-51.73585129 9.75655270]
[-64.09172821 1.25171447]
[-72.76067352 5.72157145]
[-82.40582275 6.70807171]
[-91.68842316 4.11689329]
[-99.33556366 -1.65263665]
[-104.31475067 -9.76843262]
[-105.97319794 -19.08545113]
[-104.12316895 -28.30718040]
[-115.87329865 -37.63105011]
[-127.62342834 -46.95491791]
[-139.37355042 -56.27878952]
[-149.30241394 -49.89942932]
[-160.60404968 -46.56827927]
[-172.36706543 -46.54269028]
[-183.64602661 -49.81388092]
[-193.53742981 -56.10854340]
[-201.25212097 -64.91162872]
[-206.17819214 -75.50847626]
[-207.92955017 -87.04284668]
[-206.37612915 -98.58606720]
[-201.65351868 -109.21183777]
[-212.74369812 -119.31173706]
[-223.83387756 -129.41163635]
[-234.92405701 -139.51153564]
[-250.33688354 -143.08300781]
[-254.53700256 -157.37315369]
[-265.62719727 -167.47305298]
[-274.09982300 -170.94869995]
[-276.81808472 -177.83985901]
[-287.73513794 -188.12661743]
[-303.08511353 -191.95930481]
[-307.04196167 -206.31871033]
[-317.95904541 -216.60546875]
[-334.03427124 -219.84870911]
[-339.00601196 -235.47605896]
[-327.75973511 -247.41143799]
[-311.86465454 -243.37675476]
[-307.67227173 -227.52255249]
[-296.75518799 -217.23579407]
[-282.18609619 -214.13887024]
[-277.44839478 -199.04368591]
[-266.53131104 -188.75692749]
[-255.52728271 -178.56323242]
[-244.43710327 -168.46333313]
[-229.81753540 -165.61427307]
[-224.82417297 -150.60171509]
[-213.73399353 -140.50181580]
[-202.64381409 -130.40191650]
[-191.55363464 -120.30201721]
[-174.84327698 -127.93250275]
[-156.42733765 -127.50705719]
[-139.99685669 -119.06662750]
[-128.86430359 -104.26304626]
[-125.29574585 -86.03591156]
[-130.04968262 -68.02891541]
[-118.29955292 -58.70504379]
[-106.54943085 -49.38117599]
[-94.79930115 -40.05730820]
[-74.78775024 -44.12514496]
[-58.01630402 -31.96927452]
[-55.58689117 -11.10416412]
[-43.23101044 -2.59932542]
[-30.80336571 5.80029631]
[-18.30485153 14.09409618]
[-5.80633593 22.38789558]
[6.69217968 30.68169594]
[19.19069481 38.97549438]
[31.68921089 47.26929474]
[44.25769424 55.45667648]
[56.89524460 63.53704453]
[71.78602600 63.87441635]
[79.24469757 77.82714844]
[91.88224792 85.90751648]
[108.64426422 86.22419739]
[116.22048950 101.17966461]
[128.99342346 109.04427338]
[141.76635742 116.90888977]
[154.60562134 124.66476440]
[167.51025391 132.31134033]
[180.41490173 139.95791626]
[196.23158264 140.33639526]
[203.23670959 153.48088074]
[219.05339050 153.85934448]
[226.05853271 167.00382996]
[238.96316528 174.65040588]
[251.86781311 182.29698181]
[264.77246094 189.94357300]
[259.60241699 175.86270142]
[262.74722290 161.19607544]
[273.23580933 150.47274780]
[287.82922363 147.00408936]
[302.02105713 151.86122131]
[311.42886353 163.54428101]
[313.14743042 178.44551086]
[306.64614868 191.96337891]
[293.93255615 199.92358398]
[278.93115234 199.86753845]
[290.52124023 209.38960266]
[302.11135864 218.91165161]
[315.16787720 214.45356750]
[328.61450195 217.01464844]
[338.95321655 225.81961060]
[343.54858398 238.48329163]
[341.29898071 251.65594482]
[352.72570801 261.37344360]
[368.25091553 264.41949463]
[372.93386841 278.55877686]
[384.36062622 288.27624512]
[395.78735352 297.99374390]
[411.32623291 296.90686035]
[422.77612305 306.92456055]
[423.71655273 321.74517822]
[435.14331055 331.46267700]
[446.57003784 341.18017578]
[459.49645996 335.80258179]
[473.41210938 336.52062988]
[485.60000610 343.13693237]
[493.70510864 354.30813599]
[496.18942261 367.81713867]
[492.62350464 381.01315308]
[503.88360596 390.92324829]
[518.15374756 385.38961792]
[533.35968018 387.13305664]
[546.00708008 395.75286865]
[553.18975830 409.26834106]
[553.25708008 424.57369995]
[546.19372559 438.15188599]
[533.62268066 446.88275146]
[518.43273926 448.75994873]
[504.11441040 443.35217285]
[493.95794678 431.90206909]
[490.29724121 417.04080200]
[493.97348022 402.18334961]
[482.71340942 392.27322388]
[467.54489136 397.81298828]
[451.55920410 394.93722534]
[439.12963867 384.33657837]
[433.70486450 368.82806396]
[436.85253906 352.60690308]
[425.42581177 342.88940430]
[413.99905396 333.17193604]
[399.21981812 334.62429810]
[387.49304199 324.93215942]
[386.06985474 309.42050171]
[374.64312744 299.70300293]
[363.21636963 289.98550415]
[348.50848389 287.63452148]
[343.00823975 272.80017090]
[331.58148193 263.08267212]
[315.77087402 267.45971680]
[300.30892944 261.49835205]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 132]
[2 131]
[3 130]
[4 120]
[5 119]
[6 118]
[7 117]
[9 115]
[11 113]
[12 112]
[13 111]
[15 110]
[16 109]
[17 108]
[20 106]
[21 105]
[23 103]
[24 102]
[26 101]
[27 100]
[28 99]
[29 98]
[30 97]
[31 96]
[33 95]
[34 94]
[41 91]
[42 90]
[43 89]
[44 88]
[54 82]
[55 81]
[56 80]
[57 79]
[59 77]
[60 76]
[62 75]
[63 74]
[65 72]
[66 71]
[137 182]
[138 181]
[140 179]
[141 178]
[142 177]
[145 174]
[146 173]
[147 172]
[153 167]
[154 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
