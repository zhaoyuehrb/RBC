%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 22:06:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUAGAAGCCAGACUGCCUCCCUGAAACCCAUCAGCCUGGAUGGUUGCGUACCCGAGAAUGCCACCUAAGGGGAAGGAACGGUAGAUGUGAUGUCUGUUUUUACACCCUUGAUUCUUCUUGAAGCAUCACUUAGAACAAGUAAAACUUGCUUCAGAUUUUUAUUUACUCCCUUUGAAGUUUUCAAAACAAAAGCAUUAAACACAUCAACCUGUAUAA\
) } def
/len { sequence length } bind def

/coor [
[167.61346436 87.22991943]
[162.01914978 81.93271637]
[148.20228577 87.77177429]
[134.38543701 93.61082458]
[120.56858063 99.44987488]
[126.25315094 120.63150787]
[109.71878052 145.17019653]
[103.68302917 158.90226746]
[105.21334076 174.64927673]
[93.00881958 183.18737793]
[86.97306824 196.91943359]
[92.93981934 211.55410767]
[86.73375702 226.08889771]
[72.03682709 231.90058899]
[57.56845474 225.54121399]
[51.91247177 210.78364563]
[58.42446899 196.38333130]
[73.24099731 190.88368225]
[79.27674866 177.15161133]
[77.31472015 162.38681030]
[89.95095825 152.86650085]
[95.98671722 139.13444519]
[83.97805786 130.14488220]
[71.97047424 121.15611267]
[60.49512100 130.81614685]
[49.01976776 140.47618103]
[37.54441452 150.13621521]
[36.44184494 165.90199280]
[24.45947647 176.20724487]
[8.70623207 174.93806458]
[-1.47176552 162.84741211]
[-0.03609134 147.10845947]
[12.16149426 137.05886841]
[27.88438034 138.66085815]
[39.35973358 129.00082397]
[50.83509064 119.34078979]
[62.31044388 109.68075562]
[57.47195053 95.48255157]
[42.48571396 94.84014893]
[27.49947548 94.19774628]
[19.20507812 107.04882812]
[5.68114901 113.97704315]
[-9.39463711 113.21085358]
[-21.97855949 105.05604553]
[-28.74547958 91.78674316]
[-43.73171616 91.14434052]
[-58.71795654 90.50193787]
[-72.83683014 97.64112854]
[-85.22106171 89.36585236]
[-100.20729828 88.72344971]
[-115.19353485 88.08105469]
[-130.17977905 87.43865204]
[-139.72392273 99.67338562]
[-154.64596558 103.92922211]
[-169.20808411 98.56970215]
[-177.81083679 85.65566254]
[-177.14628601 70.15282440]
[-167.46997070 58.02234268]
[-152.50263977 53.92863464]
[-137.99952698 59.44581223]
[-129.53736877 72.45241547]
[-114.55113220 73.09481049]
[-99.56489563 73.73721313]
[-84.57865906 74.37961578]
[-71.53170013 67.19448090]
[-58.07555389 75.51570129]
[-43.08931732 76.15810394]
[-28.10307693 76.80050659]
[-20.22546005 64.15895844]
[-6.98985100 57.11093521]
[8.09619999 57.63767242]
[20.97763824 65.69777679]
[28.14187813 79.21150970]
[43.12811661 79.85391235]
[58.11435318 80.49631500]
[94.39785004 67.08339691]
[114.72953033 85.63301849]
[128.54638672 79.79396820]
[142.36323547 73.95491791]
[156.18009949 68.11586761]
[162.89407349 46.04050446]
[183.51268005 36.29906082]
[204.33070374 44.92473221]
[217.49588013 37.73599625]
[230.66107178 30.54726219]
[239.06509399 17.14267731]
[253.94364929 17.83401108]
[267.10882568 10.64527702]
[280.27401733 3.45654202]
[293.43920898 -3.73219275]
[306.60440063 -10.92092800]
[319.76956177 -18.10966301]
[332.72412109 -25.67141151]
[345.45742798 -33.60000610]
[358.19073486 -41.52860260]
[370.92407227 -49.45719910]
[379.61169434 -67.65231323]
[398.95050049 -67.44021606]
[411.45220947 -75.72918701]
[423.95394897 -84.01816559]
[436.45565796 -92.30714417]
[448.95736694 -100.59611511]
[461.45907593 -108.88509369]
[457.19421387 -122.28015137]
[457.71109009 -136.71252441]
[463.20654297 -150.48213196]
[473.27636719 -161.88119507]
[486.93518066 -169.40519714]
[502.70974731 -171.94845581]
[518.79693604 -168.95921326]
[525.41522217 -182.42019653]
[532.03356934 -195.88116455]
[538.65185547 -209.34214783]
[539.62854004 -218.41737366]
[545.46203613 -222.94706726]
[552.27185059 -236.31216431]
[559.08172607 -249.67726135]
[565.89160156 -263.04235840]
[559.01538086 -276.82727051]
[561.54504395 -291.84240723]
[572.30389404 -302.36434937]
[587.01928711 -304.50784302]
[593.82916260 -317.87292480]
[600.63903809 -331.23803711]
[599.24090576 -347.57745361]
[612.84509277 -356.73480225]
[627.45684814 -349.28973389]
[628.04479980 -332.90112305]
[614.00408936 -324.42816162]
[607.19427490 -311.06307983]
[600.38439941 -297.69796753]
[607.29980469 -284.53305054]
[605.11120605 -269.64431763]
[594.45068359 -258.77209473]
[579.25671387 -256.23251343]
[572.44683838 -242.86740112]
[565.63696289 -229.50230408]
[558.82708740 -216.13720703]
[552.11285400 -202.72383118]
[545.49456787 -189.26284790]
[538.87622070 -175.80187988]
[532.25793457 -162.34089661]
[536.13085938 -155.91828918]
[548.39251709 -164.55841064]
[556.34649658 -177.27589417]
[571.34600830 -177.15385437]
[579.09204102 -164.30863953]
[572.20025635 -150.98559570]
[557.24060059 -149.88558960]
[543.87683105 -143.07304382]
[547.74981689 -136.65043640]
[562.74371338 -136.22209167]
[577.73760986 -135.79374695]
[592.73150635 -135.36540222]
[607.72534180 -134.93707275]
[622.71923828 -134.50872803]
[637.71313477 -134.08038330]
[652.70703125 -133.65203857]
[658.56469727 -147.65390015]
[669.08770752 -158.59147644]
[682.85290527 -164.98556519]
[697.99859619 -165.97142029]
[712.47650146 -161.41569519]
[724.32861328 -151.93453979]
[731.95202637 -138.81019592]
[734.31567383 -123.81761169]
[731.09991455 -108.98442078]
[722.73974609 -96.31668854]
[710.36572266 -87.52761841]
[695.65130615 -83.80586243]
[680.58660889 -85.65475464]
[667.20892334 -92.82425690]
[657.32745361 -104.34474182]
[652.27868652 -118.65816498]
[637.28479004 -119.08650208]
[622.29089355 -119.51484680]
[607.29699707 -119.94318390]
[592.30316162 -120.37152863]
[577.30926514 -120.79986572]
[562.31536865 -121.22821045]
[547.32147217 -121.65654755]
[539.52728271 -101.19188690]
[523.93170166 -86.86782837]
[504.26892090 -81.23958588]
[484.87802124 -84.87937927]
[469.74804688 -96.38337708]
[457.24633789 -88.09439850]
[444.74462891 -79.80542755]
[432.24291992 -71.51644897]
[419.74121094 -63.22747421]
[407.23947144 -54.93849945]
[406.12127686 -44.78977966]
[399.46438599 -36.76090240]
[389.27862549 -33.65381622]
[378.85266113 -36.72388077]
[366.11935425 -28.79528427]
[353.38601685 -20.86668968]
[340.65270996 -12.93809414]
[339.88531494 -10.24849701]
[338.00985718 -7.69972754]
[335.07424927 -5.71404409]
[331.27783203 -4.68872976]
[326.95831299 -4.94447756]
[313.79312134 2.24425721]
[300.62792969 9.43299198]
[287.46276855 16.62172699]
[274.29757690 23.81046104]
[261.13238525 30.99919701]
[253.67001343 43.88959503]
[237.84980774 43.71244812]
[224.68461609 50.90118027]
[211.51943970 58.08991623]
[212.28868103 65.51228333]
[211.04400635 72.89715576]
[207.86158752 79.70610046]
[202.95942688 85.43876648]
[196.68243408 89.66970062]
[189.47822571 92.07987213]
[181.86517334 92.48071289]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 80]
[3 79]
[4 78]
[5 77]
[7 22]
[8 21]
[10 19]
[11 18]
[24 37]
[25 36]
[26 35]
[27 34]
[38 75]
[39 74]
[40 73]
[45 68]
[46 67]
[47 66]
[49 64]
[50 63]
[51 62]
[52 61]
[83 212]
[84 211]
[85 210]
[87 208]
[88 207]
[89 206]
[90 205]
[91 204]
[92 203]
[93 198]
[94 197]
[95 196]
[96 195]
[98 191]
[99 190]
[100 189]
[101 188]
[102 187]
[103 186]
[110 142]
[111 141]
[112 140]
[113 139]
[115 138]
[116 137]
[117 136]
[118 135]
[122 131]
[123 130]
[124 129]
[151 181]
[152 180]
[153 179]
[154 178]
[155 177]
[156 176]
[157 175]
[158 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
