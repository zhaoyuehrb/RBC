%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 09:15:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACUGGCCGGUCUGCAAGUCAGAGGAUGGCCAGUGUCUGUCCCGGGGUCCUGUGGCAGGCAGCGCCAAGCAACCUGGGUCCAAAUAAAAACUAAAUUGUAAACUCCUGAA\
) } def
/len { sequence length } bind def

/coor [
[35.61752319 225.93873596]
[30.47028351 220.74066162]
[25.92400742 215.01130676]
[12.79565620 222.26708984]
[-0.33269507 229.52287292]
[-13.46104622 236.77865601]
[-26.58939743 244.03443909]
[-39.71775055 251.29022217]
[-52.84609985 258.54598999]
[-65.97444916 265.80178833]
[-75.41622162 283.50366211]
[-94.64877319 282.66198730]
[-107.34963226 290.64245605]
[-120.05049896 298.62295532]
[-132.75135803 306.60342407]
[-137.70872498 321.86135864]
[-152.77874756 327.36355591]
[-166.40097046 318.88922119]
[-168.12562561 302.93911743]
[-156.62966919 291.74884033]
[-140.73184204 293.90255737]
[-128.03097534 285.92208862]
[-115.33011627 277.94158936]
[-102.62925720 269.96112061]
[-101.21266937 259.66439819]
[-94.15681458 251.73374939]
[-83.66627502 249.01750183]
[-73.23023224 252.67343140]
[-60.10188293 245.41764832]
[-46.97353363 238.16186523]
[-33.84518051 230.90608215]
[-20.71682930 223.65029907]
[-7.58847857 216.39451599]
[5.53987312 209.13873291]
[18.66822433 201.88294983]
[13.54752922 174.49043274]
[20.06849670 147.36097717]
[37.12182617 125.23238373]
[61.75632095 111.98114014]
[89.68957520 109.94336700]
[86.13007355 96.42221832]
[95.78587341 86.30998230]
[99.53251648 71.78543091]
[103.27916718 57.26087952]
[107.02581024 42.73632812]
[110.77246094 28.21177292]
[114.51910400 13.68722057]
[104.81481934 1.72340143]
[104.02519989 -13.48284435]
[112.24377441 -26.08915520]
[126.14315033 -31.37548256]
[129.88980103 -45.90003586]
[129.00399780 -55.13959122]
[133.95057678 -60.77650070]
[138.10310364 -75.19026184]
[142.25563049 -89.60401917]
[146.40817261 -104.01777649]
[137.53036499 -116.89096069]
[139.05575562 -132.45396423]
[150.26409912 -143.35842896]
[165.86314392 -144.45558167]
[178.48750305 -135.22740173]
[182.17634583 -120.03113556]
[175.18791199 -106.04200745]
[160.82192993 -99.86524963]
[156.66938782 -85.45148468]
[152.51686096 -71.03772736]
[148.36433411 -56.62396622]
[144.41435242 -42.15338898]
[140.66770935 -27.62883568]
[150.27566528 -16.27872658]
[151.37084961 -1.26990914]
[143.32420349 11.65700054]
[129.04365540 17.43386841]
[125.29701233 31.95842171]
[121.55036163 46.48297501]
[117.80371857 61.00752640]
[114.05706787 75.53208160]
[110.31042480 90.05663300]
[113.86992645 103.57778168]
[104.21412659 113.69001770]
[110.93035889 116.69716644]
[117.27576447 120.42094421]
[123.17419434 124.81632996]
[128.55488586 129.83021545]
[133.35331726 135.40209961]
[137.51205444 141.46476746]
[140.98129272 147.94515991]
[143.71957397 154.76519775]
[145.69427490 161.84274292]
[146.88191223 169.09262085]
[147.26849365 176.42759705]
[146.84967041 183.75944519]
[145.63078308 191.00001526]
[143.62678528 198.06228638]
[140.86204529 204.86138916]
[137.37010193 211.31570435]
[133.19319153 217.34773254]
[128.38180542 222.88511658]
[122.99403381 227.86145020]
[117.09484100 232.21710205]
[110.75537109 235.89996338]
[104.05199432 238.86596680]
[97.06545258 241.07974243]
[89.87984467 242.51492310]
[82.58164978 243.15457153]
[75.25865173 242.99127197]
[67.99890900 242.02728271]
[60.88969040 240.27450562]
[54.01641083 237.75430298]
[47.46162796 234.49725342]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 35]
[4 34]
[5 33]
[6 32]
[7 31]
[8 30]
[9 29]
[10 28]
[12 24]
[13 23]
[14 22]
[15 21]
[40 81]
[42 79]
[43 78]
[44 77]
[45 76]
[46 75]
[47 74]
[51 70]
[52 69]
[54 68]
[55 67]
[56 66]
[57 65]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
