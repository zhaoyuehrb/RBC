%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 15:08:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUUUUCUACAUUUUCAUUUGGACUAAAUCCCACGAAUGACAACUACCACCUUUUUUUCCUUUUUAAUUAAUACUAAAUAUUGUGAUUUCUUAUUUGAGGUUCAAAAUGACCUGCUUGAAACUUUGAUACAUAUUGGAAUACAUUAUGUUAAUAAACUUGUAGCUUUUUGUGAAACA\
) } def
/len { sequence length } bind def

/coor [
[108.32407379 261.43389893]
[110.85254669 242.21783447]
[111.11579895 227.22015381]
[111.37904358 212.22245789]
[111.64229584 197.22477722]
[111.90554047 182.22708130]
[112.16879272 167.22938538]
[109.53424835 163.21421814]
[109.41394043 157.49580383]
[112.71368408 151.71246338]
[113.50310516 136.73324585]
[114.29252625 121.75403595]
[107.80833435 117.98504639]
[94.79622650 125.44728851]
[94.83995056 110.44708252]
[88.35575104 106.67810059]
[75.73048401 114.77764130]
[63.10521698 122.87718201]
[50.47994614 130.97673035]
[37.85467911 139.07626343]
[25.22941017 147.17581177]
[12.60414219 155.27536011]
[14.50672436 170.41943359]
[9.64198494 184.88653564]
[-1.02417743 195.80421448]
[-15.37398911 201.00476074]
[-30.55828476 199.45559692]
[-43.56221390 191.46430969]
[-51.80382919 178.61756897]
[-53.64676285 163.46612549]
[-48.72509003 149.01829529]
[-38.01601410 138.14270020]
[-23.64583397 132.99870300]
[-8.46775723 134.60765076]
[4.50459909 142.65008545]
[17.12986755 134.55055237]
[29.75513649 126.45100403]
[42.38040543 118.35146332]
[55.00567245 110.25191498]
[67.63094330 102.15237427]
[80.25621033 94.05283356]
[65.29336548 95.10797119]
[50.33052444 96.16311646]
[35.36767960 97.21825409]
[20.40483856 98.27339935]
[6.98111963 104.96695709]
[-7.47127008 108.98297882]
[-22.42386246 110.17461395]
[-37.32989883 108.49827576]
[-51.64431763 104.01526642]
[-64.84370422 96.88951874]
[-76.44539642 87.38159180]
[-86.02516937 75.83914948]
[-93.23272705 62.68426132]
[-97.80451965 48.39794922]
[-99.57336426 33.50260925]
[-98.47458649 18.54290581]
[-94.54837036 4.06586075]
[-87.93827820 -9.39915466]
[-78.88600922 -21.35977745]
[-67.72257996 -31.37865067]
[-54.85619354 -39.08942413]
[-40.75732040 -44.21014404]
[-25.94150352 -46.55356598]
[-10.95050526 -46.03399658]
[3.66751361 -42.67043686]
[17.37802696 -36.58588028]
[29.67969131 -28.00281525]
[40.12268448 -17.23509026]
[48.32514572 -4.67644167]
[53.98713684 9.21390820]
[56.90119934 23.92374420]
[65.21859741 36.40656662]
[73.53599548 48.88938904]
[81.85339355 61.37221146]
[90.17079926 73.85503387]
[88.85617828 58.91275406]
[87.54155731 43.97047043]
[86.22693634 29.02819061]
[84.91231537 14.08590889]
[83.59769440 -0.85637200]
[69.44965363 -6.69517231]
[59.64451599 -18.44752693]
[56.43542480 -33.41283035]
[60.55981064 -48.15216827]
[71.06991577 -59.27854538]
[85.55059814 -64.23519897]
[100.67430115 -61.88313675]
[112.96570587 -52.76283646]
[119.60034180 -38.97007751]
[119.05361938 -23.67433548]
[111.45116425 -10.39046288]
[98.53997040 -2.17099285]
[99.85459137 12.77128792]
[101.16921234 27.71356964]
[102.48383331 42.65584946]
[103.79845428 57.59813309]
[105.11307526 72.54041290]
[119.62996674 76.31664276]
[128.05903625 63.90895462]
[136.48811340 51.50126648]
[144.91719055 39.09357834]
[153.34626770 26.68588829]
[150.13629150 11.21101665]
[158.87861633 -1.95512736]
[174.38656616 -5.00130367]
[187.45954895 3.87972999]
[190.34158325 19.41901398]
[181.32283020 32.39736557]
[165.75395203 35.11496353]
[157.32487488 47.52265167]
[148.89579773 59.93033981]
[140.46673584 72.33802795]
[132.03765869 84.74571228]
[137.68656921 98.64138794]
[152.38208008 101.64838409]
[167.07759094 104.65538788]
[173.32699585 90.95316315]
[182.46458435 78.99102020]
[194.02952576 69.36693573]
[207.43975830 62.56110764]
[222.02125549 58.91200256]
[237.04196167 58.59951019]
[251.74845886 61.63608932]
[265.40383911 67.86629486]
[277.32461548 76.97474670]
[286.91482544 88.50206757]
[293.69601440 101.86808777]
[297.33093262 116.40100861]
[297.64038086 131.37118530]
[312.33590698 134.37817383]
[327.03140259 137.38517761]
[341.72692871 140.39218140]
[356.42242432 143.39918518]
[371.49353027 138.58541870]
[382.41137695 148.71704102]
[397.10687256 151.72404480]
[411.23327637 144.11978149]
[425.92898560 150.55529785]
[429.92071533 166.09381104]
[420.14636230 178.81552124]
[404.10397339 178.96139526]
[394.09988403 166.41955566]
[379.40438843 163.41255188]
[365.38439941 168.44139099]
[353.41543579 158.09468079]
[338.71990967 155.08769226]
[324.02441406 152.08068848]
[309.32888794 149.07368469]
[294.63339233 146.06669617]
[288.46859741 159.71209717]
[279.41738892 171.64916992]
[267.93112183 181.27731323]
[254.58384705 188.11114502]
[240.04345703 191.80511475]
[225.03840637 192.17082214]
[210.32116699 189.18670654]
[196.63047791 182.99928284]
[184.65429688 173.91592407]
[174.99519348 162.38964844]
[168.14004517 148.99644470]
[164.43554688 134.40655518]
[164.07058716 119.35089111]
[149.37509155 116.34389496]
[134.67958069 113.33689880]
[133.81269836 115.30162048]
[132.83477783 117.21078491]
[131.74934387 119.05812836]
[130.56025696 120.83761597]
[129.27174377 122.54345703]
[128.48231506 137.52265930]
[127.69290161 152.50187683]
[127.16648102 167.49264526]
[126.90323639 182.49032593]
[126.63998413 197.48802185]
[126.37673950 212.48570251]
[126.11348724 227.48339844]
[125.85024261 242.48109436]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 178]
[3 177]
[4 176]
[5 175]
[6 174]
[7 173]
[10 172]
[11 171]
[12 170]
[16 41]
[17 40]
[18 39]
[19 38]
[20 37]
[21 36]
[22 35]
[76 98]
[77 97]
[78 96]
[79 95]
[80 94]
[81 93]
[99 114]
[100 113]
[101 112]
[102 111]
[103 110]
[115 165]
[116 164]
[117 163]
[130 150]
[131 149]
[132 148]
[133 147]
[134 146]
[136 144]
[137 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
