%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 21:25:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCUAGCCUGUGGUCAGAUGUGGAGGCCCAGGGAAUAGACCCUCAAGAGCCCCCAAGAGACAGGAGAGACUCCGAACUCCAUCAGCAGAGAAGACCUCCAGUAUAUCGCAGGCCAGGGAACUGGGACUGCCCGUGGUGUAAAGCUGUGAAUUUUUCAUGGAGGGAAAAUUGCUUCCUCUGUGGGAGGCGAAUCUGGCUGCAAAAGCCUCAGUAAAU\
) } def
/len { sequence length } bind def

/coor [
[130.40696716 423.46652222]
[129.75567627 408.48068237]
[129.10440063 393.49481201]
[128.45312500 378.50897217]
[116.90415955 362.99740601]
[126.50160980 345.26693726]
[125.41674805 330.30621338]
[113.42355347 315.13549805]
[122.50366974 297.13461304]
[120.98614502 282.21157837]
[119.46862030 267.28854370]
[117.95109558 252.36549377]
[116.43357086 237.44245911]
[114.91604614 222.51940918]
[113.39852142 207.59637451]
[111.88099670 192.67333984]
[110.36347198 177.75028992]
[108.84594727 162.82725525]
[107.32842255 147.90422058]
[80.27632904 146.37152100]
[57.25479889 130.17385864]
[43.88477707 136.97404480]
[30.51475334 143.77421570]
[21.72184753 156.92698669]
[6.86991549 155.80030823]
[-6.50010824 162.60049438]
[-19.87013245 169.40068054]
[-33.19058228 176.29745483]
[-43.16073990 193.82106018]
[-62.43352509 192.22515869]
[-75.49568939 199.59942627]
[-88.55784607 206.97370911]
[-101.62001038 214.34797668]
[-105.61562347 229.63883972]
[-119.29524994 237.55358887]
[-134.54301453 233.39654541]
[-142.31269836 219.63400269]
[-137.99467468 204.43103027]
[-124.15074921 196.80729675]
[-108.99428558 201.28581238]
[-95.93212128 193.91154480]
[-82.86996460 186.53726196]
[-69.80780029 179.16299438]
[-67.96628571 169.11761475]
[-60.74963379 161.58419800]
[-50.36462402 159.21514893]
[-40.18360519 163.02728271]
[-35.73362350 157.13072205]
[-26.67031288 156.03065491]
[-13.30028915 149.23046875]
[0.06973454 142.43028259]
[7.90632677 129.76391602]
[23.71457291 130.40419006]
[37.08459473 123.60401154]
[50.45462036 116.80383301]
[50.18322754 109.30874634]
[35.19305038 109.85152435]
[21.10426712 114.99993896]
[11.85418034 103.19164276]
[20.22612381 90.74533844]
[34.65026855 94.86135101]
[49.64044571 94.31856537]
[49.36905289 86.82347870]
[35.54222870 81.00807953]
[21.71540260 75.19267273]
[7.88857794 69.37727356]
[-9.05587673 68.80998993]
[-13.20145416 52.37068939]
[1.44778001 43.83627319]
[13.70398045 55.55044556]
[27.53080559 61.36584854]
[41.35763168 67.18125153]
[55.18445587 72.99665833]
[66.34928131 62.75675583]
[79.48236847 56.53355026]
[93.25860596 54.55999756]
[106.39325714 56.65994644]
[111.09042358 42.41436386]
[115.78759766 28.16878319]
[120.48476410 13.92320156]
[125.18193817 -0.32237947]
[129.87910461 -14.56796074]
[116.53954315 -7.70822763]
[101.88496399 -10.90875149]
[92.61988068 -22.70528603]
[92.98308563 -37.70088577]
[102.80841827 -49.03503418]
[117.60075378 -51.52232742]
[130.59257507 -44.02482605]
[135.84007263 -29.97445297]
[141.95434570 -43.67173767]
[148.06861877 -57.36902618]
[154.18289185 -71.06631470]
[160.29716492 -84.76360321]
[154.88684082 -99.37065887]
[161.28269958 -113.17455292]
[175.24163818 -118.24245453]
[181.35591125 -131.93974304]
[187.37088013 -145.68092346]
[193.28620911 -159.46530151]
[199.20155334 -173.24966431]
[205.11689758 -187.03402710]
[210.73152161 -200.94358826]
[216.04277039 -214.97180176]
[221.35403442 -229.00000000]
[226.66529846 -243.02819824]
[231.97656250 -257.05639648]
[236.87947083 -271.23248291]
[241.36991882 -285.54458618]
[245.86036682 -299.85665894]
[250.35081482 -314.16876221]
[245.92533875 -332.04537964]
[259.30526733 -343.40368652]
[263.58804321 -357.77926636]
[267.87084961 -372.15487671]
[272.15362549 -386.53048706]
[267.82608032 -402.34832764]
[279.55172729 -413.81311035]
[295.26821899 -409.13082886]
[298.80780029 -393.11822510]
[286.52920532 -382.24768066]
[282.24642944 -367.87210083]
[277.96365356 -353.49649048]
[273.68087769 -339.12091064]
[279.15786743 -328.33847046]
[275.71084595 -316.32888794]
[264.66290283 -309.67831421]
[260.17245483 -295.36621094]
[255.68200684 -281.05413818]
[251.19155884 -266.74203491]
[252.36434937 -264.20062256]
[252.60339355 -261.04251099]
[251.66918945 -257.62023926]
[249.45379639 -254.36621094]
[246.00477600 -251.74514771]
[240.69351196 -237.71693420]
[235.38224792 -223.68873596]
[230.07098389 -209.66053772]
[224.75971985 -195.63232422]
[225.86434937 -192.28833008]
[225.40692139 -188.24372864]
[223.07598877 -184.23722839]
[218.90126038 -181.11869812]
[212.98591614 -167.33432007]
[207.07058716 -153.54995728]
[201.15524292 -139.76559448]
[201.40600586 -132.38258362]
[195.05320740 -125.82546997]
[188.93893433 -112.12818146]
[194.48652649 -98.35284424]
[188.48089600 -84.37474823]
[173.99444580 -78.64933014]
[167.88017273 -64.95204163]
[161.76589966 -51.25475311]
[155.65162659 -37.55746841]
[149.53735352 -23.86017990]
[144.12469482 -9.87079048]
[139.42752075 4.37479115]
[134.73034668 18.62037277]
[130.03317261 32.86595535]
[125.33600616 47.11153412]
[120.63883972 61.35711670]
[129.37078857 66.60439301]
[136.77330017 73.82378387]
[142.40171814 82.67928314]
[145.89617920 92.73498535]
[147.00387573 103.47637939]
[145.59608459 114.33665466]
[141.67869568 124.72662354]
[154.94888306 131.71965027]
[168.21905518 138.71267700]
[181.48922729 145.70568848]
[194.75941467 152.69871521]
[208.02958679 159.69174194]
[221.29975891 166.68476868]
[234.56994629 173.67779541]
[247.84011841 180.67082214]
[264.19723511 179.49752808]
[273.16659546 193.22642517]
[265.52130127 207.73439026]
[249.12614441 208.09689331]
[240.84709167 193.94099426]
[227.57691956 186.94796753]
[214.30673218 179.95494080]
[201.03656006 172.96191406]
[187.76638794 165.96890259]
[174.49620056 158.97587585]
[161.22602844 151.98284912]
[147.95585632 144.98982239]
[134.68566895 137.99679565]
[122.25145721 146.38668823]
[123.76898193 161.30973816]
[125.28650665 176.23277283]
[126.80403137 191.15580750]
[128.32156372 206.07885742]
[129.83908081 221.00189209]
[131.35661316 235.92492676]
[132.87413025 250.84797668]
[134.39166260 265.77099609]
[135.90917969 280.69406128]
[137.42671204 295.61709595]
[146.23538208 301.98831177]
[150.00817871 311.94958496]
[147.72607422 322.12921143]
[140.37747192 329.22137451]
[141.46232605 344.18206787]
[150.08285522 350.80566406]
[153.56568909 360.87197876]
[150.98983765 370.98126221]
[143.43898010 377.85769653]
[144.09025574 392.84353638]
[144.74153137 407.82940674]
[145.39280701 422.81524658]
[154.65289307 436.34976196]
[147.31869507 451.01745605]
[130.93501282 451.72949219]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 213]
[2 212]
[3 211]
[4 210]
[6 206]
[7 205]
[9 201]
[10 200]
[11 199]
[12 198]
[13 197]
[14 196]
[15 195]
[16 194]
[17 193]
[18 192]
[19 191]
[21 55]
[22 54]
[23 53]
[25 51]
[26 50]
[27 49]
[28 47]
[30 43]
[31 42]
[32 41]
[33 40]
[63 73]
[64 72]
[65 71]
[66 70]
[77 162]
[78 161]
[79 160]
[80 159]
[81 158]
[82 157]
[90 156]
[91 155]
[92 154]
[93 153]
[94 152]
[97 149]
[98 148]
[99 146]
[100 145]
[101 144]
[102 143]
[103 139]
[104 138]
[105 137]
[106 136]
[107 135]
[108 130]
[109 129]
[110 128]
[111 127]
[113 124]
[114 123]
[115 122]
[116 121]
[169 190]
[170 189]
[171 188]
[172 187]
[173 186]
[174 185]
[175 184]
[176 183]
[177 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
