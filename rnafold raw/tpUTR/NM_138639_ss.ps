%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 12:49:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCUUUCUCAGAAGCUGCUACAAGAUGACACCUCAUGUCCCUGCCCUCUUCGUGUGCUUUUCCAAGUCUUCCUAUUCCACUCAGGGCUGUGGGGUGGUGGUUGCCCUACCUGUUUUUGCCAAAAAUAAAUUGUUUAAAACUUUUCUUAUUAAAAACGUUACAAAGUA\
) } def
/len { sequence length } bind def

/coor [
[65.62449646 291.38778687]
[60.96273422 305.64501953]
[56.30096817 319.90222168]
[51.77191544 334.20214844]
[47.37597275 348.54351807]
[53.59716415 363.33123779]
[45.78833771 377.34558105]
[29.93975449 379.83593750]
[18.20909119 368.89193726]
[19.59510994 352.90887451]
[33.03457642 344.14758301]
[37.43051910 329.80618286]
[36.38006973 322.45974731]
[42.04376221 315.24044800]
[46.70552826 300.98324585]
[51.36729431 286.72604370]
[55.89634323 272.42611694]
[60.29228973 258.08471680]
[64.68823242 243.74331665]
[69.08417511 229.40191650]
[58.83406830 218.59448242]
[55.34658051 204.01046753]
[59.65572357 189.54335022]
[70.70018768 179.10704041]
[85.58262634 175.57711792]
[89.97856903 161.23573303]
[94.37451935 146.89433289]
[98.77046204 132.55293274]
[74.79138184 114.45141602]
[77.49060059 87.93664551]
[66.93341064 77.28086853]
[56.37621307 66.62509155]
[45.81901932 55.96931076]
[35.26182175 45.31352997]
[24.70462799 34.65774918]
[14.14743233 24.00197029]
[3.59023762 13.34619141]
[-6.96695757 2.69041228]
[-22.17616272 -1.66741467]
[-25.63731766 -16.15429306]
[-36.19451141 -26.81007385]
[-46.75170898 -37.46585083]
[-57.30890274 -48.12163162]
[-67.86609650 -58.77741241]
[-81.35150146 -50.26889038]
[-96.37651825 -44.95045853]
[-112.19838715 -43.08189011]
[-128.03561401 -44.75249481]
[-143.10665894 -49.87683868]
[-156.66839600 -58.19912720]
[-168.05285645 -69.30596924]
[-176.70004272 -82.64688873]
[-182.18554688 -97.56164551]
[-184.24133301 -113.31286621]
[-182.76884460 -129.12254333]
[-177.84373474 -144.21041870]
[-169.71195984 -157.83253479]
[-180.65794373 -168.08853149]
[-191.60391235 -178.34454346]
[-202.54989624 -188.60054016]
[-218.63420105 -191.79853821]
[-223.64987183 -207.41183472]
[-212.43722534 -219.37881470]
[-196.53086853 -215.38887024]
[-192.29388428 -199.54652405]
[-181.34791565 -189.29051208]
[-170.40193176 -179.03451538]
[-159.45596313 -168.77850342]
[-147.93721008 -176.92483521]
[-135.03677368 -182.64926147]
[-121.25752258 -185.72640991]
[-107.13704681 -186.03413391]
[-93.22663116 -183.55838013]
[-80.06977844 -178.39382935]
[-68.18096924 -170.74023438]
[-58.02548981 -160.89469910]
[-50.00130081 -149.24023438]
[-44.42338562 -136.23069763]
[-41.51140976 -122.37329102]
[-41.38106155 -108.20864868]
[-44.03946686 -94.28982544]
[-49.38483047 -81.16067505]
[-57.21031952 -69.33460999]
[-46.65312195 -58.67882538]
[-36.09592819 -48.02304840]
[-25.53873253 -37.36726761]
[-14.98153782 -26.71148872]
[-0.52745444 -23.11583519]
[3.68882203 -7.86678267]
[14.24601650 2.78899646]
[24.80321121 13.44477558]
[35.36040878 24.10055542]
[45.91760254 34.75633621]
[56.47479630 45.41211319]
[67.03199005 56.06789398]
[77.58918762 66.72367096]
[88.14638519 77.37945557]
[95.90879822 74.79167938]
[104.09120178 74.79167938]
[111.85361481 77.37945557]
[122.41081238 66.72367096]
[132.96800232 56.06789398]
[132.64393616 40.26692581]
[143.64788818 28.92281914]
[159.45138550 28.76582527]
[170.67852783 39.88909149]
[170.66842651 55.69337463]
[159.42707825 66.80227661]
[143.62379456 66.62509155]
[133.06658936 77.28086853]
[122.50939941 87.93664551]
[128.87670898 96.76680756]
[131.40486145 108.65676880]
[146.40422058 108.79618835]
[161.40356445 108.93560791]
[176.40292358 109.07502747]
[191.40226746 109.21443939]
[200.67768860 96.91514587]
[215.24650574 92.48760986]
[229.46073914 97.42925262]
[237.93804932 109.64698792]
[252.93740845 109.78640747]
[267.93676758 109.92582703]
[277.96112061 97.92389679]
[293.36392212 95.22431946]
[306.87243652 103.10175323]
[312.10833740 117.83672333]
[306.59942627 132.47181702]
[292.94683838 140.09678650]
[277.59686279 137.11137390]
[267.79733276 124.92517853]
[252.79798889 124.78575897]
[237.79862976 124.64633942]
[229.09567261 136.70439148]
[214.79205322 141.38095093]
[200.30804443 136.68338013]
[191.26284790 124.21379852]
[176.26350403 124.07437897]
[161.26414490 123.93495941]
[146.26480103 123.79553986]
[131.26544189 123.65612030]
[144.36177063 130.96954346]
[159.35888672 131.26402283]
[173.15901184 137.14250183]
[183.76179504 147.75291443]
[189.63035583 161.55726624]
[189.91404724 176.55458069]
[184.57174683 190.57098389]
[174.37780762 201.57479858]
[160.80987549 207.97097778]
[145.83462524 208.83239746]
[131.62275696 204.03421021]
[120.23428345 194.27189636]
[113.31998444 180.96052551]
[111.88210297 166.02960205]
[116.12968445 151.64216614]
[113.11185455 136.94888306]
[108.71591187 151.29026794]
[104.31996918 165.63166809]
[99.92402649 179.97306824]
[110.27194977 191.23661804]
[113.57087708 206.06948853]
[109.03258514 220.46636963]
[97.97139740 230.59091187]
[83.42557526 233.79786682]
[79.02963257 248.13926697]
[74.63368225 262.48065186]
[70.23773956 276.82205200]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 16]
[2 15]
[3 14]
[4 12]
[5 11]
[17 168]
[18 167]
[19 166]
[20 165]
[25 160]
[26 159]
[27 158]
[28 157]
[30 97]
[31 96]
[32 95]
[33 94]
[34 93]
[35 92]
[36 91]
[37 90]
[38 89]
[40 87]
[41 86]
[42 85]
[43 84]
[44 83]
[57 68]
[58 67]
[59 66]
[60 65]
[100 111]
[101 110]
[102 109]
[113 141]
[114 140]
[115 139]
[116 138]
[117 137]
[121 133]
[122 132]
[123 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
