%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 09:33:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCCUGGCCUUGGGGUACUGCUGGCCAGGGGUAGGAUAGUAUAGGAAGUAGAAGGGGAAGGAGGGUUAGAUAGAGAAUGCUGAAUAGGCAGUAGUUGGGAGAGAGCCUCAAUAUUGGGGGAGGGGAGAGUGUAGGGAAAAGGAUCCACUGGGUGAAUCCUCCCUCUCAGAACCAAUAAAAUAGAAUUGACCUUUUAGAC\
) } def
/len { sequence length } bind def

/coor [
[-1.27178633 294.61062622]
[-18.69368935 301.49533081]
[-37.39596558 302.05487061]
[-55.15599060 296.23788452]
[-63.93479156 308.40063477]
[-72.71359253 320.56338501]
[-81.49239349 332.72613525]
[-83.29519653 348.44430542]
[-97.01766968 354.23593140]
[-105.79647064 366.39868164]
[-114.57527161 378.56146240]
[-123.35407257 390.72421265]
[-132.13287354 402.88696289]
[-140.91168213 415.04971313]
[-134.02851868 428.72015381]
[-134.29835510 444.02328491]
[-141.65916443 457.44256592]
[-154.41949463 465.89434814]
[-169.64712524 467.43646240]
[-183.84283447 461.71453857]
[-193.74456787 450.04345703]
[-197.07698059 435.10513306]
[-193.07431030 420.33227539]
[-182.65632629 409.11959839]
[-168.21702576 404.04367065]
[-153.07443237 406.27090454]
[-144.29563904 394.10815430]
[-135.51683044 381.94540405]
[-126.73802948 369.78265381]
[-117.95922852 357.61990356]
[-109.18042755 345.45712280]
[-108.00553894 330.60894775]
[-93.65515137 323.94735718]
[-84.87635040 311.78457642]
[-76.09754944 299.62182617]
[-67.31874847 287.45907593]
[-74.72252655 278.74484253]
[-80.13710785 268.66445923]
[-83.31862640 257.66497803]
[-84.12235260 246.23509216]
[-82.50925446 234.88322449]
[-78.54789734 224.11506653]
[-72.41150665 214.41101074]
[-64.37043762 206.20465088]
[-54.78023148 199.86352539]
[-44.06589508 195.67257690]
[-32.70309830 193.82136536]
[-21.19701767 194.39549255]
[-10.05990696 197.37269592]
[0.21172732 202.62359619]
[10.09089279 191.33633423]
[19.97005844 180.04908752]
[29.84922409 168.76184082]
[39.72838974 157.47457886]
[49.60755539 146.18733215]
[59.48672104 134.90007019]
[51.39023590 122.28075409]
[47.11543655 107.90972137]
[46.99840164 92.91683197]
[51.04833221 78.48081970]
[58.94682693 65.73664093]
[70.07290649 55.68623352]
[63.50436401 42.20089722]
[56.93582153 28.71556282]
[50.36727905 15.23022842]
[37.36814117 6.21175146]
[38.75083923 -8.61853600]
[32.18229675 -22.10387039]
[17.96501541 -19.47239685]
[3.56364226 -20.61488724]
[-10.03801823 -25.44698524]
[-21.91242409 -33.63249588]
[-31.25155258 -44.60677719]
[-37.42188644 -57.61567688]
[-40.00737381 -71.76737213]
[-38.83749771 -86.09348297]
[-33.99848557 -99.61536407]
[-25.82699776 -111.41094208]
[-14.88670921 -120.67758942]
[-21.24368477 -134.26393127]
[-27.60066032 -147.85028076]
[-33.95763397 -161.43663025]
[-40.31460953 -175.02297974]
[-55.25635910 -180.17271423]
[-62.10515976 -194.41593933]
[-56.79774475 -209.30239868]
[-42.48290634 -216.00022888]
[-27.65338516 -210.53572083]
[-21.10727310 -196.15087891]
[-26.72826195 -181.37995911]
[-20.37128639 -167.79360962]
[-14.01431084 -154.20726013]
[-7.65733576 -140.62091064]
[-1.30036044 -127.03456116]
[14.09062386 -129.53404236]
[29.57737923 -127.59930420]
[43.90705490 -121.37864685]
[55.91808701 -111.36740112]
[64.63436127 -98.36851501]
[69.34452057 -83.42819214]
[69.66004944 -67.75163269]
[65.54725647 -52.60585785]
[57.33071899 -39.21728134]
[45.66762924 -28.67241287]
[52.23617172 -15.18707848]
[64.76548767 -7.13316202]
[63.85261536 8.66168594]
[70.42115784 22.14702034]
[76.98970032 35.63235474]
[83.55824280 49.11769104]
[94.40074158 46.82115936]
[105.48377991 46.80912781]
[116.33123779 49.08211136]
[126.47712708 53.54246521]
[135.48559570 59.99858093]
[142.96963501 68.17311096]
[148.60775757 77.71488190]
[162.98504639 73.43779755]
[177.36235046 69.16071320]
[191.73963928 64.88362122]
[206.11692810 60.60653687]
[220.49421692 56.32945251]
[234.87152100 52.05236435]
[249.24880981 47.77528000]
[263.62609863 43.49819183]
[267.23406982 30.19031334]
[276.87158203 20.48148537]
[289.94393921 16.83373833]
[303.00585938 20.09735298]
[312.66952515 29.31555939]
[327.11190796 25.26370049]
[338.30902100 14.08627319]
[352.65319824 18.09800339]
[367.09558105 14.04614353]
[381.53796387 9.99428463]
[395.94824219 5.82968473]
[410.32553101 1.55259788]
[424.70281982 -2.72448874]
[432.00634766 -16.73998451]
[447.10604858 -21.40630913]
[461.04354858 -13.95501614]
[465.54995728 1.19317627]
[457.95175171 15.05111313]
[442.75674438 19.39712524]
[428.97991943 11.65280342]
[414.60263062 15.92988968]
[400.22534180 20.20697594]
[394.70611572 25.13141632]
[385.58981323 24.43666840]
[371.14743042 28.48852730]
[356.70504761 32.54038620]
[346.54095459 43.42799759]
[331.16375732 39.70608521]
[316.72137451 43.75794220]
[311.51733398 59.32309723]
[297.92663574 68.81679535]
[281.18914795 68.33725739]
[267.90319824 57.87548447]
[253.52589417 62.15256882]
[239.14860535 66.42965698]
[224.77131653 70.70674133]
[210.39401245 74.98383331]
[196.01672363 79.26091766]
[181.63943481 83.53800201]
[167.26214600 87.81509399]
[152.88484192 92.09217834]
[153.45286560 98.53974152]
[153.23771667 105.00870514]
[152.24253845 111.40428162]
[150.48193359 117.63277435]
[147.98170471 123.60291290]
[144.77845764 129.22723389]
[140.91912842 134.42332458]
[136.46028137 139.11506653]
[145.04791260 151.41354370]
[153.63555908 163.71202087]
[162.22319031 176.01049805]
[177.73947144 176.16685486]
[190.18041992 185.44062805]
[194.76220703 200.26582336]
[189.72306824 214.94189453]
[177.00064087 223.82556152]
[161.48696899 223.50086975]
[149.14736938 214.09269714]
[144.72666931 199.21865845]
[149.92471313 184.59812927]
[141.33708191 172.29965210]
[132.74943542 160.00117493]
[124.16180420 147.70269775]
[97.07626343 153.39280701]
[70.77397919 144.77923584]
[60.89480972 156.06649780]
[51.01564407 167.35374451]
[41.13647842 178.64100647]
[31.25731277 189.92825317]
[21.37814713 201.21549988]
[11.49898052 212.50276184]
[21.15015984 228.68789673]
[24.72820663 247.16661072]
[21.82281876 265.74041748]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 36]
[5 35]
[6 34]
[7 33]
[9 31]
[10 30]
[11 29]
[12 28]
[13 27]
[14 26]
[50 197]
[51 196]
[52 195]
[53 194]
[54 193]
[55 192]
[56 191]
[62 110]
[63 109]
[64 108]
[65 107]
[67 105]
[68 104]
[79 94]
[80 93]
[81 92]
[82 91]
[83 90]
[117 166]
[118 165]
[119 164]
[120 163]
[121 162]
[122 161]
[123 160]
[124 159]
[125 158]
[130 154]
[131 153]
[133 151]
[134 150]
[135 149]
[136 147]
[137 146]
[138 145]
[174 189]
[175 188]
[176 187]
[177 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
