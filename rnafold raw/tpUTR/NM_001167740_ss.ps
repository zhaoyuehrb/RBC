%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 20:42:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAACGCAGUCAGAGGGAAAUACGGCGUGUGUCUUUGUUGAAUGCCUUAUUGAGGUCACACACUCUAUGCUUUGUUAGCUGUGUGAACCUCUCCUAUUGGAAAUUCUGUUCCGUGUUUGUGUAGGUAAAUAAAGGCAGACAUGGUUUGCAAACCACAAGAAUCAUUAGUUGUAGAGAAGCACGAUUAUAAUAAAUUCAAAACAUUUGGUUGAGGAUGCCAUC\
) } def
/len { sequence length } bind def

/coor [
[193.62940979 104.75996399]
[190.90771484 99.85540771]
[175.92098999 99.22447205]
[160.93426514 98.59352875]
[145.94754028 97.96259308]
[130.96081543 97.33165741]
[98.17030334 138.89820862]
[88.01922607 149.94155884]
[77.86814880 160.98490906]
[74.22542572 176.38105774]
[59.91601181 180.51504517]
[49.76493835 191.55839539]
[39.61386490 202.60176086]
[29.46278954 213.64511108]
[19.38940620 224.75938416]
[9.39420700 235.94401550]
[-0.60099208 247.12864685]
[-10.59619045 258.31326294]
[-20.59138870 269.49789429]
[-24.01782990 284.94363403]
[-38.26786041 289.27789307]
[-48.26306152 300.46252441]
[-58.25825882 311.64715576]
[-68.25345612 322.83178711]
[-74.29940033 338.67108154]
[-91.19336700 337.24615479]
[-94.50084686 320.61795044]
[-79.43808746 312.83657837]
[-69.44289398 301.65194702]
[-59.44769287 290.46731567]
[-49.45249176 279.28268433]
[-46.74097824 264.63696289]
[-31.77602196 259.50271606]
[-21.78082275 248.31806946]
[-11.78562450 237.13343811]
[-1.79042590 225.94880676]
[8.20477295 214.76417542]
[10.31608391 207.68893433]
[18.41943550 203.49403381]
[28.57050896 192.45068359]
[38.72158432 181.40733337]
[48.87265778 170.36396790]
[51.78930664 155.75772095]
[66.82479858 150.83384705]
[76.97586823 139.79048157]
[87.12694550 128.74713135]
[85.76707458 121.37144470]
[74.35181427 131.10241699]
[60.21694946 126.08188629]
[57.49752808 111.33045197]
[68.91300201 101.59973145]
[83.04733276 106.62007141]
[81.68746185 99.24438477]
[68.26553345 92.54723358]
[54.84360504 85.85008240]
[41.42167664 79.15293121]
[27.99974823 72.45578003]
[14.53118515 65.85291290]
[1.01665223 59.34465790]
[-12.49788094 52.83640289]
[-26.01241302 46.32814789]
[-39.52694702 39.81989288]
[-53.04148102 33.31163406]
[-65.44501495 36.82672501]
[-76.56428528 31.13510323]
[-80.69152832 19.77071571]
[-94.11345673 13.07356453]
[-107.53538513 6.37641430]
[-121.23876953 13.65631104]
[-136.59931946 11.45789337]
[-147.71060181 0.62649560]
[-150.30007935 -14.67298794]
[-143.37207031 -28.55759239]
[-129.59051514 -35.68840790]
[-114.25472260 -33.32348633]
[-103.26159668 -22.37218857]
[-100.83823395 -7.04551458]
[-87.41630554 -0.34836400]
[-73.99437714 6.34878683]
[-56.55618286 4.34452438]
[-46.53322220 19.79710197]
[-33.01869202 26.30535889]
[-19.50415802 32.81361389]
[-5.98962450 39.32186890]
[7.52490854 45.83012772]
[21.03944206 52.33838272]
[28.42265320 52.40849686]
[34.69689941 59.03385162]
[48.11882782 65.73100281]
[61.54075623 72.42815399]
[74.96268463 79.12530518]
[88.38461304 85.82245636]
[99.28451538 75.51750183]
[93.35047913 61.74117661]
[87.41643524 47.96485138]
[73.95121002 38.60431290]
[75.59449768 22.28770447]
[90.65583038 15.80015755]
[103.64139557 25.81550026]
[101.19276428 42.03080750]
[107.12680054 55.80713272]
[113.06084442 69.58345795]
[112.59445190 54.59071350]
[122.30209351 43.15560913]
[137.17170715 41.18212128]
[149.52606201 49.68916321]
[152.98660278 64.28453064]
[145.76661682 77.43260193]
[131.59176636 82.34493256]
[146.57849121 82.97586823]
[161.56521606 83.60680389]
[176.55194092 84.23774719]
[191.53866577 84.86868286]
[204.45834351 77.24755096]
[211.15550232 63.82562256]
[217.85264587 50.40369415]
[224.54980469 36.98176575]
[231.24694824 23.55983543]
[237.94410706 10.13790798]
[244.64125061 -3.28402138]
[251.33840942 -16.70594978]
[250.57655334 -32.50880432]
[263.18228149 -40.44258118]
[254.64233398 -53.20834351]
[253.64541626 -68.53485107]
[260.45968628 -82.29933929]
[273.25216675 -90.79924011]
[288.58169556 -91.74811554]
[302.32476807 -84.89073181]
[310.78454590 -72.07167816]
[311.68536377 -56.73922729]
[304.78491211 -43.01772308]
[291.93942261 -34.59819031]
[276.60421753 -33.74542999]
[277.84509277 -18.90260315]
[264.76034546 -10.00879955]
[258.06317139 3.41312933]
[251.36602783 16.83505821]
[244.66888428 30.25698662]
[237.97172546 43.67891693]
[231.27458191 57.10084534]
[224.57742310 70.52277374]
[217.88027954 83.94470215]
[223.13119507 97.99560547]
[236.98939514 103.73585510]
[250.84757996 109.47610474]
[266.55822754 107.60887146]
[275.35574341 119.62772369]
[291.06637573 117.76048279]
[299.86392212 129.77932739]
[318.06475830 126.95610046]
[328.19018555 141.29428101]
[342.12753296 146.83961487]
[356.06484985 152.38494873]
[370.00219727 157.93028259]
[383.93951416 163.47561646]
[400.76226807 151.34326172]
[421.35717773 151.86564636]
[437.32513428 164.66055298]
[442.25650024 184.37527466]
[456.54812622 188.93041992]
[470.83975220 193.48556519]
[485.13137817 198.04072571]
[500.06945801 186.05863953]
[519.06121826 185.51654053]
[534.41351318 196.45259094]
[540.01678467 214.29205322]
[554.48736572 218.24203491]
[568.95794678 222.19200134]
[583.42852783 226.14198303]
[597.89910889 230.09196472]
[612.36968994 234.04194641]
[626.84027100 237.99192810]
[638.86010742 228.17851257]
[654.35443115 227.33799744]
[667.36529541 235.79356384]
[672.88983154 250.29388428]
[668.80364990 265.26330566]
[656.67810059 274.94573975]
[641.17559814 275.61813354]
[628.25720215 267.02191162]
[622.89031982 252.46250916]
[608.41973877 248.51252747]
[593.94915771 244.56254578]
[579.47857666 240.61256409]
[565.00799561 236.66258240]
[550.53741455 232.71261597]
[536.06683350 228.76263428]
[528.85076904 237.24943542]
[518.94567871 242.45820618]
[507.76177979 243.60415649]
[496.90762329 240.48403931]
[487.95858765 233.51094055]
[482.22839355 223.66004944]
[480.57623291 212.33235168]
[466.28460693 207.77720642]
[451.99298096 203.22204590]
[437.70135498 198.66690063]
[431.57223511 206.09857178]
[423.47198486 211.36645508]
[414.13644409 213.97093201]
[404.42004395 213.65524292]
[395.21759033 210.43078613]
[387.38186646 204.57762146]
[381.64456177 196.62026978]
[378.54809570 187.28071594]
[378.39419556 177.41294861]
[364.45684814 171.86761475]
[350.51953125 166.32228088]
[336.58218384 160.77694702]
[322.64486694 155.23162842]
[311.42089844 159.72679138]
[299.76770020 155.22839355]
[294.12365723 143.63752747]
[279.40426636 145.91534424]
[269.61550903 133.48591614]
[254.89608765 135.76373291]
[245.10733032 123.33429718]
[231.24914551 117.59404755]
[217.39094543 111.85379791]
[212.42109680 113.08377075]
[207.20437622 112.98547363]
[202.09625244 111.51525879]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 113]
[3 112]
[4 111]
[5 110]
[6 109]
[7 46]
[8 45]
[9 44]
[11 42]
[12 41]
[13 40]
[14 39]
[15 37]
[16 36]
[17 35]
[18 34]
[19 33]
[21 31]
[22 30]
[23 29]
[24 28]
[53 92]
[54 91]
[55 90]
[56 89]
[57 88]
[58 86]
[59 85]
[60 84]
[61 83]
[62 82]
[63 81]
[66 79]
[67 78]
[68 77]
[93 102]
[94 101]
[95 100]
[114 143]
[115 142]
[116 141]
[117 140]
[118 139]
[119 138]
[120 137]
[121 136]
[123 134]
[144 220]
[145 219]
[146 218]
[148 216]
[150 214]
[152 211]
[153 210]
[154 209]
[155 208]
[156 207]
[160 198]
[161 197]
[162 196]
[163 195]
[167 188]
[168 187]
[169 186]
[170 185]
[171 184]
[172 183]
[173 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
