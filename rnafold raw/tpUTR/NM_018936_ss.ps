%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 10:20:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGUUAAUAAGGAUCUACUGAGGCUAGUCUCGUUUAAUUUGUGGAAAGUCCUUUUUUACUGCUUUGCCCAUUGGAGGUGUCUCCUUUUAUUAGAAAGUAACCAUCUUAUUCCAAUUCUAUGCAUGUUACUGGUAUUUAUAAAUGUAUGAGUUUUUUUGCGGUAUAAUAAAUGUAAAUUUUCUUUGUAUUCUAA\
) } def
/len { sequence length } bind def

/coor [
[63.99382782 130.90530396]
[51.21057892 138.75314331]
[38.49128723 146.70422363]
[25.83679008 154.75802612]
[18.34882164 168.69505310]
[3.45736170 169.00114441]
[-9.19713402 177.05494690]
[-16.68510246 190.99197388]
[-31.57656288 191.29806519]
[-44.23106003 199.35186768]
[-56.88555527 207.40567017]
[-69.54004669 215.45947266]
[-82.19454956 223.51327515]
[-94.64969635 231.87205505]
[-106.89814758 240.53088379]
[-119.14660645 249.18971252]
[-131.39506531 257.84854126]
[-143.64350891 266.50738525]
[-155.30580139 275.94088745]
[-166.33299255 286.10952759]
[-177.36018372 296.27813721]
[-188.38739014 306.44677734]
[-188.77653503 322.24627686]
[-200.28108215 333.08236694]
[-216.07557678 332.52618408]
[-226.78942871 320.90774536]
[-226.06631470 305.11999512]
[-214.33522034 294.52957153]
[-198.55601501 295.41958618]
[-187.52880859 285.25094604]
[-176.50161743 275.08230591]
[-165.47442627 264.91369629]
[-180.47187805 265.18975830]
[-192.83862305 256.70074463]
[-197.97158813 242.60632324]
[-193.96023560 228.15263367]
[-182.29762268 218.71952820]
[-167.32473755 217.81811523]
[-154.61465454 225.78390503]
[-148.89825439 239.65194702]
[-152.30235291 254.25892639]
[-140.05389404 245.60009766]
[-127.80543518 236.94126892]
[-115.55698395 228.28242493]
[-103.30852509 219.62359619]
[-102.35700226 216.21450806]
[-99.69869232 213.10037231]
[-95.49192047 211.08210754]
[-90.24835205 210.85877991]
[-77.59384918 202.80497742]
[-64.93935394 194.75117493]
[-52.28486252 186.69737244]
[-39.63036346 178.64356995]
[-33.04753113 165.28259277]
[-17.25093651 164.40045166]
[-4.59644079 156.34664917]
[1.98639381 142.98567200]
[17.78298759 142.10353088]
[30.43748283 134.04972839]
[34.39805603 127.79715729]
[43.36274719 125.96988678]
[56.14599991 118.12205505]
[53.35527420 108.70931244]
[52.56136703 98.92372894]
[53.79825592 89.18421936]
[57.01299286 79.90772247]
[62.06795883 71.49136353]
[68.74675751 64.29541779]
[76.76347351 58.62795258]
[85.77491760 54.73158264]
[83.59648895 39.89061356]
[81.41806030 25.04964066]
[79.23963165 10.20866776]
[77.06120300 -4.63230371]
[74.88277435 -19.47327614]
[72.22491455 -34.23592377]
[69.09040070 -48.90476227]
[65.95588684 -63.57360077]
[62.82137299 -78.24243927]
[48.30150223 -83.05083466]
[38.20459747 -94.40641785]
[35.16746902 -109.19297028]
[39.90769196 -123.41922760]
[51.05720901 -133.29615784]
[47.92269516 -147.96499634]
[44.78818130 -162.63383484]
[41.65366745 -177.30267334]
[38.51915359 -191.97151184]
[27.13710022 -203.77748108]
[31.92975998 -219.46067810]
[47.96685791 -222.88755798]
[58.75080109 -210.53286743]
[53.18799210 -195.10603333]
[56.32250595 -180.43719482]
[59.45701981 -165.76835632]
[62.59153366 -151.09951782]
[65.72604370 -136.43067932]
[79.93860626 -131.97323608]
[90.07922363 -120.92680359]
[93.35073090 -106.19033051]
[88.77675629 -91.69979095]
[77.49021149 -81.37695312]
[80.62472534 -66.70811462]
[83.75923920 -52.03927612]
[86.89375305 -37.37043762]
[89.18601227 -35.73345947]
[90.96314240 -33.08340836]
[91.83361053 -29.61366463]
[91.48371124 -25.65648079]
[89.72374725 -21.65170479]
[91.90217590 -6.81073236]
[94.08060455 8.03023911]
[96.25903320 22.87121201]
[98.43746185 37.71218491]
[100.61589050 52.55315399]
[112.78941345 53.59113312]
[124.46563721 57.74481201]
[134.84957886 64.82560730]
[143.21083069 74.44289398]
[148.93458557 86.02484131]
[151.56631470 98.85210419]
[166.32896423 96.19423676]
[181.09159851 93.53636932]
[186.52577209 77.92745209]
[199.01579285 67.24686432]
[215.09437561 64.33508301]
[230.36038208 69.89301300]
[240.68341064 82.31621552]
[255.40107727 79.41964722]
[270.11874390 76.52307892]
[282.16506958 66.26653290]
[296.14691162 71.40050507]
[310.86456299 68.50393677]
[325.58224487 65.60736847]
[340.29992676 62.71080017]
[346.70239258 48.57615662]
[360.20681763 40.93354034]
[375.62051392 42.72169876]
[387.01660156 53.25304413]
[390.01300049 68.47805786]
[383.45761108 82.54241943]
[369.87103271 90.03808594]
[354.47763062 88.08282471]
[343.19650269 77.42847443]
[328.47882080 80.32504272]
[313.76113892 83.22161102]
[299.04345703 86.11817932]
[288.04986572 96.16754150]
[273.01531982 91.24074554]
[258.29763794 94.13732147]
[243.57997131 97.03388977]
[240.02206421 110.22730255]
[231.08151245 120.64867401]
[218.46153259 126.22509766]
[204.60427856 125.81504822]
[192.21839905 119.44159698]
[183.74946594 108.29901886]
[168.98681641 110.95688629]
[154.22418213 113.61474609]
[148.65264893 127.54163361]
[157.50869751 139.64826965]
[166.36473083 151.75491333]
[175.22076416 163.86154175]
[184.07679749 175.96818542]
[192.93283081 188.07481384]
[201.78886414 200.18145752]
[217.15498352 202.73492432]
[225.96380615 215.13893127]
[223.43475342 229.77244568]
[232.29078674 241.87907410]
[247.80676270 241.69415283]
[260.44863892 250.69206238]
[265.35537720 265.41293335]
[260.64022827 280.19625854]
[248.11625671 289.35757446]
[232.59919739 289.37417603]
[220.05566406 280.23965454]
[215.30891418 265.46643066]
[220.18415833 250.73510742]
[211.32812500 238.62847900]
[196.61590576 236.60699463]
[187.46215820 224.45530701]
[189.68223572 209.03749084]
[180.82620239 196.93084717]
[171.97016907 184.82421875]
[163.11412048 172.71757507]
[154.25808716 160.61094666]
[145.40205383 148.50430298]
[136.54602051 136.39767456]
[124.95980072 144.34982300]
[111.82574463 148.79029846]
[98.16707611 149.48103333]
[85.01914215 146.47195435]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 62]
[2 61]
[3 59]
[4 58]
[6 56]
[7 55]
[9 53]
[10 52]
[11 51]
[12 50]
[13 49]
[14 45]
[15 44]
[16 43]
[17 42]
[18 41]
[19 32]
[20 31]
[21 30]
[22 29]
[70 115]
[71 114]
[72 113]
[73 112]
[74 111]
[75 110]
[76 105]
[77 104]
[78 103]
[79 102]
[84 97]
[85 96]
[86 95]
[87 94]
[88 93]
[121 159]
[122 158]
[123 157]
[128 151]
[129 150]
[130 149]
[132 147]
[133 146]
[134 145]
[135 144]
[160 189]
[161 188]
[162 187]
[163 186]
[164 185]
[165 184]
[166 183]
[169 180]
[170 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
