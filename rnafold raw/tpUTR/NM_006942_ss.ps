%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 08:25:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCAUGGACGCAGACCUCACGGGACGGGCCUCAUCCUCCUUUUUUAAUCCAGCAGCAUCCCCUACCCCAGGCUGUCAACCCUUUCUCCUGUUGGACUACAGUUCAGAGGCAGCCUGCAGUCCUCCCAUGAUAGCCAGGGAGAGCCGCACAACAUACAAUUAUAUUUUUGGUAGUAUUAAACAGUUUUGUAUUAUUC\
) } def
/len { sequence length } bind def

/coor [
[97.49372864 325.41418457]
[90.15987396 327.07522583]
[87.56810760 341.84960938]
[93.69569397 357.06094360]
[83.37440491 369.80468750]
[67.22190857 366.97119141]
[61.85449982 351.47528076]
[72.79371643 339.25784302]
[75.38548279 324.48345947]
[60.50762558 307.56433105]
[63.00897598 284.90377808]
[81.65209198 271.32122803]
[82.59867859 256.35113525]
[83.54526520 241.38104248]
[84.49185181 226.41093445]
[85.43843079 211.44082642]
[78.51971436 198.25065613]
[87.11246490 184.96626282]
[88.05905151 169.99615479]
[75.19818878 166.53509521]
[63.20986557 160.73330688]
[52.51583099 152.79490662]
[43.49229813 142.99916077]
[30.66265297 150.77091980]
[17.83300591 158.54267883]
[5.00336075 166.31442261]
[-0.72229314 173.44451904]
[-8.09073162 174.10575867]
[-21.04146576 181.67401123]
[-33.99219894 189.24227905]
[-39.43727493 204.33302307]
[-54.67630768 209.34814453]
[-68.01921082 200.44049072]
[-69.23045349 184.44322205]
[-57.38087082 173.62809753]
[-41.56045532 176.29153442]
[-28.60972023 168.72328186]
[-15.65898609 161.15502930]
[-2.76839471 153.48478699]
[10.06125164 145.71302795]
[22.89089775 137.94126892]
[35.72054291 130.16950989]
[31.65907097 119.27603912]
[29.42963028 107.86582184]
[29.09198761 96.24474335]
[30.65519142 84.72433472]
[34.07734299 73.61342621]
[39.26669312 63.20986557]
[46.08414078 53.79254913]
[54.34692383 45.61392593]
[63.83353806 38.89324570]
[74.28968048 33.81066895]
[85.43504333 30.50244522]
[96.97084808 29.05725861]
[97.91743469 14.08715630]
[91.06642151 -0.17377773]
[99.59146118 -12.38741493]
[100.53804779 -27.35751724]
[92.12892151 -31.60107231]
[85.38633728 -38.12915802]
[80.90598297 -46.33673859]
[79.07525635 -55.47173691]
[80.03979492 -64.70394897]
[83.69216919 -73.20046997]
[89.68334198 -80.20085144]
[97.45601654 -85.08515167]
[94.86425018 -99.85955048]
[82.20992279 -108.94281769]
[79.79196930 -123.96307373]
[88.52946472 -135.97106934]
[85.93769836 -150.74545288]
[83.34593201 -165.51985168]
[80.75417328 -180.29425049]
[78.16240692 -195.06864929]
[75.57064056 -209.84303284]
[72.97887421 -224.61743164]
[62.31905746 -214.06431580]
[47.40391541 -215.65760803]
[39.21385193 -228.22433472]
[43.77832031 -242.51300049]
[57.73699951 -248.00437927]
[70.81371307 -240.65565491]
[69.39501953 -255.58840942]
[67.97631836 -270.52117920]
[66.55762482 -285.45394897]
[65.13892365 -300.38668823]
[51.94305038 -308.33496094]
[46.02678680 -322.36532593]
[49.46587372 -337.01580811]
[60.73739243 -346.71585083]
[59.31869507 -361.64862061]
[57.89999771 -376.58139038]
[56.48130035 -391.51412964]
[44.14097977 -401.38793945]
[42.47995377 -417.10470581]
[52.48367691 -429.33993530]
[68.21711731 -430.83471680]
[80.34590912 -420.70217896]
[81.67424774 -404.95382690]
[71.41406250 -392.93283081]
[72.83275604 -378.00009155]
[74.25144958 -363.06732178]
[75.67015076 -348.13455200]
[88.56664276 -340.73062134]
[94.70305634 -326.98986816]
[91.53472900 -312.09640503]
[80.07168579 -301.80538940]
[81.49037933 -286.87261963]
[82.90908051 -271.93988037]
[84.32777405 -257.00711060]
[85.74647522 -242.07435608]
[87.75326538 -227.20919800]
[90.34503174 -212.43479919]
[92.93679810 -197.66041565]
[95.52856445 -182.88601685]
[98.12033081 -168.11161804]
[100.71209717 -153.33721924]
[103.30386353 -138.56283569]
[115.60682678 -130.24581909]
[118.44570923 -115.29940033]
[109.63864899 -102.45130920]
[112.23041534 -87.67691803]
[123.19711304 -84.73031616]
[132.32327271 -77.97278595]
[145.50646973 -85.12842560]
[158.68966675 -92.28407288]
[171.87286377 -99.43972015]
[185.05606079 -106.59536743]
[191.11285400 -113.44639587]
[198.50433350 -113.75805664]
[211.79884338 -120.70469666]
[217.95225525 -135.52073669]
[233.41163635 -139.80877686]
[246.31785583 -130.27941895]
[246.77038574 -114.24274445]
[234.42207336 -104.00073242]
[218.74549866 -107.41017914]
[205.45097351 -100.46353912]
[192.21170044 -93.41217041]
[179.02850342 -86.25652313]
[165.84530640 -79.10087585]
[152.66210938 -71.94522858]
[139.47891235 -64.78958130]
[135.94761658 -40.55315399]
[115.50814819 -26.41093254]
[114.56156921 -11.44083023]
[121.48028564 1.74934113]
[112.88753510 15.03374004]
[111.94094849 30.00384331]
[132.52136230 36.87782669]
[150.06507874 49.64588928]
[162.93391418 67.11580658]
[169.92625427 87.65631104]
[170.38917542 109.34941864]
[164.27944946 130.16950989]
[177.10910034 137.94126892]
[189.93875122 145.71302795]
[202.76840210 153.48478699]
[218.58064270 154.01710510]
[225.45758057 167.22911072]
[238.28721619 175.00085449]
[251.11686707 182.77261353]
[263.94650269 190.54437256]
[279.23330688 186.53320312]
[292.83670044 194.57830811]
[296.68600464 209.90664673]
[288.49752808 223.42420959]
[273.12936401 227.11125183]
[259.69912720 218.78033447]
[256.17474365 203.37402344]
[243.34510803 195.60226440]
[230.51547241 187.83050537]
[217.68582153 180.05874634]
[202.79122925 180.08232117]
[194.99664307 166.31442261]
[182.16699219 158.54267883]
[169.33734131 150.77091980]
[156.50770569 142.99916077]
[149.63690186 150.77622986]
[141.70593262 157.46879578]
[132.88418579 162.93391418]
[123.36009216 167.05485535]
[113.33705139 169.74360657]
[103.02915192 170.94273376]
[102.08256531 185.91284180]
[108.93357849 200.17378235]
[100.40853882 212.38742065]
[99.46195221 227.35751343]
[98.51536560 242.32762146]
[97.56877899 257.29772949]
[96.62220001 272.26782227]
[103.52272034 275.82226562]
[109.19766235 281.07855225]
[113.24119568 287.64108276]
[115.36946106 295.02166748]
[115.44046783 302.67572021]
[113.46346283 310.04244995]
[109.59721375 316.58605957]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 9]
[3 8]
[12 191]
[13 190]
[14 189]
[15 188]
[16 187]
[18 185]
[19 184]
[23 42]
[24 41]
[25 40]
[26 39]
[28 38]
[29 37]
[30 36]
[54 149]
[55 148]
[57 146]
[58 145]
[66 122]
[67 121]
[70 118]
[71 117]
[72 116]
[73 115]
[74 114]
[75 113]
[76 112]
[82 111]
[83 110]
[84 109]
[85 108]
[86 107]
[90 103]
[91 102]
[92 101]
[93 100]
[124 143]
[125 142]
[126 141]
[127 140]
[128 139]
[130 138]
[131 137]
[155 178]
[156 177]
[157 176]
[158 175]
[160 173]
[161 172]
[162 171]
[163 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
