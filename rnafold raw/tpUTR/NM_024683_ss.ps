%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 20:49:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUUCUGAGGUUAACGUGCUAAAGUAUAAUUAUUAGCUCUAACGUAACACCAACUGUUGUGAACAUCCAUGUUAUUGGAAAAGAACACAUUUUCAGUGUAUUUUAGAUGUUUAAAUUCUGACUUUUGGCUAUUAAAUGGUUUACACAAUAAGCCAAGACCAAAUCAAUAAACAUUUUAUGAGAUUC\
) } def
/len { sequence length } bind def

/coor [
[105.11418915 129.85769653]
[96.98161316 130.74882507]
[88.74591064 129.42175293]
[81.01239014 125.88800812]
[74.37185669 120.32411957]
[69.35568237 113.06448364]
[56.94522476 121.48947906]
[53.85318375 136.75633240]
[41.14719772 145.12368774]
[26.61163521 142.08181763]
[14.20117950 150.50682068]
[1.79072285 158.93180847]
[-10.61973381 167.35681152]
[-15.97647381 174.78204346]
[-23.31019592 175.81704712]
[-35.86043167 184.03236389]
[-48.41067123 192.24769592]
[-60.67784500 200.87998962]
[-72.64810181 209.91950989]
[-84.61836243 218.95903015]
[-96.58861542 227.99855042]
[-108.55887604 237.03805542]
[-106.59184265 252.27047729]
[-112.51935577 266.43945312]
[-124.74694824 275.73364258]
[-139.98544312 277.65292358]
[-154.13578796 271.68099976]
[-163.39158630 259.42434692]
[-165.26309204 244.17990112]
[-159.24687195 230.04835510]
[-146.96125793 220.83102417]
[-131.71101379 219.00730896]
[-117.59839630 225.06781006]
[-105.62813568 216.02828979]
[-93.65788269 206.98876953]
[-81.68762207 197.94924927]
[-69.71736145 188.90972900]
[-69.20492554 186.13356018]
[-67.55035400 183.39552307]
[-64.76346588 181.13594055]
[-61.01467514 179.78312683]
[-56.62599564 179.69744873]
[-44.07575607 171.48213196]
[-31.52551842 163.26681519]
[-19.04473114 154.94635010]
[-6.63427401 146.52136230]
[5.77618217 138.09635925]
[18.18663788 129.67137146]
[20.72402763 115.03929901]
[33.18997574 106.31836700]
[48.52022552 109.07901764]
[60.93068314 100.65402222]
[63.56297684 85.88679504]
[54.82794189 73.69256592]
[46.09291077 61.49833679]
[37.35787964 49.30410767]
[17.33848190 41.69755936]
[16.11350250 21.10611343]
[6.77523422 9.36742783]
[-2.56303310 -2.37125921]
[-11.90130043 -14.10994625]
[-29.19734573 -11.10058594]
[-45.55635452 -17.22252655]
[-56.51525879 -30.70953941]
[-59.13292694 -47.79937363]
[-52.77907181 -63.78300476]
[-62.50641251 -75.20136261]
[-72.23375702 -86.61971283]
[-81.96109772 -98.03807068]
[-97.73309326 -99.04792023]
[-108.10862732 -110.96948242]
[-106.93208313 -126.72991943]
[-94.90148163 -136.97883606]
[-79.15437317 -135.63572693]
[-69.03322601 -123.49744415]
[-70.54273987 -107.76541138]
[-60.81539917 -96.34705353]
[-51.08805847 -84.92870331]
[-41.36071777 -73.51034546]
[-29.23103142 -77.12476349]
[-16.58949661 -75.87139130]
[-5.32304478 -69.90173340]
[2.87317157 -60.07387924]
[6.75081158 -47.82938004]
[5.69838572 -34.98181915]
[-0.16261394 -23.44821358]
[9.17565346 -11.70952702]
[18.51391983 0.02916000]
[27.85218811 11.76784611]
[36.75615692 11.32283497]
[44.98649597 15.09321213]
[50.63393021 22.34402466]
[52.32452774 31.51796722]
[49.55210876 40.56907654]
[58.28713989 52.76330566]
[67.02217102 64.95753479]
[75.75720215 77.15176392]
[97.13932800 68.62945557]
[117.56571198 76.06575012]
[127.24260712 94.09072876]
[142.21669006 94.97221375]
[157.19076538 95.85370636]
[172.16484070 96.73519897]
[187.13891602 97.61668396]
[202.11299133 98.49817657]
[217.10452271 99.00208282]
[232.10400391 99.12807465]
[247.10346985 99.25407410]
[262.10293579 99.38007355]
[277.10241699 99.50607300]
[292.10186768 99.63207245]
[307.10134888 99.75807190]
[322.10083008 99.88406372]
[326.51223755 85.44732666]
[334.80453491 72.85130310]
[346.29858398 63.11210251]
[360.05734253 57.01249695]
[374.96228027 55.03899765]
[389.80435181 57.34307098]
[403.38204956 63.72954178]
[414.59863281 73.67309570]
[422.55072021 86.36148834]
[426.60113525 100.76188660]
[441.60061646 100.88788605]
[456.60009766 101.01388550]
[471.59954834 101.13988495]
[486.59902954 101.26588440]
[501.59851074 101.39187622]
[516.59796143 101.51787567]
[531.59741211 101.64387512]
[546.59741211 101.64387512]
[561.59692383 101.51787567]
[576.59637451 101.39187622]
[583.78063965 93.19017792]
[594.08398438 90.36588287]
[604.02825928 93.62134552]
[610.39331055 101.64761353]
[625.38854980 102.02557373]
[637.95892334 92.05738068]
[653.55682373 95.81047821]
[660.21679688 110.40580750]
[652.82995605 124.64708710]
[637.06280518 127.60962677]
[625.01055908 117.02081299]
[610.01531982 116.64285278]
[593.77526855 127.11568451]
[576.72235107 116.39134979]
[561.72290039 116.51734924]
[546.72344971 116.64334869]
[540.04730225 119.85015869]
[531.47143555 116.64334869]
[516.47198486 116.51734924]
[501.47250366 116.39134979]
[486.47302246 116.26535034]
[471.47357178 116.13935089]
[456.47409058 116.01335907]
[441.47460938 115.88735962]
[426.47515869 115.76136017]
[422.18338013 130.09167480]
[414.01925659 142.64469910]
[402.63720703 152.39842224]
[388.95416260 158.55589294]
[374.07546997 160.61030579]
[359.20578003 158.38668823]
[345.55142212 152.05680847]
[334.22262573 142.12590027]
[326.14309692 129.39234924]
[321.97482300 114.88353729]
[306.97534180 114.75753784]
[291.97589111 114.63153839]
[276.97640991 114.50554657]
[261.97692871 114.37954712]
[246.97747803 114.25354767]
[231.97799683 114.12754822]
[216.97853088 114.00154877]
[214.21186829 116.21900940]
[210.22676086 117.19537354]
[205.62351990 116.36956787]
[201.23150635 113.47225189]
[186.25743103 112.59075928]
[171.28335571 111.70927429]
[156.30928040 110.82778168]
[141.33520508 109.94629669]
[126.36112213 109.06480408]
[123.52677155 116.05039215]
[118.83911896 122.15819550]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 52]
[7 51]
[10 48]
[11 47]
[12 46]
[13 45]
[15 44]
[16 43]
[17 42]
[18 37]
[19 36]
[20 35]
[21 34]
[22 33]
[53 97]
[54 96]
[55 95]
[56 94]
[58 89]
[59 88]
[60 87]
[61 86]
[66 79]
[67 78]
[68 77]
[69 76]
[100 184]
[101 183]
[102 182]
[103 181]
[104 180]
[105 179]
[106 175]
[107 174]
[108 173]
[109 172]
[110 171]
[111 170]
[112 169]
[113 168]
[123 158]
[124 157]
[125 156]
[126 155]
[127 154]
[128 153]
[129 152]
[130 151]
[131 149]
[132 148]
[133 147]
[137 145]
[138 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
