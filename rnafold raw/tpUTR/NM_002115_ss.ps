%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 22:04:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAACCUCCAGGCUGAGGAGGUCUCCGCCGCAGCCUUGCUGGAGCCGGGUCGGGGUCUGCCUGUUUCCCAGCCAGGCCCAGCCACCCAGGACUCCUGGGACAUCCCAUGUGUGACCCCUCUGCGGCCAUUUGGCCUUGCUCCCUGGCUUUCCCUGAGAGAAGUAGCACUCAGGUUAGCAAUAUAUAUAUAUAAUUUAUUUACA\
) } def
/len { sequence length } bind def

/coor [
[215.82331848 429.43441772]
[213.30668640 444.22180176]
[210.79003906 459.00915527]
[216.99485779 474.18917847]
[206.73847961 486.98519897]
[190.57179260 484.23382568]
[185.12568665 468.76541138]
[196.00267029 456.49252319]
[198.51930237 441.70513916]
[201.03594971 426.91778564]
[187.54286194 420.36517334]
[177.47746277 431.48666382]
[167.41206360 442.60818481]
[157.34666443 453.72967529]
[147.28126526 464.85116577]
[137.21586609 475.97268677]
[133.69227600 491.39651489]
[119.41525269 495.64102173]
[109.34985352 506.76251221]
[105.82626343 522.18634033]
[91.54923248 526.43084717]
[81.48384094 537.55236816]
[75.33831787 553.35327148]
[58.45365906 551.82202148]
[55.25090027 535.17333984]
[70.36233521 527.48693848]
[80.42773438 516.36541748]
[83.23137665 501.73709106]
[98.22835541 496.69711304]
[108.29375458 485.57562256]
[111.09739685 470.94726562]
[126.09436798 465.90728760]
[136.15977478 454.78576660]
[146.22515869 443.66427612]
[156.29055786 432.54278564]
[166.35595703 421.42126465]
[176.42135620 410.29977417]
[183.17996216 396.90869141]
[186.14857483 382.20538330]
[189.11718750 367.50207520]
[192.08581543 352.79876709]
[195.05442810 338.09545898]
[195.16935730 323.09588623]
[192.42640686 308.34881592]
[189.68345642 293.60174561]
[186.94050598 278.85467529]
[184.19755554 264.10757446]
[181.45460510 249.36051941]
[178.71165466 234.61343384]
[175.96870422 219.86636353]
[157.86338806 210.92448425]
[150.75675964 191.75602722]
[158.85299683 172.71176147]
[151.58644104 159.58937073]
[144.31988525 146.46697998]
[137.05332947 133.34458923]
[129.78677368 120.22219849]
[122.52021027 107.09980774]
[102.22395325 135.27478027]
[57.23490524 119.68170929]
[44.40047073 111.91786194]
[31.56604004 104.15401459]
[18.73160934 96.39015961]
[5.89717770 88.62631226]
[-7.91123486 95.50608826]
[-23.24459457 93.80561829]
[-35.21008301 84.06751251]
[-39.98955917 69.39917755]
[-36.05790329 54.48121262]
[-24.66969681 44.07389069]
[-9.45887470 41.49815369]
[4.72084570 47.57590485]
[13.34476757 60.36775970]
[13.66102791 75.79187775]
[26.49545860 83.55573273]
[39.32989120 91.31958008]
[52.16432190 99.08342743]
[64.99875641 106.84728241]
[70.92843628 102.25502014]
[61.74391556 90.39565277]
[49.34427643 81.95474243]
[53.54053879 67.55365753]
[68.53350830 67.09454346]
[73.60327911 81.21113586]
[82.78780365 93.07049561]
[88.71748352 88.47824097]
[84.41136169 74.10961914]
[80.10523224 59.74099350]
[75.79911041 45.37237549]
[71.49298096 31.00375366]
[67.18685150 16.63513184]
[56.84799576 3.19845223]
[66.89748383 -10.45600224]
[82.80029297 -4.57918119]
[81.55547333 12.32900524]
[85.86160278 26.69762611]
[90.16773224 41.06624603]
[94.47385406 55.43486786]
[98.77998352 69.80348969]
[103.08610535 84.17211151]
[118.04209137 83.02387238]
[120.10439301 68.16632080]
[122.16669464 53.30876541]
[124.22899628 38.45121002]
[115.73804474 24.83932877]
[121.22185516 9.76261044]
[136.47370911 4.78662491]
[149.79370117 13.72852135]
[150.96386719 29.72884178]
[139.08654785 40.51351166]
[137.02424622 55.37106323]
[134.96194458 70.22862244]
[132.89964294 85.08617401]
[135.64259338 99.83325195]
[142.90916443 112.95563507]
[150.17572021 126.07802582]
[157.44227600 139.20042419]
[164.70883179 152.32281494]
[171.97538757 165.44520569]
[177.87347412 164.92544556]
[183.69592285 165.65005493]
[189.18553162 167.56436157]
[194.10453796 170.56167603]
[205.74966431 161.10699463]
[217.24853516 151.47496033]
[228.59844971 141.66784668]
[239.94836426 131.86074829]
[251.29829407 122.05363464]
[256.16949463 106.39466858]
[272.22357178 103.04820251]
[282.94543457 115.45680237]
[277.30538940 130.85556030]
[261.10540771 133.40354919]
[249.75547791 143.21066284]
[238.40556335 153.01777649]
[227.05564880 162.82487488]
[225.82106018 167.44290161]
[221.66949463 171.33259583]
[215.20434570 172.75210571]
[203.55921936 182.20680237]
[205.58731079 195.57157898]
[200.92073059 208.25833130]
[190.71578979 217.12341309]
[193.45874023 231.87048340]
[196.20169067 246.61756897]
[198.94464111 261.36462402]
[201.68759155 276.11172485]
[204.43054199 290.85879517]
[207.17349243 305.60586548]
[209.91644287 320.35293579]
[221.96389771 313.53009033]
[234.54551697 317.00442505]
[240.59570312 327.66757202]
[254.93090820 332.08367920]
[269.26611328 336.49978638]
[283.60131836 340.91586304]
[297.93652344 345.33197021]
[312.27172852 349.74807739]
[327.73818970 346.41653442]
[337.62347412 357.55792236]
[351.47463989 349.94735718]
[366.62683105 354.44030762]
[374.09054565 368.37115479]
[369.43765259 383.47500610]
[355.42864990 390.79098511]
[340.37484741 385.97866821]
[333.20736694 371.89312744]
[318.76626587 375.54052734]
[307.85562134 364.08328247]
[293.52041626 359.66717529]
[279.18521118 355.25106812]
[264.85000610 350.83499146]
[250.51480103 346.41888428]
[236.17959595 342.00277710]
[223.48059082 347.83093262]
[209.75773621 341.06405640]
[206.78912354 355.76736450]
[203.82051086 370.47067261]
[200.85188293 385.17398071]
[197.88327026 399.87728882]
[207.53761292 388.39715576]
[212.22424316 374.14810181]
[219.97433472 361.30535889]
[230.39651489 350.51748657]
[242.96444702 342.32928467]
[257.04345703 337.15420532]
[271.92257690 335.25366211]
[286.85037231 336.72357178]
[301.07302856 341.48974609]
[313.87228394 349.31146240]
[324.60174561 359.79376221]
[332.71960449 372.40725708]
[337.81591797 386.51495361]
[339.63333130 401.40444946]
[338.08001709 416.32382202]
[333.23446655 430.51962280]
[325.34133911 443.27496338]
[314.79925537 453.94567871]
[302.14062500 461.99295044]
[288.00463867 467.01037598]
[273.10522461 468.74453735]
[258.19479370 467.10791016]
[244.02629089 462.18310547]
[231.31524658 454.21884155]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 10]
[2 9]
[3 8]
[11 37]
[12 36]
[13 35]
[14 34]
[15 33]
[16 32]
[18 30]
[19 29]
[21 27]
[22 26]
[38 180]
[39 179]
[40 178]
[41 177]
[42 176]
[43 150]
[44 149]
[45 148]
[46 147]
[47 146]
[48 145]
[49 144]
[50 143]
[53 119]
[54 118]
[55 117]
[56 116]
[57 115]
[58 114]
[60 78]
[61 77]
[62 76]
[63 75]
[64 74]
[86 100]
[87 99]
[88 98]
[89 97]
[90 96]
[91 95]
[101 113]
[102 112]
[103 111]
[104 110]
[123 140]
[124 139]
[125 136]
[126 135]
[127 134]
[128 133]
[153 174]
[154 173]
[155 172]
[156 171]
[157 170]
[158 169]
[160 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
