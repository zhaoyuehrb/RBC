%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 17:47:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCUGACCUUCACCCAGAGCUGCCUAUGCCCAGCCUCCAACUCCAGCUGAGUCCUGGGGUUGGGGAGGGGGUCGGGGUCCCAGGACCUGAGCCUGGCCAUGUCCUCAACCCCAAAUCCCCCGACUCCCUCCCCAGAUCUGUCCUGGGGGAUGCAAAUAAAGCCUGCUCUCCCAAGGUCUGCUA\
) } def
/len { sequence length } bind def

/coor [
[78.10527039 273.25741577]
[74.74639130 257.56991577]
[85.02816010 245.25468445]
[85.02816010 230.25468445]
[77.29086304 217.52742004]
[85.02816010 203.72724915]
[85.02816010 188.72724915]
[85.02816010 173.72724915]
[85.02816010 158.72724915]
[85.02816010 143.72724915]
[85.02816010 128.72724915]
[78.30278778 125.40769958]
[76.14495850 140.25167847]
[61.36066055 142.78633118]
[54.38163757 129.50877380]
[64.85204315 118.76861572]
[58.12667465 115.44906616]
[46.21991348 124.57206726]
[41.29664230 132.29394531]
[34.03262329 133.74684143]
[21.97266769 142.66633606]
[9.91271019 151.58583069]
[-2.14724660 160.50532532]
[-1.88084030 176.02012634]
[-10.81222820 188.70909119]
[-25.50711060 193.69306946]
[-40.31500244 189.05561829]
[-49.54197311 176.57994080]
[-49.64005661 161.06317139]
[-40.57154083 148.47184753]
[-25.82345963 143.64756775]
[-11.06674385 148.44537354]
[0.99321282 139.52587891]
[13.05317020 130.60638428]
[25.11312675 121.68688202]
[37.09691620 112.66530609]
[49.00367355 103.54231262]
[45.34738922 88.99474335]
[30.54216003 86.58535767]
[15.73693085 84.17596436]
[0.93170142 81.76657104]
[-13.87352848 79.35717773]
[-28.67875862 76.94778442]
[-43.48398972 74.53839111]
[-58.28921890 72.12899780]
[-73.09444427 69.71960449]
[-87.89967346 67.31021118]
[-99.62604523 77.65556335]
[-115.26002502 77.99131775]
[-127.41972351 68.15894318]
[-130.36370850 52.80097961]
[-122.70191956 39.16899490]
[-108.05201721 33.69959641]
[-93.33123779 38.97526169]
[-85.49028778 52.50498581]
[-70.68505096 54.91437531]
[-55.87982559 57.32376862]
[-41.07459641 59.73316193]
[-26.26936531 62.14255524]
[-11.46413612 64.55194855]
[3.34109402 66.96134186]
[18.14632416 69.37073517]
[32.95155334 71.78012085]
[47.75678253 74.18951416]
[106.28249359 67.85355377]
[109.31806183 53.16392136]
[112.35363770 38.47428894]
[115.38921356 23.78465652]
[118.42478943 9.09502411]
[121.46035767 -5.59460831]
[124.49593353 -20.28424072]
[127.53150940 -34.97387314]
[130.56707764 -49.66350555]
[133.60264587 -64.35313416]
[136.63822937 -79.04277039]
[139.67379761 -93.73239899]
[142.70936584 -108.42203522]
[145.74494934 -123.11166382]
[128.69271851 -136.24098206]
[120.59583282 -156.10359192]
[123.58939362 -177.27095032]
[136.78802490 -193.99700928]
[156.54600525 -201.77796936]
[157.56411743 -216.74337769]
[158.58222961 -231.70878601]
[159.60034180 -246.67419434]
[160.61845398 -261.63958740]
[153.83567810 -275.93310547]
[162.41899109 -288.10586548]
[163.43708801 -303.07128906]
[160.89318848 -311.86868286]
[164.60168457 -318.28146362]
[165.87377930 -333.22744751]
[161.19245911 -349.52227783]
[175.55458069 -358.53149414]
[188.18754578 -347.22467041]
[180.81973267 -331.95535278]
[179.54763794 -317.00939941]
[178.40249634 -302.05316162]
[177.38439941 -287.08776855]
[184.23999023 -273.86468506]
[175.58386230 -260.62149048]
[174.56575012 -245.65608215]
[173.54763794 -230.69067383]
[172.52952576 -215.72526550]
[171.51141357 -200.75985718]
[180.01568604 -197.56263733]
[187.60804749 -192.55117798]
[193.90692139 -185.97106934]
[198.59431458 -178.14695740]
[201.43190002 -169.46643066]
[202.27316284 -160.36087036]
[201.07095337 -151.28401184]
[197.88003540 -142.68933105]
[192.85467529 -135.00737000]
[186.24118042 -128.62419128]
[178.36581421 -123.86197662]
[169.61871338 -120.96274567]
[160.43458557 -120.07609558]
[157.39900208 -105.38645935]
[154.36343384 -90.69683075]
[151.32786560 -76.00719452]
[148.29228210 -61.31756210]
[145.25671387 -46.62792969]
[142.22113037 -31.93829918]
[139.18556213 -17.24866676]
[136.14999390 -2.55903482]
[133.11441040 12.13059711]
[130.07884216 26.82022858]
[127.04327393 41.50986099]
[124.00769806 56.19949341]
[120.97212219 70.88912964]
[130.19589233 82.71799469]
[145.18237305 83.35461426]
[160.16885376 83.99123383]
[175.15534973 84.62784576]
[185.57209778 72.96485901]
[201.05592346 70.77742004]
[214.29585266 79.09837341]
[219.04039001 93.99882507]
[213.04930115 108.44322968]
[199.15139771 115.61138916]
[183.90885925 112.11871338]
[174.51872253 99.61433411]
[159.53224182 98.97771454]
[144.54576111 98.34109497]
[129.55928040 97.70447540]
[123.84844971 111.57482910]
[134.93862915 121.67472076]
[146.02880859 131.77461243]
[157.11898804 141.87451172]
[175.18666077 145.37475586]
[179.88107300 162.27410889]
[191.14115906 172.18423462]
[202.40122986 182.09436035]
[217.20825195 177.76356506]
[231.99963379 182.14746094]
[242.05551147 193.84715271]
[244.16706848 209.12933350]
[237.66055298 223.11749268]
[224.61212158 231.34806824]
[209.18553162 231.19471741]
[196.30331421 222.70635986]
[190.07615662 208.59161377]
[192.49111938 193.35444641]
[181.23103333 183.44432068]
[169.97094727 173.53419495]
[157.86854553 173.98733521]
[148.40434265 165.80329895]
[147.01908875 152.96469116]
[135.92890930 142.86479187]
[124.83873749 132.76490784]
[113.74855804 122.66500854]
[100.02816010 128.72724915]
[100.02816010 143.72724915]
[100.02816010 158.72724915]
[100.02816010 173.72724915]
[100.02816010 188.72724915]
[100.02816010 203.72724915]
[107.76545715 217.52742004]
[100.02816010 230.25468445]
[100.02816010 245.25468445]
[110.30992889 257.56991577]
[106.95104980 273.25741577]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 182]
[4 181]
[6 179]
[7 178]
[8 177]
[9 176]
[10 175]
[11 174]
[17 37]
[18 36]
[20 35]
[21 34]
[22 33]
[23 32]
[38 64]
[39 63]
[40 62]
[41 61]
[42 60]
[43 59]
[44 58]
[45 57]
[46 56]
[47 55]
[65 132]
[66 131]
[67 130]
[68 129]
[69 128]
[70 127]
[71 126]
[72 125]
[73 124]
[74 123]
[75 122]
[76 121]
[77 120]
[78 119]
[83 106]
[84 105]
[85 104]
[86 103]
[87 102]
[89 100]
[90 99]
[92 98]
[93 97]
[133 147]
[134 146]
[135 145]
[136 144]
[148 173]
[149 172]
[150 171]
[151 170]
[153 167]
[154 166]
[155 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
