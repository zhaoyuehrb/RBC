%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 19:25:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACAGCCUGAUAUUCCAGAACCUGGAACAGGGACUUUCACUUGAAUCUUGCUGCUAAAUGUAAAUGCCUUCUCAAAUGACAGAUUCCAGUUCCCAUUCAACAGAGUAGGGUGCACUGACAAAGUAUAGAAGGUUCUAGGUAUCUUAAUGUGUGGAUAUUCUUAAUUAAAACUCAUUUUUUUUAAAUAAAAAAUUGUUCAGCUUUA\
) } def
/len { sequence length } bind def

/coor [
[358.48010254 348.81896973]
[347.99490356 338.09231567]
[337.50973511 327.36569214]
[327.02453613 316.63903809]
[316.53933716 305.91241455]
[300.02767944 310.78216553]
[283.23715210 306.59875488]
[270.81329346 294.42663574]
[266.24044800 277.55337524]
[270.86489868 260.60186768]
[260.05902100 250.19837952]
[249.25311279 239.79489136]
[238.44720459 229.39140320]
[233.73699951 228.58503723]
[229.48434448 224.80920410]
[227.47729492 218.50440979]
[216.99209595 207.77777100]
[206.42582703 197.13099670]
[195.77905273 186.56472778]
[185.13227844 175.99844360]
[174.48551941 165.43215942]
[163.83874512 154.86587524]
[153.19197083 144.29959106]
[142.54521179 133.73330688]
[77.37136078 109.52130890]
[62.78448105 106.02516174]
[48.19760513 102.52902222]
[33.61072922 99.03287506]
[19.02385330 95.53672791]
[3.80037713 99.84443665]
[-6.77298355 89.35380554]
[-21.35985947 85.85765839]
[-35.94673538 82.36151123]
[-50.53361130 78.86536407]
[-65.14659882 75.48001099]
[-79.78485107 72.20564270]
[-94.94120026 76.74388885]
[-105.67255402 66.41493225]
[-120.31080627 63.14056015]
[-134.94906616 59.86618805]
[-150.10540771 64.40443420]
[-160.83676147 54.07547760]
[-175.47502136 50.80110550]
[-190.11326599 47.52673721]
[-204.75152588 44.25236511]
[-213.67549133 55.02610779]
[-226.31077576 60.87529755]
[-240.16711426 60.70994949]
[-252.54048157 54.61935425]
[-261.04086304 43.84352493]
[-264.05377197 30.52116394]
[-278.64065552 27.02501869]
[-293.30334473 23.86182213]
[-308.03421021 21.03321457]
[-322.76510620 18.20460892]
[-336.79824829 25.97958374]
[-351.57089233 19.72271156]
[-355.75073242 4.23373032]
[-346.13134766 -8.60554028]
[-330.09191895 -8.94591045]
[-319.93649292 3.47372270]
[-305.20562744 6.30233002]
[-290.47473145 9.13093758]
[-287.36471558 7.46331692]
[-283.29171753 7.22105217]
[-278.93533325 8.84062862]
[-275.14450073 12.43814278]
[-260.55764771 15.93428898]
[-249.73030090 3.94118690]
[-234.24328613 -0.98436469]
[-218.29402161 2.59194446]
[-206.25546265 13.78658962]
[-201.47715759 29.61411095]
[-186.83889771 32.88848114]
[-172.20063782 36.16285324]
[-157.56239319 39.43722153]
[-143.45306396 34.66477203]
[-131.67469788 45.22793579]
[-117.03643799 48.50230408]
[-102.39818573 51.77667618]
[-88.28885651 47.00422287]
[-76.51048279 57.56738663]
[-61.87222672 60.84175491]
[-54.65623093 59.23359299]
[-47.03746796 64.27848816]
[-32.45058823 67.77463531]
[-17.86371422 71.27078247]
[-3.27683735 74.76692963]
[10.90328789 70.20915222]
[22.51999855 80.94985199]
[37.10687637 84.44599915]
[51.69375229 87.94214630]
[66.28063202 91.43828583]
[80.86750793 94.93443298]
[92.71564484 85.73543549]
[92.94328308 70.73715973]
[93.17092896 55.73888779]
[93.39857483 40.74061584]
[93.62621307 25.74234390]
[86.09924316 11.82633781]
[94.02880096 -0.78204530]
[94.25644684 -15.78031826]
[88.45117950 -31.70938683]
[102.15067291 -41.69738388]
[115.54073334 -31.29822350]
[109.25471497 -15.55267525]
[109.02706909 -0.55440241]
[116.57032776 12.28882694]
[108.62448883 25.96998596]
[108.39684296 40.96825790]
[108.16920471 55.96653366]
[107.94155884 70.96480560]
[107.71391296 85.96307373]
[122.21807861 89.79052734]
[136.72094727 93.61764526]
[143.92329407 80.45990753]
[151.12565613 67.30216980]
[148.01989746 51.56260300]
[158.49871826 39.41459656]
[174.52363586 40.17705917]
[183.80172729 53.26509476]
[179.21562195 68.63867950]
[164.28338623 74.50452423]
[157.08103943 87.66226196]
[149.87867737 100.81999969]
[161.82232666 91.74535370]
[176.57780457 94.44274902]
[184.53848267 107.15602875]
[180.52153015 121.60816193]
[167.14221191 128.39001465]
[153.11149597 123.08654022]
[163.75825500 133.65283203]
[174.40502930 144.21910095]
[185.05178833 154.78538513]
[195.69856262 165.35166931]
[206.34533691 175.91795349]
[216.99209595 186.48423767]
[225.29042053 190.30975342]
[227.71875000 197.29258728]
[238.20393372 208.01922607]
[248.85069275 218.58551025]
[259.65658569 228.98899841]
[270.46249390 239.39248657]
[281.26840210 249.79597473]
[293.28427124 245.05383301]
[306.15441895 245.20896912]
[317.96643066 250.20294189]
[326.97857666 259.26101685]
[331.87649536 271.01199341]
[331.96490479 283.69586182]
[327.26599121 295.42721558]
[337.75119019 306.15386963]
[348.23635864 316.88049316]
[358.72155762 327.60714722]
[369.20672607 338.33377075]
[379.84054565 331.76788330]
[391.55496216 327.43048096]
[403.88894653 325.48986816]
[416.35748291 326.01992798]
[428.47076416 328.99755859]
[439.75341797 334.30343628]
[449.76306152 341.72702026]
[458.10784912 350.97473145]
[464.46160889 361.68167114]
[468.57666016 373.42590332]
[470.29357910 385.74523926]
[469.54714966 398.15530396]
[466.36907959 410.16860962]
[460.88650513 421.31375122]
[453.31689453 431.15380859]
[462.95870972 442.64447021]
[472.60052490 454.13513184]
[485.36001587 456.03540039]
[493.15405273 465.80715942]
[492.22973633 477.87030029]
[501.69607544 489.50598145]
[511.16238403 501.14166260]
[520.62872314 512.77734375]
[530.09503174 524.41296387]
[539.56134033 536.04864502]
[549.02764893 547.68432617]
[564.77276611 549.05102539]
[574.87573242 561.20446777]
[573.34265137 576.93420410]
[561.08306885 586.90808105]
[545.37036133 585.20880127]
[535.52667236 572.84448242]
[537.39196777 557.15063477]
[527.92565918 545.51495361]
[518.45935059 533.87933350]
[508.99304199 522.24365234]
[499.52673340 510.60797119]
[490.06039429 498.97229004]
[480.59408569 487.33663940]
[463.88418579 481.97946167]
[461.10986328 463.77694702]
[451.46804810 452.28628540]
[441.82623291 440.79562378]
[425.85589600 448.29962158]
[408.41394043 451.05374146]
[390.88342285 448.83251953]
[374.65646362 441.80520630]
[361.02352905 430.52304077]
[351.07098389 415.87594604]
[345.59451294 399.02230835]
[345.03533936 381.29742432]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 155]
[2 154]
[3 153]
[4 152]
[5 151]
[10 144]
[11 143]
[12 142]
[13 141]
[16 140]
[17 139]
[18 137]
[19 136]
[20 135]
[21 134]
[22 133]
[23 132]
[24 131]
[25 94]
[26 93]
[27 92]
[28 91]
[29 90]
[31 88]
[32 87]
[33 86]
[34 85]
[35 83]
[36 82]
[38 80]
[39 79]
[40 78]
[42 76]
[43 75]
[44 74]
[45 73]
[51 68]
[52 67]
[53 63]
[54 62]
[55 61]
[95 113]
[96 112]
[97 111]
[98 110]
[99 109]
[101 107]
[102 106]
[115 125]
[116 124]
[117 123]
[170 198]
[171 197]
[172 196]
[175 194]
[176 193]
[177 192]
[178 191]
[179 190]
[180 189]
[181 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
