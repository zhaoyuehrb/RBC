%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 01:21:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGUGUGCGCCACUCCCCUUGCUGCCCGAAUGCUCGGAAACAGGAGCCUUUCCCAGGAACUCUUUUUUAUGCCAGAACGCUUCCUCUCCCCUGCUGUCUCUGGGGCUGCCACCCUCCCCCACAGUCCAGGCCCUUCAGCCAAGGGCUCUGCACCAGCACCUUGGAAGCACCAAUAAAGAGGAUGCCCACGUGGCCCCAGCAAUCAGAA\
) } def
/len { sequence length } bind def

/coor [
[90.73211670 270.05841064]
[80.91544342 273.63107300]
[70.51374054 274.33578491]
[66.52319336 288.79522705]
[62.53263855 303.25466919]
[58.54208374 317.71411133]
[65.17702484 332.32086182]
[57.76573563 346.54943848]
[41.99352264 349.48489380]
[29.95948219 338.87539673]
[30.89509392 322.85964966]
[44.08264160 313.72354126]
[48.07319641 299.26409912]
[52.06374741 284.80465698]
[56.05429840 270.34521484]
[41.47514343 257.25415039]
[35.54372787 238.49659729]
[39.98122025 219.24954224]
[53.63534546 204.86791992]
[72.77819824 199.39477539]
[75.67703247 184.67755127]
[78.57587433 169.96032715]
[81.47470856 155.24310303]
[84.37355042 140.52587891]
[87.27239227 125.80865479]
[82.98099518 127.59136963]
[78.25641632 128.76667786]
[65.86283112 137.21647644]
[53.46924973 145.66627502]
[41.07566833 154.11607361]
[34.45172119 169.11791992]
[18.12087440 170.61309814]
[8.88290596 157.06347656]
[16.24104500 142.40777588]
[32.62586594 141.72250366]
[45.01944733 133.27270508]
[57.41303253 124.82289886]
[69.80661011 116.37309265]
[65.70801544 101.94390869]
[50.72312164 101.27093506]
[35.73822403 100.59796143]
[21.60481453 107.70832825]
[9.23749161 99.40781403]
[-5.74740505 98.73484039]
[-20.73230171 98.06186676]
[-35.71719742 97.38889313]
[-50.70209122 96.71591949]
[-65.69538116 96.26718903]
[-80.69370270 96.04280090]
[-95.69202423 95.81840515]
[-108.15967560 105.91480255]
[-123.79517365 102.32161713]
[-130.60427856 87.79524231]
[-123.36365509 73.47907257]
[-107.62767029 70.35523987]
[-95.46762848 80.82008362]
[-80.46930695 81.04447937]
[-65.47098541 81.26886749]
[-61.48024750 78.64403534]
[-55.79808044 78.49882507]
[-50.02912140 81.73102570]
[-35.04422379 82.40399933]
[-20.05932808 83.07697296]
[-5.07443237 83.74994659]
[9.91046333 84.42292023]
[22.97205353 77.26441193]
[36.41119766 85.61306763]
[51.39609146 86.28604126]
[66.38098907 86.95900726]
[80.89469147 72.32157135]
[99.76415253 68.79673767]
[115.98714447 76.07324219]
[127.28321838 66.20415497]
[138.57928467 56.33507919]
[149.87536621 46.46599579]
[146.51286316 30.27731514]
[151.74301147 14.69113159]
[164.04861450 3.93113899]
[180.00883484 0.86270517]
[195.24990845 6.23029232]
[206.39707947 -3.80666685]
[211.47534180 -18.79071999]
[226.11080933 -21.55699158]
[237.25798035 -31.59395027]
[248.40515137 -41.63090897]
[259.55233765 -51.66786957]
[270.69949341 -61.70482635]
[281.84667969 -71.74179077]
[278.76708984 -86.72389221]
[283.56845093 -101.14068604]
[294.86621094 -111.15200043]
[309.55987549 -114.14411163]
[323.68319702 -109.41156769]
[334.83038330 -119.44853210]
[339.90863037 -134.43258667]
[354.54409790 -137.19885254]
[365.69128418 -147.23580933]
[376.83843994 -157.27276611]
[381.91671753 -172.25682068]
[396.55218506 -175.02310181]
[407.69937134 -185.06005859]
[418.84652710 -195.09701538]
[429.99371338 -205.13397217]
[441.14086914 -215.17092896]
[452.28805542 -225.20788574]
[463.43521118 -235.24485779]
[467.71908569 -243.31335449]
[474.82504272 -245.34704590]
[486.12109375 -255.21612549]
[497.41717529 -265.08520508]
[482.58657837 -262.83724976]
[467.98190308 -266.25833130]
[455.69253540 -274.85897827]
[447.47659302 -287.40878296]
[444.50942993 -302.11239624]
[447.21560669 -316.86627197]
[455.20788574 -329.55969238]
[467.34295654 -338.37677002]
[481.88470459 -342.05606079]
[496.75280762 -340.07122803]
[509.82022095 -332.70623779]
[519.21746826 -321.01470947]
[523.60015869 -306.66925049]
[522.34136963 -291.72216797]
[515.62005615 -278.31039429]
[528.49676514 -286.00387573]
[536.37506104 -299.72402954]
[551.26922607 -299.60977173]
[564.14599609 -307.30325317]
[577.02270508 -314.99676514]
[589.84155273 -322.78634644]
[602.60174561 -330.67160034]
[615.36193848 -338.55685425]
[628.12213135 -346.44210815]
[640.88232422 -354.32736206]
[653.64251709 -362.21261597]
[658.71386719 -377.43304443]
[673.82464600 -382.82235718]
[687.38311768 -374.24636841]
[688.98840332 -358.28384399]
[677.40905762 -347.17984009]
[661.52777100 -349.45242310]
[648.76757812 -341.56716919]
[636.00738525 -333.68191528]
[623.24719238 -325.79666138]
[610.48699951 -317.91140747]
[597.72680664 -310.02615356]
[593.68896484 -303.83532715]
[584.71618652 -302.12002563]
[571.83947754 -294.42654419]
[558.96270752 -286.73303223]
[552.00549316 -273.56317139]
[536.19030762 -273.12713623]
[523.31353760 -265.43365479]
[521.22656250 -259.23547363]
[515.45623779 -254.64248657]
[507.28625488 -253.78913879]
[495.99017334 -243.92005920]
[484.69412231 -234.05097961]
[473.47216797 -224.09768677]
[462.32501221 -214.06071472]
[451.17782593 -204.02375793]
[440.03067017 -193.98680115]
[428.88348389 -183.94984436]
[417.73632812 -173.91288757]
[406.58914185 -163.87593079]
[402.30819702 -149.60978699]
[386.87542725 -146.12559509]
[375.72824097 -136.08863831]
[364.58105469 -126.05168152]
[360.30014038 -111.78553772]
[344.86734009 -108.30135345]
[333.72015381 -98.26439667]
[336.95050049 -83.72374725]
[332.43887329 -69.42335510]
[321.30145264 -59.23392868]
[306.46176147 -55.96585464]
[291.88363647 -60.59461594]
[280.73645020 -50.55765533]
[269.58929443 -40.52069473]
[258.44210815 -30.48373795]
[247.29493713 -20.44677925]
[236.14776611 -10.40981960]
[231.86682129 3.85632253]
[216.43403625 7.34050560]
[205.28686523 17.37746429]
[209.00080872 30.52033424]
[206.67839050 44.04610443]
[198.71665955 55.30539322]
[186.62292480 62.06789017]
[172.72958374 62.96404266]
[159.74444580 57.76206970]
[148.44836426 67.63114929]
[137.15229797 77.50022888]
[125.85622406 87.36930847]
[128.21640015 105.64922333]
[119.00057220 121.61150360]
[101.98961639 128.70748901]
[99.09077454 143.42471313]
[96.19194031 158.14193726]
[93.29309845 172.85916138]
[90.39425659 187.57640076]
[87.49542236 202.29362488]
[96.59194946 207.76417542]
[103.79729462 215.53016663]
[108.55324554 224.97282410]
[110.49614716 235.34411621]
[109.48463440 245.82609558]
[105.60990906 255.59541321]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 15]
[4 14]
[5 13]
[6 12]
[20 203]
[21 202]
[22 201]
[23 200]
[24 199]
[25 198]
[27 38]
[28 37]
[29 36]
[30 35]
[39 69]
[40 68]
[41 67]
[43 65]
[44 64]
[45 63]
[46 62]
[47 61]
[48 58]
[49 57]
[50 56]
[72 195]
[73 194]
[74 193]
[75 192]
[80 186]
[81 185]
[83 183]
[84 182]
[85 181]
[86 180]
[87 179]
[88 178]
[93 173]
[94 172]
[96 170]
[97 169]
[98 168]
[100 166]
[101 165]
[102 164]
[103 163]
[104 162]
[105 161]
[106 160]
[108 159]
[109 158]
[110 157]
[125 154]
[126 153]
[128 151]
[129 150]
[130 149]
[131 147]
[132 146]
[133 145]
[134 144]
[135 143]
[136 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
