%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 12:56:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACCGAAUCUCAAUGUACAUAGACCCUCUUUCUUGUUUGUCAGCAUCUGACCAUCUGUGACUAUAAAGCUGUUAUUCUUGUUAUACCAUUUGAAGUUUUUACUCGUCUCUAUUAAUAUUUAAAUAAAUGCUGGGGGGUGAUAGUUCUUCUUUUUAAAAUAAACAUUUUCUUUUGAAUAAGCA\
) } def
/len { sequence length } bind def

/coor [
[83.15752411 363.87344360]
[80.55819702 348.86801147]
[84.29315948 334.10418701]
[93.71529388 322.13995361]
[107.19216919 315.04812622]
[106.16853333 300.08309937]
[105.14489746 285.11807251]
[104.12126160 270.15304565]
[90.68402100 263.72604370]
[82.21156311 251.35377502]
[81.06189728 236.30236816]
[87.64364624 222.60647583]
[100.27944183 213.98767090]
[99.25580597 199.02264404]
[98.23217010 184.05761719]
[97.20853424 169.09257507]
[96.18489838 154.12754822]
[67.58332062 143.51443481]
[49.22843933 119.14668274]
[34.59642410 122.44881439]
[19.96440697 125.75094604]
[5.33238983 129.05308533]
[-9.29962635 132.35522461]
[-23.93164253 135.65734863]
[-9.78742218 140.65144348]
[1.70211315 150.29461670]
[9.07339096 163.35845947]
[11.38743782 178.17889404]
[8.34948158 192.86804199]
[0.34650728 205.55473328]
[-11.60204315 214.62292480]
[-25.97412682 218.91748047]
[-40.93898773 217.89134216]
[-54.59035492 211.67523193]
[-65.18927765 201.06094360]
[-71.38563538 187.40060425]
[-72.39012146 172.43426514]
[-68.07476807 158.06842041]
[-58.98929214 146.13301086]
[-46.29322433 138.14927673]
[-61.29322433 138.14927673]
[-76.29322052 138.14927673]
[-91.29322052 138.14927673]
[-106.29322052 138.14927673]
[-122.13235474 144.19561768]
[-132.32711792 130.64927673]
[-122.13235474 117.10294342]
[-106.29322052 123.14928436]
[-91.29322052 123.14928436]
[-76.29322052 123.14928436]
[-61.29322433 123.14928436]
[-46.29322433 123.14928436]
[-41.49404526 119.06970978]
[-34.49480057 117.99727631]
[-27.23377800 121.02533722]
[-12.60176086 117.72319794]
[2.03025532 114.42106628]
[16.66227150 111.11893463]
[31.29428864 107.81679535]
[45.92630386 104.51466370]
[46.52181625 90.81139374]
[50.53440857 77.69524384]
[57.70769501 66.00430298]
[67.58332062 56.48557281]
[79.53026581 49.74727249]
[92.78516388 46.21995926]
[106.50106049 46.12901688]
[119.80156708 49.48025513]
[127.15322113 36.40534973]
[134.50486755 23.33044052]
[141.85652161 10.25553417]
[149.20817566 -2.81937313]
[156.55982971 -15.89428043]
[163.91148376 -28.96918678]
[171.26313782 -42.04409409]
[178.61479187 -55.11899948]
[185.96644592 -68.19390869]
[193.31809998 -81.26881409]
[200.66975403 -94.34371948]
[208.02140808 -107.41863251]
[197.81396484 -118.56607056]
[191.56030273 -132.30413818]
[189.86143494 -147.28219604]
[192.87123108 -162.03198242]
[200.28259277 -175.11152649]
[211.35874939 -185.24609375]
[225.00648499 -191.45248413]
[239.88403320 -193.13432312]
[254.53298950 -190.13941956]
[261.88464355 -203.21432495]
[269.23629761 -216.28923035]
[276.58795166 -229.36413574]
[283.93960571 -242.43904114]
[291.29125977 -255.51394653]
[298.64291382 -268.58886719]
[294.60299683 -283.63269043]
[302.24487305 -296.78778076]
[316.61178589 -300.54647827]
[323.96343994 -313.62139893]
[314.29153442 -325.31835938]
[309.50189209 -339.72058105]
[310.24227905 -354.88024902]
[316.41253662 -368.74722290]
[327.17822266 -379.44601440]
[341.08334351 -385.52975464]
[356.24734497 -386.17565918]
[370.61944580 -381.29638672]
[382.25592041 -371.55178833]
[389.58300781 -358.25976562]
[391.60983276 -343.21792603]
[388.06222534 -328.46060181]
[379.42001343 -315.98355103]
[366.85195923 -307.47424316]
[352.05780029 -304.08343506]
[337.03833008 -306.26974487]
[329.68667603 -293.19485474]
[333.93997192 -278.96652222]
[326.67062378 -265.60198975]
[311.71780396 -261.23721313]
[304.36614990 -248.16229248]
[297.01449585 -235.08738708]
[289.66284180 -222.01248169]
[282.31118774 -208.93757629]
[274.95953369 -195.86267090]
[267.60787964 -182.78776550]
[277.77816772 -171.82752991]
[284.07128906 -158.24200439]
[285.85958862 -143.35636902]
[282.95538330 -128.62692261]
[275.63079834 -115.49859619]
[264.59213257 -105.26322174]
[250.91189575 -98.93240356]
[235.92453003 -97.13756561]
[221.09631348 -100.06697845]
[213.74465942 -86.99206543]
[206.39300537 -73.91716003]
[199.04135132 -60.84225464]
[191.68969727 -47.76734924]
[184.33804321 -34.69244003]
[176.98638916 -21.61753464]
[169.63473511 -8.54262733]
[162.28308105 4.53227997]
[154.93142700 17.60718727]
[147.57977295 30.68209457]
[140.22813416 43.75699997]
[132.87648010 56.83190918]
[138.36196899 61.62415314]
[143.15620422 67.10791779]
[147.17276001 73.18439484]
[150.33929443 79.74407959]
[152.59870911 86.66876984]
[153.91032410 93.83367920]
[154.25048828 101.10971069]
[153.61306763 108.36574554]
[152.00955200 115.47103119]
[149.46884155 122.29753113]
[146.03672791 128.72224426]
[141.77502441 134.62937927]
[136.76055908 139.91250610]
[131.08367920 144.47642517]
[124.84667206 148.23887634]
[118.16194153 151.13209534]
[111.14993286 153.10391235]
[112.17356873 168.06893921]
[113.19720459 183.03398132]
[114.22084045 197.99900818]
[115.24447632 212.96403503]
[128.93617249 219.78199768]
[137.32154846 232.45410156]
[138.23210144 247.52186584]
[131.52323914 260.93258667]
[119.08629608 269.12939453]
[120.10993195 284.09445190]
[121.13356781 299.05947876]
[122.15720367 314.02450562]
[136.47421265 319.21514893]
[147.43772888 329.78497314]
[153.14823914 343.90270996]
[152.61636353 359.12234497]
[145.93426514 372.80697632]
[134.25964355 382.58569336]
[119.61521149 386.76425171]
[104.53819275 384.61868286]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 175]
[6 174]
[7 173]
[8 172]
[13 167]
[14 166]
[15 165]
[16 164]
[17 163]
[19 60]
[20 59]
[21 58]
[22 57]
[23 56]
[24 55]
[40 52]
[41 51]
[42 50]
[43 49]
[44 48]
[68 146]
[69 145]
[70 144]
[71 143]
[72 142]
[73 141]
[74 140]
[75 139]
[76 138]
[77 137]
[78 136]
[79 135]
[80 134]
[89 125]
[90 124]
[91 123]
[92 122]
[93 121]
[94 120]
[95 119]
[98 116]
[99 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
