%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 01:20:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCACCCGGUGGGGCCCUUGGCCCCAGAGGACCGAGAGAGUGGAGAGUGCGGCGUGGGGGCACUGACCAGGCCCAAGGAGGGUCCAGGCGGGCAAGUCAUCCUCCUGGUGCCCACAGCAGGGGCUGGCCCACGUAGGGGGCUCUGGGCGGCCCGUGGACACCCCAGACCUGCGAAGGAUGAUCGCCCGAUAAAGACGGAUUCUAAGGACUCUA\
) } def
/len { sequence length } bind def

/coor [
[13.64070034 333.60678101]
[10.57307720 346.61953735]
[3.65753746 358.03482056]
[-6.42119455 366.74945068]
[-18.67351341 371.92636108]
[-31.90208817 373.07482910]
[-44.81887436 370.09713745]
[-52.72631454 382.84362793]
[-49.33748245 398.04736328]
[-57.53833008 410.86145020]
[-72.05364990 413.99847412]
[-79.96109009 426.74493408]
[-87.86853027 439.49139404]
[-95.77597809 452.23788452]
[-103.68341827 464.98434448]
[-111.59085846 477.73080444]
[-119.49829865 490.47726440]
[-122.71013641 507.12420654]
[-139.59562683 508.64620972]
[-145.73252869 492.84194946]
[-132.24476624 482.56982422]
[-124.33732605 469.82336426]
[-116.42987823 457.07690430]
[-108.52243805 444.33044434]
[-100.61499786 431.58395386]
[-92.70755768 418.83749390]
[-84.80011749 406.09103394]
[-88.43724060 391.69287109]
[-80.59954834 378.65350342]
[-65.47277832 374.93618774]
[-57.56533813 362.18969727]
[-67.59572601 348.89559937]
[-71.75854492 332.73272705]
[-69.38758087 316.17446899]
[-60.81871796 301.76599121]
[-47.34271622 291.73300171]
[-31.01082420 287.63787842]
[-14.32257652 290.13650513]
[-6.79096270 277.16442871]
[0.74065095 264.19235229]
[8.27226448 251.22027588]
[15.80387878 238.24819946]
[10.05372524 220.86627197]
[18.99090958 204.52233887]
[37.34677124 199.82493591]
[44.49612427 186.63832092]
[51.64548111 173.45170593]
[58.79483414 160.26509094]
[65.94419098 147.07849121]
[65.20838928 132.20207214]
[78.58779144 123.75801086]
[85.73715210 110.57140350]
[86.50394440 95.59101105]
[80.73839569 81.74332428]
[74.97283936 67.89564514]
[69.20728302 54.04795456]
[63.44173050 40.20027161]
[57.67617798 26.35258484]
[51.91062546 12.50489998]
[47.15795898 26.73206329]
[35.01662064 35.54046249]
[20.01697350 35.64337158]
[7.75591993 27.00239182]
[2.80849361 12.84177876]
[7.02075577 -1.55463874]
[18.82096291 -10.81504536]
[33.80603409 -11.48405457]
[46.38589478 -3.31034207]
[42.27474976 -17.73596191]
[38.16360474 -32.16157913]
[34.05245972 -46.58720016]
[22.82913399 -57.73832321]
[26.78191376 -72.09885406]
[22.67076874 -86.52447510]
[18.55962372 -100.95008850]
[2.59598446 -106.54536438]
[-6.79289913 -120.41611481]
[-6.07020235 -136.98373413]
[4.28125954 -149.72619629]
[-7.10380077 -160.71212769]
[-3.36127305 -175.12889099]
[-7.68275976 -189.49288940]
[-12.00424576 -203.85690308]
[-16.32573318 -218.22091675]
[-20.75204659 -232.55296326]
[-25.28295135 -246.85229492]
[-29.81385803 -261.15164185]
[-34.34476471 -275.45095825]
[-38.87566757 -289.75030518]
[-50.42003632 -300.56872559]
[-46.88855743 -315.03860474]
[-51.41946411 -329.33795166]
[-55.95036697 -343.63726807]
[-70.47413635 -349.43331909]
[-77.82876587 -363.23345947]
[-74.54163361 -378.52163696]
[-62.16482544 -388.07928467]
[-46.54228210 -387.39355469]
[-35.05049896 -376.78823853]
[-33.11553955 -361.27081299]
[-41.65103531 -348.16818237]
[-37.12013245 -333.86883545]
[-32.58922577 -319.56951904]
[-21.36894035 -309.77389526]
[-24.57633591 -294.28118896]
[-20.04543114 -279.98187256]
[-15.51452541 -265.68252563]
[-10.98361969 -251.38320923]
[-6.45271444 -237.08387756]
[-1.43722391 -231.65866089]
[-1.96172357 -222.54240417]
[2.35976291 -208.17839050]
[6.68124962 -193.81437683]
[11.00273609 -179.45037842]
[22.07869530 -169.49183655]
[18.64526939 -154.04768372]
[31.60173225 -150.83403015]
[41.35714340 -141.56414795]
[45.29025269 -128.58129883]
[42.27161789 -115.24489594]
[32.98524475 -105.06123352]
[37.09638977 -90.63562012]
[41.20753479 -76.20999908]
[52.13679886 -66.09069061]
[48.47807693 -50.69834518]
[52.58922195 -36.27272415]
[56.70036697 -21.84710693]
[60.81151199 -7.42148685]
[65.75830841 6.73934650]
[71.52386475 20.58703232]
[77.28941345 34.43471527]
[83.05496979 48.28240204]
[88.82052612 62.13008881]
[94.58608246 75.97777557]
[100.35163116 89.82545471]
[104.07726288 87.71781921]
[108.94989777 87.09850311]
[114.37530518 88.41485596]
[119.61040497 91.88491058]
[134.57798767 92.87051392]
[149.54557800 93.85611725]
[164.51315308 94.84172058]
[189.69418335 70.77077484]
[204.48289490 68.26203918]
[219.27162170 65.75330353]
[234.06034851 63.24457169]
[248.84906006 60.73583603]
[263.63778687 58.22710037]
[272.79199219 45.62399673]
[287.82559204 43.29045486]
[299.78430176 52.09526062]
[314.55432129 49.47854614]
[329.30480957 46.75399399]
[343.78222656 37.93126297]
[356.26791382 49.40052414]
[348.70324707 64.57327271]
[332.02935791 61.50448227]
[317.27886963 64.22903442]
[311.27410889 68.53379822]
[302.29306030 66.88397980]
[293.90704346 79.14002991]
[278.94491577 81.89492035]
[266.14651489 73.01582336]
[251.35780334 75.52455902]
[236.56907654 78.03328705]
[221.78034973 80.54202271]
[206.99163818 83.05075836]
[192.20291138 85.55949402]
[190.78038025 100.49188995]
[204.82939148 105.74784851]
[218.87841797 111.00381470]
[234.95520020 107.76824188]
[245.59117126 120.25055695]
[239.84495544 135.61001587]
[223.62776184 138.04612732]
[213.62245178 125.05282593]
[199.57344055 119.79686737]
[185.52441406 114.54090118]
[191.67227173 128.22315979]
[187.05818176 142.49586487]
[174.06440735 149.98999023]
[159.39967346 146.83631897]
[150.63542175 134.66308594]
[152.29663086 119.75534821]
[163.52755737 109.80931091]
[148.55996704 108.82370758]
[133.59239197 107.83810425]
[118.62480164 106.85250092]
[133.15548706 110.57528687]
[143.08367920 121.81944275]
[144.97846985 136.69929504]
[138.18507385 150.07275391]
[125.05109406 157.31835938]
[110.11528015 155.93218994]
[98.53903198 146.39329529]
[94.32278442 131.99804688]
[98.92375946 117.72075653]
[91.77440643 130.90736389]
[91.99884033 146.72697449]
[79.13079834 154.22784424]
[71.98144531 167.41445923]
[64.83209229 180.60105896]
[57.68273926 193.78767395]
[50.53338242 206.97428894]
[56.06909561 217.49125671]
[55.84442902 229.25416565]
[50.03078079 239.34437561]
[40.17195511 245.31408691]
[28.77595520 245.77981567]
[21.24434280 258.75189209]
[13.71272850 271.72396851]
[6.18111467 284.69604492]
[-1.35049903 297.66812134]
[7.38827419 307.87631226]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 31]
[8 30]
[11 27]
[12 26]
[13 25]
[14 24]
[15 23]
[16 22]
[17 21]
[38 213]
[39 212]
[40 211]
[41 210]
[42 209]
[45 204]
[46 203]
[47 202]
[48 201]
[49 200]
[51 198]
[52 197]
[53 135]
[54 134]
[55 133]
[56 132]
[57 131]
[58 130]
[59 129]
[68 128]
[69 127]
[70 126]
[71 125]
[73 123]
[74 122]
[75 121]
[79 116]
[81 114]
[82 113]
[83 112]
[84 111]
[85 109]
[86 108]
[87 107]
[88 106]
[89 105]
[91 103]
[92 102]
[93 101]
[139 188]
[140 187]
[141 186]
[142 185]
[143 168]
[144 167]
[145 166]
[146 165]
[147 164]
[148 163]
[151 160]
[152 158]
[153 157]
[169 178]
[170 177]
[171 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
