%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 14:22:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCUCAGGUGGCCAGCCUGGAUCUCCUCAAGUCCCCAAGAUUCACACCUGACUCUGAAAUCUGAAGACCUCGAGCAGAUGAUGCCAACCUCUGGAGCAAUGUUGCUUAGGAUGUGUGCAUGUGUGUAAGUGUGUGUGUGUGUGUGUGUGUGUAUACAUGCCAGUGACACUUCCAGUCCCCUUUGUAUUCCUUAAAUAAACUCAAUGAGCUCUUCCAAUCCUA\
) } def
/len { sequence length } bind def

/coor [
[-31.10622787 328.47680664]
[-45.50090027 327.05767822]
[-59.20971298 322.46728516]
[-71.54359436 314.93991089]
[-82.03754425 325.65798950]
[-92.53148651 336.37603760]
[-103.02542877 347.09411621]
[-113.51937103 357.81219482]
[-124.01331329 368.53027344]
[-134.50726318 379.24835205]
[-119.51049805 378.93655396]
[-107.74765778 388.24435425]
[-104.60324860 402.91110229]
[-111.51666260 416.22293091]
[-125.32322693 422.08627319]
[-139.70288086 417.81713867]
[-148.07324219 405.36978149]
[-146.60197449 390.44046021]
[-158.10018921 400.07327271]
[-169.59838867 409.70608521]
[-181.09660339 419.33889771]
[-192.59481812 428.97171021]
[-204.09301758 438.60455322]
[-215.59123230 448.23736572]
[-211.36447144 462.86795044]
[-213.46037292 477.95196533]
[-221.51579285 490.87597656]
[-234.13508606 499.40081787]
[-249.13189697 502.04953003]
[-263.90792847 498.36322021]
[-275.90313721 488.98052979]
[-283.03927612 475.52706909]
[-284.07998657 460.33377075]
[-278.84494019 446.03292847]
[-268.24114990 435.10223389]
[-254.10580444 429.43554688]
[-238.88789368 430.01461792]
[-225.22404480 436.73913574]
[-213.72584534 427.10632324]
[-202.22763062 417.47351074]
[-190.72941589 407.84069824]
[-179.23121643 398.20788574]
[-167.73300171 388.57504272]
[-156.23478699 378.94223022]
[-145.22532654 368.75442505]
[-134.73138428 358.03634644]
[-124.23744965 347.31826782]
[-113.74349976 336.60018921]
[-103.24955750 325.88211060]
[-92.75561523 315.16403198]
[-82.26167297 304.44595337]
[-90.50606537 291.32269287]
[-95.37932587 276.60156250]
[-96.59528351 261.13375854]
[-94.07935333 245.81475830]
[-87.97312164 231.53233337]
[-78.62638092 219.11528015]
[-66.57707977 209.28520203]
[-52.52037811 202.61459351]
[-37.26853561 199.49353027]
[-21.70398331 200.10687256]
[-6.72825050 204.42323303]
[6.79023457 212.19667053]
[17.13214684 201.33181763]
[27.47406006 190.46697998]
[37.81597137 179.60214233]
[48.15788269 168.73728943]
[51.32853699 154.18406677]
[66.44751740 149.52285767]
[76.78942871 138.65800476]
[87.13134003 127.79316711]
[71.13853455 110.12731934]
[72.65982819 86.37834167]
[90.72727966 70.93898773]
[85.95156860 56.71954346]
[81.17585754 42.50009918]
[69.44747925 31.88145447]
[72.73003387 17.35306549]
[67.95432281 3.13362026]
[62.26039886 -3.99754405]
[63.21302414 -11.31989956]
[58.63810349 -25.60520935]
[54.06318283 -39.89052200]
[49.48826218 -54.17583084]
[35.71724701 -61.45572662]
[31.28112411 -76.00823212]
[38.30625916 -89.09192657]
[33.73133850 -103.37724304]
[22.15370750 -114.16005707]
[25.64060593 -128.64076233]
[21.06568527 -142.92607117]
[16.49076462 -157.21138000]
[4.91313505 -167.99418640]
[8.40003300 -182.47489929]
[3.82511187 -196.76020813]
[-0.74980921 -211.04551697]
[-5.32473040 -225.33082581]
[-9.89965153 -239.61613464]
[-22.39725113 -250.23414612]
[-19.18481255 -266.31558228]
[-3.56701803 -271.31723022]
[8.38988495 -260.09384155]
[4.38565922 -244.19105530]
[8.96057987 -229.90574646]
[13.53550148 -215.62043762]
[18.11042213 -201.33512878]
[22.68534279 -187.04981995]
[33.93574524 -177.28878784]
[30.77607536 -161.78630066]
[35.35099411 -147.50099182]
[39.92591858 -133.21568298]
[51.17631531 -123.45464325]
[48.01664734 -107.95216370]
[52.59156799 -93.66684723]
[65.91037750 -87.09837341]
[70.75350189 -72.67620850]
[63.77357101 -58.75075150]
[68.34849548 -44.46544266]
[72.92341614 -30.18013191]
[77.49833679 -15.89482021]
[82.17376709 -1.64208961]
[86.94947815 12.57735443]
[98.33626556 22.17893028]
[95.39530182 37.72438812]
[100.17101288 51.94383240]
[104.94672394 66.16327667]
[118.95169067 71.53550720]
[132.01193237 64.15784454]
[145.07218933 56.78017426]
[158.13243103 49.40250778]
[171.19267273 42.02484131]
[184.25292969 34.64717484]
[186.13751221 19.35814285]
[196.54179382 8.24039268]
[211.32276917 5.41430187]
[224.77258301 11.75782394]
[237.83283997 4.38015699]
[243.75903320 -2.55918789]
[251.12944031 -3.00796795]
[264.29232788 -10.20091724]
[277.45520020 -17.39386749]
[290.61810303 -24.58681679]
[303.78097534 -31.77976608]
[316.94384766 -38.97271729]
[330.10675049 -46.16566467]
[343.26962280 -53.35861588]
[356.43249512 -60.55156326]
[364.49649048 -74.83106232]
[380.89523315 -74.71661377]
[388.75912476 -60.32593918]
[379.99844360 -46.46294403]
[363.62545776 -47.38868332]
[350.46255493 -40.19573212]
[337.29968262 -33.00278473]
[324.13681030 -25.80983353]
[310.97390747 -18.61688423]
[297.81103516 -11.42393398]
[284.64816284 -4.23098469]
[271.48526001 2.96196485]
[258.32238770 10.15491486]
[245.21049500 17.44040298]
[232.15025330 24.81806946]
[230.64085388 39.61197662]
[220.59074402 50.81283951]
[205.69813538 53.98516846]
[191.63058472 47.70742035]
[178.57034302 55.08508682]
[165.51010132 62.46275330]
[152.44984436 69.84042358]
[139.38960266 77.21808624]
[126.32936096 84.59575653]
[130.51588440 101.75254822]
[124.49129486 118.39127350]
[138.74401855 123.06670380]
[152.99674988 127.74213409]
[166.98370361 120.38410950]
[182.05191040 125.15118408]
[189.26164246 139.21514893]
[184.33552551 154.23210144]
[170.19610596 161.29275513]
[155.23208618 156.20812988]
[148.32131958 141.99487305]
[134.06858826 137.31944275]
[119.81585693 132.64399719]
[130.08229065 143.58020020]
[140.34870911 154.51640320]
[154.03498840 160.65528870]
[165.38462830 170.46272278]
[173.44335938 183.11408997]
[177.53358459 197.54563904]
[177.31141663 212.54400635]
[172.79551697 226.84808350]
[164.36561584 239.25520325]
[152.73045349 248.72215271]
[138.86836243 254.45297241]
[123.94484711 255.96578979]
[109.21468353 253.13342285]
[95.91638947 246.19401550]
[85.16809082 235.73103333]
[77.87350464 222.62420654]
[74.64596558 207.97555542]
[75.75683594 193.01673889]
[81.11273193 179.00552368]
[90.26219177 167.12103271]
[94.12918854 152.62805176]
[97.99618530 138.13507080]
[87.65427399 148.99992371]
[77.31236267 159.86476135]
[73.40198517 175.19511414]
[59.02272797 179.07920837]
[48.68081665 189.94404602]
[38.33890533 200.80889893]
[27.99699211 211.67373657]
[17.65507889 222.53857422]
[25.61551666 234.70539856]
[30.66032600 248.33372498]
[32.53868484 262.73632812]
[31.15935516 277.18771362]
[26.59510803 290.96066284]
[19.07890129 303.36291504]
[8.99198151 313.77178955]
[-3.15544653 321.66564941]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 51]
[5 50]
[6 49]
[7 48]
[8 47]
[9 46]
[10 45]
[18 44]
[19 43]
[20 42]
[21 41]
[22 40]
[23 39]
[24 38]
[63 214]
[64 213]
[65 212]
[66 211]
[67 210]
[69 208]
[70 207]
[71 206]
[74 126]
[75 125]
[76 124]
[78 122]
[79 121]
[81 120]
[82 119]
[83 118]
[84 117]
[87 114]
[88 113]
[90 111]
[91 110]
[92 109]
[94 107]
[95 106]
[96 105]
[97 104]
[98 103]
[127 171]
[128 170]
[129 169]
[130 168]
[131 167]
[132 166]
[136 162]
[137 161]
[139 160]
[140 159]
[141 158]
[142 157]
[143 156]
[144 155]
[145 154]
[146 153]
[147 152]
[173 184]
[174 183]
[175 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
