%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 14:52:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCCAUCCCUAGGAGGAUCUCUGUCUUGAGUUUCUCCUUCCCCAUCAGCUGAAGCACUCUUCAGAGACUACGUCCACAGACACUGAUGCUGAGGCCUCCCUGGAGGAAGGAGGGUUAGGGGUGCCUAUCCUCAAGUAUUGGAAGAGCAGAAUUGAGGGAGAGACCUUUCUUCCUUGUUGAGGGUGAAAAAUAAAUAAGAAUUACAUGUCCUGA\
) } def
/len { sequence length } bind def

/coor [
[230.35852051 143.76521301]
[245.15484619 141.33489990]
[230.73298645 145.05773926]
[219.76260376 133.65768433]
[205.40451050 129.31658936]
[191.04641724 124.97548676]
[176.68832397 120.63439178]
[162.33023071 116.29328918]
[147.97213745 111.95219421]
[133.61404419 107.61109924]
[119.25595093 103.26999664]
[97.09458923 125.83045197]
[87.21130371 137.11408997]
[77.32801819 148.39773560]
[67.44472504 159.68138123]
[57.56143951 170.96502686]
[47.67815399 182.24867249]
[44.40574646 197.72775269]
[30.19959831 202.20375061]
[20.31631088 213.48739624]
[10.43302345 224.77104187]
[11.72627449 240.52233887]
[1.43932927 252.52043152]
[-14.32475090 253.64707947]
[-26.21341515 243.23385620]
[-27.17333221 227.45874023]
[-16.63499832 215.68083191]
[-0.85062122 214.88775635]
[9.03266621 203.60411072]
[18.91595268 192.32046509]
[21.48144150 177.64846802]
[36.39450836 172.36538696]
[46.27779770 161.08174133]
[56.16108322 149.79809570]
[66.04437256 138.51445007]
[75.92765808 127.23080444]
[85.81094360 115.94715881]
[82.10619354 101.41186523]
[68.02761841 96.23561096]
[53.94903946 91.05934906]
[39.74026871 97.44281006]
[25.53632736 91.99279022]
[19.53823853 78.40756226]
[5.45966053 73.23130035]
[-8.61891747 68.05504608]
[-22.69749451 62.87878418]
[-36.77607346 57.70252609]
[-50.85465240 52.52626801]
[-65.49243927 49.24982452]
[-80.43428802 47.93030167]
[-95.37613678 46.61077881]
[-110.31798553 45.29125595]
[-125.25983429 43.97173309]
[-140.20169067 42.65221024]
[-154.83364868 50.05747223]
[-168.41291809 40.86315536]
[-166.97030640 24.52758408]
[-151.98985291 17.85539246]
[-138.88217163 27.71035957]
[-123.94031525 29.02988243]
[-108.99846649 30.34940529]
[-94.05661774 31.66892815]
[-79.11476898 32.98844910]
[-64.17292023 34.30797195]
[-61.37925720 27.34769630]
[-75.29981232 21.76037216]
[-89.22035980 16.17304802]
[-98.48227692 4.37402487]
[-83.63304138 2.25249457]
[-69.71248627 7.83981895]
[-55.79193115 13.42714310]
[-52.99826813 6.46686649]
[-64.70610046 -2.91005445]
[-76.41393280 -12.28697586]
[-92.69769287 -14.22892380]
[-98.90821838 -29.40658569]
[-88.65665436 -42.20648575]
[-72.48892975 -39.46118164]
[-67.03701019 -23.99480820]
[-55.32918167 -14.61788750]
[-43.62134933 -5.24096632]
[-35.83552551 20.41206169]
[-45.67839050 38.44769287]
[-31.59981537 43.62395096]
[-17.52123642 48.80020905]
[-3.44265914 53.97646713]
[10.63591862 59.15272522]
[24.71449661 64.32897949]
[38.08417892 57.86468124]
[52.43559647 62.91358948]
[59.12529755 76.98077393]
[73.20388031 82.15702820]
[87.28245544 87.33329010]
[99.26051331 78.30410767]
[98.16047668 63.34449768]
[97.06044006 48.38488770]
[95.96040344 33.42527771]
[87.23188782 20.22968864]
[94.01499176 6.96926546]
[92.91495514 -7.99034405]
[91.81491852 -22.94995308]
[79.68789673 -33.08458710]
[78.36229706 -48.83318710]
[88.62458038 -60.85238266]
[104.38631439 -62.01140213]
[116.29634094 -51.62261963]
[117.28865051 -35.84951401]
[106.77452850 -24.04998970]
[107.87456512 -9.09038067]
[108.97460175 5.86922884]
[117.62443542 17.99480820]
[110.92001343 32.32524109]
[112.02005005 47.28485107]
[113.12008667 62.24446106]
[114.22012329 77.20407104]
[123.59704590 88.91190338]
[137.95513916 93.25300598]
[152.31323242 97.59410095]
[166.67132568 101.93519592]
[181.02941895 106.27629852]
[195.38751221 110.61739349]
[209.74560547 114.95849609]
[224.10369873 119.29959106]
[239.55253601 115.88726044]
[249.49594116 126.97680664]
[264.45553589 128.07684326]
[279.29421997 125.88269043]
[294.13287354 123.68854523]
[308.97152710 121.49439240]
[323.81018066 119.30024719]
[338.64883423 117.10609436]
[353.48748779 114.91194153]
[368.32614136 112.71779633]
[383.16479492 110.52364349]
[387.44192505 98.78018951]
[396.25436401 90.01975250]
[407.88699341 85.86076355]
[420.11239624 87.03445435]
[430.61709595 93.25710297]
[437.43951416 103.29541016]
[452.33618164 101.53781891]
[467.23284912 99.78022003]
[482.12951660 98.02262878]
[497.02621460 96.26503754]
[511.92288208 94.50743866]
[499.54202271 86.03901672]
[494.39633179 71.94923401]
[498.40570068 57.49499893]
[510.07421875 48.06919479]
[525.04833984 47.18860245]
[537.74121094 55.18176651]
[543.41711426 69.06643677]
[539.95837402 83.66222382]
[528.65460205 93.52379608]
[543.65460205 93.52379608]
[558.65460205 93.52379608]
[573.65460205 93.52379608]
[584.65130615 82.17266083]
[600.45471191 82.00556946]
[611.68896484 93.12165833]
[611.68896484 108.92594147]
[600.45471191 120.04203033]
[584.65130615 119.87493896]
[573.65460205 108.52379608]
[558.65460205 108.52379608]
[543.65460205 108.52379608]
[528.65460205 108.52379608]
[513.68048096 109.40411377]
[498.78378296 111.16170502]
[483.88711548 112.91930389]
[468.99044800 114.67689514]
[454.09378052 116.43448639]
[439.19711304 118.19208527]
[431.28622437 133.98300171]
[415.33877563 141.93249512]
[397.65780640 138.68762207]
[385.35894775 125.36229706]
[370.52029419 127.55644989]
[355.68164062 129.75059509]
[340.84298706 131.94474792]
[326.00433350 134.13890076]
[311.16567993 136.33305359]
[296.32702637 138.52720642]
[281.48834229 140.72134399]
[266.64968872 142.91549683]
[280.93637085 147.48619080]
[294.07608032 154.72135925]
[305.57745361 164.35041809]
[315.01028442 176.01322937]
[322.02185059 189.27363586]
[326.34985352 203.63568115]
[327.83245850 218.56222534]
[326.41424561 233.49502563]
[322.14819336 247.87561035]
[315.19390869 261.16613770]
[305.81146240 272.86950684]
[294.35171509 282.54809570]
[281.24331665 289.83984375]
[266.97650146 294.47210693]
[252.08483887 296.27160645]
[237.12525940 295.17105103]
[222.65727234 291.21157837]
[209.22196960 284.54132080]
[197.32182312 275.40969849]
[187.40190125 264.15823364]
[179.83320618 251.20776367]
[174.89880371 237.04260254]
[172.78323364 222.19253540]
[173.56562805 207.21295166]
[177.21673584 192.66409302]
[183.59997559 179.09005737]
[192.47663879 166.99855042]
[203.51472473 156.84175110]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 125]
[4 123]
[5 122]
[6 121]
[7 120]
[8 119]
[9 118]
[10 117]
[11 116]
[12 37]
[13 36]
[14 35]
[15 34]
[16 33]
[17 32]
[19 30]
[20 29]
[21 28]
[38 93]
[39 92]
[40 91]
[43 88]
[44 87]
[45 86]
[46 85]
[47 84]
[48 83]
[49 64]
[50 63]
[51 62]
[52 61]
[53 60]
[54 59]
[72 81]
[73 80]
[74 79]
[94 115]
[95 114]
[96 113]
[97 112]
[99 110]
[100 109]
[101 108]
[126 185]
[127 184]
[128 183]
[129 182]
[130 181]
[131 180]
[132 179]
[133 178]
[134 177]
[140 173]
[141 172]
[142 171]
[143 170]
[144 169]
[145 168]
[154 167]
[155 166]
[156 165]
[157 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
