%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 07:29:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGACACGAGGACACACACACAGGCUUAGGAUGGCACGUGCUGUAAGAUUUCCUGAGCAUUACAGUUCUUAGCACUGAACUCGUCACAGUGUUUUAACAUACCCCUUGGCCCACUGCAUCUCAGGUUUCCUACAUGGCUGGAUUACGGGAGUUCGAGACCAGCCUGGGCAACAUAGUGAGACCCCCCCAUCUCUGCAAAAUUAAAACAUCAGCCGACCGUG\
) } def
/len { sequence length } bind def

/coor [
[-97.11730194 155.18089294]
[-105.52820587 140.27882385]
[-120.25774384 143.11444092]
[-134.98727417 145.95007324]
[-149.71681213 148.78569031]
[-164.44635010 151.62132263]
[-179.17588806 154.45693970]
[-193.90542603 157.29257202]
[-200.55967712 171.18598938]
[-213.96221924 178.41268921]
[-228.87380981 176.38574219]
[-239.60409546 166.09014893]
[-254.33361816 168.92578125]
[-269.06317139 171.76139832]
[-269.21838379 178.46557617]
[-270.88018799 185.17434692]
[-274.05407715 191.54461670]
[-278.66677856 197.23214722]
[-284.56619263 201.90971375]
[-291.52551270 205.28521729]
[-299.25173950 207.11863708]
[-307.39776611 207.23710632]
[-315.57809448 205.54690552]
[-323.38687134 202.04183960]
[-330.41818237 196.80751038]
[-344.30648804 202.47447205]
[-358.19482422 208.14143372]
[-372.08316040 213.80839539]
[-385.97146606 219.47534180]
[-399.85980225 225.14230347]
[-413.74813843 230.80926514]
[-427.63644409 236.47622681]
[-441.22857666 242.82081604]
[-454.49148560 249.82762146]
[-467.75439453 256.83444214]
[-481.01730347 263.84124756]
[-489.28164673 278.00570679]
[-505.67715454 277.66024780]
[-513.33752441 263.16024780]
[-504.38244629 249.42202759]
[-488.02410889 250.57832336]
[-474.76119995 243.57151794]
[-461.49829102 236.56471252]
[-448.23538208 229.55790710]
[-462.61270142 225.28092957]
[-470.97625732 212.82897949]
[-469.49758911 197.90205383]
[-458.85351562 187.33302307]
[-443.91650391 185.95997620]
[-431.52404785 194.41140747]
[-427.34887695 208.81863403]
[-433.30340576 222.58790588]
[-419.41506958 216.92094421]
[-405.52676392 211.25398254]
[-391.63842773 205.58702087]
[-377.75012207 199.92005920]
[-363.86178589 194.25309753]
[-349.97344971 188.58615112]
[-336.08514404 182.91918945]
[-335.66271973 175.43109131]
[-350.16705322 179.25532532]
[-358.28604126 166.64256287]
[-348.79934692 155.02349854]
[-334.81790161 160.45489502]
[-334.39547729 152.96679688]
[-347.55838013 145.77384949]
[-360.72125244 138.58090210]
[-373.88412476 131.38795471]
[-387.04702759 124.19500732]
[-401.01229858 130.95889282]
[-416.28021240 128.18925476]
[-426.97988892 116.95109558]
[-428.99713135 101.56569672]
[-421.55621338 87.94906616]
[-407.51837158 81.33708191]
[-392.28140259 84.27217102]
[-381.70425415 95.62574768]
[-379.85406494 111.03211975]
[-366.69119263 118.22507477]
[-353.52828979 125.41802216]
[-340.36541748 132.61097717]
[-327.20254517 139.80392456]
[-292.54455566 134.92396545]
[-271.89877319 157.03186035]
[-257.16925049 154.19624329]
[-242.43971252 151.36061096]
[-236.29876709 137.81709290]
[-223.20550537 130.39886475]
[-208.07785034 132.13311768]
[-196.74104309 142.56303406]
[-182.01150513 139.72741699]
[-167.28196716 136.89178467]
[-152.55244446 134.05616760]
[-137.82290649 131.22053528]
[-123.09336853 128.38491821]
[-108.36383057 125.54928589]
[-107.21205139 112.75353241]
[-102.78336334 100.67913055]
[-95.37296295 90.15117645]
[-85.48006439 81.89105225]
[-73.77425385 76.46691895]
[-61.05020523 74.25469971]
[-48.17369080 75.41201019]
[-36.02270508 79.86694336]
[-25.42757607 87.32250977]
[-17.11424255 97.27642822]
[-11.65450573 109.05493164]
[3.18168521 106.84417725]
[18.01787567 104.63342285]
[32.85406876 102.42266846]
[47.69025803 100.21191406]
[52.13056564 76.45724487]
[66.97726440 56.79379272]
[89.45433044 45.59646988]
[115.03888702 45.58852768]
[118.59705353 31.01665306]
[122.15521240 16.44478035]
[115.08820343 2.04210687]
[122.07246399 -12.40087509]
[137.75025940 -15.80474663]
[150.09492493 -5.55834818]
[149.63670349 10.47815990]
[136.72708130 20.00294113]
[133.16893005 34.57481384]
[129.61076355 49.14668655]
[141.50570679 58.28509140]
[154.66857910 51.09214401]
[167.83146667 43.89919281]
[176.23120117 30.49191856]
[191.10997009 31.17848778]
[204.27285767 23.98553848]
[217.43574524 16.79258919]
[230.59861755 9.59963989]
[233.30416870 5.15604496]
[237.06523132 2.45876598]
[241.04220581 1.61763549]
[244.47312927 2.39427519]
[257.92816162 -4.23610640]
[271.38320923 -10.86648846]
[284.83822632 -17.49687004]
[298.29327393 -24.12725067]
[311.74832153 -30.75763321]
[318.05593872 -37.35218811]
[325.43991089 -37.38514328]
[338.98703003 -43.82532120]
[348.12854004 -56.73822784]
[362.94503784 -55.21475220]
[376.49215698 -61.65492630]
[390.03924561 -68.09510803]
[398.89468384 -81.89776611]
[415.26095581 -80.85988617]
[422.30184937 -66.04914856]
[412.77429199 -52.70157623]
[396.47943115 -54.54799652]
[382.93231201 -48.10782242]
[369.38522339 -41.66764450]
[361.21267700 -29.21538162]
[345.42721558 -30.27821350]
[331.88009644 -23.83803749]
[318.37869263 -17.30259514]
[304.92364502 -10.67221355]
[291.46862793 -4.04183197]
[278.01358032 2.58854961]
[264.55853271 9.21893120]
[251.10350037 15.84931278]
[237.79156494 22.76252174]
[224.62869263 29.95547104]
[211.46580505 37.14842224]
[198.30291748 44.34136963]
[190.84468079 57.23415756]
[175.02441406 57.06207657]
[161.86152649 64.25502777]
[148.69865417 71.44797516]
[153.02935791 83.91141510]
[154.28674316 96.80191040]
[152.51321411 109.38652802]
[147.92039490 120.97594452]
[160.65725708 128.89883423]
[173.44963074 136.73179626]
[186.29684448 144.47447205]
[199.14405823 152.21714783]
[211.99128723 159.95982361]
[226.22988892 153.79202271]
[241.36712646 157.20425415]
[251.58244324 168.88446045]
[252.94781494 184.34135437]
[244.93823242 197.63143921]
[230.63356018 203.64440918]
[215.53422546 200.06816101]
[205.44622803 188.27783203]
[204.24861145 172.80703735]
[191.40138245 165.06436157]
[178.55416870 157.32168579]
[165.70695496 149.57902527]
[158.36207581 148.81922913]
[152.73437500 141.63569641]
[139.99749756 133.71281433]
[135.12171936 138.76620483]
[129.61302185 143.12103271]
[123.57068634 146.69879150]
[117.10359192 149.43501282]
[110.32829285 151.28041077]
[103.36687469 152.20170593]
[96.34477997 152.18231201]
[89.38855743 151.22256470]
[82.62355042 149.33976746]
[76.17167664 146.56785583]
[70.14920044 142.95677185]
[64.66464996 138.57157898]
[59.81685257 133.49131775]
[55.69317245 127.80753326]
[52.36791992 121.62264252]
[49.90101242 115.04810333]
[35.06482315 117.25885773]
[20.22863197 119.46961975]
[5.39244032 121.68037415]
[-9.44375038 123.89112854]
[-12.57406330 140.89002991]
[-21.32169342 155.76913452]
[-34.61510468 166.73918152]
[-50.83731842 172.48771667]
[-68.02258301 172.33609009]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 96]
[3 95]
[4 94]
[5 93]
[6 92]
[7 91]
[8 90]
[12 86]
[13 85]
[14 84]
[25 59]
[26 58]
[27 57]
[28 56]
[29 55]
[30 54]
[31 53]
[32 52]
[33 44]
[34 43]
[35 42]
[36 41]
[65 82]
[66 81]
[67 80]
[68 79]
[69 78]
[107 217]
[108 216]
[109 215]
[110 214]
[111 213]
[115 125]
[116 124]
[117 123]
[126 173]
[127 172]
[128 171]
[130 169]
[131 168]
[132 167]
[133 166]
[137 165]
[138 164]
[139 163]
[140 162]
[141 161]
[142 160]
[144 159]
[145 158]
[147 156]
[148 155]
[149 154]
[177 197]
[178 196]
[179 194]
[180 193]
[181 192]
[182 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
