%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 13:33:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAGGAACCCCCUCACCACCUGCCCGGCCCAGGAGCGCAGCUGCAUUUGGGGUGGGGGGCAGGAUGGGGGAGAGGGGGAGGGGUGGUACUUGGCACCAAUAAAGGAGGAAUCAG\
) } def
/len { sequence length } bind def

/coor [
[120.83186340 275.79583740]
[124.58424377 261.27276611]
[131.42134094 247.92156982]
[141.01226807 236.38839722]
[152.89288330 227.23138428]
[166.48823547 220.89367676]
[181.14036560 217.68197632]
[196.14019775 217.75170898]
[210.76063538 221.09910583]
[200.44514465 210.20918274]
[190.12965393 199.31924438]
[179.81414795 188.42930603]
[169.49865723 177.53938293]
[159.18316650 166.64944458]
[148.86767578 155.75952148]
[128.67497253 151.86630249]
[123.50428772 131.16252136]
[112.33901215 121.14569855]
[101.17372894 111.12888336]
[89.87384033 101.26417542]
[78.44141388 91.55338287]
[67.00897980 81.84258270]
[55.57654953 72.13179016]
[44.14411926 62.42099762]
[32.71168900 52.71020126]
[21.27925873 42.99940872]
[1.51416779 45.81565094]
[-13.85179520 33.54363251]
[-15.42681694 14.24235439]
[-27.60964966 5.49143553]
[-39.79248428 -3.25948310]
[-51.97531509 -12.01040173]
[-64.15814972 -20.76132011]
[-76.34098053 -29.51223946]
[-92.06322479 -31.27903557]
[-97.88627625 -44.98820496]
[-110.06910706 -53.73912430]
[-125.62269592 -50.93526459]
[-138.55552673 -60.01917648]
[-141.19477844 -75.60153198]
[-131.97463989 -88.43759918]
[-116.36525726 -90.91196442]
[-103.62738800 -81.55663300]
[-101.31819153 -65.92195892]
[-89.13536072 -57.17103958]
[-74.28450775 -56.03016663]
[-67.59006500 -41.69507217]
[-55.40723038 -32.94415283]
[-43.22439575 -24.19323540]
[-31.04156494 -15.44231606]
[-18.85873032 -6.69139767]
[-6.67589808 2.05952120]
[2.84693313 -2.34817314]
[13.42185307 -2.33423781]
[23.08078384 2.16737413]
[29.99722481 10.38113880]
[32.83154678 20.82271957]
[30.99005318 31.56697845]
[42.42248154 41.27777100]
[53.85491562 50.98856735]
[65.28734589 60.69935989]
[76.71977234 70.41015625]
[88.15220642 80.12094879]
[99.58464050 89.83174133]
[107.38618469 92.28085327]
[111.19055176 99.96360779]
[122.35582733 109.98042297]
[133.52110291 119.99723816]
[143.01849365 118.19794464]
[152.12179565 121.00889587]
[158.75489807 127.65311432]
[161.46894836 136.49554443]
[159.75761414 145.44401550]
[170.07310486 156.33395386]
[180.38859558 167.22389221]
[190.70408630 178.11381531]
[201.01957703 189.00375366]
[211.33506775 199.89367676]
[221.65055847 210.78361511]
[225.41535950 211.21936035]
[228.73870850 212.56564331]
[231.41865540 214.62866211]
[233.32179260 217.17526245]
[248.05305481 220.00193787]
[262.78430176 222.82861328]
[277.51556396 225.65530396]
[288.74603271 214.94752502]
[304.12997437 212.91921997]
[317.75195312 220.35031128]
[324.37405396 234.38339233]
[321.44992065 249.62246704]
[310.10397339 260.20779419]
[294.69894409 262.06906128]
[281.15835571 254.49064636]
[274.68887329 240.38655090]
[259.95764160 237.55987549]
[245.22637939 234.73318481]
[230.49511719 231.90650940]
[241.19047546 242.42361450]
[249.32743835 255.02479553]
[254.51222229 269.10025024]
[256.49392700 283.96875000]
[255.17662048 298.91079712]
[250.62406921 313.20324707]
[243.05659485 326.15444946]
[232.84042358 337.13760376]
[220.46997070 345.62121582]
[206.54386902 351.19470215]
[191.73608398 353.58834839]
[176.76322937 352.68630981]
[162.34991455 348.53225708]
[149.19364929 341.32720947]
[137.93115234 331.41983032]
[129.10743713 319.28961182]
[123.14953613 305.52359009]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 79]
[10 78]
[11 77]
[12 76]
[13 75]
[14 74]
[15 73]
[17 68]
[18 67]
[19 66]
[20 64]
[21 63]
[22 62]
[23 61]
[24 60]
[25 59]
[26 58]
[29 52]
[30 51]
[31 50]
[32 49]
[33 48]
[34 47]
[36 45]
[37 44]
[83 98]
[84 97]
[85 96]
[86 95]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
