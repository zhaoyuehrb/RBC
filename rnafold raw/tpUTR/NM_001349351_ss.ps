%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 05:12:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAAUAAAACCAUAAAUCUUUGAGAGUUUUUUGAAAGCAAAUCAUUCUGUAUAUAUGCUCUCCAGCCUCUGACACAAGAUGCGUUCUUAAUACAGACUUGUUUGCAAAGAAAAAAAAAAGUAUAUUAUUAAAAUCCUGUAAAUAUCUAUGGUAUAUUAAUAAAACAAUUUUAAACACUUUUGAAUUUUAA\
) } def
/len { sequence length } bind def

/coor [
[66.22462463 460.93618774]
[63.50898361 475.89260864]
[55.27228928 488.66854858]
[42.77058411 497.31585693]
[27.91028023 500.51583862]
[12.95747185 497.78051758]
[0.19235145 489.52703857]
[-8.43849277 477.01394653]
[-11.61891842 462.14944458]
[-8.86393547 447.20025635]
[-0.59365809 434.44601440]
[11.93075657 425.83163452]
[26.79942703 422.67074585]
[29.49858475 407.91561890]
[32.19774246 393.16046143]
[34.89690018 378.40530396]
[28.27910995 368.26678467]
[30.41896057 355.94290161]
[40.70566940 348.14331055]
[43.64714432 333.43453979]
[46.58862305 318.72579956]
[49.53009796 304.01702881]
[52.47157669 289.30825806]
[55.41305542 274.59948730]
[58.35453033 259.89074707]
[61.29600906 245.18197632]
[64.23748779 230.47320557]
[57.78734207 220.22720337]
[60.12959671 207.94021606]
[70.54319763 200.31085205]
[73.72619629 185.65245056]
[76.90919495 170.99406433]
[80.09219360 156.33566284]
[83.27519226 141.67727661]
[86.45819855 127.01888275]
[89.64119720 112.36048889]
[85.26479340 98.01311493]
[74.44237518 87.62681580]
[63.61996078 77.24050903]
[52.79754257 66.85420990]
[41.97512436 56.46790695]
[31.15270615 46.08160400]
[15.96770000 48.67424011]
[2.32718396 41.90743256]
[-4.63093424 28.56394577]
[-2.42405343 13.85790443]
[-13.24647141 3.47160244]
[-24.06888962 -6.91469955]
[-34.89130783 -17.30100060]
[-45.71372604 -27.68730354]
[-56.53614426 -38.07360458]
[-67.35855865 -48.45990753]
[-87.37882996 -46.96523666]
[-101.83997345 -60.44792557]
[-101.75186157 -79.91452026]
[-113.07340240 -89.75437164]
[-124.39495087 -99.59422302]
[-135.71649170 -109.43407440]
[-147.11857605 -119.18048859]
[-158.60041809 -128.83279419]
[-170.08227539 -138.48510742]
[-192.36965942 -140.72994995]
[-199.04441833 -161.31243896]
[-211.13601685 -170.18899536]
[-223.22763062 -179.06555176]
[-239.57369995 -183.56468201]
[-239.77543640 -200.51742554]
[-223.54106140 -205.40426636]
[-214.35107422 -191.15715027]
[-202.25947571 -182.28059387]
[-190.16786194 -173.40405273]
[-182.77912903 -176.24272156]
[-174.77642822 -175.91629028]
[-167.47386169 -172.40379333]
[-162.09999084 -166.21347046]
[-159.59136963 -158.31053162]
[-160.42996216 -149.96694946]
[-148.94812012 -140.31465149]
[-137.46626282 -130.66233826]
[-130.31095886 -128.76145935]
[-125.87664032 -120.75561523]
[-114.55509949 -110.91576385]
[-103.23355103 -101.07591248]
[-91.91201019 -91.23606110]
[-82.21539307 -94.69258118]
[-71.87905884 -93.79635620]
[-62.78137589 -88.64277649]
[-56.60362244 -80.10697937]
[-54.51942062 -69.69587708]
[-56.97225952 -59.28232574]
[-46.14984131 -48.89602280]
[-35.32742310 -38.50971985]
[-24.50500488 -28.12341881]
[-13.68258762 -17.73711777]
[-2.86016965 -7.35081577]
[7.96224833 3.03548622]
[22.56513786 0.22592430]
[36.18338013 6.62962675]
[43.50521469 19.98043633]
[41.53900909 35.25918579]
[52.36142731 45.64548874]
[63.18384552 56.03179169]
[74.00626373 66.41809082]
[84.82868195 76.80439758]
[95.65110016 87.19069672]
[91.13298798 72.88731384]
[86.61488342 58.58393478]
[79.40241241 45.43173599]
[76.47951508 30.71927071]
[78.11685181 15.80890083]
[84.16279602 2.08131695]
[94.05750275 -9.19231415]
[106.88472748 -16.96806145]
[121.45668030 -20.52589607]
[136.42401123 -19.53636551]
[150.40074158 -14.09109783]
[162.09265137 -4.69432259]
[170.41705322 7.78382492]
[174.60313416 22.18787575]
[174.26327515 37.18402481]
[169.42890930 51.38363647]
[160.54772949 63.47183990]
[148.44253540 72.32905579]
[135.22009277 79.41193390]
[121.99766541 86.49481964]
[136.99716187 86.61817932]
[151.99664307 86.74153900]
[166.99613953 86.86489868]
[181.99563599 86.98825836]
[196.99513245 87.11161804]
[211.99461365 87.23497772]
[225.85795593 79.61142731]
[238.52116394 87.45313263]
[253.52066040 87.57649231]
[267.38400269 79.95294952]
[280.04721069 87.79465485]
[295.04669189 87.91801453]
[310.04620361 88.04137421]
[325.04568481 88.16473389]
[340.04516602 88.28809357]
[351.13485718 77.02777863]
[366.93908691 76.99065399]
[378.08154297 88.19875336]
[377.95156860 104.00251007]
[366.62628174 115.02583313]
[350.82479858 114.72877502]
[339.92181396 103.28759003]
[324.92233276 103.16423035]
[309.92282104 103.04087067]
[294.92333984 102.91751099]
[279.92385864 102.79415131]
[267.13336182 110.42652130]
[253.39729309 102.57598877]
[238.39781189 102.45262909]
[225.60733032 110.08499908]
[211.87126160 102.23446655]
[196.87176514 102.11110687]
[181.87226868 101.98774719]
[166.87278748 101.86438751]
[151.87329102 101.74102783]
[136.87379456 101.61766815]
[121.87430573 101.49430847]
[135.74299622 107.20915222]
[140.87777710 121.30290985]
[133.93563843 134.59977722]
[119.43627930 138.44276428]
[106.81958008 130.32987976]
[104.29959106 115.54348755]
[101.11659241 130.20188904]
[97.93358612 144.86027527]
[94.75058746 159.51867676]
[91.56758881 174.17706299]
[88.38459015 188.83546448]
[85.20159149 203.49385071]
[91.22481537 220.88673401]
[78.94625092 233.41468811]
[76.00476837 248.12344360]
[73.06329346 262.83221436]
[70.12181854 277.54098511]
[67.18033600 292.24972534]
[64.23886108 306.95849609]
[61.29738617 321.66726685]
[58.35590744 336.37603760]
[55.41443253 351.08477783]
[61.72291183 368.37625122]
[49.65205383 381.10446167]
[46.95289612 395.85961914]
[44.25373840 410.61477661]
[41.55458069 425.36990356]
[54.34136963 433.58981323]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 189]
[14 188]
[15 187]
[16 186]
[19 184]
[20 183]
[21 182]
[22 181]
[23 180]
[24 179]
[25 178]
[26 177]
[27 176]
[30 174]
[31 173]
[32 172]
[33 171]
[34 170]
[35 169]
[36 168]
[37 105]
[38 104]
[39 103]
[40 102]
[41 101]
[42 100]
[46 96]
[47 95]
[48 94]
[49 93]
[50 92]
[51 91]
[52 90]
[55 84]
[56 83]
[57 82]
[58 81]
[59 79]
[60 78]
[61 77]
[63 71]
[64 70]
[65 69]
[125 162]
[126 161]
[127 160]
[128 159]
[129 158]
[130 157]
[131 156]
[133 154]
[134 153]
[136 151]
[137 150]
[138 149]
[139 148]
[140 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
