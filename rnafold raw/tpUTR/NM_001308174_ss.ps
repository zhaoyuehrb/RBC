%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 04:47:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGCCUCUUUUUCUCUCGGCGACCCCGCCCCGCACGCGCCCUCCCCUCUGACCCCGGCCUGGGCUUCAGCCGCUUCCUCCCGCAAGCAGCCCGGGUCCGCACUGCGCCAGGAGCCGCCUGCGACCGCCCGGGCGUCGCAAACCGCCCGCCUGCUCUCUGAUUUCCGAGUCCAGCCCCCCCUGAGCCCCACCUCCUCCAGGGAGCCCUCCAGGAAGCCCCUUCCCUGACUCCUGGCCCACAGGCCAGGCCUAA\
AAAAAACUCGUGGCUUC\
) } def
/len { sequence length } bind def

/coor [
[198.50685120 190.20080566]
[185.60363770 182.55181885]
[172.70040894 174.90283203]
[159.79719543 167.25384521]
[146.89398193 159.60485840]
[133.99076843 151.95587158]
[121.08755493 144.30688477]
[128.74406433 157.20562744]
[136.40058899 170.10438538]
[147.34182739 180.36543274]
[152.25988770 194.53627014]
[150.02766418 209.36924744]
[141.15670776 221.46495056]
[127.68006897 228.05131531]
[112.68630219 227.61889648]
[99.61165619 220.26676941]
[91.45256042 207.67991638]
[90.07890320 192.74293518]
[95.80496216 178.87983704]
[97.45023346 163.97033691]
[99.09551239 149.06083679]
[90.50365448 161.35636902]
[81.91179657 173.65190125]
[73.31993866 185.94741821]
[72.44615936 202.32327271]
[57.70674896 209.51226807]
[44.26433945 200.11900330]
[45.94733429 183.80644226]
[61.02441025 177.35556030]
[69.61627197 165.06002808]
[78.20812988 152.76451111]
[86.79998779 140.46897888]
[67.28407288 122.43050385]
[63.28622437 98.03431702]
[48.78622818 94.19372559]
[34.28623199 90.35314178]
[19.78623390 86.51255798]
[4.46502018 90.45855713]
[-5.85695505 79.72048950]
[-20.35695076 75.87990570]
[-34.85694885 72.03932190]
[-46.35640335 77.82744598]
[-58.33731842 74.35607147]
[-64.54837036 64.00283813]
[-79.00321198 59.99564743]
[-93.45805359 55.98845673]
[-107.91289520 51.98126602]
[-115.59435272 64.95934296]
[-126.36512756 75.49859619]
[-139.48680115 82.88490295]
[-154.06198120 86.61998749]
[-169.09562683 86.45507050]
[-183.56301880 82.40739441]
[-196.47956848 74.75865173]
[-206.96786499 64.03541565]
[-214.31726074 50.97283554]
[-218.03199768 36.46430206]
[-217.86466980 21.50029564]
[-232.31951904 17.49310684]
[-246.77435303 13.48591709]
[-261.25201416 9.56196404]
[-275.75201416 5.72137785]
[-290.25201416 1.88079166]
[-304.75201416 -1.95979464]
[-319.25198364 -5.80038118]
[-333.75198364 -9.64096737]
[-348.25198364 -13.48155403]
[-362.75198364 -17.32213974]
[-367.71990967 -15.97769737]
[-372.26147461 -16.58873558]
[-375.70968628 -18.67267036]
[-377.68173218 -21.55363655]
[-392.04052734 -25.89241791]
[-409.88726807 -21.28780556]
[-421.36761475 -34.58132935]
[-435.77539062 -38.75459290]
[-447.94555664 -29.12821198]
[-463.45098877 -28.52737808]
[-476.32955933 -37.18312454]
[-481.62918091 -51.76713943]
[-477.31207275 -66.67156982]
[-465.03820801 -76.16535950]
[-449.52716064 -76.59795380]
[-436.74325562 -67.80300903]
[-431.60214233 -53.16236115]
[-417.19436646 -48.98910141]
[-406.47460938 -54.54367828]
[-394.45397949 -51.21237183]
[-387.70175171 -40.25121307]
[-373.34295654 -35.91242981]
[-358.91140747 -31.82213593]
[-344.41140747 -27.98155022]
[-329.91140747 -24.14096451]
[-315.41140747 -20.30037689]
[-300.91140747 -16.45979118]
[-286.41140747 -12.61920452]
[-271.91140747 -8.77861881]
[-257.41143799 -4.93803215]
[-250.16790771 -6.25834513]
[-242.76716614 -0.96892387]
[-228.31231689 3.03826571]
[-213.85748291 7.04545498]
[-206.29635620 -5.86883116]
[-195.64176941 -16.39388657]
[-182.61581421 -23.80797958]
[-168.10342407 -27.60050011]
[-153.09237671 -27.50710869]
[-138.60592651 -23.52817154]
[-125.63318634 -15.92912292]
[-115.06147766 -5.22278404]
[-107.61572266 7.86525011]
[-103.80869293 22.44578362]
[-103.90570831 37.52642441]
[-89.45086670 41.53361511]
[-74.99602509 45.54080582]
[-60.54118347 49.54799652]
[-43.79294586 44.25522995]
[-31.01636124 57.53932571]
[-16.51636505 61.37990952]
[-2.01636887 65.22049713]
[12.26770878 60.99978638]
[23.62682152 72.01255798]
[38.12681580 75.85314941]
[52.62681198 79.69373322]
[67.12680817 83.53431702]
[72.45920563 75.64286804]
[79.63970947 69.38588715]
[88.18648529 65.18325043]
[97.52599335 63.31697083]
[99.59079742 48.45976639]
[91.19916534 30.10471916]
[103.81470490 15.42299175]
[105.53704834 0.52220184]
[107.25939178 -14.37858772]
[108.98173523 -29.27937698]
[110.70407867 -44.18016815]
[112.42642212 -59.08095551]
[100.91242981 -69.48324585]
[97.74467468 -84.67353821]
[104.14122009 -98.81085205]
[117.64247131 -106.45911407]
[133.05691528 -104.67739868]
[144.45739746 -94.15081787]
[147.46017456 -78.92705536]
[140.91062927 -64.85996246]
[127.32720947 -57.35861588]
[125.60486603 -42.45782471]
[123.88252258 -27.55703545]
[122.16017914 -12.65624523]
[120.43783569 2.24454427]
[118.71549988 17.14533424]
[125.73136902 24.51216507]
[127.59275055 34.73633957]
[123.45265961 44.50670624]
[114.44800568 50.52456665]
[112.38320160 65.38177490]
[114.02100372 66.01210785]
[115.62685394 66.71987915]
[124.63799286 54.72823334]
[133.64912415 42.73659515]
[128.96389771 27.94374847]
[133.90040588 13.23285294]
[146.56048584 4.26054716]
[162.07604980 4.47686481]
[174.48106384 13.79862785]
[179.00553894 28.64142799]
[173.90972900 43.29790497]
[161.15307617 52.13234711]
[145.64076233 51.74772644]
[136.62963867 63.73936844]
[127.61849976 75.73101044]
[134.77107239 84.85416412]
[138.88883972 96.07164001]
[139.36730957 108.36849213]
[135.94241333 120.55955505]
[128.73654175 131.40365601]
[141.63975525 139.05265808]
[154.54296875 146.70164490]
[167.44618225 154.35063171]
[180.34941101 161.99961853]
[193.25262451 169.64860535]
[206.15583801 177.29759216]
[221.28819275 173.60308838]
[234.26492310 181.54406738]
[237.69381714 195.99322510]
[250.59703064 203.64221191]
[263.50024414 211.29119873]
[276.40347290 218.94018555]
[289.30667114 226.58918762]
[305.12329102 226.97059631]
[312.12597656 240.11639404]
[332.92044067 219.28926086]
[366.77938843 215.36976624]
[399.88543701 235.54684448]
[414.79589844 233.91026306]
[429.70635986 232.27368164]
[444.61682129 230.63711548]
[459.52725220 229.00053406]
[474.61215210 221.26216125]
[486.22402954 233.61532593]
[477.56811523 248.19309998]
[461.16384888 243.91098022]
[446.25338745 245.54756165]
[431.34292603 247.18414307]
[416.43246460 248.82072449]
[401.52203369 250.45729065]
[400.57516479 257.89727783]
[415.45516968 259.79098511]
[427.39492798 268.87072754]
[413.56146240 274.67095947]
[398.68148804 272.77728271]
[397.73461914 280.21725464]
[411.75988770 285.53634644]
[425.78512573 290.85540771]
[439.81036377 296.17449951]
[453.86596680 301.41278076]
[467.95150757 306.57009888]
[482.03701782 311.72741699]
[498.98937988 311.49554443]
[503.90509033 327.72119141]
[489.67434692 336.93652344]
[476.87969971 325.81295776]
[462.79415894 320.65560913]
[448.70864868 315.49829102]
[441.37442017 316.14712524]
[434.49127197 310.19973755]
[420.46603394 304.88064575]
[406.44079590 299.56158447]
[392.41555786 294.24252319]
[388.15505981 300.41488647]
[394.58547974 313.96664429]
[379.63409424 312.75964355]
[375.37362671 318.93203735]
[385.32046509 330.15969849]
[395.26730347 341.38735962]
[405.21414185 352.61502075]
[415.16098022 363.84268188]
[425.10781860 375.07034302]
[435.05465698 386.29800415]
[450.77270508 390.97500610]
[454.31762695 406.98641968]
[442.04269409 417.86108398]
[426.57531738 412.41204834]
[423.82699585 396.24484253]
[413.88015747 385.01718140]
[403.93331909 373.78952026]
[393.98648071 362.56185913]
[384.03964233 351.33419800]
[374.09280396 340.10653687]
[364.14596558 328.87887573]
[354.49322510 329.74606323]
[345.04693604 329.14010620]
[336.02548218 327.14263916]
[327.62753296 323.86663818]
[320.02761841 319.45245361]
[313.37246704 314.06320190]
[307.77844238 307.87954712]
[303.32949829 301.09442139]
[300.07623291 293.90744019]
[298.03594971 286.51937866]
[297.19345093 279.12673950]
[297.50277710 271.91671753]
[298.88961792 265.06246948]
[301.25460815 258.71899414]
[304.47698975 253.01960754]
[289.58331299 253.18528748]
[281.65768433 239.49240112]
[268.75448608 231.84341431]
[255.85125732 224.19441223]
[242.94804382 216.54542542]
[230.04483032 208.89643860]
[215.72288513 212.82295227]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 182]
[2 181]
[3 180]
[4 179]
[5 178]
[6 177]
[7 176]
[21 32]
[22 31]
[23 30]
[24 29]
[34 125]
[35 124]
[36 123]
[37 122]
[39 120]
[40 119]
[41 118]
[44 116]
[45 115]
[46 114]
[47 113]
[58 102]
[59 101]
[60 100]
[61 98]
[62 97]
[63 96]
[64 95]
[65 94]
[66 93]
[67 92]
[68 91]
[72 90]
[73 89]
[75 86]
[76 85]
[129 156]
[130 155]
[132 151]
[133 150]
[134 149]
[135 148]
[136 147]
[137 146]
[158 171]
[159 170]
[160 169]
[185 271]
[186 270]
[187 269]
[188 268]
[189 267]
[191 265]
[194 206]
[195 205]
[196 204]
[197 203]
[198 202]
[212 229]
[213 228]
[214 227]
[215 226]
[216 224]
[217 223]
[218 222]
[233 250]
[234 249]
[235 248]
[236 247]
[237 246]
[238 245]
[239 244]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
