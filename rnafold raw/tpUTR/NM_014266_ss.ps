%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 12:09:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCCUGCAGCUUGGACCUUUGACUUCUGACCCUCUCAUCCUGGAUGGUGUGUGGUGGCACAGGAACCCCCGCCCCAACUUUUGGAUUGUAAUAAAACAAUUGAAACACC\
) } def
/len { sequence length } bind def

/coor [
[97.65890503 151.79959106]
[99.39153290 136.90011597]
[100.72550201 121.95954895]
[93.36961365 123.42272186]
[85.03605652 135.89476013]
[76.70249939 148.36680603]
[82.19936371 162.87763977]
[78.08470154 177.83923340]
[65.94068146 187.49855042]
[50.43692780 188.14138794]
[37.53495026 179.52055359]
[32.19582367 164.95095825]
[36.47255325 150.03488159]
[48.72064209 140.50787354]
[64.23046112 140.03326416]
[72.56401062 127.56121063]
[80.89756775 115.08917236]
[67.60476685 122.03910065]
[54.31196976 128.98902893]
[43.13307190 138.99064636]
[28.59853935 142.69837952]
[13.99466801 139.27392578]
[2.62343073 129.49154663]
[-2.94410491 115.56306458]
[-1.44910419 100.63775635]
[6.77040911 88.09026337]
[19.85598183 80.75760651]
[34.84893036 80.29772949]
[48.35774994 86.81331635]
[63.05501556 89.81170654]
[77.75228119 92.81009674]
[66.29172516 83.13251495]
[54.83116150 73.45493317]
[39.29542542 70.46303558]
[34.56320190 56.34017181]
[23.10264206 46.66259003]
[11.64208126 36.98501205]
[-4.08323765 38.56295013]
[-16.26543427 28.49469948]
[-17.67702484 12.75357723]
[-7.48054075 0.67850941]
[8.27462673 -0.56657898]
[20.24121475 9.75699997]
[21.31966209 25.52445030]
[32.78022385 35.20203018]
[44.24078369 44.87961197]
[58.95678329 47.17930222]
[64.50874329 61.99437332]
[75.96929932 71.67195129]
[87.42986298 81.34953308]
[102.21792603 78.83693695]
[109.83905792 65.91725159]
[111.54572296 56.79358292]
[117.85945892 52.74636459]
[125.83993530 40.04550171]
[133.82041931 27.34463882]
[135.78230286 18.27242279]
[142.20706177 14.40387440]
[150.54061890 1.93182993]
[158.87416077 -10.54021454]
[156.10833740 -21.24661064]
[159.69670105 -31.47172737]
[168.19232178 -37.83604050]
[178.57168579 -38.38216400]
[187.59143066 -50.36732101]
[189.04167175 -66.70221710]
[204.02523804 -73.36741638]
[217.12832642 -63.50632858]
[214.87159729 -47.26319885]
[199.57659912 -41.34756470]
[190.55683899 -29.36240959]
[189.77903748 -10.12716579]
[171.34620667 -2.20666075]
[163.01264954 10.26538372]
[154.67910767 22.73742676]
[146.52128601 35.32511902]
[138.54080200 48.02598190]
[130.56031799 60.72684479]
[122.75875092 73.53838348]
[115.13761902 86.45806885]
[124.88951111 92.74205780]
[131.12672424 105.09796906]
[143.59877014 113.43152618]
[156.07081604 121.76507568]
[171.84384155 122.99871063]
[178.12757874 136.50292969]
[190.59962463 144.83648682]
[203.07165527 153.17004395]
[215.54370117 161.50360107]
[228.01574707 169.83714294]
[240.48779297 178.17070007]
[255.93756104 174.84201050]
[269.17044067 183.48297119]
[272.33560181 198.96707153]
[263.55520630 212.10786438]
[248.03851318 215.10914612]
[234.99130249 206.19030762]
[232.15423584 190.64274597]
[219.68218994 182.30918884]
[207.21015930 173.97564697]
[194.73811340 165.64208984]
[182.26606750 157.30853271]
[169.79402161 148.97497559]
[154.91307068 148.33741760]
[147.73725891 134.23712158]
[135.26521301 125.90356445]
[122.79316711 117.57001495]
[115.43727875 119.03318787]
[122.38720703 132.32598877]
[129.68974304 145.42839050]
[123.39588165 159.04409790]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 17]
[5 16]
[6 15]
[31 50]
[32 49]
[33 48]
[35 46]
[36 45]
[37 44]
[51 80]
[52 79]
[54 78]
[55 77]
[56 76]
[58 75]
[59 74]
[60 73]
[64 71]
[65 70]
[82 107]
[83 106]
[84 105]
[86 103]
[87 102]
[88 101]
[89 100]
[90 99]
[91 98]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
