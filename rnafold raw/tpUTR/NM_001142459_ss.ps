%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 18:33:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCCAUGGCCUUUUGAGAGGGCCUGAAAGCAGAUGCCCCAGCCUGCAGAGGGCGCGCCUCUGCACUAACUCAGGCCAGGUAGCCCUGGCAGCAGGAGGCCCAGCUCCGCAGGCAGGUGUGGAUGCUGCAAUUCCCAAUGCAGAGAAGCGGACCGACAGCGGCAGCCGGGUGAUGUCUGAUGAAGACACACUCCUACUGGGGCUCUCCUGAGGCCCCCUUCUAGCCUGUGCAAACCCUGUAUGUGCAUUAAAAA\
UCUCCAGGUCUGUG\
) } def
/len { sequence length } bind def

/coor [
[206.78958130 626.23150635]
[191.28195190 625.69000244]
[179.07508850 616.11022949]
[174.86277771 601.17584229]
[180.26472473 586.62939453]
[193.20378113 578.06433105]
[193.72726440 563.07348633]
[190.83038330 556.30328369]
[194.34507751 547.91149902]
[195.04295349 532.92773438]
[195.74082947 517.94396973]
[196.43870544 502.96023560]
[197.13659668 487.97650146]
[189.63159180 481.10607910]
[187.07498169 471.03146362]
[190.53852844 460.99945068]
[199.11294556 454.38006592]
[200.15928650 439.41662598]
[201.20562744 424.45315552]
[202.25198364 409.48968506]
[199.99169922 394.66098022]
[194.53479004 380.68878174]
[189.07789612 366.71658325]
[183.62100220 352.74438477]
[178.16410828 338.77218628]
[172.70719910 324.79998779]
[163.05661011 321.57611084]
[156.62329102 313.41235352]
[155.70703125 302.83889771]
[160.84779358 293.30429077]
[155.71749878 279.20889282]
[144.09382629 269.89547729]
[146.64457703 254.28125000]
[141.51426697 240.18586731]
[136.38397217 226.09046936]
[131.16186523 220.89846802]
[131.27702332 211.80111694]
[126.31106567 197.64698792]
[121.34511566 183.49287415]
[116.37916565 169.33874512]
[111.41321564 155.18461609]
[106.44726562 141.03048706]
[101.48131561 126.87635803]
[92.92614746 130.37940979]
[82.60511780 130.90844727]
[71.58950806 127.78983307]
[57.12345123 131.75634766]
[42.65739822 135.72285461]
[28.19133949 139.68937683]
[13.72528458 143.65588379]
[-0.74077189 147.62239075]
[-15.20682812 151.58891296]
[-29.67288399 155.55541992]
[-38.83088303 168.72776794]
[-54.84816360 169.63674927]
[-65.43763733 157.58509827]
[-62.47597122 141.81777954]
[-48.23509598 134.43016052]
[-33.63939667 141.08937073]
[-19.17333984 137.12284851]
[-4.70728445 133.15634155]
[9.75877190 129.18983459]
[24.22482872 125.22331238]
[38.69088364 121.25680542]
[53.15694046 117.29029083]
[67.62299347 113.32377625]
[68.01551819 105.83405304]
[53.03607178 105.04901886]
[38.05662918 104.26397705]
[23.56769371 108.14608002]
[15.39842224 95.56581879]
[24.83866501 83.90898132]
[38.84167099 89.28453827]
[53.82111359 90.06957245]
[68.80055237 90.85461426]
[69.19307709 83.36489105]
[55.22087860 77.90799713]
[41.24868393 72.45109558]
[27.27648735 66.99420166]
[13.30429077 61.53730011]
[-0.66790551 56.08040237]
[-16.78944206 59.08507919]
[-27.24531364 46.45152283]
[-21.27941513 31.17604828]
[-5.02895164 28.97275734]
[4.78899240 42.10820770]
[18.76118851 47.56510544]
[32.73338318 53.02200317]
[46.70558167 58.47890091]
[60.67777634 63.93579865]
[74.64997101 69.39269257]
[81.58362579 68.44522858]
[88.10697937 68.86451721]
[93.97264862 70.48578644]
[98.97674561 73.10231018]
[102.60557556 58.54787064]
[106.23440552 43.99343491]
[109.86322784 29.43900108]
[113.49205780 14.88456440]
[115.49320221 0.01865001]
[115.84223938 -14.97728825]
[116.19126892 -29.97322655]
[116.54030609 -44.96916580]
[109.12622070 -58.94564056]
[117.15756989 -71.48942566]
[117.50660706 -86.48536682]
[117.85564423 -101.48130798]
[118.11742401 -116.47901917]
[118.29195404 -131.47801208]
[118.46648407 -146.47698975]
[118.64101410 -161.47596741]
[110.21372986 -171.20964050]
[110.64768219 -183.67666626]
[119.16720581 -192.23269653]
[108.53466034 -203.61631775]
[109.10224915 -218.81935120]
[120.02031708 -228.88571167]
[120.36934662 -243.88165283]
[120.71838379 -258.87759399]
[113.30429077 -272.85406494]
[121.33564758 -285.39785767]
[121.68468475 -300.39379883]
[107.46218872 -308.85949707]
[99.50447845 -323.26501465]
[99.90550995 -339.62344360]
[108.46067810 -353.46176147]
[122.74872589 -361.04403687]
[122.92325592 -376.04302979]
[123.09778595 -391.04202271]
[123.27230835 -406.04098511]
[123.44683838 -421.03997803]
[110.92028809 -430.19778442]
[106.20096588 -444.97976685]
[111.10355377 -459.70199585]
[123.74289703 -468.70349121]
[139.25892639 -468.52294922]
[151.68539429 -459.22979736]
[156.24407959 -444.39746094]
[151.18208313 -429.72927856]
[138.44583130 -420.86544800]
[138.27130127 -405.86645508]
[138.09677124 -390.86749268]
[137.92224121 -375.86849976]
[137.74771118 -360.86950684]
[149.91313171 -354.70498657]
[158.28186035 -343.85278320]
[161.17968750 -330.39083862]
[157.98686218 -316.92782593]
[149.26960754 -306.09780884]
[136.68061829 -300.04476929]
[136.33158875 -285.04882812]
[143.77064514 -272.14495850]
[135.71432495 -258.52856445]
[135.36528015 -243.53262329]
[135.01625061 -228.53668213]
[145.45414734 -217.97325134]
[145.31379700 -202.76026917]
[134.16314697 -191.88366699]
[143.39277649 -176.94010925]
[133.63999939 -161.30145264]
[133.46546936 -146.30245972]
[133.29093933 -131.30348206]
[133.11640930 -116.30448914]
[136.17005920 -109.60356140]
[132.85157776 -101.13227081]
[132.50254822 -86.13632965]
[132.15351868 -71.14039612]
[139.59255981 -58.23652649]
[131.53623962 -44.62013245]
[131.18721008 -29.62419319]
[130.83818054 -14.62825394]
[130.48913574 0.36768436]
[136.84950256 4.34207869]
[149.57022095 12.29086781]
[155.93058777 16.26526260]
[169.25584412 9.37776566]
[182.58108521 2.49026871]
[195.90634155 -4.39722824]
[209.23159790 -11.28472519]
[215.45079041 -26.07327461]
[230.92906189 -30.29258156]
[243.79281616 -20.70595360]
[244.17407227 -4.66743231]
[231.78038025 5.51960278]
[216.11909485 2.04052877]
[202.79383850 8.92802525]
[189.46858215 15.81552219]
[176.14334106 22.70302010]
[162.81808472 29.59051514]
[148.48327637 30.34493065]
[136.43513489 26.24464798]
[128.04649353 18.51339340]
[124.41766357 33.06782913]
[120.78884125 47.62226486]
[117.16001129 62.17670059]
[113.53118134 76.73114014]
[126.88800049 98.74767303]
[115.63543701 121.91040802]
[120.60139465 136.06452942]
[125.56734467 150.21865845]
[130.53329468 164.37278748]
[135.49925232 178.52691650]
[140.46519470 192.68104553]
[145.43115234 206.83517456]
[150.47935486 220.96017456]
[155.60966492 235.05555725]
[160.73995972 249.15095520]
[172.73059082 259.47256470]
[169.81288147 274.07858276]
[174.94319153 288.17398071]
[190.95103455 300.46380615]
[186.67939758 319.34307861]
[192.13629150 333.31527710]
[197.59320068 347.28747559]
[203.05009460 361.25967407]
[208.50698853 375.23187256]
[213.96389771 389.20407104]
[215.87364197 374.32614136]
[224.24363708 361.87850952]
[237.73593140 355.32427979]
[252.69441223 356.43951416]
[265.06567383 364.92196655]
[271.49737549 378.47308350]
[270.24722290 393.41928101]
[255.82963562 389.27999878]
[266.49777222 399.82470703]
[281.75173950 404.02313232]
[285.36431885 418.47299194]
[296.03244019 429.01773071]
[306.70056152 439.56243896]
[317.36871338 450.10714722]
[328.03683472 460.65185547]
[338.70495605 471.19659424]
[354.69152832 472.54147339]
[363.48739624 485.95834351]
[358.34509277 501.15493774]
[343.20935059 506.47369385]
[329.69104004 497.83456421]
[328.16024780 481.86471558]
[317.49212646 471.32000732]
[306.82397461 460.77526855]
[296.15585327 450.23056030]
[285.48773193 439.68585205]
[274.81961060 429.14114380]
[260.32867432 425.69692993]
[255.95304871 410.49282837]
[245.28492737 399.94812012]
[238.26756287 402.59509277]
[243.56150818 416.62985229]
[248.85546875 430.66458130]
[254.14920044 444.69943237]
[240.11427307 449.99291992]
[234.82072449 435.95855713]
[229.52676392 421.92379761]
[224.23281860 407.88906860]
[217.21543884 410.53604126]
[216.16909790 425.49951172]
[215.12274170 440.46295166]
[214.07640076 455.42642212]
[223.70158386 473.16470337]
[212.12034607 488.67437744]
[211.42247009 503.65811157]
[210.72459412 518.64190674]
[210.02670288 533.62561035]
[209.32882690 548.60937500]
[208.71813965 563.59698486]
[208.19464111 578.58782959]
[220.50471497 588.03460693]
[224.87879944 602.92242432]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 267]
[7 266]
[9 265]
[10 264]
[11 263]
[12 262]
[13 261]
[17 259]
[18 258]
[19 257]
[20 256]
[21 217]
[22 216]
[23 215]
[24 214]
[25 213]
[26 212]
[30 210]
[31 209]
[33 207]
[34 206]
[35 205]
[37 204]
[38 203]
[39 202]
[40 201]
[41 200]
[42 199]
[43 198]
[46 66]
[47 65]
[48 64]
[49 63]
[50 62]
[51 61]
[52 60]
[53 59]
[76 91]
[77 90]
[78 89]
[79 88]
[80 87]
[81 86]
[95 196]
[96 195]
[97 194]
[98 193]
[99 192]
[100 172]
[101 171]
[102 170]
[103 169]
[105 167]
[106 166]
[107 165]
[108 163]
[109 162]
[110 161]
[111 160]
[114 158]
[117 155]
[118 154]
[119 153]
[121 151]
[122 150]
[127 144]
[128 143]
[129 142]
[130 141]
[131 140]
[175 189]
[176 188]
[177 187]
[178 186]
[179 185]
[225 247]
[226 246]
[228 244]
[229 243]
[230 242]
[231 241]
[232 240]
[233 239]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
