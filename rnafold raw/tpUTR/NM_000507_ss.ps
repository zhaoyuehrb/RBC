%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 13:25:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACCUGCCCUGCCUGCAUCCGGAGAAUUGCCUCUACCUGGACCUUUUGUCUCACACAGCAGUACCCUGACCUGCUGUGCACCUUACAUUCCUAGAGAGCAGAAAUAAAAAGCAUGACUAUUUCCACCAUCAAAUGCUGUAGAAUGCUUGGCACUCCCUAACCAAAUGCUGUCUCCAUAAUGCCACUGGUGUUAAGAUAUAUUUUGAGUGGAUGGAGGAGAAAUAAACUUAUUCCUCCUUAA\
) } def
/len { sequence length } bind def

/coor [
[222.72036743 189.93733215]
[218.85058594 175.44509888]
[222.42893982 160.87817383]
[232.57308960 149.82844543]
[246.78169250 145.02058411]
[261.55007935 147.63957214]
[248.27865601 140.64892578]
[235.00723267 133.65826416]
[221.73580933 126.66761780]
[207.62936401 131.30915833]
[194.07066345 124.40869904]
[189.29783630 109.58109283]
[176.02641296 102.59043884]
[162.62191772 95.85845184]
[149.08941650 89.38766479]
[135.55690002 82.91687012]
[122.02439117 76.44608307]
[122.53463745 115.37998962]
[90.37412262 120.13634491]
[79.73329163 130.70860291]
[69.09246063 141.28086853]
[58.52019882 151.92170715]
[48.01693726 162.63064575]
[37.58312225 173.40725708]
[27.21918488 184.25109863]
[16.85524750 195.09494019]
[17.46330643 210.88752747]
[6.66506863 222.42761230]
[-9.13306427 222.86866760]
[-20.55834007 211.94902039]
[-20.83234596 196.14710999]
[-9.79251671 184.83792114]
[6.01141024 184.73100281]
[16.37534714 173.88716125]
[26.73928452 163.04331970]
[29.08360481 156.05134583]
[37.30799103 152.12738037]
[47.81125259 141.41844177]
[50.24576950 134.45735168]
[58.52019882 130.64004517]
[69.16102600 120.06777954]
[79.80185699 109.49551392]
[74.41248322 101.44300079]
[72.59389496 90.71098328]
[75.54331970 78.98258972]
[61.48138428 73.76127625]
[47.41945267 68.53997040]
[33.35752106 63.31866074]
[19.29558945 58.09735107]
[5.20020008 52.96704865]
[-8.92805767 47.92796707]
[-23.05631638 42.88888931]
[-37.18457413 37.84980774]
[-48.57405853 39.56404495]
[-56.34779739 32.91368103]
[-71.15235138 30.50014877]
[-85.95690918 28.08661842]
[-100.76146698 25.67308617]
[-115.56601715 23.25955582]
[-130.37057495 20.84602547]
[-145.17512512 18.43249321]
[-159.97969055 16.01896286]
[-170.22325134 27.55468750]
[-185.08352661 31.69906044]
[-199.81864929 27.12962914]
[-209.72669983 15.30448055]
[-211.64604187 -0.00302176]
[-204.96424866 -13.90831089]
[-191.81343079 -21.97425842]
[-176.38996887 -21.62705040]
[-163.61544800 -12.97747993]
[-157.56616211 1.21440709]
[-142.76159668 3.62793803]
[-127.95704651 6.04146910]
[-113.15248871 8.45499992]
[-98.34793091 10.86853123]
[-83.54338074 13.28206253]
[-68.73882294 15.69559288]
[-53.93426895 18.10912323]
[-65.38267517 8.41717434]
[-72.69831848 -4.67791605]
[-74.94930267 -19.50805664]
[-71.84888458 -34.18413925]
[-63.79201889 -46.83668518]
[-51.80500412 -55.85396957]
[-37.41477966 -60.08734894]
[-22.45442200 -58.99756241]
[-8.82961941 -52.72342682]
[1.72405767 -42.06416321]
[7.86225128 -28.37757874]
[8.80305958 -13.40711212]
[4.42664051 0.94025517]
[-4.70952511 12.83691311]
[-17.44164467 20.76743126]
[-32.14549255 23.72154999]
[-18.01723480 28.76062965]
[-3.88897753 33.79970932]
[10.23928070 38.83879089]
[17.57938385 38.12704849]
[24.51689911 44.03541946]
[38.57883072 49.25672913]
[52.64076233 54.47803879]
[66.70269775 59.69934845]
[80.76462555 64.92065430]
[87.08354187 60.88069153]
[73.76725006 53.97587967]
[73.08896637 38.99122238]
[85.72696686 30.91156960]
[99.04310608 37.81667328]
[99.72137451 52.80076599]
[106.04029083 48.76079941]
[107.20267487 33.80590820]
[108.36505890 18.85101318]
[109.52744293 3.89611888]
[110.68983459 -11.05877495]
[96.70085907 -16.81757164]
[85.17742920 -26.61888885]
[77.24849701 -39.50249481]
[73.69086456 -54.20618057]
[74.85305786 -69.28942871]
[80.62122345 -83.27454376]
[90.43025970 -94.79140472]
[103.31917572 -102.71170044]
[118.02524567 -106.25948334]
[133.10771179 -105.08718109]
[147.08895874 -99.30963898]
[158.59924316 -89.49288940]
[166.51089478 -76.59867096]
[170.04882812 -61.89023209]
[168.86642456 -46.80855179]
[163.07951355 -32.83118057]
[153.25505066 -21.32747841]
[140.35552979 -13.42446232]
[125.64472961 -9.89638901]
[124.48233795 5.05850506]
[123.31995392 20.01339912]
[122.15756989 34.96829224]
[120.99517822 49.92318726]
[128.49517822 62.91357040]
[142.02769470 69.38436127]
[155.56021118 75.85514832]
[169.09271240 82.32594299]
[174.25448608 81.92515564]
[178.62449646 83.38585663]
[181.62916565 86.09962463]
[183.01707458 89.31901550]
[196.28849792 96.30966949]
[211.21598816 91.85910034]
[224.57551575 99.13767242]
[228.72645569 113.39619446]
[241.99789429 120.38684082]
[255.26931763 127.37749481]
[268.54074097 134.36814880]
[287.90710449 113.51449585]
[308.54974365 126.77998352]
[323.54190063 127.26470947]
[338.53408813 127.74944305]
[353.52905273 128.13725281]
[368.52624512 128.42811584]
[375.30935669 118.69573212]
[385.83587646 113.49040222]
[397.44830322 113.99755859]
[407.27636719 119.97637939]
[412.94644165 129.84788513]
[427.93109131 130.52638245]
[442.91574097 131.20489502]
[457.90039062 131.88340759]
[472.88504028 132.56190491]
[481.57788086 129.82830811]
[488.05865479 133.34729004]
[503.03326416 134.21946716]
[518.00787354 135.09162903]
[532.98248291 135.96380615]
[547.95715332 136.83598328]
[552.58392334 134.51278687]
[557.18176270 134.21224976]
[560.98962402 135.58808899]
[563.49200439 138.04344177]
[578.42156982 139.49560547]
[593.35107422 140.94776917]
[608.28063965 142.39993286]
[623.21020508 143.85209656]
[638.13970947 145.30426025]
[653.06927490 146.75642395]
[669.41937256 142.27188110]
[678.25476074 156.74156189]
[666.79650879 169.23730469]
[651.61712646 161.68595886]
[636.68756104 160.23379517]
[621.75799561 158.78164673]
[606.82849121 157.32948303]
[591.89892578 155.87731934]
[576.96942139 154.42515564]
[562.03985596 152.97299194]
[547.08496094 151.81060791]
[532.11035156 150.93843079]
[517.13574219 150.06625366]
[502.16110229 149.19407654]
[487.18646240 148.32191467]
[472.20651245 147.54655457]
[457.22186279 146.86804199]
[442.23724365 146.18954468]
[427.25259399 145.51103210]
[412.26794434 144.83251953]
[399.49768066 157.97026062]
[380.86032104 157.57286072]
[368.23538208 143.42529297]
[353.23818970 143.13442993]
[346.50421143 146.14060974]
[338.04934692 142.74160767]
[323.05718994 142.25688171]
[308.06503296 141.77215576]
[302.54989624 151.80812073]
[290.67004395 157.52215576]
[297.05322266 171.09620667]
[303.43640137 184.67027283]
[309.81958008 198.24432373]
[316.20275879 211.81837463]
[322.58593750 225.39244080]
[328.96911621 238.96649170]
[341.84350586 248.16221619]
[340.25775146 262.97216797]
[346.64093018 276.54623413]
[361.18597412 283.31536865]
[364.82214355 298.94091797]
[354.76007080 311.43627930]
[338.71853638 311.21609497]
[329.00320435 298.44924927]
[333.06689453 282.92941284]
[326.68371582 269.35534668]
[314.26589966 261.13052368]
[315.39508057 245.34967041]
[309.01190186 231.77561951]
[302.62872314 218.20155334]
[296.24554443 204.62750244]
[289.86236572 191.05345154]
[283.47918701 177.47938538]
[277.09600830 163.90533447]
[279.04412842 178.77828979]
[273.59790039 192.75465393]
[262.10025024 202.38812256]
[247.38626099 205.30331421]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 153]
[7 152]
[8 151]
[9 150]
[12 147]
[13 146]
[14 142]
[15 141]
[16 140]
[17 139]
[19 42]
[20 41]
[21 40]
[22 38]
[23 37]
[24 35]
[25 34]
[26 33]
[45 104]
[46 103]
[47 102]
[48 101]
[49 100]
[50 98]
[51 97]
[52 96]
[53 95]
[55 79]
[56 78]
[57 77]
[58 76]
[59 75]
[60 74]
[61 73]
[62 72]
[111 138]
[112 137]
[113 136]
[114 135]
[115 134]
[155 212]
[156 211]
[157 210]
[158 208]
[159 207]
[164 204]
[165 203]
[166 202]
[167 201]
[168 200]
[170 199]
[171 198]
[172 197]
[173 196]
[174 195]
[178 194]
[179 193]
[180 192]
[181 191]
[182 190]
[183 189]
[184 188]
[214 238]
[215 237]
[216 236]
[217 235]
[218 234]
[219 233]
[220 232]
[222 230]
[223 229]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
