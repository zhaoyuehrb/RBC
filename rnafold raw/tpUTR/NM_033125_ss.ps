%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 02:36:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUGCCAUGCCUGCUGUCUAGCACCUGAAAUAUUAUUUACCCUAAUGCCUUUGUAUUAGAGGAAUCUUAUUCUCAUCUCCCAUAUGUUGUUUGUAUGUCUUUUUAAUAAAUUUUGUAAGAAAAUUUUAAAGCAAAUAUGUUAUAAAAGAAAUAAAAACUAAGAUGAAAAUUCUCAGUUUUAAA\
) } def
/len { sequence length } bind def

/coor [
[78.93571472 251.31579590]
[69.42658234 239.71508789]
[66.88069916 224.93318176]
[60.01416779 238.26925659]
[53.14762878 251.60531616]
[46.28109360 264.94137573]
[53.09873199 278.75537109]
[50.50531387 293.75961304]
[39.70191956 304.23580933]
[24.97753525 306.31680298]
[18.11099815 319.65286255]
[21.61469269 335.30865479]
[11.44715786 347.71835327]
[-4.59194374 347.36230469]
[-14.19878578 334.51364136]
[-10.00382233 319.02874756]
[4.77493143 312.78631592]
[11.64146709 299.45025635]
[4.78201914 286.25610352]
[7.03377724 271.37680054]
[17.74041367 260.54992676]
[32.94502640 258.07485962]
[39.81156158 244.73878479]
[46.67810059 231.40272522]
[53.54463577 218.06665039]
[59.25545883 204.19630432]
[63.76941681 189.89161682]
[68.28337860 175.58692932]
[72.79734039 161.28224182]
[66.63948822 158.15989685]
[60.83537674 154.42085266]
[55.44654846 150.10475159]
[50.53013992 145.25737000]
[46.13829041 139.93009949]
[42.31756592 134.17944336]
[39.10847855 128.06634521]
[36.54505539 121.65564728]
[34.65447998 115.01532745]
[33.45679855 108.21578979]
[32.96470642 101.32913208]
[33.18342972 94.42839050]
[18.46855164 91.51764679]
[3.72949195 88.73195648]
[-11.03269005 86.07150269]
[-25.79487228 83.41105652]
[-40.55705261 80.75060272]
[-55.31923676 78.09015656]
[-70.08141327 75.42971039]
[-84.84359741 72.76925659]
[-100.08326721 78.82602692]
[-112.77887726 68.44558716]
[-109.87026978 52.30644226]
[-94.34957123 47.01116180]
[-82.18315125 58.00707626]
[-67.42096710 60.66752625]
[-52.65878677 63.32797623]
[-37.89660263 65.98842621]
[-23.13442230 68.64887238]
[-8.37224007 71.30932617]
[6.38994122 73.96977234]
[13.54676723 72.05751801]
[21.37929153 76.80277252]
[36.09416962 79.71350861]
[41.11126328 67.94358826]
[48.27277374 57.34099197]
[57.31791687 48.29181290]
[67.91732025 41.12557220]
[79.68499756 36.10322571]
[92.19244385 33.40766525]
[104.98420715 33.13704681]
[117.59445953 35.30122375]
[129.56402588 39.82138824]
[140.45701599 46.53293991]
[149.87678528 55.19148254]
[162.08645630 46.47805786]
[174.29614258 37.76463318]
[186.50581360 29.05120850]
[198.71549988 20.33778381]
[210.92517090 11.62436008]
[209.27998352 4.45627260]
[209.46188354 -2.87392473]
[211.44862366 -9.90922070]
[215.10578918 -16.21369553]
[220.19578552 -21.39952850]
[226.39328003 -25.15084648]
[233.30603027 -27.24296379]
[240.49961853 -27.55580521]
[247.52481079 -26.08075142]
[253.94558716 -22.92049599]
[259.36621094 -18.28197670]
[272.64349365 -25.26149750]
[285.92077637 -32.24101639]
[299.19805908 -39.22053909]
[307.81314087 -52.49046707]
[322.67889404 -51.56379700]
[335.95617676 -58.54331589]
[349.23345947 -65.52283478]
[357.84854126 -78.79276276]
[372.71429443 -77.86609650]
[385.99157715 -84.84561920]
[399.26885986 -91.82513428]
[412.54614258 -98.80465698]
[425.82342529 -105.78417969]
[439.10070801 -112.76370239]
[452.31826782 -119.85570526]
[465.47509766 -127.05967712]
[478.63195801 -134.26364136]
[491.78881836 -141.46762085]
[504.94567871 -148.67160034]
[507.21697998 -161.96160889]
[516.59625244 -171.37434387]
[529.49444580 -173.62585449]
[541.15588379 -168.11375427]
[554.43316650 -175.09327698]
[567.71044922 -182.07279968]
[580.98773193 -189.05232239]
[594.26501465 -196.03184509]
[592.84460449 -211.16625977]
[597.32879639 -225.69075012]
[607.03375244 -237.39039612]
[620.47961426 -244.48110962]
[635.61590576 -245.88159180]
[650.13446045 -241.37829590]
[661.82135010 -231.65792847]
[668.89434814 -218.20278931]
[670.27490234 -203.06468201]
[665.75250244 -188.55204773]
[656.01678467 -176.87797546]
[642.55236816 -169.82266235]
[627.41247559 -168.46200562]
[612.90576172 -173.00347900]
[601.24450684 -182.75454712]
[587.96722412 -175.77503967]
[574.68994141 -168.79551697]
[561.41265869 -161.81599426]
[548.13537598 -154.83647156]
[543.84252930 -138.58644104]
[528.83508301 -130.29620361]
[512.14965820 -135.51473999]
[498.99279785 -128.31077576]
[485.83593750 -121.10679626]
[472.67907715 -113.90282440]
[459.52224731 -106.69885254]
[455.15527344 -100.71498108]
[446.08023071 -99.48641205]
[432.80294800 -92.50689697]
[419.52566528 -85.52737427]
[406.24838257 -78.54785156]
[392.97109985 -71.56832886]
[379.69381714 -64.58881378]
[372.02841187 -51.81810379]
[356.21298218 -52.24555206]
[342.93569946 -45.26603317]
[329.65841675 -38.28651047]
[321.99301147 -25.51580429]
[306.17758179 -25.94325447]
[292.90029907 -18.96373367]
[279.62301636 -11.98421192]
[266.34573364 -5.00469160]
[262.14736938 17.67631340]
[242.38557434 30.06908989]
[219.63859558 23.83403778]
[207.42892456 32.54746246]
[195.21923828 41.26088715]
[183.00956726 49.97431183]
[170.79988098 58.68773651]
[158.59020996 67.40116119]
[165.92710876 87.78878021]
[166.37893677 109.45168304]
[159.89851379 130.12748718]
[147.16261292 147.65695190]
[129.50129700 160.20938110]
[108.75904083 166.47387695]
[87.10202789 165.79618835]
[82.58806610 180.10089111]
[78.07411194 194.40557861]
[73.56015015 208.71026611]
[85.77634430 200.00598145]
[100.69686890 198.46389771]
[114.43505096 204.48573303]
[123.41221619 216.50282288]
[125.28988647 231.38484192]
[119.57894897 245.25514221]
[107.76705933 254.50062561]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 25]
[4 24]
[5 23]
[6 22]
[10 18]
[11 17]
[26 177]
[27 176]
[28 175]
[29 174]
[41 63]
[42 62]
[43 60]
[44 59]
[45 58]
[46 57]
[47 56]
[48 55]
[49 54]
[74 167]
[75 166]
[76 165]
[77 164]
[78 163]
[79 162]
[90 159]
[91 158]
[92 157]
[93 156]
[95 154]
[96 153]
[97 152]
[99 150]
[100 149]
[101 148]
[102 147]
[103 146]
[104 145]
[105 143]
[106 142]
[107 141]
[108 140]
[109 139]
[113 136]
[114 135]
[115 134]
[116 133]
[117 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
