%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 00:27:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUUCCUAGAUAAAUUAACAUUGCUGGGUGGAAAUAUUCAGAUGCUGCUUAAAUACUUCGGUAAACACUGGGUAAGAUUCAUGGAACUUAGAAAAAAGCUGUAUGAACUGCUUUACCAAAUAUCACUACUGAGGAAAUGUAUAAAAUACCACAUAGUAUAAAAUUACAUGUUAAUACAAUGCCAGAUUUUAAAUAAAGACCUUUAGUUUUCCUCA\
) } def
/len { sequence length } bind def

/coor [
[72.61176300 436.66079712]
[62.70481491 447.92367554]
[48.39340591 452.41629028]
[33.82693863 448.83609009]
[23.22876358 438.22106934]
[19.67160034 423.65136719]
[12.39207077 436.76657104]
[5.11254168 449.88177490]
[-2.16698766 462.99694824]
[-9.44651699 476.11215210]
[-10.87383080 485.12973022]
[-16.92755127 489.36343384]
[-24.39618492 502.37185669]
[-31.86481857 515.38031006]
[-26.31150055 529.99859619]
[-31.50266457 544.74938965]
[-44.98720551 552.66778564]
[-60.39812851 550.01501465]
[-70.45887756 538.04357910]
[-70.41906738 522.40600586]
[-60.29749298 510.48596191]
[-44.87326050 507.91168213]
[-37.40462494 494.90322876]
[-29.93599129 481.89480591]
[-22.56171608 468.83264160]
[-15.28218651 455.71743774]
[-8.00265789 442.60223389]
[-0.72312808 429.48703003]
[6.55640125 416.37182617]
[6.22006559 405.50640869]
[15.56542683 397.66439819]
[21.28059006 383.79583740]
[26.99575233 369.92727661]
[32.71091461 356.05871582]
[38.42607880 342.19015503]
[42.91652679 327.87808228]
[46.14839554 313.23037720]
[49.38026428 298.58267212]
[52.61213303 283.93499756]
[47.79875183 269.83956909]
[58.32768250 258.03057861]
[61.55955505 243.38288879]
[64.79141998 228.73519897]
[56.58443832 216.35856628]
[59.65335083 201.45768738]
[72.69074249 192.93334961]
[75.92261505 178.28565979]
[79.15448761 163.63796997]
[82.28024292 148.96725464]
[69.18592834 141.97946167]
[58.59478760 131.58148193]
[51.36717224 118.61801147]
[48.09022141 104.14210510]
[49.03013611 89.32971954]
[54.11055756 75.38413239]
[62.91878510 63.43819809]
[74.73928070 54.46234131]
[69.42801666 40.43413925]
[64.11676025 26.40593529]
[58.80549622 12.37773323]
[53.49423218 -1.65047026]
[48.18296814 -15.67867374]
[42.87170410 -29.70687675]
[37.56044388 -43.73508072]
[19.62667656 -44.80008316]
[4.01430559 -53.58106232]
[-6.14968491 -68.26602936]
[-8.85291004 -85.86592102]
[-3.59588242 -102.82297516]
[8.51647568 -115.72990417]
[2.60113835 -129.51426697]
[-3.31419945 -143.29864502]
[-17.71624756 -149.23318481]
[-23.51887703 -163.29675293]
[-17.77244377 -176.99034119]
[-23.68778229 -190.77470398]
[-29.60312080 -204.55906677]
[-46.27815247 -215.89149475]
[-43.15431976 -234.97627258]
[-49.46624374 -248.58360291]
[-55.77817154 -262.19094849]
[-62.09009552 -275.79827881]
[-68.40202332 -289.40560913]
[-74.71395111 -303.01293945]
[-87.53992462 -312.27603149]
[-85.87656403 -327.07748413]
[-98.70254517 -336.34057617]
[-97.03918457 -351.14199829]
[-103.35110474 -364.74932861]
[-109.66303253 -378.35665894]
[-124.58763885 -383.55587769]
[-131.38920593 -397.82171631]
[-126.03250122 -412.69052124]
[-111.69554901 -419.34088135]
[-96.88421631 -413.82727051]
[-90.38580322 -399.42080688]
[-96.05569458 -384.66860962]
[-89.74377441 -371.06124878]
[-83.43184662 -357.45391846]
[-71.05733490 -349.16412354]
[-72.26922607 -333.38940430]
[-59.89471817 -325.09960938]
[-61.10661316 -309.32489014]
[-54.79468536 -295.71752930]
[-48.48276138 -282.11019897]
[-42.17083359 -268.50286865]
[-35.85890961 -254.89553833]
[-29.54698372 -241.28819275]
[-19.67991257 -238.65348816]
[-12.74438381 -230.86048889]
[-11.20888901 -220.31994629]
[-15.81875324 -210.47441101]
[-9.90341473 -196.69004822]
[-3.98807716 -182.90567017]
[9.89603233 -177.63623047]
[16.09138870 -163.74118042]
[10.47016716 -149.21397400]
[16.38550568 -135.42961121]
[22.30084419 -121.64524841]
[34.50196838 -122.42868805]
[46.37920761 -119.42696381]
[56.78447723 -112.91475677]
[64.70723724 -103.50685883]
[69.37264252 -92.10009003]
[70.31729889 -79.78787231]
[67.43524933 -67.75537872]
[60.98960876 -57.16548538]
[51.58864594 -49.04634476]
[56.89990997 -35.01813889]
[62.21117020 -20.98993683]
[67.52243805 -6.96173334]
[72.83369446 7.06647015]
[78.14495850 21.09467316]
[83.45622253 35.12287521]
[88.76748657 49.15108109]
[112.68325043 49.49339294]
[133.92333984 60.49064255]
[148.00691223 79.82283020]
[162.52807617 76.06304169]
[177.04922485 72.30325317]
[191.57038879 68.54346466]
[206.09153748 64.78367615]
[210.34249878 48.80270386]
[222.00675964 37.21348572]
[237.83302307 33.11288834]
[253.47666931 37.52875519]
[264.69241333 49.16430664]
[279.15762329 45.19469070]
[293.62283325 41.22507858]
[308.08804321 37.25546265]
[315.68869019 23.39884949]
[330.88442993 19.05548668]
[344.65991211 26.80220985]
[348.84237671 42.04302979]
[340.95043945 55.73583603]
[325.66625977 59.75692749]
[312.05764771 51.72066879]
[297.59243774 55.69028091]
[283.12725830 59.65989685]
[268.66204834 63.62951279]
[266.08633423 77.03910828]
[257.94595337 88.08432770]
[245.78315735 94.57651520]
[231.94395447 95.19882965]
[219.12568665 89.77291107]
[209.85133362 79.30484009]
[195.33016968 83.06462097]
[180.80902100 86.82440948]
[166.28785706 90.58419800]
[151.76670837 94.34398651]
[152.04106140 101.87361908]
[151.22593689 109.36402130]
[149.33842468 116.65839386]
[146.41801453 123.60402679]
[142.52584839 130.05551147]
[137.74342346 135.87779236]
[132.17083740 140.94898987]
[125.92476654 145.16291809]
[119.13596344 148.43136597]
[111.94655609 150.68591309]
[104.50704956 151.87936401]
[96.97319031 151.98674011]
[98.31085968 161.01803589]
[93.80217743 166.86982727]
[90.57031250 181.51753235]
[87.33843994 196.16522217]
[95.57839203 209.38418579]
[92.09215546 224.19299316]
[79.43911743 231.96707153]
[76.20725250 246.61476135]
[72.97537994 261.26245117]
[77.55760193 276.40557861]
[67.25983429 287.16687012]
[64.02796173 301.81454468]
[60.79609299 316.46224976]
[57.56422424 331.10995483]
[68.18244934 320.51498413]
[82.31822205 315.49703979]
[97.24012756 317.02569580]
[110.06484222 324.80557251]
[118.31427765 337.33340454]
[120.39442444 352.18847656]
[115.90334320 366.50036621]
[105.70882416 377.50363159]
[91.78073120 383.07214355]
[76.81035614 382.12991333]
[63.69037628 374.85897827]
[54.95594025 362.66433716]
[52.29463959 347.90533447]
[46.57947540 361.77389526]
[40.86431122 375.64245605]
[35.14914703 389.51101685]
[29.43398476 403.37957764]
[43.04529953 397.07623291]
[57.95216370 398.74514771]
[69.83253479 407.90249634]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 29]
[7 28]
[8 27]
[9 26]
[10 25]
[12 24]
[13 23]
[14 22]
[31 213]
[32 212]
[33 211]
[34 210]
[35 209]
[36 196]
[37 195]
[38 194]
[39 193]
[41 191]
[42 190]
[43 189]
[46 186]
[47 185]
[48 184]
[49 182]
[57 135]
[58 134]
[59 133]
[60 132]
[61 131]
[62 130]
[63 129]
[64 128]
[70 119]
[71 118]
[72 117]
[75 114]
[76 113]
[77 112]
[79 108]
[80 107]
[81 106]
[82 105]
[83 104]
[84 103]
[86 101]
[88 99]
[89 98]
[90 97]
[138 170]
[139 169]
[140 168]
[141 167]
[142 166]
[147 160]
[148 159]
[149 158]
[150 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
