%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 10:18:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCCUUCCCUGACAACCUAACAUGAGGGGACAUAAGAAGAUCACCCAAACCUGACUGCAAUAACAAACAAACGAGGUCACCCUGGAUCAAGCCAAGAUCAAGAGCAGUUAGCAUCUAAGAGGUUUAAGAAUACCUAUCAUUCCAUAAUUCUUUGCUUUAUGUCUCUGGAUGUGUCUUACUUGUACCUUUAUAACUGUGGGGUUUCUCUGUUCCU\
) } def
/len { sequence length } bind def

/coor [
[30.61993027 346.95623779]
[24.39251328 352.96551514]
[17.06703949 357.55429077]
[8.96135712 360.52832031]
[0.42617342 361.76333618]
[-8.17013264 361.21014404]
[-16.45739937 358.89675903]
[-24.33204842 371.66351318]
[-32.20669556 384.43026733]
[-40.08134460 397.19702148]
[-47.95599365 409.96377563]
[-45.74624252 422.66873169]
[-52.56484604 433.13919067]
[-64.30068970 436.06140137]
[-72.36018372 448.71228027]
[-66.54808044 463.09973145]
[-70.33538055 478.14752197]
[-82.26579285 488.06945801]
[-97.75183868 489.05035400]
[-110.83880615 480.71304321]
[-116.49449158 466.26336670]
[-112.54417419 451.25753784]
[-100.50682831 441.46560669]
[-85.01106262 440.65277100]
[-76.95156097 428.00189209]
[-77.13018036 410.45223999]
[-60.72274399 402.08911133]
[-52.84809494 389.32235718]
[-44.97344589 376.55563354]
[-37.09879684 363.78887939]
[-29.22414970 351.02212524]
[-41.08036041 332.81008911]
[-42.10813141 311.03253174]
[-31.95430183 291.65988159]
[-13.34101391 280.03936768]
[8.66367626 279.41915894]
[14.80456066 265.73376465]
[20.94544601 252.04838562]
[20.81592941 244.66171265]
[27.27644920 238.20964050]
[33.61572266 224.61502075]
[26.24508667 211.69946289]
[27.91271400 196.74343872]
[38.18735886 185.50576782]
[53.28344345 182.43746948]
[59.62271500 168.84284973]
[65.96199036 155.24822998]
[72.30126190 141.65362549]
[57.93949127 127.07688141]
[50.61639786 107.96891785]
[51.55747986 87.52738190]
[60.60525131 69.17310333]
[50.31162643 58.26249695]
[40.01800156 47.35189056]
[29.72437859 36.44128799]
[19.43075371 25.53068352]
[9.13712883 14.62007809]
[-1.15649545 3.70947361]
[-11.45011997 -7.20113087]
[-18.75117683 -3.10737300]
[-26.64020920 -0.32839260]
[-34.88276672 1.05549824]
[-43.23428726 1.00541377]
[-51.44734192 -0.47501621]
[-59.27897263 -3.33981752]
[-66.49787903 -7.50209618]
[-72.89125824 -12.83667278]
[-78.27105713 -19.18384743]
[-82.47951508 -26.35417557]
[-85.39379883 -34.13412857]
[-86.92957306 -42.29244995]
[-87.04344177 -50.58702850]
[-85.73418427 -58.77207947]
[-83.04270172 -66.60543060]
[-79.05077362 -73.85570526]
[-90.10993195 -83.98955536]
[-101.16909027 -94.12341309]
[-117.28791046 -97.14264679]
[-122.47661591 -112.69929504]
[-111.39751434 -124.79001617]
[-95.44783020 -120.97690582]
[-91.03524017 -105.18257141]
[-79.97608185 -95.04871368]
[-68.91692352 -84.91486359]
[-67.40180206 -86.07270050]
[-65.84194946 -87.16952515]
[-72.18122864 -100.76413727]
[-78.52050018 -114.35875702]
[-84.85977173 -127.95337677]
[-100.01033783 -131.82563782]
[-109.08524323 -144.56063843]
[-107.79960632 -160.14527893]
[-96.76045990 -171.22097778]
[-81.18014526 -172.55813599]
[-68.41522217 -163.52537537]
[-64.49288940 -148.38769531]
[-71.26515961 -134.29264832]
[-64.92588043 -120.69802856]
[-58.58660889 -107.10341644]
[-52.24733734 -93.50879669]
[-28.35339546 -94.30607605]
[-6.97271013 -83.48070526]
[6.59291887 -63.65473175]
[8.94964314 -39.68973923]
[-0.53951544 -17.49475479]
[9.75410938 -6.58415079]
[20.04773331 4.32645369]
[30.34135818 15.23705864]
[40.63498306 26.14766312]
[50.92860794 37.05826950]
[61.22223282 47.96887207]
[71.51585388 58.87947845]
[82.96343231 52.96810150]
[95.54116821 50.17668533]
[108.41468811 50.69039917]
[120.73000336 54.47516251]
[131.67015076 61.27990723]
[140.50939941 70.65322876]
[146.66136169 81.97332764]
[161.30580139 78.72673035]
[175.95024109 75.48014069]
[190.59468079 72.23354340]
[205.23912048 68.98695374]
[219.88356018 65.74035645]
[231.68196106 55.19955826]
[245.78219604 59.99876785]
[260.42663574 56.75217438]
[275.07107544 53.50557709]
[289.71551514 50.25898361]
[304.33596802 46.90597916]
[318.93164062 43.44674301]
[330.57546997 32.73546219]
[344.74401855 37.32909393]
[359.33969116 33.86985397]
[370.98355103 23.15857506]
[385.15209961 27.75220490]
[399.74777222 24.29296684]
[414.34344482 20.83372879]
[428.93911743 17.37449074]
[433.58566284 0.42293650]
[446.11544800 -11.77647686]
[463.01205444 -15.92598629]
[479.59683228 -10.96954536]
[491.32446289 1.64025271]
[505.81335449 -2.24203300]
[520.30224609 -6.12431860]
[534.79113770 -10.00660419]
[549.28002930 -13.88889027]
[553.87939453 -28.61469460]
[565.72467041 -38.49868393]
[581.03601074 -40.38691711]
[594.92767334 -33.67686462]
[602.96691895 -20.50967598]
[602.58831787 -5.08695841]
[593.91284180 7.66995764]
[579.70867920 13.69038677]
[564.50836182 11.05323124]
[553.16229248 0.59999740]
[538.67340088 4.48228312]
[524.18450928 8.36456871]
[509.69564819 12.24685478]
[495.20675659 16.12914085]
[493.27026367 28.60970497]
[486.73437500 39.47151947]
[476.53933716 47.08361435]
[464.17773438 50.28744125]
[451.47616577 48.57310867]
[440.32528687 42.16015625]
[432.39834595 31.97016335]
[417.80267334 35.42940140]
[403.20700073 38.88863754]
[388.61132812 42.34787750]
[378.01147461 52.81172943]
[362.79895020 48.46552658]
[348.20327759 51.92476654]
[337.60342407 62.38861465]
[322.39086914 58.04241562]
[307.79519653 61.50165176]
[302.01379395 66.10113525]
[292.96212769 64.90342712]
[278.31768799 68.15001678]
[263.67324829 71.39661407]
[249.02879333 74.64320374]
[238.27787781 84.95178986]
[223.13015747 80.38479614]
[208.48571777 83.63139343]
[193.84127808 86.87798309]
[179.19683838 90.12458038]
[164.55239868 93.37117767]
[149.90795898 96.61776733]
[149.27685547 108.60441589]
[145.80839539 120.09562683]
[139.70233154 130.42973328]
[131.31021118 139.01171875]
[121.11527252 145.34742737]
[109.70452118 149.07205200]
[97.73499298 149.97113037]
[85.89588165 147.99288940]
[79.55661011 161.58750916]
[73.21733093 175.18212891]
[66.87805939 188.77674866]
[74.23117828 202.31327820]
[72.22704315 217.40754700]
[61.84198761 228.29856873]
[47.21034241 230.95429993]
[40.87106705 244.54891968]
[34.63082123 258.18927002]
[28.48993683 271.87466431]
[22.34905243 285.56002808]
[28.97052002 291.25540161]
[34.26737595 298.18722534]
[38.01465225 306.05429077]
[40.05459595 314.51580811]
[40.30331039 323.20620728]
[38.75419998 331.75091553]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 31]
[8 30]
[9 29]
[10 28]
[11 27]
[14 25]
[15 24]
[36 209]
[37 208]
[38 207]
[40 206]
[41 205]
[45 201]
[46 200]
[47 199]
[48 198]
[52 112]
[53 111]
[54 110]
[55 109]
[56 108]
[57 107]
[58 106]
[59 105]
[75 84]
[76 83]
[77 82]
[86 100]
[87 99]
[88 98]
[89 97]
[119 190]
[120 189]
[121 188]
[122 187]
[123 186]
[124 185]
[126 183]
[127 182]
[128 181]
[129 180]
[130 178]
[131 177]
[133 175]
[134 174]
[136 172]
[137 171]
[138 170]
[139 169]
[144 162]
[145 161]
[146 160]
[147 159]
[148 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
