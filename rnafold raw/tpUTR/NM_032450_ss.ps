%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 06:53:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUCCGGCCAGCACCCCCAGCGAGGAGUAUGCACCCAGACCUGUGCCUGAGCUCCAAGACAGGGCCUCCUGAGGACCACAGCCUGGGCACACGACUGGAGGGGCCUGGCCCCAGAACAGGCACUGCUGGGGACCAAACCCAAGCCCUUCAGUGAGGGAUGUGCCCAAUAAACUCAUCUGCUCCCAGCGAGUGACUGACA\
) } def
/len { sequence length } bind def

/coor [
[245.58430481 71.04004669]
[231.02233887 74.63853455]
[216.46037292 78.23703003]
[201.89840698 81.83551788]
[194.44436646 94.67968750]
[179.72772217 98.53650665]
[166.30610657 90.63092804]
[151.74414062 94.22941589]
[137.21073914 97.94159698]
[122.70679474 101.76724243]
[122.68141174 129.30482483]
[91.02231598 150.54740906]
[83.42102814 163.47877502]
[88.82453918 178.15310669]
[83.48278046 192.85003662]
[69.91796112 200.63011169]
[54.53497314 197.81983948]
[44.59719467 185.74612427]
[44.79693985 170.10981750]
[55.03989410 158.29389954]
[70.48965454 155.87748718]
[78.09094238 142.94612122]
[73.42131805 137.07716370]
[64.08206940 125.33925629]
[59.41244125 119.47029877]
[45.10375595 123.97157288]
[30.79506493 128.47283936]
[16.48637581 132.97410583]
[2.17768812 137.47537231]
[-5.92630529 154.59265137]
[-23.66186333 160.26161194]
[-39.63439560 151.32963562]
[-53.79540634 156.27590942]
[-67.95642090 161.22219849]
[-82.11743164 166.16847229]
[-86.45930481 181.06571960]
[-98.74891663 190.53910828]
[-114.26065826 190.94593811]
[-127.02995300 182.12976074]
[-132.14674377 167.48059082]
[-127.64351654 152.63133240]
[-115.25186157 143.29182434]
[-99.73661804 143.05328369]
[-87.06371307 152.00746155]
[-72.90270233 147.06117249]
[-58.74169159 142.11489868]
[-44.58067703 137.16860962]
[-41.96648788 126.05341339]
[-34.22849655 117.49431610]
[-23.20558929 113.69801331]
[-11.60190964 115.71828461]
[-2.32358146 123.16669464]
[11.98510742 118.66542053]
[26.29379654 114.16415405]
[40.60248566 109.66287994]
[54.91117477 105.16161346]
[55.67181778 97.70028687]
[40.74918365 96.17876434]
[42.27093124 81.25615692]
[57.19310379 82.77762604]
[57.95374680 75.31629944]
[44.84773254 68.02024078]
[31.74172020 60.72418976]
[18.63570786 53.42813492]
[2.25594735 54.22531891]
[-6.39563084 40.29397964]
[1.58097458 25.96548271]
[17.98011589 25.97975922]
[25.93176270 40.32212067]
[39.03777695 47.61817551]
[52.14378738 54.91423035]
[65.24980164 62.21028519]
[104.32244873 63.19598770]
[118.88114929 87.26329041]
[133.38510132 83.43765259]
[140.89210510 78.21901703]
[148.14564514 79.66744995]
[162.70761108 76.06896210]
[170.90203857 62.82172775]
[185.72120667 59.37978745]
[198.29991150 67.27355194]
[212.86189270 63.67506027]
[227.42385864 60.07656860]
[241.98582458 56.47808075]
[271.75100708 39.13889313]
[282.48123169 28.65735054]
[293.21142578 18.17580986]
[303.94165039 7.69426775]
[314.67184448 -2.78727365]
[325.40203857 -13.26881504]
[336.13226318 -23.75035667]
[346.86245728 -34.23189926]
[345.73202515 -55.22167969]
[360.24188232 -70.02237701]
[380.66333008 -69.32848358]
[390.71768188 -80.45995331]
[400.77206421 -91.59143066]
[410.82644653 -102.72290039]
[420.88079834 -113.85437012]
[430.93518066 -124.98583984]
[440.98953247 -136.11730957]
[451.04391479 -147.24877930]
[461.09829712 -158.38024902]
[455.56826782 -178.34843445]
[463.16744995 -197.47477722]
[480.65560913 -208.05889893]
[500.84814453 -205.94892883]
[510.00280762 -217.83137512]
[519.15747070 -229.71380615]
[528.21899414 -241.66741943]
[537.18676758 -253.69149780]
[546.15460205 -265.71554565]
[555.12243652 -277.73962402]
[564.09027100 -289.76370239]
[573.05810547 -301.78775024]
[574.21148682 -308.31109619]
[577.93151855 -312.62084961]
[582.49890137 -314.04162598]
[591.83813477 -325.77951050]
[601.17736816 -337.51742554]
[606.30767822 -353.67651367]
[623.25549316 -353.22003174]
[627.50842285 -336.80816650]
[612.91528320 -328.17819214]
[603.57604980 -316.44027710]
[594.23681641 -304.70236206]
[585.08215332 -292.81991577]
[576.11431885 -280.79586792]
[567.14648438 -268.77178955]
[558.17871094 -256.74774170]
[549.21087646 -244.72366333]
[540.24304199 -232.69960022]
[538.76287842 -225.45245361]
[531.03991699 -220.55915833]
[521.88525391 -208.67671204]
[512.73059082 -196.79428101]
[517.65039062 -188.45716858]
[519.84130859 -178.99752808]
[519.08300781 -169.28753662]
[515.42810059 -160.22790527]
[509.19854736 -152.66442871]
[500.95770264 -147.30894470]
[491.45913696 -144.67237854]
[481.57788086 -145.01605225]
[472.22976685 -148.32588196]
[462.17538452 -137.19441223]
[452.12100220 -126.06294250]
[442.06665039 -114.93147278]
[432.01226807 -103.80000305]
[421.95791626 -92.66852570]
[411.90353394 -81.53705597]
[401.84915161 -70.40558624]
[391.79479980 -59.27411652]
[395.12768555 -50.51404190]
[395.03598022 -41.08388138]
[391.49014282 -32.28278732]
[384.93927002 -25.33863449]
[376.25485229 -21.23675919]
[366.61486816 -20.58025932]
[357.34399414 -23.50169373]
[346.61380005 -13.02015209]
[335.88357544 -2.53861046]
[325.15338135 7.94293070]
[314.42318726 18.42447281]
[303.69296265 28.90601349]
[292.96276855 39.38755417]
[282.23257446 49.86909485]
[295.38681030 42.66036606]
[309.97921753 46.13338470]
[318.47567749 58.49502182]
[316.48947144 73.36293793]
[305.04605103 83.06079865]
[290.05371094 82.58157349]
[279.25213623 72.17082214]
[286.85342407 85.10219574]
[294.45471191 98.03356934]
[302.05599976 110.96494293]
[315.71954346 118.94106293]
[315.49887085 133.83403015]
[323.10015869 146.76539612]
[330.70144653 159.69677734]
[338.30273438 172.62814331]
[351.54174805 183.21893311]
[345.02978516 198.87239075]
[328.18536377 196.94821167]
[325.37136841 180.22943115]
[317.77008057 167.29806519]
[310.16879272 154.36669922]
[302.56750488 141.43531799]
[289.44766235 134.38414001]
[289.12463379 118.56623077]
[281.52334595 105.63485718]
[273.92205811 92.70348358]
[266.32077026 79.77211761]
[271.27066040 93.93186951]
[266.51721191 108.15877533]
[254.04969788 116.49909973]
[239.08555603 115.46255493]
[227.88703918 105.48291779]
[225.14054871 90.73650360]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 84]
[2 83]
[3 82]
[4 81]
[7 78]
[8 77]
[9 75]
[10 74]
[12 22]
[13 21]
[25 56]
[26 55]
[27 54]
[28 53]
[29 52]
[32 47]
[33 46]
[34 45]
[35 44]
[61 72]
[62 71]
[63 70]
[64 69]
[85 167]
[86 166]
[87 165]
[88 164]
[89 163]
[90 162]
[91 161]
[92 160]
[95 153]
[96 152]
[97 151]
[98 150]
[99 149]
[100 148]
[101 147]
[102 146]
[103 145]
[107 136]
[108 135]
[109 134]
[110 132]
[111 131]
[112 130]
[113 129]
[114 128]
[115 127]
[118 126]
[119 125]
[120 124]
[174 194]
[175 193]
[176 192]
[177 191]
[179 189]
[180 188]
[181 187]
[182 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
