%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 03:13:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACCUCGACAGGGGUCACCCCCUCCCUCCCACCCCUGGACUGGGCUGGGGGUGGCCCCGUGGGGGUAGCUCACUCCCCCUCCUGCUGCUAUGCCUGUGACCCCCGCGGCCCACACACUGGACUGACCUGCCCUGAGCGGGGAUGCAGUGUUGCACUGAUGACUUGACCAGCCCCUCCCCCAAUAAACUCGCCUCUUGGAAAUGG\
) } def
/len { sequence length } bind def

/coor [
[66.27510834 213.23103333]
[51.44326782 215.47077942]
[37.52030945 209.88945007]
[28.34248734 198.02490234]
[26.43860626 183.14622498]
[32.33325195 169.35299683]
[44.40242386 160.44566345]
[52.65765762 147.92164612]
[60.91288757 135.39761353]
[69.16812134 122.87359619]
[77.42335510 110.34957123]
[70.46188354 107.55888367]
[57.21289825 114.59197998]
[43.96391678 121.62507629]
[30.71493149 128.65817261]
[17.46594620 135.69126892]
[4.21696281 142.72436523]
[-9.03202057 149.75746155]
[-22.28100395 156.79054260]
[-35.52998734 163.82363892]
[-48.77897263 170.85673523]
[-62.02795792 177.88983154]
[-75.27693939 184.92292786]
[-84.67828369 200.75419617]
[-102.17710876 199.45072937]
[-115.31729889 206.68505859]
[-128.45748901 213.91937256]
[-133.01770020 230.80599976]
[-148.08238220 239.01008606]
[-164.09841919 233.88510132]
[-177.12675476 241.31896973]
[-190.15509033 248.75283813]
[-197.95504761 263.17825317]
[-214.35311890 263.36547852]
[-222.48039246 249.12190247]
[-213.97622681 235.10009766]
[-197.58895874 235.72450256]
[-184.56062317 228.29063416]
[-171.53228760 220.85676575]
[-169.90570068 208.07229614]
[-161.08006287 198.41564941]
[-148.11302185 195.56460571]
[-135.69181824 200.77919006]
[-122.55162048 193.54486084]
[-109.41143036 186.31054688]
[-105.74224091 174.78129578]
[-94.85077667 168.64753723]
[-82.31003571 171.67395020]
[-69.06105042 164.64085388]
[-55.81206894 157.60775757]
[-42.56308365 150.57466125]
[-29.31410027 143.54156494]
[-16.06511497 136.50846863]
[-2.81613183 129.47537231]
[10.43285179 122.44228363]
[23.68183517 115.40918732]
[36.93082047 108.37609100]
[50.17980576 101.34299469]
[63.42878723 94.30989838]
[84.23744965 78.34210968]
[102.60863495 83.64473724]
[110.63057709 70.97002411]
[118.65251923 58.29530716]
[126.67446136 45.62059402]
[134.69641113 32.94587708]
[142.71835327 20.27116203]
[137.85917664 1.96306586]
[147.75202942 -13.81458378]
[165.72160339 -17.29393196]
[173.35328674 -30.20738983]
[180.98497009 -43.12084961]
[163.40380859 -53.59537888]
[157.57098389 -72.06030273]
[165.05230713 -88.72174835]
[180.72354126 -95.72325134]
[183.45332336 -110.47277069]
[186.18310547 -125.22228241]
[188.91288757 -139.97180176]
[191.64266968 -154.72132874]
[194.25991821 -169.49122620]
[196.76445007 -184.28065491]
[199.26898193 -199.07008362]
[188.87905884 -213.14143372]
[191.82070923 -230.04110718]
[205.79306030 -239.39802551]
[208.07177734 -254.22393799]
[192.27014160 -262.02694702]
[180.17527771 -275.15310669]
[173.52210999 -291.95855713]
[173.35008240 -310.25784302]
[179.84410095 -327.60809326]
[192.28846741 -341.63491821]
[209.14216614 -350.35733032]
[208.45613098 -365.34161377]
[207.77009583 -380.32592773]
[204.25030518 -388.75933838]
[207.18962097 -395.54360962]
[206.73217773 -410.53662109]
[206.27474976 -425.52966309]
[195.62219238 -437.52560425]
[198.50109863 -453.30822754]
[212.70301819 -460.77047729]
[227.33345032 -454.18792725]
[231.16918945 -438.61016846]
[221.26776123 -425.98709106]
[221.72520447 -410.99407959]
[222.18264771 -396.00106812]
[222.75440979 -381.01196289]
[223.44042969 -366.02764893]
[224.12646484 -351.04333496]
[238.89636230 -348.42611694]
[244.68942261 -362.26232910]
[250.48246765 -376.09851074]
[245.75459290 -391.42910767]
[254.91142273 -404.60226440]
[270.92861938 -405.51266479]
[281.51916504 -393.46194458]
[278.55889893 -377.69436646]
[264.31866455 -370.30548096]
[258.52563477 -356.46926880]
[252.73257446 -342.63305664]
[263.01843262 -332.34112549]
[269.98461914 -319.71960449]
[273.15066528 -305.79302979]
[272.34112549 -291.66864014]
[267.69369507 -278.44854736]
[259.64260864 -267.14361572]
[248.87911987 -258.59625244]
[236.29267883 -253.41783142]
[222.89767456 -251.94522095]
[220.61897278 -237.11932373]
[229.62022400 -227.89619446]
[231.69554138 -214.97970581]
[225.86573792 -203.05134583]
[214.05842590 -196.56555176]
[211.55387878 -181.77612305]
[209.04934692 -166.98669434]
[211.03277588 -159.86405945]
[206.39219666 -151.99153137]
[203.66241455 -137.24201965]
[200.93261719 -122.49250031]
[198.20283508 -107.74298096]
[195.47305298 -92.99346924]
[205.22863770 -86.74163818]
[211.41662598 -75.82971954]
[211.85902405 -62.33317566]
[226.81542969 -63.47585297]
[241.77185059 -64.61853027]
[256.72827148 -65.76119995]
[271.68466187 -66.90387726]
[287.01718140 -74.13925171]
[298.21426392 -61.40888977]
[289.08105469 -47.12529373]
[272.82736206 -51.94746399]
[257.87094116 -50.80479050]
[242.91452026 -49.66211319]
[227.95811462 -48.51943970]
[213.00169373 -47.37676239]
[227.99560547 -46.94918442]
[241.20710754 -39.84592819]
[249.83291626 -27.57420158]
[252.04278564 -12.73787880]
[247.36779785 1.51499844]
[236.79992676 12.16018391]
[222.58149719 16.93893051]
[207.72946167 14.83725929]
[195.39518738 6.30111456]
[188.19583130 -6.85826302]
[187.65898132 -21.84865379]
[193.89842224 -35.48916626]
[186.26673889 -22.57570648]
[178.63505554 -9.66224861]
[183.80470276 0.51351476]
[183.41441345 12.04044819]
[177.44555664 22.04920578]
[167.28248596 27.99251747]
[155.39306641 28.29310608]
[147.37112427 40.96782303]
[139.34918213 53.64253616]
[131.32723999 66.31725311]
[123.30529022 78.99196625]
[115.28334808 91.66668701]
[126.15086365 81.32757568]
[140.80453491 78.12294006]
[154.99574280 82.98191833]
[164.60992432 94.49571991]
[166.85957336 109.32605743]
[161.09243774 123.17308807]
[148.98062134 132.02203369]
[134.03578186 133.30726624]
[120.59098816 126.65615845]
[112.54507446 113.99943542]
[117.26726532 128.23674011]
[129.87384033 138.72512817]
[126.82763672 154.83886719]
[111.26232147 160.00152588]
[99.19016266 148.90220642]
[103.02996063 132.95893860]
[98.30776215 118.72162628]
[91.34629822 115.93094635]
[88.66468048 130.68930054]
[85.98306274 145.44764709]
[83.30145264 160.20599365]
[80.61983490 174.96435547]
[83.19430542 189.74177551]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 59]
[13 58]
[14 57]
[15 56]
[16 55]
[17 54]
[18 53]
[19 52]
[20 51]
[21 50]
[22 49]
[23 48]
[25 45]
[26 44]
[27 43]
[30 39]
[31 38]
[32 37]
[61 182]
[62 181]
[63 180]
[64 179]
[65 178]
[66 177]
[69 172]
[70 171]
[71 170]
[75 143]
[76 142]
[77 141]
[78 140]
[79 139]
[80 137]
[81 136]
[82 135]
[85 131]
[86 130]
[93 110]
[94 109]
[95 108]
[97 107]
[98 106]
[99 105]
[111 121]
[112 120]
[113 119]
[146 158]
[147 157]
[148 156]
[149 155]
[150 154]
[192 199]
[193 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
