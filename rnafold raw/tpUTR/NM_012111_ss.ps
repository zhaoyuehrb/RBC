%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 01:58:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCAGCGGCAGGGGACUCCAGCCUGCUGGACACUUCAGUCCAGCUCUCUCCUGACUGGGGCUUGCGACUCACAGGAUUGCAUCGUCCCAGCUGCUAACUUGGGGCCGGGGCCCCUCCCUUCCACAUAUACCUUGGGUUUGUGCAUGUUUUCUGCUGGGUGGGUUCAGAGGGCAAUUUCUCUUUUAUGUGUACAUAUGCUAAAUAAACAUAAUUUAAAAAACA\
) } def
/len { sequence length } bind def

/coor [
[432.36160278 235.79690552]
[417.61480713 233.70382690]
[411.85562134 218.96807861]
[400.26046753 209.45217896]
[388.66531372 199.93627930]
[377.07015991 190.42037964]
[365.47500610 180.90447998]
[335.67230225 161.16915894]
[321.00302124 158.03675842]
[306.94058228 162.94569397]
[295.06042480 152.49714661]
[280.39111328 149.36474609]
[265.72183228 146.23236084]
[251.05255127 143.09996033]
[236.38325500 139.96757507]
[229.19233704 141.64314270]
[221.53086853 136.68701172]
[206.90695190 133.34919739]
[192.28303528 130.01138306]
[177.65910339 126.67357635]
[163.52922058 131.38479614]
[151.79676819 120.77066040]
[137.17285156 117.43284607]
[122.54892731 114.09503174]
[107.92501068 110.75721741]
[93.15492249 113.37345123]
[80.56723785 121.53127289]
[67.97954559 129.68908691]
[55.39185333 137.84690857]
[42.80416107 146.00473022]
[30.21646881 154.16255188]
[17.62877655 162.32037354]
[14.57394981 177.82661438]
[1.40293097 186.56158447]
[-14.07014847 183.34298706]
[-22.66538429 170.08035278]
[-19.28337479 154.64216614]
[-5.93060875 146.18763733]
[9.47095680 149.73268127]
[22.05864906 141.57485962]
[34.64633942 133.41703796]
[47.23403168 125.25921631]
[59.82172394 117.10140228]
[72.40941620 108.94358063]
[84.99710846 100.78575897]
[79.64778137 86.77202606]
[64.82593536 89.07697296]
[55.70410538 101.98308563]
[40.11406708 104.57659912]
[27.30511665 95.31883240]
[24.87657738 79.70224762]
[34.26925659 66.99188995]
[49.91064453 64.72859192]
[62.52098465 74.25512695]
[77.34283447 71.95018005]
[79.85542297 57.16211319]
[66.62660980 50.09115982]
[53.39778900 43.02021027]
[40.16896820 35.94925690]
[26.94014931 28.87830734]
[13.71133137 21.80735588]
[0.48251230 14.73640537]
[-17.90742874 15.76204491]
[-26.57870293 0.50043762]
[-39.90538788 -6.38429022]
[-53.23207092 -13.26901817]
[-66.55875397 -20.15374565]
[-79.88543701 -27.03847504]
[-88.93665314 -28.19477463]
[-93.34973907 -34.11434937]
[-106.57855988 -41.18530273]
[-122.94229889 -40.10823441]
[-131.83076477 -53.88964462]
[-124.10025787 -68.35240173]
[-107.70326996 -68.61846161]
[-99.50760651 -54.41411972]
[-86.27879333 -47.34317017]
[-73.00070953 -40.36515808]
[-59.67402649 -33.48043060]
[-46.34734344 -26.59570312]
[-33.02066040 -19.71097565]
[-19.69397354 -12.82624722]
[-8.08347702 -16.19963837]
[3.07268834 -10.58068275]
[7.55346346 1.50758600]
[20.78228188 8.57853699]
[34.01110077 15.64948845]
[47.23992157 22.72043991]
[60.46873856 29.79138947]
[73.69755554 36.86234283]
[86.92637634 43.93329239]
[95.19338226 31.41703606]
[107.56214905 22.93095398]
[122.21492004 19.72219086]
[136.99827576 22.26232147]
[149.73960876 30.17803383]
[158.56640625 42.30601120]
[162.18142700 56.86388016]
[160.05342102 71.71216583]
[152.49511719 84.66870880]
[140.61730957 93.82937622]
[126.16561890 97.84787750]
[111.26282501 96.13330078]
[125.88674164 99.47111511]
[140.51066589 102.80892944]
[155.13458252 106.14674377]
[170.31047058 101.67426300]
[180.99691772 112.04965210]
[195.62084961 115.38746643]
[210.24476624 118.72528076]
[224.86868286 122.06309509]
[239.51564026 125.29827881]
[254.18493652 128.43066406]
[268.85421753 131.56306458]
[283.52352905 134.69544983]
[298.19281006 137.82785034]
[313.30447388 133.14297485]
[324.13540649 143.36747742]
[338.80468750 146.49986267]
[327.27023315 136.91047668]
[326.57040405 121.92681122]
[337.16082764 111.30405426]
[352.14654541 111.95819855]
[361.77105713 123.46335602]
[359.76849365 138.32867432]
[368.44857788 126.09526062]
[377.12866211 113.86184692]
[385.80871582 101.62843323]
[387.48425293 85.89620209]
[401.15939331 79.99369049]
[409.83944702 67.76027679]
[418.51953125 55.52686310]
[422.75402832 39.11024475]
[439.70129395 38.63467789]
[444.84976196 54.78799820]
[430.75292969 64.20693207]
[422.07287598 76.44034576]
[413.39279175 88.67375946]
[412.33813477 103.53097534]
[398.04214478 110.30850220]
[389.36206055 122.54191589]
[380.68197632 134.77532959]
[372.00192261 147.00874329]
[385.48440552 140.43435669]
[395.96676636 129.70495605]
[410.54254150 126.16280365]
[424.77987671 130.88490295]
[434.34982300 142.43550110]
[436.34259033 157.30253601]
[430.15228271 170.96562195]
[417.66107178 179.27040100]
[402.66699219 179.69178772]
[389.72875977 172.10130310]
[374.99090576 169.30932617]
[386.58605957 178.82522583]
[398.18121338 188.34112549]
[409.77636719 197.85702515]
[421.37152100 207.37292480]
[436.94769287 210.14665222]
[441.87750244 224.20175171]
[458.12759399 213.55999756]
[476.96960449 208.93698120]
[496.25271606 210.84423828]
[513.78118896 219.04876709]
[527.56420898 232.60137939]
[536.04223633 249.94651794]
[538.26336670 269.10076904]
[553.01470947 271.82049561]
[567.76611328 274.54025269]
[582.51745605 277.25997925]
[597.26885986 279.97970581]
[610.14141846 270.81060791]
[625.71319580 273.51168823]
[634.74566650 286.48046875]
[631.88012695 302.02279663]
[618.81652832 310.91769409]
[603.30535889 307.88796997]
[594.54913330 294.73107910]
[579.79772949 292.01135254]
[565.04638672 289.29159546]
[550.29498291 286.57186890]
[535.54364014 283.85214233]
[531.01824951 294.17926025]
[524.55151367 303.41558838]
[534.54669189 314.60021973]
[544.54187012 325.78485107]
[554.53710938 336.96948242]
[564.53228760 348.15411377]
[574.52746582 359.33874512]
[588.47412109 353.44213867]
[603.57989502 352.39596558]
[618.20623779 356.31372070]
[630.76660156 364.77044678]
[639.89849854 376.84878540]
[644.61145020 391.23861694]
[644.39410400 406.37899780]
[639.27020264 420.62765503]
[629.79541016 432.43896484]
[616.99749756 440.53173828]
[602.26477051 444.02813721]
[587.19525146 442.54885864]
[573.42358398 436.25442505]
[562.44360352 425.82757568]
[555.44635010 412.39935303]
[553.19085693 397.42633057]
[555.92175293 382.53268433]
[563.34283447 369.33395386]
[553.34765625 358.14932251]
[543.35247803 346.96469116]
[533.35723877 335.78005981]
[523.36206055 324.59539795]
[513.36688232 313.41076660]
[502.85775757 319.09576416]
[491.38818359 322.47183228]
[479.45928955 323.38800049]
[467.59304810 321.80090332]
[456.30932617 317.77673340]
[446.10324097 311.48861694]
[437.42324829 303.20898438]
[430.65164185 293.29791260]
[426.08755493 282.18743896]
[423.93380737 270.36270142]
[424.28793335 258.34072876]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 160]
[3 158]
[4 157]
[5 156]
[6 155]
[7 154]
[8 119]
[9 118]
[11 116]
[12 115]
[13 114]
[14 113]
[15 112]
[17 111]
[18 110]
[19 109]
[20 108]
[22 106]
[23 105]
[24 104]
[25 103]
[26 45]
[27 44]
[28 43]
[29 42]
[30 41]
[31 40]
[32 39]
[46 55]
[47 54]
[56 91]
[57 90]
[58 89]
[59 88]
[60 87]
[61 86]
[62 85]
[64 82]
[65 81]
[66 80]
[67 79]
[68 78]
[70 77]
[71 76]
[125 143]
[126 142]
[127 141]
[128 140]
[130 138]
[131 137]
[132 136]
[167 182]
[168 181]
[169 180]
[170 179]
[171 178]
[184 212]
[185 211]
[186 210]
[187 209]
[188 208]
[189 207]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
