%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 12:43:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACCACCUCCCUUCCUAUGUCUCUCAGCAGCACGUUGGGGCACACUUGUUCAUCUUCUGACCGUUUGCUGGGCUAUUCCCCUGCAGUGCAGACAUCGUCAAAAUUCAGACAAGAGGAAAUUUUCAUGCAGAAAGCUGUAUGCAGGAUGCUCACUGAUGUUUUGCACUUUAAAACUGAAAUUCAACUCUUUAUAUAGGAUUUUCUUUUCUAUCUCCAUCUCCUCAUUAAAAAAUACGUACAUUUCGAGGUAAUGGU\
AUAGGGAA\
) } def
/len { sequence length } bind def

/coor [
[200.53695679 244.36329651]
[190.49346924 243.31231689]
[180.84123230 240.31994629]
[171.95205688 235.49853516]
[164.16888428 229.03092957]
[157.79263306 221.16357422]
[153.07052612 212.19709778]
[150.18650818 202.47482300]
[149.25408936 192.36961365]
[150.31187439 182.26960754]
[153.32194519 172.56326294]
[158.17129517 163.62445068]
[164.67596436 155.79806519]
[155.83033752 143.68383789]
[146.98469543 131.56959534]
[138.13906860 119.45536041]
[129.29342651 107.34112549]
[120.44779205 95.22688293]
[111.60215759 83.11264801]
[102.75652313 70.99841309]
[134.75418091 79.16028595]
[147.90220642 120.01242065]
[114.99716949 161.50358582]
[104.90726471 172.60284424]
[94.81735992 183.70211792]
[84.72745514 194.80139160]
[74.63755035 205.90066528]
[64.54763794 216.99993896]
[63.87168503 233.02873230]
[50.83392334 242.37733459]
[35.43580246 237.87428284]
[29.48945236 222.97392273]
[37.55639648 209.10655212]
[53.44837189 206.91001892]
[63.53827667 195.81076050]
[73.62818146 184.71148682]
[83.71808624 173.61221313]
[93.80799103 162.51293945]
[103.89789581 151.41368103]
[94.55552673 139.67825317]
[81.47681427 147.02314758]
[68.39810944 154.36802673]
[60.50000763 168.73995972]
[44.10103607 168.81539917]
[36.07104111 154.51675415]
[44.67060089 140.55323792]
[61.05321884 141.28932190]
[74.13192749 133.94442749]
[87.21063995 126.59954834]
[81.55294037 112.70744324]
[67.06405640 116.58972931]
[52.57516861 120.47201538]
[43.34069061 133.59085083]
[27.31839180 134.40664673]
[16.79920959 122.29358673]
[19.85255623 106.54376984]
[34.13616943 99.23912048]
[48.69288254 105.98313141]
[63.18177032 102.10084534]
[77.67065430 98.21855927]
[77.53678894 90.71974945]
[62.53917694 90.98748779]
[47.54156494 91.25497437]
[47.27432632 76.25735474]
[62.27144241 75.98987579]
[77.26905060 75.72214508]
[77.13518524 68.22333527]
[62.51696396 64.86066437]
[47.33349609 69.30734253]
[36.66468811 58.91379929]
[22.04646683 55.55112839]
[7.42824268 52.18845749]
[-5.83323765 60.78547668]
[-21.27187729 57.40554047]
[-29.72820473 44.05390549]
[-26.18523026 28.65186501]
[-12.74493885 20.33717346]
[2.61878300 24.04278755]
[10.79091263 37.57023621]
[25.40913582 40.93290710]
[40.02735901 44.29557419]
[54.16522980 39.60837555]
[65.87963104 50.24244308]
[80.49785614 53.60511398]
[91.53689575 43.44934845]
[89.40217590 28.60202599]
[87.26744843 13.75470352]
[85.13272858 -1.09261787]
[82.99800873 -15.93993950]
[80.86328125 -30.78726196]
[78.72856140 -45.63458252]
[76.59383392 -60.48190308]
[74.37081146 -75.31626129]
[72.05956268 -90.13713074]
[69.74831390 -104.95800018]
[67.43706512 -119.77886200]
[61.36864471 -133.49653625]
[51.95660782 -145.17614746]
[42.54457092 -156.85577393]
[27.05418587 -155.94609070]
[14.00568771 -164.34349060]
[8.41649246 -178.81900024]
[12.43575954 -193.80650330]
[24.51799774 -203.54298401]
[40.01734161 -204.28457642]
[52.97397614 -195.74612427]
[58.40581131 -181.21083069]
[54.22419739 -166.26780701]
[63.63623047 -154.58818054]
[73.04826355 -142.90856934]
[80.12104797 -145.40370178]
[94.26662445 -150.39396667]
[101.33940887 -152.88911438]
[101.33940887 -167.88911438]
[101.33940887 -182.88911438]
[93.24510956 -190.09312439]
[90.49067688 -200.34626770]
[93.74820709 -210.22032166]
[101.71998596 -216.54882812]
[102.07695007 -231.54458618]
[102.43391418 -246.54032898]
[102.79087830 -261.53607178]
[103.14785004 -276.53182983]
[103.41558075 -291.52944946]
[103.59407806 -306.52838135]
[103.77257538 -321.52731323]
[103.95106506 -336.52624512]
[104.12956238 -351.52520752]
[104.30805969 -366.52413940]
[104.48655701 -381.52307129]
[95.98915100 -395.54898071]
[104.12330627 -409.78863525]
[120.52129364 -409.59350586]
[128.31427002 -395.16430664]
[119.48549652 -381.34457397]
[119.30699921 -366.34564209]
[119.12850189 -351.34671021]
[118.95000458 -336.34777832]
[118.77151489 -321.34881592]
[118.59301758 -306.34988403]
[118.41452026 -291.35095215]
[121.46734619 -284.64727783]
[118.14360046 -276.17486572]
[117.78663635 -261.17910767]
[117.42966461 -246.18336487]
[117.07270050 -231.18762207]
[116.71573639 -216.19186401]
[127.17995453 -199.90963745]
[116.33940887 -182.88911438]
[116.33940887 -167.88911438]
[116.33940887 -152.88911438]
[111.90889740 -137.52796936]
[103.06284332 -126.83292389]
[92.32305908 -121.74326324]
[82.25792694 -122.09011841]
[84.56918335 -107.26924896]
[86.88043213 -92.44837952]
[89.19168091 -77.62751007]
[93.31391144 -71.52289581]
[91.44116211 -62.61662674]
[93.57588196 -47.76930618]
[95.71060181 -32.92198181]
[97.84532928 -18.07466125]
[99.98004913 -3.22734046]
[102.11476898 11.61998081]
[104.24949646 26.46730232]
[106.38421631 41.31462479]
[105.21224213 26.36047935]
[107.72254181 11.57202339]
[113.76352692 -2.15774155]
[122.97042084 -13.99974632]
[134.78726196 -23.23891258]
[148.50050354 -29.31733513]
[163.28205872 -31.86796761]
[178.23933411 -30.73679161]
[192.46916199 -25.99211311]
[205.11227417 -17.92043686]
[215.40519714 -7.00917244]
[222.72640991 6.08280563]
[226.63380432 20.56493950]
[226.89146423 35.56272507]
[223.48379517 50.17052841]
[216.61659241 63.50625229]
[206.70452881 74.76462555]
[194.34613037 83.26580811]
[180.28767395 88.49645233]
[165.37806702 90.14072418]
[150.51762390 88.09931946]
[136.60369873 82.49550629]
[124.47648621 73.66768646]
[114.87075806 62.15277863]
[123.71639252 74.26701355]
[132.56202698 86.38124847]
[141.40766907 98.49549103]
[150.25329590 110.60972595]
[159.09893799 122.72396088]
[167.94456482 134.83819580]
[176.79020691 146.95243835]
[196.26091003 141.24339294]
[216.40208435 143.43437195]
[234.13648987 153.16717529]
[246.76356506 168.93307495]
[252.37068176 188.30674744]
[250.12289429 208.31924438]
[240.38708496 225.91307068]
[250.34420776 237.13162231]
[260.30130005 248.35017395]
[270.25842285 259.56872559]
[280.21554565 270.78729248]
[290.17266846 282.00582886]
[300.12976074 293.22439575]
[312.91442871 294.76211548]
[320.97686768 304.28356934]
[320.42218018 316.34689331]
[330.24508667 327.68316650]
[340.06802368 339.01940918]
[349.89093018 350.35565186]
[365.41513062 351.63507080]
[375.21545410 363.27157593]
[373.90005493 378.06362915]
[383.72296143 389.39987183]
[393.54586792 400.73611450]
[403.36877441 412.07235718]
[417.01687622 405.62011719]
[431.89987183 403.09045410]
[446.91333008 404.67114258]
[460.94317627 410.24487305]
[472.94824219 419.39804077]
[482.03775024 431.45141602]
[487.53717041 445.51052856]
[489.03836060 460.53213501]
[486.42999268 475.40155029]
[479.90557861 489.01531982]
[469.94931030 500.36322021]
[457.29998779 508.60317993]
[442.89627075 513.12371826]
[427.80700684 513.58941650]
[413.15191650 509.96569824]
[400.01855469 502.52145386]
[389.38143921 491.80911255]
[382.02993774 478.62356567]
[378.50961304 463.94332886]
[379.08163452 448.85772705]
[383.70361328 434.48620605]
[392.03253174 421.89529419]
[382.20962524 410.55905151]
[372.38671875 399.22280884]
[362.56378174 387.88656616]
[347.73507690 387.08346558]
[337.61175537 375.72680664]
[338.55468750 360.17855835]
[328.73178101 348.84231567]
[318.90884399 337.50607300]
[309.08593750 326.16983032]
[292.20788574 321.31344604]
[288.91122437 303.18148804]
[278.95410156 291.96295166]
[268.99697876 280.74438477]
[259.03988647 269.52584839]
[249.08276367 258.30728149]
[239.12565613 247.08874512]
[229.16853333 235.87019348]
[220.25283813 240.56654358]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 198]
[14 197]
[15 196]
[16 195]
[17 194]
[18 193]
[19 192]
[20 191]
[23 39]
[24 38]
[25 37]
[26 36]
[27 35]
[28 34]
[40 49]
[41 48]
[42 47]
[50 60]
[51 59]
[52 58]
[67 84]
[68 83]
[70 81]
[71 80]
[72 79]
[85 167]
[86 166]
[87 165]
[88 164]
[89 163]
[90 162]
[91 161]
[92 160]
[93 158]
[94 157]
[95 156]
[96 155]
[97 110]
[98 109]
[99 108]
[113 151]
[114 150]
[115 149]
[119 147]
[120 146]
[121 145]
[122 144]
[123 143]
[124 141]
[125 140]
[126 139]
[127 138]
[128 137]
[129 136]
[130 135]
[205 262]
[206 261]
[207 260]
[208 259]
[209 258]
[210 257]
[211 256]
[214 254]
[215 253]
[216 252]
[217 251]
[220 248]
[221 247]
[222 246]
[223 245]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
