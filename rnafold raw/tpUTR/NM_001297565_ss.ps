%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 23:58:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUGUGGACUUAAUUCACCCCAGUCUUCAUCAUCUGGGCAUCAGAAUAUUUCCUUAUGGUUUUGGAUGUACCAUUUGUUUCUUAUUUGUGUAACUGUAAGUUCACAUGAACCUCAUGGGUUUGGCUUAGGCUGGUAGCUUCUAUGUAAUUCGCAAUGAUUCCAUCUAAAUAAAAGUUCUAUGAUCUGCAAAC\
) } def
/len { sequence length } bind def

/coor [
[345.38336182 179.63456726]
[342.55484009 169.80245972]
[341.98889160 159.57655334]
[327.37274170 156.20491028]
[312.75659180 152.83328247]
[298.14044189 149.46163940]
[283.52426147 146.08999634]
[268.90811157 142.71836853]
[254.29196167 139.34672546]
[239.67579651 135.97509766]
[225.05964661 132.60345459]
[210.44348145 129.23182678]
[195.82733154 125.86018372]
[182.47612000 138.91799927]
[163.80581665 141.32652283]
[147.31738281 131.93617249]
[139.74488831 114.37442017]
[124.98223114 111.71655273]
[110.21958923 109.05869293]
[95.57660675 112.31187439]
[83.32815552 120.97070312]
[71.07969666 129.62953186]
[58.83124542 138.28836060]
[46.58279037 146.94718933]
[48.07009888 162.23390198]
[41.70018387 176.20959473]
[29.18652153 185.11485291]
[13.89522552 186.55424500]
[-0.06042387 180.14054871]
[-8.92642689 167.59904480]
[-10.31787395 152.30331421]
[-3.86047149 138.36782837]
[8.70877075 129.54118347]
[24.00879097 128.19769287]
[37.92395782 134.69874573]
[50.17241287 126.03990936]
[62.42086792 117.38108063]
[74.66932678 108.72224426]
[86.91777802 100.06341553]
[86.79633331 92.56439972]
[72.60740662 97.43003082]
[63.59531403 85.43910980]
[72.21448517 73.16271973]
[86.55343628 77.56636810]
[86.43198395 70.06735229]
[73.90956879 61.80968857]
[61.38714600 53.55202484]
[48.86472321 45.29436493]
[36.34230423 37.03670120]
[21.64172173 44.59061813]
[5.23139286 43.70948410]
[-8.41899586 34.72803497]
[-15.63925266 20.17436600]
[-14.54529667 4.05902910]
[-29.78707504 7.27243519]
[-42.50580215 -1.07553422]
[-45.47536469 -15.62604237]
[-58.12985992 -23.67984581]
[-70.78435516 -31.73364830]
[-83.43885040 -39.78744888]
[-96.09334564 -47.84125137]
[-110.05468750 -41.27737808]
[-125.34539795 -43.32621765]
[-137.08627319 -53.33399200]
[-141.53082275 -68.10726166]
[-137.26083374 -82.93192291]
[-125.63881683 -93.07749176]
[-110.37333679 -95.30654144]
[-96.33554840 -88.90779877]
[-88.00485229 -75.92307281]
[-88.03954315 -60.49575043]
[-75.38504791 -52.44194794]
[-62.73055267 -44.38814545]
[-50.07605743 -36.33433914]
[-37.42156219 -28.28053856]
[-22.98244858 -31.75150490]
[-10.03426170 -23.76407051]
[-6.49149466 -8.59546661]
[5.18450546 -15.69447708]
[18.84597778 -17.07380295]
[31.82995224 -12.40723228]
[41.58078766 -2.55265379]
[46.15314865 10.60503101]
[44.59996414 24.51428223]
[57.12238693 32.77194214]
[69.64480591 41.02960587]
[82.16722870 49.28726578]
[94.68964386 57.54492950]
[112.87744904 94.29604340]
[127.64009857 96.95391083]
[142.40274048 99.61177063]
[149.18672180 90.34095764]
[158.90022278 84.30432892]
[170.11531067 82.34409332]
[181.20011902 84.70652008]
[190.55624390 91.01170349]
[196.84925842 100.31407166]
[199.19895935 111.24402618]
[213.81512451 114.61566162]
[228.43127441 117.98730469]
[243.04743958 121.35894012]
[257.66360474 124.73057556]
[272.27975464 128.10220337]
[286.89590454 131.47384644]
[301.51205444 134.84547424]
[316.12823486 138.21711731]
[330.74438477 141.58876038]
[345.36053467 144.96038818]
[357.19296265 128.43161011]
[374.99014282 118.70547485]
[395.19946289 117.67792511]
[413.80648804 125.51301575]
[427.13256836 140.61830139]
[432.56185913 159.96833801]
[447.46560669 161.66503906]
[462.36932373 163.36175537]
[477.27307129 165.05845642]
[492.17678833 166.75515747]
[507.08050537 168.45187378]
[521.98425293 170.14857483]
[536.92480469 171.48280334]
[551.89331055 172.45375061]
[566.86187744 173.42469788]
[581.83044434 174.39564514]
[592.02777100 166.48255920]
[604.48352051 167.60798645]
[612.56134033 176.62416077]
[627.51220703 177.83737183]
[642.46307373 179.05056763]
[657.41394043 180.26377869]
[672.36480713 181.47698975]
[681.18591309 179.04948425]
[687.54730225 182.83280945]
[702.47650146 184.28796387]
[717.40576172 185.74310303]
[723.71154785 177.10644531]
[732.96667480 171.91271973]
[743.46276855 171.04364014]
[753.29400635 174.58953857]
[760.70336914 181.84527588]
[764.39636230 191.44920349]
[779.23730469 193.62763977]
[791.83459473 184.46543884]
[806.85443115 186.88607788]
[815.51153564 198.95214844]
[830.35253906 201.13056946]
[845.19348145 203.30899048]
[858.87139893 194.92475891]
[873.90472412 200.52630615]
[878.76129150 215.81660461]
[869.71551514 229.06625366]
[853.70654297 230.11125183]
[843.01507568 218.14996338]
[828.17413330 215.97154236]
[813.33312988 213.79310608]
[801.57366943 222.86231995]
[786.49176025 220.86450195]
[777.05889893 208.46861267]
[762.21789551 206.29017639]
[747.50317383 219.03868103]
[727.85150146 216.84385681]
[715.95062256 200.67236328]
[701.02136230 199.21720886]
[686.09210205 197.76206970]
[671.15161133 196.42784119]
[656.20074463 195.21463013]
[641.24987793 194.00143433]
[626.29901123 192.78822327]
[611.34814453 191.57501221]
[595.92700195 199.93815613]
[580.85949707 189.36418152]
[565.89093018 188.39323425]
[550.92236328 187.42228699]
[535.95385742 186.45133972]
[533.07006836 188.50344849]
[529.04479980 189.25283813]
[524.50482178 188.17636108]
[520.28753662 185.05230713]
[505.38381958 183.35560608]
[490.48007202 181.65888977]
[475.57635498 179.96218872]
[460.67260742 178.26548767]
[445.76889038 176.56877136]
[430.86517334 174.87207031]
[427.03582764 184.23222351]
[421.20996094 192.51184082]
[413.67691040 199.29139709]
[404.81265259 204.22608948]
[395.06103516 207.06336975]
[384.91165161 207.65582275]
[374.87506104 205.96887207]
[365.45727539 202.08273315]
[357.13418579 196.18858337]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 108]
[4 107]
[5 106]
[6 105]
[7 104]
[8 103]
[9 102]
[10 101]
[11 100]
[12 99]
[13 98]
[17 91]
[18 90]
[19 89]
[20 39]
[21 38]
[22 37]
[23 36]
[24 35]
[45 88]
[46 87]
[47 86]
[48 85]
[49 84]
[54 78]
[57 75]
[58 74]
[59 73]
[60 72]
[61 71]
[114 184]
[115 183]
[116 182]
[117 181]
[118 180]
[119 179]
[120 178]
[121 174]
[122 173]
[123 172]
[124 171]
[127 169]
[128 168]
[129 167]
[130 166]
[131 165]
[133 164]
[134 163]
[135 162]
[141 159]
[142 158]
[145 155]
[146 154]
[147 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
