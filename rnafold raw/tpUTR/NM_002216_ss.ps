%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 21:12:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUUUAUAGUUUGGGAAAUUAUAUAUAUUAAUAUACAUCUUUCCCCUGUCACUUUUGCAGAUAUUCUUCGGUUUGAAUAAUUAAAAUGAACCAGAUAUCAGGGUGGUUAAUUAAAAUGAACCAGAUAUCAGGGUGGUUUAUAAAGCCUGUAAACACACCUAAGAAAAUAAACAUUUUACAAAUGA\
) } def
/len { sequence length } bind def

/coor [
[72.75557709 117.86730194]
[70.93631744 106.76982117]
[55.94107819 106.39186096]
[40.94583893 106.01390839]
[25.95060349 105.63594818]
[10.95536613 105.25798798]
[-4.03987169 104.88002777]
[-19.03510857 104.50206757]
[-25.20302773 121.51761627]
[-37.59803009 135.07183838]
[-54.48171997 142.95973206]
[-73.36697388 143.79289246]
[-91.38392639 137.23931885]
[-105.71611023 124.10517883]
[-118.40258789 132.10850525]
[-131.08906555 140.11184692]
[-143.77554321 148.11517334]
[-156.46202087 156.11849976]
[-169.14849854 164.12182617]
[-170.02140808 181.00369263]
[-180.67297363 193.91557312]
[-196.75868225 197.90187073]
[-211.90037537 191.58576965]
[-224.45060730 199.80108643]
[-237.00083923 208.01641846]
[-249.55108643 216.23173523]
[-262.10131836 224.44705200]
[-269.00610352 239.32173157]
[-285.36218262 240.50962830]
[-294.34381104 226.78874207]
[-286.71145630 212.27395630]
[-270.31665039 211.89682007]
[-257.76641846 203.68150330]
[-245.21617126 195.46617126]
[-232.66592407 187.25085449]
[-220.11569214 179.03552246]
[-220.70379639 165.68620300]
[-214.56495667 153.69573975]
[-203.20973206 146.24957275]
[-189.54985046 145.38510132]
[-177.15182495 151.43534851]
[-164.46534729 143.43202209]
[-151.77886963 135.42869568]
[-139.09239197 127.42536163]
[-126.40591431 119.42203522]
[-113.71943665 111.41870117]
[-116.10327911 96.60933685]
[-130.66043091 92.99137878]
[-145.21755981 89.37342072]
[-159.77470398 85.75546265]
[-172.31159973 95.10212708]
[-187.92028809 94.15191650]
[-199.23081970 83.35349274]
[-200.90270996 67.80554199]
[-192.14654541 54.84932709]
[-177.09671021 50.60237885]
[-162.85928345 57.06997681]
[-156.15675354 71.19831848]
[-141.59960938 74.81627655]
[-127.04246521 78.43424225]
[-112.48532104 82.05220032]
[-106.81849670 74.11700439]
[-99.97877502 67.80525970]
[-110.08421326 56.72012329]
[-120.18964386 45.63499069]
[-130.29507446 34.54985809]
[-140.40051270 23.46472359]
[-155.80682373 25.31550407]
[-169.34220886 17.72783089]
[-175.80206299 3.61932302]
[-172.70240784 -11.58501339]
[-161.23515320 -22.03879929]
[-145.80967712 -23.72234154]
[-132.35739136 -15.98828220]
[-126.05097961 -1.81052721]
[-129.31538391 13.35928917]
[-119.20994568 24.44442177]
[-109.10450745 35.52955627]
[-98.99907684 46.61468887]
[-88.89363861 57.69982529]
[-77.12913513 52.20782852]
[-64.26726532 50.26104736]
[-51.35472488 52.03225708]
[-39.44638062 57.39106750]
[-29.51910973 65.91342926]
[-22.39166641 76.91516113]
[-18.65715027 89.50682831]
[-3.66191268 89.88478851]
[11.33332443 90.26274872]
[26.32856178 90.64070892]
[41.32379913 91.01866913]
[56.31903839 91.39662933]
[71.31427765 91.77458954]
[86.92325592 73.17599487]
[111.18930817 72.33544159]
[120.12796021 60.28967667]
[129.06661987 48.24391174]
[138.00526428 36.19814301]
[146.94392395 24.15237808]
[155.88256836 12.10661030]
[157.89279175 -3.58636951]
[171.69053650 -9.19628429]
[180.62919617 -21.24205017]
[182.63940430 -36.93503189]
[196.43716431 -42.54494476]
[198.44738770 -58.23792648]
[212.24513245 -63.84783936]
[221.18379211 -75.89360809]
[230.12243652 -87.93937683]
[227.55993652 -103.53453827]
[236.84317017 -116.32505035]
[252.46455383 -118.72253418]
[265.15618896 -109.30459595]
[267.38839722 -93.65873718]
[257.83679199 -81.06736755]
[242.16821289 -79.00072479]
[233.22955322 -66.95495605]
[224.29090881 -54.90918732]
[222.92004395 -40.07780075]
[208.48294067 -33.60629272]
[207.11207581 -18.77490807]
[192.67495728 -12.30339909]
[183.73631287 -0.25763214]
[182.36544800 14.57375336]
[167.92832947 21.04526138]
[158.98968506 33.09103012]
[150.05102539 45.13679504]
[141.11238098 57.18256378]
[132.17373657 69.22833252]
[123.23507690 81.27409363]
[133.34056091 88.34323883]
[140.79679871 100.23103333]
[155.46726990 103.35792542]
[170.13774109 106.48481750]
[184.80819702 109.61170959]
[199.47866821 112.73859406]
[214.17488098 115.74214935]
[228.89579773 118.62214661]
[243.61672974 121.50214386]
[258.33764648 124.38214111]
[273.05856323 127.26213837]
[287.77951050 130.14213562]
[302.50042725 133.02214050]
[316.56060791 125.29618073]
[331.31134033 131.60456848]
[335.43710327 147.10804749]
[325.77294922 159.91366577]
[309.73242188 160.19805908]
[299.62042236 147.74305725]
[284.89950562 144.86306763]
[270.17858887 141.98306274]
[255.45765686 139.10307312]
[240.73672485 136.22306824]
[226.01580811 133.34306335]
[211.29487610 130.46307373]
[204.11181641 132.26812744]
[196.35177612 127.40906525]
[181.68130493 124.28217316]
[167.01084900 121.15528107]
[152.34037781 118.02838898]
[137.66990662 114.90149689]
[132.52479553 120.35839844]
[143.90023804 130.13589478]
[155.27566528 139.91340637]
[166.65109253 149.69090271]
[179.35197449 157.67135620]
[176.85263062 172.46166992]
[162.23471069 175.82565308]
[153.52185059 163.61576843]
[143.09275818 152.83457947]
[132.66366577 142.05339050]
[122.23456573 131.27220154]
[117.08945465 136.72911072]
[121.07306671 151.19046021]
[125.05667877 165.65182495]
[129.04028320 180.11317444]
[133.02389526 194.57453918]
[143.05958557 208.23913574]
[132.70715332 221.66535950]
[116.93978882 215.43424988]
[118.56254578 198.55815125]
[114.57893372 184.09678650]
[110.59532166 169.63543701]
[106.61170959 155.17407227]
[102.62809753 140.71272278]
[89.22144318 136.50033569]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 93]
[3 92]
[4 91]
[5 90]
[6 89]
[7 88]
[8 87]
[14 46]
[15 45]
[16 44]
[17 43]
[18 42]
[19 41]
[23 36]
[24 35]
[25 34]
[26 33]
[27 32]
[47 61]
[48 60]
[49 59]
[50 58]
[63 80]
[64 79]
[65 78]
[66 77]
[67 76]
[95 130]
[96 129]
[97 128]
[98 127]
[99 126]
[100 125]
[102 123]
[103 122]
[105 120]
[107 118]
[108 117]
[109 116]
[132 161]
[133 160]
[134 159]
[135 158]
[136 157]
[137 155]
[138 154]
[139 153]
[140 152]
[141 151]
[142 150]
[143 149]
[173 185]
[174 184]
[175 183]
[176 182]
[177 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
