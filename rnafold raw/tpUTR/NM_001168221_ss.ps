%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 22:38:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAUGUUCGCUCAUUUGUGAUAUUAUAAAACAUGUUUAACUCAGAAUGAUAUGUGAGGCCAGCAGUCAGAAUAUCACUUCUCCAUUAACAAAAUGGUUUGGAGAUCUCUUCUUUUGUGUGACAGAAGUCAGCAACCAAAUUUCAUCUUGUUAGAACCAUUUUGUUUUGAUUAAAAUGAAAAACAAACACA\
) } def
/len { sequence length } bind def

/coor [
[64.07182312 344.27157593]
[58.20585251 330.13476562]
[59.59303284 314.89224243]
[67.91461182 302.04663086]
[81.25833893 294.54974365]
[80.76755524 279.55776978]
[80.27676392 264.56579590]
[79.78598022 249.57383728]
[69.23525238 242.16084290]
[64.81938171 229.83894348]
[68.36365509 217.03652954]
[78.78873444 208.49299622]
[78.54331207 193.49499512]
[78.29788208 178.49700928]
[78.05245972 163.49900818]
[77.80702972 148.50102234]
[77.56160736 133.50303650]
[66.86858368 122.98355865]
[51.86858749 122.98355865]
[36.86858749 122.98355865]
[21.86858749 122.98355865]
[6.86858654 122.98355865]
[-8.13141346 122.98355865]
[-23.13141251 122.98355865]
[-38.13141251 122.98355865]
[-44.09226608 133.99246216]
[-54.11385727 141.37432861]
[-66.25347137 143.77452087]
[-78.19004059 140.79681396]
[-87.66792297 133.06726074]
[-92.92314148 122.10382080]
[-107.91510773 121.61302948]
[-116.61073303 124.46350861]
[-123.14778900 120.98957825]
[-138.12971497 120.25356293]
[-153.11164856 119.51754761]
[-168.09358215 118.78153229]
[-177.85095215 130.70208740]
[-192.58438110 134.54653931]
[-206.59075928 129.04333496]
[-214.57531738 116.49803162]
[-229.55725098 115.76201630]
[-244.53918457 115.02600098]
[-259.52111816 114.28998566]
[-273.68432617 121.34082031]
[-286.01660156 112.98834229]
[-297.55700684 123.78622437]
[-313.34957886 123.17768097]
[-324.02484131 111.52375031]
[-323.24938965 95.73849487]
[-311.48321533 85.18703461]
[-295.70706177 86.12936401]
[-285.28057861 98.00640869]
[-272.18899536 90.90293121]
[-258.78509521 99.30805206]
[-243.80316162 100.04406738]
[-228.82122803 100.78008270]
[-213.83929443 101.51609802]
[-204.66354370 89.81381989]
[-190.18519592 85.70998383]
[-175.89953613 90.98004150]
[-167.35757446 103.79959869]
[-152.37564087 104.53561401]
[-137.39370728 105.27162933]
[-122.41177368 106.00764465]
[-107.42432404 106.62106323]
[-92.43235016 107.11184692]
[-82.26378632 92.68878937]
[-65.32763672 87.19706726]
[-48.33302307 93.01016235]
[-38.13141251 107.98355865]
[-23.13141251 107.98355865]
[-8.13141346 107.98355865]
[6.86858654 107.98355865]
[21.86858749 107.98355865]
[36.86858749 107.98355865]
[51.86858749 107.98355865]
[66.86858368 107.98355865]
[67.36075592 93.81114197]
[73.49760437 81.42811584]
[83.91922760 72.91040039]
[96.57921600 69.54747009]
[109.14250946 71.65270233]
[119.41542816 78.55780792]
[132.02215576 70.42943573]
[135.50788879 58.00027084]
[146.18876648 51.49181366]
[158.04701233 53.93162155]
[170.78504944 46.01060486]
[183.52308655 38.08958817]
[196.26110840 30.16856956]
[208.99914551 22.24755096]
[221.73718262 14.32653332]
[234.47521973 6.40551615]
[247.21324158 -1.51550174]
[259.95129395 -9.43651962]
[272.68930054 -17.35753632]
[285.42733765 -25.27855492]
[298.16537476 -33.19957352]
[310.90341187 -41.12059021]
[319.80813599 -60.60069656]
[340.43807983 -60.46112823]
[352.77209473 -68.99762726]
[365.10610962 -77.53413391]
[377.44015503 -86.07063293]
[389.77416992 -94.60713196]
[385.16610718 -109.73165131]
[385.45449829 -125.52051544]
[390.59906006 -140.42994690]
[400.08544922 -153.00590515]
[412.97637939 -162.02580261]
[428.00436401 -166.61741638]
[443.69635010 -166.34321594]
[458.51803589 -161.24200439]
[471.02389526 -151.82398987]
[483.21658325 -160.56115723]
[495.40930176 -169.29832458]
[507.60198975 -178.03549194]
[512.76544189 -185.59048462]
[520.06640625 -186.81393433]
[532.40045166 -195.35043335]
[544.73449707 -203.88693237]
[557.06848145 -212.42344666]
[563.58709717 -227.47135925]
[579.90704346 -229.08100891]
[589.23980713 -215.59651184]
[581.98461914 -200.88957214]
[565.60498047 -200.08941650]
[553.27099609 -191.55291748]
[540.93695068 -183.01641846]
[528.60290527 -174.47990417]
[516.33917236 -165.84278870]
[504.14645386 -157.10562134]
[491.95376587 -148.36845398]
[479.76104736 -139.63128662]
[484.41299438 -126.14898682]
[485.07492065 -111.88611603]
[481.68414307 -97.99996185]
[474.50717163 -85.61977386]
[464.11874390 -75.75494385]
[451.35592651 -69.21269226]
[437.25051880 -66.53205109]
[422.94580078 -67.93941498]
[409.60375977 -73.32949066]
[398.31066895 -82.27310944]
[385.97665405 -73.73661041]
[373.64260864 -65.20011139]
[361.30859375 -56.66360474]
[348.97457886 -48.12710190]
[348.82684326 -39.22155762]
[344.52410889 -31.26608467]
[336.92404175 -26.11316490]
[327.66741943 -25.02854729]
[318.82443237 -28.38255692]
[306.08639526 -20.46154022]
[293.34835815 -12.54052258]
[280.61032104 -4.61950445]
[267.87228394 3.30151320]
[255.13426208 11.22253132]
[242.39622498 19.14354897]
[229.65820312 27.06456566]
[216.92016602 34.98558426]
[204.18212891 42.90660095]
[191.44410706 50.82762146]
[178.70606995 58.74863815]
[165.96803284 66.66965485]
[158.55126953 82.56677246]
[140.15052795 83.03616333]
[127.54380035 91.16453552]
[129.77635193 103.28418732]
[126.73459625 115.66825867]
[118.61483765 126.05112457]
[106.57115173 132.38916016]
[92.55960083 133.25759888]
[92.80502319 148.25559998]
[93.05045319 163.25358582]
[93.29587555 178.25158691]
[93.54130554 193.24957275]
[93.78672791 208.24755859]
[106.57530212 220.17243958]
[106.78664398 237.31927490]
[94.77794647 249.08305359]
[95.26873779 264.07501221]
[95.75952148 279.06698608]
[96.25030518 294.05895996]
[110.05578613 300.66708374]
[119.19969177 312.94094849]
[121.58081055 328.06008911]
[116.65198517 342.55026245]
[105.54582214 353.08172607]
[90.81443787 357.23443604]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 185]
[6 184]
[7 183]
[8 182]
[12 179]
[13 178]
[14 177]
[15 176]
[16 175]
[17 174]
[18 78]
[19 77]
[20 76]
[21 75]
[22 74]
[23 73]
[24 72]
[25 71]
[31 67]
[32 66]
[34 65]
[35 64]
[36 63]
[37 62]
[41 58]
[42 57]
[43 56]
[44 55]
[46 53]
[84 169]
[85 168]
[88 166]
[89 165]
[90 164]
[91 163]
[92 162]
[93 161]
[94 160]
[95 159]
[96 158]
[97 157]
[98 156]
[99 155]
[100 154]
[102 149]
[103 148]
[104 147]
[105 146]
[106 145]
[115 135]
[116 134]
[117 133]
[118 132]
[120 131]
[121 130]
[122 129]
[123 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
