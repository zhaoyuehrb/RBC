%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 00:14:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCCAGUCAAUUCAGCAGGCCUAGAUUUAUUUUCCUUAAUAAUAAUUAAGUGUAAAUAAUUAAAUGAUAAUUCAAUCAAAUAAUCAAAUAAUAAUUAAACAAUAUUGAAAUCUAA\
) } def
/len { sequence length } bind def

/coor [
[64.94318390 203.46363831]
[61.72123337 209.77624512]
[56.68802261 214.69152832]
[50.39484787 217.71769714]
[43.51633453 218.56735229]
[36.77817154 217.18443298]
[27.06737518 228.61685181]
[17.35658073 240.04928589]
[21.94680977 254.77793884]
[17.82341957 269.64404297]
[6.30216694 279.90390015]
[-8.94055653 282.28356934]
[-23.04085350 276.02377319]
[-31.49937057 263.12194824]
[-31.61702538 247.69503784]
[-23.35627556 234.66571045]
[-9.35309505 228.19155884]
[5.92415047 230.33848572]
[15.63494492 218.90606689]
[25.34573936 207.47363281]
[26.30033875 184.33345032]
[48.35670471 175.24719238]
[56.09001160 162.39433289]
[63.82331848 149.54147339]
[71.55662537 136.68862915]
[79.28993225 123.83576202]
[87.02323914 110.98291016]
[84.99824524 96.12022400]
[74.10830688 85.80473328]
[63.21837616 75.48924255]
[52.32844543 65.17374420]
[41.43851089 54.85825729]
[26.09871292 50.98513031]
[22.17970848 36.61534500]
[11.15109253 26.44825935]
[-0.01418357 16.43144417]
[-11.17945957 6.41462755]
[-22.34473610 -3.60218906]
[-33.51001358 -13.61900520]
[-44.67528915 -23.63582230]
[-60.82500839 -26.48512459]
[-66.17726898 -41.98626709]
[-55.22611618 -54.19300079]
[-39.23716354 -50.54808426]
[-34.65847015 -34.80109787]
[-23.49319458 -24.78428078]
[-12.32791901 -14.76746559]
[-1.16264319 -4.75064898]
[10.00263309 5.26616764]
[21.16790962 15.28298378]
[28.34337616 17.43597031]
[32.49520111 25.72541428]
[47.05607986 28.86070633]
[51.75400543 43.96832275]
[62.64393616 54.28381348]
[73.53386688 64.59930420]
[84.42380524 74.91479492]
[95.31373596 85.23029327]
[110.27936554 86.24511719]
[122.46219635 77.49419403]
[134.64503479 68.74327850]
[146.82786560 59.99235916]
[149.51423645 44.64892197]
[161.99403381 35.94779205]
[176.60510254 38.60340118]
[188.78793335 29.85248184]
[200.97076416 21.10156250]
[213.15359497 12.35064316]
[219.84803772 -1.98445129]
[234.69889832 -3.12532353]
[246.88172913 -11.87624264]
[259.06454468 -20.62716103]
[261.37374878 -36.26184082]
[274.11163330 -45.61717224]
[289.72100830 -43.14280319]
[298.94116211 -30.30673599]
[296.30187988 -14.72437954]
[283.36904907 -5.64046860]
[267.81549072 -8.44432831]
[255.63264465 0.30659083]
[243.44981384 9.05750942]
[237.62675476 22.76667976]
[221.90451050 24.53347588]
[209.72167969 33.28439713]
[197.53884888 42.03531265]
[185.35601807 50.78623199]
[183.20727539 65.48040009]
[170.97680664 74.52862549]
[155.57878113 72.17519379]
[143.39595032 80.92610931]
[131.21311951 89.67703247]
[119.03028107 98.42794800]
[133.19836426 93.50193024]
[148.19833374 93.47418213]
[162.38453674 98.34775543]
[174.20056152 107.58795929]
[182.35006714 120.18103790]
[185.93894958 134.74537659]
[184.57347107 149.68309021]
[178.40342712 163.35534668]
[168.10575867 174.26213074]
[154.81024170 181.20684814]
[139.97554016 183.42756653]
[125.22919464 180.68066406]
[112.18907166 173.26750183]
[102.28581238 162.00137329]
[96.60592651 148.11833191]
[95.77256012 133.14149475]
[99.87609863 118.71621704]
[92.14279175 131.56907654]
[84.40948486 144.42193604]
[76.67617798 157.27478027]
[68.94287109 170.12763977]
[61.20956039 182.98049927]
[64.70790100 189.32359314]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 20]
[7 19]
[8 18]
[22 114]
[23 113]
[24 112]
[25 111]
[26 110]
[27 109]
[28 58]
[29 57]
[30 56]
[31 55]
[32 54]
[34 52]
[35 50]
[36 49]
[37 48]
[38 47]
[39 46]
[40 45]
[59 92]
[60 91]
[61 90]
[62 89]
[65 86]
[66 85]
[67 84]
[68 83]
[70 81]
[71 80]
[72 79]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
