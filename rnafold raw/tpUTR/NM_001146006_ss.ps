%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 13:52:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGGUCCCCGGACUCAAGCCCCGGACUCAGGCCCCCACCUGGCUCACCUUGUGCUGGGGACAGGUCCUCAGUGUCCUCAGGGGCCUGCCCAGUGCACUUGCUGGAAGACGCAAGGGCCUGAUGGGGUGGAAGGCAUGGCGGCCCCCCCAGCUGUCAUCAAUUAAAGGCAAAGGCAAUCGAAUCUAA\
) } def
/len { sequence length } bind def

/coor [
[209.98327637 165.93270874]
[224.85446167 167.90759277]
[211.58160400 160.91967773]
[198.30873108 153.93176270]
[185.03585815 146.94384766]
[171.76298523 139.95593262]
[158.49012756 132.96801758]
[145.21725464 125.98010254]
[130.71760559 129.82202148]
[122.64636993 142.46540833]
[114.57513428 155.10877991]
[106.50389862 167.75216675]
[113.04853058 181.72254944]
[110.97862244 197.01042175]
[100.95467377 208.73748779]
[86.17529297 213.16166687]
[71.35652924 208.87124634]
[61.22698975 197.23527527]
[59.01897812 181.96673584]
[65.43706512 167.93777466]
[78.43325806 159.62498474]
[93.86051941 159.68093872]
[101.93175507 147.03755188]
[110.00299072 134.39416504]
[118.07422638 121.75078583]
[103.04948425 126.87378693]
[88.37080383 123.04415131]
[78.70835876 112.27819824]
[76.69408417 98.66395569]
[62.78841019 93.03968811]
[48.88274002 87.41542816]
[34.97706985 81.79116821]
[21.07139969 76.16690063]
[7.16573048 70.54264069]
[-6.73994017 64.91837311]
[-20.64561081 59.29411316]
[-35.43666458 56.79917145]
[-50.41781998 57.55083466]
[-65.39897156 58.30249405]
[-75.97217560 69.74124908]
[-91.17590332 70.29013062]
[-102.01585388 60.13970566]
[-116.99700928 60.89136887]
[-130.46917725 70.24192047]
[-145.18568420 63.00615311]
[-146.00746155 46.62760925]
[-132.08912659 37.95512772]
[-117.74867249 45.91021347]
[-102.76751709 45.15855026]
[-92.99802399 33.97406769]
[-77.81571198 32.99836349]
[-66.15063477 43.32134247]
[-51.16947937 42.56967926]
[-36.18832779 41.81801605]
[-33.78742218 34.71269226]
[-26.58471107 13.39671135]
[-38.03949356 3.71229386]
[-49.49427795 -5.97212362]
[-60.94905853 -15.65654182]
[-72.40383911 -25.34095955]
[-83.85862732 -35.02537537]
[-95.31340790 -44.70979309]
[-106.76818848 -54.39421082]
[-121.48622894 -49.77004623]
[-136.36180115 -53.85916138]
[-146.64816284 -65.35673523]
[-149.06298828 -80.59393311]
[-142.83569336 -94.70862579]
[-129.95339966 -103.19685364]
[-114.52680206 -103.35006714]
[-101.47846222 -95.11936951]
[-94.97206116 -81.13114929]
[-97.08377075 -65.84899902]
[-85.62899017 -56.16457748]
[-74.17420959 -46.48015976]
[-62.71942520 -36.79574203]
[-51.26464081 -27.11132431]
[-39.80986023 -17.42690659]
[-28.35507584 -7.74248886]
[-16.90029335 1.94192874]
[-15.02134705 45.38844299]
[-1.11567688 51.01270676]
[12.78999329 56.63696671]
[26.69566345 62.26123047]
[40.60133362 67.88549042]
[54.50700378 73.50975800]
[68.41267395 79.13401794]
[82.31834412 84.75828552]
[104.99284363 74.67525482]
[126.82579803 91.04731750]
[128.57641602 76.14981842]
[130.32702637 61.25232315]
[132.07763672 46.35482788]
[133.82826233 31.45733452]
[123.83808899 19.21102905]
[125.51651001 3.49611712]
[137.86775208 -6.36402035]
[153.56404114 -4.51953936]
[163.29304504 7.93526220]
[161.28271484 23.61117172]
[148.72575378 33.20795059]
[146.97514343 48.10544205]
[145.22451782 63.00293732]
[143.47390747 77.90043640]
[141.72329712 92.79792786]
[144.75769043 78.10805511]
[154.97001648 67.12130737]
[169.39932251 63.02316284]
[183.86204529 67.00180817]
[194.16490173 77.90369415]
[197.32072449 92.56797028]
[192.41450500 106.74291229]
[180.86874390 116.31868744]
[166.03099060 118.51893616]
[152.20516968 112.70722961]
[165.47804260 119.69514465]
[178.75090027 126.68305969]
[192.02377319 133.67097473]
[205.29664612 140.65888977]
[218.56950378 147.64680481]
[231.84237671 154.63471985]
[239.90097046 144.52354431]
[255.43597412 140.47731018]
[270.26666260 138.22987366]
[285.09732056 135.98243713]
[299.92800903 133.73500061]
[314.75869751 131.48756409]
[327.24380493 121.76994324]
[340.98669434 127.51298523]
[355.81735229 125.26554871]
[365.19250488 112.82591248]
[380.26492310 110.75795746]
[392.06643677 119.77237701]
[401.23828125 106.90174866]
[416.83825684 104.36872864]
[429.61120605 113.67612457]
[431.97912598 129.30201721]
[422.53723145 141.97583008]
[406.88717651 144.17843628]
[394.31387329 134.60305786]
[385.71298218 146.70924377]
[370.70458984 149.19973755]
[358.06478882 140.09622192]
[343.23413086 142.34365845]
[331.80978394 151.90054321]
[317.00613403 146.31825256]
[302.17544556 148.56568909]
[287.34475708 150.81312561]
[272.51409912 153.06056213]
[257.68341064 155.30799866]
[253.35913086 169.67115784]
[264.48391724 179.73292542]
[275.60870361 189.79470825]
[286.98214722 199.57449341]
[298.59716797 209.06614685]
[310.21218872 218.55780029]
[324.54672241 213.04266357]
[339.71585083 215.44952393]
[351.63916016 225.13095093]
[357.10934448 239.48269653]
[354.65493774 254.64421082]
[344.93618774 266.53710938]
[330.56738281 271.96231079]
[315.41363525 269.46038818]
[303.55123901 259.70440674]
[298.17111206 245.31864929]
[300.72052002 230.17282104]
[289.10549927 220.68115234]
[277.49050903 211.18949890]
[273.94580078 211.18522644]
[270.22857666 209.45137024]
[267.15744019 205.92646790]
[265.54693604 200.91947937]
[254.42213440 190.85771179]
[243.29736328 180.79594421]
[250.26354980 194.08023071]
[251.79754639 209.00158691]
[247.67988586 223.42533875]
[238.49964905 235.28802490]
[225.57017517 242.89254761]
[210.74116516 245.15098572]
[196.13407898 241.74026489]
[183.83862305 233.14830017]
[175.61380005 220.60427856]
[172.63626099 205.90278625]
[175.33198547 191.14700317]
[183.31530762 178.44792175]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 121]
[3 120]
[4 119]
[5 118]
[6 117]
[7 116]
[8 115]
[9 25]
[10 24]
[11 23]
[12 22]
[29 88]
[30 87]
[31 86]
[32 85]
[33 84]
[34 83]
[35 82]
[36 81]
[37 54]
[38 53]
[39 52]
[42 49]
[43 48]
[56 80]
[57 79]
[58 78]
[59 77]
[60 76]
[61 75]
[62 74]
[63 73]
[90 105]
[91 104]
[92 103]
[93 102]
[94 101]
[123 150]
[124 149]
[125 148]
[126 147]
[127 146]
[129 144]
[130 143]
[133 140]
[151 175]
[152 174]
[153 173]
[154 169]
[155 168]
[156 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
