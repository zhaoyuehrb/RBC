%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 22:52:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGAGACCUCAUGUGAAGCCUCCCUGCCCCAGCACCCUUCCCAUUGCCCUUCAGAGGAGCAGUUCUUGGAUGACCCAGAUUUGAAUCAUUAAAGUAGACUCUCAUGCA\
) } def
/len { sequence length } bind def

/coor [
[88.49882507 189.88078308]
[98.85790253 177.94491577]
[97.56253052 163.00094604]
[96.26715851 148.05699158]
[94.97178650 133.11302185]
[93.67641449 118.16906738]
[91.09844208 132.94587708]
[77.12277222 138.39387512]
[65.22408295 129.26036072]
[66.87451935 114.35142517]
[80.48309326 108.04158783]
[65.48464966 107.82543182]
[50.48620605 107.60927582]
[36.57596970 115.14690399]
[23.96151733 107.22700500]
[8.96307373 107.01084137]
[-6.03536844 106.79468536]
[-21.03381157 106.57852936]
[-27.61911774 119.01281738]
[-38.88557053 127.33019257]
[-52.57718658 129.93673706]
[-65.98315430 126.37497711]
[-76.47451019 117.40291595]
[-82.01972198 104.83364868]
[-97.00570679 104.18535614]
[-111.99169159 103.53706360]
[-128.07734680 108.89319611]
[-137.67710876 94.91889954]
[-126.90641022 81.82582855]
[-111.34339905 88.55107880]
[-96.35741425 89.19937134]
[-81.37142944 89.84766388]
[-73.08852386 76.05498505]
[-58.91973877 68.23816681]
[-42.64820099 68.59135437]
[-28.67250633 77.11281586]
[-20.81765366 91.58008575]
[-5.81921148 91.79624176]
[9.17923069 92.01240540]
[24.17767334 92.22856140]
[37.01512146 84.67546844]
[50.70236206 92.61083221]
[65.70080566 92.82698822]
[80.69924927 93.04314423]
[90.91692352 82.06137848]
[89.62155151 67.11741638]
[88.32617950 52.17345810]
[86.81558990 37.24971390]
[85.09010315 22.34928703]
[83.36460876 7.44886160]
[73.15673065 -5.38590336]
[79.41894531 -20.54231071]
[95.70923615 -22.42874527]
[105.26953888 -9.10460854]
[98.26503754 5.72337246]
[99.99052429 20.62379837]
[101.71601868 35.52422333]
[105.67171478 41.90325546]
[103.27014160 50.87808609]
[104.56551361 65.82204437]
[105.86088562 80.76600647]
[117.27398682 90.49951172]
[132.23506165 89.41961670]
[147.19615173 88.33972931]
[162.11988831 86.82914734]
[176.99389648 84.88911438]
[191.86791992 82.94908142]
[204.55146790 73.49191284]
[218.17254639 79.51814270]
[233.04656982 77.57810974]
[247.92057800 75.63807678]
[262.79458618 73.69804382]
[277.66860962 71.75801086]
[287.29916382 59.51505661]
[302.41116333 57.75947571]
[314.02362061 67.01619720]
[328.89761353 65.07616425]
[341.58395386 54.68438721]
[356.82904053 60.72754669]
[358.95001221 76.98895264]
[345.76504517 86.74027252]
[330.83764648 79.95018005]
[315.96365356 81.89021301]
[307.11404419 93.81581116]
[292.05731201 95.99517059]
[279.60864258 86.63202667]
[264.73461914 88.57205963]
[249.86061096 90.51209259]
[234.98660278 92.45212555]
[220.11257935 94.39215851]
[208.49291992 103.71055603]
[193.80795288 97.82309723]
[178.93392944 99.76313019]
[164.05992126 101.70315552]
[160.41163635 104.99746704]
[154.61027527 105.93345642]
[148.27603149 103.30081177]
[133.31495667 104.38069916]
[118.35387421 105.46058655]
[108.62037659 116.87369537]
[109.91574860 131.81765747]
[111.21112061 146.76161194]
[112.50649261 161.70558167]
[113.80186462 176.64953613]
[126.06025696 186.62489319]
[127.59147644 202.35482788]
[117.48708344 214.50706482]
[101.74183655 215.87188721]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 104]
[3 103]
[4 102]
[5 101]
[6 100]
[11 44]
[12 43]
[13 42]
[15 40]
[16 39]
[17 38]
[18 37]
[24 32]
[25 31]
[26 30]
[45 61]
[46 60]
[47 59]
[48 57]
[49 56]
[50 55]
[62 99]
[63 98]
[64 97]
[65 94]
[66 93]
[67 92]
[69 90]
[70 89]
[71 88]
[72 87]
[73 86]
[76 83]
[77 82]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
