%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 19:12:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACGGAGCAGGCUGGUCCUGCCUUGACCCAGCCCGGUGGCUCUUACUCUCGCCAGGAACAGGCUCCGACGAGAUCUUCCUGGCACCCUGAGGGUCGUCCUCCAGCAGGGGCUUCUUGGACCCCUGUCUGAGGGGUCGCGUCUUAGUGGGCGGGAUUCUUUUCCCUUUGAAUAAAAAUGGAUUCAAACCCAGCA\
) } def
/len { sequence length } bind def

/coor [
[88.95073700 176.77536011]
[88.70908356 161.77729797]
[81.34525299 154.42222595]
[75.88190460 146.36268616]
[72.34853363 137.99375916]
[61.69929504 148.55755615]
[51.05006027 159.12135315]
[40.40082550 169.68515015]
[29.75158882 180.24894714]
[25.49529839 202.24285889]
[4.38870955 207.01327515]
[-5.55813026 218.24093628]
[-15.50497055 229.46859741]
[-25.45181084 240.69625854]
[-35.39865112 251.92391968]
[-45.34548950 263.15158081]
[-44.57342529 278.70925903]
[-54.82088089 289.95401001]
[-69.65751648 290.59417725]
[-68.45322418 306.35253906]
[-78.80774689 318.29235840]
[-94.57793427 319.32995605]
[-106.40761566 308.84979248]
[-107.27845001 293.06951904]
[-96.67378235 281.35128784]
[-80.88517761 280.64733887]
[-82.03803253 265.84173584]
[-72.11046600 254.31358337]
[-56.57315063 253.20474243]
[-46.62631226 241.97708130]
[-36.67947006 230.74942017]
[-26.73263168 219.52175903]
[-16.78579140 208.29409790]
[-6.83895159 197.06643677]
[-8.98685169 189.45652771]
[-7.93212605 181.52508545]
[-3.77354455 174.57957458]
[2.87240863 169.79454041]
[10.96197701 168.01321411]
[19.18779182 169.59970093]
[29.83702850 159.03590393]
[40.48626328 148.47210693]
[51.13549805 137.90832520]
[61.78473663 127.34452057]
[58.44925308 121.94686127]
[55.87135315 116.14904785]
[54.09803772 110.05680084]
[53.16164017 103.78118134]
[53.07923126 97.43663025]
[53.85231781 91.13880920]
[55.46680069 85.00255585]
[57.89324188 79.13973999]
[45.68735886 70.42100525]
[33.48147583 61.70226288]
[21.27559471 52.98352432]
[9.06971169 44.26478195]
[-3.13617134 35.54604340]
[-15.34205437 26.82730293]
[-21.89613724 25.80699158]
[-26.28433990 22.16942787]
[-27.79459190 17.62583923]
[-39.71325684 8.51840210]
[-51.63191986 -0.58903551]
[-63.62356186 -9.60016918]
[-75.68740082 -18.51441574]
[-87.75124359 -27.42866135]
[-104.09823608 -28.73550606]
[-110.89464569 -43.66001129]
[-101.14891052 -56.84912109]
[-84.88660431 -54.73501587]
[-78.83699799 -39.49250031]
[-66.77315521 -30.57825470]
[-54.70931625 -21.66400909]
[-47.45174789 -20.21546555]
[-42.52448273 -12.50770092]
[-30.60581970 -3.40026307]
[-18.68715286 5.70717430]
[-6.62331438 14.62141991]
[5.58256865 23.34016037]
[17.78845215 32.05889893]
[29.99433517 40.77764130]
[42.20021820 49.49637985]
[54.40610123 58.21511841]
[66.61198425 66.93386078]
[92.83602142 53.55856705]
[121.87162018 58.40959930]
[130.88275146 46.41795731]
[139.79699707 34.35411835]
[148.61378479 22.21886253]
[157.43055725 10.08360863]
[166.24734497 -2.05164647]
[175.06411743 -14.18690109]
[183.88088989 -26.32215691]
[181.61090088 -41.73270035]
[190.72525024 -53.91397858]
[205.43083191 -55.98309708]
[214.24760437 -68.11835480]
[216.09954834 -83.83079529]
[229.84005737 -89.57950592]
[238.65682983 -101.71475983]
[247.47360229 -113.85001373]
[256.29037476 -125.98526764]
[265.00912476 -138.19114685]
[273.62927246 -150.46687317]
[282.24938965 -162.74258423]
[290.77035522 -175.08734131]
[299.19161987 -187.50035095]
[307.61288452 -199.91334534]
[316.03411865 -212.32633972]
[324.45538330 -224.73933411]
[332.87664795 -237.15232849]
[341.19763184 -249.63275146]
[349.41781616 -262.17980957]
[349.80130005 -278.57446289]
[364.31906128 -286.20120239]
[378.03646851 -277.21426392]
[376.84222412 -260.85864258]
[361.96487427 -253.95962524]
[353.74468994 -241.41256714]
[352.70745850 -234.08489990]
[345.28964233 -228.73107910]
[336.86837769 -216.31808472]
[328.44714355 -203.90509033]
[320.02587891 -191.49208069]
[311.60461426 -179.07908630]
[303.18338013 -166.66609192]
[302.02822876 -159.35607910]
[294.52511597 -154.12245178]
[285.90496826 -141.84674072]
[277.28485107 -129.57101440]
[276.01208496 -122.28056335]
[268.42562866 -117.16849518]
[259.60885620 -105.03323364]
[250.79208374 -92.89797974]
[241.97531128 -80.76272583]
[240.75401306 -65.91827393]
[226.38287354 -59.30157471]
[217.56608582 -47.16631699]
[220.14251709 -32.54108047]
[211.37391663 -20.10860634]
[196.01615906 -17.50537682]
[187.19937134 -5.37012243]
[178.38259888 6.76513243]
[169.56581116 18.90038681]
[160.74903870 31.03564262]
[151.93225098 43.17089844]
[150.54222107 50.43989944]
[142.87440491 55.42909241]
[133.86326599 67.42073059]
[147.92016602 79.14720917]
[157.44427490 96.84840393]
[159.98040771 118.60833740]
[173.82701111 124.37648773]
[187.67361450 130.14463806]
[201.52021790 135.91278076]
[216.03634644 129.66316223]
[230.68884277 135.58601379]
[236.78462219 150.16740417]
[230.70719910 164.75645447]
[216.06217957 170.69773865]
[201.53819275 164.46640015]
[195.75207520 149.75938416]
[181.90547180 143.99124146]
[168.05886841 138.22308350]
[154.21226501 132.45494080]
[144.72558594 144.07402039]
[153.14683533 156.48701477]
[161.56808472 168.90000916]
[169.98934937 181.31300354]
[178.41059875 193.72599792]
[186.83184814 206.13899231]
[195.25311279 218.55200195]
[210.76588440 218.91728210]
[223.08082581 228.35771179]
[227.46257019 243.24327087]
[222.22627258 257.85015869]
[209.38537598 266.56170654]
[193.87748718 266.02816772]
[181.66567993 256.45468140]
[177.44566345 241.52246094]
[182.84010315 226.97325134]
[174.41885376 214.56025696]
[165.99760437 202.14726257]
[157.57633972 189.73425293]
[149.15509033 177.32125854]
[140.73384094 164.90826416]
[132.31257629 152.49526978]
[125.16122437 154.75537109]
[129.68118286 169.05816650]
[115.37832642 173.57791138]
[110.85849762 159.27555847]
[103.70713806 161.53564453]
[103.94878387 176.53370667]
[106.44958496 195.75337219]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 193]
[2 192]
[5 44]
[6 43]
[7 42]
[8 41]
[9 40]
[11 34]
[12 33]
[13 32]
[14 31]
[15 30]
[16 29]
[19 26]
[52 84]
[53 83]
[54 82]
[55 81]
[56 80]
[57 79]
[58 78]
[61 77]
[62 76]
[63 75]
[64 73]
[65 72]
[66 71]
[86 149]
[87 148]
[88 146]
[89 145]
[90 144]
[91 143]
[92 142]
[93 141]
[96 138]
[97 137]
[99 135]
[100 134]
[101 133]
[102 132]
[103 130]
[104 129]
[105 128]
[106 126]
[107 125]
[108 124]
[109 123]
[110 122]
[111 121]
[112 119]
[113 118]
[152 165]
[153 164]
[154 163]
[155 162]
[166 187]
[167 186]
[168 185]
[169 184]
[170 183]
[171 182]
[172 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
