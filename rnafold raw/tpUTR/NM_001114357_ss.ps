%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 02:11:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACUGGAAGACAAGUAGCUUUCUAGAUCUUAACUAUGAGUAAUUCACUAUCAAGAGCUAAUUAUUUGAAAAAAUAUAAGAUGUUAUGGAGCAGAUAGCUCAAGCAGUUAAAAGAAAUUCUGCAACUCUAAUUCUCUUCCUUAUUUUAAUACUACUAGUUAAUAAAUAGUAUUUGCUAAUAACA\
) } def
/len { sequence length } bind def

/coor [
[258.51724243 389.18109131]
[248.51159668 378.00579834]
[246.85488892 363.09756470]
[254.16297913 349.99826050]
[267.71920776 343.57727051]
[282.48532104 346.22207642]
[273.26156616 334.39321899]
[264.03781128 322.56436157]
[254.81404114 310.73547363]
[245.59027100 298.90661621]
[236.36650085 287.07772827]
[222.43870544 281.79891968]
[220.05430603 266.15841675]
[210.83053589 254.32955933]
[196.90274048 249.05075073]
[194.51834106 233.41024780]
[185.29457092 221.58139038]
[176.07081604 209.75251770]
[161.30343628 208.18394470]
[151.78071594 196.31918335]
[153.52612305 180.84043884]
[144.30235291 169.01158142]
[130.37455750 163.73275757]
[127.99015045 148.09226990]
[118.76638794 136.26339722]
[109.54261780 124.43452454]
[100.31885529 112.60565948]
[90.79679871 101.01555634]
[80.98264313 89.67173004]
[71.16848755 78.32791138]
[61.16311646 67.15237427]
[50.96942139 56.14834976]
[40.77572250 45.14432526]
[30.58202744 34.14030075]
[20.38833237 23.13627434]
[0.88972569 18.08015442]
[-2.62815738 -0.91984135]
[-13.18963432 -11.57137680]
[-23.75111198 -22.22291183]
[-34.31258774 -32.87444687]
[-44.87406540 -43.52598190]
[-60.08502197 -47.87769699]
[-63.55199814 -62.36318207]
[-74.11347198 -73.01471710]
[-84.67494965 -83.66625214]
[-100.25001526 -83.90106964]
[-110.80912018 -94.85369873]
[-110.48927307 -109.70069122]
[-121.05075073 -120.35222626]
[-129.33541870 -124.25480652]
[-131.69921875 -131.27545166]
[-142.07829285 -142.10478210]
[-152.45738220 -152.93412781]
[-165.32708740 -153.99194336]
[-173.74952698 -163.24462891]
[-173.60478210 -175.35464478]
[-183.79847717 -186.35867310]
[-193.99217224 -197.36268616]
[-211.01147461 -193.06225586]
[-227.78306580 -197.93568420]
[-239.72529602 -210.55798340]
[-243.62319946 -227.40029907]
[-238.49374390 -243.81616211]
[-249.05520630 -254.46769714]
[-259.61669922 -265.11923218]
[-270.17816162 -275.77075195]
[-280.73965454 -286.42230225]
[-296.69549561 -290.20953369]
[-301.13369751 -305.99667358]
[-289.48861694 -317.54330444]
[-273.73971558 -312.97119141]
[-270.08810425 -296.98376465]
[-259.52664185 -286.33224487]
[-248.96514893 -275.68069458]
[-238.40367126 -265.02917480]
[-227.84220886 -254.37763977]
[-216.01783752 -258.89785767]
[-203.31561279 -258.60125732]
[-191.62936401 -253.49667358]
[-182.71487427 -244.31233215]
[-177.92605591 -232.39230347]
[-178.00949097 -219.49980164]
[-182.98814392 -207.55638123]
[-172.79444885 -196.55236816]
[-162.60075378 -185.54833984]
[-145.58732605 -181.28587341]
[-141.62803650 -163.31321716]
[-131.24894714 -152.48387146]
[-120.86987305 -141.65452576]
[-110.39921570 -130.91371155]
[-99.83773804 -120.26216888]
[-84.98856354 -120.45594788]
[-74.12598419 -109.80422974]
[-74.02341461 -94.22772980]
[-63.46194077 -83.57619476]
[-52.90046310 -72.92465973]
[-38.44493484 -69.33481598]
[-34.22253036 -54.08745956]
[-23.66105270 -43.43592453]
[-13.09957600 -32.78438950]
[-2.53809905 -22.13285446]
[8.02337837 -11.48131847]
[18.23218155 -12.35574818]
[27.42398262 -7.35087061]
[32.43577576 2.08684158]
[31.39235687 12.94257927]
[41.58605194 23.94660378]
[51.77974701 34.95063019]
[61.97344589 45.95465469]
[72.16713715 56.95867920]
[76.84215546 58.03211212]
[80.88426971 62.06775284]
[82.51230621 68.51374817]
[92.32646942 79.85757446]
[102.14062500 91.20139313]
[105.93500519 92.02151489]
[109.34463501 94.52092743]
[111.62310028 98.48759460]
[112.14772034 103.38188934]
[121.37149048 115.21076202]
[130.59526062 127.03962708]
[139.81901550 138.86849976]
[154.40655518 144.99339294]
[156.13121033 159.78781128]
[165.35498047 171.61668396]
[180.79228210 173.69689941]
[189.97799683 185.82446289]
[187.89967346 200.52874756]
[197.12344360 212.35762024]
[206.34721375 224.18649292]
[220.93475342 230.31137085]
[222.65940857 245.10578918]
[231.88317871 256.93466187]
[246.47071838 263.05957031]
[248.19537354 277.85397339]
[257.41912842 289.68283081]
[266.64291382 301.51171875]
[275.86666870 313.34057617]
[285.09042358 325.16943359]
[294.31420898 336.99832153]
[304.31958008 348.17385864]
[315.06039429 358.64450073]
[325.80123901 369.11517334]
[336.54205322 379.58581543]
[347.28286743 390.05648804]
[366.18481445 389.07855225]
[379.58624268 401.98886108]
[379.32330322 420.27661133]
[390.41348267 430.37649536]
[401.50366211 440.47640991]
[412.59384155 450.57629395]
[423.68402100 460.67620850]
[434.77420044 470.77609253]
[445.86437988 480.87597656]
[460.00057983 475.12011719]
[475.23373413 476.07629395]
[488.53921509 483.55468750]
[497.27529907 496.07043457]
[499.70733643 511.13854980]
[495.35250854 525.76721191]
[485.07543945 537.05194092]
[470.91668701 542.75207520]
[455.68743896 541.73596191]
[442.41146851 534.20520020]
[433.72476196 521.65515137]
[431.35208130 506.57757568]
[435.76446533 491.96615601]
[424.67428589 481.86627197]
[413.58410645 471.76638794]
[402.49392700 461.66647339]
[391.40374756 451.56658936]
[380.31356812 441.46667480]
[369.22338867 431.36679077]
[358.18646240 434.36035156]
[346.96139526 431.61584473]
[338.37429810 423.70483398]
[334.64459229 412.51425171]
[336.81222534 400.79730225]
[326.07138062 390.32666016]
[315.33056641 379.85598755]
[304.58975220 369.38534546]
[293.84890747 358.91467285]
[294.85131836 373.88113403]
[286.97674561 386.64794922]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 140]
[7 139]
[8 138]
[9 137]
[10 136]
[11 135]
[13 133]
[14 132]
[16 130]
[17 129]
[18 128]
[21 125]
[22 124]
[24 122]
[25 121]
[26 120]
[27 119]
[28 115]
[29 114]
[30 113]
[31 110]
[32 109]
[33 108]
[34 107]
[35 106]
[37 102]
[38 101]
[39 100]
[40 99]
[41 98]
[43 96]
[44 95]
[45 94]
[48 91]
[49 90]
[51 89]
[52 88]
[53 87]
[56 85]
[57 84]
[58 83]
[63 76]
[64 75]
[65 74]
[66 73]
[67 72]
[141 182]
[142 181]
[143 180]
[144 179]
[145 178]
[148 173]
[149 172]
[150 171]
[151 170]
[152 169]
[153 168]
[154 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
