%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 02:48:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCCUAAAGAGAAAUGAGCAUACACCAAGAAACUCACCUGUUUAGUAGUUGUACAAAAACUAGCGGACAGUGGUCAGUUAAAAAAAAAAAAAAAAGAUAAUCAUGUUACUUAAGUUACUGAAGCACUUCAGUUCCAUAUGAAGAUAAUCUAUUACCCUUCAUGAACUUGAUUUAAUAUCACCUCUCUUAAACUUUC\
) } def
/len { sequence length } bind def

/coor [
[84.46038818 496.10934448]
[72.69919586 486.54638672]
[64.92068481 473.53598022]
[62.06413651 458.64923096]
[64.47450256 443.68371582]
[71.86071014 430.44668579]
[83.33084869 420.53649902]
[97.49983978 415.14987183]
[97.26185608 400.15176392]
[97.02386475 385.15365601]
[96.78587341 370.15554810]
[96.54788208 355.15744019]
[96.30989838 340.15933228]
[85.46666718 330.01239014]
[85.01165771 314.80557251]
[95.72820282 303.50100708]
[95.49021149 288.50289917]
[95.25222015 273.50476074]
[80.94478607 269.16217041]
[68.66347504 260.59832764]
[59.61824799 248.64157104]
[54.70496368 234.45529175]
[54.41667938 219.42466736]
[58.79421997 205.02146912]
[67.42090607 192.65989685]
[79.46223450 183.55775452]
[93.74653625 178.61648560]
[93.50855255 163.61837769]
[93.27056122 148.62025452]
[93.03256989 133.62214661]
[66.55932617 119.44725800]
[59.05841446 86.75050354]
[44.37637711 83.67840576]
[29.69433975 80.60630798]
[15.01230335 77.53420258]
[-0.07999010 82.28112793]
[-10.95282459 72.10121155]
[-25.63486099 69.02910614]
[-40.31689835 65.95700836]
[-55.04582977 63.11824036]
[-69.81794739 60.51351929]
[-84.59005737 57.90879440]
[-99.36217499 55.30407333]
[-114.13429260 52.69934845]
[-126.99009705 61.49514389]
[-141.93402100 58.64315033]
[-150.24023438 46.33289719]
[-165.01235962 43.72817612]
[-179.78446960 41.12345123]
[-194.55659485 38.51873016]
[-209.32870483 35.91400528]
[-221.19068909 46.10358047]
[-236.82774353 46.23281860]
[-248.85652161 36.24069977]
[-251.59741211 20.84519386]
[-243.75624084 7.31559229]
[-229.03538513 2.04015636]
[-214.38555908 7.50978613]
[-206.72398376 21.14188957]
[-191.95187378 23.74661255]
[-177.17974854 26.35133553]
[-162.40763855 28.95605850]
[-147.63551331 31.56078148]
[-135.61987305 22.83382034]
[-120.60173798 25.26494598]
[-111.52957153 37.92723465]
[-96.75745392 40.53195572]
[-81.98533630 43.13667679]
[-67.21321869 45.74140167]
[-52.44110489 48.34612274]
[-48.07679749 46.38280106]
[-42.43190765 47.14777756]
[-37.24479675 51.27497101]
[-22.56276131 54.34707260]
[-7.88072443 57.41917038]
[6.16141129 52.45251465]
[18.08440399 62.85216904]
[32.76644135 65.92427063]
[47.44847488 68.99636841]
[62.13051224 72.06846619]
[68.27415466 67.76664734]
[56.86229706 58.03168106]
[45.45043945 48.29671860]
[30.97877693 44.35071182]
[20.88157845 33.25807571]
[18.30963516 18.48021889]
[24.06550980 4.62850761]
[36.35310745 -3.97468734]
[51.33813095 -4.64477444]
[64.34457397 2.82734418]
[71.31381989 16.11002541]
[70.07185364 31.05661774]
[75.31664276 45.10980988]
[80.56143188 59.16299820]
[86.70507812 54.86117554]
[88.83979797 40.01385498]
[90.97451782 25.16653252]
[89.09711456 16.21594810]
[93.26270294 10.10131550]
[95.63272095 -4.71026754]
[98.00273895 -19.52185059]
[100.37276459 -34.33343506]
[96.90497589 -50.92893982]
[111.89194489 -58.85529709]
[123.65734100 -46.64825821]
[115.18434906 -31.96341324]
[112.81432343 -17.15183067]
[110.44430542 -2.34024644]
[108.07428741 12.47133636]
[105.82183838 27.30125618]
[103.68711853 42.14857864]
[101.55239868 56.99589920]
[109.18726349 60.93214417]
[115.38151550 66.09047699]
[119.97108459 72.06884003]
[121.00405884 56.52629471]
[132.48359680 46.54256439]
[147.29466248 47.62313080]
[158.47363281 37.62159348]
[169.65260315 27.62005997]
[180.83157349 17.61852455]
[192.01052856 7.61698961]
[203.18949890 -2.38454509]
[207.78973389 -18.12525558]
[223.78366089 -21.74829674]
[234.71809387 -9.52659512]
[229.34463501 5.96721077]
[213.19104004 8.79442120]
[202.01206970 18.79595566]
[190.83309937 28.79749107]
[179.65414429 38.79902649]
[168.47517395 48.80056000]
[157.29620361 58.80209732]
[156.72846985 73.64167786]
[145.53388977 83.94390869]
[129.97262573 83.24781036]
[132.53607178 89.02740479]
[133.99635315 95.17904663]
[148.94917297 96.36779785]
[163.90199280 97.55654907]
[178.85482788 98.74529266]
[193.80764771 99.93404388]
[208.76046753 101.12279510]
[223.71328735 102.31154633]
[230.95341492 88.91376495]
[243.02093506 79.62425995]
[257.82507324 76.05247498]
[272.80090332 78.81726074]
[285.35379028 87.43959808]
[293.30889893 100.42560577]
[295.28790283 115.52539062]
[290.94796753 130.12281799]
[281.04098511 141.68878174]
[267.28341675 148.21943665]
[252.05885315 148.58329773]
[238.00503540 142.71731567]
[227.55685425 131.63780212]
[222.52453613 117.26436615]
[207.57171631 116.07561493]
[192.61889648 114.88686371]
[177.66607666 113.69812012]
[162.71325684 112.50936890]
[147.76042175 111.32061768]
[132.80760193 110.13186646]
[127.44654083 120.63204193]
[118.84973145 128.69984436]
[108.03068542 133.38415527]
[108.26866913 148.38226318]
[108.50666046 163.38038635]
[108.74465179 178.37849426]
[123.17854309 182.86405945]
[135.50259399 191.57957458]
[144.51715088 203.66122437]
[149.34947205 217.91827393]
[149.53822327 232.95046997]
[145.07751465 247.28550720]
[136.41619873 259.52322388]
[124.41278839 268.47244263]
[110.25033569 273.26678467]
[110.48832703 288.26489258]
[110.72631073 303.26300049]
[121.79613495 314.22189331]
[121.82383728 329.43548584]
[111.30800629 339.92132568]
[111.54599762 354.91943359]
[111.78398895 369.91757202]
[112.02197266 384.91567993]
[112.25996399 399.91378784]
[112.49795532 414.91189575]
[126.83071899 419.84622192]
[138.60951233 429.38751221]
[146.41198730 442.38354492]
[149.29595947 457.26501465]
[146.91317749 472.23492432]
[139.55137634 485.48559570]
[128.09951782 495.41690063]
[113.94048309 500.82958984]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 189]
[9 188]
[10 187]
[11 186]
[12 185]
[13 184]
[16 181]
[17 180]
[18 179]
[27 170]
[28 169]
[29 168]
[30 167]
[32 80]
[33 79]
[34 78]
[35 77]
[37 75]
[38 74]
[39 73]
[40 70]
[41 69]
[42 68]
[43 67]
[44 66]
[47 63]
[48 62]
[49 61]
[50 60]
[51 59]
[95 112]
[96 111]
[97 110]
[99 109]
[100 108]
[101 107]
[102 106]
[115 136]
[118 133]
[119 132]
[120 131]
[121 130]
[122 129]
[123 128]
[138 164]
[139 163]
[140 162]
[141 161]
[142 160]
[143 159]
[144 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
