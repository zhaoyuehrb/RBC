%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 12:58:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGGUGGCUUUGAUUGGUGUACAGUAUUUCAAAGGACUAGUAUUAAACUUGUGAUUUUUGUUUUGUUUUUAAGGAAUACAAAAAAUAAACAUUUACUAAAAACGUUUA\
) } def
/len { sequence length } bind def

/coor [
[133.48347473 222.28109741]
[128.48638916 208.13793945]
[123.48928833 193.99476624]
[118.49218750 179.85160828]
[113.49509430 165.70845032]
[108.22251892 160.37226868]
[108.56288147 151.09375000]
[103.96802521 136.81484985]
[82.40084839 132.57833862]
[67.03462982 116.86303711]
[52.57357025 120.84774780]
[38.11251450 124.83245087]
[23.65146065 128.81715393]
[9.19040585 132.80186462]
[-5.27064943 136.78657532]
[-19.48310852 141.58302307]
[-33.40144348 147.17587280]
[-47.31977844 152.76872253]
[-54.91331863 166.90087891]
[-70.72195435 169.63339233]
[-82.61865234 158.87011719]
[-81.47728729 142.86770630]
[-68.17341614 133.90185547]
[-52.91262436 138.85038757]
[-38.99428940 133.25753784]
[-25.07595444 127.66468811]
[-23.87282753 124.97775269]
[-21.45398903 122.64421844]
[-17.96354675 121.16083527]
[-13.73416424 120.95665741]
[-9.25535583 122.32551575]
[5.20569992 118.34080505]
[19.66675568 114.35610199]
[34.12781143 110.37139130]
[48.58886719 106.38668823]
[63.04991913 102.40198517]
[65.64205933 86.19384766]
[74.98568726 72.69867706]
[67.30261993 59.81572723]
[53.58881760 51.92634964]
[53.71512985 37.03227997]
[46.03205490 24.14933205]
[38.34897995 11.26638317]
[23.21042824 5.95566130]
[18.06003761 -9.23818684]
[26.84874725 -22.65974236]
[42.83461380 -24.01313400]
[53.75464630 -12.26015854]
[51.23192978 3.58330941]
[58.91500473 16.46625900]
[66.59807587 29.34920692]
[79.76232910 36.31711197]
[80.18556213 52.13265610]
[87.86863708 65.01560211]
[100.42142487 62.97433090]
[112.92449951 65.30078888]
[123.90293121 71.72054291]
[135.70564270 62.46333313]
[147.50836182 53.20612335]
[159.31108093 43.94891357]
[171.11378479 34.69170761]
[182.91650391 25.43449783]
[194.71922302 16.17728996]
[200.80281067 1.57247508]
[215.59228516 -0.19404866]
[227.39500427 -9.45125675]
[233.47857666 -24.05607224]
[248.26805115 -25.82259560]
[260.07077026 -35.07980347]
[265.67990112 -50.48985672]
[281.87475586 -53.07037354]
[291.99542236 -40.16674042]
[285.63067627 -25.05311012]
[269.32797241 -23.27708817]
[257.52526855 -14.01988029]
[252.28588867 -0.07720291]
[236.65220642 2.35145831]
[224.84948730 11.60866642]
[219.61012268 25.55134392]
[203.97642517 27.98000526]
[192.17372131 37.23721313]
[180.37100220 46.49442291]
[168.56828308 55.75163269]
[156.76556396 65.00884247]
[144.96286011 74.26604462]
[133.16014099 83.52325439]
[136.22709656 92.33998108]
[136.99157715 101.64355469]
[135.40501404 110.84265900]
[131.56822205 119.35265350]
[125.72507477 126.63265228]
[118.24693298 132.21998596]
[122.84179688 146.49888611]
[127.63825226 160.71134949]
[132.63534546 174.85450745]
[137.63244629 188.99768066]
[142.62954712 203.14083862]
[147.62664795 217.28399658]
[162.81105042 218.44750977]
[176.20635986 225.69219971]
[185.49176025 237.76287842]
[189.05848694 252.56822205]
[186.28860474 267.54312134]
[177.66200256 280.09307861]
[164.67327881 288.04376221]
[149.57283020 290.01763916]
[134.97688293 285.67272949]
[123.41427612 275.76181030]
[116.88831329 262.00201416]
[116.52964020 246.77732849]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 98]
[2 97]
[3 96]
[4 95]
[5 94]
[7 93]
[8 92]
[10 36]
[11 35]
[12 34]
[13 33]
[14 32]
[15 31]
[16 26]
[17 25]
[18 24]
[38 54]
[39 53]
[41 51]
[42 50]
[43 49]
[57 86]
[58 85]
[59 84]
[60 83]
[61 82]
[62 81]
[63 80]
[65 78]
[66 77]
[68 75]
[69 74]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
