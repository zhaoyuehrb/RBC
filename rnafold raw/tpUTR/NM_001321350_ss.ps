%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 00:46:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAUGAGUUAAAGCAUGUGGAUGGCCUGGAGCUAUGUUUUUAAAAUUGUUAUUAAAUAUUGGUUUUUUACUUAAAUCAAUGAAAACUUUCUUUACUUUGUGGUUGUGUUCCUCAAAAUGAGAAUUUUUAACAAUAAUAAAAAUAAAGCUUGUUAGAUCAUUUUUAAUGGUAA\
) } def
/len { sequence length } bind def

/coor [
[43.04513550 638.73791504]
[37.97175598 652.85388184]
[32.89837646 666.96990967]
[27.82499886 681.08587646]
[22.75161934 695.20184326]
[31.59150887 707.95471191]
[31.21351624 723.46716309]
[21.76298904 735.77441406]
[6.87384558 740.14392090]
[-7.72873354 734.89569092]
[-16.42975807 722.04766846]
[-15.88350868 706.54022217]
[-6.30002642 694.33624268]
[8.63564205 690.12847900]
[13.70902157 676.01245117]
[18.78240013 661.89648438]
[23.85577965 647.78051758]
[28.92915916 633.66455078]
[32.56973267 619.11303711]
[34.74121475 604.27105713]
[36.91269684 589.42907715]
[39.08417892 574.58709717]
[41.25566101 559.74505615]
[43.42714691 544.90307617]
[37.61381912 531.18981934]
[47.26740265 518.65509033]
[49.43888474 503.81311035]
[51.61036682 488.97109985]
[53.51198578 474.09213257]
[55.14310837 459.18109131]
[56.77423096 444.27005005]
[58.40535355 429.35897827]
[60.03647614 414.44793701]
[53.72903824 400.95477295]
[62.92110825 388.07778931]
[64.55223083 373.16674805]
[66.18335724 358.25570679]
[67.81447601 343.34463501]
[69.44560242 328.43359375]
[71.07672119 313.52255249]
[72.70784760 298.61148071]
[74.33896637 283.70043945]
[64.84339142 272.28250122]
[66.28517151 257.13732910]
[78.32575226 247.25491333]
[79.95687866 232.34385681]
[81.58799744 217.43280029]
[83.21912384 202.52175903]
[84.85024261 187.61070251]
[86.48136902 172.69966125]
[88.11248779 157.78860474]
[78.61691284 146.37065125]
[80.05869293 131.22549438]
[92.09927368 121.34307098]
[93.73039246 106.43202209]
[76.75088501 107.39485168]
[60.84806442 92.78321838]
[51.94337082 80.71232605]
[43.03867722 68.64143372]
[34.13398361 56.57054138]
[25.22929001 44.49964905]
[16.32459641 32.42875671]
[7.41990232 20.35786629]
[-1.48479128 8.28697395]
[-10.38948441 -3.78391790]
[-26.00675201 -4.58075809]
[-37.42280960 -15.26755810]
[-39.24733734 -30.79833794]
[-30.61885643 -43.83993530]
[-15.61146832 -48.23451233]
[-1.31120217 -41.90707779]
[5.52979231 -27.84525871]
[1.68140733 -12.68861103]
[10.58610058 -0.61771923]
[19.49079514 11.45317268]
[28.39548683 23.52406502]
[37.30018234 35.59495544]
[46.20487595 47.66584778]
[55.10956955 59.73674011]
[64.01425934 71.80763245]
[72.91895294 83.87852478]
[80.41617584 84.08279419]
[73.27285767 70.89291382]
[81.12406158 58.11173248]
[96.11849213 58.52059555]
[103.26152039 71.71063232]
[95.41060638 84.49133301]
[102.90782928 84.69560242]
[112.45658875 73.12749481]
[122.00534821 61.55938339]
[131.55410767 49.99127197]
[141.10287476 38.42316437]
[138.28536987 25.23025513]
[143.51504517 13.00636578]
[154.67097473 6.13791561]
[167.55149841 6.94805288]
[177.30874634 -4.44475794]
[187.06599426 -15.83756924]
[196.82324219 -27.23038101]
[199.92337036 -42.74488068]
[214.07888794 -47.37852478]
[223.83613586 -58.77133560]
[221.09788513 -74.16730499]
[228.94136047 -87.69557190]
[243.66313171 -92.96849060]
[258.31201172 -87.49635315]
[265.97125244 -73.86293793]
[263.02441406 -58.50552750]
[250.86286926 -48.67541885]
[235.22894287 -49.01408768]
[225.47169495 -37.62127686]
[223.06947327 -22.92166710]
[208.21604919 -17.47313309]
[198.45880127 -6.08032274]
[188.70155334 5.31248808]
[178.94430542 16.70529938]
[180.96490479 33.38505554]
[170.09625244 46.63714981]
[152.67097473 47.97192383]
[143.12222290 59.54003525]
[133.57345581 71.10814667]
[124.02469635 82.67625427]
[114.47593689 94.24436188]
[108.64144897 108.06314087]
[107.01032257 122.97419739]
[116.62963867 135.22599792]
[114.76303864 150.32467651]
[103.02353668 159.41972351]
[101.39241791 174.33078003]
[99.76129150 189.24182129]
[98.13017273 204.15287781]
[96.49904633 219.06393433]
[94.86792755 233.97497559]
[93.23680115 248.88603210]
[102.85611725 261.13781738]
[100.98951721 276.23651123]
[89.25002289 285.33157349]
[87.61889648 300.24261475]
[85.98777771 315.15365601]
[84.35665131 330.06472778]
[82.72553253 344.97576904]
[81.09440613 359.88681030]
[79.46327972 374.79785156]
[77.83216095 389.70892334]
[84.02292633 404.26861572]
[74.94752502 416.07904053]
[73.31640625 430.99011230]
[71.68527985 445.90115356]
[70.05416107 460.81219482]
[68.42303467 475.72326660]
[70.75300598 481.97229004]
[69.70829010 487.60427856]
[66.45235443 491.14257812]
[64.28087616 505.98458862]
[62.10939407 520.82659912]
[67.76740265 535.60144043]
[58.26913452 547.07458496]
[56.09765244 561.91656494]
[53.92617035 576.75854492]
[51.75468826 591.60052490]
[49.58320618 606.44256592]
[47.41172409 621.28454590]
[57.85002518 610.51226807]
[72.06330109 605.71820068]
[86.89369202 607.96752930]
[99.04623413 616.76049805]
[105.82090759 630.14343262]
[105.71254730 645.14306641]
[98.74522400 658.42675781]
[86.46691132 667.04321289]
[71.60556793 669.07800293]
[57.46303940 664.07910156]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 18]
[2 17]
[3 16]
[4 15]
[5 14]
[19 162]
[20 161]
[21 160]
[22 159]
[23 158]
[24 157]
[26 155]
[27 154]
[28 153]
[29 150]
[30 149]
[31 148]
[32 147]
[33 146]
[35 144]
[36 143]
[37 142]
[38 141]
[39 140]
[40 139]
[41 138]
[42 137]
[45 134]
[46 133]
[47 132]
[48 131]
[49 130]
[50 129]
[51 128]
[54 125]
[55 124]
[57 81]
[58 80]
[59 79]
[60 78]
[61 77]
[62 76]
[63 75]
[64 74]
[65 73]
[88 123]
[89 122]
[90 121]
[91 120]
[92 119]
[96 116]
[97 115]
[98 114]
[99 113]
[101 111]
[102 110]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
