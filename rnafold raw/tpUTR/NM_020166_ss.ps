%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 06:03:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCCAGCAAGGAAAUGGCCAGUUAAGUAGUGUCUUCUCUCUCCACCAAAAAGAGGAAGUGCCUCCAGCUUUUCUGGGGGUCUCAUAAAGAGCAGUUUUACUAAAUGAUUGUAUGCUUAUGCUGAACACCUUUCAUAUUGGAGAAUCAUGCAUUUGGGUCACUAAUUAUCUCAAAAUAUUUCAUACUAAUAAAGUUGAAUUAUUUUUUAUUGGAAGCCAA\
) } def
/len { sequence length } bind def

/coor [
[451.50567627 314.53677368]
[452.38732910 292.53625488]
[439.15536499 285.47119141]
[425.92340088 278.40612793]
[412.69146729 271.34103394]
[399.45950317 264.27597046]
[386.22753906 257.21090698]
[374.81466675 264.13046265]
[361.36520386 264.51199341]
[349.38726807 258.14904785]
[342.05801392 246.60836792]
[341.38110352 232.84545898]
[328.25091553 225.59300232]
[315.12069702 218.34054565]
[301.99050903 211.08810425]
[288.75857544 204.02302551]
[275.42752075 197.14675903]
[261.36151123 201.90943909]
[247.74397278 195.12582397]
[242.84381104 180.33981323]
[229.51275635 173.46354675]
[216.18170166 166.58726501]
[202.85066223 159.71099854]
[189.47106934 152.92965698]
[176.04362488 146.24357605]
[162.61616516 139.55751038]
[149.18872070 132.87142944]
[135.76127625 126.18535614]
[122.33382416 119.49928284]
[113.40577698 126.44440460]
[102.52648163 129.54045105]
[91.27944183 128.33679199]
[81.30171204 123.00859833]
[74.04558563 114.33142853]
[59.50733948 118.02458954]
[44.96909714 121.71775055]
[30.43085098 125.41091156]
[22.89053345 130.55326843]
[15.65969086 129.05168152]
[1.07041693 132.53779602]
[-13.51885700 136.02392578]
[-28.10813141 139.51005554]
[-33.10696793 154.10510254]
[-45.21710205 163.66271973]
[-60.57423401 165.13313293]
[-74.27795410 158.04711914]
[-81.95545959 144.66581726]
[-81.15688324 129.25912476]
[-72.13705444 116.74329376]
[-57.77415848 111.11206055]
[-42.65134811 114.16233063]
[-31.59425926 124.92078400]
[-17.00498581 121.43465424]
[-2.41571116 117.94853210]
[12.17356300 114.46240234]
[26.73768997 110.87266541]
[41.27593613 107.17950439]
[55.81417847 103.48634338]
[70.35242462 99.79318237]
[64.66329193 97.72454071]
[59.13269043 95.00447845]
[45.61155319 88.50994873]
[32.09041977 82.01541901]
[18.56928635 75.52088928]
[5.04815102 69.02635956]
[-8.47298336 62.53182983]
[-21.99411774 56.03730011]
[-35.51525116 49.54277039]
[-51.06798935 53.47874069]
[-63.75454712 43.65882111]
[-63.84288025 27.61601067]
[-51.26523209 17.65698242]
[-35.67009354 21.42144966]
[-29.02072144 36.02163696]
[-15.49958706 42.51616669]
[-1.97845304 49.01069641]
[11.54268169 55.50522614]
[25.06381607 61.99975586]
[38.58494949 68.49428558]
[52.10608292 74.98881531]
[65.62722015 81.48334503]
[71.44797516 76.75378418]
[61.98885345 65.11226654]
[52.52972794 53.47074890]
[43.07060242 41.82923126]
[33.61166763 30.18755722]
[45.25349808 20.72881699]
[54.71212006 32.37010574]
[64.17124176 44.01162338]
[73.63037109 55.65314102]
[83.08949280 67.29466248]
[88.91025543 62.56509781]
[85.32051849 48.00096893]
[81.73078156 33.43684006]
[78.14105225 18.87271500]
[74.55131531 4.30858707]
[70.96157837 -10.25553989]
[56.33137894 -15.15051556]
[46.68791962 -27.19241142]
[45.10839844 -42.53870392]
[52.09682846 -56.29244232]
[65.42323303 -64.06486511]
[80.83519745 -63.37581635]
[93.41483307 -54.44516754]
[99.14801025 -40.12266159]
[96.20529938 -24.97855377]
[85.52571106 -13.84527493]
[89.11544037 0.71885204]
[92.70517731 15.28297901]
[96.29491425 29.84710693]
[99.88464355 44.41123199]
[103.47438049 58.97536087]
[128.40156555 78.85261536]
[129.01989746 106.07183075]
[142.44734192 112.75790405]
[155.87480164 119.44398499]
[169.30224609 126.13005829]
[182.72969055 132.81613159]
[196.15715027 139.50221252]
[205.22662354 140.52442932]
[209.72692871 146.37994385]
[223.05798340 153.25622559]
[236.38902283 160.13249207]
[249.72007751 167.00875854]
[264.60876465 162.42999268]
[278.03036499 169.59341431]
[282.30377197 183.81570435]
[295.63482666 190.69197083]
[302.23406982 190.76062012]
[307.08380127 193.70545959]
[309.24298096 197.95791626]
[322.37316895 205.21035767]
[335.50335693 212.46281433]
[348.63354492 219.71525574]
[363.85726929 212.33602905]
[380.31567383 215.45661926]
[391.55624390 227.65187073]
[393.29260254 243.97892761]
[406.52456665 251.04400635]
[419.75653076 258.10906982]
[432.98849487 265.17416382]
[446.22045898 272.23922729]
[459.45239258 279.30429077]
[465.57720947 273.10098267]
[472.84140015 268.29965210]
[480.93032837 265.10336304]
[489.49472046 263.64569092]
[498.16561890 263.98526001]
[506.57043457 266.10333252]
[514.34875488 269.90487671]
[521.16802979 275.22271729]
[526.73748779 281.82495117]
[530.82086182 289.42510986]
[533.24621582 297.69445801]
[533.91326904 306.27627563]
[532.79736328 314.80126953]
[529.95056152 322.90341187]
[542.17297363 331.59899902]
[554.39538574 340.29458618]
[569.78253174 337.87136841]
[582.05389404 346.86404419]
[584.26928711 361.54830933]
[596.49163818 370.24392700]
[608.71405029 378.93951416]
[620.93640137 387.63510132]
[633.15881348 396.33068848]
[641.83489990 392.02548218]
[651.42510986 391.17684937]
[660.61132812 393.85913086]
[668.14636230 399.66436768]
[673.02313232 407.76354980]
[674.60937500 417.02493286]
[672.72912598 426.17202759]
[684.43762207 435.54818726]
[696.14605713 444.92431641]
[707.85449219 454.30047607]
[719.56298828 463.67660522]
[731.27142334 473.05276489]
[746.87976074 475.63946533]
[751.97778320 489.63442993]
[763.68621826 499.01055908]
[775.39471436 508.38671875]
[787.10314941 517.76287842]
[795.75091553 520.68121338]
[798.91015625 527.35644531]
[810.48413086 536.89807129]
[822.05810547 546.43969727]
[838.10089111 546.34014893]
[848.06872559 558.91076660]
[844.31518555 574.50854492]
[829.71966553 581.16815186]
[815.47857666 573.78094482]
[812.51647949 558.01367188]
[800.94250488 548.47204590]
[789.36853027 538.93041992]
[777.72698975 529.47131348]
[766.01855469 520.09515381]
[754.31005859 510.71902466]
[742.60162354 501.34289551]
[727.83081055 499.42681885]
[721.89526367 484.76119995]
[710.18682861 475.38507080]
[698.47833252 466.00891113]
[686.76989746 456.63278198]
[675.06146240 447.25662231]
[663.35296631 437.88049316]
[643.28942871 441.81661987]
[626.61907959 429.47708130]
[624.46319580 408.55307007]
[612.24084473 399.85748291]
[600.01843262 391.16189575]
[587.79608154 382.46630859]
[575.57366943 373.77072144]
[560.97479248 376.49252319]
[548.45568848 367.84808350]
[545.69976807 352.51699829]
[533.47741699 343.82138062]
[521.25500488 335.12579346]
[502.29602051 345.75543213]
[480.49398804 345.33096313]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 143]
[3 142]
[4 141]
[5 140]
[6 139]
[7 138]
[12 134]
[13 133]
[14 132]
[15 131]
[16 128]
[17 127]
[20 124]
[21 123]
[22 122]
[23 121]
[24 119]
[25 118]
[26 117]
[27 116]
[28 115]
[29 114]
[34 59]
[35 58]
[36 57]
[37 56]
[39 55]
[40 54]
[41 53]
[42 52]
[61 81]
[62 80]
[63 79]
[64 78]
[65 77]
[66 76]
[67 75]
[68 74]
[92 112]
[93 111]
[94 110]
[95 109]
[96 108]
[97 107]
[157 218]
[158 217]
[159 216]
[162 213]
[163 212]
[164 211]
[165 210]
[166 209]
[173 206]
[174 205]
[175 204]
[176 203]
[177 202]
[178 201]
[180 199]
[181 198]
[182 197]
[183 196]
[185 195]
[186 194]
[187 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
