%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 14:55:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCCGCCAUGGGGCAGACUCUCUGAUGCCAGUCCCCAAAAGUGGGGCUCUGAAGUCUCGGACCCUCAUGGCACCCGGUGCCCCAAAGCAAAGGCUGCUUCUCCUCCAGUGCUGAUCUUGCUGGGCCUUAGCUUUGGAGGGUAGGGGAAGGAGGGGAGGGAGAAGGUGGCUGAACGGGGAGGGCAGGAAGGGAGGGCCUGGGGGGUGGGAAGCAGUGCCUUGGGGGCCUUGUGUGUAAAUGUGAAUAAAUGUAGU\
UGUUUUGGAAAAUG\
) } def
/len { sequence length } bind def

/coor [
[235.55816650 383.59008789]
[228.82618713 370.18560791]
[222.09419250 356.78112793]
[215.36221313 343.37661743]
[208.63021851 329.97213745]
[196.00392151 322.07113647]
[196.72473145 306.26635742]
[189.99273682 292.86184692]
[183.26074219 279.45736694]
[170.63446045 271.55636597]
[171.35525513 255.75157166]
[164.62326050 242.34709167]
[151.99697876 234.44607544]
[152.71777344 218.64129639]
[145.98577881 205.23680115]
[133.35949707 197.33580017]
[134.08029175 181.53102112]
[119.90494537 177.10437012]
[112.88680267 163.60620117]
[117.62599182 148.76782227]
[110.89400482 135.36332703]
[104.16201782 121.95883942]
[97.43003082 108.55435181]
[94.52349091 114.45561218]
[90.78675079 119.96070862]
[78.54973602 128.63569641]
[66.31271362 137.31068420]
[63.53097153 152.63711548]
[50.99731445 161.26046753]
[36.40304184 158.51405334]
[24.16602325 167.18902588]
[11.92900562 175.86401367]
[4.61398506 192.78073120]
[-12.92654419 193.68948364]
[-25.06179810 202.50627136]
[-37.19705200 211.32304382]
[-49.33230972 220.13983154]
[-61.46756363 228.95660400]
[-67.63976288 244.14988708]
[-83.91857147 246.13293457]
[-93.55774689 232.86575317]
[-86.64133453 217.99647522]
[-70.28433990 216.82135010]
[-58.14908600 208.00457764]
[-46.01383209 199.18778992]
[-33.87857819 190.37101746]
[-21.74332237 181.55422974]
[-19.55211830 169.68046570]
[-9.54512978 162.23228455]
[3.25402021 163.62699890]
[15.49103928 154.95201111]
[27.72805786 146.27702332]
[29.96814156 131.59651184]
[42.25464249 122.62451935]
[57.63772964 125.07366180]
[69.87474823 116.39868164]
[82.11177063 107.72369385]
[67.23835754 105.77902985]
[60.20964813 92.52771759]
[66.94160461 79.12321472]
[81.76802826 76.84790039]
[92.20974731 87.61695862]
[91.86071777 72.62101746]
[91.51168060 57.62508011]
[91.16264343 42.62914276]
[90.81361389 27.63320541]
[90.46457672 12.63726616]
[79.31391907 1.76066041]
[79.17356873 -13.45232582]
[89.61147308 -24.01574707]
[89.26243591 -39.01168442]
[88.91339874 -54.00762558]
[77.68112183 -70.77445984]
[87.77059174 -87.29344940]
[87.07271576 -102.27720642]
[86.37483215 -117.26095581]
[71.88745117 -129.51135254]
[71.00752258 -148.14266968]
[83.82783508 -161.24569702]
[82.78148651 -176.20915222]
[81.73514557 -191.17260742]
[80.68879700 -206.13607788]
[79.64244843 -221.09953308]
[78.50906372 -236.05665588]
[60.89227676 -248.96925354]
[58.70929337 -270.41363525]
[72.97762299 -286.18539429]
[70.89002991 -301.03942871]
[68.80242920 -315.89343262]
[53.24942398 -320.72882080]
[41.41042328 -331.82928467]
[35.62633133 -346.93026733]
[37.01031876 -362.98324585]
[45.23397827 -376.77130127]
[58.60339737 -385.55371094]
[56.34310913 -400.38244629]
[46.61466980 -412.85913086]
[52.34580231 -426.60696411]
[50.08551788 -441.43569946]
[47.82523346 -456.26443481]
[45.56494522 -471.09317017]
[43.30466080 -485.92187500]
[41.04437637 -500.75061035]
[38.78408813 -515.57934570]
[36.52380371 -530.40808105]
[34.26351929 -545.23675537]
[32.00323105 -560.06549072]
[19.55547333 -569.42987061]
[17.47446251 -584.50048828]
[26.47865105 -596.30981445]
[16.75020981 -608.78649902]
[22.48134422 -622.53436279]
[20.22105980 -637.36309814]
[10.49261665 -649.83978271]
[16.22375298 -663.58764648]
[13.96346664 -678.41638184]
[11.70318031 -693.24511719]
[9.44289494 -708.07379150]
[7.18260956 -722.90252686]
[-2.54583311 -735.37921143]
[3.18530250 -749.12707520]
[-6.54313993 -761.60375977]
[-0.81200427 -775.35162354]
[-3.07228994 -790.18035889]
[-5.33257580 -805.00909424]
[-7.59286118 -819.83782959]
[-18.25575829 -832.29711914]
[-12.54271030 -847.66894531]
[3.66918683 -850.14007568]
[13.70252419 -837.16839600]
[7.23586464 -822.09808350]
[9.49615002 -807.26934814]
[11.75643539 -792.44067383]
[14.01672173 -777.61193848]
[23.58349228 -766.19586182]
[18.01402855 -751.38739014]
[27.58079910 -739.97131348]
[22.01133537 -725.16284180]
[24.27162170 -710.33410645]
[26.53190613 -695.50537109]
[28.79219246 -680.67663574]
[31.05247879 -665.84790039]
[40.61925125 -654.43188477]
[35.04978561 -639.62335205]
[37.31007004 -624.79467773]
[46.87684250 -613.37860107]
[41.30737686 -598.57012939]
[53.42102051 -589.97967529]
[55.92451096 -574.97344971]
[46.83195877 -562.32580566]
[49.09224319 -547.49707031]
[51.35253143 -532.66833496]
[53.61281586 -517.83959961]
[55.87310028 -503.01089478]
[58.13338852 -488.18215942]
[60.39367294 -473.35345459]
[62.65395737 -458.52471924]
[64.91424561 -443.69598389]
[67.17453003 -428.86724854]
[76.74130249 -417.45120239]
[71.17183685 -402.64273071]
[73.43212128 -387.81399536]
[86.86264038 -384.41159058]
[98.02110291 -376.12640381]
[105.20718384 -364.17980957]
[107.31030273 -350.35427856]
[103.98111725 -336.72717285]
[95.68905640 -325.35888672]
[83.65645599 -317.98101807]
[85.74404907 -303.12701416]
[87.83164215 -288.27297974]
[95.96570587 -285.74069214]
[102.88351440 -280.69497681]
[107.82942200 -273.65249634]
[110.25205994 -265.34967041]
[109.86577606 -256.66592407]
[106.68392944 -248.53036499]
[101.02050781 -241.82246399]
[93.45933533 -237.27703857]
[97.12261200 -230.88894653]
[94.60591125 -222.14587402]
[95.65225220 -207.18241882]
[96.69860077 -192.21896362]
[97.74494934 -177.25549316]
[98.79129791 -162.29203796]
[108.78564453 -156.87593079]
[115.00241089 -147.21635437]
[115.80878448 -135.63758850]
[110.89067078 -124.99230194]
[101.35858917 -117.95883942]
[102.05647278 -102.97508240]
[102.75434875 -87.99132538]
[110.86545563 -81.84825134]
[114.34744263 -72.05487823]
[111.83135223 -61.74436569]
[103.90933990 -54.35665894]
[104.25837708 -39.36072159]
[104.60740662 -24.36478043]
[115.52547455 -14.29842567]
[116.09306335 0.90461624]
[105.46051788 12.28823185]
[105.80955505 27.28417015]
[106.15858459 42.28010941]
[106.50762177 57.27604675]
[106.85665131 72.27198792]
[107.20568848 87.26792145]
[110.83451843 101.82235718]
[117.56650543 115.22685242]
[124.29849243 128.63133240]
[131.03048706 142.03582764]
[145.76274109 147.09529114]
[152.39898682 160.78524780]
[147.48477173 174.79902649]
[160.59259033 183.65881348]
[159.39027405 198.50482178]
[166.12225342 211.90930176]
[179.23007202 220.76910400]
[178.02775574 235.61509705]
[184.75975037 249.01959229]
[197.86755371 257.87936401]
[196.66523743 272.72537231]
[203.39723206 286.12988281]
[210.12921143 299.53436279]
[223.23703003 308.39413452]
[222.03471375 323.24014282]
[228.76669312 336.64462280]
[235.49868774 350.04913330]
[242.23066711 363.45361328]
[248.96266174 376.85809326]
[262.03329468 373.64639282]
[275.47973633 373.23156738]
[288.71054077 375.62918091]
[301.14422607 380.73101807]
[312.23495483 388.31018066]
[321.49649048 398.03103638]
[328.52349854 409.46411133]
[333.00921631 422.10516357]
[334.75897217 435.39724731]
[333.69848633 448.75540161]
[329.87716675 461.59228516]
[323.46569824 473.34408569]
[314.74853516 483.49526978]
[304.11111450 491.60110474]
[310.37118530 505.23236084]
[316.63125610 518.86364746]
[322.89135742 532.49493408]
[329.15142822 546.12615967]
[335.41149902 559.75744629]
[350.31619263 565.01342773]
[357.06341553 579.30505371]
[351.65014648 594.15338135]
[337.28796387 600.74908447]
[322.49774170 595.17913818]
[316.05419922 580.74804688]
[321.78024292 566.01751709]
[315.52014160 552.38623047]
[309.26007080 538.75500488]
[303.00000000 525.12371826]
[296.73992920 511.49246216]
[290.47985840 497.86117554]
[274.15975952 500.90618896]
[257.59631348 499.63485718]
[241.91244507 494.12802124]
[228.17276001 484.75381470]
[217.31138611 472.14303589]
[210.06845093 457.14675903]
[206.93962097 440.77896118]
[208.14219666 424.14782715]
[213.60006714 408.38076782]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 229]
[2 228]
[3 227]
[4 226]
[5 225]
[7 223]
[8 222]
[9 221]
[11 219]
[12 218]
[14 216]
[15 215]
[17 213]
[20 210]
[21 209]
[22 208]
[23 207]
[25 57]
[26 56]
[27 55]
[30 52]
[31 51]
[32 50]
[34 47]
[35 46]
[36 45]
[37 44]
[38 43]
[62 206]
[63 205]
[64 204]
[65 203]
[66 202]
[67 201]
[70 198]
[71 197]
[72 196]
[74 192]
[75 191]
[76 190]
[79 185]
[80 184]
[81 183]
[82 182]
[83 181]
[84 179]
[87 171]
[88 170]
[89 169]
[95 162]
[96 161]
[98 159]
[99 158]
[100 157]
[101 156]
[102 155]
[103 154]
[104 153]
[105 152]
[106 151]
[107 150]
[110 147]
[112 145]
[113 144]
[115 142]
[116 141]
[117 140]
[118 139]
[119 138]
[121 136]
[123 134]
[124 133]
[125 132]
[126 131]
[243 260]
[244 259]
[245 258]
[246 257]
[247 256]
[248 255]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
