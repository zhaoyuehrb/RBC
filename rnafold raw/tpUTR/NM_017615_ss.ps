%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 15:11:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCUAGCUGAAGGACUCAAAUGGAUAGUGAAGUCCAAAACGGAAAGCGGCAUGUAUCGUACAUAUUGUAUGAUUCAACAUUUUUAAAGGCAGAUUGUUUUUAGUAAAAUGUAGCUUUUGAUAGUUAAUAAAUUUGUCAUGGUUGUCUUUGAUUAAAGGAAACUCACCGCCAUAUUCACAAAUAA\
) } def
/len { sequence length } bind def

/coor [
[67.22857666 194.69941711]
[71.73535156 180.39453125]
[60.64517212 190.49443054]
[49.55499268 200.59432983]
[48.65935898 216.14538574]
[37.26846313 226.23013306]
[22.44842148 225.28045654]
[11.35824108 235.38035583]
[0.26806188 245.48023987]
[0.12147715 264.40689087]
[-13.56208229 277.01776123]
[-31.80192184 275.66897583]
[-42.54274750 286.13964844]
[-53.28357315 296.61032104]
[-64.02439880 307.08096313]
[-74.76522064 317.55163574]
[-85.41675568 328.11309814]
[-95.97823334 338.76461792]
[-92.53463745 353.80276489]
[-97.78940582 368.30761719]
[-110.06577301 377.65075684]
[-125.44638824 378.85083008]
[-139.02336121 371.52487183]
[-146.46430969 358.01062012]
[-145.39488220 342.62036133]
[-136.15631104 330.26510620]
[-121.69659424 324.88735962]
[-106.62976837 328.20315552]
[-96.06829071 317.55163574]
[-93.58562469 310.57214355]
[-85.23587799 306.81079102]
[-74.49505615 296.34014893]
[-63.75423050 285.86947632]
[-53.01340485 275.39883423]
[-42.27257919 264.92816162]
[-44.60525513 253.73291016]
[-41.19881821 242.69067383]
[-32.79168701 234.58866882]
[-21.39932823 231.53028870]
[-9.83183479 234.39006042]
[1.25834465 224.29017639]
[12.34852409 214.19027710]
[12.78514004 199.34625244]
[23.88828278 188.94554138]
[39.45509720 189.50415039]
[50.54527664 179.40425110]
[61.63545609 169.30435181]
[71.25556946 157.79551697]
[79.22834778 145.08981323]
[87.20112610 132.38410950]
[63.62016296 105.99314117]
[74.84093475 70.30667114]
[62.48505783 61.80183029]
[46.73054504 60.35068893]
[40.63373566 46.76105499]
[28.27785683 38.25621796]
[15.92197800 29.75137901]
[3.56610036 21.24654007]
[-8.78977776 12.74170208]
[-21.14565659 4.23686361]
[-33.50153351 -4.26797438]
[-45.85741425 -12.77281284]
[-62.33271408 -16.77290726]
[-63.04976273 -33.71168518]
[-46.97145844 -39.08983231]
[-37.35257339 -25.12869072]
[-24.99669647 -16.62385368]
[-12.64081764 -8.11901474]
[-0.28493965 0.38582379]
[12.07093811 8.89066219]
[24.42681694 17.39550018]
[36.78269577 25.90033913]
[49.13857269 34.40517807]
[64.00931549 35.24799347]
[70.98989868 49.44595337]
[83.34577942 57.95079041]
[96.79651642 51.31169891]
[97.56035614 36.33116150]
[98.32420349 21.35062218]
[99.08804321 6.37008381]
[99.85188293 -8.61045551]
[100.61572266 -23.59099388]
[101.37956238 -38.57153320]
[101.88891602 -53.56288147]
[102.14362335 -68.56072235]
[102.39833832 -83.55855560]
[102.65304565 -98.55639648]
[102.90776062 -113.55422974]
[103.16246796 -128.55206299]
[103.41718292 -143.54991150]
[103.67189026 -158.54774475]
[97.89538574 -174.48725891]
[111.61288452 -184.45051575]
[124.98416138 -174.02720642]
[118.66973114 -158.29302979]
[118.41501617 -143.29519653]
[118.16030884 -128.29736328]
[117.90559387 -113.29952240]
[117.65088654 -98.30168152]
[117.39617157 -83.30384827]
[117.14146423 -68.30600739]
[116.88674927 -53.30817032]
[119.51915741 -49.29837036]
[119.64496613 -43.58792496]
[116.36009979 -37.80769348]
[115.59626007 -22.82715416]
[114.83242035 -7.84661436]
[114.06858063 7.13392448]
[113.30474091 22.11446381]
[112.54090118 37.09500122]
[111.77706146 52.07554245]
[123.98673248 60.78896713]
[137.90507507 55.19611740]
[151.82341003 49.60327148]
[165.74174500 44.01042557]
[171.52183533 32.46316910]
[183.24766541 28.09800911]
[194.43043518 32.74761200]
[208.44174194 27.39191628]
[222.45303345 22.03621864]
[236.46434021 16.68052292]
[250.47563171 11.32482624]
[264.48693848 5.96912909]
[267.54324341 -9.15246105]
[278.30612183 -20.20525360]
[293.34115601 -23.66234398]
[307.85070801 -18.42058563]
[317.20486450 -6.15260553]
[318.41873169 9.22692871]
[311.10498047 22.81046295]
[297.59738159 30.26354218]
[282.20617676 29.20791626]
[269.84262085 19.98042870]
[255.83132935 25.33612633]
[241.82003784 30.69182205]
[227.80873108 36.04751968]
[213.79742432 41.40321732]
[199.78613281 46.75891113]
[189.48747253 60.95621109]
[171.33459473 57.92876053]
[157.41625977 63.52160645]
[143.49792480 69.11445618]
[129.57958984 74.70729828]
[136.84535217 98.64703369]
[128.05400085 120.62801361]
[141.56062317 127.15266418]
[155.06726074 133.67730713]
[168.57388306 140.20195007]
[182.08050537 146.72659302]
[197.64198303 142.82528687]
[210.30662537 152.67344666]
[210.35920715 168.71641541]
[197.75939941 178.64739990]
[182.17268372 174.84819031]
[175.55586243 160.23321533]
[162.04924011 153.70857239]
[148.54261780 147.18392944]
[135.03598022 140.65928650]
[121.52935028 134.13464355]
[134.87062073 140.99108887]
[142.05413818 154.15911865]
[140.59750366 169.08821106]
[131.00408936 180.61932373]
[116.58909607 184.76757812]
[102.33396149 180.09947205]
[93.16487122 168.22817993]
[92.25039673 153.25608826]
[99.90682220 140.35688782]
[91.93405151 153.06259155]
[83.96127319 165.76829529]
[97.24192810 158.79519653]
[112.09585571 156.70692444]
[126.78437042 159.74790955]
[139.58815002 167.56219482]
[149.00849915 179.23512268]
[153.94273376 193.40032959]
[153.81330872 208.39978027]
[148.63536072 222.47773743]
[139.01496887 233.98635864]
[126.07825470 241.57853699]
[111.33944702 244.36558533]
[96.52377319 242.02128601]
[83.36542511 234.82005310]
[73.40460968 223.60478210]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 47]
[3 46]
[4 45]
[7 42]
[8 41]
[9 40]
[12 35]
[13 34]
[14 33]
[15 32]
[16 31]
[17 29]
[18 28]
[48 170]
[49 169]
[50 168]
[52 76]
[53 75]
[55 73]
[56 72]
[57 71]
[58 70]
[59 69]
[60 68]
[61 67]
[62 66]
[77 111]
[78 110]
[79 109]
[80 108]
[81 107]
[82 106]
[83 105]
[84 102]
[85 101]
[86 100]
[87 99]
[88 98]
[89 97]
[90 96]
[91 95]
[112 143]
[113 142]
[114 141]
[115 140]
[118 138]
[119 137]
[120 136]
[121 135]
[122 134]
[123 133]
[145 159]
[146 158]
[147 157]
[148 156]
[149 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
