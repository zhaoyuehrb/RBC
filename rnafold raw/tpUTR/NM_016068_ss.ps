%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 15:54:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGACGCGGGAGCCCACGGAGAACGCUCCAGGAGGGCCUGUCCAUCCUCGCUGUCCUUUCCCUGUUCUCCCCCUGCCCCCCGUCUCUAUCCUCUGUGGCCUUCAGCUAAUUUCUGCUCCCCUGAGAUUCGUCCUUCAGCCCCAUCAUGUGCUUUGGGAUGAGUGUAAAUAAAACGGGGCUGUGGCUUGGGAA\
) } def
/len { sequence length } bind def

/coor [
[92.29876709 115.83595276]
[84.93899536 109.12429047]
[70.02116394 110.69221497]
[55.10333633 112.26013947]
[40.18550873 113.82807159]
[25.26768112 115.39599609]
[10.34985256 116.96392059]
[-4.56797552 118.53185272]
[-12.78838825 122.54587555]
[-19.73847961 120.00288391]
[-34.67963409 121.33027649]
[-49.62078476 122.65767670]
[-62.68211746 131.58584595]
[-76.04415894 125.00517273]
[-90.98530579 126.33256531]
[-97.52375031 140.15992737]
[-110.02291870 148.80096436]
[-125.06907654 150.01737976]
[-138.61329651 143.58230591]
[-147.06105042 131.31442261]
[-162.00219727 132.64183044]
[-176.94335938 133.96922302]
[-191.88450623 135.29661560]
[-206.82565308 136.62402344]
[-221.76681519 137.95141602]
[-236.70796204 139.27880859]
[-251.64910889 140.60620117]
[-258.45730591 155.66712952]
[-271.85278320 165.18821716]
[-288.12777710 166.65022278]
[-302.83575439 159.74870300]
[-312.00601196 146.45132446]
[-326.92385864 148.01924133]
[-341.84167480 149.58717346]
[-356.75949097 151.15510559]
[-369.67529297 160.29252625]
[-383.14163208 153.92797852]
[-398.05944824 155.49589539]
[-412.97729492 157.06382751]
[-422.91061401 169.06242371]
[-438.06176758 170.44001770]
[-449.43939209 160.89614868]
[-459.18930054 173.33456421]
[-474.88867188 175.15264893]
[-487.22332764 165.27175903]
[-488.87533569 149.55404663]
[-478.86456299 137.32455444]
[-463.13027954 135.83883667]
[-451.00729370 145.97831726]
[-441.86260986 134.27746582]
[-426.75613403 132.47485352]
[-414.54519653 142.14599609]
[-399.62738037 140.57806396]
[-384.70956421 139.01014709]
[-372.86077881 129.98486328]
[-358.32742310 136.23727417]
[-343.40960693 134.66934204]
[-328.49176025 133.10140991]
[-313.57394409 131.53349304]
[-308.84994507 118.71181488]
[-299.01324463 109.13243103]
[-285.94549561 104.70739746]
[-272.18093872 106.35509491]
[-260.41500854 113.81032562]
[-252.97651672 125.66505432]
[-238.03535461 124.33766174]
[-223.09420776 123.01026154]
[-208.15306091 121.68286896]
[-193.21189880 120.35546875]
[-178.27075195 119.02806854]
[-163.32960510 117.70067596]
[-148.38844299 116.37327576]
[-142.23573303 102.80826569]
[-130.03808594 94.08624268]
[-115.01314545 92.63109589]
[-101.18639374 98.93328857]
[-92.31270599 111.39141846]
[-77.37155151 110.06401825]
[-65.37890625 101.23079681]
[-50.94818115 107.71652222]
[-36.00703049 106.38912964]
[-21.06587791 105.06172943]
[-6.13590240 103.61402130]
[8.78192616 102.04609680]
[23.69975471 100.47816467]
[38.61758423 98.91024017]
[53.53541183 97.34231567]
[68.45323944 95.77438354]
[83.37107086 94.20645905]
[97.87743378 82.51911926]
[114.75923920 90.39524841]
[129.61882019 88.34754181]
[144.47839355 86.29983521]
[159.33795166 84.25212860]
[163.99380493 76.02543640]
[171.80177307 70.94541931]
[180.93530273 70.04917908]
[189.32612610 73.41223907]
[195.13261414 80.15984344]
[210.07376099 78.83244324]
[225.01490784 77.50505066]
[239.95606995 76.17765045]
[248.82423401 66.79981995]
[261.30505371 66.00856018]
[270.66567993 73.68370056]
[285.62628174 72.59718323]
[300.58688354 71.51065826]
[315.54748535 70.42414093]
[330.50808716 69.33761597]
[321.10128784 57.65377045]
[324.20938110 42.97931290]
[337.54528809 36.11244965]
[351.29574585 42.10616684]
[355.34249878 56.54998016]
[346.70764160 68.81546021]
[361.70715332 68.93629456]
[376.70666504 69.05712128]
[381.53619385 54.73465347]
[390.54400635 42.62259674]
[402.83782959 33.89961243]
[417.20639038 29.40970039]
[432.23880005 29.58056641]
[446.46304321 34.38289261]
[458.49008179 43.33444977]
[467.14959717 55.54848480]
[471.60382080 69.82157135]
[485.46588135 62.19568253]
[498.13040161 70.03525543]
[513.12994385 70.15608215]
[528.12945557 70.27690887]
[543.12896729 70.39774323]
[558.12847900 70.51856995]
[573.12799072 70.63939667]
[588.12750244 70.76023102]
[603.12701416 70.88105774]
[618.12652588 71.00188446]
[629.34704590 60.19736862]
[644.55694580 60.53358078]
[654.78826904 71.29721832]
[669.78778076 71.41804504]
[684.78729248 71.53887939]
[698.64935303 63.91299057]
[711.31390381 71.75256348]
[722.40167236 60.49037170]
[738.20587158 60.45058823]
[749.35021973 71.65680695]
[749.22290039 87.46058655]
[737.89947510 98.48581696]
[722.09796143 98.19142914]
[711.19305420 86.75207520]
[698.40386963 94.38660431]
[684.66644287 86.53839111]
[669.66693115 86.41755676]
[654.66741943 86.29673004]
[644.26403809 96.89414215]
[629.05072021 96.98528290]
[618.00567627 86.00140381]
[603.00616455 85.88056946]
[588.00665283 85.75974274]
[573.00714111 85.63891602]
[558.00762939 85.51808167]
[543.00811768 85.39725494]
[528.00860596 85.27642822]
[513.00909424 85.15559387]
[498.00958252 85.03476715]
[485.22039795 92.66929626]
[471.48300171 84.82108307]
[466.79940796 99.02055359]
[457.94424438 111.09349823]
[445.77453613 119.85013580]
[431.47479248 124.42269135]
[416.44158936 124.35135651]
[402.14721680 119.63055420]
[389.99551392 110.71064758]
[381.18402100 98.45504761]
[376.58584595 84.05663300]
[361.58633423 83.93580627]
[346.58682251 83.81497192]
[331.59460449 84.29821014]
[316.63400269 85.38473511]
[301.67340088 86.47126007]
[286.71279907 87.55777740]
[271.75219727 88.64430237]
[257.79016113 99.26640320]
[241.28346252 91.11880493]
[226.34231567 92.44619751]
[211.40115356 93.77359772]
[196.46000671 95.10099792]
[180.68725586 108.40114594]
[161.38566589 99.11170197]
[146.52609253 101.15940857]
[131.66651917 103.20711517]
[116.80694580 105.25481415]
[111.26724243 113.53276825]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 89]
[3 88]
[4 87]
[5 86]
[6 85]
[7 84]
[8 83]
[10 82]
[11 81]
[12 80]
[14 78]
[15 77]
[20 72]
[21 71]
[22 70]
[23 69]
[24 68]
[25 67]
[26 66]
[27 65]
[32 59]
[33 58]
[34 57]
[35 56]
[37 54]
[38 53]
[39 52]
[42 49]
[91 193]
[92 192]
[93 191]
[94 190]
[99 188]
[100 187]
[101 186]
[102 185]
[105 183]
[106 182]
[107 181]
[108 180]
[109 179]
[115 178]
[116 177]
[117 176]
[126 167]
[128 165]
[129 164]
[130 163]
[131 162]
[132 161]
[133 160]
[134 159]
[135 158]
[136 157]
[139 154]
[140 153]
[141 152]
[143 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
