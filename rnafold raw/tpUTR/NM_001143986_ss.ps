%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 06:24:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCCUCGCUGCUGUCAUCCCACUCCGGCUCCUCUUUUCAUCCCCCCCCUUCCCCCCCCCCAACAAGGGGGACAUGGUGGAGGGAAGCGGGAAGGCUCUUCUGUGGCAUCGCACGAUCUAGUCUGUGGUGUAGACUGGUCGCCAUCACGUGUAAUAAAGCACCCGGGAAAGGCAGAGUG\
) } def
/len { sequence length } bind def

/coor [
[93.38765717 348.87683105]
[86.90045929 362.97280884]
[73.35037231 370.53421021]
[57.94768906 368.65353394]
[46.61504745 358.05395508]
[43.71008301 342.81124878]
[50.34981537 328.78649902]
[63.98113251 321.37252808]
[65.79912567 306.48309326]
[67.61711121 291.59368896]
[69.43510437 276.70425415]
[67.11852264 269.66464233]
[71.41603851 261.57302856]
[73.49217224 246.71739197]
[75.56831360 231.86177063]
[77.64444733 217.00614929]
[79.72058105 202.15051270]
[72.26050568 186.27879333]
[83.67231750 171.84295654]
[85.49030304 156.95353699]
[87.30829620 142.06411743]
[89.12628937 127.17469025]
[78.00890350 119.31562042]
[71.64965057 107.27730560]
[71.42445374 93.66442871]
[58.10097122 86.77350616]
[44.77748871 79.88258362]
[28.96525764 80.41537476]
[21.21496010 67.69600677]
[7.89147854 60.80508804]
[-5.43200350 53.91416550]
[1.02135396 67.45499420]
[-0.04550399 82.41700745]
[-8.35484600 94.90519714]
[-21.74353409 101.66855621]
[-36.72613907 100.94641113]
[-49.40230179 92.92675018]
[-56.47208023 79.69730377]
[-56.09502792 64.70204926]
[-48.36930466 51.84463120]
[-35.30611038 44.47217941]
[-20.30547714 44.50411606]
[-32.23871994 35.41578293]
[-44.17196274 26.32745552]
[-56.10520172 17.23912430]
[-71.77186584 15.03316116]
[-77.20909882 1.16644621]
[-89.14233398 -7.92188406]
[-101.15399933 -16.90631104]
[-113.24317932 -25.78615952]
[-133.34346008 -27.06289482]
[-140.39639282 -45.05009842]
[-152.78646851 -53.50502014]
[-165.17655945 -61.95994186]
[-177.56665039 -70.41486359]
[-189.95674133 -78.86978912]
[-202.34683228 -87.32470703]
[-216.15249634 -80.59423828]
[-231.47265625 -81.68431854]
[-244.18626404 -90.30172729]
[-250.87342834 -104.12841797]
[-249.73532104 -119.44509125]
[-241.07810974 -132.13162231]
[-227.23052979 -138.77540588]
[-211.91749573 -137.58930969]
[-199.25816345 -128.89236450]
[-192.65780640 -115.02402496]
[-193.89190674 -99.71479797]
[-181.50181580 -91.25987244]
[-169.11172485 -82.80495453]
[-156.72163391 -74.35002899]
[-144.33155823 -65.89511108]
[-131.94146729 -57.44018555]
[-122.07883453 -60.23580170]
[-112.10066986 -57.06088257]
[-105.39067841 -48.73779678]
[-104.36333466 -37.87533951]
[-92.27415466 -28.99549294]
[-85.00234985 -27.56594658]
[-80.05400848 -19.85512543]
[-68.12076569 -10.76679516]
[-53.30764771 -9.21088982]
[-47.01687241 5.30588293]
[-35.08362961 14.39421272]
[-23.15038872 23.48254395]
[-11.21714783 32.57087326]
[1.45891941 40.59068298]
[14.78240204 47.48160553]
[28.10588455 54.37252808]
[42.96513367 53.34685135]
[51.66841125 66.55909729]
[64.99189758 73.45001984]
[78.31537628 80.34094238]
[101.19596100 65.47158813]
[131.28785706 75.35448456]
[143.96391296 67.33467102]
[156.63998413 59.31486511]
[158.06890869 45.90562057]
[166.83848572 35.91917038]
[179.57197571 32.86068344]
[191.55857849 37.63081360]
[204.37193298 29.83222008]
[212.13768005 16.04804039]
[227.03228760 16.04043388]
[239.84564209 8.24183941]
[248.28794861 -8.10900974]
[265.82369995 -7.86109543]
[278.49975586 -15.88090324]
[291.17584229 -23.90071106]
[303.85189819 -31.92052078]
[316.52798462 -39.94033051]
[329.20404053 -47.96013641]
[341.88009644 -55.97994614]
[354.55618286 -63.99975204]
[360.15423584 -71.25265503]
[367.52258301 -72.04653168]
[380.33593750 -79.84513092]
[393.14926147 -87.64372253]
[403.53588867 -101.04351044]
[419.28732300 -94.77223206]
[417.62155151 -77.90031433]
[400.94787598 -74.83037567]
[388.13452148 -67.03178406]
[375.32116699 -59.23318481]
[362.57598877 -51.32368469]
[349.89990234 -43.30387878]
[337.22384644 -35.28406906]
[324.54779053 -27.26426125]
[311.87170410 -19.24445343]
[299.19564819 -11.22464466]
[286.51959229 -3.20483661]
[273.84350586 4.81497145]
[270.87457275 16.55894852]
[260.35635376 23.33994102]
[247.64424133 21.05518913]
[234.83088684 28.85378265]
[227.98162842 42.08015442]
[212.17051697 42.64556885]
[199.35717773 50.44416428]
[196.09359741 66.92989349]
[181.63909912 76.14688110]
[164.65979004 71.99092865]
[151.98373413 80.01074219]
[139.30766296 88.03054810]
[138.72245789 95.50768280]
[153.30653381 91.99985504]
[161.14924622 104.78625488]
[151.41204834 116.19620514]
[137.55206299 110.46195221]
[136.96685791 117.93908691]
[148.24089050 127.83335114]
[159.51490784 137.72761536]
[170.78892517 147.62188721]
[186.54145813 146.34396362]
[198.52954102 156.64257812]
[199.64083862 172.40774536]
[189.21604919 184.28627014]
[173.44001770 185.23083496]
[161.67237854 174.68104553]
[160.89465332 158.89590454]
[149.62063599 149.00163269]
[138.34661865 139.10737610]
[127.07260132 129.21310425]
[118.79639435 131.06507874]
[110.96209717 130.90252686]
[104.01570892 128.99267578]
[102.19771576 143.88209534]
[100.37973022 158.77153015]
[98.56173706 173.66094971]
[105.88729095 184.29833984]
[104.04944611 196.67726135]
[94.57621002 204.22665405]
[92.50007629 219.08227539]
[90.42393494 233.93791199]
[88.34780121 248.79353333]
[86.27165985 263.64916992]
[84.32452393 278.52224731]
[82.50653839 293.41168213]
[80.68854523 308.30108643]
[78.87055206 323.19052124]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 180]
[9 179]
[10 178]
[11 177]
[13 176]
[14 175]
[15 174]
[16 173]
[17 172]
[19 169]
[20 168]
[21 167]
[22 166]
[25 93]
[26 92]
[27 91]
[29 89]
[30 88]
[31 87]
[42 86]
[43 85]
[44 84]
[45 83]
[47 81]
[48 80]
[49 78]
[50 77]
[52 73]
[53 72]
[54 71]
[55 70]
[56 69]
[57 68]
[95 144]
[96 143]
[97 142]
[101 139]
[102 138]
[104 136]
[105 135]
[107 132]
[108 131]
[109 130]
[110 129]
[111 128]
[112 127]
[113 126]
[114 125]
[116 124]
[117 123]
[118 122]
[150 163]
[151 162]
[152 161]
[153 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
