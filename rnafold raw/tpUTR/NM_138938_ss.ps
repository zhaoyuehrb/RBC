%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 04:40:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCAGGAGGGAAGUCAGCAGCCUGUGUUUGGUGUGCAACUCAUCAUGGGCAUGAGACCAGUGUGAGGACUCACCCUGGAAGAGAAUAUUCGCUUAAUUCCCCCAACCUGACCACCUCAUUCUUAUCUUUCUUCUGUUUCUUCCUCCCCGCUGUCAUUUCAGUCUCUUCAUUUUGUCAUACGGCCUAAGGCUUUAAAGAGCAAUAAAAUUUUUAGUCUGCA\
) } def
/len { sequence length } bind def

/coor [
[76.94106293 207.39083862]
[76.94106293 192.39083862]
[76.94106293 177.39083862]
[76.94106293 162.39083862]
[76.94106293 147.39083862]
[76.94106293 132.39083862]
[64.47642517 124.04620361]
[50.60805130 129.76181030]
[36.73968124 135.47743225]
[22.87131119 141.19305420]
[11.97257328 156.03973389]
[-5.32002020 153.03260803]
[-19.10574341 158.94477844]
[-32.89146805 164.85696411]
[-46.67718887 170.76913452]
[-52.61503220 185.16983032]
[-66.67993927 190.96922302]
[-80.37220001 185.21965027]
[-94.15792084 191.13183594]
[-100.09576416 205.53251648]
[-114.16066742 211.33192444]
[-127.85292816 205.58235168]
[-141.63865662 211.49453735]
[-155.42437744 217.40670776]
[-162.07186890 223.66059875]
[-169.44833374 223.30340576]
[-183.31669617 229.01901245]
[-197.18507385 234.73463440]
[-211.05345154 240.45025635]
[-220.86427307 252.86227417]
[-235.57960510 250.55830383]
[-249.44798279 256.27392578]
[-263.31634521 261.98953247]
[-277.18472290 267.70516968]
[-286.99554443 280.11718750]
[-301.71087646 277.81320190]
[-315.57925415 283.52880859]
[-319.09741211 298.64178467]
[-330.84887695 308.77505493]
[-346.31494141 310.03213501]
[-359.54861450 301.92968750]
[-365.46127319 287.58325195]
[-361.77935791 272.50933838]
[-349.91867065 262.50415039]
[-334.43984985 261.41491699]
[-321.29486084 269.66046143]
[-307.42651367 263.94482422]
[-298.60763550 251.94163513]
[-282.90032959 253.83677673]
[-269.03198242 248.12117004]
[-255.16358948 242.40554810]
[-241.29522705 236.68992615]
[-232.47634888 224.68673706]
[-216.76905823 226.58187866]
[-202.90069580 220.86627197]
[-189.03231812 215.15065002]
[-175.16395569 209.43502808]
[-161.33654785 203.62098694]
[-147.55082703 197.70880127]
[-133.76510620 191.79663086]
[-128.49247742 177.91372681]
[-114.59601593 171.72155762]
[-100.07009888 177.34611511]
[-86.28437805 171.43392944]
[-81.01174164 157.55104065]
[-67.11528015 151.35885620]
[-52.58936691 156.98341370]
[-38.80364227 151.07124329]
[-25.01792145 145.15905762]
[-11.23219776 139.24688721]
[-6.45576429 128.13830566]
[4.97487640 123.09782410]
[17.15569305 127.32468414]
[31.02406502 121.60906219]
[44.89243698 115.89344788]
[58.76080704 110.17782593]
[81.08424377 55.77142334]
[80.87101746 40.77293777]
[80.65779114 25.77445412]
[80.44457245 10.77596951]
[80.23134613 -4.22251511]
[80.01812744 -19.22099876]
[79.80490112 -34.21948242]
[79.59168243 -49.21796799]
[64.65537262 -50.78100586]
[50.00877762 -54.09967804]
[35.85750580 -59.12739182]
[22.40022278 -65.79356384]
[9.82584763 -74.00462341]
[-1.68909550 -83.64528656]
[-11.98295593 -94.58022308]
[-20.91122246 -106.65592194]
[-28.34855652 -119.70285034]
[-34.19055176 -133.53785706]
[-38.35519028 -147.96672058]
[-40.78401566 -162.78688049]
[-41.44292068 -177.79029846]
[-40.32266235 -192.76631165]
[-37.43896866 -207.50473022]
[-32.83231735 -221.79861450]
[-26.56737900 -235.44731140]
[-18.73210526 -248.25920105]
[-9.43649101 -260.05444336]
[1.18896854 -270.66748047]
[12.99510765 -279.94924927]
[25.81618690 -287.76950073]
[39.47221756 -294.01843262]
[53.77149200 -298.60830688]
[68.51326752 -301.47473145]
[83.49060059 -302.57742310]
[98.49322510 -301.90093994]
[113.31053162 -299.45474243]
[127.73449707 -295.27319336]
[141.56265259 -289.41497803]
[154.60086060 -281.96237183]
[166.66607666 -273.01992798]
[177.58892822 -262.71325684]
[187.21609497 -251.18702698]
[195.41239929 -238.60304260]
[202.06280518 -225.13795471]
[207.07391357 -210.98078918]
[210.37541199 -196.33032227]
[211.92094421 -181.39219666]
[211.68879700 -166.37611389]
[209.68225098 -151.49290466]
[205.92945862 -136.95147705]
[200.48310852 -122.95599365]
[193.41966248 -109.70291138]
[184.83828735 -97.37829590]
[174.85943604 -86.15515900]
[163.62319946 -76.19105530]
[151.28730774 -67.62586975]
[138.02496338 -60.57983398]
[124.02233887 -55.15187454]
[109.47600555 -51.41819000]
[94.59016418 -49.43119049]
[94.80339050 -34.43270874]
[95.01660919 -19.43422318]
[95.22983551 -4.43573809]
[95.44305420 10.56274605]
[95.65628052 25.56123161]
[95.86949921 40.55971527]
[96.08272552 55.55820084]
[102.13150024 59.99242401]
[106.82772827 45.74653244]
[121.82759094 45.81087494]
[126.40142822 60.09653473]
[114.22904205 68.86087799]
[120.27781677 73.29509735]
[134.64538574 68.98548889]
[149.01296997 64.67587280]
[163.38053894 60.36626053]
[170.65232849 46.33427048]
[185.74142456 41.63378525]
[199.69575500 49.05351639]
[204.23643494 64.19147491]
[196.66958618 78.06656647]
[181.48448181 82.44696045]
[167.69015503 74.73383331]
[153.32258606 79.04344940]
[138.95500183 83.35306549]
[124.58742523 87.66267395]
[123.52217102 102.62480164]
[137.13426208 108.92647552]
[150.74635315 115.22814941]
[164.35842896 121.52982330]
[177.97052002 127.83149719]
[170.63380432 114.74819946]
[170.72721863 99.74848938]
[178.22628784 86.75757599]
[191.16864014 79.17499542]
[206.16743469 78.98500061]
[219.29771423 86.23730469]
[227.12345886 99.03409576]
[227.59678650 114.02662659]
[220.59384155 127.29156494]
[207.94718933 135.35768127]
[192.96565247 136.11404419]
[205.54763794 144.28063965]
[221.33572388 145.30397034]
[227.79884338 158.72325134]
[240.38084412 166.88986206]
[252.96284485 175.05645752]
[265.54483032 183.22306824]
[282.12255859 186.77485657]
[283.29873657 203.68795776]
[267.37222290 209.50019836]
[257.37823486 195.80506897]
[244.79623413 187.63845825]
[232.21423340 179.47184753]
[219.63224792 171.30525208]
[204.74411011 170.86605835]
[197.38104248 156.86264038]
[184.79904175 148.69602966]
[171.66885376 141.44358826]
[158.05676270 135.14190674]
[144.44467163 128.84024048]
[130.83259583 122.53856659]
[117.22050476 116.23689270]
[110.90064240 120.27537537]
[119.82518768 132.33158875]
[128.74974060 144.38781738]
[137.67428589 156.44403076]
[146.59883118 168.50025940]
[159.67172241 175.85548401]
[163.15155029 190.44625854]
[154.80532837 202.90983582]
[139.98875427 205.24844360]
[128.20947266 195.96142578]
[127.02645111 181.00729370]
[119.83506775 167.84356689]
[112.64368439 154.67982483]
[105.45230103 141.51608276]
[98.26091766 128.35234070]
[91.94106293 132.39083862]
[91.94106293 147.39083862]
[91.94106293 162.39083862]
[91.94106293 177.39083862]
[91.94106293 192.39083862]
[91.94106293 207.39083862]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 220]
[2 219]
[3 218]
[4 217]
[5 216]
[6 215]
[7 76]
[8 75]
[9 74]
[10 73]
[12 70]
[13 69]
[14 68]
[15 67]
[18 64]
[19 63]
[22 60]
[23 59]
[24 58]
[26 57]
[27 56]
[28 55]
[29 54]
[31 52]
[32 51]
[33 50]
[34 49]
[36 47]
[37 46]
[77 143]
[78 142]
[79 141]
[80 140]
[81 139]
[82 138]
[83 137]
[84 136]
[149 162]
[150 161]
[151 160]
[152 159]
[163 199]
[164 198]
[165 197]
[166 196]
[167 195]
[178 194]
[179 193]
[181 191]
[182 190]
[183 189]
[184 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
