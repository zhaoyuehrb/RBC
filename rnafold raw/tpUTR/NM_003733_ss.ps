%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 06:24:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUCUCUGGGAGACUUCUCUGUACAUUUCUGCCAUGUACUCCAGAACUCAUCCUGUCAAUCACUCUGUCCCAUUGUCUACUGGGAAGGUCCCAGGUCUUCACCAGUUUUACAAUGAGUUAUCCCAGGCCAGACGUGGUAGCUCACACCUGUAAUCCCAGAACUUUGGGAGGCCGAGGUGGGAGGAGCGCUUGAGCCGAGGAGUUCAAGACCAGCCUGGGUAUCACAGGGAGACCCCGUCUCUACAAAAUAAAAA\
AAUAAUUCACUGGG\
) } def
/len { sequence length } bind def

/coor [
[197.10441589 183.36233521]
[197.94332886 166.90782166]
[185.80807495 158.09103394]
[173.67282104 149.27426147]
[161.53756714 140.45747375]
[149.40231323 131.64070129]
[137.26705933 122.82392120]
[125.13180542 114.00714111]
[92.04699707 131.71890259]
[81.88101959 142.74855042]
[71.71504211 153.77818298]
[61.54906082 164.80781555]
[51.44741821 175.89640808]
[41.41045761 187.04357910]
[37.92627716 202.47636414]
[23.66013527 206.75730896]
[13.62317562 217.90447998]
[3.58621645 229.05165100]
[-6.45074272 240.19882202]
[-5.22424889 257.66616821]
[-16.79550552 270.35418701]
[-33.62525558 270.72256470]
[-43.53183365 281.98577881]
[-53.43841553 293.24896240]
[-63.34499359 304.51217651]
[-73.25157166 315.77536011]
[-83.15814972 327.03857422]
[-80.62308502 342.46929932]
[-88.64421082 355.89297485]
[-103.43420410 360.97137451]
[-118.00968170 355.30661011]
[-125.48854828 341.57342529]
[-122.33950806 326.25619507]
[-110.04944611 316.58724976]
[-94.42135620 317.13198853]
[-84.51477051 305.86877441]
[-74.60819244 294.60559082]
[-64.70161438 283.34237671]
[-54.79503632 272.07919312]
[-44.88845825 260.81597900]
[-47.50410080 248.22010803]
[-42.32006454 236.23417664]
[-31.01869392 229.31101990]
[-17.59791565 230.16186523]
[-7.56095600 219.01469421]
[2.47600317 207.86752319]
[12.51296234 196.72035217]
[15.27923489 182.08488464]
[30.26328659 177.00662231]
[40.30024719 165.85945129]
[42.43288040 158.81111145]
[50.51942444 154.64183044]
[60.68540573 143.61219788]
[70.85138702 132.58256531]
[81.01736450 121.55293274]
[80.71201324 114.05915070]
[65.72444153 114.66959381]
[65.11424255 99.68201447]
[80.10131836 99.07158661]
[79.79597473 91.57780457]
[68.76633453 81.41182709]
[57.73670197 71.24584198]
[46.70706558 61.07986450]
[35.67742920 50.91388321]
[24.58883858 40.81224442]
[13.44166660 30.77528381]
[2.29449439 20.73832512]
[-8.85267830 10.70136547]
[-24.28546906 7.21718264]
[-28.56641006 -7.04895926]
[-39.71358490 -17.08591843]
[-51.42549515 -26.45774651]
[-63.66251373 -35.13273239]
[-75.89952850 -43.80771637]
[-88.13655090 -52.48270035]
[-100.37357330 -61.15768433]
[-112.61058807 -69.83267212]
[-129.81744385 -66.58663940]
[-143.76300049 -76.60666656]
[-146.08270264 -93.27985382]
[-158.41983032 -101.81186676]
[-170.75695801 -110.34388733]
[-183.09408569 -118.87590027]
[-195.43121338 -127.40792084]
[-207.81776428 -135.86801147]
[-220.25332642 -144.25590515]
[-232.68888855 -152.64379883]
[-245.12445068 -161.03169250]
[-257.56002808 -169.41958618]
[-266.39007568 -171.61160278]
[-270.09069824 -177.97811890]
[-286.47061157 -178.77232361]
[-293.73114014 -193.47662354]
[-284.40328979 -206.96452332]
[-268.08273315 -205.36080933]
[-261.55868530 -190.31524658]
[-249.17211914 -181.85514832]
[-236.73655701 -173.46725464]
[-224.30099487 -165.07936096]
[-211.86543274 -156.69146729]
[-199.42987061 -148.30357361]
[-192.15332031 -147.17263794]
[-186.89918518 -139.74504089]
[-174.56205750 -131.21302795]
[-162.22492981 -122.68100739]
[-149.88781738 -114.14899445]
[-137.55068970 -105.61697388]
[-125.34362793 -109.67722321]
[-112.83691406 -105.91972351]
[-104.64855957 -95.49849701]
[-103.93560028 -82.06968689]
[-91.69858551 -73.39470673]
[-79.46156311 -64.71971893]
[-67.22454834 -56.04473495]
[-54.98752594 -47.36975098]
[-42.75050735 -38.69476318]
[-47.84507751 -52.80310822]
[-45.27923584 -67.58203125]
[-35.72730255 -79.14751434]
[-21.69959259 -84.46008301]
[-6.88268995 -82.12355042]
[4.82941961 -72.75197601]
[10.35871029 -58.80826569]
[8.25204563 -43.95693970]
[-0.93692744 -32.10102081]
[-14.79328251 -26.35633469]
[-29.67662430 -28.23309135]
[-18.52945137 -18.19613075]
[-3.89398122 -15.42985916]
[1.18428111 -0.44580659]
[12.33145332 9.59115219]
[23.47862625 19.62811089]
[34.62579727 29.66507149]
[41.67413330 31.79770660]
[45.84341049 39.88424683]
[56.87304688 50.05022812]
[67.90267944 60.21620941]
[78.93231964 70.38218689]
[89.96195221 80.54817200]
[97.43341064 79.89450073]
[88.82985687 67.60715485]
[95.16932678 54.01263428]
[110.11227417 52.70561981]
[118.71556091 64.99314880]
[112.37633514 78.58716583]
[119.84779358 77.93349457]
[128.94456482 66.00668335]
[138.04132080 54.07987213]
[147.13809204 42.15306091]
[156.23486328 30.22624779]
[149.70463562 15.01756763]
[151.73406982 -1.31416607]
[161.67373657 -14.31267262]
[176.72897339 -20.47951126]
[192.74501038 -18.21541023]
[201.70239258 -30.24725723]
[210.65977478 -42.27910614]
[219.61714172 -54.31095505]
[228.57452393 -66.34280396]
[237.53190613 -78.37464905]
[238.89726257 -94.71685791]
[253.84600830 -101.45979309]
[267.00015259 -91.66690063]
[264.82781982 -75.41226959]
[249.56375122 -69.41726685]
[240.60636902 -57.38542175]
[231.64898682 -45.35357285]
[222.69161987 -33.32172775]
[213.73423767 -21.28987885]
[204.77685547 -9.25803089]
[210.99546814 2.87982607]
[211.38716125 16.57845879]
[205.81880188 29.17271614]
[195.32240295 38.18782043]
[181.90426636 41.82561111]
[168.16166687 39.32301331]
[159.06489563 51.24982834]
[149.96813965 63.17663956]
[140.87136841 75.10344696]
[131.77459717 87.03026581]
[133.94857788 101.87188721]
[146.08383179 110.68866730]
[158.21908569 119.50544739]
[170.35433960 128.32221985]
[182.48960876 137.13900757]
[194.62486267 145.95578003]
[206.76011658 154.77255249]
[223.33062744 148.89936829]
[239.96379089 153.90991211]
[250.28155518 167.62448120]
[265.24502563 166.57814026]
[280.20849609 165.53179932]
[295.17193604 164.48544312]
[310.13540649 163.43910217]
[325.09887695 162.39274597]
[340.06231689 161.34640503]
[350.24041748 149.25582886]
[365.99365234 147.98675537]
[377.97595215 158.29209900]
[379.07839966 174.05789185]
[368.64694214 185.93055725]
[352.87039185 186.86625671]
[341.10867310 176.30986023]
[326.14520264 177.35621643]
[311.18176270 178.40255737]
[296.21829224 179.44891357]
[281.25482178 180.49525452]
[266.29138184 181.54159546]
[251.32791138 182.58795166]
[249.79927063 187.50282288]
[247.37837219 192.04505920]
[257.15322876 203.42276001]
[266.92810059 214.80046082]
[276.70294189 226.17817688]
[288.57662964 235.34416199]
[302.05856323 241.91973877]
[315.54046631 248.49530029]
[329.02236938 255.07087708]
[343.23345947 248.54562378]
[358.30038452 252.73155212]
[367.10897827 265.65216064]
[365.50012207 281.20678711]
[354.23345947 292.05093384]
[338.62875366 293.06439209]
[326.05407715 283.76861572]
[322.44680786 268.55279541]
[308.96490479 261.97720337]
[295.48297119 255.40164185]
[282.00106812 248.82608032]
[273.32608032 261.06311035]
[283.99420166 271.60781860]
[294.66235352 282.15252686]
[305.33047485 292.69723511]
[315.99859619 303.24197388]
[331.51397705 310.07635498]
[329.24176025 326.87734985]
[312.46835327 329.34490967]
[305.45388794 313.91009521]
[294.78576660 303.36538696]
[284.11761475 292.82064819]
[273.44949341 282.27593994]
[262.78137207 271.73123169]
[267.08813477 286.09967041]
[261.93426514 300.18646240]
[253.43905640 312.54895020]
[242.13626099 322.41033936]
[228.73611450 329.15097046]
[214.08062744 332.34732056]
[199.09066772 331.79849243]
[184.70814514 327.53903198]
[171.83679199 319.83654785]
[161.28536987 309.17504883]
[153.71690369 296.22445679]
[149.60694885 281.79849243]
[149.21376038 266.80364990]
[152.56202698 252.18211365]
[159.44139099 238.85266113]
[169.41955566 227.65283203]
[181.86955261 219.28637695]
[196.00907898 214.27900696]
[210.94967651 212.94535828]
[225.75254822 215.36924744]
[239.48753357 221.39834595]
[251.29223633 230.65446472]
[265.32525635 235.95303345]
[255.55038452 224.57531738]
[245.77552795 213.19761658]
[236.00067139 201.81991577]
[220.14993286 204.24746704]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 187]
[3 186]
[4 185]
[5 184]
[6 183]
[7 182]
[8 181]
[9 55]
[10 54]
[11 53]
[12 52]
[13 50]
[14 49]
[16 47]
[17 46]
[18 45]
[19 44]
[22 40]
[23 39]
[24 38]
[25 37]
[26 36]
[27 35]
[60 139]
[61 138]
[62 137]
[63 136]
[64 135]
[65 133]
[66 132]
[67 131]
[68 130]
[70 128]
[71 127]
[72 116]
[73 115]
[74 114]
[75 113]
[76 112]
[77 111]
[80 107]
[81 106]
[82 105]
[83 104]
[84 103]
[85 101]
[86 100]
[87 99]
[88 98]
[89 97]
[91 96]
[146 180]
[147 179]
[148 178]
[149 177]
[150 176]
[155 170]
[156 169]
[157 168]
[158 167]
[159 166]
[160 165]
[190 209]
[191 208]
[192 207]
[193 206]
[194 205]
[195 204]
[196 203]
[211 268]
[212 267]
[213 266]
[214 265]
[215 229]
[216 228]
[217 227]
[218 226]
[230 242]
[231 241]
[232 240]
[233 239]
[234 238]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
