%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 10:05:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGUAGUCUUUGGUGUUCAGCUGCUCCCUUGCACAUUUUCAUUGCUACUGUCUUCAAGCACCCCAAAUAGAGAAAACCUGGGCGUCAGUGGCUCAAUUUGGGCCCUGAUCUAUUCUCCCUCUUUCUUGUCUAUGUUAUAACAGAGAGGAUAAACUUAAAGGGUCCAAAUAACGGUCCGAAUACAAAAGGCAUUCCUUCA\
) } def
/len { sequence length } bind def

/coor [
[105.06209564 412.15835571]
[104.82765961 397.16018677]
[104.59322357 382.16201782]
[104.35878754 367.16384888]
[90.47145081 355.24563599]
[89.68414307 336.64273071]
[102.96225739 323.13839722]
[102.25917053 308.15487671]
[101.55609131 293.17135620]
[100.85300446 278.18786621]
[100.14992523 263.20434570]
[99.44683838 248.22082520]
[91.12148285 235.87020874]
[98.20343781 221.72253418]
[97.50035095 206.73902893]
[96.79727173 191.75550842]
[96.09418488 176.77200317]
[95.39109802 161.78848267]
[94.68801880 146.80497742]
[83.90726471 146.19142151]
[73.16497803 143.04359436]
[63.06586838 137.35679626]
[54.21627808 129.27194214]
[42.55171585 138.70263672]
[30.88715363 148.13333130]
[29.47232056 163.87416077]
[17.28805351 173.93989563]
[1.56305897 172.35871887]
[-8.37330055 160.06871033]
[-6.62596035 144.36131287]
[5.76841402 134.55545044]
[21.45646095 136.46876526]
[33.12102127 127.03807068]
[44.78558731 117.60737610]
[44.43404388 110.11562347]
[29.67611122 112.79954529]
[14.91817951 115.48346710]
[0.93895346 120.92232513]
[-11.63730335 112.74689484]
[-12.34058094 97.76338959]
[-0.58538365 88.44591522]
[13.84213638 92.55175781]
[28.78654861 93.84193420]
[43.73096085 95.13211060]
[43.37941742 87.64035034]
[30.88300514 79.34338379]
[18.38659286 71.04641724]
[5.89017963 62.74944687]
[-6.60623312 54.45248032]
[-19.10264587 46.15551376]
[-31.59905815 37.85854721]
[-27.02850723 52.14525604]
[-30.79960632 66.66348267]
[-41.74520874 76.91987610]
[-56.47769547 79.74013519]
[-70.43741608 74.25138855]
[-79.30387878 62.15238953]
[-80.33294678 47.18773270]
[-73.20613861 33.98892212]
[-60.12916183 26.64094925]
[-45.15159988 27.41718483]
[-56.36130524 17.45011139]
[-67.64855957 7.57094622]
[-79.01267242 -2.21971011]
[-90.37678528 -12.01036644]
[-101.74089813 -21.80102348]
[-115.49628448 -15.26580429]
[-130.72073364 -14.89689732]
[-144.77650452 -20.75821877]
[-155.22836304 -31.83425522]
[-160.26545715 -46.20602036]
[-159.01506042 -61.38351822]
[-151.69384766 -74.73715210]
[-139.57023621 -83.95333099]
[-124.74472046 -87.43528748]
[-109.78591156 -84.57976532]
[-97.28552246 -75.88148499]
[-89.40930939 -62.84748077]
[-87.52188110 -47.73598099]
[-91.95024109 -33.16513443]
[-80.58612823 -23.37447929]
[-69.22201538 -13.58382225]
[-57.85790253 -3.79316640]
[-50.73268890 -1.80738699]
[-46.39423370 6.24040747]
[-35.18452835 16.20747948]
[-23.30209160 25.36213303]
[-10.80567837 33.65909958]
[1.69073427 41.95606995]
[14.18714714 50.25303650]
[26.68355942 58.55000305]
[39.17997360 66.84696960]
[51.67638397 75.14393616]
[70.17021179 56.75830841]
[94.32954407 49.59449387]
[118.13529205 54.57165527]
[136.05473328 69.68532562]
[148.92630005 61.98321533]
[161.79788208 54.28110123]
[174.66944885 46.57899094]
[187.54103088 38.87687683]
[200.41259766 31.17476463]
[213.28417969 23.47265053]
[226.15576172 15.77053833]
[239.02732849 8.06842613]
[251.89891052 0.36631277]
[264.77047729 -7.33580017]
[260.61813354 -21.23561287]
[259.92056274 -35.71614075]
[262.71392822 -49.93215561]
[268.83078003 -63.05496979]
[277.91003418 -74.32071686]
[289.41836548 -83.07483673]
[302.68145752 -88.81009674]
[316.92355347 -91.19598389]
[331.31277466 -90.09774017]
[345.00982666 -85.58399200]
[357.21685791 -77.92243195]
[367.22387695 -67.56400299]
[380.21426392 -75.06400299]
[393.20465088 -82.56400299]
[406.19503784 -90.06400299]
[419.18539429 -97.56400299]
[432.17578125 -105.06400299]
[445.16616821 -112.56400299]
[453.24880981 -126.16478729]
[468.13961792 -125.82772827]
[481.13000488 -133.32772827]
[494.12036133 -140.82772827]
[507.11074829 -148.32772827]
[509.64782715 -163.75813293]
[521.54345703 -173.90843201]
[537.18084717 -173.98597717]
[549.17651367 -163.95414734]
[551.86645508 -148.54966736]
[543.98065186 -135.04605103]
[529.24243164 -129.81932068]
[514.61077881 -135.33734131]
[501.62036133 -127.83734894]
[488.63000488 -120.33734894]
[475.63961792 -112.83734894]
[468.48611450 -99.77301025]
[452.66616821 -99.57362366]
[439.67578125 -92.07362366]
[426.68539429 -84.57362366]
[413.69503784 -77.07362366]
[400.70465088 -69.57362366]
[387.71426392 -62.07362366]
[374.72387695 -54.57362366]
[378.86056519 -39.59719849]
[378.98745728 -24.04935455]
[375.09020996 -8.98583984]
[367.42791748 4.56900024]
[356.51586914 15.69187832]
[343.09094238 23.62345314]
[328.06185913 27.82016945]
[312.44763184 27.99150467]
[297.30850220 24.12006760]
[283.67391968 16.46318054]
[272.47259521 5.53577518]
[259.60101318 13.23788834]
[246.72944641 20.94000053]
[233.85786438 28.64211464]
[220.98629761 36.34422684]
[208.11471558 44.04634094]
[195.24314880 51.74845123]
[182.37156677 59.45056534]
[169.49998474 67.15267944]
[156.62841797 74.85478973]
[143.75683594 82.55690765]
[146.29620361 91.30611420]
[147.10391235 100.38051605]
[146.14971924 109.44068146]
[143.46932983 118.14772797]
[139.16300964 126.17597198]
[133.39183044 133.22512817]
[126.37164307 139.03150940]
[118.36505127 143.37796021]
[109.67153168 146.10188293]
[110.37461090 161.08540344]
[111.07769775 176.06890869]
[111.78078461 191.05242920]
[112.48386383 206.03594971]
[113.18695068 221.01945496]
[121.56259155 234.44178772]
[114.43035126 247.51774597]
[115.13343811 262.50125122]
[115.83651733 277.48477173]
[116.53960419 292.46829224]
[117.24268341 307.45178223]
[117.94577026 322.43530273]
[128.13439941 328.58004761]
[134.02810669 338.77764893]
[134.26116943 350.43365479]
[128.89138794 360.64639282]
[119.35695648 366.92941284]
[119.59139252 381.92758179]
[119.82582855 396.92575073]
[120.06026459 411.92391968]
[122.55182648 431.14477539]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 199]
[2 198]
[3 197]
[4 196]
[7 191]
[8 190]
[9 189]
[10 188]
[11 187]
[12 186]
[14 184]
[15 183]
[16 182]
[17 181]
[18 180]
[19 179]
[23 34]
[24 33]
[25 32]
[45 93]
[46 92]
[47 91]
[48 90]
[49 89]
[50 88]
[51 87]
[61 86]
[62 85]
[63 83]
[64 82]
[65 81]
[66 80]
[97 170]
[98 169]
[99 168]
[100 167]
[101 166]
[102 165]
[103 164]
[104 163]
[105 162]
[106 161]
[107 160]
[119 149]
[120 148]
[121 147]
[122 146]
[123 145]
[124 144]
[125 143]
[127 141]
[128 140]
[129 139]
[130 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
