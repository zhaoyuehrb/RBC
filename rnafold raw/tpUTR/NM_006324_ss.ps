%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 19:04:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUUACGGGCUAAAUCAAGAGCAGCUUAAUCCUGUUUACAAUGUGAGCUUUUUGUGCGUCUGUGAAAUGUUUUACAGUGUUUCUCAUCAUCUGUUUCCCAGCAAGGUCUUUUUUUUUUCUACAUUGAAGUUCUGUCUAUGUAUCUUAAUCACAAAUGGUUUCAUUCACUUUACUUUUAAAAAUUUGUCCUUAAAUGAAUAAAUAAAAUAAAAGUUGGUCCUGUGAGAGGAUAAUGAAGAUGA\
) } def
/len { sequence length } bind def

/coor [
[263.94967651 555.60284424]
[253.90470886 544.60522461]
[258.83752441 529.57263184]
[255.94682312 514.85382080]
[253.05615234 500.13497925]
[250.16546631 485.41613770]
[247.27478027 470.69732666]
[244.38409424 455.97848511]
[241.49340820 441.25964355]
[238.50764465 426.55981445]
[235.42691040 411.87957764]
[232.34619141 397.19937134]
[225.09550476 395.28164673]
[221.26007080 409.78298950]
[217.42440796 424.28430176]
[202.92317200 420.44842529]
[206.75871277 405.94757080]
[210.59414673 391.44619751]
[203.34346008 389.52847290]
[193.40779114 400.76602173]
[183.47212219 412.00357056]
[173.53645325 423.24111938]
[163.60078430 434.47866821]
[153.66511536 445.71621704]
[156.16027832 461.15347290]
[148.10447693 474.55636597]
[133.30139160 479.59649658]
[118.74061584 473.89407349]
[111.29728699 460.14160156]
[114.48592377 444.83255005]
[126.80094147 435.19543457]
[142.42756653 435.78054810]
[152.36325073 424.54299927]
[162.29891968 413.30545044]
[172.23458862 402.06790161]
[182.17025757 390.83035278]
[192.10592651 379.59280396]
[178.28324890 353.78442383]
[181.72671509 327.40454102]
[198.12509155 309.96578979]
[191.04879761 296.73983765]
[183.97250366 283.51385498]
[176.89620972 270.28790283]
[170.98223877 265.88238525]
[169.81518555 256.84490967]
[162.91046143 243.52856445]
[156.00573730 230.21221924]
[149.10102844 216.89588928]
[142.19630432 203.57954407]
[129.46893311 195.84242249]
[129.98533630 180.02964783]
[123.08061981 166.71331787]
[116.17590332 153.39697266]
[109.27118683 140.08064270]
[102.36646271 126.76429749]
[95.46174622 113.44795990]
[83.42990112 104.49057770]
[68.69268799 101.69509888]
[59.70016861 103.16904449]
[53.78357315 98.76704407]
[39.08373642 95.78128052]
[24.38389969 92.79550934]
[9.68406296 89.80974579]
[-5.01577282 86.82397461]
[-19.71560860 83.83820343]
[-34.41544724 80.85243988]
[-49.78514099 86.57122040]
[-62.24843979 75.91297913]
[-58.98417282 59.84199142]
[-43.35033417 54.89071655]
[-31.42967796 66.15260315]
[-16.72984123 69.13836670]
[-2.03000498 72.12413788]
[12.66983128 75.10990906]
[27.36966705 78.09567261]
[42.06950378 81.08144379]
[56.76934052 84.06720734]
[71.48816681 86.95789337]
[86.22537994 89.75337219]
[90.30610657 83.46070862]
[77.72076416 75.29925537]
[65.13542938 67.13780212]
[50.64408493 63.26470184]
[49.84973526 48.28574753]
[63.85016632 42.90170288]
[73.29688263 54.55246353]
[85.88221741 62.71391678]
[98.46755219 70.87536621]
[102.54827881 64.58270264]
[93.98439026 52.26767731]
[85.42050934 39.95265198]
[76.85662079 27.63762665]
[68.21330261 15.37821865]
[59.49092102 3.17493725]
[50.76853943 -9.02834415]
[35.62358475 -15.31820774]
[33.76687622 -31.61190796]
[47.10843658 -41.14788437]
[61.92361450 -34.11633682]
[62.97182083 -17.75072479]
[71.69419861 -5.54744387]
[80.41658020 6.65583706]
[86.84917450 10.26214886]
[89.17163849 19.07373810]
[97.73552704 31.38876343]
[106.29941559 43.70378876]
[114.86330414 56.01881027]
[122.24079132 54.66873169]
[119.54063416 39.91376114]
[116.84047699 25.15879250]
[114.14031982 10.40382195]
[111.44016266 -4.35114861]
[108.74024963 -19.10616302]
[123.49530792 -21.80583191]
[126.19512939 -7.05130577]
[128.89529419 7.70366478]
[131.59544373 22.45863533]
[134.29560852 37.21360397]
[136.99575806 51.96857452]
[144.37324524 50.61849594]
[148.02088928 36.06876373]
[151.66853333 21.51903343]
[155.31617737 6.96930027]
[158.96382141 -7.58043194]
[154.81463623 -22.84787941]
[165.41465759 -33.31158066]
[169.06230164 -47.86131287]
[159.74122620 -60.41724777]
[160.72326660 -76.02396393]
[171.54472351 -87.31244659]
[187.09605408 -88.95262146]
[200.03439331 -80.17004395]
[204.25062561 -65.11157990]
[197.75401306 -50.88737869]
[183.61203003 -44.21366882]
[179.96438599 -29.66393661]
[184.37446594 -15.43718433]
[173.51354980 -3.93278980]
[169.86590576 10.61694241]
[166.21826172 25.16667366]
[162.57061768 39.71640778]
[158.92297363 54.26613998]
[168.46333313 65.84117889]
[172.52095032 80.28194427]
[170.40559387 95.13204193]
[162.47709656 107.86542511]
[150.08412170 116.31611633]
[135.33474731 119.04664612]
[120.73786163 115.59253693]
[108.77808380 106.54324341]
[115.68280029 119.85958099]
[122.58752441 133.17591858]
[129.49223328 146.49226379]
[136.39695740 159.80859375]
[143.30168152 173.12493896]
[156.52293396 181.81452942]
[155.51264954 196.67483521]
[162.41735840 209.99116516]
[169.32208252 223.30751038]
[176.22680664 236.62384033]
[183.13151550 249.94018555]
[190.12217712 263.21160889]
[197.19847107 276.43756104]
[204.27476501 289.66354370]
[211.35105896 302.88949585]
[224.68875122 299.51623535]
[239.03303528 301.22003174]
[252.43113708 308.25592041]
[262.89266968 320.12533569]
[268.67944336 335.58874512]
[268.57888794 352.78857422]
[262.11923218 369.47149658]
[276.54351807 373.58740234]
[290.96777344 377.70330811]
[305.39202881 381.81924438]
[319.81628418 385.93515015]
[334.24053955 390.05105591]
[348.66479492 394.16699219]
[361.84759521 383.55307007]
[378.59320068 382.90261841]
[392.28503418 392.27410889]
[397.63143921 407.80520630]
[412.10769653 411.73428345]
[426.58398438 415.66339111]
[441.06024170 419.59246826]
[455.53649902 423.52157593]
[470.01275635 427.45065308]
[485.35778809 423.59832764]
[495.61398315 434.39926147]
[509.20004272 426.32492065]
[524.49542236 430.30319214]
[532.42565918 443.97384644]
[528.28588867 459.22631836]
[514.53216553 467.01159668]
[499.32431030 462.71078491]
[491.68487549 448.87551880]
[477.37530518 453.00888062]
[466.08367920 441.92694092]
[451.60739136 437.99783325]
[437.13113403 434.06875610]
[422.65487671 430.13964844]
[408.17861938 426.21054077]
[393.70236206 422.28146362]
[384.13134766 431.57241821]
[371.11624146 434.95327759]
[358.02450562 431.43887329]
[348.29818726 421.84265137]
[344.54888916 408.59124756]
[330.12463379 404.47534180]
[315.70037842 400.35940552]
[301.27609253 396.24349976]
[286.85183716 392.12759399]
[272.42758179 388.01165771]
[258.00332642 383.89575195]
[247.02641296 394.11862183]
[250.10714722 408.79885864]
[253.18786621 423.47909546]
[258.00341797 431.21527100]
[256.21224976 438.36895752]
[259.10293579 453.08779907]
[261.99362183 467.80664062]
[264.88427734 482.52545166]
[267.77496338 497.24429321]
[270.66564941 511.96310425]
[273.55633545 526.68194580]
[283.80807495 538.73236084]
[278.66851807 552.71215820]
[293.64862061 555.02984619]
[306.93112183 562.33404541]
[316.91210938 573.74261475]
[322.38629150 587.87799072]
[322.69262695 603.03326416]
[317.79415894 617.37835693]
[308.28240967 629.18096924]
[295.30590820 637.01593018]
[280.43170166 639.93713379]
[265.45587158 637.59179688]
[252.18685913 630.26318359]
[242.22692871 618.83624268]
[236.77880859 604.69073486]
[236.50038147 589.53497314]
[241.42527771 575.19897461]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 227]
[3 225]
[4 224]
[5 223]
[6 222]
[7 221]
[8 220]
[9 219]
[10 217]
[11 216]
[12 215]
[19 37]
[20 36]
[21 35]
[22 34]
[23 33]
[24 32]
[40 165]
[41 164]
[42 163]
[43 162]
[45 161]
[46 160]
[47 159]
[48 158]
[49 157]
[51 155]
[52 154]
[53 153]
[54 152]
[55 151]
[56 150]
[57 79]
[58 78]
[60 77]
[61 76]
[62 75]
[63 74]
[64 73]
[65 72]
[66 71]
[89 107]
[90 106]
[91 105]
[92 104]
[93 102]
[94 101]
[95 100]
[120 142]
[121 141]
[122 140]
[123 139]
[124 138]
[126 136]
[127 135]
[172 214]
[173 213]
[174 212]
[175 211]
[176 210]
[177 209]
[178 208]
[182 203]
[183 202]
[184 201]
[185 200]
[186 199]
[187 198]
[189 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
