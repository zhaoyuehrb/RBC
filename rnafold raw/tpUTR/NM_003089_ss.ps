%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 16:14:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGGUCGUCCUCUCCAUCUGCUGUGUUUGGACGCGUUCCUGCCCAGCCCCUUGCUGUCAUCCCCUCCCCCAACCUUGGCCACUUGAGUUUGUCCUCCAAGGGUAGGUGUCUCAUUUGUUCUGGCCCCUUGGAUUUAAAAAUAAAAUUAAUUUCCUGUUGAUAGUGGGCA\
) } def
/len { sequence length } bind def

/coor [
[-22.69113159 262.35263062]
[-26.77268410 276.78665161]
[-30.85423470 291.22067261]
[-34.93578720 305.65469360]
[-39.01733780 320.08871460]
[-34.46924973 335.84454346]
[-46.03359985 347.47201538]
[-61.81397247 343.00976562]
[-65.57688141 327.04815674]
[-53.45135880 316.00714111]
[-49.36980820 301.57312012]
[-45.28825378 287.13909912]
[-41.20670319 272.70507812]
[-37.12515259 258.27108765]
[-42.50101852 253.04135132]
[-52.96047211 263.79309082]
[-63.42008972 274.54464722]
[-74.17150116 264.08486938]
[-63.71221161 253.33363342]
[-53.25275803 242.58189392]
[-58.62862778 237.35217285]
[-72.94470215 241.82989502]
[-87.26078033 246.30761719]
[-101.57685089 250.78533936]
[-112.43810272 262.28939819]
[-126.89477539 258.70416260]
[-141.21084595 263.18188477]
[-147.89051819 274.24475098]
[-159.93571472 277.66619873]
[-170.71894836 272.13217163]
[-185.11486816 276.34613037]
[-199.51078796 280.56008911]
[-208.44158936 293.88754272]
[-224.44093323 295.07101440]
[-235.23548889 283.20269775]
[-232.54460144 267.38693237]
[-218.43249512 259.75622559]
[-203.72476196 266.16418457]
[-189.32884216 261.95022583]
[-174.93292236 257.73623657]
[-163.53775024 244.41151428]
[-145.68856812 248.86581421]
[-131.37249756 244.38809204]
[-121.53522491 233.20429993]
[-106.05457306 236.46925354]
[-91.73850250 231.99153137]
[-77.42242432 227.51380920]
[-63.10634995 223.03608704]
[-50.04762268 215.65573120]
[-38.82699203 205.70097351]
[-27.60636330 195.74620056]
[-26.43300438 191.08097839]
[-22.29347610 187.11753845]
[-15.78583336 185.64111328]
[-4.20708418 176.10525513]
[7.37166595 166.56939697]
[18.95041466 157.03355408]
[30.52916527 147.49769592]
[42.10791397 137.96183777]
[53.68666458 128.42597961]
[49.99718094 121.27626038]
[47.40378952 113.66015625]
[45.96334076 105.74461365]
[45.70740509 97.70314789]
[46.64160156 89.71202087]
[48.74544144 81.94641876]
[51.97281647 74.57656097]
[56.25297928 67.76400757]
[61.49209976 61.65807724]
[67.57534027 56.39263153]
[74.36934662 52.08308411]
[81.72519684 48.82390594]
[89.48163605 46.68653870]
[97.46865082 45.71783447]
[98.84460449 30.78107452]
[100.22055817 15.84431648]
[101.59651184 0.90755862]
[102.97246552 -14.02919960]
[104.34841919 -28.96595764]
[92.92488861 -42.19039917]
[94.54901886 -59.25119400]
[107.73343658 -69.66432190]
[108.83475494 -84.62383270]
[96.89822388 -94.53840637]
[93.10163879 -109.58386230]
[98.90486908 -123.97489929]
[112.07645416 -132.17788696]
[127.55165100 -131.03860474]
[139.37992859 -120.99512482]
[143.01307678 -105.90937042]
[137.05406189 -91.58213043]
[123.79427338 -83.52251434]
[122.69294739 -68.56299591]
[132.40594482 -60.06260300]
[135.48394775 -47.32714081]
[130.58168030 -34.96684265]
[119.28517914 -27.59000397]
[117.90922546 -12.65324497]
[116.53327179 2.28351307]
[115.15731812 17.22027206]
[113.78135681 32.15702820]
[112.40540314 47.09378815]
[125.72776031 52.13515091]
[137.28233337 60.46535110]
[146.27522278 71.51200867]
[160.01181030 65.48657990]
[173.74841309 59.46114731]
[183.27821350 46.83206558]
[198.04154968 48.80519104]
[211.77813721 42.77976227]
[225.51473999 36.75432968]
[226.52091980 21.48192978]
[234.51918030 8.43254471]
[247.67156982 0.60482538]
[262.95578003 -0.20247443]
[276.85958862 6.19615650]
[286.18801880 18.33036041]
[288.79748535 33.41178513]
[284.08828735 47.97483063]
[273.14263916 58.67301559]
[258.47573853 63.04797363]
[243.45791626 60.09437180]
[231.54017639 50.49092865]
[217.80357361 56.51636124]
[204.06697083 62.54179382]
[195.51971436 74.73989105]
[179.77384949 73.19774628]
[166.03724670 79.22317505]
[152.30064392 85.24861145]
[154.22885132 103.49181366]
[149.97689819 121.33708191]
[162.82730103 129.07446289]
[175.67771912 136.81184387]
[194.07397461 136.70655823]
[201.99345398 152.34881592]
[214.98384094 159.84881592]
[227.97422791 167.34881592]
[240.96459961 174.84881592]
[255.08485413 168.41467285]
[270.28350830 171.54199219]
[280.71640015 183.02825928]
[282.37185669 198.45678711]
[274.61331177 211.89495850]
[260.42410278 218.17555237]
[245.26026917 214.88354492]
[234.95259094 203.28477478]
[233.46459961 187.83920288]
[220.47422791 180.33920288]
[207.48384094 172.83920288]
[194.49345398 165.33920288]
[182.70712280 168.16514587]
[171.81324768 161.99130249]
[167.94033813 149.66224670]
[155.08992004 141.92486572]
[142.23951721 134.18748474]
[125.18645477 148.15188599]
[103.98980713 154.19448853]
[82.13676453 151.32121277]
[63.22252274 140.00473022]
[51.64377213 149.54058838]
[40.06502151 159.07644653]
[28.48627090 168.61230469]
[16.90752220 178.14814758]
[5.32877207 187.68400574]
[-6.24997759 197.21986389]
[-17.65159225 206.96682739]
[-28.87222099 216.92160034]
[-40.09284973 226.87637329]
[-32.31874084 231.03781128]
[-26.00216103 238.79196167]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 14]
[2 13]
[3 12]
[4 11]
[5 10]
[21 48]
[22 47]
[23 46]
[24 45]
[26 43]
[27 42]
[30 40]
[31 39]
[32 38]
[49 168]
[50 167]
[51 166]
[54 165]
[55 164]
[56 163]
[57 162]
[58 161]
[59 160]
[60 159]
[74 102]
[75 101]
[76 100]
[77 99]
[78 98]
[79 97]
[82 93]
[83 92]
[105 129]
[106 128]
[107 127]
[109 125]
[110 124]
[111 123]
[131 155]
[132 154]
[133 153]
[135 150]
[136 149]
[137 148]
[138 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
