%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 08:17:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCUGCCACCCCAGGAGCAGCUCAGAUAGAAUCAGCUGGAGACCACAGCAUCACUGGACUUGCCAGACAACAAGUGGCGCAGAUAAACUCAGAGUACGAGAUCUGGCCCGUCAAAGGUGCUCUCAGAAUCAUCAUCUGCAUUUGGCGGUACCUGUCCCCCCUCAAAACCCACAGGUUCCUUUCUUUUCCAUCCAACAAUUAAAGAUCUUUGACACUA\
) } def
/len { sequence length } bind def

/coor [
[116.40360260 173.68560791]
[111.13874054 187.73129272]
[105.87387085 201.77697754]
[100.60900879 215.82264709]
[95.34413910 229.86833191]
[90.07927704 243.91401672]
[84.81440735 257.95968628]
[91.10821533 272.20840454]
[85.56880188 286.37774658]
[71.94604492 292.29010010]
[75.17142487 308.36892700]
[62.68237305 318.99700928]
[47.32655716 313.24102783]
[44.90072632 297.02230835]
[57.90036392 287.02523804]
[51.52043533 273.61508179]
[56.65967178 259.29577637]
[70.76873016 252.69483948]
[76.03359222 238.64915466]
[81.29846191 224.60346985]
[86.56332397 210.55778503]
[91.82819366 196.51210022]
[97.09305573 182.46643066]
[102.35792542 168.42074585]
[97.11198425 163.06068420]
[86.39188385 173.55256653]
[75.67178345 184.04443359]
[64.95168304 194.53631592]
[57.99840927 207.82736206]
[43.20919418 205.32154846]
[41.02227783 190.48181152]
[54.45980835 183.81620789]
[65.17990875 173.32434082]
[75.90000916 162.83245850]
[86.62010956 152.34059143]
[81.37417603 146.98054504]
[67.21846771 151.94198608]
[53.06275558 156.90341187]
[38.90704346 161.86485291]
[33.55303574 176.55732727]
[19.98173714 184.32609558]
[4.60109568 181.50299072]
[-5.32661676 169.42100525]
[-5.11383915 153.78486633]
[5.13896227 141.97749329]
[20.59072685 139.57395935]
[33.94560623 147.70915222]
[48.10131454 142.74771118]
[62.25702667 137.78627014]
[76.41273499 132.82482910]
[75.82160950 125.34815979]
[60.86825562 126.53018188]
[59.68647003 111.57680511]
[74.63935852 110.39482117]
[74.04824066 102.91815948]
[59.28874588 100.24282837]
[44.52925110 97.56749725]
[29.76976013 94.89216614]
[15.81818676 102.81259918]
[0.98129845 96.70962524]
[-3.35931516 81.26493073]
[6.12609386 68.32635498]
[22.16113091 67.81928253]
[32.44508743 80.13267517]
[47.20458221 82.80800629]
[61.96407318 85.48333740]
[76.72356415 88.15866089]
[81.14934540 82.10370636]
[69.03943634 73.25215149]
[54.78695297 68.57595825]
[54.83003616 53.57602310]
[69.10914612 48.98178482]
[77.89099121 61.14224243]
[90.00090790 69.99379730]
[94.42668152 63.93884659]
[87.64468384 57.82891083]
[87.39302826 50.44702148]
[80.55442810 37.09660721]
[73.71582794 23.74619293]
[67.02217865 17.53960419]
[66.87644196 10.15486240]
[60.23004913 -3.29227519]
[53.58366013 -16.73941231]
[46.93727112 -30.18655014]
[40.29088211 -43.63368607]
[35.95731735 -46.52228165]
[33.41545486 -50.39555740]
[32.74054337 -54.40773773]
[33.66186905 -57.80539703]
[27.60015869 -71.52602386]
[21.53844833 -85.24665833]
[6.46970272 -89.42599487]
[-2.34454536 -102.34277344]
[-0.74247617 -117.89807129]
[10.51946163 -128.74716187]
[26.12372589 -129.76744080]
[38.70246124 -120.47714233]
[42.31637192 -105.26288605]
[35.25907898 -91.30836487]
[41.32078934 -77.58773804]
[47.38249969 -63.86710739]
[53.73801804 -50.28007889]
[60.38440704 -36.83293915]
[67.03079987 -23.38580132]
[73.67718506 -9.93866444]
[80.32357788 3.50847292]
[87.06624603 16.90759277]
[93.90484619 30.25800705]
[100.74344635 43.60842133]
[107.67762756 56.90943909]
[120.72146606 64.31607056]
[135.70256042 63.56327057]
[150.68365479 62.81046295]
[165.66476440 62.05765915]
[180.64585876 61.30485153]
[195.62695312 60.55204773]
[210.60804749 59.79924393]
[225.58915710 59.04643631]
[240.57025146 58.29363251]
[260.90429688 4.20450163]
[270.43579102 -7.37784719]
[279.96725464 -18.96019554]
[276.97323608 -38.83317947]
[289.37576294 -54.25679779]
[308.81845093 -55.55658340]
[317.84280396 -67.53827667]
[326.86715698 -79.51996613]
[335.89154053 -91.50165558]
[332.19415283 -106.69584656]
[339.17471313 -120.68890381]
[353.53723145 -126.87372589]
[368.50015259 -122.33004761]
[376.99844360 -109.20323181]
[375.01947021 -93.69137573]
[363.49765015 -83.11869812]
[347.87322998 -82.47729492]
[338.84884644 -70.49560547]
[329.82449341 -58.51391220]
[320.80014038 -46.53222275]
[324.91302490 -37.13829041]
[324.75732422 -26.80390167]
[320.29418945 -17.39223671]
[312.26733398 -10.62787628]
[302.07992554 -7.78087711]
[291.54962158 -9.42871189]
[282.01812744 2.15363717]
[272.48663330 13.73598576]
[278.93945312 27.27708054]
[293.93908691 27.16949272]
[307.68338013 19.33340836]
[320.46582031 26.97922325]
[335.46545410 26.87163544]
[350.46505737 26.76404762]
[365.46469116 26.65645981]
[380.46429443 26.54887199]
[395.46389771 26.44128418]
[400.81765747 12.23910809]
[410.94320679 0.93257827]
[424.47116089 -5.94918919]
[439.57199097 -7.47549152]
[454.20339966 -3.43990898]
[466.38665771 5.61177874]
[474.47402954 18.45540619]
[477.37179565 33.35397720]
[474.68804932 48.29257965]
[466.78573608 61.25089645]
[454.73358154 70.47641754]
[440.16156006 74.72146606]
[425.04040527 73.41194153]
[411.41513062 66.72493744]
[401.12841797 55.56481552]
[395.57150269 41.44089890]
[380.57186890 41.54848480]
[365.57226562 41.65607452]
[350.57266235 41.76366043]
[335.57302856 41.87125015]
[320.57342529 41.97883606]
[307.90197754 49.80722427]
[294.04666138 42.16910553]
[279.04705811 42.27669525]
[275.91809082 49.09282684]
[284.59527588 61.32828140]
[269.66018677 62.72509003]
[266.53125000 69.54122162]
[276.22787476 80.98565674]
[285.92453003 92.43008423]
[295.62118530 103.87451935]
[310.08584595 99.20092773]
[325.23751831 100.42345428]
[338.76574707 107.35567474]
[348.60754395 118.94047546]
[353.26208496 133.41125488]
[352.01962280 148.56134033]
[345.06961060 162.08042908]
[333.47189331 171.90696716]
[318.99499512 176.54248047]
[303.84655762 175.28009033]
[290.33663940 168.31230164]
[280.52536011 156.70166016]
[275.90887451 142.21867371]
[277.19119263 127.07192230]
[284.17675781 113.57116699]
[274.48010254 102.12673187]
[264.78344727 90.68230438]
[255.08680725 79.23786926]
[241.32305908 73.27472687]
[226.34194946 74.02753448]
[211.36085510 74.78034210]
[196.37976074 75.53314209]
[181.39866638 76.28594971]
[166.41757202 77.03875732]
[151.43646240 77.79156494]
[136.45536804 78.54436493]
[121.47427368 79.29717255]
[134.27645874 84.94048309]
[144.96562195 97.26170349]
[150.42510986 115.17505646]
[148.14422607 136.25610352]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 24]
[2 23]
[3 22]
[4 21]
[5 20]
[6 19]
[7 18]
[10 15]
[36 50]
[37 49]
[38 48]
[39 47]
[55 67]
[56 66]
[57 65]
[58 64]
[75 110]
[77 109]
[78 108]
[79 107]
[81 106]
[82 105]
[83 104]
[84 103]
[85 102]
[89 101]
[90 100]
[91 99]
[111 214]
[112 213]
[113 212]
[114 211]
[115 210]
[116 209]
[117 208]
[118 207]
[119 206]
[120 147]
[121 146]
[122 145]
[125 139]
[126 138]
[127 137]
[128 136]
[148 180]
[149 179]
[151 177]
[152 176]
[153 175]
[154 174]
[155 173]
[156 172]
[184 205]
[185 204]
[186 203]
[187 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
