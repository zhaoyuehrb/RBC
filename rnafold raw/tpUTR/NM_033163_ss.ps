%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 18:34:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCUGCCUGGCCCUCCCCACAAUGCCAGACCGCAGAGAGGCUCAUCCUGUAGGGCACCCAAAACUCAAGCAAGAUGAGCUGUGCGCUGCUCUGCAGGCUGGGGAGGUGCUGGGGGAGCCCUGGGUUCCGGUUGUUGAUAUUGUUUGCUGUUGGGUUUUUGCUGUUUUUUUUUUUUUUUUUUUUUUUAAAACAAAAGAG\
) } def
/len { sequence length } bind def

/coor [
[81.04666901 150.64184570]
[66.13763428 148.99240112]
[54.73147964 139.25076294]
[50.76985550 124.78337097]
[55.62178802 110.58975220]
[67.61058807 101.57484436]
[82.59359741 100.85401917]
[68.40232086 95.99526215]
[54.21103668 91.13649750]
[40.01975632 86.27774048]
[25.82847595 81.41897583]
[11.63719559 76.56021881]
[-2.59180689 71.81306458]
[-16.85765457 67.17780304]
[-31.12350273 62.54255295]
[-45.38935089 57.90729523]
[-59.65519714 53.27204132]
[-73.92104340 48.63678741]
[-88.18688965 44.00153351]
[-102.45274353 39.36627579]
[-114.99225616 48.31427765]
[-130.21826172 48.16461182]
[-142.29373169 39.18424225]
[-146.71281433 24.98530960]
[-160.97865295 20.35005569]
[-175.24450684 15.71479988]
[-184.38235474 16.03855515]
[-189.69700623 10.89307785]
[-203.88829041 6.03431702]
[-218.07957458 1.17555571]
[-224.64434814 2.07361960]
[-229.88639832 -0.15033823]
[-232.63613892 -4.06513309]
[-246.66780090 -9.36725616]
[-260.69946289 -14.66937828]
[-274.73114014 -19.97150040]
[-289.57366943 -9.57012367]
[-307.53149414 -10.14854431]
[-321.42864990 -21.28699684]
[-325.82501221 -38.38364410]
[-340.01629639 -43.24240494]
[-354.20758057 -48.10116577]
[-368.39883423 -52.95992661]
[-382.59011841 -57.81868744]
[-396.78140259 -62.67744827]
[-410.97268677 -67.53620911]
[-425.16397095 -72.39497375]
[-440.72634888 -69.54494476]
[-450.26119995 -80.98767090]
[-464.45248413 -85.84643555]
[-478.64376831 -90.70520020]
[-496.62145996 -86.73882294]
[-507.63851929 -100.39376068]
[-521.90435791 -105.02901459]
[-536.17022705 -109.66426849]
[-548.04785156 -99.81916809]
[-563.36529541 -97.98114777]
[-577.23492432 -104.73671722]
[-585.23089600 -117.93019104]
[-584.80175781 -133.35159302]
[-576.08447266 -146.07998657]
[-561.86065674 -152.05381775]
[-546.66906738 -149.36683655]
[-535.35736084 -138.87644958]
[-531.53497314 -123.93011475]
[-517.26910400 -119.29486084]
[-503.00326538 -114.65960693]
[-492.08068848 -119.87109375]
[-480.15377808 -116.11931610]
[-473.78500366 -104.89647675]
[-459.59371948 -100.03771210]
[-445.40243530 -95.17895508]
[-430.85510254 -98.37651825]
[-420.30520630 -86.58625031]
[-406.11392212 -81.72749329]
[-391.92263794 -76.86872864]
[-377.73135376 -72.00997162]
[-363.54010010 -67.15120697]
[-349.34881592 -62.29244614]
[-335.15753174 -57.43368530]
[-320.96624756 -52.57492447]
[-312.17053223 -60.95673370]
[-300.57611084 -64.82304382]
[-288.36666870 -63.38088989]
[-277.86950684 -56.84330750]
[-271.11172485 -46.40041351]
[-269.42901611 -34.00316238]
[-255.39733887 -28.70103836]
[-241.36567688 -23.39891624]
[-227.33403015 -18.09679413]
[-213.22080994 -13.01572514]
[-199.02952576 -8.15696335]
[-184.83825684 -3.29820228]
[-170.60925293 1.44895232]
[-156.34339905 6.08420706]
[-142.07754517 10.71946239]
[-130.15652466 1.82975364]
[-115.10872650 1.66226852]
[-102.70266724 10.49080276]
[-97.81748962 25.10042953]
[-83.55163574 29.73568344]
[-69.28578949 34.37094116]
[-55.01994324 39.00619507]
[-40.75409698 43.64144897]
[-26.48824692 48.27670288]
[-12.22239971 52.91196060]
[2.04344797 57.54721451]
[9.38294506 56.62348175]
[16.49595642 62.36893463]
[30.68723679 67.22769928]
[44.87851715 72.08645630]
[59.06979752 76.94522095]
[73.26107788 81.80397797]
[87.45236206 86.66274261]
[116.94213867 66.37596893]
[130.70845032 60.41875458]
[144.47477722 54.46153641]
[158.24108887 48.50431824]
[172.00741577 42.54710007]
[185.77372742 36.58988190]
[199.54005432 30.63266182]
[205.67703247 14.25562477]
[221.44740295 7.51263857]
[236.90638733 14.12496567]
[250.57743835 7.95225048]
[264.24847412 1.77953529]
[270.12747192 -14.69187641]
[285.78997803 -21.68174171]
[301.35092163 -15.31304932]
[314.92333984 -21.69973755]
[328.49572754 -28.08642769]
[342.06814575 -34.47311783]
[345.88751221 -49.63710403]
[358.59072876 -58.75641251]
[374.17977905 -57.52518082]
[385.29394531 -46.52476120]
[386.68548584 -30.94921303]
[377.69732666 -18.15283585]
[362.57342529 -14.17768860]
[348.45483398 -20.90071106]
[334.88241577 -14.51402187]
[321.31002808 -8.12733269]
[307.73760986 -1.74064326]
[305.10980225 10.87909985]
[295.54864502 19.81240463]
[282.39413452 21.63181496]
[270.42120361 15.45058441]
[256.75015259 21.62330055]
[243.07910156 27.79601479]
[240.25338745 40.37292480]
[230.55310059 49.15494919]
[217.37164307 50.76751328]
[205.49726868 44.39898300]
[191.73095703 50.35620117]
[177.96463013 56.31341934]
[164.19831848 62.27063751]
[150.43199158 68.22785187]
[136.66567993 74.18507385]
[122.89935303 80.14228821]
[120.41432190 87.21863556]
[135.35144043 88.59060669]
[149.16413879 82.74171448]
[163.66316223 86.58596802]
[172.76353455 98.51002502]
[172.64602661 113.50955963]
[163.35992432 125.28955841]
[148.80244446 128.90617371]
[135.08309937 122.84156799]
[127.95945740 109.63991547]
[115.44425201 101.37131500]
[112.95921326 108.44765472]
[119.97816467 121.70413971]
[126.99710846 134.96063232]
[134.01605225 148.21711731]
[141.03500366 161.47358704]
[148.05395508 174.73007202]
[161.34942627 183.30567932]
[160.46693420 198.17411804]
[167.48588562 211.43060303]
[174.50482178 224.68708801]
[181.52377319 237.94357300]
[196.70120239 242.35054016]
[204.24375916 256.23886108]
[199.67657471 271.36883545]
[185.70928955 278.76412964]
[170.62843323 274.03726196]
[163.38122559 259.99255371]
[168.26728821 244.96252441]
[161.24835205 231.70603943]
[154.22940063 218.44955444]
[147.21044922 205.19306946]
[134.41702271 197.56565857]
[134.79747009 181.74902344]
[127.77851868 168.49253845]
[120.75957489 155.23605347]
[113.74062347 141.97956848]
[106.72167969 128.72308350]
[99.70273590 115.46660614]
[101.33471680 130.37756348]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 114]
[8 113]
[9 112]
[10 111]
[11 110]
[12 109]
[13 107]
[14 106]
[15 105]
[16 104]
[17 103]
[18 102]
[19 101]
[20 100]
[24 96]
[25 95]
[26 94]
[28 93]
[29 92]
[30 91]
[33 90]
[34 89]
[35 88]
[36 87]
[40 81]
[41 80]
[42 79]
[43 78]
[44 77]
[45 76]
[46 75]
[47 74]
[49 72]
[50 71]
[51 70]
[53 67]
[54 66]
[55 65]
[115 159]
[116 158]
[117 157]
[118 156]
[119 155]
[120 154]
[121 153]
[124 149]
[125 148]
[126 147]
[129 143]
[130 142]
[131 141]
[132 140]
[171 198]
[172 197]
[173 196]
[174 195]
[175 194]
[176 193]
[178 191]
[179 190]
[180 189]
[181 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
