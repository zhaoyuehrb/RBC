%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 21:32:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGAACAACAACAAACUAGGUGACAGAGACUAUGCCAACUAUUUCGCCUUUUAUUCUGUUGAGCAAGGAACUGUGACUGAAUGUGGAGCUUAUGAGCUUCAGUCCAUCUCCUAUAGUGUGGCUAGUUUGCUAUAAUAUUAAAACAUGAUUUAAAAUAUCAACAAACCAGUUACUCCAGUAAAUAAAAUAAGAGAAUUAGAGAGCA\
) } def
/len { sequence length } bind def

/coor [
[110.11813354 177.65954590]
[120.82209778 167.08885193]
[133.28630066 158.66517639]
[127.31028748 144.90701294]
[121.33426666 131.14883423]
[96.21308136 135.03118896]
[76.17158508 122.41759491]
[63.18120575 129.91760254]
[50.19082260 137.41760254]
[37.20044327 144.91760254]
[24.21006203 152.41760254]
[26.78552818 167.33712769]
[24.10618210 182.20968628]
[16.51439667 195.24368286]
[4.94313240 204.87570190]
[-9.19868660 209.95806885]
[-24.19770622 209.89552307]
[-38.24372101 204.71493530]
[-49.64814377 195.05964661]
[-62.63852310 202.55964661]
[-75.62890625 210.05964661]
[-88.61928558 217.55964661]
[-101.60966492 225.05964661]
[-114.60005188 232.55964661]
[-116.34096527 247.86570740]
[-126.64036560 259.08068848]
[-141.39414978 262.04547119]
[-154.90295410 255.82853699]
[-167.89334106 263.32855225]
[-167.81309509 278.68722534]
[-175.43688965 292.02038574]
[-188.71394348 299.74148560]
[-204.07279968 299.77359009]
[-217.38200378 292.10806274]
[-225.06144714 278.80685425]
[-225.04541016 263.44796753]
[-217.33818054 250.16285706]
[-204.01298523 242.52514648]
[-188.65422058 242.58934021]
[-175.39334106 250.33816528]
[-162.40295410 242.83816528]
[-161.03256226 228.03073120]
[-151.08808899 216.73597717]
[-136.22593689 213.42391968]
[-122.10005188 219.56927490]
[-109.10966492 212.06927490]
[-96.11928558 204.56927490]
[-83.12890625 197.06927490]
[-70.13852692 189.56927490]
[-57.14814377 182.06927490]
[-59.80765152 167.36511230]
[-57.27117157 152.61061096]
[-49.82582474 139.58979797]
[-38.35345840 129.88380432]
[-24.22624779 124.67881012]
[-9.14258480 124.62113190]
[5.07710457 129.73703003]
[16.71006203 139.42721558]
[29.70044327 131.92721558]
[42.69082260 124.42721558]
[55.68120575 116.92721558]
[68.67158508 109.42721558]
[67.32143402 101.56627655]
[67.91358185 93.61224365]
[70.41282654 86.03787994]
[74.67062378 79.29337311]
[80.43390656 73.77958679]
[74.45789337 60.02141953]
[68.48187256 46.26325226]
[62.50585938 32.50508118]
[48.07780457 26.63405418]
[42.21326447 12.59618378]
[47.89930344 -1.12258148]
[41.92328644 -14.88075066]
[35.63204956 -21.50773239]
[35.96273804 -28.89335632]
[30.19620514 -42.74063492]
[24.42967415 -56.58791351]
[18.66314125 -70.43518829]
[12.89661026 -84.28247070]
[7.13007927 -98.12974548]
[0.41090819 -84.71882629]
[-13.77825260 -79.85388184]
[-27.31272888 -86.32056427]
[-32.44271469 -100.41606903]
[-26.23079300 -114.06935120]
[-12.23389530 -119.46257019]
[1.53276968 -113.50823212]
[-2.95066977 -127.82251740]
[-7.43410921 -142.13679504]
[-11.91754913 -156.45108032]
[-24.34696579 -167.14883423]
[-21.03171349 -183.20936584]
[-5.38224220 -188.11100769]
[6.50261593 -176.81135559]
[2.39673686 -160.93452454]
[6.88017607 -146.62023926]
[11.36361599 -132.30595398]
[15.84705544 -117.99166870]
[20.97735786 -103.89627838]
[26.74388885 -90.04900360]
[32.51042175 -76.20172119]
[38.27695084 -62.35444641]
[44.04348373 -48.50716782]
[49.81001663 -34.65988922]
[55.68145752 -20.85676765]
[61.65747452 -7.09859800]
[75.56466675 -1.89037490]
[81.82118988 11.97723484]
[76.26403046 26.52906418]
[82.24004364 40.28723526]
[88.21606445 54.04540253]
[94.19207764 67.80357361]
[103.37004852 66.61384583]
[112.74754333 68.05389404]
[121.56836700 72.13729095]
[129.08612061 78.65979767]
[134.62696838 87.20655823]
[137.64880371 97.17718506]
[152.12286377 93.23995972]
[166.59690857 89.30272675]
[181.07096863 85.36549377]
[195.54502869 81.42826080]
[210.01907349 77.49103546]
[221.30447388 66.40272522]
[235.61637878 70.52805328]
[250.09043884 66.59082031]
[264.56448364 62.65359116]
[279.03854370 58.71635818]
[293.51260376 54.77912903]
[294.29183960 39.68441772]
[299.69122314 25.58871078]
[309.17025757 13.86793613]
[321.79080200 5.66203594]
[336.31005859 1.76408911]
[351.30282593 2.54367971]
[365.30148315 7.91189384]
[376.93960571 17.33125496]
[385.08532715 29.86951637]
[399.55938721 25.93228531]
[414.03344727 21.99505234]
[428.50750732 18.05782127]
[442.98153687 14.12059021]
[450.61318970 0.28102422]
[465.81860352 -4.02832031]
[479.57672119 3.74921465]
[483.72506714 18.99935532]
[475.80252075 32.67446518]
[460.50936890 36.66134262]
[446.91879272 28.59464455]
[432.44473267 32.53187561]
[417.97067261 36.46910477]
[403.49661255 40.40633774]
[389.02255249 44.34356689]
[388.35061646 59.28041840]
[383.08758545 73.29722595]
[373.73718262 85.01685333]
[361.20523071 93.28371429]
[346.71209717 97.27771759]
[331.67382812 96.59556580]
[317.56372070 91.29151154]
[305.76803589 81.87319946]
[297.44982910 69.25318146]
[282.97576904 73.19041443]
[268.50170898 77.12763977]
[254.02766418 81.06487274]
[239.55361938 85.00210571]
[229.30349731 95.80879211]
[213.95629883 91.96508789]
[199.48225403 95.90231323]
[185.00819397 99.83954620]
[170.53414917 103.77677917]
[156.06008911 107.71401215]
[141.58604431 111.65123749]
[135.09243774 125.17282104]
[141.06845093 138.93098450]
[147.04447937 152.68916321]
[161.70828247 149.32946777]
[176.73974609 148.72169495]
[191.62693787 150.88652039]
[205.86276245 155.75024414]
[218.96238708 163.14717102]
[230.47962952 172.82539368]
[240.02220154 184.45524597]
[247.26512146 197.64065552]
[251.96166992 211.93251038]
[253.95188904 226.84403992]
[253.16799927 241.86735535]
[249.63670349 256.49078369]
[243.47825623 270.21624756]
[234.90243530 282.57626343]
[224.20132446 293.14984131]
[211.73937988 301.57687378]
[197.94108582 307.57031250]
[183.27636719 310.92605591]
[168.24473572 311.52978516]
[153.35813904 309.36093140]
[139.12361145 304.49337769]
[126.02599335 297.09292603]
[114.51136017 287.41162109]
[104.97191620 275.77917480]
[97.73255920 262.59182739]
[93.03986359 248.29869080]
[91.05365753 233.38662720]
[91.84159851 218.36352539]
[95.37683868 203.74104309]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 177]
[4 176]
[5 175]
[7 62]
[8 61]
[9 60]
[10 59]
[11 58]
[19 50]
[20 49]
[21 48]
[22 47]
[23 46]
[24 45]
[28 41]
[29 40]
[67 113]
[68 112]
[69 111]
[70 110]
[73 107]
[74 106]
[76 105]
[77 104]
[78 103]
[79 102]
[80 101]
[81 100]
[88 99]
[89 98]
[90 97]
[91 96]
[119 174]
[120 173]
[121 172]
[122 171]
[123 170]
[124 169]
[126 167]
[127 166]
[128 165]
[129 164]
[130 163]
[139 154]
[140 153]
[141 152]
[142 151]
[143 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
