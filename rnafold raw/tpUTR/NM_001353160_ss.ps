%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 03:52:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUAGAAAAUCAAAUCCUUCACAUUUGAUUUGUGUCUUCCAAAUUAUAAAAUGUGCUCACUGGCUCAACUGUAUUUUUCAAAUAGCCUAGAUUUACUUAUUUUUUUAAAUGCUCAUUAAAAACUUGUAUACUAUGUAGUAAAAUGCUGUACUUGUUCUAUACAAUAAAACAGAUACUUCUUUUGUAAAAGCUUAGUAGUAA\
) } def
/len { sequence length } bind def

/coor [
[-36.83471680 307.99862671]
[-43.08099365 327.48226929]
[-54.36006546 344.54077148]
[-69.82598114 357.90472412]
[-88.32149506 366.58151245]
[-108.46463013 369.92892456]
[-128.75198364 367.70278931]
[-147.67089844 360.07467651]
[-156.37461853 372.29125977]
[-165.07833862 384.50787354]
[-173.78205872 396.72445679]
[-182.48576355 408.94107056]
[-191.18948364 421.15765381]
[-199.89320374 433.37426758]
[-208.59692383 445.59085083]
[-217.30064392 457.80746460]
[-213.20196533 472.89834595]
[-219.80932617 487.07144165]
[-234.00291443 493.63467407]
[-249.08097839 489.48904419]
[-257.92410278 476.59201050]
[-256.35681152 461.03317261]
[-245.11918640 450.15890503]
[-229.51724243 449.10372925]
[-220.81352234 436.88714600]
[-212.10980225 424.67053223]
[-203.40608215 412.45394897]
[-194.70236206 400.23733521]
[-185.99865723 388.02075195]
[-177.29493713 375.80413818]
[-168.59121704 363.58755493]
[-159.88749695 351.37094116]
[-167.08897400 344.15573120]
[-173.24209595 336.02523804]
[-178.23168945 327.13055420]
[-181.96429443 317.63714600]
[-184.36975098 307.72167969]
[-185.40266418 297.56878662]
[-185.04318237 287.36761475]
[-183.29739380 277.30822754]
[-180.19723511 267.57818604]
[-175.79989624 258.35900879]
[-170.18675232 249.82269287]
[-163.46191406 242.12869263]
[-155.75021362 235.42073059]
[-147.19497681 229.82429504]
[-137.95524597 225.44416809]
[-128.20297241 222.36250305]
[-118.11967468 220.63729858]
[-107.89313507 220.30133057]
[-97.71391296 221.36143494]
[-87.77172852 223.79847717]
[-78.25199890 227.56762695]
[-69.33233643 232.59924316]
[-61.17923737 238.80004883]
[-50.20981216 228.56913757]
[-39.24038696 218.33821106]
[-28.27095985 208.10729980]
[-25.52186394 201.24176025]
[-17.05171776 197.80455017]
[-5.92527962 187.74461365]
[5.20115805 177.68467712]
[16.32759666 167.62474060]
[27.37585831 157.47900391]
[38.34528351 147.24807739]
[49.31471252 137.01716614]
[40.62815857 120.35321808]
[37.26410675 101.86466980]
[39.52413559 83.20896149]
[47.20563889 66.05850983]
[59.61999130 51.95081711]
[75.65428925 42.15057755]
[71.52964783 27.72881317]
[67.40500641 13.30704689]
[63.28036499 -1.11471856]
[59.15572357 -15.53648472]
[55.03107834 -29.95825005]
[39.06581879 -35.53526688]
[29.66197395 -49.39051819]
[30.36017799 -65.95481110]
[40.68756104 -78.71123505]
[36.34023285 -93.06744385]
[31.99290466 -107.42365265]
[27.64557648 -121.77986145]
[23.29824829 -136.13607788]
[18.95092010 -150.49227905]
[3.90690303 -153.30938721]
[-8.09754658 -162.80422974]
[-14.30389214 -176.79492188]
[-13.28596210 -192.06654358]
[-5.27766848 -205.10977173]
[7.88074112 -212.92738342]
[23.16555977 -213.72291565]
[37.06444931 -207.31359863]
[46.38354492 -195.17221069]
[48.98139191 -180.08879089]
[44.26101685 -165.52937317]
[33.30712891 -154.83961487]
[37.65445709 -140.48339844]
[42.00178528 -126.12718964]
[46.34911346 -111.77098083]
[50.69644165 -97.41477203]
[55.04376984 -83.05856323]
[68.01080322 -79.86595154]
[77.78428650 -70.60749054]
[81.73661041 -57.62496567]
[78.73258209 -44.27981949]
[69.45284271 -34.08289337]
[73.57748413 -19.66112709]
[77.70213318 -5.23936033]
[81.82677460 9.18240547]
[85.95141602 23.60417175]
[90.07605743 38.02593613]
[97.28112793 37.29531860]
[104.52239227 37.39954376]
[111.70345306 38.33721924]
[118.72869110 40.09586716]
[125.50458527 42.65206909]
[131.94090271 45.97179031]
[137.95198059 50.01083755]
[143.45776367 54.71543121]
[148.38494873 60.02293777]
[152.66795349 65.86269379]
[156.24974060 72.15694427]
[159.08262634 78.82189941]
[173.70654297 75.48408508]
[188.33047485 72.14627075]
[202.95439148 68.80845642]
[217.57830811 65.47064209]
[232.20222473 62.13282776]
[246.82614136 58.79501343]
[255.25587463 45.69625854]
[270.13415527 42.51956177]
[282.56985474 50.63674164]
[297.19378662 47.29892731]
[311.81768799 43.96111679]
[319.49371338 38.99757385]
[326.69372559 40.68665695]
[341.36755371 37.57555008]
[356.04135132 34.46444321]
[370.71517944 31.35333824]
[376.91061401 17.12673950]
[390.30206299 9.28780460]
[405.74023438 10.85076523]
[417.28881836 21.21463013]
[420.50717163 36.39428329]
[414.15774536 50.55283737]
[400.68206787 58.24603653]
[385.26177979 56.51569366]
[373.82629395 46.02716064]
[359.15246582 49.13826370]
[344.47863770 52.24937057]
[329.80484009 55.36047745]
[315.15551758 58.58503342]
[300.53158569 61.92284775]
[285.90768433 65.26065826]
[278.22540283 77.96964264]
[263.44223022 81.56298065]
[250.16395569 73.41893005]
[235.54003906 76.75674438]
[220.91612244 80.09455872]
[206.29220581 83.43237305]
[191.66827393 86.77018738]
[177.04435730 90.10800171]
[162.42044067 93.44581604]
[162.67956543 103.24661255]
[161.40924072 112.96819305]
[158.64045715 122.37332916]
[154.44078064 131.23252869]
[148.91267395 139.32962036]
[159.39546204 150.05862427]
[169.87823486 160.78761292]
[180.36102295 171.51660156]
[190.84379578 182.24560547]
[206.42192078 180.88325500]
[219.20143127 189.89537048]
[223.14823914 205.02668762]
[216.39875793 219.13267517]
[202.13992310 225.55290222]
[187.10429382 221.25593567]
[178.39123535 208.27069092]
[180.11480713 192.72837830]
[169.63201904 181.99938965]
[159.14924622 171.27038574]
[148.66645813 160.54139709]
[138.18368530 149.81240845]
[119.46892548 159.66766357]
[98.54315186 162.74668884]
[77.78282928 158.69979858]
[59.54562759 147.98658752]
[48.57620239 158.21751404]
[37.60677719 168.44842529]
[33.46193695 176.59570312]
[26.38753510 178.75117493]
[15.26109791 188.81111145]
[4.13465929 198.87104797]
[-6.99177837 208.93098450]
[-18.04004097 219.07672119]
[-29.00946617 229.30764771]
[-39.97889328 239.53855896]
[-50.94831848 249.76948547]
[-40.91508865 267.63632202]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 32]
[9 31]
[10 30]
[11 29]
[12 28]
[13 27]
[14 26]
[15 25]
[16 24]
[55 201]
[56 200]
[57 199]
[58 198]
[60 197]
[61 196]
[62 195]
[63 194]
[64 192]
[65 191]
[66 190]
[72 113]
[73 112]
[74 111]
[75 110]
[76 109]
[77 108]
[81 103]
[82 102]
[83 101]
[84 100]
[85 99]
[86 98]
[125 165]
[126 164]
[127 163]
[128 162]
[129 161]
[130 160]
[131 159]
[134 156]
[135 155]
[136 154]
[138 153]
[139 152]
[140 151]
[141 150]
[170 186]
[171 185]
[172 184]
[173 183]
[174 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
