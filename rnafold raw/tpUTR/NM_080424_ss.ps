%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 16:56:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUGUUCUGUAAAGACUGAAGCAUCCCCACCUCAGGAUUCAGCUGAUGGGACCCUGGCUUGGACUGUUGAUUGCCAGUGAGUCUGGGAUGUAAUUGGCUGCCCUCAGGACCCAAACCCAGACACUUCAUAGGAUUAUCACACCCUCCAUCUUUAUUCUUUCUUUUUACCUUUAAAAGUCUAUAUCUACACUAAA\
) } def
/len { sequence length } bind def

/coor [
[80.57505798 336.96664429]
[77.94747925 321.76467896]
[83.97685242 307.56433105]
[96.73923492 298.89685059]
[96.25846100 283.90457153]
[95.77768707 268.91226196]
[85.23335266 261.49386597]
[80.82486725 249.17158508]
[84.37436676 236.37286377]
[94.80088043 227.83451843]
[94.56046295 212.83644104]
[94.32003784 197.83836365]
[86.37974548 185.23674011]
[93.89486694 171.31433105]
[93.65444946 156.31625366]
[93.41403198 141.31819153]
[93.17360687 126.32011414]
[92.93318939 111.32203674]
[91.15460968 111.12947083]
[89.33561707 110.67091370]
[74.88904572 114.70779419]
[60.44246674 118.74468231]
[45.99589157 122.78156281]
[40.10968018 140.98001099]
[24.57568550 151.88017273]
[5.75985289 151.23559570]
[-8.75867844 139.48651123]
[-22.99451447 144.21313477]
[-37.23035049 148.93975830]
[-51.46618652 153.66638184]
[-56.15073395 158.36030579]
[-61.67397690 159.76353455]
[-66.23466492 158.30841064]
[-80.61467743 162.57632446]
[-94.99469757 166.84423828]
[-109.37471771 171.11215210]
[-115.43614197 185.52719116]
[-129.36882019 192.62750244]
[-144.59416199 189.06056213]
[-153.92321777 176.51055908]
[-152.95111084 160.90322876]
[-142.13682556 149.60786438]
[-126.58654022 147.95779419]
[-113.64263153 156.73213196]
[-99.26261139 152.46421814]
[-84.88259125 148.19630432]
[-70.50257874 143.92839050]
[-56.19281006 139.43054199]
[-41.95697403 134.70391846]
[-27.72113800 129.97729492]
[-13.48530197 125.25067902]
[-12.17089462 114.15159607]
[-6.77983093 104.30251312]
[1.94058704 97.14862823]
[12.75143719 93.75593567]
[24.09812737 94.65251160]
[34.33393860 99.74672699]
[41.95900345 108.33499146]
[56.40558243 104.29810333]
[70.85215759 100.26121521]
[85.29873657 96.22433472]
[95.64728546 85.36580658]
[98.98509216 70.74188995]
[102.32290649 56.11797333]
[94.17885590 42.83971405]
[97.77220154 28.05652809]
[110.48117828 20.37425041]
[113.81899261 5.75033092]
[117.03950500 -8.89986801]
[120.14250183 -23.57540703]
[123.24549103 -38.25094604]
[126.34848785 -52.92648315]
[116.53879547 -67.40340424]
[120.15698242 -84.16721344]
[134.48898315 -92.95606995]
[137.35636902 -107.67945862]
[132.39976501 -122.70420074]
[142.42730713 -133.71771240]
[145.29469299 -148.44110107]
[148.16206360 -163.16448975]
[151.02944946 -177.88787842]
[153.54203796 -192.67594910]
[155.69839478 -207.52014160]
[157.85475159 -222.36433411]
[160.01110840 -237.20852661]
[162.16746521 -252.05271912]
[164.32382202 -266.89691162]
[166.48017883 -281.74111938]
[160.72779846 -286.62225342]
[157.06369019 -293.13885498]
[155.90333557 -300.45532227]
[157.34461975 -307.65219116]
[161.16145325 -313.84155273]
[166.83772278 -318.27661133]
[173.63661194 -320.44180298]
[176.97442627 -335.06570435]
[180.31224060 -349.68963623]
[183.65003967 -364.31356812]
[179.17756653 -379.48944092]
[189.55296326 -390.17590332]
[188.41131592 -399.25155640]
[193.06324768 -405.00656128]
[196.63500977 -419.57510376]
[191.53602600 -435.16137695]
[202.68460083 -447.18807983]
[218.61204529 -443.28314209]
[222.93357849 -427.46365356]
[211.20355225 -416.00332642]
[207.63179016 -401.43478394]
[204.17687988 -386.83807373]
[208.88810730 -372.70819092]
[198.27397156 -360.97573853]
[194.93615723 -346.35180664]
[191.59834290 -331.72790527]
[188.26052856 -317.10397339]
[197.18743896 -296.50408936]
[181.32437134 -279.58474731]
[179.16801453 -264.74057007]
[177.01165771 -249.89636230]
[174.85530090 -235.05216980]
[172.69894409 -220.20797729]
[170.54258728 -205.36378479]
[168.38624573 -190.51959229]
[170.20135498 -187.48304749]
[170.62872314 -183.41329956]
[169.19740295 -178.97550964]
[165.75283813 -175.02049255]
[162.88545227 -160.29710388]
[160.01808167 -145.57373047]
[157.15069580 -130.85034180]
[162.31239319 -116.87871552]
[152.07974243 -104.81208038]
[149.21237183 -90.08869171]
[157.84158325 -80.50994873]
[159.39758301 -67.51564026]
[153.08908081 -55.82764053]
[141.02403259 -49.82348633]
[137.92103577 -35.14794922]
[134.81803894 -20.47241020]
[131.71504211 -5.79687262]
[133.40927124 1.40660870]
[128.44291687 9.08814526]
[125.10510254 23.71206284]
[133.22227478 36.14777756]
[130.04559326 51.02605820]
[116.94683075 59.45578766]
[113.60901642 74.07970428]
[110.27120209 88.70362091]
[115.58354187 74.67582703]
[123.65269470 62.03111649]
[134.13751221 51.30410767]
[146.59468079 42.94833755]
[160.49751282 37.31708908]
[175.25822449 34.64844513]
[190.25270081 35.05524063]
[204.84700012 38.52027512]
[218.42407227 44.89704895]
[230.40986633 53.91595078]
[240.29765320 65.19566345]
[247.66934204 78.25927734]
[252.21328735 92.55447388]
[253.73736572 107.47684479]
[252.17712402 122.39547729]
[247.59854126 136.67962646]
[240.19520569 149.72532654]
[230.28012085 160.98104858]
[218.27249146 169.97087097]
[204.68000793 176.31471252]
[190.07736206 179.74436951]
[175.08192444 180.11480713]
[160.32774353 177.41040039]
[146.43858337 171.74546814]
[134.00170898 163.35952759]
[123.54292297 152.60714722]
[115.50444031 139.94290161]
[110.22612000 125.90227509]
[107.93126678 111.08161926]
[108.17168427 126.07969666]
[108.41210175 141.07775879]
[108.65251923 156.07583618]
[108.89293671 171.07391357]
[116.85043335 184.74830627]
[109.31811523 197.59794617]
[109.55853271 212.59602356]
[109.79895020 227.59410095]
[122.58411407 239.52519226]
[122.78694153 256.67382812]
[110.76998138 268.43148804]
[111.25075531 283.42379761]
[111.73152924 298.41607666]
[125.02301025 306.24804688]
[131.94981384 320.03292847]
[130.30163574 335.37200928]
[120.60437775 347.37063599]
[105.95241547 352.20007324]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 190]
[5 189]
[6 188]
[10 185]
[11 184]
[12 183]
[14 181]
[15 180]
[16 179]
[17 178]
[18 177]
[20 61]
[21 60]
[22 59]
[23 58]
[27 51]
[28 50]
[29 49]
[30 48]
[33 47]
[34 46]
[35 45]
[36 44]
[62 148]
[63 147]
[64 146]
[67 143]
[68 142]
[69 140]
[70 139]
[71 138]
[72 137]
[75 133]
[76 132]
[78 130]
[79 129]
[80 128]
[81 127]
[82 123]
[83 122]
[84 121]
[85 120]
[86 119]
[87 118]
[88 117]
[95 115]
[96 114]
[97 113]
[98 112]
[100 110]
[102 109]
[103 108]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
