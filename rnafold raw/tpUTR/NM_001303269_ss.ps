%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 12:20:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAUUUUACAGGAGUCAACAAGAUAAUUAAAUAUCUUGGUGUCUUGUUUCUAUUGUGUGGCUUUUUAAAAAUGACAAAUAUGUACUGUGUUGUGAUAAAAAGUAUUUUAUUUGUUUAAUGAUAUGCAUGCUUUUCUUCUGUAAAUAUAUAAUAAAUUUUUGUAGAUAGUCUUGA\
) } def
/len { sequence length } bind def

/coor [
[116.44393921 257.45590210]
[129.84489441 250.71687317]
[144.72506714 248.82461548]
[159.38616943 251.99508667]
[172.15684509 259.86810303]
[165.40704346 246.47259521]
[158.65722656 233.07705688]
[151.90742493 219.68153381]
[145.15762329 206.28601074]
[138.40780640 192.89048767]
[131.65800476 179.49496460]
[124.90819550 166.09944153]
[118.15839386 152.70390320]
[111.40858459 139.30838013]
[94.32012939 140.53448486]
[78.22679901 134.65879822]
[65.94820404 122.71079254]
[52.15528870 128.60617065]
[38.36237335 134.50154114]
[24.56945801 140.39692688]
[10.77654076 146.29229736]
[-3.01637602 152.18766785]
[-16.80929184 158.08305359]
[-30.60220909 163.97842407]
[-44.39512634 169.87379456]
[-51.08364868 176.14505005]
[-58.48894882 175.74873352]
[-72.38546753 181.39556885]
[-86.28199005 187.04240417]
[-100.17851257 192.68922424]
[-107.71714020 206.85075378]
[-123.51505280 209.64460754]
[-135.45344543 198.92758179]
[-134.37419128 182.92086792]
[-121.10522461 173.90344238]
[-105.82534027 178.79270935]
[-91.92882538 173.14587402]
[-78.03230286 167.49903870]
[-64.13578033 161.85221863]
[-50.29050064 156.08088684]
[-36.49758530 150.18550110]
[-22.70466805 144.29013062]
[-8.91175175 138.39476013]
[4.88116503 132.49937439]
[18.67408180 126.60400391]
[32.46699905 120.70863342]
[46.25991440 114.81325531]
[60.05282974 108.91787720]
[59.09523773 98.54905701]
[60.78509140 88.27413940]
[65.01302338 78.75814819]
[71.50539398 70.61697388]
[79.84199524 64.37754059]
[89.48326874 60.44367218]
[99.80520630 59.06997681]
[102.48355865 44.31103134]
[105.16191101 29.55208778]
[107.84027100 14.79314423]
[110.51862335 0.03420040]
[108.96949005 -9.00267506]
[113.37979889 -14.96461487]
[103.03276062 -26.37710571]
[101.40875244 -41.51698685]
[108.92218018 -54.55586243]
[122.51007843 -60.59797668]
[125.45293427 -75.30646515]
[128.39579773 -90.01494598]
[118.75640869 -98.03408051]
[113.48400116 -109.33089447]
[113.52813721 -121.72511292]
[118.81879425 -132.85346985]
[128.29142761 -140.62033081]
[140.10058594 -143.59223938]
[143.56951904 -158.18560791]
[147.03846741 -172.77897644]
[150.50741577 -187.37234497]
[153.97634888 -201.96571350]
[157.44529724 -216.55909729]
[160.91423035 -231.15246582]
[164.38317871 -245.74583435]
[158.69676208 -263.24374390]
[171.19982910 -275.53765869]
[174.40625000 -290.19094849]
[177.61267090 -304.84423828]
[180.81909180 -319.49752808]
[184.02549744 -334.15081787]
[171.52980042 -342.80676270]
[163.30197144 -355.58843994]
[160.59671021 -370.54672241]
[163.82655334 -385.40057373]
[172.49894714 -397.88488770]
[185.29144287 -406.09588623]
[200.25326538 -408.78146362]
[215.10284424 -405.53210449]
[227.57572937 -396.84329224]
[235.76989746 -384.04000854]
[238.43579102 -369.07464600]
[235.16690063 -354.22937012]
[226.46168518 -341.76791382]
[213.64762878 -333.59060669]
[198.67878723 -330.94439697]
[195.47238159 -316.29110718]
[192.26596069 -301.63781738]
[189.05953979 -286.98452759]
[185.85311890 -272.33123779]
[192.12017822 -261.96020508]
[189.54481506 -249.70919800]
[178.97654724 -242.27688599]
[175.50759888 -227.68351746]
[172.03866577 -213.09014893]
[168.56971741 -198.49678040]
[165.10078430 -183.90341187]
[161.63183594 -169.31004333]
[158.16290283 -154.71667480]
[154.69395447 -140.12330627]
[166.79771423 -127.29991150]
[168.82391357 -109.62535095]
[159.77807617 -94.12460327]
[143.10427856 -87.07209015]
[140.16142273 -72.36360168]
[137.21856689 -57.65511703]
[147.43569946 -46.85011673]
[149.35395813 -31.92415619]
[142.02981567 -18.57461357]
[128.08828735 -12.02175522]
[125.27756500 2.71255374]
[122.59921265 17.47149849]
[119.92086029 32.23044205]
[117.24250793 46.98938370]
[114.56414795 61.74832916]
[129.05064392 71.16660309]
[138.35990906 85.72338104]
[140.83291626 102.82444763]
[136.02894592 119.42215729]
[124.80410767 132.55857849]
[131.55392456 145.95410156]
[138.30372620 159.34962463]
[145.05352783 172.74514771]
[151.80334473 186.14068604]
[158.55314636 199.53620911]
[165.30294800 212.93173218]
[172.05276489 226.32725525]
[178.80256653 239.72277832]
[185.55236816 253.11830139]
[192.30450439 256.67428589]
[195.92127991 262.52920532]
[196.01614380 268.66491699]
[205.88522339 279.96099854]
[215.75430298 291.25704956]
[225.62339783 302.55313110]
[235.49247742 313.84921265]
[251.12228394 313.35644531]
[263.38012695 323.06619263]
[266.47824097 338.39379883]
[258.95376587 352.10205078]
[244.35952759 357.71832275]
[229.58650208 352.59078979]
[221.61004639 339.14050293]
[224.19639587 323.71829224]
[214.32731628 312.42221069]
[204.45823669 301.12612915]
[194.58915710 289.83007812]
[184.72007751 278.53399658]
[187.20634460 293.32650757]
[184.62516785 308.10275269]
[177.27113342 321.17633057]
[165.98356628 331.05514526]
[152.05072021 336.61172485]
[137.06272888 337.21191406]
[122.73018646 332.78717041]
[110.68885803 323.84255981]
[102.31301117 311.39886475]
[98.55859375 296.87631226]
[99.85409546 281.93237305]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 144]
[6 143]
[7 142]
[8 141]
[9 140]
[10 139]
[11 138]
[12 137]
[13 136]
[14 135]
[17 48]
[18 47]
[19 46]
[20 45]
[21 44]
[22 43]
[23 42]
[24 41]
[25 40]
[27 39]
[28 38]
[29 37]
[30 36]
[55 130]
[56 129]
[57 128]
[58 127]
[59 126]
[61 125]
[65 121]
[66 120]
[67 119]
[73 115]
[74 114]
[75 113]
[76 112]
[77 111]
[78 110]
[79 109]
[80 108]
[82 105]
[83 104]
[84 103]
[85 102]
[86 101]
[147 163]
[148 162]
[149 161]
[150 160]
[151 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
