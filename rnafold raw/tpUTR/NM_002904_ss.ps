%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 22:39:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAACAGAGCUGGAUUCCUUGUGCCUCAUAUGCCCCAAUGCUGGUCUCAGUAAAACACUGAGGUGGAAGCUUACACAUCUCCCUCAGCCUCUGGUUUUUCAGCACUUGGGAUUGGGGUUAAACCUUUAAAAACGGCUGUCAGGUUUGAUCUCAGUGUAACAACAUGGCCAGUGCCUGUUCCCCACUCCCUUGCCCCAAAAGGAUCUGGAACACA\
) } def
/len { sequence length } bind def

/coor [
[221.90505981 360.80377197]
[214.94914246 347.51409912]
[207.99322510 334.22442627]
[201.03730774 320.93475342]
[194.08139038 307.64508057]
[187.12548828 294.35543823]
[180.16957092 281.06576538]
[164.86268616 272.48022461]
[165.78175354 254.08760071]
[158.63240051 240.90098572]
[151.48304749 227.71437073]
[144.33367920 214.52777100]
[137.18432617 201.34115601]
[133.92958069 199.99249268]
[131.16543579 197.00202942]
[129.65570068 192.61703491]
[130.02507019 187.41629028]
[123.46044159 173.92904663]
[110.93347168 165.87149048]
[111.85093689 150.07690430]
[105.28631592 136.58966064]
[98.72169495 123.10240936]
[97.80036926 138.07409668]
[90.47190094 151.16200256]
[78.18894958 159.77183533]
[63.38628387 162.19691467]
[48.99812317 157.95654297]
[37.87652206 147.89126587]
[32.22603607 133.99623108]
[33.16672134 119.02574921]
[40.51211166 105.94732666]
[52.80618668 97.35338593]
[67.61197662 94.94744873]
[81.99449921 99.20634460]
[69.07778931 91.58015442]
[56.16108704 83.95397186]
[43.24438095 76.32778168]
[30.32767487 68.70159912]
[17.35559654 61.16998291]
[4.32884026 53.73334122]
[-8.69791698 46.29670334]
[-21.72467422 38.86006546]
[-34.75143051 31.42342567]
[-47.77818680 23.98678589]
[-65.85264587 29.67161942]
[-82.06305695 20.49448395]
[-86.33988190 2.69267845]
[-99.57837677 -4.36014414]
[-112.81687164 -11.41296673]
[-126.05535889 -18.46578979]
[-134.42651367 -11.95875645]
[-144.44888306 -8.61794949]
[-154.97360229 -8.79953098]
[-164.80313110 -12.45742130]
[-172.82743835 -19.15143394]
[-178.14945984 -28.10009193]
[-180.18521118 -38.27180099]
[-178.72789001 -48.50374985]
[-191.53178406 -56.31785583]
[-204.33567810 -64.13195801]
[-217.13958740 -71.94606781]
[-229.94348145 -79.76016998]
[-242.74737549 -87.57427216]
[-258.55776978 -88.15883636]
[-265.39102173 -101.39349365]
[-278.19491577 -109.20759583]
[-290.99880981 -117.02170563]
[-306.80920410 -117.60626221]
[-313.64245605 -130.84091187]
[-328.94241333 -126.88028717]
[-342.51913452 -134.97029114]
[-346.31777954 -150.31126404]
[-338.08468628 -163.80169678]
[-322.70440674 -167.43794250]
[-309.30178833 -159.06268311]
[-305.82833862 -143.64482117]
[-290.93377686 -143.61917114]
[-283.18469238 -129.82559204]
[-270.38079834 -122.01148987]
[-257.57690430 -114.19738770]
[-242.68232727 -114.17174530]
[-234.93327332 -100.37817383]
[-222.12937927 -92.56406403]
[-209.32546997 -84.74996185]
[-196.52157593 -76.93585968]
[-183.71768188 -69.12174988]
[-170.91378784 -61.30764771]
[-153.39807129 -70.02226257]
[-134.03381348 -66.35601807]
[-120.72238922 -51.62728882]
[-119.00254059 -31.70428276]
[-105.76404572 -24.65145874]
[-92.52555084 -17.59863663]
[-79.28706360 -10.54581451]
[-69.35763550 -16.15759850]
[-57.83294678 -16.28196335]
[-47.57353592 -10.77240276]
[-41.18165588 -0.89514047]
[-40.34154892 10.96002960]
[-27.31479073 18.39666939]
[-14.28803444 25.83330727]
[-1.26127756 33.26994705]
[11.76547909 40.70658493]
[24.79223633 48.14322662]
[32.15733337 48.72929001]
[37.95386124 55.78488922]
[50.87056732 63.41107559]
[63.78727341 71.03726196]
[76.70397949 78.66345215]
[89.62068176 86.28963470]
[104.46083069 84.10562134]
[114.63278198 73.08148956]
[124.80472565 62.05735397]
[134.97666931 51.03322220]
[145.14862061 40.00909042]
[155.32057190 28.98495865]
[165.49252319 17.96082687]
[175.66447449 6.93669558]
[185.83641052 -4.08743620]
[196.00836182 -15.11156845]
[206.18031311 -26.13570023]
[216.35226440 -37.15983200]
[226.52420044 -48.18396378]
[236.69615173 -59.20809555]
[246.86810303 -70.23222351]
[240.15834045 -83.84632111]
[238.82353210 -98.96527100]
[243.04421997 -113.54437256]
[252.24958801 -125.61191559]
[265.19467163 -133.53587341]
[280.12878418 -136.24458313]
[295.03216553 -133.37171936]
[307.88931274 -125.30582428]
[316.96133423 -113.13772583]
[321.02136230 -98.51306915]
[319.52029419 -83.40971375]
[312.66116333 -69.87027740]
[301.37155151 -59.72583771]
[287.17834473 -54.34836197]
[272.00103760 -54.46510696]
[257.89224243 -60.06027985]
[247.72029114 -49.03614807]
[237.54833984 -38.01201630]
[227.37638855 -26.98788452]
[217.20443726 -15.96375275]
[207.03250122 -4.93962049]
[196.86054993 6.08451128]
[186.68859863 17.10864258]
[176.51664734 28.13277435]
[166.34469604 39.15690613]
[156.17276001 50.18103790]
[146.00080872 61.20516968]
[135.82885742 72.22930145]
[125.65691376 83.25343323]
[115.48496246 94.27756500]
[128.73368835 87.24398804]
[143.27873230 90.91029358]
[151.61044312 103.38356018]
[149.42715454 118.22381592]
[137.85610962 127.76900482]
[122.87143707 127.09091949]
[112.20893860 116.53778839]
[118.77355957 130.02503967]
[125.33818054 143.51228333]
[138.33470154 152.53453064]
[136.94769287 167.36442566]
[143.51231384 180.85166931]
[150.37094116 194.19180298]
[157.52029419 207.37840271]
[164.66964722 220.56501770]
[171.81900024 233.75163269]
[178.96835327 246.93824768]
[191.08665466 251.34942627]
[196.77049255 262.47729492]
[193.45922852 274.10983276]
[200.41514587 287.39950562]
[207.37106323 300.68917847]
[214.32698059 313.97885132]
[221.28289795 327.26852417]
[228.23881531 340.55816650]
[235.19471741 353.84783936]
[242.82090759 366.76455688]
[251.09742737 379.27450562]
[259.37393188 391.78448486]
[274.75756836 392.59085083]
[286.57843018 402.18881226]
[290.43542480 416.73486328]
[285.05200195 430.59689331]
[293.32852173 443.10687256]
[301.60501099 455.61682129]
[309.88153076 468.12680054]
[325.43771362 469.72030640]
[336.29302979 480.97625732]
[337.32189941 496.57995605]
[328.03854370 509.16381836]
[312.82626343 512.78607178]
[298.86785889 505.73651123]
[292.75402832 491.34362793]
[297.37158203 476.40332031]
[289.09506226 463.89334106]
[280.81854248 451.38339233]
[272.54202271 438.87341309]
[257.67864990 438.40655518]
[245.79972839 429.16772461]
[241.58950806 414.53463745]
[246.86396790 400.06100464]
[238.58746338 387.55102539]
[230.31094360 375.04107666]
[227.42564392 389.76095581]
[215.83149719 399.27807617]
[200.83154297 399.23937988]
[189.28663635 389.66259766]
[186.47732544 374.92800903]
[193.68853760 361.77511597]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 181]
[2 180]
[3 179]
[4 178]
[5 177]
[6 176]
[7 175]
[9 172]
[10 171]
[11 170]
[12 169]
[13 168]
[17 167]
[18 166]
[20 164]
[21 163]
[22 162]
[34 110]
[35 109]
[36 108]
[37 107]
[38 106]
[39 104]
[40 103]
[41 102]
[42 101]
[43 100]
[44 99]
[47 94]
[48 93]
[49 92]
[50 91]
[58 87]
[59 86]
[60 85]
[61 84]
[62 83]
[63 82]
[65 80]
[66 79]
[67 78]
[69 76]
[111 155]
[112 154]
[113 153]
[114 152]
[115 151]
[116 150]
[117 149]
[118 148]
[119 147]
[120 146]
[121 145]
[122 144]
[123 143]
[124 142]
[125 141]
[182 208]
[183 207]
[184 206]
[188 202]
[189 201]
[190 200]
[191 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
