%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 14:05:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCCGCAGGGACCCACGCUGUCUGCGCUGGCUCCACCCGGGAACCCGCCGCACGCUGUGUUCUAGGCCCGCCCACCCCAACCUUCUGGUGGGGAGAAAUAAACGGUUUAGAGACU\
) } def
/len { sequence length } bind def

/coor [
[124.56980133 212.84397888]
[121.76699829 198.10815430]
[118.96418762 183.37234497]
[116.16138458 168.63652039]
[113.35857391 153.90071106]
[110.55577087 139.16490173]
[83.67235565 133.72541809]
[68.41424561 113.57000732]
[70.19076538 90.50517273]
[57.40642548 82.65911102]
[44.62208939 74.81304932]
[35.54259109 72.95104218]
[31.60383034 66.58080292]
[19.03475189 58.39433289]
[-2.30352426 58.76408386]
[-11.29062748 40.26554871]
[-24.47768593 33.11701584]
[-37.66474533 25.96848488]
[-50.85180283 18.81995583]
[-66.67140198 19.04537392]
[-74.17306519 6.17780495]
[-87.36012268 -0.97072607]
[-103.17972565 -0.74530780]
[-110.68138885 -13.61287594]
[-123.86844635 -20.76140785]
[-137.05551147 -27.90993690]
[-150.24256897 -35.05846786]
[-163.52439880 -42.02931595]
[-179.33224487 -41.37925339]
[-187.17668152 -54.04077911]
[-200.55090332 -60.83268738]
[-216.35874939 -60.18262482]
[-224.20318604 -72.84415436]
[-237.57740784 -79.63606262]
[-250.95162964 -86.42797089]
[-266.58758545 -82.83684540]
[-279.05392456 -92.93487549]
[-278.78750610 -108.97571564]
[-265.99273682 -118.65420532]
[-250.48464966 -114.54583740]
[-244.15972900 -99.80219269]
[-230.78549194 -93.01028442]
[-217.41127014 -86.21838379]
[-202.56004333 -87.35424805]
[-193.75900269 -74.20691681]
[-180.38476562 -67.41500854]
[-165.53353882 -68.55087280]
[-156.73249817 -55.40354538]
[-149.24632263 -55.17760086]
[-143.09403992 -48.24552536]
[-129.90696716 -41.09699631]
[-116.71991730 -33.94846344]
[-103.53285980 -26.79993439]
[-88.65648651 -27.53666306]
[-80.21159363 -14.15778446]
[-67.02453613 -7.00925350]
[-52.14816284 -7.74598265]
[-43.70327377 5.63289642]
[-30.51621437 12.78142738]
[-17.32915497 19.92995834]
[-4.14209700 27.07848930]
[4.05536413 23.11297798]
[13.29449463 23.44612312]
[21.42583084 28.13028717]
[26.49706459 36.19060516]
[27.22122002 45.82525253]
[39.79029846 54.01171875]
[52.46815109 62.02870941]
[65.25248718 69.87477112]
[78.03682709 77.72083282]
[87.25096130 69.74533081]
[99.33438110 65.62905121]
[112.65776825 66.38021088]
[125.25248718 72.31774139]
[135.10105896 82.96535492]
[140.45626831 97.06686401]
[155.29299927 94.85968781]
[170.12971497 92.65250397]
[184.96644592 90.44532013]
[199.80316162 88.23813629]
[207.95533752 83.82832336]
[215.06732178 86.17642975]
[229.95794678 84.36837769]
[242.73593140 74.08951569]
[257.92681885 80.26763153]
[259.90350342 96.54721069]
[246.63256836 106.18122101]
[231.76599121 99.25901031]
[216.87536621 101.06706238]
[202.01034546 103.07485962]
[187.17362976 105.28204346]
[172.33689880 107.48922729]
[157.50018311 109.69640350]
[142.66345215 111.90358734]
[138.32049561 118.01821136]
[152.39912415 123.19433594]
[167.29124451 124.99002075]
[176.04862976 137.16819763]
[173.01083374 151.85737610]
[160.14137268 159.56301880]
[145.75857544 155.30450439]
[139.15898132 141.83561707]
[129.63455200 130.24746704]
[125.29158783 136.36209106]
[128.09439087 151.09790039]
[130.89720154 165.83372498]
[133.70001221 180.56953430]
[136.50280762 195.30535889]
[139.30561829 210.04116821]
[153.39921570 216.53349304]
[160.95568848 230.08631897]
[159.06944275 245.48832703]
[148.46574402 256.81710815]
[133.22196960 259.71652222]
[119.19963074 253.07170105]
[111.79061890 239.43769836]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 109]
[2 108]
[3 107]
[4 106]
[5 105]
[6 104]
[9 70]
[10 69]
[11 68]
[13 67]
[14 66]
[16 61]
[17 60]
[18 59]
[19 58]
[21 56]
[22 55]
[24 53]
[25 52]
[26 51]
[27 50]
[28 48]
[30 46]
[31 45]
[33 43]
[34 42]
[35 41]
[76 94]
[77 93]
[78 92]
[79 91]
[80 90]
[82 89]
[83 88]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
