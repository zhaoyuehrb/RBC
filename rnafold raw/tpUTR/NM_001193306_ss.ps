%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 02:47:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGGAGCUGGGGGACACUUUCGAGCUCCCAGCUCCAGCUUCGUCUCACCUUGAGUUAGGCUGAGCCACAGGCAUUUCCUGCUUAUUUUAGGAUUACCCACUCAUCAGAAAAAAAAAAAAAAGCCUUUGUGUCCCCUGAUUUGGGGAGAAUAAACAGAUAUGAGUUUAUUA\
) } def
/len { sequence length } bind def

/coor [
[93.52525330 116.76578522]
[82.77517700 127.22695160]
[72.02510834 137.68811035]
[61.27503586 148.14927673]
[50.71669769 158.80392456]
[40.35356903 169.64854431]
[29.99044228 180.49314880]
[19.62731552 191.33776855]
[9.26418877 202.18237305]
[-1.09893787 213.02699280]
[-11.46206474 223.87159729]
[-21.82519150 234.71620178]
[-32.18831635 245.56082153]
[-42.55144501 256.40542603]
[-52.91456985 267.25003052]
[-56.59907150 275.64837646]
[-63.56570435 278.19534302]
[-60.93592834 293.48794556]
[-67.82734680 307.39074707]
[-81.59006500 314.55783081]
[-96.93204498 312.23330688]
[-107.95397186 301.31100464]
[-110.41769409 285.99075317]
[-103.37586212 272.16354370]
[-89.53620148 265.14617920]
[-74.22034454 267.63699341]
[-63.75918198 256.88693237]
[-53.39605713 246.04231262]
[-43.03292847 235.19769287]
[-32.66980362 224.35308838]
[-22.30667686 213.50846863]
[-11.94354916 202.66386414]
[-1.58042288 191.81924438]
[8.78270435 180.97463989]
[19.14583015 170.13002014]
[29.50895691 159.28541565]
[39.87208557 148.44079590]
[40.65767670 143.69700623]
[44.45428848 139.40788269]
[50.81386948 137.39921570]
[61.56394196 126.93804932]
[72.31401062 116.47688293]
[83.06408691 106.01571655]
[83.81978607 89.08713531]
[99.10018921 78.95901489]
[117.59255981 85.80689240]
[123.42704773 71.98811340]
[129.26153564 58.16933060]
[129.72212219 49.00988770]
[135.32948303 44.15412521]
[141.41392517 30.44356918]
[147.49838257 16.73301125]
[148.12521362 7.58344269]
[153.81982422 2.83030295]
[160.15223694 -10.76750946]
[166.48464966 -24.36532211]
[172.81707764 -37.96313477]
[179.14949036 -51.56094742]
[185.48190308 -65.15876007]
[191.81431580 -78.75657654]
[198.14672852 -92.35438538]
[194.46847534 -104.74131775]
[200.05036926 -115.94837952]
[211.40158081 -120.19322205]
[217.97985840 -133.67379761]
[213.07131958 -148.45703125]
[219.93467712 -162.03456116]
[234.05848694 -166.62298584]
[240.63677979 -180.10357666]
[239.73532104 -195.89907837]
[252.27044678 -203.94393921]
[258.84872437 -217.42451477]
[265.42703247 -230.90510559]
[272.00531006 -244.38568115]
[255.22848511 -262.81631470]
[250.89024353 -288.52813721]
[261.58999634 -313.56561279]
[285.07461548 -329.50125122]
[284.80221558 -344.49877930]
[284.52984619 -359.49630737]
[284.25747681 -374.49383545]
[283.98510742 -389.49136353]
[271.71252441 -399.18249512]
[268.59112549 -414.50537109]
[276.09478760 -428.22503662]
[290.68048096 -433.86349487]
[305.46127319 -428.75839233]
[313.45812988 -415.32022095]
[310.89520264 -399.89410400]
[298.98260498 -389.76376343]
[299.25500488 -374.76623535]
[299.52737427 -359.76870728]
[299.79974365 -344.77117920]
[300.07214355 -329.77365112]
[307.10678101 -327.17297363]
[312.30813599 -341.24230957]
[317.50946045 -355.31164551]
[322.71102905 -369.38088989]
[336.78021240 -364.17910767]
[331.57879639 -350.11029053]
[326.37747192 -336.04095459]
[321.17611694 -321.97164917]
[328.21078491 -319.37097168]
[338.17330933 -330.58471680]
[340.94421387 -346.74807739]
[356.41918945 -352.17550659]
[368.67892456 -341.28372192]
[365.11163330 -325.27725220]
[349.38705444 -320.62222290]
[339.42456055 -309.40844727]
[343.50219727 -301.32107544]
[346.06036377 -292.74078369]
[347.05380249 -283.94689941]
[346.48754883 -275.21908569]
[344.41567993 -266.82864380]
[340.93850708 -259.02987671]
[336.19833374 -252.05261230]
[330.37399292 -246.09523010]
[323.67419434 -241.31921387]
[316.33041382 -237.84484863]
[308.58874512 -235.74829102]
[300.70178223 -235.06025696]
[292.92044067 -235.76609802]
[285.48590088 -237.80740356]
[278.90759277 -224.32681274]
[272.32931519 -210.84623718]
[265.75103760 -197.36564636]
[267.12301636 -182.53436279]
[254.11735535 -173.52528381]
[247.53906250 -160.04470825]
[252.61318970 -146.08802795]
[246.13389587 -132.32308960]
[231.46044922 -127.09552002]
[224.88215637 -113.61492920]
[227.05917358 -96.21683502]
[211.74455261 -86.02197266]
[205.41212463 -72.42415619]
[199.07971191 -58.82634354]
[192.74729919 -45.22853088]
[186.41488647 -31.63072014]
[180.08247375 -18.03290749]
[173.75004578 -4.43509436]
[167.41763306 9.16271877]
[161.20893860 22.81746674]
[155.12449646 36.52802658]
[149.04003906 50.23858261]
[143.08032227 64.00382233]
[137.24583435 77.82260132]
[131.41133118 91.64138031]
[131.81987000 106.63581848]
[138.39816284 120.11640167]
[144.97645569 133.59698486]
[151.55473328 147.07757568]
[158.13302612 160.55815125]
[164.71131897 174.03874207]
[171.28959656 187.51931763]
[186.59426880 190.07801819]
[197.44799805 201.16748047]
[199.67730713 216.52359009]
[192.42498779 230.24159241]
[178.47970581 237.04664612]
[163.20370483 234.32206726]
[152.47091675 223.11550903]
[150.40830994 207.73612976]
[157.80902100 194.09761047]
[151.23072815 180.61701965]
[144.65243530 167.13644409]
[138.07415771 153.65585327]
[131.49586487 140.17527771]
[124.91757965 126.69468689]
[118.33929443 113.21410370]
[110.24617004 118.39969635]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 43]
[2 42]
[3 41]
[4 40]
[5 37]
[6 36]
[7 35]
[8 34]
[9 33]
[10 32]
[11 31]
[12 30]
[13 29]
[14 28]
[15 27]
[17 26]
[46 149]
[47 148]
[48 147]
[50 146]
[51 145]
[52 144]
[54 143]
[55 142]
[56 141]
[57 140]
[58 139]
[59 138]
[60 137]
[61 136]
[64 134]
[65 133]
[68 130]
[69 129]
[71 127]
[72 126]
[73 125]
[74 124]
[78 94]
[79 93]
[80 92]
[81 91]
[82 90]
[103 110]
[104 109]
[150 171]
[151 170]
[152 169]
[153 168]
[154 167]
[155 166]
[156 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
