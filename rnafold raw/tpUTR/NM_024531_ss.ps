%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 12:58:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUGGGCAGGUGGGGACCCCGCUCCCCAACACCUGUCUUUCCCUCAAUGCUGCCACCAUGCCUGAGUGCCUGCAGCCCAGGAGGCCCGCACACCGGUACACUCGUGGACACCUACACACUCCAUAGGAGAUCCUGGCUUUCCAGGGUGGGCAAGGGCAAGGAGCAGGCUUGGAGCCAGGGACCAGUGGGGGCUGUAGGGUAAGCCCCUGAGCCUGGGACCUACAUGUGGUUUGCGUAAUAAAACAUUUGUAUUU\
AAUGAGUUGGCAUUAAUU\
) } def
/len { sequence length } bind def

/coor [
[249.13220215 679.64172363]
[247.92959595 664.69000244]
[246.72698975 649.73828125]
[241.31016541 644.86059570]
[236.74108887 639.58068848]
[229.49067688 652.71203613]
[222.24028015 665.84332275]
[214.98986816 678.97467041]
[207.73945618 692.10601807]
[200.48905945 705.23730469]
[193.23864746 718.36865234]
[185.98823547 731.49993896]
[178.96473694 744.75402832]
[172.17021179 758.12695312]
[165.37567139 771.49981689]
[158.58114624 784.87274170]
[151.78662109 798.24560547]
[156.92530823 813.19116211]
[149.91581726 827.35601807]
[134.91677856 832.33636475]
[120.82683563 825.17755127]
[116.00531006 810.12670898]
[123.31272125 796.11322021]
[138.41372681 791.45111084]
[145.20825195 778.07818604]
[152.00277710 764.70526123]
[158.79730225 751.33239746]
[165.59184265 737.95947266]
[164.87455750 734.54315186]
[165.75332642 730.61175537]
[168.45161438 726.90881348]
[172.85691833 724.24957275]
[180.10733032 711.11822510]
[187.35772705 697.98687744]
[194.60813904 684.85559082]
[201.85855103 671.72424316]
[209.10894775 658.59295654]
[216.35935974 645.46160889]
[223.60977173 632.33032227]
[211.91636658 621.01495361]
[203.77841187 606.90722656]
[199.83058167 591.09112549]
[200.38517761 574.78442383]
[205.40757751 559.24505615]
[214.51814270 545.67382812]
[227.02099609 535.12200928]
[241.95712280 528.40954590]
[258.17797852 526.06152344]
[260.06478882 511.18063354]
[261.95162964 496.29977417]
[263.83843994 481.41891479]
[256.19229126 465.60565186]
[267.50149536 451.05169678]
[269.21759033 436.15017700]
[270.93368530 421.24868774]
[272.64974976 406.34716797]
[274.36584473 391.44564819]
[270.00830078 359.33865356]
[262.75790405 346.20733643]
[249.83264160 338.80551147]
[249.93557739 322.98461914]
[242.68516541 309.85330200]
[235.43476868 296.72198486]
[228.18435669 283.59066772]
[220.93394470 270.45935059]
[201.84887695 266.39941406]
[191.79814148 249.31791687]
[197.69755554 230.07595825]
[189.99984741 217.20175171]
[182.30215454 204.32754517]
[174.60444641 191.45333862]
[166.90673828 178.57911682]
[154.11506653 177.22148132]
[144.28651428 168.62451172]
[141.14633179 155.74967957]
[146.05476379 143.23095703]
[138.50517273 130.26933289]
[130.95558167 117.30770874]
[123.40599060 104.34608459]
[121.31330109 135.41545105]
[82.39659882 156.16830444]
[30.29979134 131.26264954]
[17.60546875 123.27176666]
[4.91114569 115.28089142]
[-13.42292118 120.16685486]
[-29.21392822 110.23731232]
[-32.63436508 92.22624969]
[-45.50857544 84.52854156]
[-58.38278580 76.83083344]
[-74.22911072 79.33554077]
[-85.96967316 68.40216064]
[-84.59811401 52.41784668]
[-71.16658783 43.64439392]
[-55.97859955 48.81204224]
[-50.68508148 63.95662308]
[-37.81087112 71.65432739]
[-24.93665886 79.35203552]
[-14.78061676 74.25039673]
[-3.30336356 74.67234039]
[6.65601873 80.62870026]
[12.57853508 90.74710083]
[12.90202618 102.58656311]
[25.59634781 110.57744598]
[38.29067230 118.56832886]
[48.77496719 107.84081268]
[40.49511719 95.33305359]
[32.21526337 82.82529449]
[16.70763206 82.28399658]
[4.50061655 72.70441437]
[0.28806177 57.77009201]
[5.68978214 43.22357941]
[18.62870598 34.65830994]
[34.12955093 35.36779785]
[46.23192978 45.07923889]
[50.28222656 60.05838394]
[44.72302246 74.54544067]
[53.00287628 87.05319977]
[61.28272629 99.56095886]
[74.91805267 93.30812836]
[88.55216980 87.05586243]
[84.47642517 72.62020111]
[80.40068054 58.18453598]
[76.32493591 43.74887848]
[66.20232391 30.14854240]
[76.46893311 16.65657997]
[92.27570343 22.78701973]
[90.76059723 39.67313385]
[94.83634186 54.10879135]
[98.91208649 68.54445648]
[102.98783112 82.98011780]
[117.89893341 81.34948730]
[118.75838470 66.37413025]
[119.61784363 51.39876938]
[120.47729492 36.42341232]
[121.33675385 21.44805527]
[122.19620514 6.47269773]
[123.05565643 -8.50265980]
[115.20397949 -22.89999199]
[123.97640228 -36.75555801]
[140.34860229 -35.81593704]
[147.47827148 -21.04773140]
[138.03102112 -7.64320612]
[137.17156982 7.33215141]
[136.31210327 22.30750847]
[135.45265198 37.28286743]
[134.59320068 52.25822449]
[133.73374939 67.23358154]
[132.87429810 82.20893860]
[136.36761475 96.79649353]
[143.91720581 109.75811768]
[151.46679688 122.71974182]
[159.01638794 135.68136597]
[176.02461243 139.84834290]
[184.57208252 154.74298096]
[179.78094482 170.88140869]
[187.47865295 183.75563049]
[195.17636108 196.62983704]
[202.87406921 209.50404358]
[210.57177734 222.37826538]
[221.17518616 222.31706238]
[230.78208923 226.61143494]
[237.70135498 234.43249512]
[240.74526978 244.33726501]
[239.43298340 254.53456116]
[234.06527710 263.20895386]
[241.31567383 276.34027100]
[248.56608582 289.47158813]
[255.81649780 302.60290527]
[263.06689453 315.73422241]
[276.51074219 324.07528687]
[275.88922119 338.95690918]
[283.13961792 352.08822632]
[282.60775757 337.09765625]
[293.31658936 326.59426880]
[308.29403687 327.41632080]
[317.78900146 339.02862549]
[315.61972046 353.87094116]
[303.19897461 362.28002930]
[318.07983398 360.39321899]
[332.96069336 358.50637817]
[342.63497925 346.29794312]
[357.75314331 344.59643555]
[369.33239746 353.89462280]
[384.21325684 352.00778198]
[399.09411621 350.12097168]
[413.97497559 348.23416138]
[428.82119751 346.09167480]
[443.62835693 343.69421387]
[458.43551636 341.29675293]
[473.24267578 338.89929199]
[488.04986572 336.50183105]
[502.85702515 334.10437012]
[517.66418457 331.70690918]
[532.47137451 329.30944824]
[539.34790039 315.39929199]
[553.10296631 308.21746826]
[568.44738770 310.52557373]
[579.48101807 321.43609619]
[581.96112061 336.75369263]
[574.93408203 350.58843994]
[561.10192871 357.62060547]
[545.78338623 355.14617920]
[534.86883545 344.11660767]
[520.06164551 346.51406860]
[505.25448608 348.91152954]
[490.44732666 351.30899048]
[475.64013672 353.70645142]
[460.83297729 356.10394287]
[446.02581787 358.50140381]
[431.21865845 360.89886475]
[428.88232422 363.49258423]
[425.18887329 365.10095215]
[420.60714722 365.10501099]
[415.86181641 363.11499023]
[400.98095703 365.00183105]
[386.10009766 366.88864136]
[371.21923828 368.77548218]
[362.32702637 380.66934204]
[347.26260376 382.79483032]
[334.84750366 373.38723755]
[319.96664429 375.27407837]
[305.08578491 377.16088867]
[318.62976074 383.60766602]
[321.21832275 398.38262939]
[310.67272949 409.04986572]
[295.86904907 406.63095093]
[289.26736450 393.16174316]
[287.55126953 408.06326294]
[285.83517456 422.96475220]
[284.11911011 437.86627197]
[282.40301514 452.76779175]
[289.78411865 463.31536865]
[288.07153320 475.67062378]
[278.71929932 483.30575562]
[276.83245850 498.18661499]
[274.94564819 513.06744385]
[273.05883789 527.94830322]
[287.96630859 533.13024902]
[301.16247559 542.17974854]
[311.65023804 554.55242920]
[318.60125732 569.44866943]
[321.42062378 585.86517334]
[319.79602051 602.66223145]
[313.72778320 618.64294434]
[303.53689575 632.63848877]
[310.78729248 645.76977539]
[318.03771973 658.90112305]
[325.28811646 672.03240967]
[340.66720581 674.86389160]
[350.58837891 686.95129395]
[350.36709595 702.58728027]
[340.10787964 714.38909912]
[324.65481567 716.78424072]
[311.30435181 708.64178467]
[306.36019897 693.80639648]
[312.15679932 679.28283691]
[304.90637207 666.15155029]
[297.65597534 653.02020264]
[290.40557861 639.88885498]
[283.22384644 642.05059814]
[287.54702759 656.41406250]
[273.18347168 660.73706055]
[268.86041260 646.37396240]
[261.67871094 648.53570557]
[262.88131714 663.48736572]
[264.08392334 678.43908691]
[277.39797974 686.40875244]
[283.45388794 700.69531250]
[279.92297363 715.80529785]
[268.16299438 725.92864990]
[252.69586182 727.17272949]
[239.46902466 719.05914307]
[233.56848145 704.70770264]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 266]
[2 265]
[3 264]
[5 39]
[6 38]
[7 37]
[8 36]
[9 35]
[10 34]
[11 33]
[12 32]
[13 28]
[14 27]
[15 26]
[16 25]
[17 24]
[48 237]
[49 236]
[50 235]
[51 234]
[53 231]
[54 230]
[55 229]
[56 228]
[57 227]
[58 172]
[59 171]
[61 169]
[62 168]
[63 167]
[64 166]
[65 165]
[68 159]
[69 158]
[70 157]
[71 156]
[72 155]
[76 152]
[77 151]
[78 150]
[79 149]
[82 104]
[83 103]
[84 102]
[87 97]
[88 96]
[89 95]
[105 118]
[106 117]
[107 116]
[120 130]
[121 129]
[122 128]
[123 127]
[131 148]
[132 147]
[133 146]
[134 145]
[135 144]
[136 143]
[137 142]
[178 222]
[179 221]
[180 220]
[183 217]
[184 216]
[185 215]
[186 214]
[187 210]
[188 209]
[189 208]
[190 207]
[191 206]
[192 205]
[193 204]
[194 203]
[245 259]
[246 258]
[247 257]
[248 256]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
