%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 13:11:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGAAGAAACUGACAUUCCUUUAAAAAUAUAAAUAUAAAUACAUACAUACAUAGAUAUAUACCCAGACUUGGGUGCUUAGCUUCAGAUACUCUAUGCCCAGAGAUAGUGCACUUGGCAGCUGUCAGAUACCAUUCAUCUACUUCUCUGUAAAAUGUCUGUUCUACUUCACACAGUGGUCGAGAGGCUAAAAUAAAAUGAAAAGCAUAAAACUCUCUG\
) } def
/len { sequence length } bind def

/coor [
[216.73004150 344.40060425]
[217.71018982 325.18585205]
[227.02140808 308.29296875]
[217.82609558 296.44198608]
[208.63079834 284.59097290]
[199.43548584 272.73995972]
[190.24018860 260.88894653]
[171.84878540 254.90765381]
[169.43278503 234.89062500]
[159.90129089 223.30827332]
[150.36981201 211.72593689]
[136.30809021 206.81501770]
[133.51341248 191.24258423]
[123.98193359 179.66024780]
[114.45044708 168.07789612]
[104.91896057 156.49554443]
[95.38748169 144.91319275]
[85.85599518 133.33084106]
[94.64053345 145.48945618]
[101.07784271 159.03793335]
[104.95502472 173.52818298]
[106.14385986 188.48100281]
[104.60503387 203.40185547]
[100.38942719 217.79730225]
[93.63645935 231.19123840]
[84.56947327 243.14070129]
[73.48833466 253.25050354]
[60.75950241 261.18630981]
[46.80395126 266.68563843]
[32.08322525 269.56665039]
[17.08415794 269.73400879]
[2.30280280 267.18225098]
[-11.77199364 261.99572754]
[-24.67474937 254.34594727]
[-35.97874832 244.48594666]
[-45.31013870 232.74179077]
[-52.36032104 219.50189209]
[-56.89612579 205.20411682]
[-58.76755142 190.32131958]
[-57.91270065 175.34570312]
[-54.35984421 160.77252197]
[-48.22649002 147.08377075]
[-39.71547318 134.73214722]
[-29.10826874 124.12615204]
[-16.75568199 115.61653900]
[-3.06623387 109.48473358]
[11.50733662 105.93353271]
[26.48305511 105.08037567]
[41.36564255 106.95348358]
[55.66290665 111.49091339]
[68.89975739 118.54112244]
[56.12987137 110.67156219]
[43.35998154 102.80200195]
[30.59009552 94.93243408]
[17.82020950 87.06287384]
[5.05032206 79.19331360]
[-8.30009174 72.35471344]
[-22.14796829 66.58962250]
[-36.61318588 72.36848450]
[-50.57477570 66.32459259]
[-55.99489594 52.49860764]
[-69.84277344 46.73351669]
[-83.69065094 40.96842575]
[-97.53852844 35.20333099]
[-111.38640594 29.43824005]
[-125.23428345 23.67314911]
[-141.41842651 26.31994057]
[-151.59185791 13.45784950]
[-145.28901672 -1.68171012]
[-128.99372864 -3.52445555]
[-119.46919250 9.82527065]
[-105.62131500 15.59036350]
[-91.77343750 21.35545540]
[-77.92556000 27.12054634]
[-64.07768250 32.88563919]
[-50.22980499 38.65073013]
[-36.59952164 32.75572968]
[-22.47368050 38.40508270]
[-16.38287735 52.74174500]
[-2.53499961 58.50683594]
[-10.77374840 45.97196579]
[-12.33205605 31.05312920]
[-6.86147594 17.08628464]
[4.41473293 7.19451475]
[18.97513199 3.58968878]
[33.56391525 7.07787037]
[44.91893005 16.87907791]
[50.50111389 30.80169296]
[49.06225204 45.73252487]
[40.92408752 58.33293152]
[27.90636444 65.78537750]
[12.91988277 66.42343140]
[25.68976974 74.29299164]
[38.45965576 82.16255188]
[51.22954559 90.03211212]
[63.99943161 97.90167236]
[76.76931763 105.77123260]
[79.05723572 91.78144836]
[88.47058105 82.37809753]
[100.74723816 80.39495087]
[107.00514221 66.76268768]
[113.26304626 53.13042450]
[119.52095032 39.49816132]
[125.77885437 25.86589432]
[132.03675842 12.23363018]
[132.77178955 3.13492131]
[138.48344421 -1.54830515]
[144.93626404 -15.08939934]
[151.38906860 -28.63049316]
[157.84187317 -42.17158890]
[147.54516602 -56.41897964]
[145.89476013 -73.83052063]
[153.25576782 -89.59731293]
[167.51695251 -99.41065979]
[184.69532776 -100.63938141]
[190.75703430 -114.36000824]
[196.81874084 -128.08064270]
[189.19206238 -141.46495056]
[190.88905334 -156.59683228]
[201.05065918 -167.69664001]
[215.62532043 -170.64915466]
[221.68702698 -184.36978149]
[222.55720520 -201.30139160]
[239.06799316 -205.15234375]
[247.33911133 -190.35285950]
[235.40765381 -178.30807495]
[229.34594727 -164.58744812]
[236.97750854 -151.82432556]
[235.61415100 -136.83749390]
[225.56999207 -125.39336395]
[210.53936768 -122.01892853]
[204.47766113 -108.29830170]
[198.41595459 -94.57766724]
[206.92193604 -85.24477386]
[211.28433228 -73.34495544]
[210.82244873 -60.63240051]
[205.56958008 -48.99539185]
[196.27322388 -40.17579269]
[184.28900146 -35.50835037]
[171.38296509 -35.71877670]
[164.93016052 -22.17768288]
[158.47735596 -8.63658905]
[152.02453613 4.90450525]
[145.66902161 18.49153519]
[139.41111755 32.12379837]
[133.15321350 45.75606537]
[126.89530945 59.38832855]
[120.63740540 73.02059174]
[114.37950134 86.65285492]
[120.49140930 97.07820129]
[119.46649170 109.76419067]
[110.94494629 120.06665802]
[97.43833923 123.79936218]
[106.96982574 135.38171387]
[116.50131226 146.96406555]
[126.03279877 158.54640198]
[135.56428528 170.12875366]
[145.09576416 181.71110535]
[159.83924866 187.45046997]
[161.95216370 202.19444275]
[171.48364258 213.77679443]
[181.01513672 225.35914612]
[191.87637329 225.78237915]
[200.53532410 231.98277283]
[204.27655029 241.71923828]
[202.09118652 251.69364929]
[211.28649902 263.54464722]
[220.48179626 275.39566040]
[229.67710876 287.24667358]
[238.87242126 299.09768677]
[249.34626770 295.28247070]
[260.43344116 294.28973389]
[271.38787842 296.17819214]
[281.47445679 300.81304932]
[290.01837158 307.87545776]
[296.45034790 316.88446045]
[300.34445190 327.22973633]
[301.44635010 338.21298218]
[299.68991089 349.09500122]
[295.20111084 359.14544678]
[288.28900146 367.69195557]
[296.61138916 380.17144775]
[304.93374634 392.65097046]
[313.25610352 405.13046265]
[321.57849121 417.60998535]
[335.65515137 412.24383545]
[350.57302856 410.14511108]
[365.58383179 411.41906738]
[379.93466187 416.00177002]
[392.90567017 423.66342163]
[403.84625244 434.01965332]
[412.20761108 446.55105591]
[417.57034302 460.62899780]
[419.66543579 475.54739380]
[418.38787842 490.55789185]
[413.80166626 504.90762329]
[406.13687134 517.87677002]
[395.77798462 528.81481934]
[383.24456787 537.17315674]
[369.16531372 542.53247070]
[354.24642944 544.62396240]
[339.23623657 543.34277344]
[324.88763428 538.75305176]
[311.92031860 531.08514404]
[300.98477173 520.72357178]
[292.62951660 508.18817139]
[287.27359009 494.10760498]
[285.18569946 479.18820190]
[286.47058105 464.17831421]
[291.06372070 449.83081055]
[298.73477173 436.86538696]
[309.09896851 425.93234253]
[300.77661133 413.45285034]
[292.45425415 400.97332764]
[284.13186646 388.49383545]
[275.80950928 376.01431274]
[257.10745239 379.59951782]
[238.67396545 374.62887573]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 170]
[4 169]
[5 168]
[6 167]
[7 166]
[9 162]
[10 161]
[11 160]
[13 158]
[14 157]
[15 156]
[16 155]
[17 154]
[18 153]
[51 97]
[52 96]
[53 95]
[54 94]
[55 93]
[56 92]
[57 80]
[58 79]
[61 76]
[62 75]
[63 74]
[64 73]
[65 72]
[66 71]
[100 149]
[101 148]
[102 147]
[103 146]
[104 145]
[105 144]
[107 143]
[108 142]
[109 141]
[110 140]
[115 133]
[116 132]
[117 131]
[121 127]
[122 126]
[181 216]
[182 215]
[183 214]
[184 213]
[185 212]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
