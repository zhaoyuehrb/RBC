%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 21:48:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCCUUACCCACCAGAACAGGGGUUUUGAUGCCCUCACUAGUGUUGAAGCCUGUUCCAGAGAGAGGUGGGACUGCAAGGAGAGGAUGGUCAGCCCUACCCACCUGCCCUGUUUGAACUUCCUGUUUGACAAUGUUUGCUGUUGAUUUUUUGUUCAAUAAAGAAUUUGGUAAAAUUGGGA\
) } def
/len { sequence length } bind def

/coor [
[97.95104980 285.39431763]
[97.69213867 270.39654541]
[97.43323517 255.39877319]
[83.70013428 246.42713928]
[77.95433044 230.88531494]
[82.64179993 214.81918335]
[96.10823822 204.60482788]
[95.59049225 189.61376953]
[95.07275391 174.62271118]
[94.55500793 159.63165283]
[94.03726959 144.64057922]
[78.41113281 139.52539062]
[65.66240692 129.14216614]
[57.49028015 114.87479401]
[54.98394775 98.62487793]
[58.47746277 82.55824280]
[67.50520325 68.81629181]
[58.56321335 56.77299881]
[49.62122345 44.72970581]
[40.67923737 32.68641663]
[31.73725128 20.64312363]
[22.79526329 8.59983349]
[13.85327625 -3.44345808]
[-0.26168904 -8.51965427]
[-14.82581615 -4.92991924]
[-29.38994408 -1.34018445]
[-43.95407104 2.24955058]
[-58.51819992 5.83928537]
[-73.08232880 9.42902088]
[-87.64645386 13.01875496]
[-102.21057892 16.60848999]
[-116.77470398 20.19822502]
[-131.33883667 23.78796005]
[-145.90295410 27.37769508]
[-151.62942505 41.79945755]
[-164.75711060 50.07251358]
[-180.23815918 49.01570511]
[-192.11978149 39.03539276]
[-195.83326721 23.96921730]
[-189.95068359 9.61042500]
[-176.73402405 1.48026609]
[-161.26535034 2.70495272]
[-149.49269104 12.81356812]
[-134.92857361 9.22383308]
[-120.36444092 5.63409805]
[-105.80031586 2.04436302]
[-91.23619080 -1.54537189]
[-76.67205811 -5.13510704]
[-62.10793304 -8.72484207]
[-47.54380417 -12.31457710]
[-32.97967911 -15.90431213]
[-18.41555214 -19.49404716]
[-3.85142398 -23.08378220]
[-4.09845114 -41.72930908]
[7.74883699 -53.23720169]
[5.68403435 -68.09440613]
[3.61923146 -82.95161438]
[1.55442882 -97.80882263]
[-0.89432538 -112.60758972]
[-3.72538924 -127.33800507]
[-6.55645323 -142.06842041]
[-11.26058578 -149.92936707]
[-9.30695057 -157.07739258]
[-21.95181465 -166.17382812]
[-24.35412979 -181.19659424]
[-15.60414219 -193.19548035]
[-18.18052864 -207.97257996]
[-20.75691414 -222.74966431]
[-23.33329964 -237.52674866]
[-25.90968513 -252.30383301]
[-28.48607063 -267.08090210]
[-31.06245613 -281.85800171]
[-46.34170914 -289.08450317]
[-54.23313522 -303.84317017]
[-51.80648804 -320.23443604]
[-40.21206284 -331.83865356]
[-43.04312515 -346.56906128]
[-52.41195297 -352.15875244]
[-57.04916763 -361.79028320]
[-55.63512421 -372.16415405]
[-48.87891006 -379.87225342]
[-51.19984818 -394.69158936]
[-65.07431030 -401.63989258]
[-72.18495941 -415.43188477]
[-69.79760742 -430.76419067]
[-58.83024597 -441.74130249]
[-43.50004578 -444.14224243]
[-29.70178032 -437.04382324]
[-22.74116516 -423.17553711]
[-25.29469872 -407.86999512]
[-36.38049316 -397.01254272]
[-34.05955505 -382.19317627]
[-20.83875656 -368.10357666]
[-28.31271172 -349.40011597]
[-25.48164749 -334.66970825]
[-12.90747070 -330.14038086]
[-4.14805126 -319.90298462]
[-1.57702386 -306.56683350]
[-5.97237825 -293.60156250]
[-16.28537178 -284.43438721]
[-13.70898628 -269.65728760]
[-11.13260078 -254.88021851]
[-8.55621433 -240.10313416]
[-5.97982883 -225.32604980]
[-3.40344310 -210.54896545]
[-0.82705724 -195.77188110]
[11.46724224 -187.44206238]
[14.29056835 -172.49269104]
[5.47013474 -159.65377808]
[8.17395973 -144.89949036]
[11.00502396 -130.16906738]
[13.83608818 -115.43865967]
[16.56012917 -113.16159821]
[18.30463409 -109.44081116]
[18.39809418 -104.75672913]
[16.41163635 -99.87362671]
[18.47643852 -85.01641846]
[20.54124069 -70.15921021]
[22.60604286 -55.30200577]
[36.92231750 -45.91514969]
[39.33858109 -27.42695618]
[25.89656639 -12.38544559]
[34.83855438 -0.34215423]
[43.78054047 11.70113659]
[52.72253036 23.74442863]
[61.66451645 35.78771973]
[70.60650635 47.83100891]
[79.54849243 59.87430191]
[93.96147156 55.36960602]
[109.05330658 55.88227463]
[123.12736511 61.35467529]
[134.60142517 71.17160034]
[142.18559265 84.22942352]
[145.02723694 99.06017303]
[142.80691528 113.99658966]
[156.08874512 120.96743774]
[169.37059021 127.93828583]
[182.65243530 134.90913391]
[197.57327271 130.43630981]
[210.94364929 137.69494629]
[215.11584473 151.94725037]
[228.39768982 158.91809082]
[241.67953491 165.88894653]
[254.96136475 172.85978699]
[268.24322510 179.83064270]
[281.52505493 186.80148315]
[295.37475586 179.80398560]
[310.68704224 182.31678772]
[321.57397461 193.37365723]
[323.84933472 208.72299194]
[316.63818359 222.46267700]
[302.71337891 229.30952454]
[287.42926025 226.63076782]
[276.66290283 215.45645142]
[274.55419922 200.08332825]
[261.27236938 193.11247253]
[247.99052429 186.14163208]
[234.70867920 179.17077637]
[221.42684937 172.19993591]
[208.14500427 165.22908020]
[194.04550171 169.89166260]
[180.47651672 163.01144409]
[175.68157959 148.19096375]
[162.39973450 141.22012329]
[149.11790466 134.24926758]
[135.83605957 127.27842712]
[128.34422302 134.99916077]
[119.23505402 140.72282410]
[109.02832794 144.12284851]
[109.54607391 159.11390686]
[110.06381226 174.10496521]
[110.58155823 189.09602356]
[111.09929657 204.08709717]
[123.07715607 210.93734741]
[130.04499817 222.72151184]
[130.27163696 236.30133057]
[123.80488586 248.12136841]
[112.43099976 255.13986206]
[112.68991089 270.13763428]
[112.94881439 285.13540649]
[115.47173309 304.35217285]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 180]
[2 179]
[3 178]
[7 173]
[8 172]
[9 171]
[10 170]
[11 169]
[17 128]
[18 127]
[19 126]
[20 125]
[21 124]
[22 123]
[23 122]
[24 53]
[25 52]
[26 51]
[27 50]
[28 49]
[29 48]
[30 47]
[31 46]
[32 45]
[33 44]
[34 43]
[55 119]
[56 118]
[57 117]
[58 116]
[59 112]
[60 111]
[61 110]
[63 109]
[66 106]
[67 105]
[68 104]
[69 103]
[70 102]
[71 101]
[72 100]
[76 95]
[77 94]
[81 92]
[82 91]
[135 166]
[136 165]
[137 164]
[138 163]
[141 160]
[142 159]
[143 158]
[144 157]
[145 156]
[146 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
