%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 01:21:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCUACCAUUCGGUAACCAUGUGAAAGGAUGGACCAAUAUCAAGGUGUCAGUUGACCUCAGUGAAUUCUGUGAUGUUUCUGAGAUGCAGACUCCCGUGUAGUUUCAGAUUCUUGGUCCAUGGAUGACACCACCUGCCCAUGCUUCCUUGAAUUAGGCUUUCCUAACCUGAAGCGCCUUCAAACUUCCAAUAAAGAGAUCAUUUUCUGCUUCAUCUGC\
) } def
/len { sequence length } bind def

/coor [
[454.90243530 416.27426147]
[461.55661011 399.70208740]
[450.14349365 389.96859741]
[438.73037720 380.23507690]
[427.31729126 370.50158691]
[422.57482910 369.97924805]
[418.10867310 366.47552490]
[415.72076416 360.31939697]
[404.59289551 350.26104736]
[393.46502686 340.20266724]
[382.33715820 330.14431763]
[371.06552124 320.24734497]
[359.65240479 310.51385498]
[352.52706909 308.56622314]
[348.14627075 300.55691528]
[336.87463379 290.65997314]
[322.20574951 288.07669067]
[316.94073486 273.15722656]
[305.66906738 263.26028442]
[294.39743042 253.36332703]
[283.12576294 243.46636963]
[276.02923584 241.41624451]
[271.76431274 233.34466553]
[256.94793701 234.34974670]
[245.51939392 224.30766296]
[244.56562805 208.76005554]
[233.43775940 198.70170593]
[222.30989075 188.64334106]
[210.42056274 179.49763489]
[197.84443665 171.32200623]
[185.26831055 163.14637756]
[172.69216919 154.97074890]
[160.11604309 146.79512024]
[147.53990173 138.61949158]
[134.96377563 130.44386292]
[122.38764191 122.26824188]
[109.81150818 114.09261322]
[113.88444519 128.52906799]
[105.97309113 141.27310181]
[91.22817993 144.02766418]
[79.24945068 134.99937439]
[77.83570862 120.06614685]
[87.90696716 108.95050812]
[73.00654602 110.67599487]
[58.10611725 112.40148926]
[43.20569229 114.12697601]
[35.70721817 127.71198273]
[21.64150429 134.26449585]
[6.41710854 131.26492310]
[-4.11187887 119.86667633]
[-5.89684820 104.45260620]
[1.74855793 90.94974518]
[15.88452530 84.55020905]
[31.07548523 87.71475220]
[41.48020554 99.22654724]
[56.38063049 97.50106049]
[71.28105927 95.77557373]
[86.18148041 94.05007935]
[87.47685242 79.10611725]
[73.09558105 74.84243774]
[58.71430969 70.57875061]
[44.94470596 78.33591461]
[29.74567032 74.00406647]
[22.13452530 60.15321350]
[26.62682533 45.00082779]
[40.55736923 37.53654861]
[55.66141129 42.18879700]
[62.97799301 56.19747925]
[77.35926819 60.46116257]
[91.74053955 64.72484589]
[96.56604004 58.98337555]
[85.08325195 49.33218765]
[94.73461151 37.84954453]
[106.21705627 47.50043106]
[111.04255676 41.75896072]
[96.33203125 36.63664246]
[89.75430298 22.91847420]
[94.72830963 8.92580128]
[88.05361938 -4.50731087]
[81.37892914 -17.94042397]
[74.70423889 -31.37353516]
[68.02954865 -44.80664825]
[61.35485458 -58.23976135]
[54.68016434 -71.67287445]
[47.90885544 -85.05754089]
[41.04128265 -98.39307404]
[34.17370605 -111.72860718]
[27.30613327 -125.06414032]
[11.94983387 -127.29207611]
[0.85939616 -138.14480591]
[-1.70068002 -153.44923401]
[5.25400639 -167.32051086]
[19.04923630 -174.42481995]
[34.38046265 -172.03042603]
[45.35251617 -161.05801392]
[47.74641800 -145.72671509]
[40.64166260 -131.93171692]
[47.50923920 -118.59618378]
[54.37681580 -105.26065063]
[61.24438858 -91.92511749]
[67.09827423 -87.42004395]
[68.11328125 -78.34756470]
[74.78797150 -64.91445160]
[81.46266174 -51.48133850]
[88.13735199 -38.04822540]
[94.81204224 -24.61511421]
[101.48673248 -11.18200111]
[108.16142273 2.25111127]
[122.31773376 6.73824835]
[129.27818298 20.26625061]
[124.47566986 35.08427048]
[117.98713684 101.51647949]
[130.56326294 109.69210815]
[143.13940430 117.86773682]
[155.71553040 126.04336548]
[168.29167175 134.21899414]
[180.86779785 142.39462280]
[193.44393921 150.57025146]
[206.02006531 158.74588013]
[218.59619141 166.92149353]
[233.09436035 163.07402039]
[239.96194458 149.73849487]
[234.90509033 134.76506042]
[241.99194336 120.63877106]
[257.01800537 115.74050140]
[271.06857300 122.97631073]
[275.80770874 138.05331421]
[268.42373657 152.02661133]
[253.29747009 156.60606384]
[246.42990112 169.94160461]
[239.43853760 173.80360413]
[232.36825562 177.51547241]
[243.49612427 187.57383728]
[254.62399292 197.63218689]
[270.18859863 197.01538086]
[281.33056641 207.37451172]
[281.82266235 222.21679688]
[293.02273560 232.19471741]
[304.29437256 242.09167480]
[315.56604004 251.98863220]
[326.83770752 261.88558960]
[342.31280518 265.17675781]
[346.77157593 279.38830566]
[358.04324341 289.28527832]
[369.38589478 299.10076904]
[380.79901123 308.83425903]
[387.21228027 310.40588379]
[391.26419067 314.38137817]
[392.39553833 319.01644897]
[403.52340698 329.07479858]
[414.65127563 339.13317871]
[425.77914429 349.19152832]
[437.05078125 359.08850098]
[448.46389771 368.82199097]
[459.87698364 378.55548096]
[471.29010010 388.28897095]
[481.59469604 381.33267212]
[493.25616455 377.05368042]
[505.59243774 375.69659424]
[517.88336182 377.33532715]
[529.41253662 381.86907959]
[539.50946045 389.02838135]
[547.58819580 398.39132690]
[553.18145752 409.40826416]
[555.96765137 421.43411255]
[555.78955078 433.76617432]
[552.66265869 445.68515015]
[546.77465820 456.49710083]
[557.60803223 466.87194824]
[568.44140625 477.24682617]
[579.27478027 487.62170410]
[590.10815430 497.99655151]
[600.94158936 508.37142944]
[596.02337646 494.20062256]
[595.44244385 479.21188354]
[599.24908447 464.70291138]
[607.11364746 451.92996216]
[618.35528564 441.99890137]
[632.00061035 435.76959229]
[646.86822510 433.78134155]
[661.67095947 436.20629883]
[675.12701416 442.83456421]
[686.07147217 453.09216309]
[693.55670166 466.09106445]
[696.93463135 480.70578003]
[695.91284180 495.67092896]
[690.57971191 509.69082642]
[681.39703369 521.55163574]
[669.15985107 530.22637939]
[654.92767334 534.96405029]
[639.93273926 535.35443115]
[625.47332764 531.36370850]
[612.80053711 523.33666992]
[620.42498779 536.25439453]
[628.04943848 549.17211914]
[635.67388916 562.08984375]
[643.29833984 575.00756836]
[657.83679199 582.59472656]
[658.26489258 598.98828125]
[644.14221191 607.32397461]
[629.99700928 599.02667236]
[630.38061523 582.63201904]
[622.75616455 569.71429443]
[615.13171387 556.79656982]
[607.50726318 543.87884521]
[599.88281250 530.96112061]
[590.56671143 519.20477295]
[579.73333740 508.82992554]
[568.89990234 498.45507812]
[558.06652832 488.08020020]
[547.23315430 477.70535278]
[536.39978027 467.33047485]
[520.77935791 475.63653564]
[503.23724365 478.10781860]
[485.88342285 474.43060303]
[470.81082153 465.03179932]
[459.84283447 451.02923584]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 156]
[3 155]
[4 154]
[5 153]
[8 152]
[9 151]
[10 150]
[11 149]
[12 146]
[13 145]
[15 144]
[16 143]
[18 141]
[19 140]
[20 139]
[21 138]
[23 137]
[26 134]
[27 133]
[28 132]
[29 120]
[30 119]
[31 118]
[32 117]
[33 116]
[34 115]
[35 114]
[36 113]
[37 112]
[43 58]
[44 57]
[45 56]
[46 55]
[59 70]
[60 69]
[61 68]
[75 111]
[78 108]
[79 107]
[80 106]
[81 105]
[82 104]
[83 103]
[84 102]
[85 100]
[86 99]
[87 98]
[88 97]
[121 130]
[122 129]
[168 212]
[169 211]
[170 210]
[171 209]
[172 208]
[173 207]
[193 206]
[194 205]
[195 204]
[196 203]
[197 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
