%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 14:21:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGAAACCACCGAUGCCGAGAGGCUAGUGGUGCCCCAGGGACCCAAGACUAGUUCCGUCACUAGAGUCACCCUCAUUGCUGACAUGAAGGCGUUUCCCCUUCCUUCGUCUCUCCAACUGCCUUUCCCAUCCUCUGAACUAGGCAUUAACAGCCCCCGUGGGCUCCCAUCUCAACCCACCGCUCUCACAGGAGCACCCCAAGUCCUGUUUUCCUCCAGGCCCCGCUCCUGGCCUUGUAUUCUCUCUGCUCUGUUA\
UUAAAAAGCAAGCAAGUGGA\
) } def
/len { sequence length } bind def

/coor [
[215.37690735 774.46948242]
[204.52636719 785.43621826]
[189.46429443 788.77343750]
[174.99691772 783.41632080]
[165.74075317 771.07421875]
[164.64938354 755.68554688]
[172.07107544 742.16064453]
[185.63758850 734.81536865]
[186.66122437 719.85034180]
[187.68486023 704.88531494]
[188.70851135 689.92028809]
[183.26325989 659.90209961]
[200.66944885 642.26782227]
[196.78717041 627.77893066]
[192.90487671 613.29003906]
[189.02259827 598.80114746]
[185.14030457 584.31225586]
[182.32455444 582.25036621]
[180.35148621 578.73950195]
[179.88366699 574.18316650]
[181.38185120 569.26226807]
[177.99650574 554.64929199]
[174.61114502 540.03631592]
[171.22578430 525.42333984]
[167.84043884 510.81033325]
[164.45507812 496.19732666]
[160.82072449 481.64428711]
[156.93844604 467.15539551]
[153.05615234 452.66650391]
[149.17387390 438.17761230]
[145.29158020 423.68872070]
[134.52386475 413.39770508]
[138.42578125 398.06518555]
[134.54348755 383.57629395]
[130.66120911 369.08740234]
[115.74059296 361.29040527]
[111.00019073 344.78427124]
[119.85160828 329.67431641]
[115.80465698 315.23056030]
[111.75770569 300.78680420]
[107.71075439 286.34304810]
[103.66380310 271.89929199]
[90.59532928 264.84588623]
[86.28538513 250.25550842]
[93.77226257 236.59590149]
[89.72531128 222.15214539]
[78.84114838 211.98432922]
[82.56829071 196.60841370]
[78.52133942 182.16465759]
[74.47438812 167.72090149]
[70.42743683 153.27713013]
[57.39458084 145.85118103]
[42.90569305 149.73347473]
[28.41680527 153.61575317]
[20.73270988 167.42626953]
[5.51103830 171.67788696]
[-8.21745968 163.84820557]
[-12.30791092 148.58244324]
[-4.33352232 134.93748474]
[10.97464180 131.00866699]
[24.53451920 139.12687683]
[39.02340698 135.24458313]
[53.51229477 131.36230469]
[52.61804962 123.91580200]
[49.93531036 101.57630920]
[34.93919754 101.23486328]
[19.94308472 100.89341736]
[7.39700460 110.89218903]
[-8.20996571 107.17707825]
[-14.90549374 92.59799957]
[-7.55334377 78.33877563]
[8.20654392 75.33786011]
[20.28453255 85.89730072]
[35.28064728 86.23874664]
[50.27676010 86.58020020]
[58.39073563 84.87867737]
[66.38574219 84.43965149]
[54.33127213 75.51274109]
[42.27680588 66.58582306]
[26.84623146 68.71539307]
[14.74845409 59.49050903]
[12.81332779 44.76668930]
[0.75886118 35.83977127]
[-14.93606853 33.84484100]
[-20.55941772 20.05255508]
[-32.61388397 11.12563896]
[-44.66835022 2.19872260]
[-56.72282028 -6.72819376]
[-68.77728271 -15.65510941]
[-80.83174896 -24.58202553]
[-92.88621521 -33.50894165]
[-106.63982391 -26.79351425]
[-121.93850708 -27.25050926]
[-135.26673889 -34.77490997]
[-143.56181335 -47.63766861]
[-144.91754150 -62.88301468]
[-139.02243042 -77.00767517]
[-127.23110199 -86.76591492]
[-112.25313568 -89.91535950]
[-97.53034210 -85.73228455]
[-86.44593048 -75.17793274]
[-81.54700470 -60.67761993]
[-83.95930481 -45.56340790]
[-71.90483856 -36.63649368]
[-59.85036850 -27.70957565]
[-47.79590225 -18.78265953]
[-35.74143600 -9.85574436]
[-23.68696976 -0.92882806]
[-11.63250256 7.99808788]
[3.20021152 9.35450554]
[9.68577766 23.78530693]
[21.74024391 32.71222305]
[36.38833618 30.26907921]
[48.74044800 39.15052032]
[51.20372391 54.53135300]
[63.25819016 63.45827103]
[75.31266022 72.38518524]
[72.96279907 59.27710342]
[73.98665619 45.13320541]
[71.94416046 30.27291489]
[69.90165710 15.41262531]
[67.85916138 0.55233645]
[65.81665802 -14.30795288]
[51.69160080 -20.17566109]
[42.46100616 -32.24599457]
[40.52432251 -47.21648407]
[46.30236053 -61.05376434]
[58.15093994 -70.08020782]
[56.10844040 -84.94049835]
[44.24551010 -95.74098969]
[45.43699646 -111.73973083]
[58.76888657 -120.66387177]
[74.01409912 -115.66756439]
[79.47780609 -100.58355713]
[70.96872711 -86.98300171]
[73.01123047 -72.12271118]
[86.85573578 -66.62769318]
[96.15276337 -54.86243820]
[98.32688141 -39.92457962]
[92.69512177 -25.81146431]
[80.67694855 -16.35045242]
[82.71944427 -1.49016321]
[84.76194763 13.37012577]
[86.80445099 28.23041534]
[88.84694672 43.09070587]
[96.25857544 44.23865891]
[98.55448151 29.41540909]
[107.95440674 17.72603416]
[113.37773895 31.71132088]
[111.08182526 46.53457260]
[118.49344635 47.68252945]
[124.93569946 34.13640976]
[131.37796021 20.59028625]
[137.82020569 7.04416609]
[144.26245117 -6.50195503]
[142.41853333 -22.79710579]
[155.76756287 -32.32261276]
[170.57722473 -25.27945137]
[171.61259460 -8.91302109]
[157.80857849 -0.05970319]
[151.36633301 13.48641777]
[144.92407227 27.03253937]
[138.48182678 40.57865906]
[132.03956604 54.12478256]
[137.34286499 59.42808151]
[147.94947815 48.82147980]
[158.55607605 38.21487808]
[169.16267395 27.60827637]
[179.76927185 17.00167465]
[190.37588501 6.39507294]
[200.98248291 -4.21152878]
[211.58926392 -14.81795406]
[222.19551086 -4.21100092]
[211.58908081 6.39507294]
[200.98248291 17.00167465]
[190.37588501 27.60827637]
[179.76927185 38.21487808]
[169.16267395 48.82147980]
[158.55607605 59.42808151]
[147.94947815 70.03468323]
[153.25277710 75.33798218]
[166.79888916 68.89572906]
[180.34501648 62.45347977]
[193.89114380 56.01123047]
[207.43725586 49.56897736]
[216.29057312 35.76496506]
[232.65701294 36.80033493]
[239.70016479 51.60999298]
[230.17466736 64.95903015]
[213.87951660 63.11509705]
[200.33338928 69.55735016]
[186.78726196 75.99960327]
[173.24114990 82.44185638]
[159.69502258 88.88410187]
[159.05041504 106.47343445]
[153.44555664 122.75294495]
[143.57443237 136.38858032]
[130.46990967 146.33195496]
[115.39930725 151.89990234]
[99.74356079 152.81869507]
[84.87119293 149.23017883]
[88.91814423 163.67395020]
[92.96509552 178.11770630]
[97.01204681 192.56146240]
[108.18566895 203.76239014]
[104.16906738 218.10519409]
[108.21601868 232.54895020]
[121.71025085 240.32992554]
[125.60868073 255.03559875]
[118.10755920 267.85232544]
[122.15451050 282.29608154]
[126.20146942 296.73983765]
[130.24841309 311.18362427]
[134.29536438 325.62738037]
[146.69816589 330.82037354]
[153.75302124 342.03808594]
[153.08105469 355.07812500]
[145.15010071 365.20513916]
[149.03237915 379.69400024]
[152.91465759 394.18289185]
[163.96006775 405.51028442]
[159.78047180 419.80645752]
[163.66276550 434.29531860]
[167.54504395 448.78421021]
[171.42732239 463.27310181]
[175.30961609 477.76199341]
[178.94543457 481.40078735]
[180.67465210 485.64208984]
[180.58383179 489.66833496]
[179.06806946 492.81198120]
[182.45341492 507.42495728]
[185.83877563 522.03796387]
[189.22413635 536.65093994]
[192.60948181 551.26391602]
[195.99484253 565.87689209]
[199.62919617 580.42999268]
[203.51147461 594.91888428]
[207.39376831 609.40777588]
[211.27604675 623.89660645]
[215.15834045 638.38549805]
[223.73654175 638.08001709]
[232.56985474 640.97790527]
[240.43835449 647.16979980]
[246.10853577 656.28082275]
[248.50897217 667.47863770]
[246.89709473 679.54620361]
[253.02931213 693.23547363]
[259.16156006 706.92474365]
[265.29376221 720.61395264]
[271.63360596 727.13549805]
[271.41690063 734.49414062]
[277.39291382 748.25231934]
[283.36895752 762.01049805]
[289.34497070 775.76861572]
[304.38735962 780.04187012]
[313.12084961 793.01336670]
[311.42181396 808.55841064]
[300.09240723 819.33703613]
[284.48208618 820.25994873]
[271.96154785 810.89141846]
[268.44259644 795.65490723]
[275.58679199 781.74462891]
[269.61077881 767.98651123]
[263.63476562 754.22833252]
[257.65875244 740.47015381]
[251.60452271 726.74621582]
[245.47229004 713.05694580]
[239.34005737 699.36767578]
[233.20782471 685.67846680]
[225.82426453 686.99481201]
[203.67353821 690.94390869]
[202.64990234 705.90893555]
[201.62626648 720.87396240]
[200.60263062 735.83898926]
[213.04260254 744.96319580]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 274]
[9 273]
[10 272]
[11 271]
[13 240]
[14 239]
[15 238]
[16 237]
[17 236]
[21 235]
[22 234]
[23 233]
[24 232]
[25 231]
[26 230]
[27 226]
[28 225]
[29 224]
[30 223]
[31 222]
[33 220]
[34 219]
[35 218]
[38 214]
[39 213]
[40 212]
[41 211]
[42 210]
[45 207]
[46 206]
[48 204]
[49 203]
[50 202]
[51 201]
[52 63]
[53 62]
[54 61]
[65 75]
[66 74]
[67 73]
[77 117]
[78 116]
[79 115]
[82 112]
[83 111]
[85 109]
[86 108]
[87 107]
[88 106]
[89 105]
[90 104]
[91 103]
[119 145]
[120 144]
[121 143]
[122 142]
[123 141]
[128 136]
[129 135]
[151 164]
[152 163]
[153 162]
[154 161]
[155 160]
[181 194]
[182 193]
[183 192]
[184 191]
[185 190]
[246 269]
[247 268]
[248 267]
[249 266]
[251 265]
[252 264]
[253 263]
[254 262]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
