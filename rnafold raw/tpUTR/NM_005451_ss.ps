%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 08:25:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCCUUCUGCCCACAGCUGCCGCGGUGGCCCCUAGCCUGAGGGGCCUGGAGUCGUGGCCCUGCAUUUCUGGGUAGGGCUGGCAAUGGUUGCCUUAACCCUGGCUCCUGGCCCGAGCCUGGGGCUCCCUGGGCCCUGCCCCACCCACCUUAUCCUCCCACCCCACUCCCUCCACCACCACAGCACACCGGUGCUGGCCACACCAGCCCCCUUUCACCUCCAGUGCCACAAUAAACCUGUACCCAGCUGUG\
) } def
/len { sequence length } bind def

/coor [
[82.73327637 354.99789429]
[85.24790955 370.01779175]
[81.42972565 384.76028442]
[71.94024658 396.67117310]
[58.42358017 403.68685913]
[43.22157669 404.59179688]
[28.96806717 399.22918701]
[18.13256454 388.52816772]
[12.59238148 374.34274292]
[13.30739021 359.13064575]
[20.15371132 345.52740479]
[31.94517708 335.88992310]
[46.63884354 331.88790894]
[48.88331985 317.05679321]
[51.12779236 302.22564697]
[53.37226486 287.39453125]
[55.61674118 272.56341553]
[57.86121368 257.73226929]
[60.10568619 242.90115356]
[62.35016251 228.07002258]
[51.80086899 214.95730591]
[54.05622864 197.93849182]
[68.20320129 187.62756348]
[70.26187134 172.76950073]
[72.22752380 157.89884949]
[74.10006714 143.01618958]
[75.97261810 128.13352966]
[63.04526901 120.52540588]
[50.94320679 129.38768005]
[38.84114456 138.24996948]
[26.73908043 147.11225891]
[14.63701630 155.97453308]
[2.53495264 164.83682251]
[-9.56711102 173.69909668]
[-11.73281956 189.35430908]
[-24.38435364 198.82606506]
[-40.01578140 196.49496460]
[-49.35325241 183.74398804]
[-46.85701370 168.13809204]
[-34.00803757 158.93594360]
[-18.42939377 161.59704590]
[-6.32733059 152.73475647]
[5.77473307 143.87246704]
[17.87679672 135.01019287]
[29.97885895 126.14791107]
[42.08092499 117.28562164]
[54.18298721 108.42333984]
[72.55696869 90.63140869]
[92.38142395 91.50434875]
[86.18903351 77.84220123]
[79.99665070 64.18004608]
[73.80426025 50.51789856]
[67.61187744 36.85574722]
[50.71161270 25.83659172]
[53.50376511 6.68806744]
[46.97135544 -6.81480694]
[40.43894577 -20.31768227]
[33.90653610 -33.82055664]
[19.71032715 -30.91665840]
[5.24126816 -31.49756241]
[-8.65829659 -35.52491379]
[-21.18025970 -42.75985718]
[-31.59774208 -52.77717590]
[-39.30727386 -64.99031067]
[-43.86376572 -78.68567657]
[-45.00618744 -93.06436157]
[-42.67253113 -107.28875732]
[-37.00315857 -120.53130341]
[-28.33235168 -132.02267456]
[-17.16862488 -141.09646606]
[-23.53152275 -154.68005371]
[-29.89441872 -168.26362610]
[-36.25731659 -181.84719849]
[-42.62021255 -195.43077087]
[-55.48083115 -204.64570618]
[-53.87297440 -219.45327759]
[-60.23587036 -233.03684998]
[-66.59877014 -246.62043762]
[-72.96166229 -260.20401001]
[-88.30823517 -270.40225220]
[-86.09757233 -287.82254028]
[-92.62998199 -301.32540894]
[-99.16239166 -314.82827759]
[-114.30067444 -317.68109131]
[-124.73445892 -328.77114868]
[-126.61510468 -343.70190430]
[-119.42932129 -356.72122192]
[-125.96173096 -370.22409058]
[-140.61732483 -375.50152588]
[-147.04975891 -389.28842163]
[-141.92822266 -403.22775269]
[-148.46063232 -416.73062134]
[-154.99304199 -430.23348999]
[-161.52545166 -443.73638916]
[-168.05786133 -457.23925781]
[-174.59027100 -470.74212646]
[-181.77835083 -457.57656860]
[-196.53053284 -454.86126709]
[-207.93525696 -464.60458374]
[-207.55693054 -479.59979248]
[-195.67538452 -488.75561523]
[-181.07914734 -485.30001831]
[-186.75428772 -499.18499756]
[-192.42942810 -513.07000732]
[-198.10458374 -526.95495605]
[-203.77972412 -540.83996582]
[-218.72554016 -545.43957520]
[-227.17463684 -558.59814453]
[-225.13763428 -574.10247803]
[-213.57633972 -584.63195801]
[-197.94961548 -585.21490479]
[-185.63595581 -575.57604980]
[-182.44947815 -560.26654053]
[-189.89474487 -546.51507568]
[-184.21958923 -532.63012695]
[-178.54444885 -518.74511719]
[-172.86930847 -504.86016846]
[-167.19416809 -490.97515869]
[-161.08740234 -477.27453613]
[-154.55499268 -463.77166748]
[-148.02258301 -450.26879883]
[-141.49017334 -436.76589966]
[-134.95776367 -423.26303101]
[-128.42533875 -409.76016235]
[-114.31722260 -405.12371826]
[-107.50007629 -391.52294922]
[-112.45885468 -376.75650024]
[-105.92644501 -363.25363159]
[-91.25843048 -360.80673218]
[-80.71918488 -350.06481934]
[-78.50009918 -335.00067139]
[-85.65951538 -321.36068726]
[-79.12710571 -307.85781860]
[-72.59469604 -294.35494995]
[-61.29031372 -290.09530640]
[-55.73107147 -278.92105103]
[-59.37808609 -266.56689453]
[-53.01519012 -252.98332214]
[-46.65229416 -239.39974976]
[-40.28939819 -225.81617737]
[-27.88389397 -217.57283020]
[-29.03663635 -201.79367065]
[-22.67374039 -188.21009827]
[-16.31084251 -174.62652588]
[-9.94794655 -161.04293823]
[-3.58504939 -147.45936584]
[11.70566177 -150.30207825]
[27.22244072 -149.09242249]
[41.90890121 -143.90699768]
[54.76368332 -135.09321594]
[64.90873718 -123.24612427]
[71.64930725 -109.16818237]
[74.52146912 -93.81492615]
[73.32411194 -78.23011017]
[68.13297272 -63.47474670]
[59.29586029 -50.55487442]
[47.40940857 -40.35296631]
[53.94181824 -26.85009193]
[60.47423172 -13.34721756]
[67.00663757 0.15565701]
[76.89073944 2.61968994]
[83.94551086 10.26898098]
[85.67522430 20.75231743]
[81.27402496 30.66336250]
[87.46640778 44.32551193]
[93.65879822 57.98766327]
[99.85118103 71.64981079]
[106.04357147 85.31196594]
[101.63467407 70.97454071]
[103.23186493 56.05981827]
[110.57670593 42.98108292]
[122.48075867 33.85454941]
[137.01786804 30.15695000]
[151.83586121 32.48657227]
[164.53709412 40.46647644]
[173.06642151 52.80545807]
[176.04376221 67.50700378]
[172.98735046 82.19231415]
[164.39173889 94.48522186]
[151.64776611 102.39665985]
[136.81744385 104.64651489]
[122.29811096 100.86959076]
[136.21833801 106.45773315]
[150.13856506 112.04586792]
[164.05879211 117.63401031]
[178.27256775 108.44258881]
[194.99739075 109.53321075]
[207.64352417 120.27730560]
[211.34692383 136.28202820]
[225.33601379 141.69551086]
[239.32508850 147.10897827]
[253.56755066 151.81559753]
[268.02770996 155.80355835]
[282.48785400 159.79153442]
[296.94802856 163.77949524]
[311.40817261 167.76747131]
[326.01373291 161.12991333]
[340.24362183 168.53866577]
[343.18191528 184.31034851]
[332.57455444 196.34628296]
[316.55865479 195.41354370]
[307.42019653 182.22761536]
[292.96005249 178.23965454]
[278.49987793 174.25169373]
[264.03973389 170.26371765]
[249.57957458 166.27575684]
[258.01760864 178.67735291]
[257.65173340 193.67288208]
[248.61889648 205.64819336]
[234.30091858 210.11984253]
[220.05830383 205.41369629]
[211.22331238 193.29168701]
[211.10369873 178.29217529]
[219.74421692 166.03079224]
[233.91160583 161.09805298]
[219.92253113 155.68458557]
[205.93345642 150.27110291]
[195.45028687 158.51506042]
[182.15682983 160.52510071]
[169.50297546 155.67163086]
[160.82603455 145.12031555]
[158.47065735 131.55422974]
[144.55043030 125.96609497]
[130.63020325 120.37796021]
[116.70997620 114.78981781]
[110.24629974 118.59388733]
[119.78334808 130.17164612]
[131.86932373 139.05587769]
[131.10488892 154.03637695]
[118.17736816 161.64421082]
[104.70987701 155.03916931]
[102.81076050 140.16052246]
[97.31895447 126.20201874]
[90.85527802 130.00608826]
[88.98272705 144.88874817]
[87.11018372 159.77140808]
[89.14055634 168.65013123]
[85.11993408 174.82817078]
[83.06125641 189.68623352]
[92.36188507 199.40707397]
[94.34506989 212.51698303]
[88.50939178 224.20582581]
[77.18128967 230.31449890]
[74.93681335 245.14562988]
[72.69234467 259.97674561]
[70.44786835 274.80789185]
[68.20339203 289.63900757]
[65.95891571 304.47012329]
[63.71444702 319.30126953]
[61.46997070 334.13238525]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 250]
[14 249]
[15 248]
[16 247]
[17 246]
[18 245]
[19 244]
[20 243]
[23 239]
[24 238]
[25 236]
[26 235]
[27 234]
[28 47]
[29 46]
[30 45]
[31 44]
[32 43]
[33 42]
[34 41]
[49 168]
[50 167]
[51 166]
[52 165]
[53 164]
[55 160]
[56 159]
[57 158]
[58 157]
[70 146]
[71 145]
[72 144]
[73 143]
[74 142]
[76 140]
[77 139]
[78 138]
[79 137]
[81 134]
[82 133]
[83 132]
[87 128]
[88 127]
[91 124]
[92 123]
[93 122]
[94 121]
[95 120]
[96 119]
[102 118]
[103 117]
[104 116]
[105 115]
[106 114]
[182 225]
[183 224]
[184 223]
[185 222]
[189 217]
[190 216]
[191 215]
[192 206]
[193 205]
[194 204]
[195 203]
[196 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
