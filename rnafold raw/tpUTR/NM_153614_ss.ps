%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 08:41:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGUGGUGGGCUGGAGCAGGGGUGAGAGGAGGCUAGCCGGGCCUCACCCCACCCCUACCCGCCACAGCCUCAGGGUGUGCAGGGGAGCCUGCUGCACAGAUAUGAUACAAGGGUGGGAUGGCGCAGGGCUUAAACUGACAUAAUAAAGAUCUAUUUCCUGUCCUCCAGCUACA\
) } def
/len { sequence length } bind def

/coor [
[113.76438141 324.27099609]
[98.72932434 328.56994629]
[84.46962738 322.15161133]
[77.71827698 308.04653931]
[81.66305542 292.91470337]
[94.44136810 283.90087891]
[95.52373505 268.93997192]
[96.60610199 253.97908020]
[97.68846893 239.01818848]
[95.02571869 232.09591675]
[98.92782593 223.79774475]
[100.28012085 208.85882568]
[101.63241577 193.91990662]
[102.98471832 178.98098755]
[104.33701324 164.04206848]
[105.68930817 149.10314941]
[80.36426544 136.28535461]
[70.40555573 114.78819275]
[55.81685257 118.27670288]
[41.22814941 121.76521301]
[26.63944626 125.25373077]
[12.05074215 128.74223328]
[-2.53796172 132.23075867]
[-17.12666512 135.71926880]
[-28.74899673 146.45387268]
[-42.92673492 141.88868713]
[-51.22087479 155.07371521]
[-66.06558990 158.40373230]
[-78.58438873 150.41528320]
[-93.17308807 153.90380859]
[-107.76179504 157.39231873]
[-122.35049438 160.88082886]
[-136.93920898 164.36933899]
[-151.52790833 167.85784912]
[-161.11424255 180.72181702]
[-177.15275574 181.10343933]
[-187.34007263 168.70996094]
[-183.86134338 153.04859924]
[-169.38516235 146.13342285]
[-155.01641846 153.26914978]
[-140.42771912 149.78063965]
[-125.83901215 146.29211426]
[-111.25030518 142.80360413]
[-96.66159821 139.31509399]
[-82.07289886 135.82658386]
[-74.52214813 123.03902435]
[-59.77682114 119.29335785]
[-46.41524506 127.29998016]
[-35.83639526 116.81488800]
[-20.61517715 121.13056183]
[-6.02647352 117.64204407]
[8.56223011 114.15353394]
[23.15093422 110.66502380]
[37.73963928 107.17651367]
[52.32834244 103.68800354]
[66.91704559 100.19948578]
[74.21423340 79.27281952]
[93.08296967 67.64762115]
[93.35378265 52.65007019]
[93.62458801 37.65251160]
[93.89540100 22.65495872]
[94.16621399 7.65740299]
[94.43702698 -7.34015226]
[80.55093384 -13.45997047]
[70.09397125 -24.40048218]
[64.63708496 -38.47301102]
[64.98279572 -53.52186966]
[71.04728699 -67.25455475]
[81.87794495 -77.59101105]
[95.80284119 -82.97864532]
[96.07365417 -97.97620392]
[96.34446716 -112.97375488]
[82.71394348 -122.96109009]
[77.75901031 -138.94247437]
[83.23914337 -154.57569885]
[96.81309509 -163.77925110]
[96.81309509 -178.77925110]
[96.81309509 -193.77925110]
[96.81309509 -208.77925110]
[96.81309509 -223.77925110]
[96.81309509 -238.77925110]
[96.81309509 -253.77925110]
[89.07579041 -267.57943726]
[96.81309509 -280.30670166]
[96.81309509 -295.30670166]
[90.76675415 -311.14584351]
[104.31309509 -321.34057617]
[117.85943604 -311.14584351]
[111.81309509 -295.30670166]
[111.81309509 -280.30670166]
[119.55039215 -267.57943726]
[111.81309509 -253.77925110]
[111.81309509 -238.77925110]
[111.81309509 -223.77925110]
[111.81309509 -208.77925110]
[111.81309509 -193.77925110]
[111.81309509 -178.77925110]
[111.81309509 -163.77925110]
[123.31004333 -156.95483398]
[129.97944641 -145.24240112]
[129.98176575 -131.65583801]
[123.20922089 -119.75276184]
[111.34201813 -112.70294189]
[111.07120514 -97.70539093]
[110.80039215 -82.70783234]
[124.52170563 -76.82099152]
[134.97212219 -66.10025787]
[140.53688049 -52.15758133]
[140.33906555 -37.10605240]
[134.37770081 -23.23970604]
[123.53256226 -12.68384743]
[109.43458557 -7.06933975]
[109.16377258 7.92821503]
[108.89295959 22.92576981]
[108.62214661 37.92332458]
[108.35133362 52.92087936]
[108.08052063 67.91843414]
[122.22779846 68.52444458]
[136.60044861 75.61048889]
[148.24375916 89.22843933]
[162.94889832 86.26889038]
[177.65403748 83.30933380]
[187.69854736 70.79985046]
[203.74038696 70.99750519]
[213.47361755 83.75068665]
[209.43174744 99.27624512]
[194.71534729 105.66429138]
[180.61358643 98.01447296]
[165.90844727 100.97402191]
[151.20330811 103.93357849]
[149.39328003 111.21188354]
[163.94989014 114.83195496]
[178.50645447 118.45224762]
[174.88594055 133.00874329]
[160.32983398 129.38856506]
[145.77320862 125.76850128]
[143.96318054 133.04681396]
[155.56906128 142.54962158]
[167.17495728 152.05242920]
[178.78083801 161.55523682]
[198.78216553 163.87818909]
[204.89668274 182.20095825]
[216.83807373 191.27857971]
[228.77947998 200.35618591]
[240.72087097 209.43380737]
[256.34466553 207.05215454]
[269.02676392 216.48294067]
[271.24310303 232.13105774]
[261.67877197 244.71273804]
[246.00808716 246.76350403]
[233.52822876 237.06668091]
[231.64324951 221.37519836]
[219.70185852 212.29759216]
[207.76046753 203.21997070]
[195.81906128 194.14236450]
[185.81698608 196.43064880]
[176.00740051 192.74102783]
[169.73437500 184.07211304]
[169.27803040 173.16111755]
[157.67214966 163.65830994]
[146.06625366 154.15550232]
[134.46037292 144.65269470]
[120.62822723 150.45544434]
[119.27593231 165.39436340]
[117.92363739 180.33328247]
[116.57133484 195.27220154]
[115.21903992 210.21112061]
[113.86674500 225.15003967]
[112.64936066 240.10055542]
[111.56700134 255.06144714]
[110.48463440 270.02233887]
[109.40226746 284.98324585]
[120.75006866 295.74249268]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 172]
[7 171]
[8 170]
[9 169]
[11 168]
[12 167]
[13 166]
[14 165]
[15 164]
[16 163]
[18 56]
[19 55]
[20 54]
[21 53]
[22 52]
[23 51]
[24 50]
[26 48]
[29 45]
[30 44]
[31 43]
[32 42]
[33 41]
[34 40]
[58 117]
[59 116]
[60 115]
[61 114]
[62 113]
[63 112]
[70 105]
[71 104]
[72 103]
[76 98]
[77 97]
[78 96]
[79 95]
[80 94]
[81 93]
[82 92]
[84 90]
[85 89]
[120 130]
[121 129]
[122 128]
[137 162]
[138 161]
[139 160]
[140 159]
[142 155]
[143 154]
[144 153]
[145 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
