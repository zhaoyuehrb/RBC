%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 18:30:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCACAAGGACCAAAGCUGUACCUAGAGGAACCAGCACCCGGGCCUCAGCUGUCUGUGCUGCGAGGGGAGUCUGCCCUGGUGCCCACUGGGCUGUGGGGUGACCACACUGUACUUGGGGCUGGGCCCUCUGCCCCUGUGUCCCCAUCUGUGUGCACUGAUGCUUCCUCCCUUUUUUAAUUUAAAAUGGUUUUUAUAAGCAACC\
) } def
/len { sequence length } bind def

/coor [
[452.74990845 485.79684448]
[442.51525879 474.83087158]
[428.17486572 470.80566406]
[424.41534424 455.43765259]
[414.18069458 444.47171021]
[403.94604492 433.50573730]
[393.71139526 422.53979492]
[372.48953247 418.29705811]
[367.71218872 396.40612793]
[356.82498169 386.08773804]
[345.93777466 375.76937866]
[335.05056763 365.45101929]
[324.08459473 355.21636963]
[313.04055786 345.06604004]
[296.28555298 346.49316406]
[283.42788696 335.13888550]
[282.74450684 317.66113281]
[271.54620361 307.68124390]
[272.45950317 322.65341187]
[263.63931274 334.78619385]
[249.11560059 338.53610229]
[235.52426147 332.18978882]
[229.07516479 318.64694214]
[232.71493530 304.09521484]
[244.78053284 295.18338013]
[259.75744629 295.98245239]
[249.69204712 284.86093140]
[239.62664795 273.73944092]
[229.56124878 262.61795044]
[219.49584961 251.49644470]
[204.65325928 251.01371765]
[194.28707886 239.87832642]
[194.89404297 224.31332397]
[184.82864380 213.19181824]
[174.76324463 202.07031250]
[164.69784546 190.94882202]
[154.63246155 179.82731628]
[147.81004333 176.97610474]
[144.49963379 168.45741272]
[134.60585022 157.18296814]
[124.71205902 145.90853882]
[114.81826782 134.63409424]
[104.92448425 123.35965729]
[95.03069305 112.08521271]
[81.85301208 104.91941833]
[67.01169586 102.74333191]
[52.17037964 100.56725311]
[37.32906342 98.39116669]
[28.37934113 100.24300385]
[22.27767944 96.06633759]
[7.47145367 93.66307831]
[-7.39009428 99.08940125]
[-18.71330261 89.41291809]
[-33.51952744 87.00965881]
[-48.65153503 93.33060455]
[-61.52579117 83.17257690]
[-58.89836121 66.98527527]
[-43.47212601 61.42081451]
[-31.11626816 72.20343018]
[-16.31004143 74.60669708]
[-2.50753450 69.00847626]
[9.87471390 78.85684967]
[24.68094063 81.26010895]
[39.50514603 83.54985046]
[54.34646225 85.72593689]
[69.18778229 87.90201569]
[84.02909088 90.07810211]
[92.84587097 77.94284821]
[78.14256287 72.79985046]
[71.58412933 59.07244873]
[76.57779694 45.08678436]
[69.92200470 31.64430046]
[63.26620483 18.20181656]
[56.65070724 11.89609909]
[56.61318588 4.50195122]
[50.16416550 -9.04094887]
[43.71514511 -22.58384895]
[37.26612473 -36.12674713]
[30.81710625 -49.66964722]
[24.36808586 -63.21254730]
[9.74531364 -68.58025360]
[3.39801383 -82.40654755]
[8.60541725 -96.31404877]
[2.15639687 -109.85694885]
[-4.29262304 -123.39984894]
[-10.74164295 -136.94274902]
[-23.01043320 -148.64373779]
[-15.16306400 -163.67221069]
[1.45046258 -160.29182434]
[2.80125666 -143.39176941]
[9.25027657 -129.84887695]
[15.69929695 -116.30596924]
[22.14831734 -102.76306915]
[36.22757721 -98.03972626]
[42.96072769 -84.39717102]
[37.91098785 -69.66156769]
[44.36000443 -56.11866760]
[50.80902481 -42.57576752]
[57.25804520 -29.03286934]
[63.70706558 -15.48996925]
[70.15608978 -1.94706893]
[76.70868683 11.54601860]
[83.36448669 24.98850250]
[90.02028656 38.43098450]
[104.17027283 42.93802261]
[111.11169434 56.47579575]
[106.28835297 71.28704834]
[111.53774261 76.53516388]
[114.72569275 82.45921326]
[115.87139893 88.40267944]
[115.18135834 93.76578522]
[113.02162170 98.05503845]
[109.87760925 100.92243958]
[106.30513000 102.19142914]
[116.19892120 113.46586609]
[126.09270477 124.74030304]
[135.98649597 136.01473999]
[145.88027954 147.28918457]
[155.77406311 158.56362915]
[165.75395203 169.76191711]
[175.81935120 180.88342285]
[185.88475037 192.00491333]
[195.95014954 203.12641907]
[206.01554871 214.24792480]
[221.56375122 215.19186401]
[231.61306763 226.61402893]
[230.61735535 241.43104553]
[240.68275452 252.55255127]
[250.74815369 263.67404175]
[260.81353760 274.79556274]
[270.87893677 285.91705322]
[281.52609253 296.48294067]
[292.72439575 306.46282959]
[305.99563599 304.14648438]
[318.00192261 309.81521606]
[324.45419312 321.19604492]
[323.19088745 334.02200317]
[334.23492432 344.17233276]
[342.67526245 347.67764282]
[345.36892700 354.56381226]
[356.25613403 364.88217163]
[367.14334106 375.20053101]
[378.03054810 385.51892090]
[386.19952393 383.74987793]
[394.30984497 385.33810425]
[401.05303955 389.95159912]
[405.37124634 396.77667236]
[406.62298584 404.66036987]
[404.67736816 412.30514526]
[414.91198730 423.27108765]
[425.14663696 434.23706055]
[435.38128662 445.20300293]
[450.45373535 450.01257324]
[453.48123169 464.59625244]
[463.71585083 475.56219482]
[477.16461182 471.70651245]
[490.89688110 474.01147461]
[502.24133301 481.97091675]
[509.01611328 493.98434448]
[509.94836426 507.67849731]
[504.91293335 520.37615967]
[514.97833252 531.49768066]
[525.04376221 542.61914062]
[535.10913086 553.74066162]
[545.17456055 564.86218262]
[563.07415771 560.36419678]
[580.69897461 565.54693604]
[593.19830322 578.89392090]
[597.17785645 596.65441895]
[591.62115479 613.89697266]
[602.18701172 624.54412842]
[617.39978027 628.88952637]
[620.87274170 643.37359619]
[631.43865967 654.02075195]
[642.00451660 664.66790771]
[652.57043457 675.31506348]
[668.37353516 675.12500000]
[679.62396240 686.22473145]
[679.64697266 702.02899170]
[668.42889404 713.16143799]
[652.62530518 713.01733398]
[641.61206055 701.68218994]
[641.92327881 685.88098145]
[631.35736084 675.23382568]
[620.79150391 664.58666992]
[610.22558594 653.93951416]
[595.76855469 650.35565186]
[591.53985596 635.11004639]
[580.97399902 624.46289062]
[570.11065674 629.02978516]
[558.30895996 629.66601562]
[546.95129395 626.27355957]
[537.37603760 619.22790527]
[530.71972656 609.33630371]
[527.78216553 597.74542236]
[528.93035889 585.80859375]
[534.05303955 574.92755127]
[523.98760986 563.80609131]
[513.92224121 552.68457031]
[503.85684204 541.56304932]
[493.79144287 530.44158936]
[478.08435059 534.22698975]
[462.52154541 529.54907227]
[451.37655640 517.59356689]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 155]
[2 154]
[4 152]
[5 151]
[6 150]
[7 149]
[9 143]
[10 142]
[11 141]
[12 140]
[13 138]
[14 137]
[17 133]
[18 132]
[26 131]
[27 130]
[28 129]
[29 128]
[30 127]
[33 124]
[34 123]
[35 122]
[36 121]
[37 120]
[39 119]
[40 118]
[41 117]
[42 116]
[43 115]
[44 114]
[45 67]
[46 66]
[47 65]
[48 64]
[50 63]
[51 62]
[53 60]
[54 59]
[68 107]
[71 104]
[72 103]
[73 102]
[75 101]
[76 100]
[77 99]
[78 98]
[79 97]
[80 96]
[83 93]
[84 92]
[85 91]
[86 90]
[161 201]
[162 200]
[163 199]
[164 198]
[165 197]
[170 189]
[171 188]
[173 186]
[174 185]
[175 184]
[176 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
