%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 10:35:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCCCCUUCGAGGAUUGCACCCGCCCGUCCUAAGCCUCCCCACAAGGCGAGGGGAGUUACCCCUAAAACAAAGCUAUUAAAGGGACAGAAUACUUCCUGUUUUCUCAGUGGUCUGAUUCUAGGCGCGGUGGGGAAACAUUUGGGUAUUAAAGAACAGACUUCUUCCGGAAACCAA\
) } def
/len { sequence length } bind def

/coor [
[80.34084320 139.71479797]
[67.13549805 146.82948303]
[53.93015289 153.94416809]
[40.72480392 161.05885315]
[27.51945877 168.17355347]
[14.31411171 175.28823853]
[1.10876465 182.40292358]
[-12.09658241 189.51762390]
[-25.30192947 196.63230896]
[-38.50727463 203.74699402]
[-30.14073372 214.06489563]
[-28.70004463 230.26396179]
[-37.10183334 248.01876831]
[-47.98548508 258.34088135]
[-58.86913681 268.66299438]
[-69.75279236 278.98513794]
[-80.63644409 289.30725098]
[-85.44431305 307.06823730]
[-102.63697052 310.52209473]
[-113.33675385 321.03466797]
[-117.19700623 336.97302246]
[-133.00431824 341.33889771]
[-144.49749756 329.64105225]
[-139.85331726 313.91326904]
[-123.84934235 310.33489990]
[-113.14955902 299.82229614]
[-112.72333527 287.71435547]
[-103.86880493 278.86767578]
[-90.95855713 278.42358398]
[-80.07490540 268.10147095]
[-69.19125366 257.77935791]
[-58.30760193 247.45722961]
[-47.42395020 237.13511658]
[-50.38554382 230.24461365]
[-56.30872726 216.46362305]
[-59.27032089 209.57312012]
[-74.24929810 210.36697388]
[-89.22827911 211.16082764]
[-104.20725250 211.95468140]
[-113.46564484 224.55691528]
[-128.67070007 228.20935059]
[-142.64305115 221.18743896]
[-148.78540039 206.80670166]
[-144.19749451 191.85726929]
[-131.04560852 183.39784241]
[-115.53967285 185.42266846]
[-105.00110626 196.97570801]
[-90.02212524 196.18185425]
[-75.04315186 195.38800049]
[-60.06417084 194.59414673]
[-45.62196732 190.54165649]
[-32.41661835 183.42695618]
[-19.21127129 176.31227112]
[-6.00592518 169.19758606]
[7.19942188 162.08288574]
[20.40476799 154.96820068]
[33.61011505 147.85351562]
[46.81546402 140.73883057]
[60.02080917 133.62413025]
[73.22615814 126.50944519]
[65.51416779 108.72477722]
[67.88121033 90.59544373]
[78.54634094 77.12353516]
[71.19970703 64.04580688]
[63.85306931 50.96807861]
[56.50643158 37.89035034]
[41.55247116 40.37124634]
[26.65239906 37.58491898]
[13.60546970 29.86782837]
[3.98716640 18.15185547]
[-1.04105556 3.85175776]
[-0.87201339 -11.30565739]
[4.47387981 -25.49005890]
[14.35108185 -36.98860931]
[27.56687355 -44.41280365]
[42.52537918 -46.86613846]
[57.42029572 -44.05235672]
[70.45298004 -36.31123734]
[80.04967499 -24.57755661]
[85.05153656 -10.26821709]
[84.85456085 4.88886118]
[79.48253632 19.06338692]
[69.58415985 30.54371643]
[76.93079376 43.62144089]
[84.27743530 56.69916916]
[91.62406921 69.77689362]
[98.67706299 68.66564178]
[105.79862213 69.17844391]
[112.61963654 71.28872681]
[118.78657532 74.88711548]
[123.97981262 79.78710938]
[137.42802429 73.14288330]
[150.87622070 66.49866486]
[164.32443237 59.85444260]
[177.77264404 53.21022034]
[191.22085571 46.56599808]
[204.66906738 39.92177963]
[209.96315002 23.26381683]
[225.35717773 15.72336674]
[241.13023376 21.51928139]
[254.45909119 14.63875389]
[267.78793335 7.75822687]
[281.11679077 0.87769920]
[294.44564819 -6.00282812]
[307.77450562 -12.88335609]
[321.10336304 -19.76388359]
[334.43222046 -26.64441109]
[347.76104736 -33.52493668]
[361.08990479 -40.40546417]
[369.80349731 -53.61091995]
[384.66195679 -52.57365417]
[397.99078369 -59.45418167]
[411.25842285 -66.45206451]
[424.46377563 -73.56674957]
[437.66909790 -80.68144226]
[450.87445068 -87.79613495]
[464.07980347 -94.91082001]
[472.22842407 -109.14220428]
[488.62619019 -108.93041229]
[496.40451050 -94.49331665]
[487.56170654 -80.68256378]
[471.19448853 -81.70547485]
[457.98913574 -74.59078217]
[444.78381348 -67.47609711]
[431.57846069 -60.36140442]
[418.37310791 -53.24671555]
[413.96258545 -47.28804016]
[404.87133789 -46.12532806]
[391.54248047 -39.24480057]
[383.78225708 -26.53148651]
[367.97042847 -27.07661247]
[354.64160156 -20.19608498]
[341.31274414 -13.31555653]
[327.98388672 -6.43502951]
[314.65502930 0.44549796]
[301.32617188 7.32602549]
[287.99731445 14.20655251]
[274.66845703 21.08708000]
[261.33959961 27.96760750]
[248.01075745 34.84813690]
[245.84294128 47.56746292]
[236.60049438 56.84766769]
[223.50639343 59.13448334]
[211.31327820 53.36998749]
[197.86508179 60.01420975]
[184.41687012 66.65843201]
[170.96865845 73.30265045]
[157.52044678 79.94687653]
[144.07223511 86.59109497]
[130.62403870 93.23532104]
[130.54714966 116.07769775]
[114.12999725 134.92753601]
[123.45274353 146.67854309]
[132.77549744 158.42956543]
[142.09823608 170.18057251]
[151.42098999 181.93159485]
[167.12985229 185.18907166]
[174.24853516 199.56626892]
[167.31619263 214.03424072]
[151.65072632 217.49438477]
[139.26934814 207.29238892]
[139.66996765 191.25434875]
[130.34722900 179.50332642]
[121.02447510 167.75231934]
[111.70172882 156.00129700]
[102.37898254 144.25027466]
[104.92672729 159.03233337]
[113.19828796 171.54557800]
[114.88250732 186.45071411]
[109.61174011 200.49418640]
[98.53652954 210.61048889]
[84.07442474 214.59138489]
[69.38230133 211.56790161]
[57.66723633 202.20001221]
[51.48646927 188.53259277]
[52.18916702 173.54907227]
[59.62194443 160.52011108]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 60]
[2 59]
[3 58]
[4 57]
[5 56]
[6 55]
[7 54]
[8 53]
[9 52]
[10 51]
[13 33]
[14 32]
[15 31]
[16 30]
[17 29]
[19 26]
[20 25]
[36 50]
[37 49]
[38 48]
[39 47]
[63 86]
[64 85]
[65 84]
[66 83]
[91 150]
[92 149]
[93 148]
[94 147]
[95 146]
[96 145]
[97 144]
[100 140]
[101 139]
[102 138]
[103 137]
[104 136]
[105 135]
[106 134]
[107 133]
[108 132]
[109 131]
[111 129]
[112 128]
[113 126]
[114 125]
[115 124]
[116 123]
[117 122]
[152 166]
[153 165]
[154 164]
[155 163]
[156 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
