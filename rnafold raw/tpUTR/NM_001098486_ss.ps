%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 20:00:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUAUCCCACCUUGGAUGGAAAAGUCAUUAGGCACCGUAUUGCAUAAAAUAGAAGGCUUCCGUGAUGAAAAUACCAGUGAAAAGAUUUUUUUUUUCCUGUGGCUCUUUUCAAUUAUGAGAUCAGUUCAUUAUUUUAUUCAGACUUUUUUUUGAGAGAAAUGUAAGAUGAAUAAAAAUUCAAAUAAAAUGAUAACUAAGAA\
) } def
/len { sequence length } bind def

/coor [
[101.52053070 243.06872559]
[100.35527039 228.11404419]
[99.19001007 213.15937805]
[98.02475739 198.20471191]
[96.85949707 183.25003052]
[95.69423676 168.29536438]
[94.52898407 153.34069824]
[71.79743958 143.60685730]
[56.51887131 125.17572021]
[51.51285934 102.57044983]
[57.18566132 80.93620300]
[71.59176636 64.87086487]
[64.22686005 51.80342102]
[56.86194611 38.73597717]
[41.56884384 38.47472382]
[28.54582024 30.64544106]
[21.23877335 17.43659973]
[21.52248764 2.44408607]
[29.22064400 -10.30753994]
[21.85573387 -23.37498283]
[14.49082184 -36.44242859]
[7.12591076 -49.50987244]
[-0.23900032 -62.57731247]
[-7.60391140 -75.64476013]
[-14.96882248 -88.71220398]
[-22.33373451 -101.77964783]
[-29.69864464 -114.84709167]
[-27.25848961 -100.04689789]
[-36.53964996 -88.26300812]
[-51.49958038 -87.16737366]
[-62.39855576 -97.47331238]
[-62.14073944 -112.47109985]
[-50.89441681 -122.39621735]
[-64.86157990 -116.92644501]
[-78.82873535 -111.45666504]
[-84.92903137 -96.87716675]
[-99.58335114 -90.95883942]
[-114.09754181 -97.21293640]
[-119.86060333 -111.92900848]
[-113.45339966 -126.37626648]
[-98.67722321 -131.98341370]
[-84.29850769 -125.42382812]
[-70.33135223 -130.89360046]
[-56.36418915 -136.36337280]
[-49.82592392 -149.86341858]
[-54.19414520 -164.21328735]
[-58.56236267 -178.56314087]
[-62.93058395 -192.91300964]
[-67.29880524 -207.26287842]
[-71.66702271 -221.61274719]
[-76.03524780 -235.96261597]
[-80.40346527 -250.31246948]
[-84.77169037 -264.66235352]
[-98.43617249 -272.14028931]
[-102.66175079 -286.75531006]
[-95.44847870 -299.73623657]
[-99.81669617 -314.08609009]
[-104.18491364 -328.43594360]
[-108.55313873 -342.78582764]
[-113.14399719 -357.06600952]
[-117.95638275 -371.27310181]
[-122.87909698 -385.44232178]
[-127.91184998 -399.57281494]
[-132.94459534 -413.70333862]
[-137.97735596 -427.83386230]
[-143.01010132 -441.96435547]
[-148.04284668 -456.09487915]
[-153.18533325 -470.18582153]
[-158.43722534 -484.23635864]
[-163.68911743 -498.28689575]
[-168.94102478 -512.33746338]
[-174.19291687 -526.38800049]
[-191.71533203 -533.57586670]
[-198.31344604 -550.98779297]
[-190.23663330 -567.41003418]
[-196.03071594 -581.24578857]
[-201.93222046 -595.03613281]
[-207.83372498 -608.82641602]
[-214.09158325 -615.49066162]
[-213.71792603 -622.87738037]
[-219.40425110 -636.75775146]
[-225.09057617 -650.63818359]
[-230.77690125 -664.51855469]
[-236.46322632 -678.39898682]
[-242.14955139 -692.27935791]
[-247.83587646 -706.15979004]
[-261.13128662 -715.76000977]
[-259.19598389 -732.04455566]
[-244.02085876 -738.26129150]
[-231.21678162 -728.01495361]
[-233.95547485 -711.84613037]
[-228.26914978 -697.96569824]
[-222.58282471 -684.08532715]
[-216.89649963 -670.20489502]
[-211.21017456 -656.32446289]
[-205.52384949 -642.44409180]
[-199.83752441 -628.56365967]
[-194.04342651 -614.72790527]
[-188.14192200 -600.93762207]
[-182.24041748 -587.14733887]
[-176.71464539 -582.23120117]
[-176.35621643 -573.09637451]
[-165.11955261 -571.07238770]
[-156.16465759 -563.79766846]
[-151.79176331 -552.99163818]
[-153.19573975 -541.29833984]
[-160.14237976 -531.63989258]
[-154.89048767 -517.58935547]
[-149.63858032 -503.53881836]
[-144.38668823 -489.48828125]
[-139.13479614 -475.43774414]
[-133.84431458 -470.26922607]
[-133.91233826 -461.12762451]
[-128.87959290 -446.99713135]
[-123.84683990 -432.86660767]
[-118.81408691 -418.73608398]
[-113.78133392 -404.60559082]
[-108.74858856 -390.47506714]
[-103.53913116 -385.22491455]
[-103.74931335 -376.08547974]
[-98.93692017 -361.87841797]
[-95.12131500 -358.99514771]
[-93.08061981 -353.68136597]
[-94.20326996 -347.15405273]
[-89.83505249 -332.80416870]
[-85.46682739 -318.45431519]
[-81.09860992 -304.10443115]
[-67.87600708 -297.34439087]
[-63.24159241 -282.85382080]
[-70.42182159 -269.03054810]
[-66.05360413 -254.68069458]
[-61.68538284 -240.33082581]
[-57.31716156 -225.98095703]
[-52.94894028 -211.63110352]
[-48.58071899 -197.28123474]
[-44.21249771 -182.93136597]
[-39.84427643 -168.58149719]
[-35.47605515 -154.23162842]
[-24.96138763 -153.55203247]
[-16.05046654 -146.44197083]
[-12.54519653 -134.68934631]
[-16.63120079 -122.21199799]
[-9.26629066 -109.14455414]
[-1.90137911 -96.07711029]
[5.46353197 -83.00966644]
[12.82844353 -69.94222260]
[20.19335365 -56.87478256]
[27.55826569 -43.80733871]
[34.92317581 -30.73989487]
[42.28808975 -17.67245102]
[57.18323135 -17.65458107]
[70.15582275 -10.13342285]
[77.67166138 2.95774078]
[77.62541962 18.15295982]
[69.92938995 31.37106514]
[77.29430389 44.43850708]
[84.65921021 57.50595093]
[94.34109497 54.40399170]
[104.63999176 53.51771545]
[115.04689789 54.96652222]
[125.03075409 58.75252533]
[134.06549072 64.75680542]
[141.65766907 72.74189758]
[147.37318420 82.36056519]
[150.86167908 93.17066193]
[151.87713623 104.65528870]
[150.29379272 116.24748230]
[146.11602783 127.35823822]
[157.43836975 137.19717407]
[168.76072693 147.03610229]
[180.08306885 156.87503052]
[191.40541077 166.71395874]
[207.59819031 169.30741882]
[213.19499207 184.72193909]
[202.43832397 197.10040283]
[186.39370728 193.70887756]
[181.56648254 178.03630066]
[170.24414062 168.19737244]
[158.92178345 158.35844421]
[147.59944153 148.51951599]
[136.27709961 138.68058777]
[129.57873535 142.05430603]
[136.32617188 155.45101929]
[143.07359314 168.84774780]
[149.82081604 182.24458313]
[136.42387390 188.99159241]
[129.67686462 175.59516907]
[122.92944336 162.19845581]
[116.18201447 148.80172729]
[109.48365021 152.17543030]
[110.64891052 167.13011169]
[111.81417084 182.08477783]
[112.97942352 197.03944397]
[114.14468384 211.99412537]
[115.30994415 226.94879150]
[116.47519684 241.90345764]
[128.64630127 251.98512268]
[130.04055786 267.72778320]
[119.83078003 279.79162598]
[104.07424927 281.01934814]
[92.11904144 270.68261719]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 196]
[2 195]
[3 194]
[4 193]
[5 192]
[6 191]
[7 190]
[12 157]
[13 156]
[14 155]
[19 150]
[20 149]
[21 148]
[22 147]
[23 146]
[24 145]
[25 144]
[26 143]
[27 142]
[33 44]
[34 43]
[35 42]
[45 138]
[46 137]
[47 136]
[48 135]
[49 134]
[50 133]
[51 132]
[52 131]
[53 130]
[56 127]
[57 126]
[58 125]
[59 124]
[60 121]
[61 120]
[62 118]
[63 117]
[64 116]
[65 115]
[66 114]
[67 113]
[68 111]
[69 110]
[70 109]
[71 108]
[72 107]
[75 102]
[76 100]
[77 99]
[78 98]
[80 97]
[81 96]
[82 95]
[83 94]
[84 93]
[85 92]
[86 91]
[168 181]
[169 180]
[170 179]
[171 178]
[172 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
