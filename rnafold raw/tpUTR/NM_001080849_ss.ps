%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 14:06:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUGCGCUCCCCGGCACUGUGGGACUUCGGCCUUCCAGAAGGAGGUUUUGGCCCUGGGCCUCUCUGGACGUGGCCUGUUUUCUAUCAAUAAACAGACAUUACUUCCAGAU\
) } def
/len { sequence length } bind def

/coor [
[166.01773071 173.80325317]
[162.32414246 188.34138489]
[154.00047302 200.82002258]
[141.99670410 209.81498718]
[127.68280792 214.29968262]
[112.69243622 213.76225281]
[98.73644257 208.26405334]
[87.40761566 198.43258667]
[79.99891663 185.38992310]
[77.35589600 170.62460327]
[79.78021240 155.82180786]
[86.99516296 142.67097473]
[98.17731476 132.67300415]
[112.05045319 126.96896362]
[127.03374481 126.21015167]
[114.40470123 118.11649323]
[101.77565765 110.02283478]
[93.70987701 108.63784790]
[88.91240692 101.52453613]
[76.51323700 93.08294678]
[64.11405945 84.64134979]
[55.12265778 82.34854889]
[51.49201965 75.78876495]
[39.33229828 67.00576019]
[27.17257881 58.22275162]
[18.24838448 55.68088913]
[14.80149651 49.02271652]
[2.89062691 39.90508652]
[-12.57188702 41.78881454]
[-24.52131844 32.37256622]
[-26.22187424 17.61981392]
[-38.13274384 8.50218296]
[-50.04361343 -0.61544669]
[-61.95448303 -9.73307705]
[-73.86535645 -18.85070610]
[-85.77622223 -27.96833611]
[-97.68709564 -37.08596802]
[-113.71578979 -36.40735626]
[-124.13089752 -48.61002350]
[-120.94284058 -64.33312225]
[-106.59722900 -71.51523590]
[-92.09877777 -64.64686584]
[-88.56946564 -48.99683762]
[-76.65859222 -39.87920761]
[-64.74772644 -30.76157570]
[-52.83685303 -21.64394569]
[-40.92598343 -12.52631664]
[-29.01511383 -3.40868664]
[-17.10424423 5.70894337]
[-2.41912317 3.49923134]
[9.79007721 12.57612991]
[12.00825691 27.99421692]
[23.91912651 37.11184692]
[35.95558548 46.06303024]
[48.11530685 54.84603882]
[60.27502441 63.62904358]
[72.55565643 72.24217987]
[84.95482635 80.68376923]
[97.35400391 89.12536621]
[109.86931610 97.39379120]
[122.49835968 105.48744965]
[135.12739563 113.58110809]
[141.68971252 113.17767334]
[147.19764709 115.54119110]
[150.66343689 119.70230865]
[165.41917419 122.39823914]
[180.17492676 125.09417725]
[194.93066406 127.79011536]
[209.68640137 130.48605347]
[224.44215393 133.18199158]
[239.40821838 128.05097961]
[250.53762817 137.94973755]
[265.29336548 140.64567566]
[280.04910278 143.34161377]
[294.80484009 146.03755188]
[313.32369995 138.31550598]
[327.67419434 151.15008545]
[342.55694580 153.02180481]
[357.43972778 154.89352417]
[372.32247925 156.76525879]
[387.20526123 158.63697815]
[402.08801270 160.50869751]
[411.90383911 148.60688782]
[426.60299683 143.92303467]
[441.49502563 147.95175171]
[451.82797241 159.40750122]
[454.30459595 174.63476562]
[448.13461304 188.77461243]
[435.28686523 197.31504822]
[419.86102295 197.53085327]
[406.77938843 189.35316467]
[400.21627808 175.39146423]
[385.33352661 173.51974487]
[370.45077515 171.64801025]
[355.56799316 169.77629089]
[340.68524170 167.90457153]
[325.80245972 166.03285217]
[318.18591309 173.10026550]
[307.70596313 174.76768494]
[297.86999512 170.22787476]
[292.10891724 160.79328918]
[277.35317993 158.09736633]
[262.59741211 155.40142822]
[247.84169006 152.70549011]
[233.93104553 158.02932739]
[221.74621582 147.93772888]
[206.99046326 145.24179077]
[192.23472595 142.54585266]
[177.47898865 139.84991455]
[162.72323608 137.15399170]
[147.96749878 134.45805359]
[158.40498352 145.23110962]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 62]
[16 61]
[17 60]
[19 59]
[20 58]
[21 57]
[23 56]
[24 55]
[25 54]
[27 53]
[28 52]
[31 49]
[32 48]
[33 47]
[34 46]
[35 45]
[36 44]
[37 43]
[65 111]
[66 110]
[67 109]
[68 108]
[69 107]
[70 106]
[72 104]
[73 103]
[74 102]
[75 101]
[77 97]
[78 96]
[79 95]
[80 94]
[81 93]
[82 92]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
