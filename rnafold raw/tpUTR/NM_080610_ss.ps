%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 03:52:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAACCCACUCACAGGCUUGUCCAUGUGCUGCUCCCACAUUCCGUGGACAUCAGCACUACUCUCCUGAGGACUCUUCAGUGGCUGAGCAGCUUUGGACUUGUUUGUUAUCCUAUUUUGCAUGUGUUUGAGAUCUCAGAUCAGUGUUUUAGAAAAUCCACACAUCUUGAGCCUAAUCAUGUAGUGUAGAUCAUUAAACAUCAGCAUUUUAAGAA\
) } def
/len { sequence length } bind def

/coor [
[102.98815918 126.24406433]
[100.38343811 141.01617432]
[97.77871704 155.78829956]
[105.76576996 169.70184326]
[99.73381042 184.56773376]
[84.31004333 188.98216248]
[71.32627106 179.55873108]
[70.74251556 163.52629089]
[83.00659943 153.18357849]
[85.61132050 138.41145325]
[88.21604919 123.63934326]
[80.98229218 118.33049011]
[75.94314575 110.90632629]
[73.68013000 102.22359467]
[58.99001694 99.19033051]
[44.29990768 96.15707397]
[29.60979843 93.12380981]
[14.91969013 90.09054565]
[0.22958051 87.05728149]
[-12.87661076 95.47544098]
[-27.73126030 92.19001770]
[-35.67592621 79.64338684]
[-50.36603546 76.61012268]
[-65.05614471 73.57685852]
[-79.74625397 70.54359436]
[-94.43636322 67.51033783]
[-104.76075745 76.15676880]
[-117.98674011 77.26330566]
[-129.26856995 70.64931488]
[-134.60185242 58.92203140]
[-149.24629211 55.67543793]
[-163.89073181 52.42884445]
[-178.53517151 49.18225098]
[-193.17961121 45.93565369]
[-207.82405090 42.68906021]
[-222.46849060 39.44246674]
[-237.15859985 36.40920258]
[-251.89126587 33.58991241]
[-266.62393188 30.77062035]
[-281.35659790 27.95132828]
[-289.91806030 44.49954987]
[-304.63519287 56.77585602]
[-323.47018433 62.54437256]
[-343.59967041 60.50982285]
[-361.83749390 50.58041382]
[-375.13873291 33.94505692]
[-390.12445068 34.59934616]
[-405.11016846 35.25363922]
[-413.56201172 48.26694870]
[-428.06072998 53.79563141]
[-443.03131104 49.71379471]
[-452.71725464 37.59099197]
[-453.39410400 22.08868599]
[-444.80157471 9.16782951]
[-430.24374390 3.79675508]
[-415.31832886 8.04075146]
[-405.76446533 20.26791573]
[-390.77874756 19.61362457]
[-375.79299927 18.95933342]
[-374.59820557 11.55511475]
[-372.20861816 -3.25332165]
[-371.01379395 -10.65754032]
[-385.03308105 -15.99230099]
[-399.05236816 -21.32706261]
[-415.14706421 -18.18181419]
[-425.71279907 -30.72364807]
[-419.88043213 -46.05060196]
[-403.64981079 -48.39561844]
[-393.71762085 -35.34634781]
[-379.69833374 -30.01158524]
[-365.67904663 -24.67682457]
[-355.19375610 -32.71336365]
[-343.25653076 -37.89481354]
[-330.61505127 -40.00052261]
[-318.03680420 -38.99925232]
[-306.26245117 -35.04555130]
[-295.96224976 -28.46498489]
[-287.69790649 -19.72950363]
[-281.89230347 -9.42463493]
[-278.80813599 1.78917944]
[-278.53732300 13.21865845]
[-263.80465698 16.03794861]
[-249.07197571 18.85724068]
[-234.33930969 21.67653275]
[-229.95751953 19.78541183]
[-224.34149170 20.62418747]
[-219.22189331 24.79802704]
[-204.57745361 28.04462051]
[-189.93301392 31.29121399]
[-175.28857422 34.53780746]
[-160.64413452 37.78440475]
[-145.99969482 41.03099823]
[-131.35525513 44.27759171]
[-117.56828308 34.64352798]
[-100.74848938 38.03016281]
[-91.40309906 52.82022476]
[-76.71298981 55.85348892]
[-62.02288055 58.88675308]
[-47.33277130 61.92001724]
[-32.64266205 64.95327759]
[-20.37827682 56.57948303]
[-5.43720722 59.44637680]
[3.26284409 72.36717224]
[17.95295334 75.40043640]
[32.64306259 78.43370056]
[47.33317184 81.46695709]
[62.02328110 84.50022125]
[76.71339417 87.53348541]
[92.52205658 74.66700745]
[112.78375244 76.88602448]
[125.43286896 92.86914062]
[140.43128967 93.08729553]
[154.34252930 85.55152130]
[166.95591736 93.47310638]
[181.95433044 93.69126892]
[191.29420471 81.44083405]
[205.88606262 77.08984375]
[220.07414246 82.10603333]
[228.48719788 94.36811066]
[243.48561096 94.58626556]
[258.48403931 94.80442810]
[269.77441406 84.07294464]
[284.98184204 84.50784302]
[295.14309692 95.33764648]
[310.14151001 95.55580902]
[325.13992310 95.77396393]
[340.13833618 95.99212646]
[355.13674927 96.21028137]
[370.13516235 96.42844391]
[385.13357544 96.64659882]
[400.13198853 96.86475372]
[415.13159180 96.97383881]
[430.13159180 96.97383881]
[445.13159180 96.97383881]
[460.13159180 96.97383881]
[475.13159180 96.97383881]
[490.13119507 96.86475372]
[505.12960815 96.64659882]
[520.10424805 95.77442932]
[535.02655029 94.24990082]
[549.94885254 92.72537231]
[562.89123535 83.62555695]
[576.33892822 90.02925873]
[591.26129150 88.50473022]
[599.47680664 84.52065277]
[606.41149902 87.06816864]
[621.35443115 85.76083374]
[636.29736328 84.45349121]
[651.24023438 83.14615631]
[664.31353760 74.23553467]
[677.66674805 80.83413696]
[692.60968018 79.52680206]
[707.55261230 78.21946716]
[713.39831543 64.07427216]
[725.15539551 54.27486801]
[740.12231445 51.07307434]
[754.85961914 55.20464325]
[765.98089600 65.72017670]
[770.93048096 80.20326996]
[768.57104492 95.32582092]
[759.44476318 107.61278534]
[745.64874268 114.24069214]
[730.35327148 113.68651581]
[717.07312012 106.07758331]
[708.85992432 93.16238403]
[693.91699219 94.46972656]
[678.97406006 95.77706146]
[666.96960449 104.59416962]
[652.54760742 98.08908081]
[637.60467529 99.39641571]
[622.66174316 100.70375061]
[607.71881104 102.01108551]
[592.78582764 103.42705536]
[577.86346436 104.95158386]
[565.98852539 113.94235229]
[551.47338867 107.64769745]
[536.55108643 109.17222595]
[521.62872314 110.69675446]
[532.56115723 120.96721649]
[533.16387939 135.95510864]
[523.09143066 147.07022095]
[508.11676025 147.94203186]
[496.82254028 138.07084656]
[495.68191528 123.11428070]
[505.34777832 111.64501190]
[490.34933472 111.86317444]
[483.70947266 115.10230255]
[475.13159180 111.97383881]
[460.13159180 111.97383881]
[445.13159180 111.97383881]
[430.13159180 111.97383881]
[415.13159180 111.97383881]
[408.44531250 115.11605835]
[399.91381836 111.86317444]
[384.91540527 111.64501190]
[369.91699219 111.42685699]
[354.91857910 111.20869446]
[339.92016602 110.99053955]
[324.92175293 110.77237701]
[309.92333984 110.55422211]
[294.92492676 110.33605957]
[284.45300293 120.86574554]
[269.23937988 120.85816193]
[258.26586914 109.80284119]
[243.26745605 109.58467865]
[228.26904297 109.36652374]
[219.50289917 121.37871552]
[205.17492676 125.98012543]
[190.71578979 121.20658112]
[181.73617554 108.68968201]
[166.73776245 108.47151947]
[153.89930725 116.02290344]
[140.21311951 108.08570862]
[125.21471405 107.86755371]
[120.41436768 116.76107788]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 11]
[2 10]
[3 9]
[14 108]
[15 107]
[16 106]
[17 105]
[18 104]
[19 103]
[22 100]
[23 99]
[24 98]
[25 97]
[26 96]
[30 93]
[31 92]
[32 91]
[33 90]
[34 89]
[35 88]
[36 87]
[37 84]
[38 83]
[39 82]
[40 81]
[46 59]
[47 58]
[48 57]
[62 71]
[63 70]
[64 69]
[111 214]
[112 213]
[114 211]
[115 210]
[119 206]
[120 205]
[121 204]
[124 201]
[125 200]
[126 199]
[127 198]
[128 197]
[129 196]
[130 195]
[131 194]
[132 192]
[133 191]
[134 190]
[135 189]
[136 188]
[137 186]
[138 185]
[139 178]
[140 177]
[141 176]
[143 174]
[144 173]
[146 172]
[147 171]
[148 170]
[149 169]
[151 167]
[152 166]
[153 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
