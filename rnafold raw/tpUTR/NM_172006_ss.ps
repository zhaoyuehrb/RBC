%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 20:16:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGGGAGAGUGGGCUGGGAUGUGCAUCCUGCUCCCUGAACCCUUCCAUCCGAGACUGUGCCCACAUCCGAAGCACAAGGACAUCAAAUCAUCAGCACAAGAACAUCAACAGGAAUGCCACCCUCCCCAGUGUCUGAACUCCCUGUCCCUGUCAAAUAAACCAGAACAAAUGCCCAUGGA\
) } def
/len { sequence length } bind def

/coor [
[87.76238251 335.11618042]
[86.97734070 320.13674927]
[86.19230652 305.15731812]
[85.40726471 290.17785645]
[84.62222290 275.19842529]
[71.28910828 268.55813599]
[63.01486969 256.05239868]
[62.10520172 240.98460388]
[68.90435791 227.39532471]
[81.67588806 218.97897339]
[80.89084625 203.99952698]
[69.68463135 194.25497437]
[68.67510223 179.07487488]
[78.97206116 167.38682556]
[78.18701935 152.40739441]
[77.40197754 137.42794800]
[66.08133698 127.58705902]
[51.13841629 128.89439392]
[36.19549561 130.20173645]
[21.25257683 131.50906372]
[6.30965567 132.81640625]
[-8.63326454 134.12373352]
[-23.55109406 135.69166565]
[-38.43928528 137.51971436]
[-53.32747650 139.34774780]
[-68.21566772 141.17578125]
[-73.99179840 153.70831299]
[-85.12217712 161.68103027]
[-98.63132477 163.09439087]
[-110.97241211 157.68505859]
[-118.95843506 146.96688843]
[-133.87626648 148.53482056]
[-148.79409790 150.10275269]
[-159.53781128 163.89126587]
[-176.59268188 165.62344360]
[-189.37574768 154.71438599]
[-204.26393127 156.54241943]
[-211.66870117 170.17874146]
[-225.68896484 176.82794189]
[-240.93365479 173.93325806]
[-251.54086304 162.60778809]
[-253.43193054 147.20637512]
[-245.87966919 133.65118408]
[-231.78810120 127.15447235]
[-216.57571411 130.21435547]
[-206.09197998 141.65423584]
[-191.20378113 139.82618713]
[-184.75804138 128.65028381]
[-172.87124634 123.15335083]
[-159.79814148 125.55027771]
[-150.36201477 135.18492126]
[-135.44419861 133.61698914]
[-120.52636719 132.04907227]
[-112.78941345 117.58544922]
[-97.81026459 110.50338745]
[-81.39668274 113.76744843]
[-70.04370880 126.28759766]
[-55.15551758 124.45955658]
[-40.26732635 122.63151550]
[-25.37913322 120.80347443]
[-21.77055168 117.63626099]
[-16.12601852 116.72052002]
[-9.94060135 119.18081665]
[5.00231934 117.87348175]
[19.94524002 116.56614685]
[34.88816071 115.25881195]
[49.83108139 113.95147705]
[64.77400208 112.64414215]
[63.45097733 97.55159760]
[68.18777466 83.50288391]
[77.94306946 72.77360535]
[90.88653564 66.99079132]
[104.73810577 66.88871002]
[117.16854095 72.22485352]
[127.77514648 61.61825180]
[138.38174438 51.01165009]
[142.66883850 35.78236008]
[157.13948059 32.25391388]
[167.74607849 21.64731407]
[178.35269165 11.04071236]
[188.95928955 0.43411037]
[199.56588745 -10.17249107]
[193.72622681 -22.31126595]
[191.92196655 -35.63725662]
[194.31536865 -48.84694672]
[200.65879822 -60.65259171]
[210.32026672 -69.90772247]
[222.34632874 -75.71852112]
[235.55619812 -77.53008270]
[248.65769958 -75.17942047]
[260.37359619 -68.91000366]
[271.34390259 -79.13997650]
[282.31420898 -89.36995697]
[293.28451538 -99.59992981]
[304.16513062 -109.92524719]
[314.95523071 -120.34512329]
[325.74533081 -130.76499939]
[320.93869019 -139.86605835]
[318.29199219 -149.80123901]
[317.93469238 -160.06596375]
[319.88006592 -170.14009094]
[324.02487183 -179.51416016]
[330.15478516 -187.71522522]
[337.95538330 -194.33068848]
[347.02844238 -199.02906799]
[356.91204834 -201.57661438]
[367.10437012 -201.84889221]
[377.08889771 -199.83691406]
[386.36077881 -195.64730835]
[394.45227051 -189.49665833]
[406.43182373 -198.52388000]
[418.41134644 -207.55111694]
[418.00588989 -223.06289673]
[426.82321167 -235.83139038]
[441.47283936 -240.94688416]
[456.32168579 -236.44233704]
[465.66009521 -224.04985046]
[465.89724731 -208.53457642]
[456.94195557 -195.86247253]
[442.23770142 -190.90621948]
[427.43856812 -195.57157898]
[415.45904541 -186.54435730]
[403.47949219 -177.51713562]
[408.63699341 -158.11807251]
[404.87435913 -138.35429382]
[392.89523315 -122.13359833]
[375.03176880 -112.68075562]
[354.79074097 -111.89636993]
[336.16519165 -119.97489929]
[325.37509155 -109.55502319]
[314.58499146 -99.13514709]
[311.95022583 -92.20749664]
[303.51449585 -88.62962341]
[292.54418945 -78.39965057]
[281.57388306 -68.16967010]
[270.60357666 -57.93969727]
[276.79867554 -42.50988770]
[276.60363770 -25.84729767]
[270.02011108 -10.49928951]
[258.02859497 1.17696011]
[242.44248962 7.37646866]
[225.63386536 7.12543917]
[210.17248535 0.43411037]
[199.56588745 11.04071236]
[188.95928955 21.64731407]
[178.35269165 32.25391388]
[167.74607849 42.86051559]
[164.21763611 57.33115387]
[148.98834229 61.61825180]
[138.38174438 72.22485352]
[127.77514648 82.83145905]
[131.44120789 89.55635834]
[133.47837830 97.05454254]
[133.72642517 104.93138123]
[132.12078857 112.75990295]
[128.69868469 120.10398102]
[123.59990692 126.54260254]
[117.06162262 131.69389343]
[109.40765381 135.23762512]
[101.03257751 136.93475342]
[92.38142395 136.64289856]
[93.16646576 151.62234497]
[93.95149994 166.60179138]
[105.41378784 177.14947510]
[105.99654388 192.35194397]
[95.87029266 203.21449280]
[96.65533447 218.19392395]
[110.23665619 225.22920227]
[118.41902924 238.03332520]
[119.08935547 253.11367798]
[112.16764832 266.41577148]
[99.60166931 274.41339111]
[100.38671112 289.39282227]
[101.17174530 304.37228394]
[101.95678711 319.35171509]
[102.74182892 334.33114624]
[112.12236786 347.78244019]
[104.91941833 362.51504517]
[88.54273987 363.37332153]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 176]
[2 175]
[3 174]
[4 173]
[5 172]
[10 167]
[11 166]
[14 163]
[15 162]
[16 161]
[17 68]
[18 67]
[19 66]
[20 65]
[21 64]
[22 63]
[23 60]
[24 59]
[25 58]
[26 57]
[31 53]
[32 52]
[33 51]
[36 47]
[37 46]
[74 151]
[75 150]
[76 149]
[78 147]
[79 146]
[80 145]
[81 144]
[82 143]
[91 136]
[92 135]
[93 134]
[94 133]
[95 131]
[96 130]
[97 129]
[110 123]
[111 122]
[112 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
