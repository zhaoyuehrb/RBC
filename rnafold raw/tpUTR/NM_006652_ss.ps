%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 18:36:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUCUAACAAGAACACAGCCCUCCAUGGAUUCGGGAUUGCUCUGAGGGCCAUAGAAGGCAUUUGCGUGUGUGUGUGUGUGUGUGUGUGAACAAGAGGUUCAUUCCUCUACCCCCACAUUUAUUCUCCCUGAUGUGCUCCUACAAGUGCUUCAUCUCUGUGCCUGAAAUUCUAUAAAUGUUGCAAUCAUG\
) } def
/len { sequence length } bind def

/coor [
[93.08275604 439.88613892]
[86.66024780 441.98760986]
[79.94512939 442.55801392]
[75.80529785 456.97543335]
[71.66546631 471.39285278]
[67.52563477 485.81027222]
[72.01003265 501.58435059]
[60.39880753 513.16503906]
[44.63658905 508.63903809]
[40.93819809 492.66235352]
[53.10822296 481.67044067]
[57.24805069 467.25302124]
[61.38788223 452.83560181]
[65.52770996 438.41818237]
[51.65989685 419.38327026]
[56.33381271 396.04129028]
[76.89638519 383.54928589]
[78.86447144 368.67895508]
[80.83255768 353.80862427]
[82.80064392 338.93829346]
[71.43979645 331.34246826]
[64.42949677 319.53421021]
[63.18851471 305.79150391]
[68.01614380 292.79431152]
[78.02265930 283.10189819]
[91.29267883 278.64898682]
[93.50507355 263.81304932]
[95.71746826 248.97709656]
[97.92986298 234.14115906]
[100.14225769 219.30520630]
[102.11034393 204.43487549]
[103.83358765 189.53419495]
[105.55682373 174.63351440]
[107.28006744 159.73281860]
[109.00330353 144.83213806]
[110.72654724 129.93145752]
[105.48906708 124.56313324]
[90.95339966 128.26641846]
[95.01411438 113.82649994]
[89.77664185 108.45817566]
[74.83797455 109.81330109]
[59.89931488 111.16841888]
[44.96065140 112.52354431]
[29.73252106 119.97608185]
[18.35565948 107.40614319]
[27.28493118 92.99419403]
[43.60552979 97.58487701]
[58.54419327 96.22975922]
[73.48285675 94.87463379]
[88.42151642 93.51951599]
[100.29045868 84.34736633]
[105.36920929 70.23332214]
[110.44795227 56.11927414]
[115.52670288 42.00522995]
[120.60544586 27.89118195]
[125.68419647 13.77713394]
[130.29597473 -0.49631819]
[134.43580627 -14.91373158]
[138.57563782 -29.33114433]
[142.71546936 -43.74855804]
[146.85530090 -58.16596985]
[150.99513245 -72.58338165]
[155.13496399 -87.00080109]
[159.27479553 -101.41821289]
[163.41462708 -115.83562469]
[157.65385437 -135.14176941]
[172.10263062 -147.97683716]
[167.97000122 -163.24877930]
[178.58134460 -173.70098877]
[182.24473572 -188.24676514]
[185.90812683 -202.79254150]
[189.57153320 -217.33830261]
[193.23492432 -231.88407898]
[196.89833069 -246.42985535]
[186.56401062 -262.29220581]
[191.01222229 -280.36566162]
[206.97172546 -289.30770874]
[202.33901978 -304.43542480]
[212.60084534 -315.23101807]
[207.96815491 -330.35876465]
[218.22996521 -341.15432739]
[221.41296387 -355.81271362]
[224.59596252 -370.47109985]
[219.96327209 -385.59884644]
[230.22509766 -396.39443970]
[233.40809631 -411.05282593]
[236.59109497 -425.71121216]
[239.77409363 -440.36959839]
[242.95709229 -455.02801514]
[230.60842896 -466.01144409]
[225.50819397 -481.63256836]
[228.95692444 -497.60327148]
[239.92196655 -509.58941650]
[255.34410095 -514.38702393]
[258.28558350 -529.09582520]
[261.22705078 -543.80456543]
[264.16854858 -558.51330566]
[267.11001587 -573.22210693]
[258.13571167 -586.23120117]
[261.07089233 -601.76055908]
[274.17416382 -610.59680176]
[289.67160034 -607.49761963]
[298.36883545 -594.30163574]
[295.10595703 -578.83782959]
[281.81878662 -570.28057861]
[278.87728882 -555.57183838]
[275.93582153 -540.86309814]
[272.99435425 -526.15429688]
[270.05285645 -511.44555664]
[280.88973999 -503.11923218]
[287.10855103 -490.87564087]
[287.44332886 -477.08108521]
[281.77163696 -464.42941284]
[271.14956665 -455.41586304]
[257.61547852 -451.84500122]
[254.43247986 -437.18661499]
[251.24948120 -422.52822876]
[248.06648254 -407.86981201]
[244.88348389 -393.21142578]
[249.74385071 -379.13214111]
[239.25436401 -367.28811646]
[236.07136536 -352.62973022]
[232.88836670 -337.97131348]
[237.74873352 -323.89205933]
[227.25923157 -312.04800415]
[232.11959839 -297.96871948]
[221.63011169 -286.12469482]
[229.74717712 -278.07901001]
[232.99858093 -266.99725342]
[230.46319580 -255.60716248]
[222.65940857 -246.77101135]
[211.44409180 -242.76646423]
[207.78070068 -228.22068787]
[204.11730957 -213.67491150]
[200.45390320 -199.12913513]
[196.79051208 -184.58335876]
[193.12710571 -170.03759766]
[197.52177429 -155.80607605]
[186.64840698 -144.31344604]
[192.66798401 -136.03074646]
[193.13552856 -125.58234406]
[187.65443420 -116.41769409]
[177.83203125 -111.69579315]
[173.69219971 -97.27838135]
[169.55236816 -82.86096954]
[165.41255188 -68.44355774]
[161.27272034 -54.02614212]
[157.13288879 -39.60872650]
[152.99305725 -25.19131470]
[148.85322571 -10.77390099]
[144.71339417 3.64351225]
[145.96777344 6.16850471]
[146.28883362 9.34660339]
[145.42120361 12.82162094]
[143.24427795 16.15108490]
[139.79824829 18.85588264]
[134.71949768 32.96992874]
[129.64074707 47.08397675]
[124.56200409 61.19802475]
[119.48325348 75.31207275]
[114.40450287 89.42611694]
[125.62723541 131.65469360]
[123.90399170 146.55537415]
[122.18075562 161.45605469]
[120.45751190 176.35675049]
[118.73427582 191.25743103]
[117.01103210 206.15812683]
[119.29184723 212.39302063]
[118.22885132 217.99758911]
[114.97821045 221.51760864]
[112.76580811 236.35354614]
[110.55341339 251.18949890]
[108.34101868 266.02545166]
[106.12862396 280.86138916]
[119.17266846 291.00918579]
[125.28889465 306.26123047]
[122.89760590 322.42410278]
[112.74432373 335.10519409]
[97.67096710 340.90637207]
[95.70288849 355.77670288]
[93.73480225 370.64703369]
[91.76671600 385.51736450]
[97.82202148 388.90875244]
[102.92428589 393.58651733]
[106.80700684 399.29498291]
[109.26999664 405.72491455]
[110.18968201 412.53027344]
[109.52531433 419.34692383]
[107.32068634 425.81204224]
[103.70133209 431.58343506]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 14]
[4 13]
[5 12]
[6 11]
[17 182]
[18 181]
[19 180]
[20 179]
[26 174]
[27 173]
[28 172]
[29 171]
[30 170]
[31 167]
[32 166]
[33 165]
[34 164]
[35 163]
[36 162]
[40 50]
[41 49]
[42 48]
[43 47]
[51 161]
[52 160]
[53 159]
[54 158]
[55 157]
[56 156]
[57 151]
[58 150]
[59 149]
[60 148]
[61 147]
[62 146]
[63 145]
[64 144]
[65 143]
[67 139]
[69 137]
[70 136]
[71 135]
[72 134]
[73 133]
[74 132]
[77 127]
[79 125]
[81 123]
[82 122]
[83 121]
[85 119]
[86 118]
[87 117]
[88 116]
[89 115]
[94 109]
[95 108]
[96 107]
[97 106]
[98 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
