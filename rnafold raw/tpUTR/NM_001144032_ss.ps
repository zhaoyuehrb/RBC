%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 04:29:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUUUGACUUGUGUUUUAUUUUCACCACCAGACCCAUUCCUUCUGUAGCUCAGGAGAGCACCCCUCCACCACAUUUGCUUGCAAUAUCCUAGAAUCUUUGUGCUCUUGCUGCAGUUCCCUUUGGGUUCCAUGUUUUCCUUGUUCCCUUCCAUGCCUAGCUGGAUUGCAGAGUUGAGUUAAGUUUAUGAUUAUGAAAUAAAAACUAAGUAACAA\
) } def
/len { sequence length } bind def

/coor [
[73.92662048 487.43569946]
[62.97510147 476.04095459]
[63.37202072 460.24166870]
[74.88189697 449.41122437]
[75.10005188 434.41281128]
[75.31820679 419.41439819]
[72.69493103 415.42758179]
[72.54575348 409.75122070]
[75.76717377 403.98461914]
[76.42146301 388.99890137]
[77.07575226 374.01315308]
[77.73004150 359.02743530]
[78.38433075 344.04171753]
[75.53675842 337.22473145]
[79.15868378 328.84326172]
[80.03086090 313.86865234]
[80.90303040 298.89401245]
[81.77520752 283.91940308]
[82.64737701 268.94476318]
[72.58449554 258.02352905]
[73.25568390 242.82469177]
[84.77913666 232.34387207]
[85.65130615 217.36924744]
[86.52348328 202.39462280]
[87.39565277 187.41999817]
[88.26782990 172.44537354]
[67.44597626 165.77394104]
[49.51361465 153.26445007]
[36.06240082 136.02722168]
[28.28626823 115.59221649]
[26.87541962 93.77326202]
[31.95508194 72.50698853]
[43.07438660 53.68098831]
[32.46778488 43.07438660]
[21.86118126 32.46778488]
[11.25458050 21.86118126]
[0.64797843 11.25458050]
[-9.95862293 0.64797843]
[-24.77482605 6.89657831]
[-40.81601715 6.98009253]
[-55.62513733 0.91531521]
[-66.94520569 -10.34148121]
[-73.06327820 -25.04520416]
[-73.06961823 -40.93243027]
[-66.99282074 -55.56982803]
[-77.75256348 -66.02104950]
[-88.51230621 -76.47226715]
[-99.27204895 -86.92348480]
[-110.03179169 -97.37470245]
[-120.79152679 -107.82592010]
[-131.55126953 -118.27713776]
[-135.78804016 -119.18814087]
[-139.17550659 -121.19629669]
[-141.47329712 -123.90058899]
[-142.59573364 -126.86313629]
[-142.61042786 -129.66276550]
[-152.74427795 -140.72192383]
[-162.87814331 -151.78109741]
[-173.01199341 -162.84025574]
[-183.14584351 -173.89941406]
[-193.27969360 -184.95857239]
[-203.41354370 -196.01773071]
[-213.54740906 -207.07688904]
[-227.20854187 -198.92828369]
[-242.25411987 -193.78216553]
[-258.03320312 -191.85876465]
[-273.86352539 -193.23899841]
[-289.06115723 -197.86093140]
[-302.96997070 -205.52267456]
[-314.98989868 -215.89109802]
[-324.60299683 -228.51640320]
[-331.39553833 -242.85157776]
[-335.07608032 -258.27609253]
[-335.48770142 -274.12286377]
[-332.61489868 -289.70690918]
[-326.58404541 -304.35516357]
[-317.65786743 -317.43539429]
[-328.10910034 -328.19512939]
[-338.56030273 -338.95486450]
[-354.47631836 -342.90621948]
[-358.75170898 -358.73825073]
[-346.98831177 -370.16433716]
[-331.28735352 -365.43026733]
[-327.80056763 -349.40609741]
[-317.34936523 -338.64636230]
[-306.89813232 -327.88659668]
[-295.07958984 -335.64505005]
[-282.02688599 -341.08746338]
[-268.18908691 -344.02484131]
[-254.04249573 -344.35452271]
[-240.07443237 -342.06356812]
[-226.76631165 -337.22927856]
[-214.57710266 -330.01675415]
[-203.92750549 -320.67306519]
[-195.18540955 -309.51892090]
[-188.65321350 -296.93753052]
[-184.55731201 -283.36163330]
[-183.04034424 -269.25836182]
[-184.15612793 -255.11343384]
[-187.86778259 -241.41418457]
[-194.04899597 -228.63296509]
[-202.48823547 -217.21073914]
[-192.35438538 -206.15158081]
[-182.22053528 -195.09242249]
[-172.08668518 -184.03326416]
[-161.95283508 -172.97410583]
[-151.81896973 -161.91494751]
[-141.68511963 -150.85578918]
[-131.55126953 -139.79663086]
[-121.10005188 -129.03688049]
[-110.34030914 -118.58566284]
[-99.58056641 -108.13444519]
[-88.82083130 -97.68322754]
[-78.06108856 -87.23200989]
[-67.30134583 -76.78079224]
[-56.54160690 -66.32957458]
[-43.87863541 -72.37395477]
[-29.88334465 -73.73642731]
[-16.23447418 -70.23307037]
[-4.57619476 -62.26486969]
[3.67993474 -50.77189636]
[7.52587271 -37.12246704]
[6.48013592 -22.95022392]
[0.64797843 -9.95862293]
[11.25458050 0.64797843]
[21.86118126 11.25458050]
[32.46778488 21.86118126]
[43.07438660 32.46778488]
[53.68098831 43.07438660]
[59.85875320 38.56176376]
[66.47273254 34.71678162]
[73.45104218 31.58122063]
[80.71785736 29.18915749]
[88.19420624 27.56658363]
[95.79884338 26.73113251]
[103.44914246 26.69188309]
[111.06195831 27.44926071]
[118.55455780 28.99503708]
[125.84553528 31.31241226]
[132.85565186 34.37620544]
[139.50872803 38.15311813]
[145.73248291 42.60211563]
[151.45925903 47.67484665]
[156.62683105 53.31618500]
[161.17904663 59.46482849]
[165.06645203 66.05396271]
[168.24678040 73.01198578]
[170.68548584 80.26327515]
[172.35606384 87.72904968]
[173.24035645 95.32816315]
[173.32876587 102.97805023]
[172.62031555 110.59557343]
[187.16413879 114.26672363]
[201.70794678 117.93787384]
[216.30361938 121.39710999]
[230.94807434 124.64370728]
[246.09577942 120.07671356]
[256.84671021 130.38529968]
[271.49114990 133.63189697]
[286.13558960 136.87847900]
[300.78002930 140.12507629]
[315.42446899 143.37167358]
[330.57217407 138.80468750]
[341.32308960 149.11326599]
[355.96752930 152.35986328]
[370.61196899 155.60644531]
[385.25640869 158.85304260]
[400.72534180 153.40837097]
[412.99722290 164.28646851]
[409.44778442 180.29689026]
[393.72842407 184.96948242]
[382.00982666 173.49748230]
[367.36538696 170.25088501]
[352.72094727 167.00430298]
[338.07650757 163.75770569]
[323.97625732 168.55691528]
[312.17785645 158.01611328]
[297.53341675 154.76951599]
[282.88897705 151.52291870]
[268.24453735 148.27633667]
[253.60011292 145.02973938]
[239.49986267 149.82894897]
[227.70147705 139.28814697]
[213.05703735 136.04154968]
[208.62210083 137.80442810]
[203.03283691 136.80267334]
[198.03680420 132.48168945]
[183.49298096 128.81054688]
[168.94917297 125.13938904]
[161.18453979 140.52688599]
[150.04528809 153.67910767]
[136.14576721 163.87065125]
[120.25262451 170.53939819]
[103.24244690 173.31755066]
[102.37027740 188.29217529]
[101.49810791 203.26679993]
[100.62593079 218.24140930]
[99.75376129 233.21603394]
[109.98254395 244.96379089]
[108.88471985 260.13775635]
[97.62200165 269.81695557]
[96.74982452 284.79156494]
[95.87765503 299.76620483]
[95.00548553 314.74081421]
[94.13330841 329.71545410]
[93.37005615 344.69601440]
[92.71576691 359.68173218]
[92.06147766 374.66744995]
[91.40718842 389.65316772]
[90.75289154 404.63891602]
[90.31661987 419.63256836]
[90.09846497 434.63098145]
[89.88031006 449.62939453]
[101.07031250 460.79000854]
[101.00754547 476.59417725]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 213]
[5 212]
[6 211]
[9 210]
[10 209]
[11 208]
[12 207]
[13 206]
[15 205]
[16 204]
[17 203]
[18 202]
[19 201]
[22 198]
[23 197]
[24 196]
[25 195]
[26 194]
[33 129]
[34 128]
[35 127]
[36 126]
[37 125]
[38 124]
[45 116]
[46 115]
[47 114]
[48 113]
[49 112]
[50 111]
[51 110]
[56 109]
[57 108]
[58 107]
[59 106]
[60 105]
[61 104]
[62 103]
[63 102]
[77 86]
[78 85]
[79 84]
[152 189]
[153 188]
[154 187]
[155 184]
[156 183]
[158 181]
[159 180]
[160 179]
[161 178]
[162 177]
[164 175]
[165 174]
[166 173]
[167 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
