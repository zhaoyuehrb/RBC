%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 22:46:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCUUUGGCCUUUAAUUCUGAUUUCUCUGAUGGGAAUAUUGCCAGUCCUGCUUUUCCUGGCAGGCAUUUGCCGGCCUAUGUGCUUUAACCUUAAGCUGAUACUUUCCUUUAGGUGUCACUCUUGUUACCAGCAGACUUUUGACCCAACUACAGUGCUCUGUCUUUUAGUAGAGGAUUUUCACCCAUGUGCAUGGAAUAAAUGUUCAUGGUACAUUGUAAAAUAACAAUAAAAAAGAGUUUUCAGAACCAUGU\
) } def
/len { sequence length } bind def

/coor [
[100.95394897 440.25961304]
[85.60562897 439.68984985]
[72.60701752 431.50866699]
[65.45467377 417.91677856]
[66.07254791 402.57031250]
[74.29443359 389.59741211]
[87.90868378 382.48773193]
[88.46513367 367.49804688]
[89.02159119 352.50836182]
[78.23094177 362.92767334]
[63.27507401 364.07745361]
[51.01861572 355.42996216]
[47.08719254 340.95431519]
[53.28530121 327.29476929]
[66.76805115 320.72091675]
[81.34696198 324.25015259]
[90.33048248 336.26272583]
[92.18102264 321.37731934]
[94.03157043 306.49191284]
[95.88211060 291.60650635]
[97.73265839 276.72106934]
[99.58319855 261.83566284]
[88.59732056 251.81327820]
[85.58394623 237.06935120]
[91.90402985 223.21618652]
[105.32455444 215.65339661]
[107.17509460 200.76799011]
[109.02564240 185.88256836]
[110.87618256 170.99716187]
[66.05374908 152.05128479]
[49.34419632 113.63777924]
[61.80229568 80.74464417]
[49.79923248 71.74872589]
[37.79616928 62.75281143]
[25.79310608 53.75689697]
[13.03366280 63.06849289]
[-1.88678706 68.18399048]
[-17.62980652 68.65878296]
[-32.78738785 64.46392059]
[-46.00787735 55.98749161]
[-56.11650467 43.99874878]
[-62.21976852 29.57832146]
[-77.12693024 31.24461937]
[-92.03408813 32.91091919]
[-104.88934326 42.13334274]
[-118.39734650 35.85775757]
[-133.30450439 37.52405548]
[-148.15303040 39.65043259]
[-162.92871094 42.23485184]
[-177.70439148 44.81927109]
[-192.48007202 47.40369034]
[-207.25575256 49.98810959]
[-222.03143311 52.57252884]
[-230.90794373 65.64859009]
[-246.44622803 68.53601837]
[-259.42770386 59.52177048]
[-262.15069580 43.95382690]
[-252.99969482 31.06837654]
[-237.40383911 28.51012993]
[-224.61585999 37.79684448]
[-209.84017944 35.21242523]
[-195.06449890 32.62800598]
[-180.28881836 30.04358864]
[-165.51313782 27.45916939]
[-150.73744202 24.87475014]
[-161.43757629 14.36250973]
[-160.01689148 -0.57006049]
[-147.52641296 -8.87594891]
[-133.20649719 -4.41051674]
[-127.65093231 9.52274036]
[-134.97080994 22.61689568]
[-120.06364441 20.95059776]
[-108.27465820 11.84735775]
[-93.70038605 18.00375557]
[-78.79322815 16.33745766]
[-63.88606644 14.67116070]
[-62.10586166 2.73559928]
[-57.63894653 -8.47481537]
[-50.72285843 -18.36392784]
[-41.72539902 -26.40584373]
[-54.87365723 -35.20549393]
[-53.73936081 -50.05684662]
[-60.53268433 -63.43035889]
[-67.32600403 -76.80387115]
[-74.11932373 -90.17737579]
[-89.78392792 -99.88145447]
[-88.12866211 -117.36393738]
[-95.08686829 -130.65240479]
[-102.04507446 -143.94087219]
[-109.00328827 -157.22933960]
[-122.73645782 -158.20980835]
[-134.10559082 -165.78196716]
[-140.20611572 -177.88301086]
[-139.54302979 -191.31031799]
[-132.39584351 -202.56880188]
[-139.18916321 -215.94230652]
[-145.84715271 -222.15481567]
[-145.98265076 -229.52349854]
[-152.61004639 -242.98001099]
[-159.23744202 -256.43652344]
[-165.86483765 -269.89303589]
[-172.49223328 -283.34951782]
[-179.11962891 -296.80603027]
[-185.74702454 -310.26254272]
[-192.37442017 -323.71905518]
[-207.41616821 -328.56896973]
[-214.54843140 -342.67236328]
[-209.53976440 -357.66198730]
[-195.36172485 -364.64474487]
[-180.42588806 -359.47790527]
[-173.59342957 -345.22680664]
[-178.91792297 -330.34646606]
[-172.29051208 -316.88995361]
[-165.66311646 -303.43344116]
[-159.03572083 -289.97692871]
[-152.40832520 -276.52041626]
[-145.78092957 -263.06390381]
[-139.15353394 -249.60740662]
[-132.52613831 -236.15089417]
[-125.81565094 -222.73562622]
[-119.02233124 -209.36212158]
[-102.72555542 -207.28713989]
[-90.76387024 -195.78483582]
[-87.99765778 -179.25357056]
[-95.71482086 -164.18754578]
[-88.75660706 -150.89907837]
[-81.79840088 -137.61061096]
[-74.84019470 -124.32214355]
[-63.40702820 -120.42447662]
[-57.49513245 -109.43390656]
[-60.74581528 -96.97070312]
[-53.95249557 -83.59719086]
[-47.15917206 -70.22367859]
[-40.36585236 -56.85017014]
[-27.70349693 -49.00708008]
[-28.35188675 -33.19916534]
[-12.97001171 -36.00694656]
[2.57493258 -34.14550018]
[16.89544678 -27.76910210]
[28.70981979 -17.43554688]
[36.95684052 -4.05738020]
[40.89110947 11.17869377]
[40.15041351 26.91706467]
[34.78902054 41.75383377]
[46.79208374 50.74974823]
[58.79514694 59.74566269]
[70.79821014 68.74157715]
[79.76750183 56.89405441]
[93.39253235 47.95827866]
[110.61148834 43.69015884]
[129.72813416 45.42965317]
[148.57881165 53.88118362]
[164.77232361 68.96076965]
[176.99423218 60.26449585]
[189.21612549 51.56822586]
[195.97470093 37.26325226]
[210.83050537 36.18889618]
[223.05241394 27.49262428]
[235.27430725 18.79635048]
[247.49621582 10.10007668]
[259.71810913 1.40380311]
[264.87774658 -6.09967327]
[272.14538574 -7.32334328]
[284.47390747 -15.86778927]
[294.04794312 -29.85972595]
[310.14340210 -24.53320503]
[309.48074341 -7.59221315]
[293.01834106 -3.53926778]
[280.68981934 5.00517797]
[268.41436768 13.62570286]
[256.19247437 22.32197571]
[243.97058105 31.01824951]
[231.74868774 39.71452332]
[219.52677917 48.41079712]
[213.64239502 62.09375381]
[197.91239929 63.79012299]
[185.69050598 72.48639679]
[173.46859741 81.18267059]
[175.16978455 88.48719025]
[188.01242065 80.73691559]
[199.35194397 90.55603790]
[193.51748657 104.37483215]
[178.57217407 103.09622192]
[180.27336121 110.40073395]
[195.07987976 112.80220795]
[209.88639832 115.20368195]
[224.69291687 117.60515594]
[239.49942017 120.00662994]
[254.36032104 114.57851410]
[265.68469238 124.25362396]
[280.49121094 126.65509796]
[295.29772949 129.05657959]
[310.10424805 131.45805359]
[321.82507324 121.10642242]
[337.45886230 120.76230621]
[349.62384033 130.58818054]
[352.57601929 145.94456482]
[344.92153931 159.58064270]
[330.27456665 165.05787659]
[315.55096436 159.79008484]
[307.70275879 146.26455688]
[292.89624023 143.86308289]
[278.08975220 141.46160889]
[263.28323364 139.06013489]
[249.48138428 144.66001892]
[237.09794617 134.81314087]
[222.29144287 132.41166687]
[207.48492432 130.01019287]
[192.67840576 127.60872650]
[177.87188721 125.20725250]
[174.51664734 131.91488647]
[182.77938843 144.43395996]
[167.80615234 145.33015442]
[164.45091248 152.03778076]
[175.25245667 162.44578552]
[186.05400085 172.85379028]
[196.85554504 183.26179504]
[207.65710449 193.66981506]
[223.45202637 193.12605286]
[234.94804382 203.97119141]
[235.32476807 219.77099609]
[224.35870361 231.15171814]
[208.55580139 231.36137390]
[197.29165649 220.27558899]
[197.24908447 204.47135925]
[186.44754028 194.06335449]
[175.64599609 183.65533447]
[164.84445190 173.24732971]
[154.04290771 162.83932495]
[146.97257996 165.34141541]
[156.10139465 177.24371338]
[147.60244751 189.60365295]
[133.22119141 185.33992004]
[132.83192444 170.34561157]
[125.76159668 172.84770203]
[123.91105652 187.73312378]
[122.06050873 202.61853027]
[120.20996094 217.50393677]
[131.37017822 228.12258911]
[134.10588074 243.10156250]
[127.57411194 256.65884399]
[114.46861267 263.68621826]
[112.61807251 278.57162476]
[110.76752472 293.45703125]
[108.91697693 308.34243774]
[107.06643677 323.22787476]
[105.21588898 338.11328125]
[104.01126099 353.06481934]
[103.45481110 368.05450439]
[102.89835358 383.04418945]
[115.94799805 391.14370728]
[123.18540955 404.69049072]
[122.66374969 420.04052734]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 250]
[8 249]
[9 248]
[17 247]
[18 246]
[19 245]
[20 244]
[21 243]
[22 242]
[26 238]
[27 237]
[28 236]
[29 235]
[32 147]
[33 146]
[34 145]
[35 144]
[42 76]
[43 75]
[44 74]
[46 72]
[47 71]
[48 65]
[49 64]
[50 63]
[51 62]
[52 61]
[53 60]
[80 136]
[82 134]
[83 133]
[84 132]
[85 131]
[87 128]
[88 127]
[89 126]
[90 125]
[95 121]
[96 120]
[98 119]
[99 118]
[100 117]
[101 116]
[102 115]
[103 114]
[104 113]
[105 112]
[153 178]
[154 177]
[155 176]
[157 174]
[158 173]
[159 172]
[160 171]
[161 170]
[163 169]
[164 168]
[184 210]
[185 209]
[186 208]
[187 207]
[188 206]
[190 204]
[191 203]
[192 202]
[193 201]
[214 229]
[215 228]
[216 227]
[217 226]
[218 225]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
