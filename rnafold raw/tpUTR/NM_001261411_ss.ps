%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 14:41:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGGGGCCAGCGGAGGCAGAGCCGGGAGGCUGCGUGGGCUUCUGGGCAGGCUCACGCAGACGCCGGCCACACCAUCCACCUGGCCGCCUCCAUGGACCCUUGGUGGCUUUUGUAAAUUAAUUUUUGAUGACAUUUUGAGUUUUAAGAUUUCUGACCAGCAGUCUCUUACCUGUAUAUUUGUAAAUAUAUCAUGUUUCUGUGAAAAUGUAUUAUGAAAUAAAAUGGGAGGAAACACCUUUUCUAGCUAGA\
) } def
/len { sequence length } bind def

/coor [
[59.95031738 183.12936401]
[66.59949493 169.52542114]
[77.30735779 158.81933594]
[90.91239929 152.17240906]
[89.03984833 137.28974915]
[75.97194672 129.92564392]
[62.27131653 136.03240967]
[48.57067871 142.13917542]
[34.87004471 148.24594116]
[21.16940880 154.35270691]
[7.46877384 160.45947266]
[-3.01578546 175.61189270]
[-20.39148712 173.07456970]
[-34.01461792 179.35234070]
[-47.63774872 185.63009644]
[-61.22132492 191.99299622]
[-74.76481628 198.44078064]
[-76.07833099 213.67961121]
[-84.78563690 226.13270569]
[-98.46620178 232.51303101]
[-113.40361023 231.19779968]
[-125.59498596 222.63998413]
[-139.13847351 229.08776855]
[-152.68196106 235.53555298]
[-166.22546387 241.98332214]
[-179.76895142 248.43110657]
[-181.27128601 262.11795044]
[-189.27136230 273.19125366]
[-201.59689331 278.82662964]
[-214.99003601 277.65188599]
[-225.96827698 270.07968140]
[-239.59140015 276.35745239]
[-253.21452332 282.63522339]
[-266.83764648 288.91299438]
[-280.46078491 295.19076538]
[-294.08392334 301.46850586]
[-307.70706177 307.74627686]
[-321.33016968 314.02404785]
[-334.95330811 320.30181885]
[-348.57644653 326.57958984]
[-362.19955444 332.85733032]
[-375.82269287 339.13510132]
[-381.05932617 354.04663086]
[-395.34219360 360.81237793]
[-410.19750977 355.41836548]
[-416.81188965 341.06478882]
[-411.26113892 326.26733398]
[-396.83840942 319.80508423]
[-382.10046387 325.51196289]
[-368.47732544 319.23422241]
[-354.85421753 312.95645142]
[-341.23107910 306.67868042]
[-327.60794067 300.40090942]
[-313.98480225 294.12313843]
[-300.36169434 287.84539795]
[-286.73855591 281.56762695]
[-273.11541748 275.28985596]
[-259.49230957 269.01208496]
[-245.86917114 262.73431396]
[-232.24603271 256.45657349]
[-229.55082703 240.25155640]
[-217.60139465 228.73759460]
[-200.97752380 226.60313416]
[-186.21672058 234.88761902]
[-172.67323303 228.43983459]
[-159.12974548 221.99205017]
[-145.58625793 215.54428101]
[-132.04277039 209.09649658]
[-130.99945068 194.23793030]
[-122.60301208 181.81393433]
[-109.02546692 175.21720886]
[-93.86948395 176.30949402]
[-81.21259308 184.89729309]
[-67.66910553 178.44950867]
[-62.99294662 172.75149536]
[-53.91551208 172.00697327]
[-40.29238129 165.72920227]
[-26.66925240 159.45144653]
[-22.19813728 148.22901917]
[-10.92149448 142.88053894]
[1.36200750 146.75883484]
[15.06264305 140.65206909]
[28.76327896 134.54530334]
[42.46391296 128.43853760]
[56.16454697 122.33177185]
[69.86518097 116.22500610]
[36.81603622 66.64150238]
[27.14229774 55.17770004]
[17.46856117 43.71389771]
[2.65535188 38.15697098]
[0.36059302 23.44020081]
[-9.31314373 11.97639656]
[-18.98688126 0.51259249]
[-34.45273590 1.77232718]
[-47.68778610 -6.32786274]
[-53.60288239 -20.67328835]
[-49.92355347 -35.74784088]
[-38.06457138 -45.75504684]
[-22.58596039 -46.84693527]
[-9.43956089 -38.60364532]
[-3.68043232 -24.19489670]
[-7.52307653 -9.16114426]
[2.15066051 2.30265999]
[11.82439709 13.76646423]
[25.94567680 18.50342178]
[28.93236542 34.04016113]
[38.60610199 45.50396347]
[48.27983856 56.96776962]
[55.68823624 55.79914856]
[52.69477081 41.10087585]
[49.70130920 26.40260315]
[46.70784760 11.70433235]
[43.71438599 -2.99393916]
[40.72092438 -17.69221115]
[37.72746277 -32.39048386]
[34.73399734 -47.08875275]
[25.99297333 -59.27868652]
[28.86235809 -74.00168610]
[41.54122543 -82.01706696]
[56.07186508 -78.29409027]
[63.33432770 -65.16943359]
[58.77016830 -50.88029099]
[60.44657516 -35.97426224]
[62.12298203 -21.06823540]
[63.79939270 -6.16220808]
[65.47579956 8.74381924]
[67.15220642 23.64984703]
[68.82861328 38.55587387]
[70.50502777 53.46190262]
[77.91342163 52.29327774]
[83.58856201 38.40829849]
[81.64760590 22.70660019]
[93.62503052 13.85275650]
[99.30017853 -0.03222658]
[104.97531891 -13.91720963]
[110.65046692 -27.80219269]
[116.32560730 -41.68717575]
[122.00075531 -55.57215881]
[127.67589569 -69.45713806]
[128.07162476 -86.40647125]
[144.46812439 -90.71823883]
[153.15039062 -76.15614319]
[141.56088257 -63.78199768]
[135.88572693 -49.89701462]
[130.21058655 -36.01203156]
[124.53544617 -22.12704849]
[118.86030579 -8.24206543]
[113.18515778 5.64291668]
[107.51001740 19.52789879]
[109.85689545 34.23645020]
[97.47354889 44.08343887]
[91.79840088 57.96842194]
[97.93155670 62.28518677]
[116.33101654 75.23547363]
[127.48655701 65.20781708]
[138.64210510 55.18016434]
[140.92750549 39.30072784]
[154.83978271 31.31148720]
[169.70663452 37.34110641]
[174.12347412 52.76417160]
[164.70208740 65.74943542]
[148.66975403 66.33570862]
[137.51420593 76.36336517]
[126.35866547 86.39101410]
[129.98344421 100.94646454]
[144.53889465 104.57124329]
[159.09434509 108.19602203]
[173.64978027 111.82080078]
[182.70666504 110.85800171]
[188.36415100 115.58310699]
[202.87309265 119.38977814]
[217.38201904 123.19644928]
[231.89096069 127.00312042]
[246.39990234 130.80979919]
[264.05859375 125.54752350]
[276.02706909 138.39698792]
[290.58251953 142.02177429]
[305.13796997 145.64654541]
[319.69338989 149.27133179]
[334.24884033 152.89611816]
[346.13092041 143.09188843]
[361.33001709 142.17485046]
[374.00476074 150.28747559]
[379.40740967 164.14205933]
[393.96282959 167.76684570]
[408.51828003 171.39161682]
[423.07373047 175.01640320]
[437.62918091 178.64117432]
[452.18463135 182.26596069]
[466.80554199 185.61685181]
[481.48681641 188.69265747]
[496.16806030 191.76847839]
[510.84933472 194.84428406]
[523.93994141 185.98927307]
[539.44177246 189.06628418]
[548.15789795 202.24978638]
[544.91717529 217.71824646]
[531.64227295 226.29449463]
[516.20892334 222.89039612]
[507.77349854 209.52554321]
[493.09225464 206.44973755]
[478.41098022 203.37391663]
[463.72973633 200.29811096]
[460.61083984 201.88983154]
[456.57159424 202.06507874]
[452.27926636 200.41001892]
[448.55984497 196.82141113]
[434.00439453 193.19662476]
[419.44894409 189.57183838]
[404.89349365 185.94706726]
[390.33807373 182.32228088]
[375.78262329 178.69750977]
[364.51342773 188.40026855]
[349.51431274 189.62120056]
[336.52041626 181.68318176]
[330.62405396 167.45155334]
[316.06863403 163.82678223]
[301.51318359 160.20199585]
[286.95773315 156.57720947]
[272.40228271 152.95243835]
[261.89355469 158.91061401]
[249.75007629 156.02877808]
[242.59323120 145.31872559]
[228.08428955 141.51205444]
[213.57534790 137.70538330]
[199.06642151 133.89871216]
[184.55747986 130.09204102]
[170.02500916 126.37624359]
[155.46955872 122.75146484]
[140.91410828 119.12668610]
[126.35866547 115.50190735]
[120.74962616 120.48072815]
[130.70710754 131.69895935]
[119.48871613 141.65626526]
[109.53154755 130.43836975]
[103.92250824 135.41719055]
[105.79505920 150.29985046]
[120.62262726 153.36936951]
[133.64884949 161.08921814]
[143.46075439 172.62200928]
[148.99400330 186.71676636]
[149.64840698 201.84455872]
[145.35296631 216.36448669]
[136.57360840 228.70149231]
[124.26268768 237.51736450]
[109.75556946 241.85583496]
[94.62589264 241.24629211]
[80.51480103 235.75485229]
[68.95297241 225.97718811]
[61.19453812 212.97389221]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 237]
[5 236]
[6 86]
[7 85]
[8 84]
[9 83]
[10 82]
[11 81]
[13 78]
[14 77]
[15 76]
[16 74]
[17 73]
[22 68]
[23 67]
[24 66]
[25 65]
[26 64]
[31 60]
[32 59]
[33 58]
[34 57]
[35 56]
[36 55]
[37 54]
[38 53]
[39 52]
[40 51]
[41 50]
[42 49]
[87 108]
[88 107]
[89 106]
[91 104]
[92 103]
[93 102]
[130 152]
[131 151]
[133 149]
[134 148]
[135 147]
[136 146]
[137 145]
[138 144]
[139 143]
[154 164]
[155 163]
[156 162]
[165 231]
[166 230]
[167 229]
[168 228]
[170 227]
[171 226]
[172 225]
[173 224]
[174 223]
[176 220]
[177 219]
[178 218]
[179 217]
[180 216]
[184 212]
[185 211]
[186 210]
[187 209]
[188 208]
[189 207]
[190 203]
[191 202]
[192 201]
[193 200]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
