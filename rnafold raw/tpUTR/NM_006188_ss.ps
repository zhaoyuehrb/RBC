%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 21:24:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGCCCCAGUCUCUGGAGAAAAGAGAGAAAGGGAUAAUCACCUGGAAGGAUUCCAAAGCCCUGGGAAUGGGGAACCCCACAUCCCAUCCCUACCUAAUUUGUUAAUUUUCCCUGAAAACCUUCUGCAGUUUGCUCAUUGUUUUAGCGAGGUCACGAGAGAGUCACUCAUGACUUUCUUGGUGGUGGGUAUAUGCCCUGACAACUUCUGUAAGCCCCCCUUCCCCCAACAGGCAAUGCCUCUAAAAAUCACCCAAU\
AA\
) } def
/len { sequence length } bind def

/coor [
[-33.50957108 597.97753906]
[-34.06871414 582.98797607]
[-34.62785339 567.99841309]
[-35.18699646 553.00885010]
[-42.67310333 553.46520996]
[-49.36879349 566.88781738]
[-56.06448364 580.31048584]
[-51.28516006 595.13598633]
[-58.26675415 608.65313721]
[-72.43006897 613.11810303]
[-79.12575531 626.54077148]
[-85.82144928 639.96343994]
[-92.51714325 653.38604736]
[-99.21282959 666.80871582]
[-91.23417664 680.01269531]
[-91.68354034 695.43353271]
[-100.41754150 708.15045166]
[-114.64918518 714.10559082]
[-129.83721924 711.39868164]
[-141.13517761 700.89343262]
[-144.93792725 685.94213867]
[-140.03204346 671.31555176]
[-127.98295593 661.68109131]
[-112.63549042 660.11303711]
[-105.93979645 646.69036865]
[-99.24410248 633.26770020]
[-92.54841614 619.84509277]
[-85.85272217 606.42242432]
[-90.80483246 592.42199707]
[-84.20566559 578.71411133]
[-69.48714447 573.61480713]
[-62.79145050 560.19213867]
[-56.09575653 546.76947021]
[-68.03080750 538.77789307]
[-77.59623718 528.25372314]
[-84.28015137 515.86151123]
[-87.74957275 502.36227417]
[-87.86652374 488.56668091]
[-84.69229889 475.28649902]
[-78.47985840 463.28689575]
[-69.65510559 453.24218750]
[-58.78828049 445.69824219]
[-46.55745316 441.04275513]
[-33.70635605 439.48593140]
[-32.24745941 424.55703735]
[-30.78856468 409.62817383]
[-29.32966995 394.69927979]
[-27.87077332 379.77038574]
[-26.41187668 364.84149170]
[-34.84946823 377.24340820]
[-37.16061783 392.06427002]
[-45.97204971 404.20343018]
[-59.34738541 410.99316406]
[-74.34729767 410.94137573]
[-87.67543793 404.05947876]
[-96.40286255 391.85980225]
[-98.61164856 377.02331543]
[-93.81639862 362.81045532]
[-83.07090759 352.34457397]
[-68.73657227 347.92565918]
[-53.96568298 350.52383423]
[-39.50370407 346.54248047]
[-54.10404205 343.10299683]
[-68.70438385 339.66351318]
[-83.30472565 336.22402954]
[-97.90505981 332.78454590]
[-115.42753601 338.48956299]
[-127.71439362 325.94201660]
[-142.35552979 322.68057251]
[-156.99667358 319.41909790]
[-171.63780212 316.15765381]
[-187.11224365 321.58663940]
[-199.37307739 310.69607544]
[-195.80740356 294.68927002]
[-180.08329773 290.03262329]
[-168.37635803 301.51651001]
[-153.73521423 304.77795410]
[-139.09408569 308.03942871]
[-124.45294189 311.30087280]
[-114.09805298 305.08367920]
[-101.88848877 307.65975952]
[-94.46557617 318.18420410]
[-79.86523438 321.62368774]
[-65.26489258 325.06317139]
[-50.66455460 328.50265503]
[-36.06421661 331.94213867]
[-32.99479294 317.31182861]
[-24.84957504 305.26327515]
[-13.09033203 297.41415405]
[0.36702818 294.67672729]
[13.46160984 297.15908813]
[20.96161079 284.16870117]
[28.46161079 271.17831421]
[24.37054443 256.90252686]
[31.79155731 243.62158203]
[46.79307938 239.42729187]
[54.29307938 226.43690491]
[53.95601654 211.54611206]
[67.55680084 203.46347046]
[75.05680084 190.47308350]
[82.55680084 177.48269653]
[90.05680084 164.49232483]
[97.55680084 151.50193787]
[105.05680084 138.51156616]
[75.89154053 126.48693085]
[67.23240662 98.79987335]
[81.62950134 76.58253479]
[81.44685364 61.58364868]
[81.26420593 46.58476257]
[81.08155823 31.58587456]
[73.17679596 17.88093758]
[80.75855255 5.06039619]
[80.57590485 -9.93849182]
[80.39325714 -24.93737984]
[80.21060944 -39.93626785]
[80.02796936 -54.93515396]
[79.84532166 -69.93404388]
[66.48617554 -74.82778168]
[55.61950684 -83.96467590]
[48.53498459 -96.23374939]
[46.06431961 -110.15395355]
[48.48367310 -124.05287170]
[55.48294449 -136.26771545]
[66.20536041 -145.34419250]
[79.35229492 -150.20971680]
[79.35229492 -165.20971680]
[79.35229492 -180.20971680]
[73.30595398 -196.04884338]
[86.85229492 -206.24360657]
[100.39863586 -196.04884338]
[94.35229492 -180.20971680]
[94.35229492 -165.20971680]
[94.35229492 -150.20971680]
[109.09584808 -144.36299133]
[120.49034882 -133.27482605]
[126.76699066 -118.62511444]
[126.93559265 -102.64972687]
[120.94065094 -87.79926300]
[109.67440796 -76.36314392]
[94.84420776 -70.11669159]
[95.02685547 -55.11780167]
[95.20950317 -40.11891556]
[95.39214325 -25.12002563]
[95.57479095 -10.12113762]
[95.75743866 4.87774992]
[103.64913940 17.50986671]
[96.08044434 31.40322685]
[96.26309204 46.40211487]
[96.44573975 61.40100479]
[96.62838745 76.39989471]
[110.09156036 83.01374054]
[122.07475281 73.99137878]
[134.05795288 64.96900940]
[146.04115295 55.94665146]
[157.96919250 46.85149765]
[169.84164429 37.68389130]
[181.71408081 28.51628685]
[193.58653259 19.34868050]
[205.45898438 10.18107510]
[217.33142090 1.01346970]
[229.20387268 -8.15413570]
[241.07632446 -17.32174110]
[252.94876099 -26.48934746]
[264.82122803 -35.65695190]
[270.54684448 -51.02410507]
[286.76074219 -53.48196793]
[296.78347778 -40.50209808]
[290.30450439 -25.43707848]
[273.98883057 -23.78450584]
[262.11636353 -14.61690044]
[250.24392700 -5.44929457]
[238.37147522 3.71831131]
[226.49903870 12.88591671]
[214.62658691 22.05352211]
[202.75413513 31.22112846]
[190.88168335 40.38873291]
[179.00924683 49.55633926]
[167.13679504 58.72394562]
[163.77343750 65.27989197]
[155.06350708 67.92984772]
[143.08030701 76.95220947]
[131.09712219 85.97457123]
[119.11392212 94.99693298]
[121.75045776 102.01823425]
[129.66004944 123.08214569]
[144.62004089 121.98721313]
[159.58001709 120.89228821]
[174.54000854 119.79735565]
[187.79425049 110.14039612]
[202.67279053 117.03685760]
[203.86985779 133.39225769]
[190.15400696 142.38156128]
[175.63493347 134.75733948]
[160.67495728 135.85226440]
[145.71496582 136.94720459]
[130.75498962 138.04212952]
[118.04718018 146.01156616]
[110.54718018 159.00193787]
[103.04718018 171.99232483]
[95.54718018 184.98269653]
[88.04718018 197.97308350]
[80.54718018 210.96347046]
[80.34779358 226.78341675]
[67.28346252 233.93690491]
[59.78346252 246.92729187]
[63.65185928 262.01614380]
[55.86074066 275.08337402]
[41.45199203 278.67831421]
[33.95199203 291.66870117]
[26.45199203 304.65908813]
[35.04471970 315.25314331]
[38.93734741 328.63772583]
[37.29836273 342.78063965]
[30.15504265 355.44036865]
[18.42472839 364.52120972]
[3.80234551 368.41897583]
[-11.48299122 366.30038452]
[-12.94188786 381.22927856]
[-14.40078354 396.15817261]
[-15.85967922 411.08706665]
[-17.31857491 426.01593018]
[-18.77747154 440.94482422]
[-1.95574868 447.20840454]
[12.08612347 458.87796021]
[21.63929749 474.79739380]
[25.45551491 493.28137207]
[22.90684128 512.29309082]
[14.07840729 529.66864014]
[-0.21871918 543.36328125]
[8.05779648 555.87322998]
[16.33431244 568.38323975]
[24.61082840 580.89318848]
[38.39298630 590.76684570]
[32.72050476 606.74365234]
[15.79775047 605.71569824]
[12.10086155 589.16967773]
[3.82434583 576.65972900]
[-4.45217037 564.14978027]
[-12.72868633 551.63983154]
[-20.21479034 552.09613037]
[-18.94906235 567.04266357]
[-17.68333244 581.98913574]
[-16.41760445 596.93566895]
[-15.15187645 611.88214111]
[-13.88614845 626.82867432]
[-12.62041950 641.77514648]
[-11.35469151 656.72167969]
[-10.08896255 671.66815186]
[-8.82323456 686.61468506]
[-5.95776367 701.33843994]
[-18.09347534 710.15460205]
[-31.21036911 702.87811279]
[-30.15471458 687.91503906]
[-30.71385765 672.92541504]
[-31.27300072 657.93585205]
[-31.83214378 642.94628906]
[-32.39128494 627.95672607]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 33]
[6 32]
[7 31]
[10 28]
[11 27]
[12 26]
[13 25]
[14 24]
[44 222]
[45 221]
[46 220]
[47 219]
[48 218]
[49 217]
[62 86]
[63 85]
[64 84]
[65 83]
[66 82]
[68 79]
[69 78]
[70 77]
[71 76]
[91 210]
[92 209]
[93 208]
[96 205]
[97 204]
[99 202]
[100 201]
[101 200]
[102 199]
[103 198]
[104 197]
[107 150]
[108 149]
[109 148]
[110 147]
[112 145]
[113 144]
[114 143]
[115 142]
[116 141]
[117 140]
[125 133]
[126 132]
[127 131]
[151 183]
[152 182]
[153 181]
[154 180]
[155 178]
[156 177]
[157 176]
[158 175]
[159 174]
[160 173]
[161 172]
[162 171]
[163 170]
[164 169]
[185 196]
[186 195]
[187 194]
[188 193]
[229 239]
[230 238]
[231 237]
[232 236]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
