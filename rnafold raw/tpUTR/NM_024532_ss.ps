%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 12:42:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGUCAGCACAUCCCGCUGCAGAGGGCAUUCCCUUUAAGGCUUGAAAAUGCCUCCUGUAGUCCCAAACCAGCAAAGAACUGGUUAAAUGUGCCAGCAGGUAACAUUUACAGUCUGCUUUAAAACAUGCUUUGGACAUAUAUUUUAGUGCUCAUACUGUUACUAAUAAAAAAAUAACUUUAUGCUCA\
) } def
/len { sequence length } bind def

/coor [
[110.11670685 245.57272339]
[108.78864288 230.63163757]
[115.00778198 216.98164368]
[127.15362549 208.17945862]
[142.06138611 206.51861572]
[155.84764099 212.43266296]
[148.38404846 199.42132568]
[140.92045593 186.41000366]
[133.45684814 173.39866638]
[125.99325562 160.38734436]
[109.31609344 165.08064270]
[91.99199677 165.25451660]
[75.22399902 160.89688110]
[60.17653656 152.31033325]
[47.89455795 140.09118652]
[39.23097229 125.08795166]
[24.80358887 129.19290161]
[10.37620354 133.29783630]
[-4.05118132 137.40278625]
[-18.47856522 141.50773621]
[-32.90594864 145.61267090]
[-47.33333588 149.71762085]
[-58.48928070 160.93614197]
[-72.84811401 156.97720337]
[-87.27549744 161.08213806]
[-101.70288086 165.18708801]
[-116.13026428 169.29203796]
[-130.55764771 173.39697266]
[-144.98503113 177.50192261]
[-159.41241455 181.60687256]
[-167.13911438 195.13224792]
[-181.82901001 199.08972168]
[-194.67578125 191.64015198]
[-198.34414673 206.55453491]
[-208.98982239 217.62545776]
[-223.74914551 221.87489319]
[-238.65196228 218.15979004]
[-249.68945312 207.47946167]
[-253.89260864 192.70689392]
[-250.13081360 177.81581116]
[-239.41593933 166.81184387]
[-224.63026428 162.65499878]
[-209.75103760 166.46347046]
[-198.78071594 177.21276855]
[-191.77986145 164.11607361]
[-177.20692444 159.74754333]
[-163.51736450 167.17948914]
[-149.08998108 163.07453918]
[-134.66259766 158.96958923]
[-120.23520660 154.86465454]
[-105.80782318 150.75970459]
[-91.38043976 146.65475464]
[-76.95305634 142.54981995]
[-66.82905579 131.62489319]
[-51.43827820 135.29023743]
[-37.01089478 131.18528748]
[-22.58351135 127.08034515]
[-8.15612602 122.97540283]
[6.27125835 118.87045288]
[20.69864273 114.76551056]
[35.12602615 110.66056824]
[33.70774460 98.11536407]
[34.71412659 85.42035675]
[38.14989853 73.04384613]
[43.92942047 61.45031357]
[51.87836456 51.08296204]
[61.73873520 42.34685516]
[53.00370407 30.15262604]
[44.26866913 17.95839691]
[35.53363800 5.76416731]
[26.79860687 -6.43006182]
[11.19400883 -7.44520569]
[-0.07149330 -18.29059410]
[-1.67867362 -33.84536743]
[7.13132954 -46.76503754]
[22.19870186 -50.94932938]
[36.40909195 -44.42255020]
[43.05278778 -30.26644516]
[38.99283600 -15.16509342]
[47.72786713 -2.97086430]
[56.46289825 9.22336483]
[65.19792938 21.41759300]
[73.93296051 33.61182404]
[88.39431763 29.62821198]
[89.65283203 14.68109989]
[90.91135406 -0.26601142]
[92.16986847 -15.21312237]
[93.42838287 -30.16023445]
[94.68689728 -45.10734558]
[95.94541168 -60.05445862]
[97.07833099 -75.01161194]
[98.08557129 -89.97775269]
[99.09281158 -104.94390106]
[91.38363647 -119.41803741]
[100.29240417 -133.18632507]
[116.65453339 -132.08514404]
[123.63807678 -117.24727631]
[114.05895233 -103.93666077]
[113.05171204 -88.97052002]
[112.04447937 -74.00437164]
[114.73789215 -67.10507965]
[110.89252472 -58.79594040]
[109.63401031 -43.84883118]
[108.37549591 -28.90171814]
[107.11698151 -13.95460701]
[105.85845947 0.99250442]
[104.59994507 15.93961620]
[103.34143066 30.88672638]
[121.69457245 35.50710297]
[137.80892944 44.81579208]
[150.54013062 57.95270920]
[163.09037781 49.73738480]
[175.64060974 41.52206421]
[188.19084167 33.30673981]
[200.53010559 24.77779579]
[212.65052795 15.94064140]
[210.93966675 0.67733508]
[217.10437012 -13.39007378]
[229.48635864 -22.47752190]
[244.75495911 -24.14053345]
[258.80297852 -17.93176460]
[267.85156250 -5.52134371]
[269.46670532 9.75238800]
[263.21392822 23.78087425]
[250.77520752 32.79052353]
[235.49649048 34.35778046]
[221.48767090 28.06106758]
[209.36724854 36.89822006]
[208.46688843 40.32764053]
[205.84846497 43.48646927]
[201.65972900 45.56642532]
[196.40617371 45.85697937]
[183.85592651 54.07229996]
[171.30569458 62.28762436]
[158.75546265 70.50294495]
[162.02613831 78.20462799]
[164.29209900 86.25935364]
[165.51664734 94.53665161]
[165.67994690 102.90245056]
[164.77934265 111.22122955]
[162.82943726 119.35824585]
[159.86180115 127.18169403]
[155.92451477 134.56484985]
[151.08134460 141.38812256]
[145.41075134 147.54096985]
[139.00457764 152.92373657]
[146.46818542 165.93507385]
[153.93177795 178.94639587]
[161.39537048 191.95773315]
[168.85897827 204.96905518]
[177.38792419 217.30830383]
[186.92207336 228.88845825]
[196.45622253 240.46862793]
[205.99037170 252.04878235]
[221.47740173 253.71897888]
[230.98141479 265.59872437]
[229.29370117 280.35293579]
[238.82785034 291.93310547]
[248.36199951 303.51324463]
[257.89614868 315.09341431]
[272.70947266 311.41531372]
[287.64990234 314.53710938]
[299.75106812 323.83901978]
[306.61019897 337.47406006]
[306.86547852 352.73504639]
[300.46618652 366.59188843]
[288.68289185 376.29327393]
[273.85519409 379.91299438]
[258.92715454 376.73239136]
[246.86274719 367.38290405]
[240.05734253 353.72094727]
[239.86216736 338.45907593]
[246.31599426 324.62756348]
[236.78184509 313.04739380]
[227.24769592 301.46725464]
[217.71354675 289.88708496]
[202.90977478 288.71060181]
[193.07583618 277.10250854]
[194.41021729 261.58291626]
[184.87606812 250.00277710]
[175.34191895 238.42262268]
[165.80776978 226.84246826]
[166.46846008 241.82789612]
[159.64700317 255.18708801]
[147.12084961 263.43908691]
[132.15386963 264.43371582]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 150]
[7 149]
[8 148]
[9 147]
[10 146]
[16 61]
[17 60]
[18 59]
[19 58]
[20 57]
[21 56]
[22 55]
[24 53]
[25 52]
[26 51]
[27 50]
[28 49]
[29 48]
[30 47]
[33 44]
[67 83]
[68 82]
[69 81]
[70 80]
[71 79]
[84 108]
[85 107]
[86 106]
[87 105]
[88 104]
[89 103]
[90 102]
[91 100]
[92 99]
[93 98]
[111 135]
[112 134]
[113 133]
[114 132]
[115 128]
[116 127]
[151 182]
[152 181]
[153 180]
[154 179]
[157 176]
[158 175]
[159 174]
[160 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
