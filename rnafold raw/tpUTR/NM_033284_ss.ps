%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 10:37:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUAAACACAAAAUAUAGAAAAAAAGAAAAGAAUUCUAAUGACCUGCCUUGAAUGCAUGGGGUUGCAGCUCUGUUCAAACACAAUUCUAUCAGCUCCAAAAUGUGUGAACUUGACUUGUGUUAGAGUAUAUUCUGAAACCAACUUGUCCCAGGCCACAGGAGUGUAUAUGUUUCAUAAUCUUUAUCAAGA\
) } def
/len { sequence length } bind def

/coor [
[109.33084106 252.63552856]
[119.90184021 241.88763428]
[132.73817444 233.98245239]
[128.14962769 219.70150757]
[123.56108856 205.42057800]
[112.30137634 195.67027283]
[115.44625854 180.16477966]
[110.85771179 165.88385010]
[106.26917267 151.60290527]
[101.68062592 137.32196045]
[94.68318176 134.62275696]
[91.86335754 149.35531616]
[89.04354095 164.08789062]
[86.22371674 178.82046509]
[89.45178986 193.46899414]
[83.62343597 207.29035950]
[70.88097382 215.20425415]
[55.90814972 214.30177307]
[44.20850372 204.91464233]
[40.08247375 190.49327087]
[45.04665756 176.33851624]
[57.27496719 167.65370178]
[65.07940674 154.84390259]
[72.88384247 142.03411865]
[80.68828583 129.22431946]
[73.69084167 126.52511597]
[60.70045853 134.02511597]
[47.71007919 141.52511597]
[34.71969604 149.02511597]
[29.19528389 164.08700562]
[13.93007469 169.02186584]
[0.63423139 160.04411316]
[-0.49281234 144.04069519]
[11.41351509 133.28807068]
[27.21969795 136.03472900]
[40.21007919 128.53472900]
[53.20045853 121.03472900]
[66.19084167 113.53472900]
[65.60690308 102.45594025]
[68.37535858 92.32073212]
[73.87064362 84.06193542]
[81.23451233 78.32507324]
[89.48956299 75.42030334]
[97.65846252 75.31525421]
[100.82513428 60.65332413]
[103.99180603 45.99139404]
[107.15848541 31.32946396]
[100.12052917 12.45074654]
[113.68090820 -1.32035899]
[116.36616516 -16.07804871]
[119.05141449 -30.83573914]
[121.73667145 -45.59342957]
[112.84253693 -55.72105026]
[111.43105316 -68.92981720]
[117.79512024 -80.36781311]
[129.41247559 -85.96312714]
[132.33882141 -100.67490387]
[135.26518250 -115.38668060]
[130.36883545 -130.43116760]
[140.44042969 -141.40440369]
[134.11441040 -158.68992615]
[146.17321777 -171.43008423]
[148.85847473 -186.18777466]
[151.54371643 -200.94546509]
[154.22897339 -215.70315552]
[149.08712769 -230.66551208]
[158.97782898 -241.80207825]
[161.66308594 -256.55978394]
[164.34834290 -271.31747437]
[152.50286865 -283.38067627]
[150.19865417 -299.96194458]
[158.14682007 -314.50637817]
[173.04470825 -321.38302612]
[175.48814392 -336.18267822]
[177.93157959 -350.98233032]
[180.37501526 -365.78198242]
[182.81843567 -380.58163452]
[177.43246460 -395.45785522]
[187.13964844 -406.75476074]
[189.58306885 -421.55441284]
[192.02650452 -436.35406494]
[194.46994019 -451.15371704]
[196.91337585 -465.95336914]
[199.35679626 -480.75302124]
[201.80023193 -495.55267334]
[196.41426086 -510.42889404]
[206.12142944 -521.72576904]
[208.56486511 -536.52545166]
[196.94964600 -551.47625732]
[199.88404846 -569.85699463]
[215.04823303 -580.09112549]
[217.00611877 -594.96282959]
[218.96401978 -609.83447266]
[220.80017090 -624.72167969]
[222.51448059 -639.62341309]
[210.99487305 -650.01947021]
[207.81893921 -665.20806885]
[214.20785522 -679.34881592]
[227.70498657 -687.00433350]
[243.12039185 -685.23095703]
[254.52653503 -674.71051025]
[257.53753662 -659.48840332]
[250.99557495 -645.41778564]
[237.41619873 -637.90911865]
[235.70188904 -623.00738525]
[238.06457520 -615.99176025]
[233.83569336 -607.87658691]
[231.87779236 -593.00494385]
[229.91990662 -578.13323975]
[238.67475891 -570.78833008]
[242.83305359 -560.01525879]
[241.25099182 -548.45526123]
[234.20777893 -539.00305176]
[223.36451721 -534.08203125]
[220.92108154 -519.28234863]
[226.48182678 -505.46472168]
[216.59988403 -493.10922241]
[214.15644836 -478.30957031]
[211.71301270 -463.50991821]
[209.26959229 -448.71029663]
[206.82615662 -433.91064453]
[204.38272095 -419.11099243]
[201.93928528 -404.31134033]
[207.50003052 -390.49368286]
[197.61808777 -378.13821411]
[195.17465210 -363.33856201]
[192.73123169 -348.53890991]
[190.28779602 -333.73925781]
[187.84436035 -318.93960571]
[198.06962585 -310.34170532]
[202.74490356 -297.71133423]
[200.54718018 -284.31417847]
[191.94554138 -273.67095947]
[179.10603333 -268.63220215]
[176.42077637 -253.87451172]
[173.73551941 -239.11682129]
[179.06944275 -225.21003723]
[168.98666382 -213.01791382]
[166.30140686 -198.26022339]
[163.61616516 -183.50253296]
[160.93090820 -168.74484253]
[167.55805969 -158.61312866]
[165.43048096 -146.28776550]
[155.15220642 -138.47805786]
[160.25787354 -124.48586273]
[149.97695923 -112.46032715]
[147.05061340 -97.74855042]
[144.12425232 -83.03676605]
[154.05628967 -69.47396088]
[151.05462646 -52.59057999]
[136.49435425 -42.90817642]
[133.80909729 -28.15048599]
[131.12385559 -13.39279652]
[128.43859863 1.36489403]
[134.99650574 9.22676468]
[136.16029358 19.61950111]
[131.30416870 29.12877655]
[121.82041168 34.49613571]
[118.65373993 49.15806580]
[115.48706818 63.81999588]
[112.32038879 78.48192596]
[130.58981323 101.01445007]
[115.96156311 132.73341370]
[120.55010986 147.01435852]
[125.13865662 161.29530334]
[129.72720337 175.57623291]
[141.31510925 186.34800720]
[137.84202576 200.83203125]
[142.43057251 215.11297607]
[147.01911926 229.39390564]
[162.05767822 228.34272766]
[176.91069031 230.92175293]
[190.71463013 236.98103333]
[202.66693115 246.16830444]
[212.07272339 257.94940186]
[218.38514709 271.63943481]
[221.23721313 286.44244385]
[220.46311951 301.49783325]
[216.10784912 315.93026733]
[208.42463684 328.90066528]
[197.86015320 339.65496826]
[185.02861023 347.56793213]
[170.67602539 352.17950439]
[155.63682556 353.22155762]
[140.78536987 350.63354492]
[126.98511505 344.56588745]
[115.03838348 335.37136841]
[105.63973999 323.58456421]
[99.33561707 309.89071655]
[96.49251556 295.08596802]
[97.27574158 280.03106689]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 170]
[4 169]
[5 168]
[7 166]
[8 165]
[9 164]
[10 163]
[26 38]
[27 37]
[28 36]
[29 35]
[44 161]
[45 160]
[46 159]
[47 158]
[49 154]
[50 153]
[51 152]
[52 151]
[56 148]
[57 147]
[58 146]
[60 144]
[62 141]
[63 140]
[64 139]
[65 138]
[67 136]
[68 135]
[69 134]
[73 129]
[74 128]
[75 127]
[76 126]
[77 125]
[79 123]
[80 122]
[81 121]
[82 120]
[83 119]
[84 118]
[85 117]
[87 115]
[88 114]
[91 109]
[92 108]
[93 107]
[94 105]
[95 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
