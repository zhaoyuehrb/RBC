%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 08:22:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCUGGCCUCCUUCACCAAAGAUCUGCUCCUCGCUCGCACCUGCCUCCGGCCUGCACUCCCCCAGUUCCCGGGCCCUCCUGGGCACCCCAGGCAGCUCCUGUUUGGAAAUGGGGAGCUGGCCUAGGUGGGAGCCACCACUCCUGCCUGCCCCCACACCCACUCCACACCAGUAAUAAAAAGCCACCACACACUGACUGGCA\
) } def
/len { sequence length } bind def

/coor [
[111.38282013 222.92984009]
[108.33403778 204.63642883]
[113.60303497 186.80181885]
[126.17234039 173.02705383]
[120.08543396 159.31758118]
[113.99851990 145.60812378]
[107.91161346 131.89865112]
[100.68498993 129.89218140]
[99.45408630 144.84159851]
[98.22318268 159.79100037]
[96.99227142 174.74041748]
[95.76136780 189.68983459]
[101.47679901 203.55827332]
[99.90167236 218.47534180]
[91.41577148 230.84423828]
[78.06523132 237.68258667]
[63.06910706 237.34150696]
[50.04326630 229.90327454]
[42.12849045 217.16136169]
[41.23318481 202.18809509]
[47.57322311 188.59384155]
[59.62167358 179.65568542]
[66.27419281 166.21157837]
[72.92670441 152.76747131]
[79.57922363 139.32336426]
[86.23173523 125.87926483]
[79.00511169 123.87280273]
[66.72153473 132.48171997]
[62.53752899 147.96958923]
[47.76319885 154.22247314]
[33.73213959 146.44372559]
[31.20778465 130.60050964]
[42.12659836 118.84641266]
[58.11260605 120.19814301]
[70.39618683 111.58921814]
[67.72830200 104.57976532]
[62.39253616 90.56086731]
[59.72465515 83.55141449]
[44.82558060 85.28853607]
[29.92650604 87.02566528]
[23.67688942 95.93782806]
[13.75697899 99.85522461]
[3.53435016 97.70780945]
[-3.66146111 90.44190979]
[-18.60715675 91.71711731]
[-33.55285263 92.99233246]
[-48.82061768 100.36333466]
[-60.13009644 87.73274231]
[-51.12388229 73.36874390]
[-34.82806778 78.04663849]
[-19.88237190 76.77142334]
[-4.93667555 75.49620819]
[10.06791592 63.30579758]
[28.18938255 72.12658691]
[43.08845520 70.38946533]
[57.98752975 68.65234375]
[62.09986496 62.38028336]
[47.12400055 61.52966309]
[40.37265015 48.13491440]
[48.59708405 35.59064865]
[63.57296371 36.44099426]
[70.32453156 49.83616638]
[74.43686676 43.56410980]
[70.08953857 29.20790100]
[65.74221039 14.85169125]
[61.39488220 0.49548247]
[57.04755402 -13.86072636]
[52.70022964 -28.21693611]
[48.35290146 -42.57314682]
[44.00557327 -56.92935562]
[39.65824509 -71.28556061]
[32.73487473 -84.59221649]
[23.47355461 -96.39170074]
[14.12120628 -108.11917114]
[4.67839432 -119.77392578]
[-4.76441813 -131.42868042]
[-14.20723057 -143.08343506]
[-29.70410919 -148.44802856]
[-32.54056549 -164.60000610]
[-19.79869652 -174.92361450]
[-4.58624506 -168.79879761]
[-2.55247593 -152.52624512]
[6.89033651 -140.87149048]
[16.33314896 -129.21673584]
[25.77596092 -117.56198883]
[32.43356705 -114.34181213]
[35.27304077 -105.65302277]
[44.53436279 -93.85353851]
[58.42563629 -99.51326752]
[56.80385208 -114.42533875]
[55.18206406 -129.33740234]
[53.56027985 -144.24948120]
[51.93849564 -159.16154480]
[50.31671143 -174.07360840]
[48.69492340 -188.98568726]
[47.07313919 -203.89775085]
[39.34973145 -218.99031067]
[51.71441650 -230.58992004]
[66.28359222 -221.91954041]
[61.98521042 -205.51953125]
[63.60699463 -190.60746765]
[65.22878265 -175.69540405]
[66.85056305 -160.78332520]
[68.47235107 -145.87126160]
[70.09413147 -130.95918274]
[71.71591949 -116.04711914]
[73.33770752 -101.13504791]
[72.58788300 -94.15761566]
[70.41045380 -88.00465393]
[67.10822296 -82.94352722]
[63.02877426 -79.15357971]
[58.54154587 -76.71994019]
[54.01445389 -75.63288879]
[58.36178207 -61.27668381]
[62.70911026 -46.92047119]
[67.05643463 -32.56426239]
[71.40376282 -18.20805359]
[75.75109100 -3.85184526]
[80.09841919 10.50436401]
[84.44574738 24.86057281]
[88.79307556 39.21678162]
[113.37980652 52.78459930]
[124.35942078 73.03118134]
[121.94401550 91.29309082]
[135.19670105 84.26696777]
[148.44937134 77.24083710]
[161.70205688 70.21471405]
[174.95474243 63.18858719]
[188.20741272 56.16246033]
[201.46009827 49.13633347]
[214.71278381 42.11020660]
[227.96545410 35.08407974]
[241.21813965 28.05795288]
[245.61688232 12.87814331]
[259.50109863 5.32806635]
[274.63357544 9.88704967]
[282.03643799 23.85032845]
[277.31771851 38.93373871]
[263.27694702 46.18856049]
[248.24426270 41.31063461]
[234.99159241 48.33676147]
[221.73890686 55.36288834]
[208.48622131 62.38901520]
[195.23353577 69.41513824]
[181.98086548 76.44126892]
[168.72817993 83.46739197]
[155.47549438 90.49352264]
[142.22282410 97.51964569]
[128.97013855 104.54577637]
[143.96896362 104.73344421]
[158.96778870 104.92111206]
[173.96661377 105.10877228]
[187.69430542 99.06306458]
[202.66893005 98.19089508]
[217.00566101 102.60202789]
[228.89996338 111.74125671]
[236.85473633 124.45824432]
[239.86871338 139.15232849]
[237.56253052 153.97398376]
[230.22648621 167.05764771]
[218.78393555 176.75651550]
[204.67512512 181.84979248]
[189.67590332 181.69641113]
[175.67420959 176.31565857]
[164.43238831 166.38482666]
[157.36437988 153.15065002]
[145.44995117 144.03768921]
[133.53552246 134.92471313]
[121.62108612 125.81173706]
[127.70799255 139.52120972]
[133.79490662 153.23068237]
[139.88180542 166.94015503]
[151.60125732 165.89364624]
[163.12597656 168.16708374]
[173.53587341 173.56793213]
[182.00296021 181.65447998]
[187.85717773 191.77183533]
[190.63941956 203.10507202]
[190.13754272 214.74472046]
[186.40248108 225.75990295]
[179.74333191 235.27268982]
[170.70178223 242.52804565]
[175.92890930 256.58782959]
[181.15603638 270.64758301]
[186.38317871 284.70736694]
[200.83830261 296.11007690]
[197.24476624 313.28439331]
[202.68885803 327.26159668]
[216.73921204 335.00543213]
[219.30296326 350.84231567]
[208.41340637 362.62353516]
[192.42410278 361.31155396]
[183.60064697 347.91281128]
[188.71165466 332.70568848]
[183.26757812 318.72848511]
[172.31954956 313.57440186]
[167.67163086 301.96911621]
[172.32341003 289.93447876]
[167.09626770 275.87472534]
[161.86914062 261.81494141]
[156.64201355 247.75517273]
[138.27062988 246.86470032]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 172]
[5 171]
[6 170]
[7 169]
[27 35]
[28 34]
[38 56]
[39 55]
[40 54]
[44 52]
[45 51]
[46 50]
[63 121]
[64 120]
[65 119]
[66 118]
[67 117]
[68 116]
[69 115]
[70 114]
[71 113]
[72 88]
[73 87]
[74 85]
[75 84]
[76 83]
[77 82]
[89 107]
[90 106]
[91 105]
[92 104]
[93 103]
[94 102]
[95 101]
[96 100]
[124 149]
[125 148]
[126 147]
[127 146]
[128 145]
[129 144]
[130 143]
[131 142]
[132 141]
[133 140]
[182 201]
[183 200]
[184 199]
[185 198]
[187 195]
[188 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
