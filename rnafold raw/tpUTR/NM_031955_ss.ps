%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 06:35:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAUUAGGGAGCAGGCACUACCACUAAGAUAUCCCAGAAGAAGAGGCAAGGGCAUCCACUCCAAUGCCCACCUAGUACUGUGAAGCUGGAUAACAAAAGCUUGUCACCAAAAGAAAGAGGUGGUAUUCCCCUCAGUUCAUCUUUACCAAAGACACUCUAUGUUUCAUUAAUCUCAACUGGCAGCAAUAAAUAUUCUCAGCAAGUUUGACUUGA\
) } def
/len { sequence length } bind def

/coor [
[97.67913055 458.85372925]
[91.28447723 472.42239380]
[90.45726776 481.51693726]
[84.69506073 486.14224243]
[78.10190582 499.61553955]
[71.50875092 513.08886719]
[64.91559601 526.56219482]
[58.42151642 540.08355713]
[52.02685547 553.65216064]
[45.73196411 567.26739502]
[39.53718185 580.92846680]
[45.33361435 595.63140869]
[38.95921326 610.09320068]
[24.19579697 615.73382568]
[9.80223751 609.20690918]
[4.31797934 594.38470459]
[10.99673557 580.06091309]
[25.87611961 574.73370361]
[32.07090378 561.07263184]
[31.97045708 553.68438721]
[38.45820236 547.25750732]
[44.85286331 533.68890381]
[44.86088562 526.29992676]
[51.44227600 519.96905518]
[58.03543091 506.49569702]
[64.62858582 493.02239990]
[71.22174072 479.54907227]
[77.71582031 466.02770996]
[84.11048126 452.45907593]
[66.75324249 433.85314941]
[60.02904892 409.26019287]
[65.52664185 384.31253052]
[82.03007507 364.74652100]
[105.78730774 355.08334351]
[105.78730774 340.08334351]
[105.78730774 325.08334351]
[105.78730774 310.08334351]
[94.92147827 294.08737183]
[105.27385712 276.78851318]
[104.83351135 261.79498291]
[104.39315796 246.80143738]
[91.27518463 229.58557129]
[102.18598938 210.01153564]
[100.86647034 195.06968689]
[99.54694366 180.12783813]
[98.22742462 165.18598938]
[96.90789795 150.24414062]
[95.58837891 135.30229187]
[57.29395676 120.90532684]
[48.82811737 69.60211945]
[34.06026840 66.97330475]
[19.29242134 64.34449005]
[4.52457380 61.71567917]
[-10.24327374 59.08686447]
[-25.01112175 56.45804977]
[-36.09693146 67.31551361]
[-51.45227814 69.54999542]
[-65.17272186 62.30230331]
[-71.98246765 48.35931396]
[-69.26303101 33.08239365]
[-58.06009293 22.34582901]
[-42.68141174 20.27804947]
[-29.04039955 27.67415810]
[-22.38230705 41.69020081]
[-7.61445951 44.31901550]
[7.15338850 46.94783020]
[21.92123604 49.57664490]
[36.68908310 52.20545959]
[51.45693207 54.83427429]
[56.14539337 48.98035812]
[44.43756104 39.60343552]
[32.72972870 30.22651482]
[21.02189445 20.84959412]
[9.31420708 11.47249222]
[18.69149017 -0.23505062]
[30.39881516 9.14176178]
[42.10664749 18.51868248]
[53.81447983 27.89560318]
[65.52231598 37.27252579]
[70.21077728 31.41860962]
[64.41970062 17.58157730]
[58.62862778 3.74454403]
[52.83755493 -10.09248829]
[46.84397888 -23.84301758]
[40.64919662 -37.50408173]
[34.45441055 -51.16514587]
[28.25962830 -64.82621002]
[12.96660233 -66.24709320]
[0.44217756 -75.13722229]
[-5.94463778 -89.10519409]
[-4.47582293 -104.39368439]
[4.45351887 -116.89018250]
[18.44143867 -123.23318481]
[33.72525787 -121.71645355]
[46.19370270 -112.74798584]
[52.49282837 -98.74025726]
[50.92819977 -83.46126556]
[41.92069244 -71.02098846]
[48.11547470 -57.35992813]
[54.31026077 -43.69886398]
[60.50504303 -30.03780174]
[64.57863617 -27.54879951]
[67.13310242 -22.47542572]
[66.67458344 -15.88356209]
[72.46566010 -2.04652953]
[78.25673676 11.79050255]
[84.04780579 25.62753487]
[91.53144836 26.12263680]
[92.52165222 11.15535545]
[93.51185608 -3.81192541]
[89.82846832 -18.35265160]
[102.51931000 -26.34906578]
[114.04602051 -16.75037193]
[108.47913361 -2.82172298]
[107.48892975 12.14555836]
[106.49872589 27.11283875]
[113.98236847 27.60794067]
[121.54584503 14.65441513]
[129.10932922 1.70089042]
[136.67280579 -11.25263405]
[138.29682922 -20.23916435]
[144.44358826 -24.33963394]
[152.19639587 -37.18073273]
[151.97621155 -53.57840347]
[166.20343018 -61.73428726]
[180.24229431 -53.25831223]
[179.65084839 -36.86983490]
[165.03750610 -29.42791367]
[157.28468323 -16.58681679]
[149.62632751 -3.68915677]
[142.06285095 9.26436806]
[134.49937439 22.21789360]
[126.93589783 35.17141724]
[137.14616394 46.16006088]
[150.61949158 39.56690598]
[164.09280396 32.97375107]
[167.01902771 22.50076866]
[175.05958557 15.51012135]
[185.40251160 14.12677479]
[194.60200500 18.56809616]
[208.26306152 12.37331200]
[221.92413330 6.17852783]
[235.58518982 -0.01625613]
[249.24626160 -6.21104002]
[261.17449951 -18.25900269]
[276.05368042 -10.13212872]
[272.36337280 6.41531849]
[255.44104004 7.45002365]
[241.77996826 13.64480686]
[228.11891174 19.83959198]
[214.45785522 26.03437424]
[200.79678345 32.22916031]
[190.71606445 48.73118591]
[170.68595886 46.44707108]
[157.21264648 53.04022598]
[143.73931885 59.63338089]
[151.98156738 87.20143127]
[145.91954041 112.33836365]
[129.94210815 128.82565308]
[110.53022766 133.98277283]
[111.84974670 148.92462158]
[113.16927338 163.86647034]
[114.48879242 178.80831909]
[115.80831909 193.75016785]
[117.12783813 208.69201660]
[124.40511322 212.77142334]
[129.42176819 219.31935120]
[131.42051697 227.22546387]
[130.14810181 235.18534851]
[125.88472748 241.91567993]
[119.38669586 246.36108398]
[119.82704163 261.35461426]
[120.26738739 276.34814453]
[128.59704590 283.33837891]
[131.64305115 293.54824829]
[128.63143921 303.53921509]
[120.78730774 310.08334351]
[120.78730774 325.08334351]
[120.78730774 340.08334351]
[120.78730774 355.08334351]
[127.65834045 356.54626465]
[134.27561951 358.89453125]
[140.52566528 362.08688354]
[146.30140686 366.06762695]
[151.50405884 370.76760864]
[156.04475403 376.10525513]
[159.84609985 381.98828125]
[162.84350586 388.31500244]
[164.98623657 394.97622681]
[166.23831177 401.85717773]
[166.57910156 408.83932495]
[166.00364685 415.80258179]
[164.52272034 422.62731934]
[162.16270447 429.19631958]
[158.96501160 435.39700317]
[154.98544312 441.12307739]
[150.29316711 446.27667236]
[144.96952820 450.76974487]
[139.10667419 454.52572632]
[132.80587769 457.48080444]
[136.29685974 472.06893921]
[139.78782654 486.65704346]
[143.27880859 501.24514771]
[146.76977539 515.83325195]
[156.33634949 529.83032227]
[145.53462219 542.89776611]
[129.98760986 536.13562012]
[132.18165588 519.32421875]
[128.69068909 504.73614502]
[125.19971466 490.14801025]
[121.70874023 475.55990601]
[118.21776581 460.97180176]
[111.29865265 461.16409302]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 29]
[2 28]
[4 27]
[5 26]
[6 25]
[7 24]
[8 22]
[9 21]
[10 19]
[11 18]
[34 180]
[35 179]
[36 178]
[37 177]
[39 173]
[40 172]
[41 171]
[43 165]
[44 164]
[45 163]
[46 162]
[47 161]
[48 160]
[50 69]
[51 68]
[52 67]
[53 66]
[54 65]
[55 64]
[80 107]
[81 106]
[82 105]
[83 104]
[84 101]
[85 100]
[86 99]
[87 98]
[117 133]
[118 132]
[119 131]
[120 130]
[122 129]
[123 128]
[134 156]
[135 155]
[136 154]
[140 152]
[141 151]
[142 150]
[143 149]
[144 148]
[200 212]
[201 211]
[202 210]
[203 209]
[204 208]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
