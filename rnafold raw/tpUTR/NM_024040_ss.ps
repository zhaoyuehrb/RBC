%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Sep  9 22:52:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCACUCGCCGGACUCUGCCCGAGCCUUCUAGGCUCAGAUCCCAGAGGGAUGCAGGAGCCCUAUACCCCUACACAGGGGCCCCCUAACUCCUGUCCCCCUUCUCUACUCCUUUGCUCCAUAGUGUUAACCUACUCUCGGAGCUGCCUCCAUGGGCACAGUAAAGGUGGCCCAAGGAAGGUG\
) } def
/len { sequence length } bind def

/coor [
[102.21944427 137.42271423]
[99.38838196 152.15312195]
[96.55731201 166.88354492]
[102.43736267 182.19226074]
[91.91073608 194.76692200]
[75.80632019 191.67179871]
[70.69096375 176.09086609]
[81.82690430 164.05247498]
[84.65796661 149.32206726]
[87.48902893 134.59164429]
[74.71976471 126.72108459]
[62.83261108 135.86961365]
[50.94545746 145.01814270]
[46.03681946 152.75303650]
[38.77324677 154.21987915]
[26.72995567 163.16186523]
[14.68666553 172.10385132]
[13.08767796 176.20413208]
[10.51590252 179.26148987]
[7.42386246 181.09712219]
[4.27543736 181.69943237]
[1.48972034 181.21304321]
[-11.14179325 189.30284119]
[-23.77330589 197.39263916]
[-36.40481949 205.48245239]
[-49.03633118 213.57225037]
[-61.66784668 221.66204834]
[-71.74507904 235.29603577]
[-87.63590240 229.38688660]
[-86.35670471 212.48126221]
[-69.75764465 209.03053284]
[-57.12613297 200.94073486]
[-44.49462128 192.85093689]
[-31.86310577 184.76113892]
[-19.23159409 176.67132568]
[-6.60008001 168.58152771]
[5.74467802 160.06056213]
[17.78796959 151.11857605]
[29.83126068 142.17658997]
[41.79692841 133.13099670]
[53.68408203 123.98246002]
[65.57123566 114.83393097]
[63.33155823 93.73075104]
[72.87830353 74.96102905]
[90.96911621 64.50627899]
[82.23633575 52.31044006]
[73.50355530 40.11460114]
[64.77077484 27.91875839]
[56.03799438 15.72291660]
[40.69856644 13.01371098]
[32.01602173 0.52099156]
[34.69336700 -14.08611012]
[25.96058655 -26.28195190]
[17.22780609 -38.47779465]
[8.49502563 -50.67363358]
[-0.23775423 -62.86947632]
[-8.97053432 -75.06531525]
[-17.70331383 -87.26116180]
[-33.01335907 -82.89556122]
[-48.86632156 -84.02978516]
[-63.34996414 -90.50862122]
[-74.72351837 -101.53330231]
[-81.62689972 -115.75988770]
[-83.24333954 -131.46315002]
[-79.39595795 -146.74572754]
[-70.56696320 -159.76741028]
[-79.50894928 -171.81069946]
[-88.45093536 -183.85398865]
[-97.39292145 -195.89727783]
[-106.33490753 -207.94056702]
[-121.59130859 -213.95507812]
[-123.74283600 -230.21247864]
[-110.57619476 -239.98854065]
[-95.63608551 -233.22650146]
[-94.29161835 -216.88255310]
[-85.34963226 -204.83926392]
[-76.40764618 -192.79597473]
[-67.46566010 -180.75268555]
[-58.52367020 -168.70939636]
[-45.07240677 -173.16416931]
[-30.88142204 -173.24328613]
[-17.34041595 -168.92573547]
[-5.77954578 -160.62170410]
[2.66124749 -149.13363647]
[7.14463043 -135.57878113]
[7.21892929 -121.28043365]
[2.86359715 -107.63881683]
[-5.50747299 -95.99394226]
[3.22530699 -83.79809570]
[11.95808697 -71.60225677]
[20.69086838 -59.40641403]
[29.42364693 -47.21057129]
[38.15642929 -35.01473236]
[46.88920975 -22.81888962]
[61.58015823 -20.64828300]
[70.61017609 -8.40436745]
[68.23383331 6.99013662]
[76.96661377 19.18597794]
[85.69939423 31.38181877]
[94.43217468 43.57765961]
[103.16495514 55.77350235]
[101.34822083 40.88392639]
[95.07955933 27.25660515]
[95.60198212 12.26570511]
[102.80409241 -0.89216822]
[115.15013123 -9.41127968]
[130.00747681 -11.47504425]
[144.20800781 -6.64339352]
[154.72366333 4.05339003]
[159.31210327 18.33436394]
[156.99491882 33.15430450]
[148.26622009 45.35306549]
[134.98658752 52.32960129]
[124.46567535 63.02121353]
[138.82446289 58.68243027]
[153.18325806 54.34364700]
[167.54205322 50.00486755]
[181.90084839 45.66608429]
[188.68185425 34.67435455]
[200.75039673 31.36544800]
[211.47804260 36.99015808]
[225.90959167 32.89986420]
[237.07691956 21.69266891]
[251.43173218 25.66619682]
[265.86328125 21.57590294]
[273.34793091 7.65629292]
[288.50686646 3.18616176]
[302.34655762 10.81755924]
[306.65618896 26.02291298]
[298.87887573 39.78115845]
[283.62881470 43.92976761]
[269.95355225 36.00745010]
[255.52201843 40.09774399]
[245.38693237 51.01237488]
[229.99987793 47.33140945]
[215.56834412 51.42170334]
[204.05154419 64.64832306]
[186.23963928 60.02487946]
[171.88084412 64.36366272]
[157.52204895 68.70244598]
[143.16325378 73.04122162]
[128.80445862 77.38000488]
[133.65434265 99.45761871]
[124.73756409 118.16871643]
[134.29093933 129.73301697]
[143.84431458 141.29730225]
[153.39770508 152.86160278]
[163.05052185 164.34301758]
[172.80209351 175.74069214]
[187.65278625 181.19664001]
[190.04768372 195.89744568]
[199.79925537 207.29512024]
[209.55081177 218.69281006]
[219.30236816 230.09048462]
[229.05393982 241.48815918]
[237.03253174 245.98985291]
[238.87338257 253.16775513]
[248.42675781 264.73205566]
[264.06423950 264.67108154]
[276.04925537 274.71563721]
[278.72290039 290.12295532]
[270.82275391 303.61819458]
[256.07901001 308.82931519]
[241.45320129 303.29577637]
[233.85121155 289.63034058]
[236.86245728 274.28543091]
[227.30908203 262.72113037]
[217.65625000 251.23971558]
[207.90469360 239.84204102]
[198.15313721 228.44436646]
[188.40158081 217.04669189]
[178.65000916 205.64901733]
[164.49681091 201.00830078]
[161.40441895 185.49226379]
[151.65284729 174.09458923]
[144.89779663 171.04821777]
[141.83340454 162.41497803]
[132.28002930 150.85069275]
[122.72664642 139.28639221]
[113.17327118 127.72209167]
[110.22603607 131.33146667]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 10]
[2 9]
[3 8]
[11 42]
[12 41]
[13 40]
[15 39]
[16 38]
[17 37]
[22 36]
[23 35]
[24 34]
[25 33]
[26 32]
[27 31]
[45 101]
[46 100]
[47 99]
[48 98]
[49 97]
[52 94]
[53 93]
[54 92]
[55 91]
[56 90]
[57 89]
[58 88]
[66 79]
[67 78]
[68 77]
[69 76]
[70 75]
[114 142]
[115 141]
[116 140]
[117 139]
[118 138]
[121 136]
[122 135]
[124 133]
[125 132]
[144 180]
[145 179]
[146 178]
[147 177]
[148 175]
[149 174]
[151 172]
[152 171]
[153 170]
[154 169]
[155 168]
[157 167]
[158 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
