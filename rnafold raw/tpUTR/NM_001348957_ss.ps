%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 16:08:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGCUGCUGAAUUCUGAAAACCAGGACUUGGUUCAACAUUUAAAUUUGAUAGUUGCCCUGAUUCCCAUUUUGGGUUUGUGAAAAGUGUAUGUAUUUAAAUUUGCUGUAAAACAUAAUCACUAAUAAUAUGCAAUAAAUAUUUUCUUGAAGGAAACUAUCUGCGUUUUCUUUUUUUUUUUUUUUUUUGAGACGGAGUCUUGCUGUG\
) } def
/len { sequence length } bind def

/coor [
[103.65097809 432.90518188]
[98.31122589 446.98284912]
[90.16091156 459.64248657]
[79.55633545 470.33062744]
[66.96108246 478.58007812]
[52.92577362 484.03018188]
[38.06396103 486.44271851]
[23.02534676 485.71215820]
[8.46734715 481.87051392]
[-4.97361946 475.08566284]
[-16.70997238 465.65423584]
[-26.22865105 453.98855591]
[-33.11353683 440.59854126]
[-37.06365585 426.06961060]
[-37.90631866 411.03686523]
[-35.60469818 396.15747070]
[-30.25940132 382.08190918]
[-22.10410690 369.42547607]
[-11.49532795 358.74148560]
[1.10316527 350.49700928]
[15.14062023 345.05242920]
[30.00337982 342.64575195]
[45.04170609 343.38220215]
[48.86899185 328.87869263]
[52.69627762 314.37518311]
[56.52355957 299.87167358]
[60.35084534 285.36816406]
[64.17813110 270.86462402]
[68.00541687 256.36111450]
[71.83269501 241.85760498]
[67.59888458 227.57740784]
[78.60123444 216.20820618]
[82.42852020 201.70468140]
[86.14563751 187.17254639]
[89.75237274 172.61262512]
[93.35910797 158.05268860]
[96.96584320 143.49276733]
[85.70890045 153.40646362]
[71.41174316 157.94421387]
[56.49812317 156.33676147]
[43.49630737 148.85659790]
[34.61045837 136.77182007]
[31.34697533 122.13114166]
[34.25910187 107.41654205]
[42.85315704 95.12255096]
[55.67520523 87.33228302]
[41.87208557 81.46083832]
[28.06896400 75.58939362]
[12.34132671 77.30752563]
[3.65819550 65.20577240]
[-10.14492607 59.33432770]
[-23.94804764 53.46288300]
[-37.75116730 47.59143829]
[-44.35432053 48.01219940]
[-49.41720963 45.42200470]
[-51.87979889 41.32664490]
[-65.49836731 35.03899765]
[-79.11694336 28.75134850]
[-92.73551178 22.46370125]
[-108.50804901 23.70372391]
[-116.81990814 11.34401894]
[-130.43847656 5.05637169]
[-144.50773621 11.88206768]
[-159.66018677 8.01719856]
[-168.74130249 -4.71336126]
[-167.46327209 -20.29863167]
[-156.42953491 -31.37972450]
[-140.84988403 -32.72448730]
[-128.08055115 -23.69796181]
[-124.15082550 -8.56219959]
[-110.53225708 -2.27455211]
[-95.73381042 -3.96431017]
[-86.44786835 8.84512997]
[-72.82929230 15.13277721]
[-59.21072388 21.42042542]
[-45.59215164 27.70807266]
[-31.87972450 33.78831863]
[-18.07660484 39.65976334]
[-4.27348280 45.53120422]
[9.52963829 51.40264893]
[24.26998520 49.26455307]
[33.94040680 61.78627396]
[47.74353027 67.65771484]
[61.54664993 73.52915955]
[74.05807495 65.25485229]
[74.05807495 50.25484848]
[74.05807495 35.25484848]
[74.05807495 20.25485039]
[73.83043671 5.25657797]
[73.37519836 -9.73651314]
[72.91996765 -24.72960281]
[72.46473694 -39.72269440]
[72.00949860 -54.71578598]
[68.62020111 -63.20161057]
[71.66287231 -69.93949127]
[71.43522644 -84.93775940]
[71.20758820 -99.93603516]
[70.97994232 -114.93430328]
[57.82255173 -122.98952484]
[51.12940979 -136.88935852]
[53.03627777 -152.19842529]
[62.93468094 -164.03164673]
[77.66606903 -168.61309814]
[92.52971649 -164.48083496]
[102.78268433 -152.95347595]
[105.15328979 -137.70933533]
[98.88507843 -123.61277008]
[85.97821808 -115.16194916]
[86.20585632 -100.16367340]
[86.43350220 -85.16540527]
[86.66114044 -70.16712952]
[87.00259399 -55.17101669]
[87.45782471 -40.17792892]
[87.91305542 -25.18483734]
[88.36829376 -10.19174576]
[88.82352448 4.80134439]
[91.62818146 8.67048359]
[92.02993011 14.34327507]
[89.05807495 20.25485039]
[89.05807495 35.25484848]
[89.05807495 50.25484848]
[89.05807495 65.25485229]
[95.76881409 68.60388184]
[108.28022766 60.32954788]
[109.19029236 75.30194092]
[115.90102386 78.65097046]
[127.88740540 69.63283539]
[139.87377930 60.61470413]
[151.86016846 51.59657288]
[163.84654236 42.57844162]
[164.49607849 26.95435333]
[175.07473755 15.43802357]
[190.58761597 13.46711063]
[203.71000671 21.97221947]
[208.24591064 36.93750000]
[202.05361938 51.29679871]
[188.05694580 58.27009964]
[172.86466980 54.56481934]
[160.87829590 63.58295441]
[148.89192200 72.60108185]
[136.90553284 81.61921692]
[124.91915894 90.63735199]
[126.77771759 97.90341949]
[139.45005798 89.87770844]
[150.99879456 99.44988251]
[145.46371460 113.39128876]
[130.49484253 112.43555450]
[132.35339355 119.70162964]
[147.19775391 121.85683441]
[162.04211426 124.01203918]
[176.88647461 126.16724396]
[191.73083496 128.32244873]
[206.57521057 130.47766113]
[221.41957092 132.63285828]
[236.26393127 134.78807068]
[251.10829163 136.94326782]
[262.65557861 126.39839172]
[278.28149414 125.79464722]
[290.60797119 135.41709900]
[293.81484985 150.72233582]
[286.38790894 164.48367310]
[271.83392334 170.20344543]
[257.02484131 165.18093872]
[248.95307922 151.78762817]
[234.10871887 149.63243103]
[219.26435852 147.47721863]
[204.41999817 145.32202148]
[189.57563782 143.16680908]
[174.73127747 141.01161194]
[159.88691711 138.85639954]
[145.04255676 136.70118713]
[130.19818115 134.54598999]
[142.19207764 143.55412292]
[154.18597412 152.56225586]
[168.09431458 158.17991638]
[177.82205200 169.59793091]
[181.15895081 184.22206116]
[177.34686279 198.72956848]
[167.25190735 209.82424927]
[153.16775513 214.98529053]
[138.29441833 213.04006958]
[126.01124573 204.43055725]
[119.10907745 191.11289978]
[119.15615082 176.11289978]
[115.34095764 161.60620117]
[111.52577209 147.09950256]
[107.91903687 161.65942383]
[104.31230164 176.21936035]
[100.70556641 190.77928162]
[101.67972565 199.86485291]
[96.93202972 205.53196716]
[93.10475159 220.03549194]
[97.06480408 235.35307312]
[86.33621216 245.68489075]
[82.50892639 260.18841553]
[78.68164062 274.69192505]
[74.85435486 289.19543457]
[71.02707672 303.69894409]
[67.19979095 318.20245361]
[63.37250519 332.70596313]
[59.54521942 347.20947266]
[72.98885345 353.98904419]
[84.72891998 363.41583252]
[94.25218964 375.07778931]
[101.14234161 388.46508789]
[105.09817505 402.99246216]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 201]
[24 200]
[25 199]
[26 198]
[27 197]
[28 196]
[29 195]
[30 194]
[32 192]
[33 191]
[34 189]
[35 188]
[36 187]
[37 186]
[46 84]
[47 83]
[48 82]
[50 80]
[51 79]
[52 78]
[53 77]
[56 76]
[57 75]
[58 74]
[59 73]
[61 71]
[62 70]
[85 122]
[86 121]
[87 120]
[88 119]
[89 116]
[90 115]
[91 114]
[92 113]
[93 112]
[95 111]
[96 110]
[97 109]
[98 108]
[126 142]
[127 141]
[128 140]
[129 139]
[130 138]
[148 172]
[149 171]
[150 170]
[151 169]
[152 168]
[153 167]
[154 166]
[155 165]
[156 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
