%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 06:27:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCCUCCUGGGACUCCCUCAACCCCCUCCAUUUUCUCCACAAAGGCCCUGGUGGUUUCCACAUUGCUACCCAAUGGACACACUCCAAAAUGGCCAGUGGGCAGGGAAUCCUGGAGCACUUGUUCCGGGAUGGUGUGGUGGAAGAGGGGAUGAGGGAAAGAAAUGGGGGGCCUGGGUCAGAUUUUUAUUGUGGGGUGGGAUGAGUAGGACAACAUAUUUCAGUAAUAAAAUACAGAAUAAAAAUCAAGUGUUUUU\
ACGCAA\
) } def
/len { sequence length } bind def

/coor [
[59.24244308 86.68291473]
[46.01892471 79.60205078]
[32.79541016 72.52118683]
[19.57189369 65.44032288]
[6.34837770 58.35946274]
[-6.87513828 51.27859879]
[-20.09865379 44.19773483]
[-31.41587067 54.25487137]
[-45.46473694 59.82276154]
[-60.54253387 60.24733353]
[-74.82892609 55.49664688]
[-86.60572815 46.16238785]
[-94.46354675 33.38626862]
[-97.47042847 18.72039795]
[-95.28237152 3.93872976]
[-108.50588989 -3.14213324]
[-121.72940826 -10.22299671]
[-134.95292664 -17.30385971]
[-148.17643738 -24.38472176]
[-161.39994812 -31.46558571]
[-174.62347412 -38.54644775]
[-187.15129089 -35.56606293]
[-198.01028442 -41.71092224]
[-201.66273499 -53.22205734]
[-214.80039978 -60.46096802]
[-227.93806458 -67.69988251]
[-241.07572937 -74.93878937]
[-254.21337891 -82.17770386]
[-267.35104370 -89.41661072]
[-272.50708008 -89.31500244]
[-276.77227783 -91.01374054]
[-279.61392212 -93.87943268]
[-280.82418823 -97.15948486]
[-293.69302368 -104.86620331]
[-306.56182861 -112.57292175]
[-319.43066406 -120.27964020]
[-335.24539185 -120.73191833]
[-342.18911743 -133.90895081]
[-355.05792236 -141.61566162]
[-367.92675781 -149.32238770]
[-380.79556274 -157.02909851]
[-393.66436768 -164.73582458]
[-406.13128662 -157.30329895]
[-420.52999878 -156.38594055]
[-433.68081665 -162.10725403]
[-442.71566772 -173.13343811]
[-445.70352173 -186.98335266]
[-460.18463135 -190.89459229]
[-474.66574097 -194.80581665]
[-489.14682007 -198.71705627]
[-503.62792969 -202.62829590]
[-518.62121582 -203.07788086]
[-533.31060791 -200.04135132]
[-548.00006104 -197.00482178]
[-562.68951416 -193.96830750]
[-576.97668457 -184.84075928]
[-589.70263672 -196.04284668]
[-582.46118164 -211.37249756]
[-565.72601318 -208.65774536]
[-551.03656006 -211.69425964]
[-536.34716797 -214.73078918]
[-521.65771484 -217.76731873]
[-520.62677002 -225.19612122]
[-535.48437500 -227.25798035]
[-550.25201416 -224.62770081]
[-557.31695557 -237.85972595]
[-546.91571045 -248.66780090]
[-533.42254639 -242.11560059]
[-518.56494141 -240.05374146]
[-517.53399658 -247.48254395]
[-530.84143066 -254.40434265]
[-544.14892578 -261.32614136]
[-557.45642090 -268.24792480]
[-573.26983643 -267.75180054]
[-580.99060059 -280.48910522]
[-594.29809570 -287.41091919]
[-607.60552979 -294.33270264]
[-616.63128662 -295.50894165]
[-621.03033447 -301.41812134]
[-630.04132080 -302.70248413]
[-634.36920166 -308.66397095]
[-647.50689697 -315.90289307]
[-661.49572754 -309.18786621]
[-676.75384521 -312.01083374]
[-687.41418457 -323.28631592]
[-689.37762451 -338.67868042]
[-681.88916016 -352.26922607]
[-667.82830811 -358.83209229]
[-652.60168457 -355.84378052]
[-642.06433105 -344.45330811]
[-640.26794434 -329.04055786]
[-627.13031006 -321.80163574]
[-613.94946289 -314.64163208]
[-600.68371582 -307.64016724]
[-587.37628174 -300.71838379]
[-574.06878662 -293.79656982]
[-559.20721436 -294.78778076]
[-550.53460693 -281.55538940]
[-537.22711182 -274.63360596]
[-523.91967773 -267.71182251]
[-510.61218262 -260.79000854]
[-499.71670532 -217.10939026]
[-485.23559570 -213.19815063]
[-470.75448608 -209.28692627]
[-456.27340698 -205.37568665]
[-441.79229736 -201.46446228]
[-437.02124023 -207.77210999]
[-430.77127075 -212.61843872]
[-434.85583496 -227.05160522]
[-438.94042969 -241.48477173]
[-443.02502441 -255.91792297]
[-447.10961914 -270.35110474]
[-451.19421387 -284.78424072]
[-455.27877808 -299.21740723]
[-459.36337280 -313.65057373]
[-463.44796753 -328.08374023]
[-467.53256226 -342.51690674]
[-479.66040039 -353.55535889]
[-475.90084839 -369.51773071]
[-460.12139893 -373.98333740]
[-448.55462646 -362.35830688]
[-453.09939575 -346.60147095]
[-449.01480103 -332.16833496]
[-444.93020630 -317.73516846]
[-440.84564209 -303.30200195]
[-436.76104736 -288.86883545]
[-432.67645264 -274.43566895]
[-428.59185791 -260.00250244]
[-424.50726318 -245.56935120]
[-420.42269897 -231.13619995]
[-416.33810425 -216.70303345]
[-398.30734253 -211.60449219]
[-386.62625122 -196.71098328]
[-385.95767212 -177.60464478]
[-373.08883667 -169.89791870]
[-360.22003174 -162.19120789]
[-347.35119629 -154.48448181]
[-334.48239136 -146.77775574]
[-319.58810425 -146.87672424]
[-311.72393799 -133.14845276]
[-298.85510254 -125.44174194]
[-285.98629761 -117.73501587]
[-273.11749268 -110.02829742]
[-260.11212158 -102.55427551]
[-246.97447205 -95.31536102]
[-233.83680725 -88.07645416]
[-220.69914246 -80.83753967]
[-207.56149292 -73.59863281]
[-194.42382812 -66.35971832]
[-176.90824890 -67.64144135]
[-167.54260254 -51.76996613]
[-154.31909180 -44.68910217]
[-141.09558105 -37.60823822]
[-127.87206268 -30.52737617]
[-114.64854431 -23.44651222]
[-101.42502594 -16.36565018]
[-88.20150757 -9.28478622]
[-77.11159515 -19.29973030]
[-63.23838806 -24.92673302]
[-48.24903488 -25.46876144]
[-33.95196152 -20.84111023]
[-22.07867432 -11.58394337]
[-14.07407379 1.20068026]
[-10.92061996 15.97998047]
[-13.01779175 30.97422028]
[0.20572458 38.05508423]
[13.42924023 45.13594818]
[26.65275764 52.21680832]
[39.87627411 59.29767227]
[53.09978867 66.37853241]
[66.32330322 73.45939636]
[75.60028839 64.74127960]
[87.02812958 59.13125992]
[99.59946442 57.12386703]
[112.20610046 58.89605331]
[123.73675537 64.29160309]
[133.17498779 72.83488464]
[139.68881226 83.77280426]
[142.70401001 96.14117432]
[141.95480347 108.84970093]
[155.86405945 114.46509552]
[169.77331543 120.08048248]
[183.68257141 125.69587708]
[197.59182739 131.31127930]
[211.50108337 136.92666626]
[225.41033936 142.54205322]
[239.31959534 148.15745544]
[253.22885132 153.77284241]
[267.13809204 159.38822937]
[282.83129883 157.37979126]
[291.73657227 169.31903076]
[305.64581299 174.93443298]
[323.72024536 161.55126953]
[346.07781982 161.89535522]
[363.52825928 175.66778564]
[368.99414062 197.08213806]
[383.37728882 201.33949280]
[397.76040649 205.59684753]
[412.14355469 209.85421753]
[426.52670288 214.11157227]
[440.90985107 218.36892700]
[455.29299927 222.62628174]
[470.72171021 219.12397766]
[480.72955322 230.15539551]
[495.11270142 234.41275024]
[508.87887573 226.64953613]
[524.07983398 230.97470093]
[531.69708252 244.82218933]
[527.21142578 259.97656250]
[513.28417969 267.44696045]
[498.17810059 262.80136108]
[490.85534668 248.79589844]
[476.47219849 244.53854370]
[462.07229614 248.34535217]
[451.03564453 237.00942993]
[436.65249634 232.75207520]
[422.26934814 228.49472046]
[407.88619995 224.23735046]
[393.50305176 219.97999573]
[379.11990356 215.72264099]
[364.73678589 211.46528625]
[360.10369873 218.00732422]
[354.07046509 223.30975342]
[346.95989990 227.07913208]
[339.15478516 229.10437012]
[331.07717896 229.26840210]
[323.16558838 227.55508423]
[315.85119629 224.05033875]
[309.53442383 218.93795776]
[304.56283569 212.48991394]
[301.21218872 205.05195618]
[299.67111206 197.02502441]
[300.03042603 188.84368896]
[286.12118530 183.22828674]
[271.42285156 185.63838196]
[261.52270508 173.29748535]
[247.61344910 167.68209839]
[233.70419312 162.06671143]
[219.79495239 156.45130920]
[205.88569641 150.83592224]
[191.97644043 145.22052002]
[178.06718445 139.60513306]
[164.15792847 133.98974609]
[150.24867249 128.37434387]
[136.33941650 122.75895691]
[130.78074646 129.85076904]
[123.86273956 135.62432861]
[115.89091492 139.82464600]
[118.92743683 154.51408386]
[121.96396637 169.20350647]
[125.00048828 183.89294434]
[136.30348206 195.77462769]
[131.40623474 211.42547607]
[115.34662628 214.74523926]
[104.64539337 202.31883240]
[110.31105042 186.92947388]
[107.27452850 172.24003601]
[104.23800659 157.55059814]
[101.20147705 142.86117554]
[81.32515717 138.59757996]
[65.64640045 125.65840149]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 171]
[2 170]
[3 169]
[4 168]
[5 167]
[6 166]
[7 165]
[15 157]
[16 156]
[17 155]
[18 154]
[19 153]
[20 152]
[21 151]
[24 149]
[25 148]
[26 147]
[27 146]
[28 145]
[29 144]
[33 143]
[34 142]
[35 141]
[36 140]
[38 138]
[39 137]
[40 136]
[41 135]
[42 134]
[47 106]
[48 105]
[49 104]
[50 103]
[51 102]
[52 62]
[53 61]
[54 60]
[55 59]
[70 101]
[71 100]
[72 99]
[73 98]
[75 96]
[76 95]
[77 94]
[79 93]
[81 92]
[82 91]
[108 131]
[109 130]
[110 129]
[111 128]
[112 127]
[113 126]
[114 125]
[115 124]
[116 123]
[117 122]
[180 245]
[181 244]
[182 243]
[183 242]
[184 241]
[185 240]
[186 239]
[187 238]
[188 237]
[189 236]
[191 234]
[192 233]
[196 221]
[197 220]
[198 219]
[199 218]
[200 217]
[201 216]
[202 215]
[204 213]
[205 212]
[248 259]
[249 258]
[250 257]
[251 256]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
