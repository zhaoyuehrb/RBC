%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 15:08:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCAGGGGACACCUUGGCUCCUCAGCAGCCCAAGGACGGCACCAUCCAGCACCUCCGUCAUUCACAGGGACAUGGAAAAAGCUCCCCACCCCUGCAGAACGCGGCUGGCUGCACCCCUUCCUACCACCCCCCGCCUUCCCCCUGCCCUGCGCCCCCUCUCCUGGUUCUCCAUAAAGAGCUUCAGCAGUUCCCAGUGA\
) } def
/len { sequence length } bind def

/coor [
[216.00120544 198.76818848]
[205.35282898 188.20353699]
[194.70443726 177.63887024]
[184.05606079 167.07421875]
[173.40768433 156.50956726]
[162.75930786 145.94490051]
[152.11091614 135.38024902]
[141.46253967 124.81558990]
[130.81416321 114.25093079]
[125.16322327 126.67975616]
[114.41939545 136.66493225]
[99.71511841 142.12168884]
[83.02351379 141.50953674]
[66.89499664 134.16236877]
[56.41471481 144.89381409]
[45.93443680 155.62524414]
[35.45416260 166.35668945]
[24.97388458 177.08813477]
[14.57864094 187.90196228]
[4.26907825 198.79750061]
[6.24140406 214.31021118]
[-2.26251006 227.43336487]
[-17.22737503 231.97064209]
[-31.58724022 225.77966309]
[-38.56181717 211.78361511]
[-34.85792160 196.59100342]
[-22.22442055 187.37533569]
[-6.62646770 188.48794556]
[3.68309426 177.59239197]
[5.99910307 170.56620789]
[14.24244499 166.60784912]
[24.72272110 155.87640381]
[35.20299911 145.14497375]
[45.68327713 134.41352844]
[56.16355515 123.68209076]
[49.96171570 110.02423096]
[34.98460770 110.85262299]
[20.00749969 111.68101501]
[5.03039169 112.50939941]
[-9.94671631 113.33779144]
[-14.61167717 127.78087616]
[-24.18210220 139.56100464]
[-37.36367035 147.08500671]
[-52.37368011 149.33534241]
[-67.18215942 146.00764465]
[-79.78636932 137.55198669]
[-88.48170471 125.11190796]
[-92.09219360 110.36983490]
[-90.12953949 95.31950378]
[-82.85917664 81.99635315]
[-71.26436615 72.20223236]
[-56.91321182 67.26171112]
[-41.74658203 67.84295654]
[-27.81564713 73.86736298]
[-17.00444603 84.52017212]
[-10.77510738 98.36068726]
[4.20200109 97.53229523]
[19.17910957 96.70390320]
[34.15621567 95.87551117]
[49.13332367 95.04711914]
[52.44827652 88.31948853]
[37.60280228 86.17195892]
[35.05774689 71.38944244]
[48.33029938 64.40092468]
[59.07818222 74.86421204]
[62.39313507 68.13657379]
[53.92470932 55.75571442]
[45.45628738 43.37485123]
[36.98786163 30.99398804]
[28.51943588 18.61312485]
[13.26112270 19.67667198]
[-0.39074466 13.00409126]
[-8.81376076 0.47735265]
[-9.82891273 -14.48344421]
[-3.26347208 -27.85358238]
[-11.73189735 -40.23444366]
[-20.20032310 -52.61530685]
[-35.77775955 -55.28345871]
[-44.83767319 -68.23310852]
[-42.00497818 -83.78146362]
[-28.96026230 -92.70396423]
[-13.44272327 -89.70703888]
[-4.65864277 -76.56871796]
[-7.81945944 -61.08373260]
[0.64896590 -48.70286942]
[9.11739159 -36.32200623]
[23.95816994 -37.59357452]
[37.53312302 -31.22359657]
[46.15396118 -18.83216667]
[47.42324066 -3.68998361]
[40.90029907 10.14469910]
[49.36872482 22.52556229]
[57.83715057 34.90642548]
[66.30557251 47.28728867]
[74.77400208 59.66815186]
[97.56731415 57.03809357]
[116.59637451 65.27150726]
[127.57926178 80.20136261]
[136.04768372 67.82050323]
[144.51611328 55.43963623]
[145.92086792 39.68091583]
[159.49249268 33.54412842]
[167.96090698 21.16326332]
[176.42933655 8.78240013]
[184.89776611 -3.59846282]
[182.19084167 -18.93828964]
[190.95539856 -31.37360954]
[205.59625244 -33.85971832]
[214.06468201 -46.24058151]
[216.33004761 -55.10000610]
[222.76579285 -58.74860764]
[231.42861938 -70.99423981]
[223.61195374 -84.06404877]
[221.79348755 -99.18399811]
[226.28828430 -113.73448944]
[236.31759644 -125.19454956]
[250.14376831 -131.57865906]
[265.37133789 -131.78071594]
[279.36206055 -125.76573944]
[289.69192505 -114.57584381]
[294.57122803 -100.14974213]
[293.15460205 -84.98686218]
[285.68750000 -71.71424866]
[273.46365356 -62.63146210]
[258.60086060 -59.31216049]
[243.67425537 -62.33142471]
[235.01142883 -50.08578873]
[226.44554138 -37.77215576]
[217.97711182 -25.39129257]
[220.96804810 -10.84516144]
[212.55622864 1.83142996]
[197.27862549 4.86996222]
[188.81019592 17.25082588]
[180.34178162 29.63168907]
[171.87335205 42.01255035]
[171.07432556 56.88570786]
[156.89697266 63.90806198]
[148.42854309 76.28892517]
[139.96012878 88.66979218]
[141.37881470 103.60254669]
[152.02720642 114.16720581]
[162.67558289 124.73186493]
[173.32395935 135.29652405]
[183.97233582 145.86117554]
[194.62072754 156.42584229]
[205.26910400 166.99049377]
[215.91748047 177.55516052]
[226.56585693 188.11981201]
[238.16571045 197.62998962]
[250.61303711 206.00042725]
[263.06036377 214.37086487]
[276.23663330 206.74540710]
[291.35543823 205.60165405]
[305.41406250 211.11305237]
[315.64358521 222.13658142]
[320.05429077 236.44934082]
[317.82250977 251.19670105]
[330.26983643 259.56713867]
[342.71716309 267.93756104]
[355.16448975 276.30801392]
[372.26217651 272.63049316]
[386.45303345 282.26269531]
[389.23556519 298.84423828]
[401.81347656 307.01712036]
[414.39138794 315.19003296]
[430.78738403 315.51177979]
[438.46868896 330.00073242]
[429.53344727 343.75186157]
[413.17346191 342.61920166]
[406.21847534 327.76794434]
[393.64059448 319.59503174]
[381.06268311 311.42214966]
[368.95083618 315.83569336]
[356.32067871 312.41336060]
[347.84542847 302.18914795]
[346.79406738 288.75534058]
[334.34674072 280.38488770]
[321.89941406 272.01446533]
[309.45208740 263.64401245]
[296.63595581 271.27374268]
[281.71676636 272.58773804]
[267.64889526 267.27203369]
[257.24163818 256.33087158]
[252.59796143 241.89747620]
[254.68992615 226.81817627]
[242.24259949 218.44773865]
[229.79527283 210.07731628]
[235.61712646 223.90142822]
[234.95596313 238.88684082]
[227.93923950 252.14451599]
[215.91973877 261.11843872]
[201.21472168 264.07858276]
[186.65917969 260.45419312]
[175.05931091 250.94403076]
[168.65145874 237.38159180]
[168.67102051 222.38160706]
[175.11422729 208.83593750]
[186.73886108 199.35607910]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 148]
[2 147]
[3 146]
[4 145]
[5 144]
[6 143]
[7 142]
[8 141]
[9 140]
[14 35]
[15 34]
[16 33]
[17 32]
[18 31]
[19 29]
[20 28]
[36 60]
[37 59]
[38 58]
[39 57]
[40 56]
[66 95]
[67 94]
[68 93]
[69 92]
[70 91]
[75 86]
[76 85]
[77 84]
[98 139]
[99 138]
[100 137]
[102 135]
[103 134]
[104 133]
[105 132]
[108 129]
[109 128]
[111 127]
[112 126]
[149 187]
[150 186]
[151 185]
[157 179]
[158 178]
[159 177]
[160 176]
[163 172]
[164 171]
[165 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
