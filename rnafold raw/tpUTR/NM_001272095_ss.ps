%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 18:47:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCGCACAUUGUUGGCACUAGGAGCACCAGGAACCCAGGGCCUGGCCUUCUCUCCCAGCAGCCUGGGGGGCAGGGCAGAGCCUCCAGUCGGACCCCUUCCUCACACUGGCCCCUAUGCAGAAGGGCAGACAGUUCUUCUGGGGUUGGCAGCUGCUCAUUCAUGAUGGCCUCCUCCUUCAGGCCUCAAUGCCUGGGGGAGGCCUGCACUGUCCUGAUUGGCCGGGACACACGGUUUUGUAAAAAAUUAAAAAACA\
AAAAAAGAGCAUAGAA\
) } def
/len { sequence length } bind def

/coor [
[160.99832153 113.85430145]
[146.22288513 111.26853943]
[131.44743347 108.68277740]
[116.67198944 106.09701538]
[104.05744171 114.21324921]
[100.28683472 128.73159790]
[101.15880585 137.78683472]
[96.38793182 143.39537048]
[92.44989014 157.86920166]
[97.15419006 173.57911682]
[85.70586395 185.32083130]
[69.88195801 181.01547241]
[65.96076202 165.09201050]
[77.97605896 153.93116760]
[81.91410065 139.45733643]
[85.76848602 124.96099854]
[89.53909302 110.44264221]
[82.67813873 107.41323853]
[62.09527588 98.32501221]
[53.90633011 110.89247894]
[51.85541916 119.75540161]
[45.54952240 123.55704498]
[37.21596909 136.02908325]
[36.68392181 152.41960144]
[22.09765053 159.91444397]
[8.46225739 150.80357361]
[9.80466747 134.45945740]
[24.74392319 127.69553375]
[33.07747650 115.22348785]
[41.33886719 102.70352936]
[49.52781677 90.13606262]
[47.68446350 82.86611938]
[42.15441132 61.05629730]
[28.96664810 53.90906906]
[15.77888298 46.76184082]
[2.59111953 39.61460876]
[-10.59664440 32.46738052]
[-23.65931320 58.44043732]
[-64.12090302 64.73038483]
[-78.95213318 66.97418213]
[-93.78336334 69.21797180]
[-108.61459351 71.46176147]
[-123.43261719 73.79116821]
[-138.23693848 76.20610046]
[-153.04127502 78.62104034]
[-165.41574097 88.47917938]
[-179.22267151 82.89185333]
[-194.02699280 85.30679321]
[-208.83131409 87.72172546]
[-221.20579529 97.57986450]
[-235.01271057 91.99253845]
[-249.81703186 94.40747833]
[-264.62136841 96.82241821]
[-272.55282593 101.27768707]
[-279.61053467 99.17872620]
[-294.44177246 101.42251587]
[-309.27301025 103.66630554]
[-324.10421753 105.91009521]
[-338.93545532 108.15388489]
[-351.40664673 118.80291748]
[-366.77209473 113.07277679]
[-369.22518921 96.85814667]
[-356.24237061 86.83924103]
[-341.17926025 93.32265472]
[-326.34802246 91.07886505]
[-311.51678467 88.83507538]
[-296.68554688 86.59128571]
[-281.85433960 84.34748840]
[-267.03631592 82.01808929]
[-252.23197937 79.60314941]
[-237.42765808 77.18820953]
[-226.11207581 67.50280762]
[-211.24626160 72.91740417]
[-196.44192505 70.50246429]
[-181.63760376 68.08752441]
[-170.32203674 58.40211868]
[-155.45620728 63.81671524]
[-140.65188599 61.40177917]
[-125.84755707 58.98683929]
[-119.77426147 54.82367325]
[-110.85838318 56.63053131]
[-96.02715302 54.38673782]
[-81.19592285 52.14294815]
[-66.36469269 49.89915848]
[-62.42665100 35.42532349]
[-74.07656860 25.97654343]
[-85.72648621 16.52776527]
[-97.37640381 7.07898617]
[-109.02632141 -2.36979294]
[-130.37178040 -4.50793314]
[-136.79646301 -24.14121246]
[-148.76672363 -33.18073273]
[-160.73696899 -42.22025299]
[-176.76089478 -41.43680573]
[-187.25559998 -53.57107544]
[-184.17047119 -69.31469727]
[-169.87213135 -76.59049988]
[-155.32907104 -69.81712341]
[-151.69744873 -54.19050980]
[-139.72720337 -45.15098953]
[-127.75693512 -36.11146927]
[-119.34221649 -38.73910141]
[-110.52342224 -37.19689560]
[-103.28117371 -31.70375061]
[-99.30004120 -23.37979698]
[-99.57754517 -14.01971054]
[-87.92762756 -4.57093096]
[-76.27770996 4.87784815]
[-64.62779236 14.32662678]
[-52.97787094 23.77540588]
[-46.44689178 20.08809471]
[-53.82151413 7.02612925]
[-61.19613647 -6.03583622]
[-68.57054138 -19.09792328]
[-55.50833130 -26.47211266]
[-48.13417053 -13.41045856]
[-40.75954819 -0.34849307]
[-33.38492584 12.71347237]
[-26.85394096 9.02616119]
[-28.92628670 -5.82999516]
[-30.99863243 -20.68615150]
[-33.07097626 -35.54230881]
[-35.14332199 -50.39846420]
[-37.21566772 -65.25462341]
[-39.28801346 -80.11077881]
[-41.36035919 -94.96693420]
[-43.43270493 -109.82308960]
[-55.31730270 -120.59972382]
[-54.15795898 -136.60083008]
[-40.84402084 -145.55172729]
[-25.58880234 -140.58605957]
[-20.09480286 -125.51305389]
[-28.57654762 -111.89543915]
[-26.50420189 -97.03927612]
[-24.43185806 -82.18312073]
[-22.35951233 -67.32696533]
[-20.28716660 -52.47080994]
[-18.21482086 -37.61465454]
[-16.14247513 -22.75849724]
[-14.07013035 -7.90234041]
[-11.99778557 6.95381594]
[-3.44941545 19.27961731]
[9.73834801 26.42684555]
[22.92611313 33.57407379]
[36.11387634 40.72130585]
[49.30163956 47.86853409]
[119.25775146 91.32157135]
[134.03320312 93.90733337]
[148.80863953 96.49309540]
[163.58409119 99.07885742]
[180.03627014 85.92878723]
[200.53770447 89.23105621]
[211.70541382 106.38584900]
[226.58451843 108.28647614]
[241.46360779 110.18709564]
[256.34271240 112.08771515]
[271.22180176 113.98834229]
[276.95352173 98.51293182]
[286.14031982 84.81508636]
[298.26892090 73.65212250]
[312.66366577 65.63993835]
[328.52389526 61.21907806]
[344.96871948 60.63048935]
[361.08584595 63.90238190]
[375.98217773 70.84893036]
[388.83334351 81.08081818]
[398.92929077 94.02703857]
[412.50759888 87.65289307]
[426.08590698 81.27874756]
[439.66418457 74.90460205]
[453.24249268 68.53045654]
[466.82080078 62.15630722]
[480.39910889 55.78216171]
[493.97741699 49.40801620]
[507.55569458 43.03387070]
[521.13403320 36.65972519]
[524.07727051 32.43664551]
[527.95056152 29.98646545]
[531.93243408 29.36798859]
[535.29492188 30.30909920]
[549.08587646 24.40917206]
[562.87683105 18.50924492]
[576.66784668 12.60931873]
[582.31341553 -2.15220666]
[596.77734375 -8.52175999]
[611.47833252 -2.72039843]
[617.69464111 11.81003380]
[611.73815918 26.44888878]
[597.14282227 32.51119232]
[582.56774902 26.40028954]
[568.77679443 32.30021667]
[554.98583984 38.20014191]
[541.19482422 44.10007095]
[527.50817871 50.23802567]
[513.92987061 56.61217117]
[500.35156250 62.98632050]
[486.77325439 69.36046600]
[473.19494629 75.73461151]
[459.61663818 82.10875702]
[446.03833008 88.48290253]
[432.46005249 94.85704803]
[418.88174438 101.23119354]
[405.30343628 107.60533905]
[407.12283325 113.82565308]
[408.35650635 120.18808746]
[408.99377441 126.63761139]
[409.02914429 133.11845398]
[408.46234131 139.57455444]
[407.29818726 145.95007324]
[421.46459961 150.88088989]
[435.63101196 155.81170654]
[449.79742432 160.74252319]
[463.96380615 165.67333984]
[478.13021851 170.60415649]
[492.29663086 175.53497314]
[506.41357422 168.42950439]
[521.39367676 173.46661377]
[528.34948730 187.65788269]
[523.15429688 202.58387756]
[508.89025879 209.38926697]
[494.02001953 204.03654480]
[487.36581421 189.70138550]
[473.19940186 184.77056885]
[459.03298950 179.83975220]
[444.86660767 174.90893555]
[430.70019531 169.97811890]
[416.53378296 165.04728699]
[402.36737061 160.11647034]
[400.04367065 164.59124756]
[397.40249634 168.88627625]
[394.45767212 172.97911072]
[391.22460938 176.84829712]
[387.72027588 180.47360229]
[396.89746094 192.33865356]
[406.07461548 204.20372009]
[415.25180054 216.06877136]
[424.42895508 227.93382263]
[438.99227905 234.11604309]
[440.65875244 248.91712952]
[449.83590698 260.78219604]
[459.01309204 272.64724731]
[474.38485718 278.36047363]
[476.85577393 294.57238770]
[463.88400269 304.60559082]
[448.81375122 298.13873291]
[447.14804077 281.82440186]
[437.97085571 269.95935059]
[428.79370117 258.09429932]
[414.88677979 252.76075745]
[412.56390381 237.11099243]
[403.38671875 225.24594116]
[394.20956421 213.38087463]
[385.03237915 201.51582336]
[375.85522461 189.65077209]
[358.86425781 197.22575378]
[340.46166992 200.03961182]
[321.95678711 197.88491821]
[304.66815186 190.90808105]
[289.82949829 179.59931946]
[278.50177002 164.75825500]
[271.49719238 147.43739319]
[269.32119751 128.86744690]
[254.44209290 126.96681976]
[239.56298828 125.06619263]
[224.68388367 123.16557312]
[209.80479431 121.26495361]
[204.57398987 128.92269897]
[196.87704468 134.19845581]
[187.73561096 136.34121704]
[178.38162231 135.01928711]
[170.09124756 130.37080383]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 17]
[6 16]
[8 15]
[9 14]
[19 31]
[20 30]
[22 29]
[23 28]
[33 146]
[34 145]
[35 144]
[36 143]
[37 142]
[39 84]
[40 83]
[41 82]
[42 81]
[43 79]
[44 78]
[45 77]
[47 75]
[48 74]
[49 73]
[51 71]
[52 70]
[53 69]
[55 68]
[56 67]
[57 66]
[58 65]
[59 64]
[85 110]
[86 109]
[87 108]
[88 107]
[89 106]
[91 101]
[92 100]
[93 99]
[119 141]
[120 140]
[121 139]
[122 138]
[123 137]
[124 136]
[125 135]
[126 134]
[127 133]
[153 266]
[154 265]
[155 264]
[156 263]
[157 262]
[167 203]
[168 202]
[169 201]
[170 200]
[171 199]
[172 198]
[173 197]
[174 196]
[175 195]
[176 194]
[180 193]
[181 192]
[182 191]
[183 190]
[209 228]
[210 227]
[211 226]
[212 225]
[213 224]
[214 223]
[215 222]
[233 254]
[234 253]
[235 252]
[236 251]
[237 250]
[239 248]
[240 247]
[241 246]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
