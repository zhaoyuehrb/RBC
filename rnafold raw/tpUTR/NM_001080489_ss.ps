%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 16:19:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAGGCUGGACCUCCUCCAUUCUGUCCCCCUUGAUGUCGCCCUCUCCUUUCCUUCCUGCAAACCCCCACCCAGGCCCAGAGAUCUCCAAAGACUGAGGACUUAGGCACUUCACACAUCCUGCUGAGGGGGGACCCAAGACAGGUUUGGGACCAAACCUACAUGUCUGUAUGUCAUCAAAGUUGGCCUAAUAAAUGCAUAACCUCUCAAUGAA\
) } def
/len { sequence length } bind def

/coor [
[99.66957092 225.17689514]
[111.92658997 215.80838013]
[110.60706329 200.86653137]
[109.28754425 185.92468262]
[107.96801758 170.98283386]
[106.64849854 156.04098511]
[97.23320770 149.05342102]
[90.43252563 140.71992493]
[84.43894958 154.47044373]
[78.44537354 168.22097778]
[72.45179749 181.97151184]
[76.95630646 197.36920166]
[67.60893250 210.40785217]
[51.58018875 211.08531189]
[41.16595459 198.88189697]
[44.35513687 183.15902710]
[58.70127106 175.97793579]
[64.69484711 162.22740173]
[70.68841553 148.47688293]
[76.68199158 134.72634888]
[67.13475037 125.87516022]
[60.77125931 114.51738739]
[58.20796204 101.75326538]
[59.69316864 88.81930542]
[65.08300781 76.96844482]
[54.24543762 66.59796143]
[43.40786362 56.22747421]
[32.57028961 45.85698700]
[21.73271370 35.48650360]
[10.89514065 25.11601639]
[0.05756628 14.74552917]
[-10.78000832 4.37504339]
[-22.55635262 -4.91568851]
[-35.16432190 -13.04213428]
[-47.77228928 -21.16858101]
[-63.56354904 -22.14156151]
[-70.06943512 -35.54016876]
[-82.67740631 -43.66661453]
[-91.58371735 -45.68471909]
[-95.40959167 -52.00603867]
[-107.89691162 -60.31669235]
[-120.38422394 -68.62734222]
[-136.16204834 -62.52872467]
[-152.30548096 -66.99263763]
[-162.50425720 -80.06864166]
[-162.89460754 -96.48081207]
[-175.50257874 -104.60725403]
[-188.11054993 -112.73370361]
[-200.71852112 -120.86014557]
[-213.32649231 -128.98658752]
[-226.60044861 -135.97244263]
[-240.43748474 -141.76350403]
[-254.31665039 -147.45286560]
[-268.23721313 -153.04019165]
[-288.04586792 -149.29328918]
[-299.30963135 -165.01161194]
[-313.38821411 -170.18786621]
[-327.46679688 -175.36412048]
[-341.54534912 -180.54039001]
[-352.47052002 -169.88188171]
[-366.94104004 -165.02728271]
[-382.08377075 -166.94047546]
[-394.89212036 -175.24160767]
[-402.82299805 -188.28247070]
[-404.30169678 -203.47378540]
[-399.03463745 -217.79931641]
[-388.06759644 -228.41471863]
[-373.57809448 -233.21229553]
[-358.44299316 -231.23947144]
[-345.66744995 -222.88796997]
[-337.78796387 -209.81599426]
[-336.36911011 -194.61895752]
[-322.29052734 -189.44270325]
[-308.21194458 -184.26644897]
[-294.13336182 -179.09019470]
[-285.28436279 -184.19419861]
[-274.86782837 -183.57308960]
[-266.33627319 -177.19091797]
[-262.64987183 -166.96073914]
[-248.72932434 -161.37341309]
[-241.35266113 -161.79904175]
[-234.64640808 -155.60054016]
[-220.80937195 -149.80946350]
[-229.32130432 -162.16046143]
[-231.71574402 -176.96812439]
[-227.53018188 -191.37231445]
[-217.57307434 -202.59088135]
[-203.76765442 -208.45692444]
[-188.78045654 -207.83740234]
[-175.50627136 -200.85200500]
[-166.50901794 -188.84992981]
[-163.52655029 -174.14942932]
[-167.13490295 -159.58990479]
[-176.63714600 -147.98355103]
[-190.19789124 -141.57214355]
[-205.20004272 -141.59455872]
[-192.59207153 -133.46810913]
[-179.98410034 -125.34166718]
[-167.37612915 -117.21522522]
[-154.76817322 -109.08877563]
[-142.82350159 -115.04977417]
[-129.38533020 -114.32499695]
[-117.96891022 -106.99694061]
[-111.61351013 -94.88940430]
[-112.07357025 -81.11466217]
[-99.58625793 -72.80400848]
[-87.09893799 -64.49335480]
[-74.55095673 -56.27458572]
[-61.94298935 -48.14813995]
[-47.05353928 -47.75641632]
[-39.64584351 -33.77655029]
[-27.03787613 -25.65010262]
[-14.42990685 -17.52365685]
[-20.94304085 -31.03584099]
[-21.47738266 -46.02632141]
[-15.94284630 -59.96794510]
[-5.27246857 -70.51038361]
[8.73490047 -75.87635040]
[23.71784401 -75.16123962]
[37.15048218 -68.48559570]
[46.76829147 -56.97482681]
[50.94986343 -42.56946564]
[48.99025345 -27.69801712]
[41.21981812 -14.86757088]
[28.94853210 -6.24112844]
[14.24512959 -3.27296925]
[-0.40952152 -6.46253109]
[10.42805290 3.90795541]
[21.26562691 14.27844143]
[32.10319901 24.64892769]
[42.94077682 35.01941299]
[53.77835083 45.38990021]
[64.61592102 55.76038742]
[75.45349884 66.13087463]
[96.25441742 54.67440414]
[121.91041565 56.02469635]
[144.61175537 71.79000854]
[156.42361450 98.91812897]
[171.01171875 95.42715454]
[185.59983826 91.93618011]
[200.18795776 88.44520569]
[214.77607727 84.95423126]
[229.25541687 81.03650665]
[243.61351013 76.69541168]
[257.97161865 72.35430908]
[272.32971191 68.01321411]
[286.68780518 63.67211533]
[301.04589844 59.33101654]
[311.86651611 47.00842667]
[327.89334106 50.48297119]
[332.63937378 66.18033600]
[321.22225952 77.95242310]
[305.38699341 73.68910980]
[291.02890015 78.03021240]
[276.67080688 82.37130737]
[262.31271362 86.71240234]
[247.95460510 91.05350494]
[233.59651184 95.39459991]
[232.15547180 97.79656982]
[229.67724609 99.77312469]
[226.31884766 100.92676544]
[222.37803650 100.92401886]
[218.26704407 99.54235077]
[203.67892456 103.03331757]
[189.09082031 106.52429199]
[174.50270081 110.01526642]
[159.91458130 113.50624084]
[156.85336304 128.19055176]
[168.83143616 137.21972656]
[180.80949402 146.24891663]
[192.78755188 155.27809143]
[205.21353149 163.68017578]
[218.05462646 171.43299866]
[230.89572144 179.18580627]
[243.73681641 186.93862915]
[258.47366333 181.70803833]
[273.10678101 187.22224426]
[280.72680664 200.87760925]
[277.73583984 216.22648621]
[265.54611206 226.02160645]
[249.91323853 225.63801575]
[238.21858215 215.25683594]
[235.98400879 199.77972412]
[223.14291382 192.02691650]
[210.30180359 184.27409363]
[197.46070862 176.52127075]
[201.16023254 191.05790710]
[194.76210022 204.62490845]
[181.19245911 211.01748657]
[166.65734863 207.31201172]
[157.80435181 195.20315552]
[158.68234253 180.22886658]
[168.88978577 169.23759460]
[183.75837708 167.25614929]
[171.78030396 158.22697449]
[159.80224609 149.19778442]
[147.82418823 140.16860962]
[141.26573181 143.80682373]
[148.54194641 156.92385864]
[135.42480469 164.19987488]
[128.14880371 151.08325195]
[121.59034729 154.72146606]
[122.90986633 169.66331482]
[124.22939301 184.60516357]
[125.54891205 199.54701233]
[126.86843872 214.48886108]
[140.57762146 221.56428528]
[148.26545715 234.93966675]
[147.47877502 250.34695435]
[138.46861267 262.86975098]
[124.11006927 268.51208496]
[108.98490906 265.47348022]
[97.91951752 254.72355652]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 206]
[3 205]
[4 204]
[5 203]
[6 202]
[8 20]
[9 19]
[10 18]
[11 17]
[25 134]
[26 133]
[27 132]
[28 131]
[29 130]
[30 129]
[31 128]
[32 127]
[33 113]
[34 112]
[35 111]
[37 109]
[38 108]
[40 107]
[41 106]
[42 105]
[46 100]
[47 99]
[48 98]
[49 97]
[50 96]
[51 83]
[52 82]
[53 80]
[54 79]
[56 75]
[57 74]
[58 73]
[59 72]
[138 167]
[139 166]
[140 165]
[141 164]
[142 163]
[143 158]
[144 157]
[145 156]
[146 155]
[147 154]
[148 153]
[168 197]
[169 196]
[170 195]
[171 194]
[172 186]
[173 185]
[174 184]
[175 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
