%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 06:29:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUUCAUAAAUAAUGCCUAUGAUCACCUUGCAUGGACAGCAAUCCUGUAAACAUCACAGAGUGGCAUCAUUUGUAUAAUUAUAUGCAUUGUUGUAGUUUGCACCUGUUGGUUUUAAUGUGCAUGUGAAUGGCCUAGAGAACCUAUUUUUGUGUCUAAAGUUUACAAUAAAUGUAUUUAACACCA\
) } def
/len { sequence length } bind def

/coor [
[-79.63568115 202.19699097]
[-88.77294159 202.42941284]
[-97.72244263 200.63090515]
[-106.03903198 196.89627075]
[-113.31021881 191.41647339]
[-119.17665100 184.46887207]
[-123.34983063 176.40325928]
[-138.09169006 179.17414856]
[-152.83354187 181.94503784]
[-167.57539368 184.71592712]
[-182.31723022 187.48681641]
[-197.05908203 190.25770569]
[-209.19247437 200.41110229]
[-223.12998962 195.15802002]
[-237.87184143 197.92890930]
[-252.61369324 200.69979858]
[-267.35556030 203.47068787]
[-282.09741211 206.24157715]
[-292.16268921 222.27154541]
[-310.43121338 225.81582642]
[-325.24404907 215.08654785]
[-339.88391113 218.35375977]
[-342.56298828 233.29023743]
[-350.73449707 246.02873230]
[-363.12704468 254.64492798]
[-377.83438110 257.85140991]
[-392.60873413 255.18998718]
[-405.20425415 247.09687805]
[-413.71838379 234.83152771]
[-428.35824585 238.09873962]
[-442.99810791 241.36593628]
[-457.63796997 244.63314819]
[-472.27783203 247.90034485]
[-479.99188232 252.83393860]
[-487.19247437 251.09689331]
[-501.88540649 254.11636353]
[-516.57836914 257.13583374]
[-525.06500244 270.46823120]
[-540.51129150 273.81311035]
[-553.75317383 265.18600464]
[-556.93457031 249.70524597]
[-548.16796875 236.55526733]
[-532.65441895 233.53773499]
[-519.59783936 242.44290161]
[-504.90490723 239.42341614]
[-490.21194458 236.40394592]
[-475.54501343 233.26049805]
[-460.90515137 229.99328613]
[-446.26531982 226.72608948]
[-431.62545776 223.45887756]
[-416.98559570 220.19168091]
[-414.49417114 205.47019958]
[-406.53469849 192.78979492]
[-394.29376221 184.09931946]
[-379.61865234 180.74847412]
[-364.73864746 183.27819824]
[-351.92651367 191.33374023]
[-343.15112305 203.71389771]
[-328.51126099 200.44670105]
[-324.61563110 189.69622803]
[-315.91769409 182.09008789]
[-304.50924683 179.61163330]
[-293.20947266 182.99200439]
[-284.86828613 191.49972534]
[-270.12643433 188.72883606]
[-255.38458252 185.95794678]
[-240.64273071 183.18705750]
[-225.90089417 180.41616821]
[-214.82192993 170.46096802]
[-199.82997131 175.51585388]
[-185.08813477 172.74496460]
[-170.34628296 169.97407532]
[-155.60443115 167.20318604]
[-140.86257935 164.43229675]
[-126.12072754 161.66140747]
[-120.71477509 141.12471008]
[-105.65234375 126.05326843]
[-84.98046875 120.59850311]
[-64.30494690 126.31418610]
[-49.27014542 141.71473694]
[-35.03593826 136.98321533]
[-20.80173302 132.25167847]
[-11.16484356 120.89476013]
[4.37140751 123.88398743]
[18.60561371 119.15245819]
[32.83982086 114.42092133]
[47.07402420 109.68939209]
[61.30823135 104.95786285]
[75.54243469 100.22633362]
[89.77664185 95.49480438]
[103.97038269 90.64323425]
[118.12265015 85.67197418]
[132.27491760 80.70070648]
[146.42716980 75.72944641]
[160.57943726 70.75817871]
[174.73170471 65.78691864]
[188.88395691 60.81565475]
[199.33993530 48.94201279]
[213.91218567 52.02399063]
[228.06445312 47.05273056]
[242.04074097 41.60631943]
[255.82510376 35.69098282]
[269.60946655 29.77564430]
[283.39382935 23.86030769]
[289.72592163 6.02286816]
[306.78384399 -1.41545558]
[323.57800293 5.82977152]
[337.15472412 -0.54774684]
[346.35580444 -13.41827965]
[361.16510010 -11.82636452]
[374.74182129 -18.20388222]
[388.31854248 -24.58139992]
[401.89526367 -30.95891953]
[415.47198486 -37.33643723]
[429.04867554 -43.71395493]
[432.07449341 -58.81861496]
[443.28317261 -69.12485504]
[458.23446655 -70.83457947]
[471.17071533 -63.50032806]
[476.61544800 -78.09459686]
[490.47503662 -84.36889648]
[504.35488892 -79.08823395]
[517.93157959 -85.46575165]
[531.50830078 -91.84326935]
[540.42742920 -105.60486603]
[556.78869629 -104.49138641]
[563.76110840 -89.64827728]
[554.17199707 -76.34486389]
[537.88580322 -78.26654816]
[524.30908203 -71.88903046]
[510.73239136 -65.51151276]
[505.93487549 -51.45735550]
[492.25698853 -44.79623795]
[477.54824829 -49.92361069]
[474.93371582 -35.28454590]
[464.07196045 -24.86886978]
[448.98339844 -22.82225227]
[435.42620850 -30.13723755]
[421.84948730 -23.75971985]
[408.27276611 -17.38220215]
[394.69604492 -11.00468349]
[381.11932373 -4.62716484]
[367.54263306 1.75035346]
[359.31262207 14.16472340]
[343.53225708 13.02897072]
[329.95553589 19.40648842]
[328.49502563 30.74736977]
[321.66262817 40.06541443]
[311.06796265 44.96927643]
[299.30319214 44.13130569]
[289.30917358 37.64467621]
[275.52481079 43.56001282]
[261.74044800 49.47534943]
[247.95606995 55.39068985]
[246.79486084 57.96490097]
[244.53283691 60.22889328]
[241.28491211 61.75689697]
[237.31939697 62.17332458]
[233.03570557 61.20499039]
[218.88345337 66.17625427]
[209.43974304 77.69432068]
[193.85522461 74.96791840]
[179.70295715 79.93917847]
[165.55070496 84.91044617]
[151.39843750 89.88170624]
[137.24617004 94.85297394]
[123.09391022 99.82423401]
[108.94165039 104.79549408]
[102.96945190 110.23724365]
[94.50817108 109.72901154]
[80.27397156 114.46054077]
[66.03976440 119.19207001]
[51.80555725 123.92359924]
[37.57135010 128.65513611]
[23.33714294 133.38665771]
[9.10293770 138.11819458]
[-1.55207753 149.81353760]
[-16.07020378 146.48588562]
[-30.30440903 151.21740723]
[-44.53861618 155.94894409]
[-44.34598923 165.16963196]
[-46.20175171 174.19168091]
[-50.00826263 182.56631470]
[-55.57098007 189.87818909]
[-62.60841370 195.76593018]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 75]
[8 74]
[9 73]
[10 72]
[11 71]
[12 70]
[14 68]
[15 67]
[16 66]
[17 65]
[18 64]
[21 59]
[22 58]
[29 51]
[30 50]
[31 49]
[32 48]
[33 47]
[35 46]
[36 45]
[37 44]
[80 180]
[81 179]
[82 178]
[84 176]
[85 175]
[86 174]
[87 173]
[88 172]
[89 171]
[90 170]
[91 168]
[92 167]
[93 166]
[94 165]
[95 164]
[96 163]
[97 162]
[99 160]
[100 159]
[101 154]
[102 153]
[103 152]
[104 151]
[107 146]
[108 145]
[110 143]
[111 142]
[112 141]
[113 140]
[114 139]
[115 138]
[119 134]
[122 131]
[123 130]
[124 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
