%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 14:39:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCAGAGCAUGGUCCUCCACCCUUCCUGCCAUUCUGCCCUGGGCUCCUCAGGUAGUUGGAAUUCCUGACUUAGGACUUGGGGUUGGGUCCAAGGUGCUUACAUCCCAGGGGCCUCAUGCCUAAGAUAGAGGGUGGGAGCGAACCCACAUGAACCAAUACAGCCCAGCUCCAACUAGAUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[145.67436218 240.43415833]
[141.64874268 254.88388062]
[137.62312317 269.33358765]
[133.59750366 283.78332520]
[129.57188416 298.23303223]
[136.17137146 312.85583496]
[128.72558594 327.06640625]
[112.94630432 329.96356201]
[100.93803406 319.32492065]
[101.91249847 303.31149292]
[115.12216949 294.20742798]
[119.14778900 279.75769043]
[123.17340851 265.30798340]
[127.19902802 250.85826111]
[131.22463989 236.40853882]
[135.34370422 226.22486877]
[141.64903259 218.67362976]
[149.14901733 214.13768005]
[156.81112671 212.68661499]
[149.27438354 199.71751404]
[141.73765564 186.74841309]
[134.20091248 173.77931213]
[126.66417694 160.81021118]
[119.12744141 147.84111023]
[111.59070587 134.87200928]
[99.71160889 136.74667358]
[87.86338806 134.68579102]
[77.31500244 128.91006470]
[69.19616699 120.03808594]
[64.37641144 109.02003479]
[49.38992691 109.65665436]
[34.40344238 110.29327393]
[25.10667992 119.25534058]
[12.59644985 119.46481323]
[3.60143113 111.35537720]
[-11.39370251 111.73741913]
[-26.38883591 112.11946869]
[-41.38397217 112.50151062]
[-56.37910461 112.88355255]
[-64.90091705 116.23685455]
[-71.63162231 113.14259338]
[-86.63108826 113.26995087]
[-101.63054657 113.39730835]
[-116.63000488 113.52467346]
[-132.41722107 119.70527649]
[-142.72663879 106.24598694]
[-132.64726257 92.61357880]
[-116.75736237 98.52521515]
[-101.75790405 98.39785004]
[-86.75844574 98.27049255]
[-71.75898743 98.14313507]
[-56.76115036 97.88842010]
[-41.76601410 97.50637817]
[-26.77088165 97.12432861]
[-11.77574730 96.74228668]
[3.21938682 96.36024475]
[17.65944481 86.40482330]
[33.76682663 95.30678558]
[48.75331116 94.67016602]
[63.73979568 94.03355408]
[63.95948792 87.71466827]
[65.30460358 81.31692505]
[67.80472565 75.04395294]
[71.45221710 69.10648346]
[61.07313156 58.27714539]
[50.69404984 47.44780350]
[40.31496429 36.61846161]
[29.93588257 25.78912163]
[14.61097908 18.53766060]
[17.33669472 1.80425656]
[34.17070389 -0.20881720]
[40.76522446 15.41003799]
[51.14430618 26.23937988]
[61.52339172 37.06872177]
[71.90247345 47.89806366]
[82.28155518 58.72740555]
[96.85964203 55.19477081]
[101.13004303 40.81549454]
[105.40045166 26.43621445]
[109.67085266 12.05693626]
[113.94126129 -2.32234144]
[118.21166992 -16.70162010]
[110.93747711 -30.47565079]
[115.47311401 -44.99744797]
[128.64936829 -51.84739304]
[132.91978455 -66.22666931]
[137.06794739 -80.64168549]
[141.09356689 -95.09140778]
[145.11918640 -109.54113007]
[149.14479065 -123.99084473]
[153.17041016 -138.44056702]
[143.23471069 -154.55024719]
[148.12242126 -172.50529480]
[164.28932190 -181.05763245]
[167.82194519 -195.63571167]
[171.35458374 -210.21379089]
[174.88722229 -224.79188538]
[169.74638367 -240.36441040]
[180.86262512 -252.42100525]
[196.80049133 -248.55885315]
[201.16448975 -232.75102234]
[189.46530151 -221.25924683]
[185.93266296 -206.68116760]
[182.40002441 -192.10308838]
[178.86740112 -177.52499390]
[186.79377747 -169.28195190]
[189.77751160 -158.11808777]
[186.96264648 -146.78675842]
[178.93836975 -138.14091492]
[167.62013245 -134.41494751]
[163.59451294 -119.96523285]
[159.56889343 -105.51551056]
[155.54327393 -91.06578827]
[151.51765442 -76.61607361]
[152.75411987 -69.31209564]
[147.29905701 -61.95626450]
[143.02865601 -47.57698822]
[150.33015442 -34.64548874]
[146.20419312 -20.00202370]
[132.59094238 -12.43121433]
[128.32054138 1.94806409]
[124.05013275 16.32734299]
[119.77973175 30.70661926]
[115.50932312 45.08589935]
[111.23891449 59.46517563]
[129.37037659 71.77375031]
[138.36149597 90.98764038]
[136.33045959 111.39937592]
[124.55980682 127.33526611]
[132.09654236 140.30436707]
[139.63328552 153.27346802]
[147.17001343 166.24256897]
[154.70675659 179.21166992]
[162.24348450 192.18077087]
[169.78022766 205.14987183]
[180.52105713 215.62052917]
[193.67790222 222.82450867]
[206.83476257 230.02848816]
[219.99160767 237.23245239]
[233.14846802 244.43643188]
[243.13739014 233.15951538]
[255.38554382 224.38848877]
[269.27853394 218.56333923]
[284.11950684 215.97622681]
[299.16406250 216.75692749]
[313.65753174 220.86628723]
[326.87295532 228.09817505]
[338.14746094 238.08984375]
[346.91549683 250.34010315]
[352.73730469 264.23449707]
[355.32080078 279.07611084]
[354.53646851 294.12045288]
[350.42361450 308.61294556]
[343.18850708 321.82662964]
[333.19412231 333.09869385]
[320.94171143 341.86376953]
[307.04589844 347.68222046]
[292.20367432 350.26211548]
[277.15951538 349.47412109]
[262.66802979 345.35775757]
[249.45610046 338.11947632]
[238.18644714 328.12234497]
[229.42434692 315.86782837]
[223.60928345 301.97058105]
[221.03295898 287.12774658]
[221.82460022 272.08377075]
[225.94448853 257.59329224]
[212.78764343 250.38931274]
[199.63078308 243.18533325]
[186.47393799 235.98136902]
[173.31707764 228.77738953]
[166.40640259 231.69157410]
[174.49885559 244.32139587]
[182.59130859 256.95120239]
[190.68376160 269.58102417]
[202.26808167 279.11010742]
[205.21452332 293.81787109]
[198.19479370 307.07394409]
[184.37345886 312.90240479]
[169.98127747 308.67572021]
[161.50634766 296.29928589]
[162.76930237 281.35238647]
[159.37454224 266.74157715]
[155.97979736 252.13076782]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 15]
[2 14]
[3 13]
[4 12]
[5 11]
[19 135]
[20 134]
[21 133]
[22 132]
[23 131]
[24 130]
[25 129]
[30 60]
[31 59]
[32 58]
[35 56]
[36 55]
[37 54]
[38 53]
[39 52]
[41 51]
[42 50]
[43 49]
[44 48]
[64 76]
[65 75]
[66 74]
[67 73]
[68 72]
[77 125]
[78 124]
[79 123]
[80 122]
[81 121]
[82 120]
[85 117]
[86 116]
[87 114]
[88 113]
[89 112]
[90 111]
[91 110]
[94 105]
[95 104]
[96 103]
[97 102]
[136 171]
[137 170]
[138 169]
[139 168]
[140 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
