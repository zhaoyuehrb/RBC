%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 18:46:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGGGCUGCAGAAGAGCUCUGGUACUGAAUGGUCAAAAACCUGCUACAGCCUGAUGCUUAACUAUUUCCCCUUCCUUUCAUUCCACUCAUGGGUGGACAGGGACCACAAAGACUCAUGGGGCUUCCCCAGAACUUUGUGCUUGAUGGAGCACCCCAGAUGGAAGCCUUCUUUUUCUCCUUUACCUCAUAUUGUAAUAAAGCUCUGAUUUCUGACUCUUUA\
) } def
/len { sequence length } bind def

/coor [
[43.77901459 265.90753174]
[51.71834183 253.06738281]
[62.82826614 242.84622192]
[76.28437042 236.00254822]
[73.33199310 221.29595947]
[70.37961578 206.58938599]
[67.42724609 191.88279724]
[64.47486877 177.17622375]
[50.51731110 171.68199158]
[38.33234406 180.42994690]
[26.14737511 189.17788696]
[23.45725441 204.52067566]
[10.97534657 213.21875000]
[-3.63507390 210.55958557]
[-15.82004166 219.30752563]
[-20.96077347 226.84809875]
[-28.23990440 228.09161377]
[-40.54744339 236.66625977]
[-52.85498047 245.24089050]
[-59.75508881 259.47814941]
[-74.62081909 260.40512085]
[-86.92835999 268.97976685]
[-99.23589325 277.55441284]
[-111.54343414 286.12905884]
[-123.85097504 294.70370483]
[-109.30105591 298.35058594]
[-101.47930908 311.14984131]
[-104.87133789 325.76126099]
[-117.53189850 333.80554199]
[-132.20039368 330.66940308]
[-140.46472168 318.15139771]
[-137.58598328 303.43109131]
[-150.57637024 310.93109131]
[-163.56674194 318.43109131]
[-169.09115601 333.49298096]
[-184.35636902 338.42785645]
[-197.65220642 329.45010376]
[-198.77925110 313.44668579]
[-186.87292480 302.69406128]
[-171.06674194 305.44073486]
[-158.07637024 297.94073486]
[-145.08598328 290.44073486]
[-132.42561340 282.39614868]
[-120.11808014 273.82150269]
[-107.81053925 265.24685669]
[-95.50299835 256.67221069]
[-83.19545746 248.09757996]
[-77.17567444 234.47364807]
[-61.42962646 232.93336487]
[-49.12208557 224.35871887]
[-36.81454849 215.78407288]
[-24.56798744 207.12255859]
[-12.38301945 198.37461853]
[-10.23069191 183.68096924]
[2.00198078 174.63574219]
[17.39942932 176.99291992]
[29.58439636 168.24497986]
[41.76936340 159.49702454]
[42.66933823 152.05122375]
[27.78203392 153.88648987]
[13.91686630 159.60986328]
[0.35539198 153.19999695]
[-4.02365875 138.85343933]
[3.64669013 125.96290588]
[18.34464264 122.96787262]
[30.44797325 131.83016968]
[44.46928406 137.15960693]
[45.36925507 129.71380615]
[35.61946487 118.31460571]
[25.86967850 106.91541290]
[16.11988831 95.51622009]
[0.60423988 94.13694763]
[-9.12104702 82.43765259]
[-7.71050549 67.65435791]
[-17.46029472 56.25516129]
[-27.21008301 44.85596848]
[-42.05993271 39.39771652]
[-44.45254898 24.69653702]
[-54.20233917 13.29734325]
[-63.95212555 1.89814949]
[-73.70191193 -9.50104427]
[-83.45170593 -20.90023804]
[-99.08583832 -20.57179832]
[-111.24093628 -30.40986443]
[-114.17774200 -45.76919937]
[-106.50957489 -59.39759827]
[-91.85711670 -64.86014557]
[-77.13880157 -59.57759476]
[-69.30417633 -46.04420471]
[-72.05251312 -30.65002632]
[-62.30272293 -19.25083351]
[-52.55293274 -7.85163927]
[-42.80314255 3.54755425]
[-33.05335617 14.94674778]
[-18.90087509 19.58965492]
[-15.81088924 35.10617828]
[-6.06110048 46.50537491]
[3.68868828 57.90456772]
[18.51192474 58.80303574]
[28.56198311 70.22454834]
[27.51908302 85.76643372]
[37.26887131 97.16562653]
[47.01866150 108.56481934]
[56.76844788 119.96401215]
[64.24401855 70.16587830]
[111.37283325 55.92656326]
[116.36993408 41.78340149]
[121.36702728 27.64024162]
[126.36412811 13.49707890]
[131.36122131 -0.64608252]
[136.35832214 -14.78924465]
[141.35542297 -28.93240547]
[136.50971985 -40.88004303]
[140.95701599 -52.55378342]
[151.80543518 -57.89384079]
[157.00216675 -71.96487427]
[157.03878784 -81.09098053]
[162.37327576 -86.19738007]
[167.76861572 -100.19346619]
[173.16394043 -114.18955231]
[178.55928040 -128.18563843]
[183.95460510 -142.18171692]
[184.01008606 -159.13557434]
[200.31674194 -163.77555847]
[209.28952026 -149.39064026]
[197.95069885 -136.78639221]
[192.55535889 -122.79030609]
[187.16003418 -108.79421997]
[181.76469421 -94.79813385]
[176.36936951 -80.80204773]
[171.07319641 -66.76814270]
[165.87646484 -52.69710541]
[169.76704407 -35.58131027]
[155.49858093 -23.93530846]
[150.50148010 -9.79214764]
[145.50437927 4.35101461]
[140.50729370 18.49417686]
[135.51019287 32.63733673]
[130.51309204 46.78049850]
[125.51599884 60.92366028]
[130.14460754 66.82501984]
[135.73736572 52.90665054]
[150.58738708 50.79084778]
[159.84481812 62.59339142]
[154.25231934 76.51186371]
[139.40180969 78.62773132]
[144.03041077 84.52909088]
[158.95687866 83.04563141]
[173.88334656 81.56217194]
[188.80981445 80.07871246]
[192.98339844 67.86680603]
[201.43278503 58.17378998]
[212.87751770 52.41483307]
[225.60346985 51.41297531]
[237.71942139 55.28169250]
[247.43821716 63.41327286]
[253.34031677 74.57398224]
[268.30279541 73.51351929]
[283.26525879 72.45305634]
[296.48388672 63.75947952]
[309.72631836 70.57762909]
[324.68878174 69.51716614]
[340.06082153 62.36616898]
[351.18777466 75.15786743]
[341.97619629 89.39105988]
[325.74923706 84.47963715]
[310.78677368 85.54010010]
[298.63836670 94.15782166]
[284.32571411 87.41552734]
[269.36325073 88.47599030]
[254.40077209 89.53645325]
[247.42936707 105.28653717]
[233.36599731 115.38431549]
[216.03630066 116.97169495]
[200.21118164 109.52098083]
[190.29327393 95.00518036]
[175.36680603 96.48863983]
[160.44033813 97.97209930]
[145.51387024 99.45555878]
[137.36077881 127.79814148]
[113.13565826 145.77098083]
[125.32062531 154.51893616]
[137.50559998 163.26687622]
[149.69056702 172.01483154]
[164.37789917 167.00866699]
[179.19277954 171.62376404]
[188.43856812 184.08551025]
[188.56005859 199.60211182]
[179.51055908 212.20712280]
[164.76977539 217.05364990]
[150.00582886 212.27810669]
[140.89578247 199.71679688]
[140.94261169 184.19979858]
[128.75764465 175.45184326]
[116.57267761 166.70390320]
[104.38771057 157.95594788]
[98.08614349 162.02293396]
[98.82909393 177.00451660]
[85.48301697 170.15687561]
[79.18144989 174.22384644]
[82.13382721 188.93043518]
[85.08619690 203.63700867]
[88.03857422 218.34359741]
[90.99094391 233.05017090]
[106.04578400 234.17022705]
[120.23976135 239.31158447]
[132.51960754 248.09269714]
[141.97406006 259.86196899]
[147.90153503 273.74606323]
[149.86218262 288.71463013]
[147.71051025 303.65695190]
[141.60618591 317.46420288]
[132.00219727 329.11175537]
[119.61120605 337.73532104]
[105.35271454 342.69497681]
[90.28480530 343.62265015]
[75.52560425 340.44955444]
[62.17035294 333.41110229]
[51.21009445 323.02960205]
[43.45815659 310.07543945]
[39.48978043 295.50991821]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 204]
[5 203]
[6 202]
[7 201]
[8 200]
[9 58]
[10 57]
[11 56]
[14 53]
[15 52]
[17 51]
[18 50]
[19 49]
[21 47]
[22 46]
[23 45]
[24 44]
[25 43]
[32 42]
[33 41]
[34 40]
[68 104]
[69 103]
[70 102]
[71 101]
[74 98]
[75 97]
[76 96]
[78 94]
[79 93]
[80 92]
[81 91]
[82 90]
[106 140]
[107 139]
[108 138]
[109 137]
[110 136]
[111 135]
[112 134]
[115 132]
[116 131]
[118 130]
[119 129]
[120 128]
[121 127]
[122 126]
[147 179]
[148 178]
[149 177]
[150 176]
[157 171]
[158 170]
[159 169]
[161 167]
[162 166]
[181 196]
[182 195]
[183 194]
[184 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
