%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 03:10:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUAUCUGAUGAGAAUUUUCAUAUAUGAAUUAUUUAUUGUACAUGUGUGUUAUUAAAGAUAACUUAUACUUUAUAAAUGAAAAAAUACAUUUCAGUUAUACAUUAAGAA\
) } def
/len { sequence length } bind def

/coor [
[91.87981415 118.81639099]
[85.74282837 114.72165680]
[81.45352173 108.71906281]
[79.56774902 101.58650970]
[65.22524261 97.19416809]
[50.88274384 92.80182648]
[36.54024506 88.40948486]
[22.19774246 84.01714325]
[7.73668814 80.03244019]
[-6.83133793 76.45856476]
[-21.39936447 72.88468170]
[-35.96739197 69.31080627]
[-50.53541565 65.73692322]
[-43.63962936 79.05789185]
[-46.68761063 93.74494934]
[-58.31461334 103.22190857]
[-73.31459808 103.24541473]
[-84.97124481 93.80493927]
[-88.06523895 79.12750244]
[-81.21122742 65.78499603]
[-67.47602081 59.75143051]
[-81.05564880 53.38011169]
[-94.63527679 47.00878906]
[-108.21490479 40.63747025]
[-121.79453278 34.26615143]
[-135.37416077 27.89483070]
[-148.95378113 21.52350998]
[-162.53341675 15.15219021]
[-178.31327820 16.29514694]
[-186.54893494 3.88453484]
[-200.12855530 -2.48678493]
[-213.65228271 5.12166500]
[-229.06141663 3.29454756]
[-240.43081665 -7.26557302]
[-243.38874817 -22.49811554]
[-236.79779053 -36.54585648]
[-223.19232178 -44.00714874]
[-207.80392456 -42.01298141]
[-196.54974365 -31.33014488]
[-193.75724792 -16.06641197]
[-180.17761230 -9.69509220]
[-165.36904907 -11.29376793]
[-156.16209412 1.57256293]
[-142.58245850 7.94388294]
[-129.00283813 14.31520271]
[-115.42321014 20.68652344]
[-101.84358215 27.05784225]
[-88.26395416 33.42916107]
[-74.68432617 39.80048370]
[-61.10469818 46.17180252]
[-46.96153641 51.16889954]
[-32.39351273 54.74277878]
[-17.82548523 58.31665802]
[-3.25745940 61.89053726]
[11.31056690 65.46441650]
[15.89932251 63.71681976]
[21.63957977 64.93988800]
[26.59008408 69.67464447]
[40.93258667 74.06698608]
[55.27508545 78.45932770]
[69.61758423 82.85166931]
[83.96009064 87.24401093]
[104.60066986 80.02932739]
[120.00424194 95.54755402]
[134.82287598 97.87310028]
[149.64151001 100.19865417]
[164.46012878 102.52420044]
[172.15850830 92.46431732]
[183.36628723 86.71847534]
[195.88275146 86.34471130]
[207.28021240 91.35301971]
[215.37483215 100.71553802]
[218.64500427 112.57683563]
[233.30833435 115.73702240]
[247.97164917 118.89721680]
[262.63497925 122.05740356]
[277.29830933 125.21759033]
[292.41882324 120.56136322]
[303.23034668 130.80638123]
[317.89367676 133.96656799]
[332.55700684 137.12675476]
[347.22033691 140.28694153]
[361.88366699 143.44712830]
[374.12164307 133.71234131]
[389.75244141 134.17314148]
[401.39566040 144.61196899]
[403.55377197 160.09992981]
[395.20773315 173.32406616]
[380.29830933 178.04035950]
[365.86529541 172.02191162]
[358.72348022 158.11045837]
[344.06015015 154.95027161]
[329.39682007 151.79008484]
[314.73348999 148.62989807]
[300.07015991 145.46971130]
[285.99847412 150.35197449]
[274.13812256 139.88092041]
[259.47479248 136.72073364]
[244.81146240 133.56054688]
[230.14813232 130.40036011]
[215.48481750 127.24016571]
[203.02270508 139.58712769]
[185.50578308 142.11355591]
[169.78910828 133.64396667]
[162.13458252 117.34283447]
[147.31594849 115.01728058]
[132.49732971 112.69173431]
[117.67869568 110.36618805]
[112.86234283 115.95475006]
[106.37908936 119.47565460]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 62]
[5 61]
[6 60]
[7 59]
[8 58]
[9 55]
[10 54]
[11 53]
[12 52]
[13 51]
[21 50]
[22 49]
[23 48]
[24 47]
[25 46]
[26 45]
[27 44]
[28 43]
[30 41]
[31 40]
[64 108]
[65 107]
[66 106]
[67 105]
[73 101]
[74 100]
[75 99]
[76 98]
[77 97]
[79 95]
[80 94]
[81 93]
[82 92]
[83 91]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
