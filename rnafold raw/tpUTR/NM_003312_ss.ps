%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 16:32:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGUGACCUCUUCUGCUUACUGUAACUGCGGCCGGUUUAGUGACCCCAUGACUUACAGCCGGUUCUUACCUCUUAGGUGAAGGAGAUGACAUGUUUUUAGAAUUGCUGUGCAAGGCUCACCCUCUCUCUGUCAACACUGGAAUAAACUUUGCCUUUUCUGAGUAGUG\
) } def
/len { sequence length } bind def

/coor [
[314.73431396 157.23661804]
[301.34933472 143.61564636]
[296.67044067 125.01712799]
[282.07357788 121.56291199]
[267.47671509 118.10869598]
[252.87985229 114.65448761]
[238.71289062 119.25299072]
[227.06535339 108.54572296]
[212.89839172 113.14422607]
[201.25085449 102.43695831]
[186.65399170 98.98274231]
[172.05712891 95.52853394]
[157.46026611 92.07431793]
[142.86340332 88.62010193]
[128.26654053 85.16589355]
[97.56347656 130.05018616]
[86.24385071 139.89224243]
[89.83045197 154.77159119]
[86.08020782 169.61053467]
[75.85490417 180.99919128]
[61.50423050 186.32055664]
[46.32587433 184.35179138]
[33.80770493 175.54530334]
[26.82630920 161.92477417]
[26.98596191 146.62010193]
[34.24997330 133.14817810]
[46.94912720 124.60475922]
[62.16525269 122.95305634]
[76.40179443 128.57261658]
[87.72142029 118.73056030]
[83.99647522 104.20043182]
[69.33792877 101.01814270]
[54.67937469 97.83585358]
[40.02082825 94.65357208]
[25.36227798 91.47128296]
[10.70372963 88.28899384]
[-3.95481896 85.10671234]
[-18.61336708 81.92442322]
[-37.47605515 88.95957184]
[-51.26476669 75.43733978]
[-66.03147125 72.80210876]
[-80.79817963 70.16687775]
[-91.21354675 81.54772186]
[-106.13428497 85.46882629]
[-120.79924011 80.67897797]
[-130.52888489 68.70660400]
[-132.21850586 53.37204742]
[-125.32897186 39.56850433]
[-112.05869293 31.70063782]
[-96.64217377 32.27905655]
[-83.99877167 41.11918640]
[-78.16294861 55.40017700]
[-63.39624405 58.03540421]
[-48.62953949 60.67063141]
[-40.76453018 54.07019043]
[-30.34397888 52.88521957]
[-20.80557060 57.75096893]
[-15.43108082 67.26587677]
[-0.77253222 70.44815826]
[13.88601685 73.63044739]
[28.54456520 76.81273651]
[43.20311356 79.99501801]
[57.86166382 83.17730713]
[72.52021027 86.35959625]
[87.17875671 89.54187775]
[96.80912781 78.04074860]
[106.43864441 66.54064178]
[100.73061371 52.66915131]
[95.02257538 38.79765701]
[89.31454468 24.92616272]
[83.60650635 11.05466843]
[77.89847565 -2.81682563]
[66.27967072 -15.16347313]
[74.92739868 -29.74610329]
[91.33406067 -25.47320366]
[91.76996613 -8.52486038]
[97.47800446 5.34663391]
[103.18603516 19.21812820]
[108.89407349 33.08962250]
[114.60210419 46.96111679]
[120.31013489 60.83261108]
[131.72074890 70.56903076]
[146.31761169 74.02323914]
[160.91447449 77.47745514]
[175.51133728 80.93167114]
[190.10820007 84.38587952]
[204.70506287 87.84009552]
[219.91610718 83.48865509]
[230.51956177 93.94886017]
[245.73060608 89.59741974]
[256.33407593 100.05762482]
[270.93093872 103.51183319]
[285.52780151 106.96604919]
[300.12466431 110.42026520]
[306.54574585 101.06137085]
[315.50219727 94.13340759]
[326.12420654 90.28849030]
[337.38665771 89.88034058]
[348.20776367 92.93182373]
[357.55328369 99.13430023]
[364.53509521 107.87876892]
[368.49575806 118.31563568]
[369.07037354 129.43724060]
[383.37030029 133.96627808]
[397.67022705 138.49533081]
[411.97015381 143.02438354]
[426.27005005 147.55343628]
[440.56997681 152.08248901]
[452.64089966 140.81077576]
[468.65472412 137.17370605]
[484.23141479 142.06925964]
[495.15921021 154.07469177]
[498.53326416 169.85847473]
[512.91491699 174.12092590]
[527.29650879 178.38339233]
[541.67816162 182.64584351]
[556.05981445 186.90830994]
[564.95062256 173.84761047]
[577.42303467 164.18040466]
[592.25195312 158.84114075]
[607.98535156 158.33982849]
[623.08679199 162.71345520]
[636.08508301 171.52348328]
[645.71783447 183.89981079]
[651.05395508 198.62667847]
[651.58367920 214.26210022]
[666.04205322 218.25648499]
[680.50042725 222.25088501]
[692.11071777 216.57231140]
[704.08923340 220.22558594]
[710.15203857 230.72236633]
[724.53369141 234.98483276]
[740.34539795 230.63491821]
[751.82672119 242.34434509]
[747.16668701 258.06744385]
[731.15911865 261.62963867]
[720.27117920 249.36645508]
[705.88958740 245.10400391]
[689.09216309 250.12501526]
[676.50604248 236.70925903]
[662.04766846 232.71487427]
[647.58929443 228.72047424]
[640.01696777 240.82072449]
[629.32562256 250.30270386]
[616.37860107 256.38882446]
[602.22448730 258.57620239]
[588.01257324 256.67810059]
[574.89947510 250.83993530]
[563.95489502 241.52807617]
[556.07427979 229.49269104]
[551.90600586 215.70729065]
[551.79736328 201.28993225]
[537.41571045 197.02748108]
[523.03405762 192.76501465]
[508.65243530 188.50256348]
[494.27081299 184.24011230]
[484.98645020 194.28535461]
[472.21527100 199.36672974]
[458.43545532 198.43670654]
[446.34747314 191.62025452]
[438.34503174 180.20155334]
[436.04092407 166.38240051]
[421.74099731 161.85336304]
[407.44110107 157.32431030]
[393.14117432 152.79525757]
[378.84124756 148.26620483]
[364.54132080 143.73715210]
[351.35855103 157.21514893]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 94]
[4 93]
[5 92]
[6 91]
[8 89]
[10 87]
[11 86]
[12 85]
[13 84]
[14 83]
[15 82]
[16 30]
[17 29]
[31 65]
[32 64]
[33 63]
[34 62]
[35 61]
[36 60]
[37 59]
[38 58]
[40 54]
[41 53]
[42 52]
[67 81]
[68 80]
[69 79]
[70 78]
[71 77]
[72 76]
[103 167]
[104 166]
[105 165]
[106 164]
[107 163]
[108 162]
[113 156]
[114 155]
[115 154]
[116 153]
[117 152]
[126 142]
[127 141]
[128 140]
[131 138]
[132 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
