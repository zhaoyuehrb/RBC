%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 12:50:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGGGGAAAACCUGUGCAAAUUAAUUCACAUACAUGGUUCAGAAAAUUCACAGCAGGAGGGCCGGGCGCAGUGGCUCACGCCUGUAAUCCCAGCACUUUGGGAGGCCGAGGCAGGCGGAUCACGAGGUCAGGAGAUCAAGACCAUCCUGGCUAUGGUGAAACCCCGUCUCUACUAA\
) } def
/len { sequence length } bind def

/coor [
[95.94684601 198.77592468]
[108.57059479 190.25765991]
[105.92218781 175.49331665]
[103.27378082 160.72897339]
[100.62536621 145.96461487]
[92.56266022 145.36323547]
[84.73002625 143.35856628]
[77.36975861 140.01261902]
[70.70954895 135.42890930]
[64.95542145 129.74920654]
[60.28538513 123.14923096]
[46.26741791 128.48745728]
[32.24945068 133.82566833]
[18.23148155 139.16387939]
[4.21351290 144.50210571]
[0.02470318 160.87420654]
[-12.96103573 171.42784119]
[-29.51205063 172.16592407]
[-43.11034393 162.99562073]
[-57.03136063 168.58178711]
[-70.95237732 174.16796875]
[-84.87339783 179.75413513]
[-89.28296661 184.74790955]
[-94.73667145 186.48086548]
[-99.38895416 185.28184509]
[-113.49945831 190.37042236]
[-127.60995483 195.45899963]
[-128.28297424 210.64503479]
[-134.72073364 224.41542053]
[-145.94152832 234.67028809]
[-160.23425293 239.84585571]
[-175.41938782 239.15284729]
[-189.18128967 232.69699097]
[-199.42140198 221.46272278]
[-204.57814026 207.16319275]
[-203.86517334 191.97898865]
[-197.39120483 178.22558594]
[-186.14347839 168.00025940]
[-171.83718872 162.86233521]
[-156.65393066 163.59527588]
[-142.90904236 170.08732605]
[-132.69854736 181.34849548]
[-118.58803558 176.25991821]
[-104.47753143 171.17134094]
[-90.45956421 165.83311462]
[-76.53855133 160.24694824]
[-62.61753082 154.66078186]
[-48.69651413 149.07460022]
[-46.64524078 135.86492920]
[-38.26119995 125.31411743]
[-25.65533829 120.25091553]
[-12.08775520 122.10023499]
[-1.12470424 130.48413086]
[12.89326382 125.14591980]
[26.91123199 119.80770111]
[40.92919922 114.46948242]
[54.94717026 109.13126373]
[55.34445953 89.09035492]
[64.23263550 71.12383270]
[54.25517273 59.92337036]
[44.27771378 48.72291183]
[34.30025101 37.52245331]
[24.32279015 26.32199669]
[14.34532833 15.12153816]
[-1.27901542 15.76488113]
[-13.62985039 6.17369270]
[-16.87548828 -9.12336063]
[-9.48344135 -22.90347862]
[5.05599546 -28.66011047]
[19.87774277 -23.67514992]
[27.98342514 -10.30234432]
[25.54578590 5.14407730]
[35.52324677 16.34453583]
[45.50070953 27.54499435]
[55.47817230 38.74545288]
[65.45563507 49.94591141]
[75.43309021 61.14636993]
[91.08193970 54.90448380]
[107.92870331 54.72005463]
[112.89186096 40.56494904]
[117.85501862 26.40984344]
[122.81817627 12.25473595]
[127.78134155 -1.90037036]
[132.74449158 -16.05547714]
[137.70765686 -30.21058273]
[126.76873016 -49.04995728]
[133.16506958 -69.57932281]
[152.35855103 -78.63052368]
[156.04762268 -93.16979980]
[159.73669434 -107.70908356]
[163.42576599 -122.24836731]
[167.11483765 -136.78764343]
[170.80390930 -151.32693481]
[165.83070374 -166.95381165]
[177.07585144 -178.89025879]
[192.97131348 -174.85707092]
[197.16519165 -159.00326538]
[185.34320068 -147.63786316]
[181.65412903 -133.09857178]
[177.96504211 -118.55929565]
[174.27597046 -104.02001190]
[170.58689880 -89.48072815]
[166.89782715 -74.94144440]
[173.60501099 -69.40329742]
[178.15815735 -61.94100189]
[180.03355408 -53.35827637]
[178.99768066 -44.59046936]
[175.13595581 -36.60264587]
[168.84631348 -30.28335190]
[160.79850769 -26.34579468]
[151.86276245 -25.24742317]
[146.89961243 -11.09231758]
[141.93644714 3.06278944]
[136.97328186 17.21789551]
[132.01013184 31.37300301]
[127.04696655 45.52811050]
[122.08380890 59.68321609]
[135.51539612 70.81448364]
[143.83241272 86.14875031]
[145.83712769 103.47773743]
[160.40858459 107.03763580]
[174.98002625 110.59753418]
[189.55148315 114.15744019]
[204.79365540 109.91634369]
[215.32102966 120.45310974]
[229.92349243 123.88355255]
[244.55583191 127.18428040]
[259.18817139 130.48500061]
[273.82049561 133.78572083]
[288.45285034 137.08644104]
[303.08517456 140.38717651]
[317.71749878 143.68789673]
[332.34985352 146.98861694]
[342.22183228 135.29237366]
[356.40295410 129.53434753]
[371.63442993 131.03768921]
[384.41625977 139.45695496]
[391.81118774 152.85746765]
[392.11996460 168.15985107]
[385.27163696 181.84776306]
[372.83987427 190.77580261]
[357.68142700 192.89239502]
[343.27957153 187.71113586]
[332.94378662 176.42265320]
[329.04913330 161.62095642]
[314.41677856 158.32022095]
[299.78445435 155.01950073]
[285.15213013 151.71878052]
[270.51977539 148.41806030]
[255.88745117 145.11734009]
[241.25511169 141.81661987]
[226.62277222 138.51588440]
[219.38333130 140.11625671]
[211.76113892 135.02455139]
[197.56121826 139.52027893]
[185.99157715 128.72888184]
[171.42013550 125.16898346]
[156.84867859 121.60908508]
[142.27723694 118.04918671]
[135.77864075 128.86221313]
[126.58532715 137.50143433]
[115.38971710 143.31620789]
[118.03812408 158.08056641]
[120.68653107 172.84490967]
[123.33494568 187.60925293]
[138.13235474 191.20874023]
[150.18246460 200.52082825]
[157.39749146 213.93214417]
[158.52740479 229.11907959]
[153.37643433 243.45042419]
[142.83702087 254.44317627]
[128.73518372 260.19277954]
[113.51413727 259.70309448]
[99.81103516 253.05891418]
[90.00001526 241.41143799]
[85.78089905 226.77862549]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 165]
[3 164]
[4 163]
[5 162]
[11 57]
[12 56]
[13 55]
[14 54]
[15 53]
[19 48]
[20 47]
[21 46]
[22 45]
[25 44]
[26 43]
[27 42]
[59 77]
[60 76]
[61 75]
[62 74]
[63 73]
[64 72]
[79 117]
[80 116]
[81 115]
[82 114]
[83 113]
[84 112]
[85 111]
[88 103]
[89 102]
[90 101]
[91 100]
[92 99]
[93 98]
[120 159]
[121 158]
[122 157]
[123 156]
[125 154]
[126 152]
[127 151]
[128 150]
[129 149]
[130 148]
[131 147]
[132 146]
[133 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
