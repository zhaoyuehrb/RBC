%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 19:12:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGACCCUGGACCCAGGGCCUCACCUGCCACUCAACCAAAGAGUCCUCGAGCCGGCCCGCCAAGGGGACUGCUGCUUCUUUUUCUAAAUGCAUAUUUUUCAUUAUUUAUAAUUUGUGUAAAAAACACACCUUCACCUUACAAGGUGCUGACCAUAUUAAAUGUUCAGGUUCUCUCAGCCUGCCUCGUU\
) } def
/len { sequence length } bind def

/coor [
[-93.14173126 376.58282471]
[-111.51856995 381.19805908]
[-117.11454010 395.11514282]
[-115.08419037 410.80554199]
[-127.01100159 419.72744751]
[-132.60697937 433.64453125]
[-138.20294189 447.56161499]
[-143.79891968 461.47866821]
[-149.39489746 475.39575195]
[-146.55114746 491.54644775]
[-159.28836060 501.87582397]
[-174.50357056 495.75787354]
[-176.54467773 479.48623657]
[-163.31196594 469.79977417]
[-157.71600342 455.88272095]
[-152.12002563 441.96563721]
[-146.52404785 428.04855347]
[-140.92808533 414.13146973]
[-143.35868835 399.43652344]
[-131.03161621 389.51916504]
[-125.43564606 375.60208130]
[-130.62762451 370.18975830]
[-141.45230103 380.57369995]
[-152.27697754 390.95764160]
[-163.10180664 401.34143066]
[-173.48542786 390.51641846]
[-162.66091919 380.13296509]
[-151.83624268 369.74902344]
[-141.01156616 359.36508179]
[-146.20353699 353.95272827]
[-160.34107971 358.96569824]
[-174.47862244 363.97869873]
[-188.61616516 368.99166870]
[-193.91661072 383.70355225]
[-207.45951843 391.52169800]
[-222.85034180 388.75466919]
[-232.82200623 376.70892334]
[-232.66618347 361.07211304]
[-222.45648193 349.22744751]
[-207.01356506 346.76763916]
[-193.62913513 354.85412598]
[-179.49160767 349.84115601]
[-165.35406494 344.82818604]
[-151.21652222 339.81518555]
[-143.90289307 318.78857422]
[-127.82736969 305.34945679]
[-108.41983795 302.30398560]
[-91.43157196 309.20993042]
[-81.22898102 298.21414185]
[-71.02639008 287.21835327]
[-60.82379913 276.22259521]
[-57.83889771 261.63012695]
[-42.78055573 256.77658081]
[-32.57796478 245.78080750]
[-22.37537193 234.78503418]
[-22.14806938 231.24851990]
[-20.18480110 227.64860535]
[-16.47562408 224.80537415]
[-11.37959480 223.51161194]
[-0.64159173 213.03807068]
[-0.71328390 198.18780518]
[10.02737808 187.41316223]
[25.60419083 187.43865967]
[36.34219360 176.96510315]
[47.08019638 166.49154663]
[57.81819916 156.01799011]
[68.55620575 145.54444885]
[79.29420471 135.07089233]
[90.03221130 124.59733582]
[71.77982330 121.98258972]
[55.42343140 106.18115997]
[49.76031113 79.57078552]
[61.05867386 49.88520813]
[55.23215485 36.06306839]
[49.40563202 22.24092293]
[34.20524979 22.37066841]
[20.11415100 16.66896629]
[9.28112698 6.00528955]
[3.35813379 -7.99423170]
[3.24838519 -23.19477081]
[8.96861744 -37.27835846]
[19.64653587 -48.09734344]
[33.65383530 -54.00191498]
[48.85450745 -54.09167099]
[62.93055725 -48.35291672]
[73.73548889 -37.66077423]
[79.62162781 -23.64571762]
[79.69138336 -8.44494343]
[73.93412018 5.62354422]
[63.22777557 16.41440201]
[69.05429840 30.23654556]
[74.88082123 44.05868912]
[82.16402435 45.84889984]
[83.67745972 30.92544365]
[85.19089508 16.00198936]
[86.70433044 1.07853389]
[88.21776581 -13.84492111]
[89.73120117 -28.76837730]
[91.24463654 -43.69183350]
[88.41859436 -58.42321014]
[94.01411438 -72.34046936]
[106.25093842 -81.01573181]
[121.23583221 -81.68888855]
[134.20121765 -74.14578247]
[141.02209473 -60.78629684]
[139.52832031 -45.86086273]
[130.19482422 -34.11788177]
[124.61743164 -20.19334793]
[119.04003143 -6.26881409]
[113.46263885 7.65572023]
[107.88523865 21.58025360]
[102.30784607 35.50478745]
[96.73044586 49.42932129]
[104.01365662 51.21953583]
[115.58406067 41.67355347]
[127.15446472 32.12757111]
[138.72486877 22.58158684]
[150.29527283 13.03560543]
[153.25143433 -2.73273706]
[167.48973083 -10.12533188]
[182.08775330 -3.47121215]
[185.84715271 12.12514973]
[175.88403320 24.69956017]
[159.84124756 24.60600853]
[148.27084351 34.15198898]
[136.70043945 43.69797134]
[125.13004303 53.24395370]
[113.55963898 62.78993607]
[116.35762787 69.74847412]
[130.27479553 64.15273285]
[135.87031555 78.06999969]
[121.95359802 83.66555786]
[124.75158691 90.62409210]
[139.70964050 89.50314331]
[154.66769409 88.38219452]
[169.62576294 87.26123810]
[184.58381653 86.14028931]
[197.82124329 76.46028137]
[212.71176147 83.33085632]
[213.93727112 99.68415070]
[200.23707581 108.69729614]
[185.70475769 101.09834290]
[170.74670410 102.21929932]
[155.78865051 103.34024811]
[140.83059692 104.46119690]
[125.87253571 105.58215332]
[122.65637970 120.23330688]
[135.76962280 127.51634979]
[148.88287354 134.79939270]
[161.99612427 142.08244324]
[177.81719971 142.01884460]
[185.18684387 154.96247864]
[198.30009460 162.24552917]
[211.41334534 169.52856445]
[227.17169189 166.51956177]
[239.25509644 177.07281494]
[238.39421082 193.09274292]
[225.24942017 202.29025269]
[209.90429688 197.60980225]
[204.13029480 182.64181519]
[191.01704407 175.35877991]
[177.90380859 168.07572937]
[163.02067566 168.66024780]
[154.71307373 155.19569397]
[141.59982300 147.91264343]
[128.48657227 140.62959290]
[115.37332916 133.34655762]
[100.50576019 135.33534241]
[89.76775360 145.80889893]
[79.02975464 156.28244019]
[68.29174805 166.75599670]
[57.55374908 177.22955322]
[46.81574631 187.70310974]
[36.07774353 198.17665100]
[35.71488571 213.74926758]
[24.67582512 224.21797180]
[9.83196068 223.77606201]
[-0.90604222 234.24961853]
[-11.37959480 244.98762512]
[-21.58218575 255.98339844]
[-31.78477669 266.97918701]
[-35.49943542 282.35812378]
[-49.82802200 286.42517090]
[-60.03061295 297.42095947]
[-70.23320007 308.41671753]
[-80.43579102 319.41250610]
[-73.08428192 332.94677734]
[-72.41613770 349.22048950]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 21]
[3 20]
[5 18]
[6 17]
[7 16]
[8 15]
[9 14]
[30 44]
[31 43]
[32 42]
[33 41]
[48 186]
[49 185]
[50 184]
[51 183]
[53 181]
[54 180]
[55 179]
[59 178]
[60 177]
[63 174]
[64 173]
[65 172]
[66 171]
[67 170]
[68 169]
[69 168]
[73 92]
[74 91]
[75 90]
[114 128]
[115 127]
[116 126]
[117 125]
[118 124]
[133 146]
[134 145]
[135 144]
[136 143]
[137 142]
[147 167]
[148 166]
[149 165]
[150 164]
[152 162]
[153 161]
[154 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
