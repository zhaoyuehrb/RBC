%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 11:23:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUCAAGGGGCCUGGACCAGUAGAAGCCAUCAACCUACUGAAGUUGUGUGGAGGGAUGGAAAGUGGGUCAGUGGAGAAGGGAUUCAGAAAAUGACACAUUCUUCCCCAUUU\
) } def
/len { sequence length } bind def

/coor [
[109.33029938 147.21192932]
[94.41108704 145.65722656]
[85.49633026 133.59376526]
[88.38977051 118.87588501]
[80.31124878 131.51461792]
[72.23272705 144.15335083]
[64.15421295 156.79208374]
[56.07569122 169.43081665]
[55.87665939 185.82875061]
[41.44562149 193.61830139]
[27.62799263 184.78625488]
[28.63816643 168.41824341]
[43.43696213 161.35229492]
[51.51548004 148.71356201]
[59.59399796 136.07482910]
[67.67251587 123.43609619]
[75.75103760 110.79736328]
[82.43826294 101.70526123]
[91.47657013 98.04633331]
[82.39895630 86.10493469]
[73.32135010 74.16353607]
[64.24373627 62.22214127]
[51.31958771 66.39282990]
[37.76219559 66.34060669]
[24.91411972 62.08490753]
[14.04324436 54.06071854]
[6.21766615 43.07416153]
[2.20075178 30.22153091]
[2.37669516 16.77990150]
[6.71381426 4.08023691]
[14.76910114 -6.62439823]
[6.35129547 -19.03973389]
[-2.06651044 -31.45506859]
[-10.48431683 -43.87040329]
[-18.90212250 -56.28573608]
[-34.29389954 -56.91766357]
[-46.22282410 -66.38097382]
[-50.24448013 -80.88236237]
[-45.01852798 -94.80455017]
[-53.43633270 -107.21988678]
[-61.85413742 -119.63522339]
[-70.27194214 -132.05055237]
[-85.69175720 -131.56797791]
[-98.91287231 -139.51817322]
[-105.71647644 -153.36427307]
[-103.93157196 -168.68803406]
[-94.12770844 -180.59970093]
[-79.43326569 -185.29830933]
[-64.53718567 -181.28453064]
[-54.19275284 -169.83917236]
[-51.70084000 -154.61439514]
[-57.85660934 -140.46836853]
[-49.43880463 -128.05302429]
[-41.02099609 -115.63769531]
[-32.60319138 -103.22235870]
[-17.73547554 -102.92401123]
[-5.75259209 -93.82047272]
[-1.37674773 -79.23604584]
[-6.48678732 -64.70354462]
[1.93101847 -52.28820801]
[10.34882450 -39.87287521]
[18.76663017 -27.45753860]
[27.18443680 -15.04220390]
[43.28977203 -18.79153061]
[59.64493179 -16.11701393]
[73.77899933 -7.39461994]
[83.54592896 6.08387089]
[87.45034790 22.30210495]
[84.87650299 38.82078171]
[76.18512726 53.14453125]
[85.26274109 65.08592224]
[94.34035492 77.02732086]
[103.41796875 88.96871948]
[115.35936737 98.04633331]
[129.29402161 103.59840393]
[143.22866821 109.15047455]
[157.16331482 114.70254517]
[171.09796143 120.25462341]
[186.78187561 118.17481995]
[195.74134827 130.07344055]
[209.67599487 135.62551880]
[223.61064148 141.17758179]
[237.54530334 146.72966003]
[251.47994995 152.28172302]
[265.41461182 157.83380127]
[282.38696289 149.65591431]
[299.70223999 156.23805237]
[306.71307373 173.04263306]
[320.92788696 177.83215332]
[335.14266968 182.62168884]
[350.09622192 176.81039429]
[363.89004517 185.00250244]
[365.94268799 200.91369629]
[354.67953491 212.33828735]
[338.74072266 210.51229858]
[330.35314941 196.83647156]
[316.13836670 192.04695129]
[301.92355347 187.25743103]
[292.91006470 194.50207520]
[281.38973999 196.45574951]
[270.26416016 192.50709534]
[262.39373779 183.54650879]
[259.86251831 171.76844788]
[245.92787170 166.21638489]
[231.99322510 160.66430664]
[218.05857849 155.11222839]
[204.12393188 149.56016541]
[190.18927002 144.00808716]
[175.50205994 146.48501587]
[165.54589844 134.18927002]
[151.61125183 128.63719177]
[137.67658997 123.08512878]
[123.74194336 117.53305054]
[109.80728912 111.98097992]
[120.74381256 122.24707031]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 17]
[5 16]
[6 15]
[7 14]
[8 13]
[19 73]
[20 72]
[21 71]
[22 70]
[31 63]
[32 62]
[33 61]
[34 60]
[35 59]
[39 55]
[40 54]
[41 53]
[42 52]
[74 114]
[75 113]
[76 112]
[77 111]
[78 110]
[80 108]
[81 107]
[82 106]
[83 105]
[84 104]
[85 103]
[88 98]
[89 97]
[90 96]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
