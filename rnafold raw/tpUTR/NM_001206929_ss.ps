%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 18:19:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCCCACAGACAGAUCCCAUCCAUCAGCUCCCUUUUCUUUUUCCCUUGAACUGUUCUGGCCUCAGACCAACUCUCUCCUGUAUAAUCUCUCUCCUGUAUAACCCCACCUUGCCAAGCUUUCUUCUACAACCAGAGCCCCCCACAAUGAUGAUUAAACACCUGACACAUCUUGC\
) } def
/len { sequence length } bind def

/coor [
[59.37583160 124.94502258]
[45.51763916 130.68527222]
[31.65944672 136.42552185]
[17.80125237 142.16577148]
[3.94306016 147.90602112]
[-9.91513252 153.64628601]
[-12.25108719 165.34234619]
[-19.87670898 174.35649109]
[-30.79943275 178.51315308]
[-42.25082779 176.88308716]
[-51.38809967 169.98826599]
[-65.44234467 175.23022461]
[-79.49658966 180.47218323]
[-93.55083466 185.71415710]
[-107.60507965 190.95611572]
[-117.83124542 203.02824402]
[-132.45996094 200.22650146]
[-146.51420593 205.46846008]
[-144.01493835 220.30592346]
[-144.36911011 235.34823608]
[-147.56391907 250.05162048]
[-153.48388672 263.88458252]
[-161.91497803 276.34704590]
[-172.55245972 286.98849487]
[-185.01174927 295.42428589]
[-198.84248352 301.34942627]
[-213.54467773 304.54977417]
[-228.58685303 304.90957642]
[-243.42524719 302.41589355]
[-257.52346802 297.15881348]
[-270.37185669 289.32839966]
[-281.50598145 279.20773315]
[-290.52331543 267.16265869]
[-297.09790039 253.62858582]
[-300.99209595 239.09477234]
[-302.06509399 224.08659363]
[-300.27810669 209.14660645]
[-295.69577026 194.81488037]
[-288.48370361 181.60948181]
[-278.90261841 170.00778198]
[-267.29885864 160.42918396]
[-254.09191895 153.21995544]
[-239.75920105 148.64067078]
[-224.81883240 146.85691833]
[-209.81089783 147.93313599]
[-195.27792358 151.83042908]
[-181.74525452 158.40792847]
[-169.70210266 167.42785645]
[-159.58381653 178.56414795]
[-151.75617981 191.41421509]
[-137.70193481 186.17225647]
[-128.48101807 174.47506714]
[-112.84704590 176.90187073]
[-98.79280090 171.65989685]
[-84.73855591 166.41793823]
[-70.68431091 161.17597961]
[-56.63006210 155.93402100]
[-50.07040024 138.86856079]
[-32.83716965 131.86689758]
[-15.65538406 139.78808594]
[-1.79719138 134.04783630]
[12.06100178 128.30758667]
[25.91919518 122.56732941]
[39.77738953 116.82707977]
[53.63558197 111.08683014]
[52.38128281 97.75610352]
[54.88358307 84.60239410]
[60.94507599 72.66339111]
[70.08757782 62.88094711]
[81.58983612 56.02679062]
[94.54446411 52.64163971]
[107.92946625 52.99254608]
[120.68892670 57.05182648]
[129.24377441 44.73051834]
[137.79859924 32.40920639]
[146.35343933 20.08789253]
[140.85412598 7.42878914]
[142.32473755 -6.18567085]
[150.27372742 -17.20266533]
[162.53306580 -22.80057335]
[175.84866333 -21.61130142]
[184.62207031 -33.77795410]
[193.39546204 -45.94460678]
[202.16886902 -58.11125946]
[192.42553711 -68.97748566]
[185.16699219 -81.63226318]
[180.71055603 -95.51725769]
[179.25000000 -110.02044678]
[180.84712219 -124.50312042]
[185.42904663 -138.32800293]
[192.79170227 -150.88729858]
[202.60877991 -161.62940979]
[214.44622803 -170.08314514]
[227.78146362 -175.87844849]
[242.02645874 -178.76249695]
[256.55358887 -178.61083984]
[270.72341919 -175.43266296]
[283.91268921 -169.37037659]
[292.90185547 -181.37849426]
[301.89102173 -193.38661194]
[295.24682617 -207.17477417]
[295.78298950 -222.47088623]
[303.37622070 -235.76002502]
[316.28173828 -243.98841858]
[331.53390503 -245.26525879]
[345.62786865 -239.29714966]
[355.32498169 -227.45549011]
[358.39688110 -212.46142578]
[354.13769531 -197.76048279]
[343.52612305 -186.73081970]
[329.00067139 -181.90698242]
[313.89913940 -184.39744568]
[304.90997314 -172.38932800]
[295.92080688 -160.38121033]
[305.98171997 -148.67018127]
[313.19827271 -135.01344299]
[317.20837402 -120.08965302]
[317.80932617 -104.64122009]
[314.96810913 -89.43733215]
[308.82321167 -75.23570251]
[299.67779541 -62.74480057]
[287.98480225 -52.58848190]
[274.32452393 -45.27485275]
[259.37576294 -41.17085266]
[243.88215637 -40.48383331]
[228.61512756 -43.25109482]
[214.33552551 -49.33786011]
[205.56211853 -37.17120743]
[196.78872681 -25.00455475]
[188.01531982 -12.83790112]
[193.64208984 2.56764627]
[188.94177246 18.45382881]
[175.57322693 28.51730728]
[158.67475891 28.64273262]
[150.11991882 40.96404266]
[141.56507874 53.28535461]
[133.01023865 65.60666656]
[139.28558350 72.99592590]
[143.93629456 81.50193024]
[146.77005005 90.77290344]
[147.66966248 100.42546082]
[146.59790039 110.06042480]
[143.59913635 119.27934265]
[138.79733276 127.70098114]
[132.39109802 134.97705078]
[140.72463989 147.44909668]
[149.05819702 159.92114258]
[156.45262146 165.34022522]
[157.42686462 172.69100952]
[165.53648376 185.30981445]
[173.64608765 197.92861938]
[181.75570679 210.54740906]
[198.30688477 218.58416748]
[198.49397278 236.11839294]
[206.82751465 248.59043884]
[215.16107178 261.06246948]
[230.70863342 263.89953613]
[239.62747192 276.94674683]
[236.62619019 292.46343994]
[223.48539734 301.24383545]
[208.00131226 298.07867432]
[199.36033630 284.84579468]
[202.68902588 269.39602661]
[194.35546875 256.92398071]
[186.02192688 244.45193481]
[174.20445251 241.77525330]
[167.16389465 231.42478943]
[169.13690186 218.65702820]
[161.02729797 206.03822327]
[152.91767883 193.41941833]
[144.80805969 180.80061340]
[136.58615112 168.25469971]
[128.25260925 155.78265381]
[119.91905212 143.31060791]
[97.49073029 147.60546875]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 65]
[2 64]
[3 63]
[4 62]
[5 61]
[6 60]
[11 57]
[12 56]
[13 55]
[14 54]
[15 53]
[17 51]
[18 50]
[73 137]
[74 136]
[75 135]
[76 134]
[81 130]
[82 129]
[83 128]
[84 127]
[98 114]
[99 113]
[100 112]
[145 174]
[146 173]
[147 172]
[149 171]
[150 170]
[151 169]
[152 168]
[154 165]
[155 164]
[156 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
