%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 11:18:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGAUUCGCCACCACUGGGCCUUGUUUUCCGCUAAUUCCAGGGCAGAUUCCAGGGCCCAGAGCUGGACAGACAUCACAGGAUAACCCAGGCCUGGGAGGAGGCCCCACGGCCUGCUGGUGGGGUCUGACCUGGGGGGAUUGGAGGGAAAUGACCUGCCCUCCACCACCACCCAAAGUGUGGGAUUAAAGUACUGUUUUCUUUCCACUUAA\
) } def
/len { sequence length } bind def

/coor [
[254.64900208 169.93698120]
[240.48286438 165.00538635]
[226.31672668 160.07379150]
[212.15058899 155.14219666]
[207.53732300 156.37785339]
[202.09884644 154.72860718]
[197.63986206 149.84712219]
[182.98977661 152.53492737]
[172.85787964 140.38357544]
[158.84484863 135.03237915]
[144.83183289 129.68119812]
[130.81880188 124.33000946]
[116.80578613 118.97882843]
[102.79276276 113.62763977]
[87.80772400 114.29742432]
[74.32798767 120.87745667]
[60.84825516 127.45748138]
[47.36852264 134.03750610]
[33.88878632 140.61753845]
[20.40905380 147.19757080]
[6.92931890 153.77758789]
[-6.55041504 160.35762024]
[-20.03014946 166.93765259]
[-33.50988388 173.51766968]
[-36.30924225 188.66593933]
[-47.36241150 199.13879395]
[-62.28642654 201.07212830]
[-75.33101654 193.93234253]
[-88.81075287 200.51235962]
[-97.81815338 213.51918030]
[-112.64961243 212.14912415]
[-126.12934875 218.72914124]
[-139.60908508 225.30917358]
[-142.16580200 240.61416626]
[-153.25387573 251.46932983]
[-168.60968018 253.70062256]
[-182.32861328 246.45007324]
[-189.13546753 232.50567627]
[-186.41285706 217.22932434]
[-175.20770264 206.49508667]
[-159.82858276 204.43049622]
[-146.18910217 211.82943726]
[-132.70938110 205.24940491]
[-119.22963715 198.66938782]
[-111.18640137 186.13320923]
[-95.39077759 187.03262329]
[-81.91104889 180.45260620]
[-79.51593781 165.77604675]
[-68.81130981 155.19894409]
[-53.75506973 152.92671204]
[-40.08991241 160.03793335]
[-26.61017799 153.45791626]
[-13.13044262 146.87788391]
[0.34929150 140.29785156]
[13.82902622 133.71783447]
[27.30875969 127.13780212]
[40.78849411 120.55777740]
[54.26823044 113.97774506]
[67.74796295 107.39772034]
[81.22769928 100.81769562]
[81.56259155 93.32517242]
[82.23237610 78.34013367]
[82.56726837 70.84761047]
[69.72832489 63.09122467]
[56.88938522 55.33483124]
[43.99306107 47.67423248]
[31.04006195 40.10985565]
[15.81976604 44.36639786]
[2.08873677 36.54115677]
[-2.00665069 21.27671051]
[5.96332455 7.62918282]
[21.27021790 3.69540906]
[34.83272171 11.80922890]
[38.60443878 27.15685654]
[51.55743790 34.72123718]
[58.91868973 35.37983322]
[64.64577484 42.49589157]
[77.48471832 50.25228119]
[90.32366180 58.00867462]
[96.56355286 53.84770203]
[88.24161530 41.36790848]
[76.47061920 32.07039261]
[81.67581940 18.00249100]
[96.66368103 18.60589790]
[100.72140503 33.04596329]
[109.04335022 45.52575684]
[115.28324890 41.36478424]
[113.05812836 26.53074265]
[110.83301544 11.69669819]
[108.60789490 -3.13734508]
[106.38277435 -17.97138977]
[104.15766144 -32.80543137]
[101.82217407 -47.62250137]
[99.37644958 -62.42177200]
[96.93071747 -77.22103882]
[94.48499298 -92.02030945]
[89.99823761 -99.97687531]
[92.11473083 -107.05799103]
[81.48140717 -119.54256439]
[87.23088837 -134.90080261]
[103.44860077 -137.33346558]
[113.45114899 -124.33804321]
[106.94877625 -109.28311157]
[109.28426361 -94.46604156]
[111.72998810 -79.66677094]
[114.17572021 -64.86750031]
[116.62144470 -50.06822968]
[120.81347656 -43.98146820]
[118.99170685 -35.03054810]
[121.21681976 -20.19650650]
[123.44194031 -5.36246204]
[125.66705322 9.47158146]
[127.89217377 24.30562592]
[130.11729431 39.13966751]
[131.82472229 79.18227386]
[108.14395142 99.61461639]
[122.15697479 104.96580505]
[136.16999817 110.31699371]
[150.18301392 115.66817474]
[164.19604492 121.01936340]
[178.20906067 126.37054443]
[193.86145020 124.06550598]
[202.99104309 135.83410645]
[217.08218384 140.97605896]
[231.24832153 145.90765381]
[245.41445923 150.83924866]
[259.58059692 155.77084351]
[274.94015503 141.37455750]
[295.48513794 137.27365112]
[315.00488281 144.59872437]
[327.65615845 161.04275513]
[342.39712524 158.26715088]
[357.13809204 155.49153137]
[371.87905884 152.71592712]
[386.59893799 149.83065796]
[401.29696655 146.83587646]
[407.80053711 132.87129211]
[421.12414551 125.50006104]
[436.05679321 127.36560822]
[446.89779663 137.54452515]
[461.59579468 134.54975891]
[476.29379272 131.55497742]
[490.99182129 128.56021118]
[505.68981934 125.56543732]
[520.38781738 122.57066345]
[535.08581543 119.57588959]
[539.87890625 104.98403931]
[551.33642578 94.75562286]
[566.37640381 91.64203644]
[580.95318604 96.48081970]
[591.14562988 107.97035980]
[594.21203613 123.02002716]
[589.32757568 137.58154297]
[577.80615234 147.73793030]
[562.74694824 150.75717163]
[548.20080566 145.82710266]
[538.08056641 134.27389526]
[523.38256836 137.26866150]
[508.68460083 140.26344299]
[493.98657227 143.25820923]
[479.28857422 146.25299072]
[464.59057617 149.24775696]
[449.89257812 152.24253845]
[443.89846802 165.85168457]
[430.88619995 173.41110229]
[415.74069214 171.84056091]
[404.29171753 161.53387451]
[389.59371948 164.52865601]
[383.66717529 168.94430542]
[374.65466309 167.45689392]
[359.91369629 170.23249817]
[345.17276001 173.00810242]
[330.43179321 175.78372192]
[329.87753296 181.71463013]
[328.39620972 187.48426819]
[326.02478027 192.94863892]
[322.82247925 197.97140503]
[318.86914062 202.42720032]
[326.91030884 215.08972168]
[334.95147705 227.75224304]
[342.99264526 240.41477966]
[351.03384399 253.07730103]
[359.07501221 265.73983765]
[374.24005127 269.29772949]
[382.21456909 282.25387573]
[378.72921753 296.68951416]
[386.77038574 309.35205078]
[394.81155396 322.01455688]
[402.85272217 334.67709351]
[418.13418579 339.56137085]
[423.70846558 354.60488892]
[415.29940796 368.26751709]
[399.35775757 370.06848145]
[388.11257935 358.62622070]
[390.19018555 342.71826172]
[382.14901733 330.05572510]
[374.10784912 317.39321899]
[366.06668091 304.73068237]
[351.51913452 301.74661255]
[343.18386841 289.01956177]
[346.41247559 273.78100586]
[338.37130737 261.11846924]
[330.33013916 248.45594788]
[322.28897095 235.79342651]
[314.24777222 223.13088989]
[306.20660400 210.46836853]
[293.47296143 213.07569885]
[280.56750488 211.20565796]
[269.02288818 205.05133057]
[260.21990967 195.31626892]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 127]
[2 126]
[3 125]
[4 124]
[7 123]
[9 121]
[10 120]
[11 119]
[12 118]
[13 117]
[14 116]
[15 60]
[16 59]
[17 58]
[18 57]
[19 56]
[20 55]
[21 54]
[22 53]
[23 52]
[24 51]
[28 47]
[29 46]
[31 44]
[32 43]
[33 42]
[63 79]
[64 78]
[65 77]
[66 75]
[67 74]
[87 114]
[88 113]
[89 112]
[90 111]
[91 110]
[92 109]
[93 107]
[94 106]
[95 105]
[96 104]
[98 103]
[131 173]
[132 172]
[133 171]
[134 170]
[135 168]
[136 167]
[140 163]
[141 162]
[142 161]
[143 160]
[144 159]
[145 158]
[146 157]
[178 206]
[179 205]
[180 204]
[181 203]
[182 202]
[183 201]
[186 198]
[187 197]
[188 196]
[189 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
