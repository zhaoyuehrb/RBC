%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 00:51:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUAAGUCUCUUCAGCCACCUCCCAGGAAGAUCUGGCCUCUGUCCUGUGCCCACUUUAGAUGUAUCUAAUUCUCCUGACUGUUCUUCCCAGGGGAGUGUGGAGGUCUUGGCCCUGUUCCCUGUCCUACCAAUAACGUAGAAUAAAAACAUAACCCACUGAAACAGG\
) } def
/len { sequence length } bind def

/coor [
[436.67813110 339.56411743]
[423.83026123 331.82250977]
[410.98239136 324.08093262]
[403.59954834 323.31896973]
[397.96856689 316.07254028]
[385.26773071 308.09204102]
[372.56686401 300.11157227]
[357.67385864 299.89160156]
[350.10543823 285.99810791]
[342.73809814 285.09826660]
[337.24365234 277.74780273]
[324.69421387 269.53121948]
[321.89044189 270.00091553]
[318.72833252 269.36474609]
[315.63693237 267.47921753]
[313.08969116 264.36184692]
[311.54595947 260.20202637]
[299.64566040 251.07060242]
[287.74536133 241.93917847]
[275.84506226 232.80775452]
[263.85989380 223.78800964]
[251.79093933 214.88070679]
[239.72196960 205.97340393]
[227.65299988 197.06610107]
[215.58404541 188.15879822]
[196.28506470 187.45040894]
[188.41647339 168.92077637]
[176.02288818 160.47097778]
[163.62930298 152.02117920]
[151.23571777 143.57138062]
[138.84214783 135.12158203]
[126.44856262 126.67177582]
[111.57421875 125.89511108]
[104.53055573 111.72834015]
[95.67953491 129.57763672]
[71.10226440 137.33244324]
[56.14420319 136.21150208]
[41.18614578 135.09054565]
[26.21826363 134.10949707]
[16.51272583 146.21661377]
[1.53555965 150.27421570]
[-12.95420837 144.72207642]
[-21.38496780 131.69509888]
[-20.51491737 116.20243835]
[-10.67861176 104.20132446]
[4.34168959 100.30643463]
[18.77037430 106.01543427]
[27.05932045 119.13309479]
[33.94264984 116.35696411]
[42.30709839 120.13248444]
[57.26515579 121.25344086]
[72.22321320 122.37438965]
[75.41401672 115.58699036]
[61.83933258 109.20515442]
[68.22139740 95.63056946]
[81.79563141 102.01219940]
[84.98643494 95.22480011]
[74.58002472 84.42172241]
[64.17360687 73.61864471]
[53.76718903 62.81556702]
[43.36077499 52.01248932]
[27.46133804 47.99502945]
[23.25177956 32.14537430]
[35.06253052 20.76828384]
[50.74370575 25.56753540]
[54.16385269 41.60607147]
[64.57026672 52.40914917]
[74.97668457 63.21223068]
[85.38310242 74.01530457]
[95.78952026 84.81838989]
[91.58083344 70.42092133]
[94.27233887 55.66437149]
[103.29293823 43.67985153]
[116.72859955 37.01029205]
[131.72846985 37.07088089]
[145.10981750 43.84875488]
[154.03332520 55.90575409]
[156.60552979 70.68356323]
[152.28068542 85.04656219]
[141.97642517 95.94712830]
[127.87918854 101.07233429]
[112.98035431 99.33475494]
[128.74116516 100.71581268]
[134.89836121 114.27819824]
[147.29194641 122.72799683]
[159.68551636 131.17779541]
[172.07910156 139.62759399]
[184.47268677 148.07740784]
[196.86627197 156.52720642]
[207.47077942 153.88217163]
[217.56509399 157.45901489]
[223.87332153 165.83934021]
[224.49134827 176.08982849]
[236.56030273 184.99713135]
[248.62927246 193.90443420]
[260.69824219 202.81173706]
[272.76721191 211.71903992]
[281.56994629 214.31332397]
[284.97647095 220.90745544]
[296.87680054 230.03887939]
[308.77709961 239.17030334]
[320.67739868 248.30172729]
[332.91079712 256.98178101]
[345.46020508 265.19836426]
[358.08590698 273.29724121]
[373.88732910 274.08804321]
[380.54733276 287.41070557]
[393.24819946 295.39117432]
[405.94906616 303.37167358]
[418.72399902 311.23306274]
[431.57186890 318.97463989]
[444.41970825 326.71624756]
[457.33941650 334.33737183]
[470.32980347 341.83737183]
[483.32015991 349.33737183]
[496.31054688 356.83737183]
[509.30093384 364.33737183]
[522.29132080 371.83737183]
[543.57196045 359.05480957]
[568.19946289 361.15063477]
[586.85034180 377.20440674]
[592.53808594 401.03549194]
[607.02697754 404.91778564]
[621.51586914 408.80007935]
[636.84832764 404.89816284]
[647.13940430 415.66586304]
[661.62829590 419.54815674]
[676.11718750 423.43045044]
[690.60607910 427.31274414]
[703.31097412 418.19577026]
[718.89978027 419.42990112]
[730.01190186 430.43237305]
[731.40057373 446.00817871]
[722.41003418 458.80288696]
[707.28546143 462.77523804]
[693.16809082 456.04959106]
[686.72375488 441.80163574]
[672.23486328 437.91934204]
[657.74597168 434.03704834]
[643.25708008 430.15475464]
[628.96093750 434.33435059]
[617.63354492 423.28897095]
[603.14465332 419.40667725]
[588.65576172 415.52438354]
[585.28216553 421.28143311]
[580.98834229 426.39764404]
[575.89385986 430.72732544]
[570.14099121 434.14666748]
[563.89080811 436.55728149]
[557.31896973 437.88912964]
[550.61035156 438.10250854]
[543.95416260 437.18920898]
[537.53845215 435.17282104]
[531.54492188 432.10812378]
[526.14355469 428.07965088]
[521.48809814 423.19921875]
[517.71142578 417.60305786]
[514.92193604 411.44778442]
[513.20031738 404.90615845]
[512.59722900 398.16210938]
[513.13183594 391.40570068]
[514.79132080 384.82775879]
[501.80093384 377.32775879]
[488.81054688 369.82775879]
[475.82015991 362.32775879]
[462.82980347 354.82775879]
[449.83941650 347.32775879]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 112]
[2 111]
[3 110]
[5 109]
[6 108]
[7 107]
[9 105]
[11 104]
[12 103]
[17 102]
[18 101]
[19 100]
[20 99]
[21 97]
[22 96]
[23 95]
[24 94]
[25 93]
[27 89]
[28 88]
[29 87]
[30 86]
[31 85]
[32 84]
[34 82]
[36 52]
[37 51]
[38 50]
[39 48]
[57 70]
[58 69]
[59 68]
[60 67]
[61 66]
[113 167]
[114 166]
[115 165]
[116 164]
[117 163]
[118 162]
[122 144]
[123 143]
[124 142]
[126 140]
[127 139]
[128 138]
[129 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
