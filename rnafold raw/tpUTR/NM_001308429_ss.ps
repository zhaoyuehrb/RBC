%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 06:53:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCCCCAAGGCGUGGAAGCCAGACUUGACCCCAAGACCUCUGAACUCUGGGGACUCUGAGUCUUCCAGCAUCCUUCAAGGUCACCGAAUGACCAGAGAUCAAAGUACCUUGCCUCAGGGCCGGGCAGAUGAGAUAUUAAAGUUAAUAAAGGUCAGUCCAUUAAGAACCAACAA\
) } def
/len { sequence length } bind def

/coor [
[232.61679077 213.37443542]
[225.34558105 211.91667175]
[220.42678833 204.17907715]
[208.53332520 195.03875732]
[196.63986206 185.89843750]
[184.74638367 176.75811768]
[170.05708313 178.93983459]
[157.86520386 169.83967590]
[155.67642212 154.41738892]
[143.78295898 145.27706909]
[131.88949585 136.13674927]
[119.99602509 126.99642181]
[108.10256195 117.85610199]
[78.60855103 118.86502838]
[63.68160629 120.34365845]
[48.75466156 121.82228851]
[33.82771683 123.30091858]
[18.90077400 124.77954865]
[3.97383070 126.25818634]
[-10.93923950 127.87073517]
[-25.82096100 129.75073242]
[-40.68520737 131.76423645]
[-55.54945374 133.77774048]
[-70.41369629 135.79122925]
[-74.59272003 139.02949524]
[-79.14185333 140.20045471]
[-83.20333099 139.51342773]
[-86.12982941 137.49061584]
[-99.26062775 146.31631470]
[-112.57076263 139.63128662]
[-127.52184296 140.84172058]
[-142.47293091 142.05215454]
[-157.42401123 143.26260376]
[-172.37509155 144.47303772]
[-180.70881653 148.29583740]
[-187.60501099 145.56854248]
[-202.57540894 146.51040649]
[-209.99470520 160.03659058]
[-223.55992126 167.38427734]
[-238.94244385 166.20884705]
[-251.23376465 156.88539124]
[-256.51177979 142.38896179]
[-253.09226990 127.34534454]
[-242.06640625 116.55488586]
[-226.95249939 113.46079254]
[-212.57334900 119.05036926]
[-203.51727295 131.54000854]
[-188.54687500 130.59814453]
[-173.58552551 129.52195740]
[-158.63444519 128.31152344]
[-143.68336487 127.10107422]
[-128.73228455 125.89064026]
[-113.78120422 124.68019867]
[-101.71980286 115.94109344]
[-87.34027100 122.53954315]
[-72.42720032 120.92698669]
[-57.56295395 118.91349030]
[-42.69870758 116.89998627]
[-27.83445930 114.88648987]
[-21.60735893 110.85923767]
[-12.68558598 112.97274017]
[-6.38719606 109.05792236]
[2.49519920 111.33123779]
[17.42214394 109.85260773]
[32.34908676 108.37397766]
[47.27603149 106.89534760]
[62.20297241 105.41671753]
[77.12992096 103.93807983]
[62.43957901 100.90593719]
[54.76997375 88.01496887]
[59.11443710 73.65789032]
[72.64448547 67.18195343]
[86.55132294 72.80334473]
[91.78085327 86.86178589]
[90.97340393 71.88352966]
[90.16596222 56.90527725]
[81.63470459 50.09024429]
[78.34822083 39.90839386]
[81.16710663 29.81553268]
[88.92153931 23.09850311]
[88.65227509 8.10092068]
[88.38301086 -6.89666224]
[88.11374664 -21.89424515]
[87.84448242 -36.89182663]
[77.34329987 -49.02050018]
[80.42003632 -64.76576233]
[94.71447754 -72.04919434]
[109.26116180 -65.28356934]
[112.90110779 -49.65890121]
[102.84206390 -37.16109467]
[103.11132812 -22.16350937]
[103.38059235 -7.16592693]
[103.64985657 7.83165598]
[103.91912079 22.82923889]
[115.08948517 38.58866882]
[105.14421082 56.09783173]
[105.95166016 71.07608032]
[106.75910950 86.05433655]
[107.65415955 71.08106232]
[114.74763489 57.86430740]
[126.73098755 48.84215927]
[141.39366150 45.67893600]
[156.03083801 48.95815659]
[167.94238281 58.07490540]
[174.93098450 71.34741211]
[175.70744324 86.32730103]
[170.12855530 100.25123596]
[159.22343445 110.55066681]
[145.00373840 115.32565308]
[130.09260559 113.69536591]
[117.24288177 105.96263885]
[129.13635254 115.10295868]
[141.02981567 124.24327850]
[152.92327881 133.38359070]
[164.81674194 142.52392578]
[180.28282166 140.66967773]
[192.21427917 150.10868835]
[193.88670349 164.86465454]
[205.78018188 174.00497437]
[217.67364502 183.14529419]
[229.56710815 192.28561401]
[241.54214478 201.31881714]
[254.75106812 208.42683411]
[268.84133911 213.57119751]
[282.93161011 218.71556091]
[297.02188110 223.85990906]
[312.63864136 221.32473755]
[321.94046021 232.95768738]
[336.03073120 238.10205078]
[350.12097168 243.24639893]
[360.96847534 234.71148682]
[374.51058960 232.67581177]
[387.18576050 237.56636047]
[395.71383667 248.00270081]
[397.94491577 261.18444824]
[411.94055176 266.58090210]
[425.93618774 271.97735596]
[439.93185425 277.37384033]
[453.92749023 282.77029419]
[470.03588867 279.69595337]
[480.54626465 292.28421021]
[474.64645386 307.58532715]
[458.40567017 309.85882568]
[448.53103638 296.76593018]
[434.53540039 291.36947632]
[420.53973389 285.97302246]
[406.54409790 280.57653809]
[392.54843140 275.18008423]
[379.07714844 284.53414917]
[362.51861572 284.02239990]
[349.39013672 273.64852905]
[344.97662354 257.33666992]
[330.88635254 252.19230652]
[316.79608154 247.04795837]
[302.18716431 249.95108032]
[291.87750244 237.95018005]
[277.78723145 232.80581665]
[263.69699097 227.66146851]
[249.60671997 222.51710510]
[259.08172607 234.14569092]
[264.08657837 248.28611755]
[264.03640747 263.28604126]
[258.93710327 277.39266968]
[249.38450623 288.95761108]
[236.49488831 296.62951660]
[221.77442932 299.51184082]
[206.94322205 297.26782227]
[193.73435974 290.15966797]
[183.69131470 279.01797485]
[177.98764038 265.14468384]
[177.28982544 250.16093445]
[181.67941284 235.81758118]
[190.64347839 223.79071045]
[203.13452148 215.48567200]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 122]
[3 121]
[4 120]
[5 119]
[6 118]
[9 115]
[10 114]
[11 113]
[12 112]
[13 111]
[14 68]
[15 67]
[16 66]
[17 65]
[18 64]
[19 63]
[20 61]
[21 59]
[22 58]
[23 57]
[24 56]
[28 55]
[30 53]
[31 52]
[32 51]
[33 50]
[34 49]
[36 48]
[37 47]
[74 98]
[75 97]
[76 96]
[80 94]
[81 93]
[82 92]
[83 91]
[84 90]
[123 159]
[124 158]
[125 157]
[126 156]
[128 154]
[129 153]
[130 152]
[135 148]
[136 147]
[137 146]
[138 145]
[139 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
