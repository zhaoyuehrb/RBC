%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 05:23:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGAAGACAUCAUUUCCUUGUUCCUAUUUCUUGUUGGCUGGCUGAGUAGAGAAAGCAUAUUUUACUACUUAAACCUUUUUUUUUGUUUGUUUAAAUACAUUUGACUAAAGUUAUAAUUAUGAAUUUACUUAUGAGCAAAUGCAGCUAAACUUAAUAUGACUCAUACUUAAAUGUAAGGAAAUGUUCUGAAAUAAAGACUAAAGAAAACACACUGGCA\
) } def
/len { sequence length } bind def

/coor [
[289.70355225 557.10559082]
[302.19131470 548.71197510]
[296.32702637 534.90582275]
[290.46276855 521.09967041]
[284.59851074 507.29348755]
[278.73422241 493.48730469]
[270.81271362 506.22503662]
[255.93286133 508.11981201]
[245.07189941 497.77383423]
[246.24217224 482.81954956]
[258.58038330 474.28909302]
[272.98400879 478.47528076]
[268.12420654 464.28433228]
[263.26443481 450.09341431]
[258.40466309 435.90246582]
[253.54487610 421.71154785]
[248.68510437 407.52059937]
[243.82531738 393.32968140]
[238.96554565 379.13873291]
[234.10575867 364.94781494]
[229.24598694 350.75686646]
[221.42297363 344.24609375]
[221.15312195 332.78854370]
[213.74649048 319.74468994]
[200.73381042 312.49768066]
[200.64788818 296.67672729]
[193.24125671 283.63287354]
[185.83462524 270.58901978]
[178.42799377 257.54519653]
[164.79766846 258.34808350]
[152.08966064 253.17625427]
[142.80444336 242.98577881]
[138.79542542 229.72618103]
[140.89921570 215.96751404]
[148.76174927 204.40235901]
[141.54298401 191.25361633]
[134.32421875 178.10485840]
[127.10546112 164.95611572]
[119.88669586 151.80737305]
[112.66793823 138.65863037]
[105.44917297 125.50988770]
[88.18634033 127.16083527]
[71.56181335 117.03931427]
[63.43439865 97.03507996]
[48.49956131 95.63845062]
[33.56472015 94.24182129]
[18.62988091 92.84519196]
[3.69504166 91.44856262]
[-11.23979759 90.05193329]
[-26.17463684 88.65531158]
[-40.63526917 95.07408142]
[-52.58684540 86.18537903]
[-67.52168274 84.78874969]
[-82.45652771 83.39212036]
[-97.39136505 81.99549103]
[-110.61041260 91.08594513]
[-125.91701508 86.28101349]
[-131.56925964 71.26663208]
[-123.23123169 57.56054688]
[-107.29914093 55.67689514]
[-95.99473572 67.06065369]
[-81.05989838 68.45728302]
[-66.12505341 69.85391235]
[-51.19021606 71.25053406]
[-37.79782486 64.73186493]
[-24.77800941 73.72046661]
[-9.84316921 75.11709595]
[5.09167004 76.51372528]
[20.02651024 77.91035461]
[34.96134949 79.30698395]
[49.89618683 80.70361328]
[64.83102417 82.10024261]
[70.51831818 77.21099854]
[58.08134460 68.82519531]
[43.49356842 65.33280945]
[34.97886658 52.98373032]
[36.90142822 38.10744858]
[48.27585602 28.32877731]
[63.27220535 28.65975571]
[74.20412445 38.93074036]
[75.46829224 53.87801743]
[81.89290619 67.43251038]
[87.58020020 62.54327011]
[88.44043732 47.56795883]
[89.30068207 32.59264374]
[90.16091919 17.61733246]
[91.02115631 2.64201903]
[91.88139343 -12.33329391]
[92.74163055 -27.30860710]
[93.60186768 -42.28392029]
[94.46210480 -57.25923157]
[84.60049438 -74.84522247]
[95.91877747 -90.52691650]
[96.34907532 -105.52074432]
[96.77937317 -120.51457214]
[97.20966339 -135.50840759]
[97.63996124 -150.50222778]
[90.30172729 -164.51867676]
[98.40093994 -177.01875305]
[98.83123779 -192.01258850]
[99.26153564 -207.00640869]
[87.21456909 -225.90447998]
[99.30479431 -243.85844421]
[98.87449646 -258.85226440]
[98.44420624 -273.84609985]
[98.01390839 -288.83993530]
[88.95434570 -302.50946045]
[96.50396729 -317.06747437]
[112.89636230 -317.53790283]
[121.26844788 -303.43682861]
[113.00773621 -289.27020264]
[113.43803406 -274.27639771]
[113.86832428 -259.28256226]
[114.29862213 -244.28874207]
[121.03687286 -240.23208618]
[125.68075562 -233.76831055]
[127.41551971 -225.90447998]
[125.88697052 -217.90237427]
[121.27069855 -211.07606506]
[114.25535583 -206.57611084]
[113.82506561 -191.58229065]
[113.39476776 -176.58845520]
[120.76378632 -163.64447021]
[112.63378906 -150.07192993]
[112.20349121 -135.07810974]
[111.77320099 -120.08427429]
[111.34290314 -105.09045410]
[110.91260529 -90.09662628]
[118.56284332 -83.33359528]
[121.28797150 -73.26538086]
[117.95625305 -63.14994431]
[109.43741608 -56.39899445]
[108.57717896 -41.42367935]
[107.71694183 -26.44836807]
[106.85670471 -11.47305584]
[105.99646759 3.50225711]
[105.13623047 18.47756958]
[104.27599335 33.45288086]
[103.41575623 48.42819595]
[102.55551147 63.40350723]
[124.44398499 77.60446167]
[129.61416626 100.52406311]
[118.59791565 118.29112244]
[125.81668091 131.43986511]
[133.03544617 144.58860779]
[140.25419617 157.73736572]
[147.47296143 170.88610840]
[154.69172668 184.03485107]
[161.91049194 197.18359375]
[178.44680786 197.36993408]
[192.55102539 205.82324219]
[200.42077637 220.15414429]
[199.99029541 236.40405273]
[191.47183228 250.13854980]
[198.87846375 263.18240356]
[206.28509521 276.22622681]
[213.69172668 289.27008057]
[227.23419189 297.45007324]
[226.79032898 312.33807373]
[234.19696045 325.38189697]
[235.01713562 310.40435791]
[241.34144592 296.80276489]
[252.26512146 286.52301025]
[266.22540283 281.03570557]
[281.22512817 281.12591553]
[295.11843872 286.78070068]
[305.91769409 297.19107056]
[312.07797241 310.86773682]
[312.71795654 325.85409546]
[307.74609375 340.00613403]
[297.87368774 351.29928589]
[284.51309204 358.11795044]
[269.57565308 359.48660278]
[255.19836426 355.20947266]
[243.43692017 345.89709473]
[248.29669189 360.08804321]
[253.15647888 374.27896118]
[258.01626587 388.46990967]
[262.87603760 402.66082764]
[267.73580933 416.85177612]
[272.59558105 431.04269409]
[277.45538330 445.23361206]
[282.31515503 459.42456055]
[287.17492676 473.61547852]
[292.54040527 487.62304688]
[298.40466309 501.42922974]
[304.26895142 515.23541260]
[310.13320923 529.04156494]
[315.99746704 542.84771729]
[330.70852661 539.68847656]
[345.75164795 539.37060547]
[360.58303833 541.90570068]
[374.66653442 547.20214844]
[387.49301147 555.06835938]
[398.59884644 565.22009277]
[407.58251953 577.29028320]
[414.11932373 590.84265137]
[417.97293091 605.38726807]
[419.00402832 620.39837646]
[417.17535400 635.33331299]
[412.55303955 649.65222168]
[405.30413818 662.83740234]
[395.69070435 674.41235352]
[384.06024170 683.95849609]
[370.83325195 691.13085938]
[356.48779297 695.67010498]
[341.54251099 697.41217041]
[326.53762817 696.29406738]
[312.01559448 692.35620117]
[298.50134277 685.74096680]
[286.48339844 676.68743896]
[276.39624023 665.52294922]
[268.60449219 652.65106201]
[263.38983154 638.53710938]
[260.94073486 623.69128418]
[261.34576416 608.65026855]
[264.59027100 593.95776367]
[270.55697632 580.14489746]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 189]
[3 188]
[4 187]
[5 186]
[6 185]
[12 184]
[13 183]
[14 182]
[15 181]
[16 180]
[17 179]
[18 178]
[19 177]
[20 176]
[21 175]
[23 160]
[24 159]
[26 157]
[27 156]
[28 155]
[29 154]
[35 149]
[36 148]
[37 147]
[38 146]
[39 145]
[40 144]
[41 143]
[44 72]
[45 71]
[46 70]
[47 69]
[48 68]
[49 67]
[50 66]
[52 64]
[53 63]
[54 62]
[55 61]
[83 140]
[84 139]
[85 138]
[86 137]
[87 136]
[88 135]
[89 134]
[90 133]
[91 132]
[93 128]
[94 127]
[95 126]
[96 125]
[97 124]
[99 122]
[100 121]
[101 120]
[103 114]
[104 113]
[105 112]
[106 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
