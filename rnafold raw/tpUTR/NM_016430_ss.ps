%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 00:28:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGUGUGUAACCAUAGUAACACCAAGCACGUAUUUAUUUAUAAGUUUUUGCCAUUAUAAUUUUGACCAUAAAUUAAUUUGACCAUCUCUCUUAUUAAUAGAGAAGUAAAAAAUGUAAGUUGACCUUCUCUUAGAUUAUGUUCAAUGAAUAUUGUAAAUGUUCAAGUAUUGUUAAUGAAUAGAAUAAAUACAAUAUUGCAUUCCCAUAUAGCAGACUU\
) } def
/len { sequence length } bind def

/coor [
[89.18195343 206.88301086]
[100.04948425 195.40815735]
[99.40414429 180.42204285]
[98.75881195 165.43592834]
[98.11347961 150.44982910]
[83.37355804 147.66870117]
[77.31184387 161.38932800]
[71.25013733 175.10995483]
[65.18843079 188.83058167]
[66.68895721 204.58047485]
[54.46831512 213.09547424]
[48.40660858 226.81610107]
[50.70456696 243.05345154]
[37.62656021 252.94776917]
[22.62611771 246.32064819]
[21.13441086 229.98948669]
[34.68597794 220.75439453]
[40.74768829 207.03376770]
[38.81357956 192.26525879]
[51.46780014 182.76887512]
[57.52950668 169.04824829]
[63.59121704 155.32762146]
[69.65292358 141.60699463]
[59.37092972 134.02622986]
[51.02158356 123.88559723]
[45.24430084 111.68772888]
[42.54545975 98.09484863]
[28.95843124 104.45037079]
[15.37140274 110.80589294]
[12.32114983 125.90563202]
[1.09577906 136.19371033]
[-13.85825253 137.87921143]
[-26.78261566 130.52401733]
[-40.36964417 136.87953186]
[-53.95667267 143.23506165]
[-67.54370117 149.59057617]
[-81.13072968 155.94610596]
[-90.07211304 169.69323730]
[-106.43159485 168.55325317]
[-113.37993622 153.69886780]
[-103.76927948 140.41101074]
[-87.48625183 142.35906982]
[-73.89922333 136.00355530]
[-60.31219482 129.64802551]
[-46.72516632 123.29251099]
[-33.13813782 116.93698883]
[-30.49990273 102.30217743]
[-19.62129402 91.90410614]
[-4.52943468 89.88192749]
[9.01588154 97.21886444]
[22.60291100 90.86334229]
[36.18994141 84.50782013]
[37.89628601 77.20450592]
[22.92554665 76.26803589]
[7.95480871 75.33155823]
[-7.01593018 74.39508057]
[-21.98666954 73.45861053]
[-36.95740891 72.52213287]
[-51.24218750 77.09870911]
[-65.88867950 73.86138153]
[-76.91382599 63.69053268]
[-81.31937408 49.35208130]
[-77.90725708 34.74532318]
[-67.60538483 23.84250450]
[-53.21531296 19.60861015]
[-38.65036774 23.19503021]
[-27.87027359 33.62839508]
[-14.03442383 39.42229080]
[-0.19857299 45.21619034]
[13.63727760 51.01008606]
[27.47312737 56.80398560]
[41.30897903 62.59788132]
[43.01532364 55.29456711]
[33.65096664 43.57668304]
[24.28660583 31.85880089]
[14.92224789 20.14091873]
[5.55788946 8.42303562]
[-3.80646944 -3.29484797]
[-19.26751518 -5.19059134]
[-28.59737968 -17.20759010]
[-26.69479752 -31.93564987]
[-36.05915451 -43.65353394]
[-51.69554901 -43.84646606]
[-63.51592636 -54.08427429]
[-65.93906403 -69.53297424]
[-57.82083893 -82.89817047]
[-42.99441910 -87.86921692]
[-28.46039200 -82.09894562]
[-21.08127975 -68.31188965]
[-24.34127235 -53.01789093]
[-14.97691441 -41.30001068]
[-0.19186831 -39.90788651]
[9.47184849 -28.15768433]
[7.91141367 -12.65920639]
[17.27577209 -0.94132352]
[26.64013100 10.77655983]
[36.00448990 22.49444199]
[45.36884689 34.21232605]
[54.73320770 45.93021011]
[69.26302338 42.20402908]
[71.83242035 27.42572784]
[74.40181732 12.64742565]
[76.97121429 -2.13087559]
[79.54061127 -16.90917778]
[82.11000824 -31.68747902]
[84.67940521 -46.46578217]
[74.87239075 -54.20661163]
[69.31719971 -65.31697845]
[69.01230621 -77.66282654]
[73.95421600 -88.90174866]
[83.14975739 -96.92742157]
[94.81503296 -100.26428223]
[97.80730438 -114.96279144]
[100.79958344 -129.66130066]
[95.08760071 -145.03353882]
[105.75136566 -157.49211121]
[121.82090759 -154.22073364]
[126.76525879 -138.58470154]
[115.49809265 -126.66902924]
[112.50582123 -111.97052002]
[109.51354218 -97.27200317]
[122.03661346 -84.81371307]
[124.59229279 -67.17601776]
[115.96951294 -51.39943314]
[99.45771027 -43.89638138]
[96.88831329 -29.11808205]
[94.31891632 -14.33977985]
[91.74951935 0.43852162]
[89.18012238 15.21682358]
[86.61072540 29.99512482]
[84.04132843 44.77342606]
[102.21655273 44.38702393]
[119.01141357 49.64094162]
[132.78218079 59.63615417]
[142.30477905 73.03055573]
[146.88111877 88.20890045]
[146.38233948 103.47309113]
[160.96411133 106.99046326]
[175.54588318 110.50783539]
[190.12765503 114.02520752]
[200.73114014 105.72550964]
[213.98513794 105.05605316]
[225.04187012 112.03743744]
[229.98605347 123.93263245]
[244.51586914 127.65881348]
[259.04568481 131.38499451]
[273.57550049 135.11117554]
[288.13168335 138.73303223]
[302.71343994 142.25041199]
[317.29522705 145.76777649]
[331.87698364 149.28515625]
[346.45877075 152.80252075]
[361.04052734 156.31990051]
[375.62231445 159.83726501]
[390.20407104 163.35462952]
[404.78585815 166.87200928]
[418.16323853 158.89183044]
[432.90112305 162.66667175]
[440.42657471 175.46914673]
[455.00833130 178.98652649]
[469.59011841 182.50389099]
[484.17187500 186.02125549]
[498.75366211 189.53863525]
[503.74850464 188.06373596]
[508.35076904 188.59524536]
[511.86300659 190.64881897]
[513.88043213 193.53375244]
[528.29742432 197.67521667]
[542.71435547 201.81666565]
[557.13128662 205.95812988]
[569.99768066 197.07043457]
[585.56182861 198.58386230]
[596.47491455 209.78381348]
[597.58404541 225.38201904]
[588.36553955 238.01347351]
[573.17211914 241.71398926]
[559.17767334 234.73631287]
[552.98986816 220.37507629]
[538.57287598 216.23361206]
[524.15594482 212.09216309]
[509.73901367 207.95069885]
[495.23629761 204.12040710]
[480.65451050 200.60304260]
[466.07275391 197.08566284]
[451.49096680 193.56829834]
[436.90921021 190.05091858]
[424.37463379 198.01458740]
[409.53652954 194.65519714]
[401.26849365 181.45378113]
[386.68670654 177.93640137]
[372.10494995 174.41903687]
[357.52316284 170.90167236]
[342.94140625 167.38429260]
[328.35961914 163.86692810]
[313.77786255 160.34954834]
[299.19607544 156.83218384]
[284.61431885 153.31481934]
[277.37921143 154.80116272]
[269.84933472 149.64099121]
[255.31950378 145.91481018]
[240.78968811 142.18862915]
[226.25987244 138.46244812]
[212.16252136 147.63813782]
[195.46253967 143.69856262]
[186.61029053 128.60697937]
[172.02850342 125.08960724]
[157.44673157 121.57223511]
[142.86495972 118.05487061]
[136.73268127 131.16841125]
[126.56430054 142.16632080]
[113.09959412 149.80448914]
[113.74492645 164.79060364]
[114.39025879 179.77671814]
[115.03559113 194.76281738]
[126.84932709 205.26098633]
[127.69615936 221.04257202]
[117.07368469 232.74464417]
[101.28403473 233.42457581]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 214]
[3 213]
[4 212]
[5 211]
[6 23]
[7 22]
[8 21]
[9 20]
[11 18]
[12 17]
[27 52]
[28 51]
[29 50]
[33 46]
[34 45]
[35 44]
[36 43]
[37 42]
[73 99]
[74 98]
[75 97]
[76 96]
[77 95]
[78 94]
[81 91]
[82 90]
[100 131]
[101 130]
[102 129]
[103 128]
[104 127]
[105 126]
[106 125]
[112 121]
[113 120]
[114 119]
[137 208]
[138 207]
[139 206]
[140 205]
[144 202]
[145 201]
[146 200]
[147 199]
[148 197]
[149 196]
[150 195]
[151 194]
[152 193]
[153 192]
[154 191]
[155 190]
[156 189]
[159 186]
[160 185]
[161 184]
[162 183]
[163 182]
[167 181]
[168 180]
[169 179]
[170 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
