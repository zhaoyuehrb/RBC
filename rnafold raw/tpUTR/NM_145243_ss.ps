%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 14:20:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAAAUUUAUGAGACACAAGAUAUAUGAAGAAUGUUGCAGUCCUUAUCAUUUUAUGUUACUUUUUAAAAAAUGAUGUUUGAAGUGAAAAAAAAAAGGAUAUUCAGGGUCAAAUCAUGUACAUUACAGAUAUUAUCUAAAUUCUUCUAGAAUUUAUUUUUCAUGAAAUAUUGAUGUAUUUUAAUCUAUGUUAAAAUAUCUUCAAUGAGGAAAAUGUCACAGAAUAAAUUUAUAUUACACAUUUUA\
) } def
/len { sequence length } bind def

/coor [
[403.73376465 403.82482910]
[388.75524902 403.02246094]
[376.36425781 394.56887817]
[370.15335083 380.91513062]
[371.92337036 366.01992798]
[381.16107178 354.20193481]
[395.18811035 348.88763428]
[409.93536377 351.61672974]
[398.03991699 342.47900391]
[386.14443970 333.34127808]
[374.24899292 324.20355225]
[362.35351562 315.06582642]
[350.45806885 305.92810059]
[338.56259155 296.79037476]
[326.66714478 287.65264893]
[314.77169800 278.51492310]
[302.38836670 283.46923828]
[289.06634521 281.64907837]
[278.29391479 273.42318726]
[272.94491577 260.85171509]
[274.51235962 247.17092896]
[262.73410034 237.88264465]
[250.95581055 228.59437561]
[239.17753601 219.30609131]
[225.39306641 224.95001221]
[210.53550720 222.92295837]
[198.60861206 213.67008972]
[192.87689209 199.59727478]
[194.97239685 184.44616699]
[183.19412231 175.15788269]
[171.41584778 165.86961365]
[159.63757324 156.58132935]
[147.85928345 147.29304504]
[136.08100891 138.00476074]
[124.30273438 128.71647644]
[113.63370514 135.06253052]
[101.48017120 137.59080505]
[89.16546631 136.02598572]
[78.03048706 130.53849792]
[69.28765106 121.72580719]
[63.88893127 110.54750824]
[62.42216873 98.22074127]
[47.88116455 94.53845978]
[33.34016037 90.85617828]
[18.79915810 87.17389679]
[4.25815392 83.49161530]
[-10.28285027 79.80933380]
[-14.36689758 81.11854553]
[-18.26656914 81.07833862]
[-21.58388329 79.90946960]
[-24.03205872 77.93837738]
[-25.46019363 75.55231476]
[-39.79512405 71.13532257]
[-54.13005447 66.71833801]
[-68.46498871 62.30135345]
[-80.86647797 71.43968964]
[-96.09298706 71.52242279]
[-108.30410767 62.72740173]
[-112.93938446 48.59756851]
[-127.27431488 44.18058014]
[-141.60923767 39.76359177]
[-155.94416809 35.34660721]
[-170.27909851 30.92962074]
[-184.61402893 26.51263237]
[-198.94895935 22.09564590]
[-208.07817078 34.19660950]
[-220.79728699 42.44281387]
[-235.57041931 45.83849335]
[-250.61361694 43.97360229]
[-264.11035156 37.07333374]
[-274.43084717 25.97093391]
[-280.32882690 12.00706577]
[-281.09210205 -3.13206363]
[-276.62847900 -17.61833000]
[-267.47698975 -29.70244789]
[-254.74269104 -37.92519760]
[-239.96333313 -41.29364777]
[-224.92359924 -39.40103912]
[-211.43959045 -32.47591019]
[-201.13958740 -21.35450745]
[-195.26734924 -7.37979412]
[-194.53198242 7.76071596]
[-180.19705200 12.17770290]
[-165.86212158 16.59469032]
[-151.52719116 21.01167679]
[-137.19226074 25.42866325]
[-122.85732269 29.84564972]
[-108.52239227 34.26263809]
[-96.73842621 25.19202232]
[-81.69494629 24.79489326]
[-69.15558624 33.43305588]
[-64.04799652 47.96642303]
[-49.71306992 52.38340759]
[-35.37813950 56.80039597]
[-21.04320717 61.21738434]
[-6.60056782 65.26832581]
[7.94043589 68.95060730]
[22.48143959 72.63288879]
[37.02244568 76.31517792]
[51.56344986 79.99745941]
[66.10445404 83.67974091]
[68.90953064 78.81883240]
[72.40653992 74.42931366]
[76.51764679 70.60887909]
[81.15135956 67.44255066]
[86.20455170 65.00079346]
[91.56476593 63.33795166]
[91.18323517 48.34280396]
[90.80170441 33.34765625]
[90.42017365 18.35251045]
[77.80619812 9.50978279]
[72.87542725 -4.89649582]
[77.32048798 -19.27375031]
[89.23647308 -28.17022133]
[88.85494995 -43.16536713]
[88.47341919 -58.16051483]
[85.13331604 -66.63630676]
[88.18361664 -73.34853363]
[87.99283600 -88.34732056]
[87.80205536 -103.34610748]
[87.61128235 -118.34489441]
[81.36397552 -134.10585022]
[94.77955627 -144.47206116]
[108.45446014 -134.45042419]
[102.61006165 -118.53567505]
[102.80084229 -103.53688812]
[102.99162292 -88.53810120]
[103.18240356 -73.53931427]
[103.46856689 -58.54204559]
[103.85009003 -43.54689789]
[104.23162079 -28.55175018]
[116.58461761 -20.27276611]
[121.75506592 -6.14016438]
[117.56328583 8.49822426]
[105.41532135 17.97098160]
[105.79685211 32.96612930]
[106.17838287 47.96127319]
[106.55990601 62.95642090]
[126.88511658 73.68556213]
[137.17578125 94.23625946]
[133.59101868 116.93820190]
[145.36929321 126.22648621]
[157.14756775 135.51477051]
[168.92584229 144.80305481]
[180.70413208 154.09132385]
[192.48240662 163.37960815]
[204.26068115 172.66789246]
[218.50575256 167.09785461]
[233.52705383 169.39074707]
[245.30552673 178.83181763]
[250.74057007 192.80737305]
[248.46582031 207.52781677]
[260.24411011 216.81608582]
[272.02236938 226.10437012]
[283.80065918 235.39265442]
[300.02899170 230.58439636]
[315.76623535 236.34753418]
[324.86874390 250.22090149]
[323.90942383 266.61947632]
[335.80487061 275.75720215]
[347.70034790 284.89492798]
[359.59579468 294.03265381]
[371.49124146 303.17037964]
[383.38671875 312.30810547]
[395.28216553 321.44583130]
[407.17764282 330.58355713]
[419.07308960 339.72128296]
[430.64877319 324.99743652]
[455.16116333 321.78311157]
[470.12448120 322.83157349]
[485.08779907 323.88003540]
[500.05111694 324.92849731]
[515.01440430 325.97695923]
[529.97772217 327.02542114]
[546.35205078 318.57760620]
[560.49761963 328.98065186]
[575.47308350 329.83871460]
[590.44848633 330.69677734]
[605.42395020 331.55484009]
[620.39935303 332.41290283]
[635.37481689 333.27096558]
[650.35021973 334.12902832]
[665.32568359 334.98709106]
[680.30114746 335.84515381]
[695.27655029 336.70321655]
[709.67315674 328.85021973]
[723.52954102 337.62133789]
[722.59143066 353.99365234]
[707.82391357 361.12466431]
[694.41851807 351.67864990]
[679.44305420 350.82058716]
[664.46759033 349.96252441]
[649.49218750 349.10446167]
[634.51672363 348.24639893]
[619.54132080 347.38833618]
[604.56585693 346.53027344]
[589.59045410 345.67221069]
[574.61499023 344.81414795]
[559.63958740 343.95608521]
[550.41912842 351.76315308]
[537.95031738 351.18569946]
[528.92926025 341.98873901]
[513.96594238 340.94027710]
[499.00265503 339.89181519]
[484.03933716 338.84335327]
[469.07601929 337.79489136]
[454.11270142 336.74642944]
[450.01058960 343.02517700]
[456.78387451 356.40887451]
[441.80636597 355.58267212]
[437.70425415 361.86141968]
[444.67510986 375.14328003]
[451.64596558 388.42510986]
[458.61682129 401.70693970]
[465.58764648 414.98880005]
[472.55850220 428.27062988]
[479.52935791 441.55245972]
[490.14358521 442.08245850]
[499.51449585 446.92211914]
[505.99121094 455.14367676]
[508.46392822 465.23062134]
[506.55383301 475.35699463]
[500.66918945 483.71810913]
[507.12829590 497.25622559]
[513.58740234 510.79431152]
[520.04650879 524.33239746]
[535.02661133 529.36950684]
[541.98242188 543.56072998]
[536.78729248 558.48675537]
[522.52331543 565.29217529]
[507.65304565 559.93951416]
[500.99877930 545.60430908]
[506.50839233 530.79150391]
[500.04928589 517.25341797]
[493.59017944 503.71533203]
[487.13110352 490.17721558]
[468.32711792 485.01068115]
[459.27874756 467.39102173]
[466.24749756 448.52331543]
[459.27667236 435.24148560]
[452.30581665 421.95965576]
[445.33496094 408.67779541]
[438.36413574 395.39596558]
[431.39328003 382.11410522]
[424.42242432 368.83227539]
[424.59100342 383.83132935]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 167]
[9 166]
[10 165]
[11 164]
[12 163]
[13 162]
[14 161]
[15 160]
[16 159]
[21 155]
[22 154]
[23 153]
[24 152]
[29 147]
[30 146]
[31 145]
[32 144]
[33 143]
[34 142]
[35 141]
[42 101]
[43 100]
[44 99]
[45 98]
[46 97]
[47 96]
[52 95]
[53 94]
[54 93]
[55 92]
[59 88]
[60 87]
[61 86]
[62 85]
[63 84]
[64 83]
[65 82]
[107 138]
[108 137]
[109 136]
[110 135]
[114 131]
[115 130]
[116 129]
[118 128]
[119 127]
[120 126]
[121 125]
[169 207]
[170 206]
[171 205]
[172 204]
[173 203]
[174 202]
[176 199]
[177 198]
[178 197]
[179 196]
[180 195]
[181 194]
[182 193]
[183 192]
[184 191]
[185 190]
[211 245]
[212 244]
[213 243]
[214 242]
[215 241]
[216 240]
[217 239]
[223 236]
[224 235]
[225 234]
[226 233]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
