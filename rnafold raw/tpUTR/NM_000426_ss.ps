%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 08:42:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAAAUAAGUGUAACCCCAGGAAGAGUCUGUCAAAACAAGUAUAUCAAGUAAAACAAACAAAUAUAUUUUACCUAUAUAUGUUAAUUAAACUAAUUUGUGCAUGUACAUAGAAUUCUUUCUGUAUUCAGAUGGUGCUAAUUCAGACUCCAGACUGAAUUUUAAUUCAAGUUCUUUCUCAAGUCUAUAAAUAAUAUUAAACUGAUUAUUUCAUUCUAA\
) } def
/len { sequence length } bind def

/coor [
[208.33654785 340.01480103]
[193.53419495 337.58782959]
[179.39030457 332.59277344]
[166.34675598 325.18563843]
[154.81098938 315.59783936]
[145.14337158 304.12884521]
[137.64591980 291.13699341]
[132.55285645 277.02810669]
[130.02325439 262.24295044]
[130.13616943 247.24337769]
[132.88804626 232.49797058]
[138.19294739 218.46736145]
[145.88511658 205.58984375]
[155.72428894 194.26770020]
[167.40309143 184.85464478]
[180.55667114 177.64471436]
[194.77415466 172.86312866]
[209.61137390 170.65928650]
[224.61172485 171.10284424]
[211.21260071 164.36016846]
[197.81349182 157.61750793]
[184.41436768 150.87483215]
[171.01524353 144.13217163]
[157.61611938 137.38949585]
[144.21701050 130.64683533]
[130.81788635 123.90416718]
[117.41876221 117.16149902]
[104.01964569 110.41883087]
[90.57250214 103.77243805]
[77.07804108 97.22267151]
[63.58358002 90.67290497]
[50.08911514 84.12313080]
[39.83460999 90.12423706]
[28.07698822 90.42982483]
[17.73746109 85.07960510]
[11.32919407 75.50415802]
[10.34669018 64.14446259]
[-2.95432997 57.21028137]
[-16.25535011 50.27610016]
[-32.06922913 50.75750732]
[-39.77815628 38.01302719]
[-53.07917404 31.07884789]
[-66.38019562 24.14466667]
[-79.68121338 17.21048546]
[-92.98223877 10.27630520]
[-108.02311707 18.01992607]
[-124.55136871 15.29746532]
[-136.08283997 3.37780285]
[-138.21356201 -12.90183735]
[-151.61268616 -19.64450645]
[-165.01181030 -26.38717461]
[-176.54425049 -16.52419090]
[-190.93544006 -11.84054470]
[-205.98275757 -13.02033424]
[-219.39566040 -19.85273552]
[-229.14436340 -31.26884842]
[-233.76699829 -45.50881577]
[-232.58877563 -60.39307022]
[-245.98788452 -67.13573456]
[-259.38702393 -73.87840271]
[-272.78613281 -80.62107086]
[-288.59149170 -79.91287231]
[-296.48242188 -92.54545593]
[-309.88156128 -99.28812408]
[-323.28067017 -106.03079224]
[-336.67977905 -112.77346039]
[-350.07891846 -119.51612854]
[-364.37002563 -113.16806793]
[-379.38372803 -117.54098511]
[-388.03103638 -130.57011414]
[-386.22891235 -146.10351562]
[-374.82830811 -156.80677795]
[-359.21218872 -157.62615967]
[-346.75405884 -148.17475891]
[-343.33624268 -132.91525269]
[-329.93713379 -126.17258453]
[-316.53799438 -119.42991638]
[-303.13888550 -112.68724823]
[-289.73974609 -105.94458008]
[-274.89279175 -107.13506317]
[-266.04345703 -94.02019501]
[-252.64434814 -87.27752686]
[-239.24522400 -80.53485870]
[-225.84609985 -73.79219055]
[-214.59503174 -83.60761261]
[-200.40475464 -88.38059998]
[-185.42771912 -87.35429382]
[-171.94831848 -80.65402985]
[-162.03446960 -69.27293396]
[-157.22038269 -54.92484665]
[-158.26913452 -39.78629303]
[-144.87001038 -33.04362488]
[-131.47090149 -26.30095863]
[-120.22815704 -33.49506760]
[-106.79103851 -34.20161438]
[-94.66226959 -28.12936401]
[-87.05638885 -16.76812744]
[-86.04805756 -3.02471471]
[-72.74703217 3.90946603]
[-59.44601440 10.84364700]
[-46.14499283 17.77782631]
[-32.84397507 24.71200752]
[-17.98147202 23.73462296]
[-9.32116985 36.97508240]
[3.97985053 43.90925980]
[17.28087044 50.84344101]
[34.38611984 44.31023407]
[51.11914062 52.50074768]
[56.63888550 70.62866974]
[70.13334656 77.17843628]
[83.62780762 83.72820282]
[97.12227631 90.27797699]
[105.16741943 90.68401337]
[110.76231384 97.01970673]
[124.16143036 103.76237488]
[137.56054688 110.50504303]
[150.95967102 117.24771118]
[164.35879517 123.99037933]
[177.75791931 130.73304749]
[191.15702820 137.47572327]
[204.55615234 144.21838379]
[217.95527649 150.96105957]
[231.35440063 157.70372009]
[236.05532837 156.66680908]
[240.50836182 157.18191528]
[244.24771118 158.98876953]
[246.94427490 161.70175171]
[261.93463135 162.23957825]
[276.92498779 162.77742004]
[291.91534424 163.31524658]
[307.98135376 154.31156921]
[322.47842407 164.20550537]
[337.47494507 164.52824402]
[352.47149658 164.85098267]
[367.46801758 165.17372131]
[382.46453857 165.49647522]
[388.15774536 150.61308289]
[398.58639526 138.59991455]
[412.47518921 130.89790344]
[428.13537598 128.42257690]
[443.66986084 131.45516968]
[457.20330811 139.61082458]
[467.10824585 151.88735962]
[472.20095825 166.78833008]
[487.20056152 166.89591980]
[502.20016479 167.00350952]
[517.19976807 167.11109924]
[532.19940186 167.21868896]
[543.41040039 156.40426636]
[558.62060547 156.72705078]
[568.86138916 167.48164368]
[583.86102295 167.58923340]
[598.86065674 167.69682312]
[610.07159424 156.88240051]
[625.28179932 157.20518494]
[635.52264404 167.95979309]
[650.52221680 168.06738281]
[665.52185059 168.17497253]
[680.52148438 168.28254700]
[695.52105713 168.39013672]
[710.52069092 168.49772644]
[721.59851074 157.22575378]
[737.40270996 157.17201233]
[748.55694580 168.36839294]
[748.44360352 184.17228699]
[737.12988281 195.20750427]
[721.32812500 194.92706299]
[710.41308594 183.49734497]
[695.41351318 183.38975525]
[680.41387939 183.28216553]
[665.41424561 183.17457581]
[650.41467285 183.06698608]
[635.41503906 182.95941162]
[625.02099609 193.56599426]
[609.80773926 193.67056274]
[598.75305176 182.69644165]
[583.75341797 182.58885193]
[568.75384521 182.48126221]
[558.35980225 193.08786011]
[543.14654541 193.19242859]
[532.09179688 182.21829224]
[517.09222412 182.11070251]
[502.09259033 182.00312805]
[487.09298706 181.89553833]
[472.09335327 181.78794861]
[467.56210327 195.19677734]
[459.09909058 206.56842041]
[447.52084351 214.78359985]
[433.95123291 219.02864075]
[419.71252441 218.87602234]
[406.19635010 214.32742310]
[394.72796631 205.81483459]
[386.43606567 194.15954590]
[382.14181519 180.49299622]
[367.14526367 180.17025757]
[352.14874268 179.84751892]
[337.15222168 179.52476501]
[322.15570068 179.20202637]
[313.20956421 187.33857727]
[300.71682739 187.19602966]
[291.37750244 178.30560303]
[276.38717651 177.76777649]
[261.39682007 177.22993469]
[246.40644836 176.69210815]
[259.76309204 183.51853943]
[271.70928955 192.58984375]
[281.87185669 203.62261963]
[289.93331909 216.27224731]
[295.64184570 230.14353943]
[298.81909180 244.80317688]
[299.36584473 259.79321289]
[297.26498413 274.64535522]
[292.58215332 288.89566040]
[285.46365356 302.09896851]
[276.13186646 313.84277344]
[264.87826538 323.76025391]
[252.05441284 331.54159546]
[238.06094360 336.94369507]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 123]
[20 122]
[21 121]
[22 120]
[23 119]
[24 118]
[25 117]
[26 116]
[27 115]
[28 114]
[29 112]
[30 111]
[31 110]
[32 109]
[37 106]
[38 105]
[39 104]
[41 102]
[42 101]
[43 100]
[44 99]
[45 98]
[49 93]
[50 92]
[51 91]
[58 84]
[59 83]
[60 82]
[61 81]
[63 79]
[64 78]
[65 77]
[66 76]
[67 75]
[127 204]
[128 203]
[129 202]
[130 201]
[132 198]
[133 197]
[134 196]
[135 195]
[136 194]
[144 185]
[145 184]
[146 183]
[147 182]
[148 181]
[151 178]
[152 177]
[153 176]
[156 173]
[157 172]
[158 171]
[159 170]
[160 169]
[161 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
