%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 11:27:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCCUGCCAUAUGGAGGAGGCUCUGGAGUCCUGCUCUGUGUGGUCCAGGUCCUUUCCACCCUGAGACUUGGCUCCACCACUGAUAUCCUCCUUUGGGGAAAGGCUUGGCACACAGCAGGCUUUCAAGAAGUGCCAGUUGAUCAAUGAAUAAAUAAACGAGCCUAUUUCUCUUUGCA\
) } def
/len { sequence length } bind def

/coor [
[94.88187408 240.95602417]
[87.38383484 227.96450806]
[84.70049286 213.20988464]
[79.48688507 227.27467346]
[74.27328491 241.33946228]
[74.22135925 250.50573730]
[68.84031677 255.60623169]
[63.37791061 269.57626343]
[66.37622833 285.69900513]
[53.73854828 296.14987183]
[38.46542740 290.17794800]
[36.26854706 273.92663574]
[49.40786743 264.11386108]
[54.87027359 250.14382935]
[60.20849228 236.12585449]
[65.42209625 222.06106567]
[70.63570404 207.99627686]
[73.80644226 193.33522034]
[74.87049103 178.37301636]
[75.93454742 163.41079712]
[76.99859619 148.44859314]
[78.06265259 133.48637390]
[79.12670135 118.52416229]
[85.07882690 90.38395691]
[77.92729187 77.19852448]
[70.77576447 64.01309204]
[63.62422943 50.82766342]
[56.47269821 37.64223099]
[43.09189987 29.20038605]
[43.82524109 14.32384491]
[36.67370987 1.13841379]
[29.52218056 -12.04701710]
[22.37064934 -25.23244858]
[15.21911716 -38.41788101]
[8.06758595 -51.60330963]
[2.59939837 -55.40871429]
[0.25016996 -60.62667847]
[0.90569168 -65.38606262]
[-5.77337313 -78.81699371]
[-12.45243835 -92.24793243]
[-19.13150215 -105.67887115]
[-25.81056786 -119.10980988]
[-31.14025307 -123.10688782]
[-33.30281067 -128.40493774]
[-32.47879028 -133.13806152]
[-38.67697144 -146.79757690]
[-44.87515640 -160.45709229]
[-51.07333755 -174.11662292]
[-57.27152252 -187.77613831]
[-63.68735504 -194.32292175]
[-63.45609283 -201.73353577]
[-69.41086578 -215.50091553]
[-75.36564636 -229.26829529]
[-81.32041931 -243.03567505]
[-87.27519226 -256.80303955]
[-93.22996521 -270.57043457]
[-99.18474579 -284.33779907]
[-105.48337555 -290.99740601]
[-105.12062073 -298.40277100]
[-110.83011627 -312.27365112]
[-122.42990875 -317.96002197]
[-126.89097595 -329.65545654]
[-122.32618713 -340.87878418]
[-127.78859711 -354.84881592]
[-133.25100708 -368.81887817]
[-144.89685059 -371.38748169]
[-153.75637817 -379.19021606]
[-157.69477844 -390.19213867]
[-155.83822632 -401.60769653]
[-148.76481628 -410.60577393]
[-153.72796631 -424.76089478]
[-169.59651184 -437.15957642]
[-165.27137756 -455.98721313]
[-170.73377991 -469.95724487]
[-185.60760498 -474.78463745]
[-193.85475159 -488.07064819]
[-191.58117676 -503.54208374]
[-179.86039734 -513.89373779]
[-164.22659302 -514.23797607]
[-152.06158447 -504.41213989]
[-149.10931396 -489.05578613]
[-156.76373291 -475.41964722]
[-151.30133057 -461.44961548]
[-141.57566833 -458.19299316]
[-135.12603760 -449.93725586]
[-134.28477478 -439.27404785]
[-139.57286072 -429.72406006]
[-134.60971069 -415.56893921]
[-117.67677307 -408.67227173]
[-111.01856232 -391.30258179]
[-119.28096008 -374.28128052]
[-113.81855011 -360.31124878]
[-108.35614777 -346.34118652]
[-94.08132935 -336.15640259]
[-96.95922089 -317.98315430]
[-91.24972534 -304.11224365]
[-85.41736603 -290.29257202]
[-79.46259308 -276.52520752]
[-73.50782013 -262.75781250]
[-67.55303955 -248.99044800]
[-61.59826660 -235.22306824]
[-55.64349365 -221.45568848]
[-49.68871689 -207.68830872]
[-43.61199951 -193.97431946]
[-37.41381454 -180.31480408]
[-31.21563339 -166.65528870]
[-25.01745033 -152.99575806]
[-18.81926727 -139.33624268]
[-12.37963009 -125.78887177]
[-5.70056486 -112.35794067]
[0.97849983 -98.92700195]
[7.65756464 -85.49606323]
[14.33662987 -72.06512451]
[21.25301743 -58.75484467]
[28.40454865 -45.56941223]
[35.55607986 -32.38397980]
[42.70761108 -19.19854927]
[49.85914230 -6.01311731]
[57.01067352 7.17231369]
[69.87995148 14.67104912]
[69.65812683 30.49069977]
[76.80966187 43.67613220]
[83.96119690 56.86156082]
[91.11272430 70.04699707]
[98.26425934 83.23242188]
[95.91439056 68.41763306]
[100.98043823 54.29901886]
[112.21321106 44.35795593]
[126.84294128 41.04570007]
[141.26223755 45.17898941]
[151.91557312 55.73863602]
[156.17608643 70.12084961]
[152.99319458 84.77926636]
[143.15174866 96.09942627]
[129.07844543 101.29000092]
[114.24459839 99.07157135]
[127.49297333 106.10581207]
[140.74134827 113.14004517]
[151.98356628 102.97203064]
[166.02662659 97.26516724]
[181.17475891 96.70857239]
[195.59875488 101.36946869]
[207.55686951 110.68502045]
[215.60507202 123.53034210]
[218.77151489 138.35429382]
[216.67382812 153.36680603]
[209.56532288 166.75505066]
[198.30439758 176.90232849]
[184.25085449 182.58331299]
[169.10171509 183.11198425]
[154.68632507 178.42451477]
[142.74540710 169.08692932]
[134.72088623 156.22680664]
[131.58177185 141.39704895]
[133.70712280 126.38842773]
[120.45874023 119.35418701]
[107.21036530 112.31995392]
[94.08891296 119.58821869]
[93.02486420 134.55043030]
[91.96080780 149.51263428]
[90.89675903 164.47485352]
[89.83271027 179.43705750]
[88.76865387 194.39927673]
[97.31138611 182.06956482]
[109.50828552 173.33827209]
[123.93359375 169.22604370]
[138.90104675 170.21359253]
[152.66102600 176.18545532]
[163.60501099 186.44358826]
[170.45372009 199.78881836]
[172.40655518 214.66114807]
[169.23526001 229.32208252]
[161.31050110 242.05778503]
[149.55870056 251.37953186]
[135.35356140 256.19763184]
[120.35562897 255.94889832]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 17]
[4 16]
[5 15]
[7 14]
[8 13]
[18 163]
[19 162]
[20 161]
[21 160]
[22 159]
[23 158]
[24 125]
[25 124]
[26 123]
[27 122]
[28 121]
[30 119]
[31 118]
[32 117]
[33 116]
[34 115]
[35 114]
[38 113]
[39 112]
[40 111]
[41 110]
[42 109]
[45 108]
[46 107]
[47 106]
[48 105]
[49 104]
[51 103]
[52 102]
[53 101]
[54 100]
[55 99]
[56 98]
[57 97]
[59 96]
[60 95]
[63 93]
[64 92]
[65 91]
[70 88]
[71 87]
[73 83]
[74 82]
[136 157]
[137 156]
[138 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
