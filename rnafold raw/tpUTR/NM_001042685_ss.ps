%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 02:51:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCUCCCUGGCCCUGGGGCCGGGGGCUGGGGUGUGGGGCAGUCGGGGUCCUCUCAUCAUCCCCACUUCCCAGGCCCAGCCUUUCCAACCGUGCCUGGGAUCUGGGCUU\
) } def
/len { sequence length } bind def

/coor [
[93.49331665 128.76536560]
[94.55545044 113.80201721]
[82.75273895 123.05922699]
[70.95001984 132.31643677]
[59.14730835 141.57363892]
[54.23356628 149.45158386]
[46.87706375 150.92015076]
[34.81710815 159.83964539]
[22.75715256 168.75914001]
[10.69719505 177.67863464]
[-1.36276221 186.59814453]
[-13.42271900 195.51763916]
[-25.48267555 204.43713379]
[-37.54263306 213.35662842]
[-43.58560562 228.60177612]
[-59.84698868 230.72296143]
[-69.59846497 217.53810120]
[-62.80855179 202.61064148]
[-46.46213150 201.29667664]
[-34.40217209 192.37718201]
[-22.34221649 183.45768738]
[-10.28225994 174.53817749]
[1.77769709 165.61868286]
[13.83765411 156.69918823]
[25.89761162 147.77969360]
[37.95756912 138.86019897]
[49.89009857 129.77093506]
[61.69281387 120.51371765]
[73.49552917 111.25651550]
[85.29824829 101.99930573]
[91.47676086 88.33087921]
[90.62813568 73.35490417]
[89.77951050 58.37892532]
[88.93088531 43.40295029]
[80.42523193 30.06261826]
[87.43009186 16.91799355]
[86.58146667 1.94201851]
[85.73284149 -13.03395653]
[84.88421631 -28.00993156]
[84.03559113 -42.98590851]
[80.38063049 -51.52101135]
[83.38095856 -58.39653397]
[82.95647430 -73.39052582]
[82.53199005 -88.38452148]
[79.12002563 -97.01963806]
[82.31372070 -103.80750275]
[82.31372070 -118.80750275]
[82.31372070 -133.80749512]
[82.31372070 -148.80749512]
[68.53985596 -155.38346863]
[58.98992538 -167.28984070]
[55.56008530 -182.16259766]
[58.93133163 -197.04873657]
[68.43429565 -208.99263000]
[82.18215942 -215.62278748]
[97.44528198 -215.62278748]
[111.19314575 -208.99263000]
[120.69611359 -197.04873657]
[124.06735229 -182.16259766]
[120.63751984 -167.28984070]
[111.08759308 -155.38346863]
[97.31372070 -148.80749512]
[97.31372070 -133.80749512]
[97.31372070 -118.80750275]
[97.31372070 -103.80750275]
[97.52598572 -88.80900574]
[97.95046997 -73.81501007]
[98.37494659 -58.82101822]
[99.01156616 -43.83453369]
[99.86019135 -28.85855675]
[100.70881653 -13.88258266]
[101.55744171 1.09339273]
[102.40606689 16.06936836]
[110.85102081 28.33851624]
[103.90686035 42.55432510]
[104.75548553 57.53030014]
[105.60411072 72.50627136]
[106.45273590 87.48225403]
[125.62108612 100.85775757]
[137.92861938 109.43239594]
[150.23616028 118.00704193]
[162.54370117 126.58168030]
[174.85124207 135.15632629]
[187.51161194 143.20089722]
[200.50198364 150.70089722]
[213.49237061 158.20089722]
[226.48275757 165.70089722]
[239.47312927 173.20089722]
[253.59338379 166.76675415]
[268.79205322 169.89407349]
[279.22494507 181.38034058]
[280.88040161 196.80885315]
[273.12185669 210.24703979]
[258.93264771 216.52763367]
[243.76878357 213.23561096]
[233.46112061 201.63684082]
[231.97312927 186.19126892]
[218.98275757 178.69126892]
[205.99237061 171.19126892]
[193.00198364 163.69126892]
[180.01161194 156.19126892]
[176.40261841 156.83319092]
[172.29942322 155.66270447]
[168.60359192 152.46655273]
[166.27659607 147.46386719]
[153.96905518 138.88922119]
[141.66151428 130.31457520]
[129.35398865 121.73993683]
[117.04644012 113.16529083]
[118.95391846 128.04351807]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 30]
[3 29]
[4 28]
[5 27]
[7 26]
[8 25]
[9 24]
[10 23]
[11 22]
[12 21]
[13 20]
[14 19]
[31 78]
[32 77]
[33 76]
[34 75]
[36 73]
[37 72]
[38 71]
[39 70]
[40 69]
[42 68]
[43 67]
[44 66]
[46 65]
[47 64]
[48 63]
[49 62]
[79 109]
[80 108]
[81 107]
[82 106]
[83 105]
[84 101]
[85 100]
[86 99]
[87 98]
[88 97]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
