%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 12:56:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCCCAGCGGGCUCUGCCCUGGUGCGCUUCACACAGCACCAAGCAGCAACAAGAACAGCAGAAGGGGAACUGCCAAGGAGACCUGAUGUUAGAUCAAAGCCAGAGAGGAGCCUAUGGAAUGUGGAUCAAAUGCCAGUUGUGACGAAAUGAGGAAUGUAUAUGUUGGCUGUUUUUCCCCAACAUCUCAAUAAAACUUUGAAAGCAGAA\
) } def
/len { sequence length } bind def

/coor [
[60.38938141 202.19651794]
[57.25600433 216.86560059]
[54.12262726 231.53468323]
[50.98925018 246.20376587]
[58.47164154 260.39508057]
[51.90987396 275.03485107]
[36.33757019 278.89270020]
[23.70047188 269.00918579]
[23.69268036 252.96614075]
[36.32017136 243.07038879]
[39.45354843 228.40130615]
[42.58692169 213.73222351]
[45.72029877 199.06314087]
[48.63283157 184.34861755]
[51.32386398 169.59197998]
[54.01489258 154.83534241]
[56.70592117 140.07870483]
[59.39694977 125.32206726]
[53.05725098 121.31479645]
[40.37785721 113.30025482]
[34.03815842 109.29298401]
[21.86326790 118.05494690]
[9.68837833 126.81691742]
[-2.48651218 135.57887268]
[-14.66140270 144.34085083]
[-26.83629227 153.10281372]
[-25.21993446 168.37641907]
[-31.47159004 182.40539551]
[-43.90959549 191.41603088]
[-59.18819046 192.98451233]
[-73.19750977 186.68891907]
[-82.16911316 174.22271729]
[-83.68968964 158.93928528]
[-77.35021210 144.94976807]
[-64.85596466 136.01728821]
[-49.56783295 134.54461670]
[-35.59825897 140.92791748]
[-23.42336845 132.16595459]
[-11.24847794 123.40399170]
[0.92641234 114.64202118]
[13.10130310 105.88005829]
[25.27619362 97.11809540]
[72.74690247 52.60581589]
[116.22152710 69.48007202]
[102.40902710 62.27920151]
[97.88960266 47.75234985]
[104.83965302 34.62861633]
[100.18296051 20.36975288]
[95.52626801 6.11088848]
[90.86957550 -8.14797592]
[86.21288300 -22.40683937]
[70.40317535 -22.44353294]
[55.43893814 -27.46288300]
[42.84657669 -36.93548203]
[33.90504456 -49.87857437]
[29.51596642 -64.95799255]
[30.11273193 -80.62567902]
[35.61775970 -95.27860260]
[23.85023117 -104.58049774]
[12.08270168 -113.88239288]
[0.31517184 -123.18428802]
[-15.17478561 -121.54142761]
[-26.97622490 -131.14250183]
[-28.44697762 -145.91993713]
[-40.21450806 -155.22183228]
[-51.98203659 -164.52372742]
[-66.23353577 -158.97016907]
[-81.25217438 -161.28042603]
[-93.01972961 -170.73510742]
[-98.43860626 -184.71694946]
[-96.14683533 -199.43473816]
[-107.91436768 -208.73663330]
[-124.21020508 -210.57444763]
[-130.51762390 -225.71211243]
[-120.34807587 -238.57727051]
[-104.16313171 -235.93536377]
[-98.61247253 -220.50416565]
[-86.84494019 -211.20227051]
[-73.05395508 -216.83024597]
[-58.19874954 -214.78602600]
[-46.28256226 -205.51936340]
[-40.56711197 -191.43992615]
[-42.68014145 -176.29125977]
[-30.91261101 -166.98936462]
[-19.14508247 -157.68746948]
[-4.42735052 -159.66836548]
[7.63910723 -150.40255737]
[9.61706638 -134.95181274]
[21.38459587 -125.64991760]
[33.15212631 -116.34803009]
[44.91965485 -107.04613495]
[60.90993500 -116.94496918]
[79.45394135 -120.07479095]
[82.14496613 -134.83143616]
[84.83599854 -149.58807373]
[87.52703094 -164.34471130]
[73.86894226 -175.40107727]
[67.72234344 -191.76824951]
[70.69578552 -208.90643311]
[81.88140869 -222.11062622]
[98.12948608 -227.80221558]
[100.37574005 -242.63307190]
[102.62198639 -257.46392822]
[97.03851318 -272.26715088]
[106.59447479 -283.69226074]
[108.84072113 -298.52310181]
[99.26433563 -311.09564209]
[101.46569061 -326.74584961]
[114.13875580 -336.18878174]
[129.76483154 -333.82208252]
[139.07324219 -321.04989624]
[136.54147339 -305.44970703]
[123.67158508 -296.27685547]
[121.42533112 -281.44598389]
[127.16947937 -267.70358276]
[117.45285034 -255.21768188]
[115.20659637 -240.38682556]
[112.96035004 -225.55596924]
[123.62483978 -218.77882385]
[130.96061707 -208.43327332]
[133.84881592 -196.03611755]
[131.82586670 -183.42141724]
[125.15745544 -172.46919250]
[114.80426788 -164.82519531]
[102.28366852 -161.65367126]
[99.59263611 -146.89703369]
[96.90160370 -132.14039612]
[94.21057892 -117.38375854]
[105.57518768 -111.76173401]
[115.12551117 -103.39687347]
[122.21434784 -92.84478760]
[126.35842133 -80.80968475]
[127.27131653 -68.09735107]
[124.88325500 -55.56124496]
[119.34635925 -44.04515457]
[111.02497864 -34.32643890]
[100.47174835 -27.06353378]
[105.12844086 -12.80466938]
[109.78513336 1.45419514]
[114.44182587 15.71305943]
[119.09851837 29.97192383]
[132.45474243 36.46398163]
[137.38041687 50.85816193]
[130.48039246 64.82337952]
[126.32659149 50.40998840]
[127.20914459 35.43597412]
[133.02734375 21.61032295]
[143.11714172 10.51095295]
[156.32699585 3.40463495]
[171.14926147 1.10241210]
[185.89228821 3.86703634]
[198.87345886 11.38298130]
[208.61120605 22.79245377]
[213.99420166 36.79329300]
[214.40805054 51.78758240]
[209.80554199 66.06402588]
[200.71194458 77.99325562]
[188.16511536 86.21379852]
[173.59703064 89.78742981]
[158.67033386 88.30629730]
[145.08654785 81.93800354]
[158.43624878 88.77797699]
[171.78596497 95.61795807]
[185.13566589 102.45793152]
[198.48538208 109.29790497]
[211.83508301 116.13787842]
[225.18479919 122.97785187]
[238.04095459 114.57459259]
[253.37722778 113.74124908]
[267.06823730 120.70199585]
[275.43115234 133.58442688]
[276.21640015 148.92323303]
[269.21279907 162.59234619]
[256.30419922 170.91485596]
[240.96301270 171.65203857]
[227.31591797 164.60559082]
[219.03392029 151.67098999]
[218.34481812 136.32756042]
[204.99511719 129.48759460]
[191.64540100 122.64761353]
[178.29570007 115.80764008]
[164.94598389 108.96766663]
[151.59628296 102.12769318]
[138.24656677 95.28771210]
[127.67943573 105.93457794]
[117.11322784 116.58048248]
[124.05334473 129.87841797]
[130.99345398 143.17633057]
[137.93357849 156.47425842]
[153.24195862 159.66600037]
[162.87658691 171.98298645]
[162.28826904 187.60949707]
[151.75480652 199.16719055]
[136.24977112 201.19885254]
[123.09415436 192.74522400]
[118.49965668 177.79782104]
[124.63565063 163.41438293]
[117.69553375 150.11645508]
[110.75541687 136.81852722]
[103.81530762 123.52059937]
[96.39987946 124.64372253]
[81.56901550 126.88997650]
[74.15358734 128.01310730]
[71.46256256 142.76974487]
[68.77153015 157.52638245]
[66.08049774 172.28302002]
[63.38946915 187.03965759]
[65.25183105 193.38601685]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 13]
[2 12]
[3 11]
[4 10]
[14 207]
[15 206]
[16 205]
[17 204]
[18 203]
[21 42]
[22 41]
[23 40]
[24 39]
[25 38]
[26 37]
[44 144]
[47 141]
[48 140]
[49 139]
[50 138]
[51 137]
[58 91]
[59 90]
[60 89]
[61 88]
[64 85]
[65 84]
[66 83]
[71 78]
[72 77]
[93 128]
[94 127]
[95 126]
[96 125]
[101 118]
[102 117]
[103 116]
[105 114]
[106 113]
[161 184]
[162 183]
[163 182]
[164 181]
[165 180]
[166 179]
[167 178]
[186 200]
[187 199]
[188 198]
[189 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
