%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 02:31:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUGAUAUUUUAUAGCUUGGGAAGAAACUUGCAGAUGAUAUGUGCUGCCUUUGCUUCUUAUCAUUCAUGGCAGAUUGUUUGUGCUUUCAACAUUUCAUUUGAAAUGGGAGAAGAUAAAAUCACUUGAUGUAACCUGGAAACUAUGCUUUACAUGGCAAUCAAAGCCUUUUGAUCAUGUACAUUUUAUUUGAUAUUAAAAUCUUUUAUAACCAGAUA\
) } def
/len { sequence length } bind def

/coor [
[157.80035400 228.53155518]
[149.99053955 215.72503662]
[142.18072510 202.91853333]
[134.37091064 190.11201477]
[126.56110382 177.30549622]
[118.75128937 164.49897766]
[110.94147491 151.69247437]
[103.46501923 151.09863281]
[104.17900848 166.08163452]
[109.29645538 180.18170166]
[100.20732880 192.11433411]
[85.25441742 190.92672729]
[78.16280365 177.70896912]
[85.44189453 164.59341431]
[88.51211548 149.91098022]
[81.03565979 149.31715393]
[71.30216217 160.73025513]
[72.36725616 176.27062988]
[62.33351898 187.70648193]
[47.51157761 188.62611389]
[51.27562332 203.67974854]
[45.44129181 218.05821228]
[32.25200272 226.23269653]
[16.77930832 225.05995178]
[4.97277355 214.99092102]
[1.37225258 199.89735413]
[7.36221933 185.58303833]
[20.63941002 177.55209351]
[36.09847260 178.89262390]
[34.66682053 164.11135864]
[44.37538910 152.39817810]
[59.88905334 150.99674988]
[69.62255096 139.58364868]
[62.28467178 126.12614441]
[59.94886017 112.18809509]
[45.04843521 113.91358185]
[30.14800835 115.63906860]
[15.24758244 117.36456299]
[0.34715700 119.09004974]
[-14.55326843 120.81553650]
[-29.45369530 122.54102325]
[-37.55648422 137.39111328]
[-52.76383972 144.41392517]
[-68.99739075 141.02069092]
[-79.89775848 128.74316406]
[-94.77176666 130.68319702]
[-103.03662872 143.95820618]
[-117.91687012 148.76574707]
[-132.38648987 142.83584595]
[-139.61340332 128.96839905]
[-136.18525696 113.71121216]
[-123.72071838 104.26825714]
[-108.10517883 105.09819794]
[-96.71179962 115.80918121]
[-81.83779144 113.86914825]
[-76.57050323 101.60453033]
[-65.84556580 93.47792053]
[-52.39876175 91.69642639]
[-39.72704697 96.83119202]
[-31.17918396 107.64060211]
[-16.27875710 105.91511536]
[-1.37833178 104.18962097]
[13.52209377 102.46413422]
[28.42251968 100.73864746]
[43.32294464 99.01316071]
[58.22336960 97.28766632]
[62.57576752 81.23646545]
[72.83407593 68.14633942]
[87.37943268 60.08302689]
[103.91643524 58.31900787]
[107.97243500 43.87778854]
[112.02843475 29.43656731]
[106.17278290 10.14380074]
[120.59305573 -2.74259448]
[124.23120117 -17.29470253]
[127.86935425 -31.84681129]
[131.50750732 -46.39892197]
[135.14564514 -60.95103073]
[89.49349976 -107.42594910]
[85.22981262 -121.80722046]
[80.96612549 -136.18849182]
[76.70244598 -150.56976318]
[72.43875885 -164.95103455]
[58.82904816 -172.52821350]
[54.70993423 -187.17359924]
[62.01747894 -200.10168457]
[57.75379562 -214.48295593]
[53.49011230 -228.86422729]
[49.22642517 -243.24549866]
[38.28533936 -250.06953430]
[35.02829361 -262.13153076]
[40.67420197 -272.82595825]
[36.61820221 -287.26718140]
[32.56220245 -301.70840454]
[28.50620079 -316.14962769]
[24.45020103 -330.59085083]
[20.39419937 -345.03207397]
[8.28823948 -356.09451294]
[12.07938766 -372.04943848]
[27.86763382 -376.48376465]
[39.41138458 -364.83584595]
[34.83541870 -349.08807373]
[38.89142227 -334.64685059]
[42.94742203 -320.20562744]
[47.00342178 -305.76440430]
[51.05942154 -291.32318115]
[55.11542511 -276.88195801]
[68.31494904 -265.31402588]
[63.60770035 -247.50918579]
[67.87138367 -233.12791443]
[72.13507080 -218.74664307]
[76.39875031 -204.36537170]
[89.57180786 -197.50927734]
[94.10066223 -182.98535156]
[86.82003021 -169.21472168]
[91.08371735 -154.83345032]
[95.34740448 -140.45217896]
[99.61108398 -126.07090759]
[103.87477112 -111.68963623]
[118.82767487 -110.50197601]
[125.30809784 -124.02987671]
[131.78851318 -137.55778503]
[129.99053955 -153.85806274]
[143.36637878 -163.34590149]
[158.15612793 -156.26100159]
[159.14533997 -139.89172363]
[145.31642151 -131.07736206]
[138.83599854 -117.54945374]
[132.35557556 -104.02155304]
[137.58190918 -98.64237976]
[148.34025574 -109.09503174]
[159.09860229 -119.54769135]
[169.85694885 -130.00033569]
[180.61529541 -140.45300293]
[191.37380981 -150.90548706]
[201.82612610 -140.14682007]
[191.06794739 -129.69465637]
[180.30960083 -119.24199677]
[169.55125427 -108.78934479]
[158.79290771 -98.33668518]
[148.03456116 -87.88403320]
[153.26089478 -82.50485992]
[166.96992493 -88.59274292]
[180.67897034 -94.68062592]
[194.38800049 -100.76850891]
[208.09703064 -106.85638428]
[215.17941284 -121.25150299]
[230.88000488 -124.54861450]
[243.15466309 -114.21844482]
[242.58732605 -98.18542480]
[229.61318970 -88.74871826]
[214.18492126 -93.14734650]
[200.47587585 -87.05947113]
[186.76684570 -80.97158813]
[173.05781555 -74.88370514]
[159.34877014 -68.79582214]
[149.69775391 -57.31287766]
[146.05961609 -42.76077271]
[142.42146301 -28.20866203]
[138.78330994 -13.65655327]
[135.14515686 0.89555520]
[141.16612244 9.14362431]
[141.66650391 19.56300163]
[136.24024963 28.72800446]
[126.46965790 33.49256897]
[122.41365814 47.93378830]
[118.35765839 62.37501144]
[131.56428528 70.50060272]
[141.25912476 83.21720886]
[145.87034607 99.03408051]
[144.44929504 115.93452454]
[136.84062195 131.63270569]
[123.74798584 143.88265991]
[131.55780029 156.68917847]
[139.36761475 169.49568176]
[147.17742920 182.30220032]
[154.98724365 195.10871887]
[162.79705811 207.91522217]
[170.60687256 220.72174072]
[178.10450745 220.81240845]
[185.04354858 223.46884155]
[190.58261108 228.31851196]
[194.06761169 234.72616577]
[195.10885620 241.87678528]
[193.62414551 248.87908936]
[189.84317017 254.87672424]
[196.71073914 268.21224976]
[203.57832336 281.54779053]
[210.44589233 294.88333130]
[217.31346130 308.21884155]
[224.18104553 321.55438232]
[239.45346069 322.39138794]
[252.17239380 330.70556641]
[258.97683716 344.18020630]
[258.12869263 359.15139771]
[249.95579529 371.60406494]
[256.82336426 384.93960571]
[263.69094849 398.27514648]
[270.55850220 411.61065674]
[284.63571167 420.02285767]
[284.11862183 436.41384888]
[269.53918457 443.92199707]
[255.89549255 434.82357788]
[257.22299194 418.47824097]
[250.35540771 405.14270020]
[243.48783875 391.80718994]
[236.62025452 378.47164917]
[221.73635864 377.89285278]
[209.05621338 369.88848877]
[202.03871155 356.52355957]
[202.65715027 341.34085083]
[210.84550476 328.42196655]
[203.97793579 315.08642578]
[197.11036682 301.75088501]
[190.24278259 288.41537476]
[183.37521362 275.07983398]
[176.50764465 261.74429321]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 179]
[2 178]
[3 177]
[4 176]
[5 175]
[6 174]
[7 173]
[16 33]
[17 32]
[20 29]
[35 66]
[36 65]
[37 64]
[38 63]
[39 62]
[40 61]
[41 60]
[45 55]
[46 54]
[70 167]
[71 166]
[72 165]
[74 161]
[75 160]
[76 159]
[77 158]
[78 157]
[79 119]
[80 118]
[81 117]
[82 116]
[83 115]
[86 112]
[87 111]
[88 110]
[89 109]
[92 107]
[93 106]
[94 105]
[95 104]
[96 103]
[97 102]
[120 129]
[121 128]
[122 127]
[142 156]
[143 155]
[144 154]
[145 153]
[146 152]
[186 217]
[187 216]
[188 215]
[189 214]
[190 213]
[191 212]
[196 207]
[197 206]
[198 205]
[199 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
