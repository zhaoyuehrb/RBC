%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 05:05:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCGAUAGUGACAUUAUGGAAGAGUCAAACCACAACCAUUCUUUCUUGUCAUAGUUCCCAUCAUAAAAUAAUGACCCAAGGAGACGUUCAAAAUAUUAAAGUCUAUUUUCUACUGAGAGACUGGAUUUGGAAAGAAUAUUGAGAAAAAAAACCAAAAAAAAUUUUGACUAGAAAUAGAUCAUGAUCACUCUUUAUAUGUGGAUUAAGUUCCCUUAGAUACAUUGGAUUAGUCCUUACCAGUAGAC\
) } def
/len { sequence length } bind def

/coor [
[247.60646057 491.56387329]
[243.98210144 477.00833130]
[243.77162170 462.00979614]
[246.98608398 447.35827637]
[253.45620728 433.82543945]
[262.84118652 422.12408447]
[274.64675903 412.87048340]
[288.25106812 406.55203247]
[302.93759155 403.50155640]
[317.93283081 403.87969971]
[332.44696045 407.66653442]
[345.71551514 414.66262817]
[357.03958130 424.49938965]
[350.77694702 410.86929321]
[344.51431274 397.23922729]
[338.25167847 383.60913086]
[326.97586060 382.06744385]
[317.74221802 375.21179199]
[312.90481567 364.64642334]
[313.76577759 352.93817139]
[320.22702026 342.99325562]
[314.31167603 329.20889282]
[308.39633179 315.42453003]
[302.48101807 301.64016724]
[296.56567383 287.85577393]
[290.65032959 274.07141113]
[284.73498535 260.28704834]
[275.42709351 260.37939453]
[266.43673706 257.12304688]
[258.96008301 250.76353455]
[254.05567932 241.96957397]
[252.49674988 231.76521301]
[254.65449524 221.41123962]
[260.42962646 212.24937439]
[269.24353027 205.52873230]
[257.61828613 196.04960632]
[245.99305725 186.57046509]
[233.94638062 187.48498535]
[224.18673706 179.70393372]
[222.27479553 166.96430969]
[210.77056885 157.33868408]
[199.26634216 147.71304321]
[187.76211548 138.08741760]
[176.25788879 128.46177673]
[164.75366211 118.83615112]
[153.24943542 109.21051788]
[141.74520874 99.58489227]
[130.24098206 89.95925903]
[124.64844513 131.92889404]
[73.39403534 140.91857910]
[58.40486526 140.34867859]
[43.41569519 139.77876282]
[28.42652512 139.20886230]
[13.43735600 138.63894653]
[-0.64682305 145.84634399]
[-13.07093430 137.63105774]
[-28.06010437 137.06115723]
[-43.04927444 136.49124146]
[-51.16051483 149.53361511]
[-64.71379852 156.75885010]
[-80.06335449 156.22341919]
[-93.08023071 148.07133484]
[-100.26295471 134.49546814]
[-99.67941284 119.14766693]
[-91.48656464 106.15641022]
[-77.88825226 99.01627350]
[-62.54235840 99.64792633]
[-49.57683945 107.88144684]
[-42.47936249 121.50207520]
[-27.49019432 122.07198334]
[-12.50102425 122.64189148]
[0.51102865 115.39373779]
[14.00726604 123.64978027]
[28.99643517 124.21968842]
[43.98560333 124.78959656]
[58.97477341 125.35950470]
[73.96394348 125.92942047]
[76.38973236 118.83255005]
[62.19606781 113.98074341]
[67.04811096 99.78716278]
[81.24129486 104.63880920]
[83.66708374 97.54193878]
[71.46516418 88.81764984]
[59.26324844 80.09336090]
[42.89780045 79.04258728]
[35.86857224 64.22631836]
[45.40663528 50.88624573]
[61.70004272 52.74550247]
[67.98754120 67.89144135]
[80.18945312 76.61573029]
[92.39137268 85.34001923]
[98.65366364 81.21282196]
[90.39926910 68.68824768]
[82.14488220 56.16366959]
[70.42419434 46.80281830]
[75.70502472 32.76313019]
[90.68943024 33.44702148]
[94.66945648 47.90927887]
[102.92385101 60.43385696]
[111.17823792 72.95843506]
[117.44052887 68.83123779]
[114.23516846 54.17771530]
[111.02981567 39.52419662]
[107.82445526 24.87067413]
[104.61910248 10.21715260]
[101.41374207 -4.43636894]
[98.20838928 -19.08988953]
[87.70084381 -30.91791153]
[92.53972626 -45.00458908]
[89.33437347 -59.65811157]
[86.12901306 -74.31163025]
[82.92366028 -88.96514893]
[79.71829987 -103.61867523]
[68.27933502 -115.36950684]
[72.99615479 -131.07566833]
[89.01651001 -134.58001709]
[99.86002350 -122.27756500]
[94.37181854 -106.82402802]
[97.57717896 -92.17050934]
[100.78253174 -77.51699066]
[103.98789215 -62.86346817]
[107.19324493 -48.20994568]
[117.47152710 -37.43004227]
[112.86190796 -22.29524612]
[116.06726837 -7.64172554]
[119.27262115 7.01179552]
[122.47798157 21.66531754]
[125.68333435 36.31884003]
[128.88868713 50.97235870]
[132.09405518 65.62588501]
[139.86662292 78.45503235]
[151.37084961 88.08066559]
[162.87507629 97.70629120]
[174.37930298 107.33192444]
[185.88352966 116.95755768]
[197.38775635 126.58319092]
[208.89198303 136.20881653]
[220.39620972 145.83445740]
[231.90043640 155.46008301]
[250.11755371 158.22230530]
[255.47218323 174.94523621]
[267.09741211 184.42436218]
[278.72265625 193.90348816]
[273.06509399 180.01133728]
[262.20373535 169.66577148]
[254.93606567 156.54399109]
[251.92817688 141.84866333]
[253.45574951 126.92665100]
[259.37878418 113.14559174]
[269.15441895 101.76855469]
[281.88668823 93.83827209]
[296.40866089 90.08158112]
[311.38931274 90.84278870]
[325.45568848 96.05213165]
[337.31854248 105.23215485]
[345.89059448 117.54148102]
[350.38623047 131.85194397]
[350.39340210 146.85194397]
[345.91143799 161.16668701]
[337.35113525 173.48420715]
[325.49703979 182.67555237]
[311.43960571 187.89750671]
[300.76208496 198.43270874]
[315.18331909 194.30627441]
[329.60458374 190.17982483]
[340.74380493 178.94468689]
[355.10852051 182.88223267]
[369.52975464 178.75578308]
[383.95101929 174.62934875]
[398.34582520 170.41165161]
[412.71365356 166.10285950]
[427.08148193 161.79406738]
[437.92977905 149.49584961]
[453.94876099 153.00643921]
[458.65948486 168.71444702]
[447.21591187 180.46081543]
[431.39025879 176.16189575]
[417.02246094 180.47068787]
[402.65463257 184.77946472]
[397.16394043 189.69926453]
[388.07745361 189.05059814]
[373.65618896 193.17704773]
[359.23495483 197.30348206]
[349.12722778 208.24346924]
[333.73101807 204.60107422]
[319.30975342 208.72752380]
[304.88851929 212.85395813]
[310.57540894 236.22207642]
[298.51934814 254.37171936]
[304.43469238 268.15609741]
[310.35003662 281.94046021]
[316.26538086 295.72482300]
[322.18072510 309.50918579]
[328.09603882 323.29354858]
[334.01138306 337.07791138]
[351.87240601 343.45056152]
[359.25326538 360.57104492]
[351.88174438 377.34649658]
[358.14437866 390.97659302]
[364.40701294 404.60665894]
[370.66964722 418.23675537]
[379.00320435 430.70880127]
[389.19915771 441.71072388]
[399.39514160 452.71267700]
[409.59109497 463.71459961]
[419.78704834 474.71652222]
[429.98300171 485.71844482]
[440.17895508 496.72039795]
[446.33554077 499.02090454]
[449.88916016 503.41674805]
[450.48947144 508.13256836]
[460.40347290 519.38928223]
[470.31744385 530.64593506]
[485.00024414 526.47729492]
[500.03625488 529.10052490]
[512.44006348 537.99481201]
[519.74884033 551.39422607]
[520.51147461 566.63830566]
[514.57647705 580.70025635]
[503.12234497 590.78814697]
[488.42324829 594.89898682]
[473.39767456 592.21655273]
[461.02902222 583.27343750]
[453.77304077 569.84533691]
[453.07046509 554.59844971]
[459.06072998 540.55993652]
[449.14675903 529.30322266]
[439.23278809 518.04656982]
[429.17703247 506.91635132]
[418.98107910 495.91442871]
[408.78509521 484.91247559]
[398.58914185 473.91055298]
[388.39318848 462.90863037]
[378.19723511 451.90670776]
[368.00128174 440.90475464]
[372.75576782 455.13131714]
[374.14163208 470.06716919]
[372.08587646 484.92562866]
[366.69674683 498.92410278]
[358.25814819 511.32531738]
[347.21450806 521.47607422]
[334.14752197 528.84173584]
[319.74536133 533.03442383]
[304.76666260 533.83319092]
[290.00027466 531.19604492]
[276.22402954 525.26184082]
[264.16345215 516.34320068]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 201]
[14 200]
[15 199]
[16 198]
[21 195]
[22 194]
[23 193]
[24 192]
[25 191]
[26 190]
[27 189]
[35 143]
[36 142]
[37 141]
[40 139]
[41 138]
[42 137]
[43 136]
[44 135]
[45 134]
[46 133]
[47 132]
[48 131]
[50 77]
[51 76]
[52 75]
[53 74]
[54 73]
[56 71]
[57 70]
[58 69]
[82 91]
[83 90]
[84 89]
[101 130]
[102 129]
[103 128]
[104 127]
[105 126]
[106 125]
[107 124]
[109 122]
[110 121]
[111 120]
[112 119]
[113 118]
[163 187]
[164 186]
[165 185]
[167 183]
[168 182]
[169 181]
[170 179]
[171 178]
[172 177]
[202 235]
[203 234]
[204 233]
[205 232]
[206 231]
[207 230]
[208 229]
[211 228]
[212 227]
[213 226]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
