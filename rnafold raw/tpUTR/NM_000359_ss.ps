%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 21:56:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCGUGCCAGGAGCAAUGGGACUGGAGUCAGAUGAGCAAGGACAUUGCCCCAAGAUAGGGGCACACUACAGAGCAGCUCCCCAGGAGCUCAGGUGGGGAGUCCAGGGCUCCCGGAGGGGGAGUCCAGGGCUCCCGGAGAGGGAGUCAGUCUUCACUUGCACUGGGGGAACAGAUGCUAAUAAACUGUUUUUUAAUGAA\
) } def
/len { sequence length } bind def

/coor [
[242.30856323 386.79580688]
[235.08226013 373.65118408]
[227.85595703 360.50659180]
[220.62965393 347.36199951]
[213.30033875 334.27456665]
[205.86845398 321.24508667]
[198.43656921 308.21560669]
[191.00469971 295.18612671]
[177.97799683 287.96435547]
[177.86145020 272.14355469]
[170.42956543 259.11410522]
[162.89558411 246.14338684]
[155.25996399 233.23226929]
[150.43392944 247.43470764]
[137.04370117 254.19500732]
[122.75032806 249.64533997]
[115.73161316 236.38873291]
[120.00322723 222.00981140]
[133.12121582 214.73532104]
[147.57974243 218.72685242]
[141.19303894 205.15443420]
[134.80635071 191.58203125]
[128.41966248 178.00962830]
[122.03298187 164.43722534]
[115.64628601 150.86482239]
[109.25959778 137.29240417]
[86.98406982 136.15313721]
[69.09427643 122.83200836]
[55.52187347 129.21868896]
[41.94946671 135.60537720]
[41.34762955 150.89904785]
[33.69736099 164.15544128]
[20.75663376 172.32833862]
[5.49913406 173.53965759]
[-8.56907654 167.51106262]
[-18.21522522 155.62786865]
[-21.22270012 140.62074280]
[-16.90040207 125.93822479]
[-6.24156761 114.95424652]
[8.30448437 110.19284058]
[23.39517593 112.74814606]
[35.56277847 122.03298187]
[49.13518524 115.64628601]
[62.70758820 109.25959778]
[58.25699615 101.35736084]
[55.61023712 91.99740601]
[55.17810059 81.61585999]
[40.40146255 79.03691864]
[25.62482262 76.45798492]
[10.84818172 73.87905121]
[-3.92845821 71.30010986]
[-18.70509720 68.72117615]
[-31.48963165 78.01263428]
[-47.08644104 75.46017456]
[-56.24221802 62.57812119]
[-53.52500153 47.00917053]
[-40.54686737 37.99010086]
[-25.00751305 40.87177277]
[-16.12616158 53.94453430]
[-1.34952164 56.52347183]
[13.42711830 59.10240936]
[28.20375824 61.68134308]
[42.98039627 64.26028442]
[57.75703812 66.83921814]
[65.79444122 54.17429733]
[57.16936111 41.90205383]
[48.54428101 29.62980652]
[39.91920471 17.35756111]
[29.10293007 16.10770035]
[20.93153954 9.24865818]
[17.95169449 -0.76630360]
[20.91716576 -10.55621624]
[12.68182373 -23.09332657]
[4.44648170 -35.63043594]
[-3.78886056 -48.16754532]
[-19.00694847 -51.49133682]
[-27.18016052 -64.32306671]
[-23.91765022 -78.81069946]
[-32.15299225 -91.34780884]
[-47.03866577 -98.22885895]
[-48.25267029 -114.58300781]
[-34.54613876 -123.58651733]
[-20.01918221 -115.97734070]
[-19.61588287 -99.58315277]
[-11.38054085 -87.04604340]
[3.21125388 -84.28649139]
[11.74165821 -71.68939209]
[8.74825001 -56.40288925]
[16.98359299 -43.86577988]
[25.21893501 -31.32866859]
[33.45427704 -18.79155731]
[51.31677246 -11.40112495]
[52.19144821 8.73248291]
[60.81652832 21.00472832]
[69.44160461 33.27697372]
[78.06668854 45.54922104]
[93.04402161 44.72496796]
[100.27032471 31.58036613]
[107.49663544 18.43576622]
[114.72293854 5.29116631]
[121.94924164 -7.85343361]
[129.17555237 -20.99803352]
[136.40185547 -34.14263535]
[143.62815857 -47.28723526]
[143.49620056 -63.10789108]
[156.40785217 -70.53340912]
[163.63415527 -83.67800903]
[170.86045837 -96.82260895]
[178.08676147 -109.96720886]
[185.31306458 -123.11180878]
[192.53938293 -136.25640869]
[199.76568604 -149.40101624]
[206.99198914 -162.54560852]
[203.91491699 -178.29080200]
[214.41583252 -190.41970825]
[230.43933105 -189.62806702]
[239.69357300 -176.52314758]
[235.07948303 -161.15794373]
[220.13658142 -155.31930542]
[212.91027832 -142.17471313]
[205.68397522 -129.03010559]
[198.45767212 -115.88550568]
[191.23136902 -102.74090576]
[184.00506592 -89.59630585]
[176.77876282 -76.45170593]
[169.55244446 -63.30710602]
[170.20129395 -48.42663956]
[156.77275085 -40.06092834]
[149.54644775 -26.91632843]
[142.32014465 -13.77172852]
[135.09384155 -0.62712860]
[127.86753845 12.51747131]
[120.64123535 25.66207123]
[113.41492462 38.80667114]
[106.18862152 51.95127106]
[116.04050446 55.25355148]
[124.77836609 60.50571823]
[132.03251648 67.38763428]
[137.51770020 75.51300049]
[141.04391479 84.45039368]
[142.52224731 93.74584198]
[141.96546936 102.94572449]
[139.48370361 111.61882782]
[135.27532959 119.37659454]
[129.61395264 125.89047241]
[122.83200836 130.90571594]
[129.21868896 144.47813416]
[135.60537720 158.05053711]
[141.99208069 171.62294006]
[148.37876892 185.19534302]
[154.76545715 198.76774597]
[161.15214539 212.34014893]
[168.17108154 225.59663391]
[175.80671692 238.50776672]
[182.87521362 244.30789185]
[183.45903015 251.68222046]
[190.89091492 264.71170044]
[204.44918823 272.86544800]
[204.03416443 287.75427246]
[211.46604919 300.78372192]
[218.89793396 313.81320190]
[226.32980347 326.84268188]
[233.30633545 332.75311279]
[233.77424622 340.13568115]
[241.00056458 353.28030396]
[248.22686768 366.42489624]
[255.45317078 379.56948853]
[263.68850708 392.10659790]
[272.88211060 403.95892334]
[282.07571411 415.81124878]
[291.26931763 427.66357422]
[300.46292114 439.51589966]
[309.65655518 451.36822510]
[324.71316528 448.61935425]
[339.31915283 453.19360352]
[350.11816406 464.03979492]
[354.62863159 478.66561890]
[351.81411743 493.71011353]
[342.32131958 505.71618652]
[328.33169556 511.92492676]
[313.05990601 510.90963745]
[300.01528931 502.90356445]
[292.19543457 489.74652100]
[291.39727783 474.46182251]
[297.80422974 460.56182861]
[288.61059570 448.70950317]
[279.41699219 436.85717773]
[270.22338867 425.00485229]
[261.02978516 413.15252686]
[251.83618164 401.30020142]
[252.17890930 416.29629517]
[245.06939697 429.50442505]
[232.36346436 437.47683716]
[217.37780762 438.13247681]
[204.02415466 431.30017090]
[195.78829956 418.76342773]
[194.82003784 403.79470825]
[201.37213135 390.30136108]
[213.73426819 381.80563354]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 167]
[2 166]
[3 165]
[4 164]
[5 162]
[6 161]
[7 160]
[8 159]
[10 157]
[11 156]
[12 154]
[13 153]
[20 152]
[21 151]
[22 150]
[23 149]
[24 148]
[25 147]
[26 146]
[28 44]
[29 43]
[30 42]
[47 64]
[48 63]
[49 62]
[50 61]
[51 60]
[52 59]
[65 96]
[66 95]
[67 94]
[68 93]
[72 91]
[73 90]
[74 89]
[75 88]
[78 85]
[79 84]
[97 135]
[98 134]
[99 133]
[100 132]
[101 131]
[102 130]
[103 129]
[104 128]
[106 126]
[107 125]
[108 124]
[109 123]
[110 122]
[111 121]
[112 120]
[113 119]
[168 190]
[169 189]
[170 188]
[171 187]
[172 186]
[173 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
