%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 04:21:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACCUUUUCCCCCCAUGCCUGCCCCUUCCCCUGUUCUGGGGCCACCCCUUUCCCCCUUGGCUCAGCCCCCUGAAGGUAAGUCCCCCCUUGGGGGCCUUCUUGGAGCCGUGUGUGAGUGAGUGGUCGCCACACAGCAUUGUACCCAGAGUCUGUCCCCAGACAUUGCACCUGGCGCUGUUAGGCCGGAAUUAAAGUGGCUUUUUGAGGUUUGGUUUUUCACAAUCA\
) } def
/len { sequence length } bind def

/coor [
[23.77315140 737.03454590]
[10.11114216 730.68658447]
[-1.79544735 721.45721436]
[-11.34938717 709.80944824]
[-18.07145691 696.32757568]
[-21.62447929 681.68774414]
[-21.83023643 666.62438965]
[-18.67840576 651.89300537]
[-12.32708549 638.23254395]
[-3.09485292 626.32818604]
[8.55520630 616.77703857]
[22.03873062 610.05828857]
[36.67939377 606.50878906]
[36.47088623 591.51025391]
[36.26238251 576.51165771]
[28.34891319 563.89318848]
[35.89363861 549.98681641]
[35.68513107 534.98828125]
[35.47662735 519.98968506]
[35.26811981 504.99114990]
[28.59031105 501.57693481]
[21.76188087 514.93255615]
[14.93345165 528.28814697]
[8.10481548 541.64367676]
[-5.25059175 534.81481934]
[1.57783318 521.45971680]
[8.40626240 508.10412598]
[15.23469257 494.74850464]
[8.55688286 491.33428955]
[-3.72374988 499.94741821]
[-16.00438309 508.56054688]
[-18.48954582 524.16821289]
[-31.33198738 533.37951660]
[-46.91251373 530.72943115]
[-55.98747635 517.79034424]
[-53.17286301 502.23870850]
[-40.13852692 493.30105591]
[-24.61751556 496.27993774]
[-12.33688259 487.66677856]
[-0.05625021 479.05364990]
[8.03740883 466.42462158]
[10.73334599 451.66888428]
[13.42928314 436.91314697]
[16.12521935 422.15737915]
[18.82115555 407.40164185]
[6.25226259 397.23822021]
[0.49365699 382.03436279]
[3.20682073 365.90924072]
[13.74415398 353.28280640]
[29.30034256 347.66445923]
[31.79090691 332.87265015]
[34.28147125 318.08087158]
[36.77203751 303.28906250]
[27.95254707 291.34118652]
[30.26762009 276.30471802]
[42.85947037 267.13504028]
[45.35003281 252.34324646]
[47.84059906 237.55145264]
[50.33116531 222.75967407]
[52.82173157 207.96788025]
[55.31229782 193.17608643]
[44.76871490 182.68939209]
[42.39378357 167.82925415]
[49.30523682 154.26144409]
[63.03932571 147.28427124]
[65.52989197 132.49247742]
[68.02045441 117.70069122]
[63.60387039 103.36563110]
[53.22072220 92.54019165]
[37.65170288 92.04677582]
[27.27592468 80.92032623]
[27.84226608 66.08068848]
[17.45911407 55.25524902]
[7.07596397 44.42980957]
[-3.30718708 33.60437012]
[-13.69033813 22.77892685]
[-16.54671478 37.50445175]
[-29.77365875 44.57891083]
[-43.60748291 38.78017807]
[-47.83652115 24.38867760]
[-39.33903885 12.02773857]
[-24.38604355 10.82238007]
[-33.99231720 -0.69801617]
[-43.59858704 -12.21841240]
[-53.20486069 -23.73880768]
[-62.81113434 -35.25920486]
[-77.59854889 -43.55189133]
[-73.72351074 -60.05705261]
[-56.79065704 -60.90253448]
[-51.29073715 -44.86547852]
[-41.68446350 -33.34508133]
[-32.07819366 -21.82468414]
[-22.47192001 -10.30428886]
[-12.86564732 1.21610725]
[-2.86489677 12.39577579]
[7.51825428 23.22121811]
[17.90140533 34.04665756]
[28.28455544 44.87210083]
[38.66770554 55.69754028]
[53.51805496 55.75036240]
[64.20225525 66.58098602]
[64.04616547 82.15704346]
[74.42931366 92.98248291]
[78.31603241 77.43043518]
[91.85097504 64.85195923]
[94.75176239 50.13511658]
[92.98530579 43.78206253]
[94.46315002 38.30857849]
[97.94316101 35.05204010]
[101.25193024 20.42152023]
[104.56069946 5.79100227]
[107.86946106 -8.83951569]
[111.17823029 -23.47003365]
[114.48699951 -38.10055161]
[113.32792664 -47.15000916]
[117.94477844 -52.91077042]
[121.45659637 -67.49388123]
[124.96841431 -82.07699585]
[128.48022461 -96.66010284]
[123.31716919 -112.22528839]
[134.41618347 -124.29772949]
[150.35955811 -120.45834351]
[154.74610901 -104.65675354]
[143.06333923 -93.14828491]
[139.55152893 -78.56517792]
[136.03970337 -63.98206329]
[132.52789307 -49.39895248]
[129.11750793 -34.79178619]
[125.80874634 -20.16126823]
[122.49998474 -5.53074932]
[119.19121552 9.09976864]
[115.88244629 23.73028755]
[112.57368469 38.36080551]
[109.46860504 53.03590393]
[106.56781769 67.75274658]
[112.42691040 72.43473816]
[121.79089355 60.71655655]
[131.15487671 48.99837875]
[140.51905823 37.28035355]
[152.23693848 46.64472961]
[142.87306213 58.36236572]
[133.50907898 70.08054352]
[124.14508820 81.79872894]
[130.00418091 86.48072052]
[143.71864319 80.40507507]
[157.43310547 74.32943726]
[166.91664124 61.66558075]
[181.68708801 63.58468628]
[195.40156555 57.50904846]
[209.11602783 51.43340683]
[222.83049011 45.35776520]
[236.54495239 39.28212357]
[245.76629639 25.72118378]
[262.09896851 27.19630623]
[268.74130249 42.19001007]
[258.86026001 55.27805710]
[242.62060547 52.99658966]
[228.90612793 59.07223129]
[215.19166565 65.14787292]
[201.47720337 71.22351074]
[187.76274109 77.29915619]
[179.26016235 89.52844238]
[163.50875854 88.04389954]
[149.79428101 94.11954498]
[136.07981873 100.19518280]
[131.97680664 112.91468811]
[123.78982544 122.71444702]
[113.04972076 128.44793701]
[101.53354645 129.66459656]
[90.97666931 126.62257385]
[82.81224823 120.19125366]
[80.32167816 134.98304749]
[77.83111572 149.77484131]
[88.52315521 160.86476135]
[90.61054230 175.94773865]
[83.50036621 189.21081543]
[70.10408783 195.66665649]
[67.61352539 210.45843506]
[65.12295532 225.25022888]
[62.63239288 240.04202271]
[60.14182663 254.83381653]
[57.65126038 269.62561035]
[66.54607391 282.41311646]
[63.80957031 297.37860107]
[51.56383133 305.77963257]
[49.07326508 320.57144165]
[46.58269882 335.36322021]
[44.09213257 350.15502930]
[55.32024765 358.48736572]
[61.83391571 370.78472900]
[62.41326904 384.62240601]
[57.00225830 397.29956055]
[46.70845795 406.36639404]
[33.57689667 410.09759521]
[30.88096237 424.85333252]
[28.18502426 439.60906982]
[25.48908806 454.36480713]
[22.79315186 469.12054443]
[28.34805489 469.54980469]
[34.10680389 471.59487915]
[39.62355042 475.33795166]
[44.43192673 480.74346924]
[48.07501984 487.65423584]
[50.13586426 495.79483032]
[50.26667023 504.78265381]
[50.47517776 519.78118896]
[50.68368149 534.77972412]
[50.89218903 549.77832031]
[58.82056808 563.46960449]
[51.26093292 576.30316162]
[51.46943665 591.30175781]
[51.67794418 606.30029297]
[66.41161346 609.44140625]
[80.07669830 615.78277588]
[91.98776245 625.00634766]
[101.54734802 636.64947510]
[108.27594757 650.12811279]
[111.83605957 664.76617432]
[112.04911804 679.82946777]
[108.90442657 694.56237793]
[102.55973053 708.22595215]
[93.33326721 720.13476562]
[81.68783569 729.69152832]
[68.20756531 736.41687012]
[53.56863022 739.97344971]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 212]
[14 211]
[15 210]
[17 208]
[18 207]
[19 206]
[20 205]
[29 40]
[30 39]
[31 38]
[41 198]
[42 197]
[43 196]
[44 195]
[45 194]
[50 188]
[51 187]
[52 186]
[53 185]
[56 182]
[57 181]
[58 180]
[59 179]
[60 178]
[61 177]
[65 173]
[66 172]
[67 171]
[68 103]
[69 102]
[72 99]
[73 98]
[74 97]
[75 96]
[76 95]
[82 94]
[83 93]
[84 92]
[85 91]
[86 90]
[105 135]
[106 134]
[109 133]
[110 132]
[111 131]
[112 130]
[113 129]
[114 128]
[116 127]
[117 126]
[118 125]
[119 124]
[144 165]
[145 164]
[146 163]
[148 161]
[149 160]
[150 159]
[151 158]
[152 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
