%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 12:04:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGUGCUGAUUUGUCUGGAGCUUCUUUGGUAAUUCUGGAAGCUUUUCCUGGCAGUCAAGAGAGGGUGACAUCCUGGGGCUUGUGACAUUUCCAGGGGCACUCAUGGCCCUCUCUGCUCUGCUUCUCCUCCUGCCGCUGACCAGAGCAUGGGAAAUAGCCCUGGAUUGGGUAGUGGGUGUGUGGUGCUUCUCUUUCCCGAUAAAGGCUGGUGCUGACCUCU\
) } def
/len { sequence length } bind def

/coor [
[95.97640228 350.48983765]
[96.45565033 344.34619141]
[98.64023590 338.54104614]
[102.37848663 333.54110718]
[107.39288330 329.75503540]
[105.26775360 314.90634155]
[103.14263153 300.05764771]
[99.93217468 296.53085327]
[98.89843750 290.95199585]
[101.17437744 284.75726318]
[99.47220612 269.85415649]
[97.77004242 254.95104980]
[96.06787109 240.04794312]
[94.36570740 225.14483643]
[92.66353607 210.24172974]
[83.53195190 198.47468567]
[89.65325928 183.88563538]
[87.95109558 168.98252869]
[86.24892426 154.07942200]
[72.34027863 148.46252441]
[60.76628876 158.00415039]
[49.19229507 167.54577637]
[37.61830521 177.08740234]
[26.04431343 186.62904358]
[14.47032070 196.17066956]
[12.46174049 208.90661621]
[2.63149166 216.61584473]
[-9.41745377 215.59707642]
[-21.12590981 224.97322083]
[-26.57884979 240.43923950]
[-42.74675751 243.18345642]
[-52.99747467 230.38288879]
[-46.78594208 215.20562744]
[-30.50205231 213.26477051]
[-18.79359818 203.88862610]
[-13.30138397 187.21792603]
[4.92869043 184.59667969]
[16.50268173 175.05505371]
[28.07667542 165.51341248]
[39.65066528 155.97178650]
[51.22465897 146.43016052]
[62.79864883 136.88851929]
[57.01910782 129.01553345]
[52.85499573 120.29107666]
[50.41955185 111.03832245]
[49.76275253 101.59257507]
[50.87080765 92.28912354]
[53.66792679 83.45134735]
[58.02027512 75.37946320]
[63.74189758 68.34035492]
[54.11824417 56.83447266]
[44.49459076 45.32859421]
[34.87093735 33.82271194]
[25.24728584 22.31682968]
[9.86998463 23.23594475]
[-2.95012164 15.02021217]
[-8.40968990 0.99676394]
[-4.61028099 -13.38038731]
[-14.23393345 -24.88626862]
[-23.85758591 -36.39215088]
[-33.48123932 -47.89803314]
[-43.10489273 -59.40391159]
[-52.72854614 -70.90979767]
[-62.35219955 -82.41567230]
[-71.97585297 -93.92155457]
[-81.59950256 -105.42743683]
[-96.38833618 -111.04891205]
[-98.61889648 -125.77555084]
[-102.48870850 -111.28332520]
[-116.17287445 -105.13973999]
[-129.57421875 -111.87797546]
[-132.80426025 -126.52607727]
[-123.47964478 -138.27560425]
[-108.48204803 -138.45750427]
[-117.26428986 -150.61778259]
[-126.04653168 -162.77806091]
[-134.82878113 -174.93832397]
[-143.69721985 -187.03587341]
[-152.65144348 -199.07008362]
[-161.60565186 -211.10427856]
[-170.55986023 -223.13848877]
[-185.00532532 -229.59133911]
[-186.39535522 -244.42094421]
[-195.34956360 -256.45513916]
[-210.96997070 -257.18780518]
[-222.42984009 -267.82760620]
[-224.31816101 -283.35076904]
[-215.74333191 -296.42770386]
[-200.75411987 -300.88391113]
[-186.42797852 -294.61529541]
[-179.52926636 -280.58169556]
[-183.31535339 -265.40936279]
[-174.36114502 -253.37515259]
[-160.55615234 -247.78306580]
[-158.52565002 -232.09269714]
[-149.57144165 -220.05850220]
[-140.61723328 -208.02429199]
[-131.66302490 -195.99008179]
[-125.15315247 -192.50276184]
[-122.66850281 -183.72056580]
[-113.88626099 -171.56030273]
[-105.10401917 -159.40002441]
[-96.32177734 -147.23974609]
[-87.11301422 -135.39920044]
[-73.01252747 -130.60070801]
[-70.09362030 -115.05109406]
[-60.46997070 -103.54521179]
[-50.84631729 -92.03932953]
[-41.22266388 -80.53344727]
[-31.59901047 -69.02756500]
[-21.97535896 -57.52168655]
[-12.35170555 -46.01580429]
[-2.72805238 -34.50992203]
[6.89560032 -23.00403976]
[21.71795082 -24.20234489]
[34.55556488 -16.34997940]
[40.37587738 -2.27953672]
[36.75316620 12.69317722]
[46.37681961 24.19905853]
[56.00047302 35.70494080]
[65.62412262 47.21082306]
[75.24777985 58.71670151]
[93.69076538 52.28022766]
[113.17278290 53.70247269]
[130.48544312 62.74921799]
[142.77761841 77.93059540]
[157.01687622 73.21430206]
[167.68440247 61.53035736]
[182.19895935 64.87355042]
[196.40434265 60.05616379]
[203.34988403 46.11352158]
[217.79112244 41.32760620]
[231.04049683 48.03504562]
[245.21128845 43.11681366]
[259.38204956 38.19858551]
[273.55285645 33.28035355]
[287.72363281 28.36212540]
[294.66915894 14.41948605]
[309.11041260 9.63356972]
[322.35977173 16.34100723]
[336.53057861 11.42277718]
[350.70135498 6.50454712]
[364.87213135 1.58631730]
[371.81765747 -12.35632133]
[386.25891113 -17.14223862]
[399.50830078 -10.43480015]
[413.67907715 -15.35303020]
[420.75390625 -21.11905098]
[428.08639526 -20.23889542]
[442.32565308 -24.95519257]
[456.56491089 -29.67148972]
[463.43487549 -43.90452194]
[478.38424683 -49.03204346]
[492.54385376 -42.01198959]
[497.51303101 -27.00922966]
[490.34365845 -12.92463779]
[475.28921509 -8.11435223]
[461.28118896 -15.43223000]
[447.04193115 -10.71593285]
[432.80267334 -5.99963522]
[418.59729004 -1.18225002]
[404.42651367 3.73597980]
[398.18127441 17.20938110]
[383.88015747 22.39903450]
[369.79034424 15.75709724]
[355.61956787 20.67532730]
[341.44879150 25.59355736]
[327.27801514 30.51178741]
[321.03277588 43.98518753]
[306.73165894 49.17484283]
[292.64184570 42.53290558]
[278.47106934 47.45113373]
[264.30029297 52.36936569]
[250.12951660 57.28759384]
[235.95872498 62.20582581]
[229.71348572 75.67922974]
[215.41236877 80.86888123]
[201.32257080 74.22694397]
[196.03807068 79.38581848]
[186.91525269 79.11280823]
[177.26622009 90.45941162]
[161.73316956 87.45355988]
[147.49391174 92.16986084]
[148.52040100 99.62435913]
[148.37461853 107.20787811]
[147.04148865 114.73572540]
[144.53506470 122.02172089]
[140.89865112 128.88275146]
[136.20414734 135.14337158]
[130.55070496 140.64030457]
[124.06269836 145.22663879]
[116.88699341 148.77574158]
[109.18963623 151.18470764]
[101.15203094 152.37725830]
[102.85420227 167.28036499]
[104.55636597 182.18347168]
[113.80970764 195.01647949]
[107.56664276 208.53956604]
[109.26881409 223.44267273]
[110.97098541 238.34577942]
[112.67314911 253.24888611]
[114.37532043 268.15197754]
[116.07748413 283.05508423]
[117.99132538 297.93249512]
[120.11645508 312.78118896]
[122.24158478 327.62991333]
[139.14624023 345.22787476]
[129.82250977 367.00546265]
[133.41223145 381.56958008]
[137.00196838 396.13369751]
[148.74610901 407.57955933]
[144.44409180 423.40435791]
[128.52148438 427.32894897]
[117.35807800 415.31600952]
[122.43784332 399.72344971]
[118.84810638 385.15930176]
[115.25837708 370.59518433]
[109.46595001 369.18853760]
[104.25904846 366.20507812]
[100.06040955 361.86117554]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 206]
[6 205]
[7 204]
[10 203]
[11 202]
[12 201]
[13 200]
[14 199]
[15 198]
[17 196]
[18 195]
[19 194]
[20 42]
[21 41]
[22 40]
[23 39]
[24 38]
[25 37]
[28 35]
[29 34]
[50 122]
[51 121]
[52 120]
[53 119]
[54 118]
[58 114]
[59 113]
[60 112]
[61 111]
[62 110]
[63 109]
[64 108]
[65 107]
[66 106]
[68 104]
[74 103]
[75 102]
[76 101]
[77 100]
[78 98]
[79 97]
[80 96]
[81 95]
[83 93]
[84 92]
[126 183]
[127 182]
[129 180]
[130 178]
[133 175]
[134 174]
[135 173]
[136 172]
[137 171]
[140 168]
[141 167]
[142 166]
[143 165]
[146 162]
[147 161]
[149 160]
[150 159]
[151 158]
[208 217]
[209 216]
[210 215]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
