%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 02:48:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUGAGGAAGCUGGCAGGUGCAGGGGACCCCUGGAAAGUGGGGGCUGUGCCUCCAGCCAAGCCCCAGCAUCCAAGGACCGGCAGCCACUAGGCCGUCUCCCAAGGAGCAGAGCAGAGCAGAGCUCCUCAGCCAGCACAGAACCCUCCCACCCAGCCCCCCAUAAAACAUGAGUCAGGAUAGAACCCA\
) } def
/len { sequence length } bind def

/coor [
[235.67749023 317.07034302]
[228.28570557 304.01806641]
[220.89393616 290.96578979]
[213.50215149 277.91354370]
[206.11038208 264.86126709]
[200.06701660 260.58215332]
[198.70626831 251.53005981]
[191.53247070 238.35673523]
[164.75820923 229.30659485]
[153.76860046 206.35409546]
[161.64007568 185.12771606]
[151.99827576 173.63705444]
[142.35646057 162.14639282]
[132.71464539 150.65571594]
[123.07283020 139.16505432]
[113.43101501 127.67438507]
[88.05120087 128.34590149]
[70.81079865 109.70845795]
[55.85274124 110.82940674]
[40.89468384 111.95036316]
[25.93662643 113.07131195]
[10.97856903 114.19226074]
[-2.20480585 122.93921661]
[-15.47469902 116.17465973]
[-30.43275642 117.29561615]
[-45.39081192 118.41656494]
[-60.34886932 119.53751373]
[-73.20781708 138.42985535]
[-99.82219696 137.89006042]
[-113.78530884 143.37017822]
[-127.74841309 148.85029602]
[-141.66549683 154.44627380]
[-155.53558350 160.15771484]
[-165.11172485 173.47047424]
[-181.39974976 171.56466675]
[-187.64393616 156.40081787]
[-177.42080688 143.57820129]
[-161.24702454 146.28762817]
[-147.37693787 140.57618713]
[-142.37957764 135.11180115]
[-133.22853088 134.88719177]
[-119.26541901 129.40707397]
[-105.30231476 123.92695618]
[-107.04370880 109.02838135]
[-121.89424133 106.91609955]
[-136.74476624 104.80381775]
[-151.59530640 102.69152832]
[-166.44583130 100.57924652]
[-178.93139648 110.26873779]
[-194.60086060 108.20874023]
[-204.15779114 95.62142944]
[-201.93225098 79.97462463]
[-189.24459839 70.55130005]
[-173.62220764 72.94214630]
[-164.33354187 85.72871399]
[-149.48301697 87.84100342]
[-134.63249207 89.95328522]
[-119.78195190 92.06556702]
[-104.93142700 94.17785645]
[-91.85701752 87.24716187]
[-78.07678986 87.64237213]
[-67.16098022 94.28009796]
[-61.46982193 104.57946014]
[-46.51176453 103.45851135]
[-31.55370712 102.33755493]
[-16.59564972 101.21660614]
[-4.48217535 92.54982758]
[9.85761738 99.23420715]
[24.81567574 98.11325836]
[39.77373123 96.99230194]
[54.73178864 95.87135315]
[69.68984222 94.75040436]
[71.78660583 87.74160767]
[75.47908783 81.42613220]
[80.55844116 76.16117096]
[86.73739624 72.24451447]
[83.76519775 57.54192734]
[80.79300690 42.83934021]
[76.69290924 37.61380768]
[75.97039032 31.95284843]
[77.97493744 27.59905052]
[75.49308014 12.80579662]
[73.01121521 -1.98745704]
[63.09721756 -14.31722641]
[68.62205505 -28.14927101]
[66.14019012 -42.94252396]
[63.65832901 -57.73577881]
[52.81024170 -70.03419495]
[58.29269409 -85.48976898]
[74.46581268 -88.20313263]
[84.69207764 -75.38300323]
[78.45158386 -60.21763992]
[80.93344116 -45.42438889]
[83.41530609 -30.63113403]
[93.15178680 -19.35947609]
[87.80446625 -4.46931887]
[90.28633118 10.32393551]
[92.76819611 25.11718941]
[95.49559784 39.86714554]
[98.46778870 54.56973648]
[101.43997955 69.27232361]
[105.73015594 69.77700806]
[109.90734100 70.87770081]
[113.88914490 72.55268097]
[123.72061920 61.22386169]
[133.55209351 49.89504242]
[143.38356018 38.56622314]
[153.21504211 27.23740578]
[163.04650879 15.90858650]
[159.69691467 0.87241668]
[165.77235413 -13.08976269]
[178.75076294 -20.70717239]
[193.54884338 -19.23929024]
[203.38032532 -30.56810951]
[209.19526672 -46.49364853]
[226.10815430 -45.31458664]
[229.65713501 -28.73625183]
[214.70913696 -20.73663521]
[204.87767029 -9.40781784]
[208.41476440 5.03610420]
[202.70086670 18.95786285]
[189.73335266 26.93889999]
[174.37533569 25.74005890]
[164.54385376 37.06887817]
[154.71238708 48.39769745]
[144.88090515 59.72651672]
[135.04943848 71.05533600]
[125.21796417 82.38415527]
[130.16213989 93.95774841]
[130.05754089 106.54274750]
[124.92167664 118.03256989]
[134.56349182 129.52323914]
[144.20530701 141.01390076]
[153.84712219 152.50457764]
[163.48893738 163.99523926]
[173.13075256 175.48590088]
[184.74792480 170.31359863]
[198.63156128 170.79151917]
[211.96592712 177.81532288]
[221.64434814 190.87312317]
[236.61895752 191.74528503]
[251.02296448 183.90583801]
[264.87106323 192.69003296]
[263.91754150 209.06143188]
[249.14329529 216.17855835]
[235.74679565 206.71990967]
[220.77217102 205.84774780]
[216.75556946 212.18153381]
[223.70971680 225.47213745]
[208.72238159 224.84912109]
[204.70579529 231.18292236]
[211.87959290 244.35624695]
[219.16264343 257.46948242]
[226.55442810 270.52175903]
[233.94619751 283.57403564]
[241.33798218 296.62628174]
[248.72975159 309.67855835]
[248.61241150 294.67901611]
[252.82000732 280.28121948]
[260.99600220 267.70532227]
[272.44747925 258.01702881]
[286.20407104 252.03735352]
[301.09994507 250.27304077]
[315.87280273 252.87359619]
[329.27072144 259.61865234]
[340.15832520 269.93661499]
[347.61294556 282.95309448]
[351.00286865 297.56500244]
[350.04083252 312.53411865]
[344.80831909 326.59188843]
[335.74880981 338.54702759]
[323.62997437 347.38638306]
[309.47885132 352.36090088]
[294.49465942 353.04898071]
[279.94717407 349.39239502]
[267.06921387 341.70092773]
[256.94992065 330.62319946]
[260.40917969 345.21887207]
[274.46368408 352.07485962]
[280.77587891 366.38186646]
[276.36529541 381.38455200]
[263.31451416 389.99914551]
[247.78569031 388.15805054]
[237.11106873 376.73062134]
[236.33087158 361.11251831]
[245.81349182 348.67813110]
[242.35424805 334.08245850]
[237.55842590 330.53134155]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 157]
[2 156]
[3 155]
[4 154]
[5 153]
[7 152]
[8 151]
[11 136]
[12 135]
[13 134]
[14 133]
[15 132]
[16 131]
[18 72]
[19 71]
[20 70]
[21 69]
[22 68]
[24 66]
[25 65]
[26 64]
[27 63]
[29 43]
[30 42]
[31 41]
[32 39]
[33 38]
[44 59]
[45 58]
[46 57]
[47 56]
[48 55]
[76 101]
[77 100]
[78 99]
[81 98]
[82 97]
[83 96]
[85 94]
[86 93]
[87 92]
[104 128]
[105 127]
[106 126]
[107 125]
[108 124]
[109 123]
[113 119]
[114 118]
[140 147]
[141 146]
[177 187]
[178 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
