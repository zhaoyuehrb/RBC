%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 08:58:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCAUUUCGACUCGAGCAGUGCCACUUUAAAAAUCUUUUGUCAGAAUAGAUGAUGUGUCAGAUCUCUUUAGGAUGACUGUAUUUUUCAGUUGCCGAUACAGCUUUUUGUCCUCUAACUGUGGAAACUCUUUAUGUUAGAUAUAUUUCUCUAGGUUACUGUUGGGAGCUUAAUGGUAGAAACUUCCUUGGUUUCAUGAUUAAACUCUUUUUUUUCCUGA\
) } def
/len { sequence length } bind def

/coor [
[274.23672485 548.63305664]
[289.04968262 550.99456787]
[303.10110474 556.24407959]
[315.83529663 564.17449951]
[307.79071045 551.51416016]
[299.74615479 538.85375977]
[291.70156860 526.19342041]
[283.65701294 513.53308105]
[275.61245728 500.87268066]
[261.06411743 497.89251709]
[252.72541809 485.16769409]
[255.94993591 469.92825317]
[249.71473694 465.97171021]
[247.88258362 457.03134155]
[240.01797485 444.25839233]
[232.15336609 431.48547363]
[216.28477478 423.98379517]
[215.92689514 405.56936646]
[207.88232422 392.90902710]
[199.83775330 380.24865723]
[191.79318237 367.58828735]
[183.74861145 354.92791748]
[175.70404053 342.26754761]
[167.65946960 329.60717773]
[159.52552795 317.00405884]
[151.30261230 304.45877075]
[152.50437927 319.41055298]
[157.23866272 333.64385986]
[153.82337952 348.24987793]
[143.26878357 358.90823364]
[128.69685364 362.46618652]
[114.41794586 357.87133789]
[104.65568542 346.48284912]
[102.29772186 331.66934204]
[108.04152679 317.81262207]
[120.18817902 309.01141357]
[129.88424683 297.56649780]
[115.88816071 302.96182251]
[101.89207458 308.35714722]
[95.71424103 322.90396118]
[81.02862549 328.74420166]
[66.54793549 322.41290283]
[60.86330795 307.66635132]
[67.34733582 293.25341797]
[82.15316010 287.72503662]
[96.49674225 294.36108398]
[110.49282837 288.96572876]
[124.48891449 283.57040405]
[134.47854614 283.42843628]
[143.25022888 286.30374146]
[139.47055054 271.78775024]
[135.69088745 257.27175903]
[131.91120911 242.75575256]
[118.93486023 230.93621826]
[123.98481750 213.22418213]
[120.00011444 198.76312256]
[116.01541138 184.30206299]
[112.03070068 169.84100342]
[108.04599762 155.37995911]
[104.06128693 140.91889954]
[100.07658386 126.45784760]
[96.09188080 111.99678802]
[98.95671082 126.72067261]
[95.25104523 141.25573730]
[85.68649292 152.81079102]
[72.09974670 159.16691589]
[57.09988403 159.10353088]
[43.56734085 152.63281250]
[34.10078812 140.99732971]
[30.51809883 126.43146515]
[33.50726318 111.73232269]
[42.49426651 99.72258759]
[55.75381088 92.70836639]
[48.81189728 79.41138458]
[41.86998367 66.11439514]
[34.92806625 52.81741333]
[27.98615265 39.52042770]
[21.04423904 26.22344208]
[14.10232353 12.92645645]
[6.78689909 -0.16875491]
[-0.89617479 -13.05170345]
[-8.57924843 -25.93465233]
[-16.26232338 -38.81760025]
[-23.94539642 -51.70055008]
[-31.62847137 -64.58350372]
[-39.31154251 -77.46644592]
[-54.59078598 -76.57012939]
[-68.53163910 -82.88765717]
[-77.93059540 -94.96731567]
[-80.62785339 -110.03328705]
[-76.00359344 -124.62351990]
[-65.12043762 -135.38528442]
[-50.47925949 -139.84559631]
[-35.44449234 -136.97953796]
[-23.47101402 -127.44567871]
[-17.31024551 -113.43483734]
[-18.37788391 -98.16661072]
[-26.42859459 -85.14952087]
[-18.74552155 -72.26657104]
[-11.06244755 -59.38362503]
[-3.37937355 -46.50067520]
[4.30370045 -33.61772537]
[11.98677444 -20.73477745]
[19.66984749 -7.85182905]
[22.34274101 -7.03266001]
[24.85360336 -5.10964632]
[26.78195190 -2.13872218]
[27.73508835 1.67367864]
[27.39930916 5.98454189]
[34.34122467 19.28152657]
[41.28313828 32.57851410]
[48.22505188 45.87549973]
[55.16696930 59.17248154]
[62.10888290 72.46946716]
[69.05079651 85.76645660]
[84.05108643 85.87258148]
[99.05004883 85.97872162]
[106.17942810 72.78130341]
[113.30881500 59.58388138]
[120.43819427 46.38646317]
[121.76161194 37.35674286]
[127.76299286 33.05377579]
[135.07841492 19.95856476]
[142.39384460 6.86335278]
[149.70925903 -6.23185873]
[157.02468872 -19.32707024]
[154.05462646 -35.09280396]
[164.63769531 -47.15009689]
[180.65545654 -46.24962616]
[189.82046509 -33.08215714]
[185.10209656 -17.74864578]
[170.11990356 -12.01164627]
[162.80447388 1.08356535]
[155.48904419 14.17877674]
[148.17362976 27.27398872]
[140.85820007 40.36920166]
[133.63562012 53.51584625]
[126.50623322 66.71326447]
[119.37684631 79.91068268]
[112.24746704 93.10810852]
[110.55293274 108.01208496]
[114.53764343 122.47313690]
[118.52234650 136.93418884]
[122.50704956 151.39524841]
[126.49176025 165.85630798]
[130.47647095 180.31735229]
[134.46116638 194.77841187]
[138.44587708 209.23947144]
[149.25157166 216.27252197]
[152.27575684 228.39312744]
[146.42720032 238.97607422]
[150.20687866 253.49208069]
[153.98654175 268.00805664]
[157.76622009 282.52404785]
[163.84786987 296.23587036]
[172.07078552 308.78112793]
[179.38638306 314.23724365]
[180.31983948 321.56259155]
[188.36441040 334.22296143]
[196.40898132 346.88333130]
[204.45355225 359.54370117]
[212.49812317 372.20407104]
[220.54269409 384.86444092]
[228.58726501 397.52481079]
[240.97874451 401.08541870]
[247.41955566 411.78921509]
[244.92630005 423.62084961]
[252.79090881 436.39379883]
[260.65551758 449.16671753]
[268.61032104 461.88369751]
[283.77633667 465.43753052]
[291.75430298 478.39154053]
[288.27279663 492.82812500]
[296.31738281 505.48849487]
[304.36193848 518.14886475]
[312.40652466 530.80920410]
[320.45108032 543.46960449]
[328.49566650 556.12994385]
[336.80551147 560.40612793]
[339.97854614 568.11102295]
[352.28610229 576.68566895]
[364.59362793 585.26025391]
[376.90118408 593.83489990]
[389.20870972 602.40954590]
[401.51626587 610.98419189]
[417.49841309 609.58789062]
[428.44998169 621.31152344]
[425.96981812 637.16168213]
[411.96047974 644.97955322]
[397.16879272 638.76788330]
[392.94161987 623.29174805]
[380.63406372 614.71710205]
[368.32653809 606.14245605]
[356.01898193 597.56781006]
[343.71145630 588.99316406]
[331.40393066 580.41851807]
[338.78607178 593.47625732]
[343.43484497 607.73767090]
[345.16586304 622.63745117]
[343.91055298 637.58483887]
[339.71865845 651.98724365]
[332.75637817 665.27355957]
[323.29977417 676.91711426]
[311.72369385 686.45623779]
[298.48718262 693.51275635]
[284.11495972 697.80688477]
[269.17687988 699.16839600]
[254.26518250 697.54327393]
[239.97105408 692.99597168]
[226.86122131 685.70678711]
[215.45544434 675.96466064]
[206.20593262 664.15594482]
[199.47940063 650.74871826]
[195.54252625 636.27453613]
[194.55140686 621.30731201]
[196.54531860 606.44042969]
[201.44523621 592.26330566]
[209.05686951 579.33801270]
[219.07844543 568.17700195]
[231.11264038 559.22283936]
[244.68234253 552.83038330]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 178]
[5 177]
[6 176]
[7 175]
[8 174]
[9 173]
[12 170]
[14 169]
[15 168]
[16 167]
[18 164]
[19 163]
[20 162]
[21 161]
[22 160]
[23 159]
[24 158]
[25 156]
[26 155]
[37 48]
[38 47]
[39 46]
[50 154]
[51 153]
[52 152]
[53 151]
[55 148]
[56 147]
[57 146]
[58 145]
[59 144]
[60 143]
[61 142]
[62 141]
[73 115]
[74 114]
[75 113]
[76 112]
[77 111]
[78 110]
[79 109]
[80 104]
[81 103]
[82 102]
[83 101]
[84 100]
[85 99]
[86 98]
[117 140]
[118 139]
[119 138]
[120 137]
[122 136]
[123 135]
[124 134]
[125 133]
[126 132]
[180 196]
[181 195]
[182 194]
[183 193]
[184 192]
[185 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
