%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 10:16:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGCCAUCCCUGGUGCAAGUGUUCAUCCAGCCGUGCCAGGGCAACAGCCCACCCCCUAGUACAACUGAUGCUCCCUGAGACAACCUGGGAGACAGCCUGGAUCAGCCACAUCAACUCAGUUGUCCACCACAGGGGAAUUUUGAAUGUCUUUUGUUUUUGUUUUGUUUUGAAAAAUAAUAAACAGGCAACUGUA\
) } def
/len { sequence length } bind def

/coor [
[74.31222534 144.85400391]
[67.48754120 140.18310547]
[56.46034241 150.35174561]
[45.43314743 160.52037048]
[48.08341599 178.44538879]
[39.52790451 194.23989868]
[23.35158730 201.68109131]
[6.09833097 197.96614075]
[-4.59380293 208.48651123]
[-15.28593636 219.00689697]
[-25.97806931 229.52726746]
[-36.67020416 240.04763794]
[-47.36233521 250.56802368]
[-58.05447006 261.08837891]
[-68.74660492 271.60876465]
[-79.43873596 282.12915039]
[-77.28226471 297.38220215]
[-84.43714142 310.82321167]
[-97.97451782 317.39614868]
[-112.61128998 314.76879883]
[-123.30342102 325.28918457]
[-123.18074799 341.09298706]
[-134.32835388 352.29595947]
[-150.13258362 352.25152588]
[-161.21705627 340.98608398]
[-161.00555420 325.18322754]
[-149.62355042 314.21847534]
[-133.82379150 314.59704590]
[-123.13166046 304.07666016]
[-125.52165222 289.39926147]
[-118.73036957 275.97009277]
[-105.17525482 269.03381348]
[-89.95911407 271.43701172]
[-79.26697540 260.91662598]
[-68.57484436 250.39625549]
[-57.88271332 239.87588501]
[-47.19057846 229.35551453]
[-36.49844360 218.83512878]
[-25.80631065 208.31475830]
[-15.11417770 197.79438782]
[-4.42204380 187.27401733]
[-7.98663664 175.65257263]
[-6.25612402 163.54757690]
[0.50126219 153.26969910]
[11.05186844 146.80717468]
[23.42145348 145.44139099]
[35.26451874 149.49316406]
[46.29171753 139.32453918]
[57.31891251 129.15591431]
[48.66732025 106.05796051]
[51.70436859 81.58058929]
[65.73850250 61.29738235]
[87.57410431 49.82690048]
[86.11895752 34.89764786]
[84.66381073 19.96839714]
[83.20866394 5.03914642]
[81.75351715 -9.89010525]
[77.80141449 -18.14149475]
[80.39768982 -25.07258987]
[79.18448639 -40.02344894]
[77.36715698 -54.91295242]
[74.94869232 -69.71670532]
[72.53022766 -84.52045441]
[70.11177063 -99.32420349]
[67.69330597 -114.12795258]
[65.27484131 -128.93170166]
[62.85637665 -143.73545837]
[60.43791199 -158.53919983]
[57.78004837 -173.30184937]
[54.88347626 -188.01953125]
[38.13533401 -193.30226135]
[26.42283440 -206.26789856]
[22.89989662 -223.29078674]
[28.44711113 -239.67167664]
[41.45380783 -250.93493652]
[38.08217239 -265.55108643]
[34.71053696 -280.16726685]
[31.33889961 -294.78341675]
[18.22067642 -303.18283081]
[15.00957012 -318.05371094]
[23.09795952 -330.50817871]
[19.72632408 -345.12432861]
[6.60810089 -353.52374268]
[3.39699507 -368.39462280]
[11.48538494 -380.84909058]
[8.11374950 -395.46524048]
[4.74211311 -410.08139038]
[-8.04471493 -419.77038574]
[-8.29795170 -435.81143188]
[4.17666292 -445.89923096]
[19.80967331 -442.29528809]
[26.60877228 -427.76422119]
[19.35827065 -413.45303345]
[22.72990799 -398.83688354]
[26.10154343 -384.22073364]
[38.82826233 -376.56787109]
[42.45579147 -361.79302979]
[34.34248352 -348.49597168]
[37.71411896 -333.87982178]
[50.44083786 -326.22695923]
[54.06836700 -311.45211792]
[45.95505524 -298.15505981]
[49.32669449 -283.53890991]
[52.69832993 -268.92272949]
[56.06996536 -254.30657959]
[68.49374390 -251.92739868]
[79.13137054 -244.99653625]
[86.38008881 -234.51602173]
[89.13180542 -222.02574158]
[86.94235992 -209.37728882]
[80.10278320 -198.45944214]
[69.60115051 -190.91609192]
[72.49771881 -176.19842529]
[75.90548706 -172.83389282]
[77.22692871 -167.28816223]
[75.24166107 -160.95767212]
[77.66012573 -146.15391541]
[80.07859039 -131.35017395]
[82.49705505 -116.54641724]
[84.91551971 -101.74266815]
[87.33398438 -86.93891907]
[89.75244904 -72.13516235]
[92.17090607 -57.33141327]
[102.97141266 -67.74050903]
[117.86432648 -65.95137024]
[125.89213562 -53.28036880]
[121.14834595 -39.05024338]
[107.12322235 -33.73086548]
[94.13533783 -41.23665237]
[95.34854889 -26.28579712]
[96.68276978 -11.34525299]
[98.13791656 3.58399868]
[99.59306335 18.51325035]
[101.04821014 33.44250107]
[102.50335693 48.37175369]
[112.91410828 49.95034027]
[122.78892517 53.60595322]
[131.71801758 59.18688965]
[139.33084106 66.46154785]
[145.31144714 75.12802887]
[149.41166687 84.82667542]
[151.46133423 95.15500641]
[151.37538147 105.68441010]
[149.15739441 115.97790527]
[144.89939880 125.60832977]
[156.71290588 134.85176086]
[168.52642822 144.09518433]
[180.33993530 153.33860779]
[192.15344238 162.58204651]
[197.35061646 163.31298828]
[201.34176636 165.72984314]
[203.68542480 169.08717346]
[204.30175781 172.57249451]
[215.65243530 182.37870789]
[227.00312805 192.18490601]
[238.35382080 201.99111938]
[249.78353882 211.70510864]
[261.29153442 221.32623291]
[272.79953003 230.94735718]
[284.30752563 240.56848145]
[295.81552124 250.18960571]
[307.32351685 259.81072998]
[318.83151245 269.43185425]
[334.19384766 266.51077271]
[347.81439209 274.19287109]
[353.26196289 288.85092163]
[347.96435547 303.56381226]
[334.42294312 311.38458252]
[319.03158569 308.62051392]
[309.05761719 296.57669067]
[309.21038818 280.93984985]
[297.70239258 271.31872559]
[286.19439697 261.69760132]
[274.68640137 252.07647705]
[263.17840576 242.45535278]
[251.67042542 232.83422852]
[240.16242981 223.21310425]
[233.00402832 221.33212280]
[228.54762268 213.34181213]
[217.19692993 203.53559875]
[205.84623718 193.72938538]
[194.49554443 183.92318726]
[182.91001892 174.39555359]
[171.09651184 165.15213013]
[159.28298950 155.90869141]
[147.46948242 146.66526794]
[135.65597534 137.42184448]
[129.23143005 142.62940979]
[122.05858612 146.74571228]
[114.32106781 149.66537476]
[106.21694946 151.31365967]
[97.95368958 151.64837646]
[89.74280548 150.66096497]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 49]
[3 48]
[4 47]
[8 41]
[9 40]
[10 39]
[11 38]
[12 37]
[13 36]
[14 35]
[15 34]
[16 33]
[20 29]
[21 28]
[53 135]
[54 134]
[55 133]
[56 132]
[57 131]
[59 130]
[60 129]
[61 123]
[62 122]
[63 121]
[64 120]
[65 119]
[66 118]
[67 117]
[68 116]
[69 113]
[70 112]
[75 105]
[76 104]
[77 103]
[78 102]
[81 99]
[82 98]
[85 95]
[86 94]
[87 93]
[145 187]
[146 186]
[147 185]
[148 184]
[149 183]
[153 182]
[154 181]
[155 180]
[156 179]
[157 177]
[158 176]
[159 175]
[160 174]
[161 173]
[162 172]
[163 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
