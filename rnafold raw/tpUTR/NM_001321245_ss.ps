%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 13:30:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACCAAGAUAAUGAAAACAAUAAAAUAUGCAGAACAUAUUUCAAAUUAUUUAGAGUAUUUCAAAGCACUUCCACACAUAUGAAUGGCCUGCACUGGACCUCACAAGAAAACAGAGGGUUUCAACUGUGCAUAACAUCAGAGAUGACCAGGUGCAACCUCCAUAUAUUGAAGACUUAGAAAAUGAGAAAUAUAAAAAUUAAAUUACUUUGUUUUA\
) } def
/len { sequence length } bind def

/coor [
[12.96558475 749.59783936]
[12.76064110 764.75482178]
[7.38116503 778.92651367]
[-2.52324486 790.40167236]
[-15.75658321 797.79455566]
[-30.72086143 800.21240234]
[-45.60906601 797.36334229]
[-58.62337875 789.59136963]
[-68.19225311 777.83502197]
[-73.16020966 763.51385498]
[-72.92733002 748.35729980]
[-67.52175140 734.19555664]
[-57.59621048 722.73870850]
[-44.34926987 715.37023926]
[-29.38056183 712.97991943]
[-26.56126976 698.24725342]
[-23.74197960 683.51458740]
[-20.92268753 668.78192139]
[-18.10339737 654.04919434]
[-15.28410530 639.31652832]
[-12.46481419 624.58386230]
[-26.41831207 619.13043213]
[-39.13547134 611.20367432]
[-50.18241501 601.07232666]
[-59.18192291 589.08032227]
[-65.82632446 575.63525391]
[-69.88802338 561.19427490]
[-71.22727966 546.24896240]
[-69.79702759 531.30798340]
[-65.64450073 516.88043213]
[-58.90972900 503.45809937]
[-49.82076263 491.49868774]
[-38.68597412 481.41043091]
[-25.88360214 473.53796387]
[-11.84888363 468.15066528]
[2.94072604 465.43338013]
[17.98180389 465.48007202]
[20.80109406 450.74740601]
[23.62038612 436.01473999]
[26.43967628 421.28204346]
[29.25896835 406.54937744]
[32.07825851 391.81671143]
[34.89755249 377.08404541]
[26.34626961 364.94274902]
[28.99555969 349.96154785]
[41.78845215 341.07449341]
[44.60774231 326.34182739]
[47.42703247 311.60916138]
[45.59752274 304.45144653]
[50.39595032 296.68341064]
[53.42921448 281.99331665]
[56.46247864 267.30319214]
[51.45870209 253.27424622]
[61.82679367 241.32379150]
[64.86005402 226.63368225]
[67.89331818 211.94357300]
[70.92658234 197.25346375]
[69.20137024 190.06990051]
[74.11226654 182.37246704]
[77.35885620 167.72802734]
[80.60545349 153.08358765]
[83.85205078 138.43914795]
[87.09864044 123.79470825]
[90.34523773 109.15026855]
[87.05738831 98.41987610]
[93.11403656 89.23912811]
[93.98621368 74.26450348]
[94.85838318 59.28988266]
[95.73055267 44.31526184]
[96.60272980 29.34063911]
[97.47489929 14.36601734]
[85.64352417 4.50068760]
[81.93316650 -10.26706886]
[87.56346130 -24.22284889]
[100.18083191 -32.09303665]
[101.05300903 -47.06765747]
[88.33065033 -55.55817795]
[81.61067200 -69.18677521]
[82.60798645 -84.24903870]
[90.95483398 -96.70640564]
[104.32636261 -103.26902008]
[105.19853210 -118.24364471]
[106.07070923 -133.21826172]
[103.44629669 -141.96354675]
[107.06602478 -148.40383911]
[108.15589142 -163.36419678]
[96.46924591 -173.40055847]
[92.97406006 -188.22071838]
[98.80673218 -202.09313965]
[111.53723145 -209.77899170]
[112.62710571 -224.73933411]
[113.71697235 -239.69969177]
[114.80683899 -254.66004944]
[115.89671326 -269.62039185]
[116.65996552 -284.60098267]
[117.09623718 -299.59463501]
[117.53250122 -314.58828735]
[117.96877289 -329.58193970]
[118.18693542 -344.58035278]
[118.18693542 -359.58035278]
[118.18693542 -374.58035278]
[118.18693542 -389.58035278]
[104.60505676 -396.63662720]
[95.86763763 -409.20309448]
[93.98247528 -424.39205933]
[99.38276672 -438.71322632]
[110.82756805 -448.87567139]
[125.68693542 -452.54412842]
[140.54631042 -448.87567139]
[151.99110413 -438.71322632]
[157.39138794 -424.39205933]
[155.50622559 -409.20309448]
[146.76881409 -396.63662720]
[133.18693542 -389.58035278]
[133.18693542 -374.58035278]
[133.18693542 -359.58035278]
[133.18693542 -344.58035278]
[135.86791992 -340.63208008]
[136.09963989 -334.95849609]
[132.96243286 -329.14566040]
[132.52615356 -314.15200806]
[132.08988953 -299.15835571]
[131.65361023 -284.16470337]
[133.79087830 -281.36480713]
[134.68019104 -277.39178467]
[133.78549194 -272.84252930]
[130.85707092 -268.53051758]
[129.76719666 -253.57017517]
[128.67732239 -238.60981750]
[127.58745575 -223.64947510]
[126.49758911 -208.68911743]
[137.97975159 -199.23936462]
[141.74028015 -184.66807556]
[136.13407898 -170.51095581]
[123.11624908 -162.27433777]
[122.02637482 -147.31398010]
[121.04532623 -132.34609985]
[120.17315674 -117.37146759]
[119.30098724 -102.39685059]
[131.82022095 -94.32627106]
[138.66442871 -80.98412323]
[137.90637207 -65.90792847]
[129.64964294 -53.15162277]
[116.02762604 -46.19548798]
[115.15545654 -31.22086334]
[126.77384186 -21.93910408]
[130.74589539 -7.42405081]
[125.34619141 6.81310463]
[112.44952393 15.23818970]
[111.57735443 30.21281242]
[110.70517731 45.18743515]
[109.83300781 60.16205597]
[108.96083069 75.13668060]
[108.08866119 90.11129761]
[117.55062103 78.47209167]
[131.02226257 71.87551117]
[146.01847839 71.53844452]
[159.77290344 77.52305603]
[169.74827576 88.72537994]
[174.10443115 103.07891083]
[172.03779602 117.93585968]
[163.92959595 130.55557251]
[151.27554321 138.61007690]
[136.40994263 140.61357117]
[122.07505798 136.19647217]
[110.91522217 126.17359161]
[104.98967743 112.39686584]
[101.74308014 127.04130554]
[98.49649048 141.68574524]
[95.24989319 156.33018494]
[92.00329590 170.97462463]
[88.75670624 185.61906433]
[85.61669159 200.28672791]
[82.58342743 214.97683716]
[79.55016327 229.66694641]
[76.51689911 244.35705566]
[81.30371857 259.43673706]
[71.15258789 270.33645630]
[68.11932373 285.02658081]
[65.08605957 299.71667480]
[62.15970612 314.42846680]
[59.34041214 329.16113281]
[56.52112198 343.89379883]
[65.12901306 356.87615967]
[62.05997849 371.77703857]
[49.63022232 379.90332031]
[46.81093216 394.63601685]
[43.99163818 409.36868286]
[41.17234802 424.10134888]
[38.35305786 438.83401489]
[35.53376389 453.56668091]
[32.71447372 468.29934692]
[46.71010208 473.80920410]
[59.45154953 481.79495239]
[70.50565338 491.98330688]
[79.49694824 504.02627563]
[86.12038422 517.51281738]
[90.15171051 531.98297119]
[91.45503235 546.94354248]
[89.98743439 561.88488770]
[85.80035400 576.29821777]
[79.03779602 589.69323730]
[69.93138123 601.61425781]
[58.79241562 611.65625000]
[46.00123215 619.47833252]
[31.99422455 624.81524658]
[17.24895287 627.48675537]
[2.26785731 627.40319824]
[-0.55143404 642.13586426]
[-3.37072539 656.86853027]
[-6.19001675 671.60119629]
[-9.00930786 686.33386230]
[-11.82859898 701.06652832]
[-14.64789104 715.79919434]
[-1.61927760 723.54718018]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 214]
[16 213]
[17 212]
[18 211]
[19 210]
[20 209]
[21 208]
[37 192]
[38 191]
[39 190]
[40 189]
[41 188]
[42 187]
[43 186]
[46 183]
[47 182]
[48 181]
[50 180]
[51 179]
[52 178]
[54 176]
[55 175]
[56 174]
[57 173]
[59 172]
[60 171]
[61 170]
[62 169]
[63 168]
[64 167]
[66 154]
[67 153]
[68 152]
[69 151]
[70 150]
[71 149]
[75 145]
[76 144]
[81 139]
[82 138]
[83 137]
[85 136]
[86 135]
[90 131]
[91 130]
[92 129]
[93 128]
[94 127]
[95 123]
[96 122]
[97 121]
[98 120]
[99 117]
[100 116]
[101 115]
[102 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
