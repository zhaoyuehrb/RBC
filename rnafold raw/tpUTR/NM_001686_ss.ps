%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 23:32:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGUCUUUGUCCUCUGUACUGUCUCUCUCCUUGCCCCUAACCCAAAAAGCUUCAUUUUUCUGUGUAGGCUGCACAAGAGCCUUGAUUGAAGAUAUAUUCUUUCUGAACAGUAUUUAAGGUUUCCAAUAAAAUGUACACCCCUCAGAA\
) } def
/len { sequence length } bind def

/coor [
[196.78617859 446.38098145]
[194.89361572 431.50085449]
[193.00106812 416.62072754]
[191.10852051 401.74060059]
[189.21597290 386.86047363]
[168.54591370 382.81979370]
[150.79832458 371.42993164]
[138.48335266 354.27832031]
[133.35142517 333.76904297]
[136.14443970 312.78576660]
[146.48858643 294.28625488]
[162.94429016 280.88555908]
[157.68212891 266.83886719]
[152.41996765 252.79217529]
[136.84912109 246.51840210]
[130.47770691 230.62373352]
[137.68162537 214.71809387]
[132.12449646 200.78546143]
[126.56735229 186.85282898]
[121.01021576 172.92019653]
[115.45307922 158.98756409]
[109.89593506 145.05493164]
[104.33879852 131.12229919]
[82.98201752 126.41611481]
[69.86793518 108.91523743]
[71.34837341 87.09623718]
[59.53686905 77.85024261]
[47.72536469 68.60424805]
[35.91386414 59.35825348]
[22.77890015 62.51731110]
[10.41125584 57.58604431]
[3.26594067 46.58306122]
[3.77629900 33.66865158]
[-7.83764505 24.17569160]
[-19.45158958 14.68272972]
[-37.66249466 12.17462826]
[-43.29508591 -4.41537046]
[-55.10659027 -13.66136551]
[-66.91809082 -22.90736008]
[-78.72959137 -32.15335464]
[-90.63790894 -41.27431870]
[-102.64172363 -50.26923752]
[-118.08409119 -48.22692871]
[-130.12951660 -57.52005386]
[-131.98138428 -72.25457764]
[-143.98519897 -81.24949646]
[-155.98899841 -90.24441528]
[-167.99281311 -99.23933411]
[-179.99662781 -108.23425293]
[-195.60360718 -105.74474335]
[-208.35054016 -115.08771515]
[-210.67489624 -130.72015381]
[-201.19767761 -143.36759949]
[-185.54154968 -145.52655029]
[-172.99501038 -135.91613770]
[-171.00170898 -120.23806000]
[-158.99789429 -111.24314117]
[-146.99407959 -102.24822235]
[-134.99028015 -93.25330353]
[-122.98646545 -84.25838470]
[-108.32479858 -86.61868286]
[-96.02308655 -77.66755676]
[-93.64680481 -62.27304459]
[-81.64299011 -53.27812576]
[-74.35484314 -51.77385330]
[-69.48359680 -43.96485519]
[-57.67209625 -34.71886063]
[-45.86059570 -25.47286797]
[-34.04909134 -16.22687340]
[-21.96412659 -17.37022400]
[-12.03849411 -9.70538902]
[-9.95862770 3.06878614]
[1.65531588 12.56174660]
[13.26925945 22.05470848]
[29.88252831 19.64413643]
[43.38476562 30.17622375]
[45.15985870 47.54675293]
[56.97135925 56.79274750]
[68.78285980 66.03874207]
[80.59436798 75.28473663]
[87.41592407 71.20652771]
[95.04248047 68.97023773]
[102.98616791 68.71892548]
[110.73883820 70.46865845]
[117.80454254 74.10750580]
[129.00796509 64.13337708]
[130.07901001 48.59341049]
[141.58296204 38.63782883]
[156.39134216 39.75466156]
[167.59477234 29.78053856]
[178.79820251 19.80641174]
[179.46372986 4.01614285]
[191.15611267 -6.61700106]
[206.93846130 -5.78456306]
[217.44740295 6.01958561]
[216.44815063 21.79225349]
[204.53355408 32.17579651]
[188.77232361 31.00984192]
[177.56889343 40.98396683]
[166.36547852 50.95809174]
[165.76139832 65.79624176]
[154.54161072 76.07102203]
[138.98210144 75.33680725]
[127.77866364 85.31093597]
[131.16925049 96.01242828]
[130.58192444 107.22283173]
[126.09162140 117.51142883]
[118.27143097 125.56516266]
[123.82856750 139.49780273]
[129.38571167 153.43043518]
[134.94284058 167.36305237]
[140.49998474 181.29568481]
[146.05711365 195.22831726]
[151.61425781 209.16094971]
[164.55545044 213.03811646]
[172.76373291 223.52143860]
[173.40422058 236.62530518]
[166.46665955 247.53001404]
[171.72882080 261.57672119]
[176.99098206 275.62341309]
[186.65153503 274.29769897]
[196.39146423 274.65048218]
[205.92144775 276.66964722]
[214.95866394 280.29357910]
[223.23522949 285.41311646]
[230.50611877 291.87472534]
[236.55638123 299.48522949]
[241.20753479 308.01745605]
[244.32286072 317.21713257]
[245.81132507 326.81042480]
[245.63034058 336.51202393]
[243.78694153 346.03372192]
[240.33747864 355.09295654]
[235.38598633 363.42111206]
[229.08099365 370.77163696]
[221.61106873 376.92718506]
[213.19918823 381.70611572]
[204.09609985 384.96792603]
[205.98864746 399.84805298]
[207.88121033 414.72817993]
[209.77375793 429.60830688]
[211.66630554 444.48843384]
[224.91487122 452.79562378]
[229.67489624 467.69113159]
[223.69883728 482.14175415]
[209.80839539 489.32437134]
[194.56222534 485.84753418]
[185.15910339 473.35293579]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 142]
[2 141]
[3 140]
[4 139]
[5 138]
[12 120]
[13 119]
[14 118]
[17 114]
[18 113]
[19 112]
[20 111]
[21 110]
[22 109]
[23 108]
[26 80]
[27 79]
[28 78]
[29 77]
[33 74]
[34 73]
[35 72]
[37 69]
[38 68]
[39 67]
[40 66]
[41 64]
[42 63]
[45 60]
[46 59]
[47 58]
[48 57]
[49 56]
[85 104]
[86 103]
[89 100]
[90 99]
[91 98]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
