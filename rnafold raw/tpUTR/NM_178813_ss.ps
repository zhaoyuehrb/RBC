%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 21:19:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACUUACAGGAUGUCUUAGGAUUGUUUUUCUCAUCAGGAUACAUUAAAAAUACAAUACAGCACGUCAAACCACAGAAUAUUUAUUGAGUAAUAAACUUGUGGCACACAA\
) } def
/len { sequence length } bind def

/coor [
[83.75858307 138.43180847]
[77.25712585 134.97926331]
[71.46362305 130.43785095]
[66.55844116 124.94892883]
[62.69425583 118.68338013]
[59.99136734 111.83622742]
[58.53390884 104.62062836]
[58.36724854 97.26119232]
[59.49657822 89.98701477]
[61.88674164 83.02453613]
[49.50466156 74.55788422]
[37.12258530 66.09123993]
[24.74050522 57.62458801]
[12.35842705 49.15793991]
[-0.14328820 40.86896515]
[-12.76209164 32.75935364]
[-23.83498192 37.55335617]
[-35.71930313 36.34794617]
[-45.40608978 29.56677628]
[-50.50061798 19.03013039]
[-49.81399155 7.46768808]
[-61.94924545 -1.34909058]
[-74.08450317 -10.16586971]
[-86.21975708 -18.98264885]
[-98.35501099 -27.79942703]
[-109.69541168 -17.88261795]
[-122.95842743 -10.73837852]
[-137.47879028 -6.72506189]
[-152.52816772 -6.04397345]
[-167.35169983 -8.72927666]
[-181.20582581 -14.64627838]
[-193.39562988 -23.49818230]
[-203.30969238 -34.84098434]
[-210.45072937 -48.10573196]
[-214.46052551 -62.62706757]
[-215.13796997 -77.67661285]
[-212.44906616 -92.49948883]
[-206.52871704 -106.35218048]
[-197.67385864 -118.53984833]
[-186.32864380 -128.45115662]
[-173.06217957 -135.58897400]
[-158.53987122 -139.59524536]
[-143.49015808 -140.26904297]
[-128.66793823 -137.57655334]
[-114.81667328 -131.65284729]
[-102.63115692 -122.79503632]
[-92.72258759 -111.44742584]
[-85.58799744 -98.17922211]
[-81.58523560 -83.65594482]
[-80.91508484 -68.60607147]
[-83.61116028 -53.78450394]
[-89.53823090 -39.93468094]
[-77.40297699 -31.11790276]
[-65.26772308 -22.30112457]
[-53.13246918 -13.48434544]
[-40.99721527 -4.66756678]
[-23.25080872 -8.68890953]
[-7.85384989 1.58788002]
[-4.65247869 20.14054871]
[7.96632385 28.25016212]
[15.40541077 29.23346901]
[20.82507515 36.77586365]
[33.20715332 45.24251175]
[45.58923340 53.70915985]
[57.97130966 62.17580795]
[70.35338593 70.64245605]
[91.90615082 59.06985855]
[116.24141693 61.56819916]
[134.99320984 77.27860260]
[141.71507263 100.80014801]
[156.41630554 103.77900696]
[171.11753845 106.75786591]
[185.81878662 109.73672485]
[200.52001953 112.71557617]
[215.22125244 115.69443512]
[229.53880310 105.76869202]
[246.29090881 109.12914276]
[255.31074524 123.24324799]
[270.09106445 125.80107880]
[284.87136841 128.35891724]
[299.65167236 130.91674805]
[310.68518066 120.00614929]
[326.02963257 117.69791412]
[339.78472900 124.87960052]
[346.66137695 138.78971863]
[344.01538086 154.07952881]
[332.86416626 164.86978149]
[317.49557495 167.01142883]
[303.81918335 159.68093872]
[297.09384155 145.69705200]
[282.31353760 143.13922119]
[267.53323364 140.58139038]
[252.75291443 138.02355957]
[243.28656006 146.89224243]
[230.23985291 148.66960144]
[218.39958191 142.47518921]
[212.24240112 130.39567566]
[197.54116821 127.41681671]
[182.83992004 124.43795776]
[168.13868713 121.45910645]
[153.43745422 118.48024750]
[138.73620605 115.50138855]
[135.40898132 122.06787109]
[130.97950745 127.94739532]
[125.58567810 132.95693970]
[119.39538574 136.94058228]
[112.60133362 139.77427673]
[105.41500854 141.36985779]
[98.06012726 141.67761230]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 66]
[11 65]
[12 64]
[13 63]
[14 62]
[15 60]
[16 59]
[21 56]
[22 55]
[23 54]
[24 53]
[25 52]
[70 102]
[71 101]
[72 100]
[73 99]
[74 98]
[75 97]
[78 93]
[79 92]
[80 91]
[81 90]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
