%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 10:11:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUGGAUCUUUCCCUUAAAACUCCAAGUUCCUCUCUAUUUUUGCUAUCUAUAAAAUGACAUAGAACUGUUUCCUCUGUCAUCAGUCAUUCAAUAAACACUGUUUGAGCACCUACA\
) } def
/len { sequence length } bind def

/coor [
[-7.39687204 204.64768982]
[-19.41344070 195.75033569]
[-26.10788918 210.08541870]
[-40.95873642 211.22630310]
[-53.14157104 219.97721863]
[-65.32440186 228.72813416]
[-72.01885223 243.06323242]
[-86.86969757 244.20410156]
[-99.05252838 252.95501709]
[-111.23536682 261.70593262]
[-107.73282623 276.49786377]
[-110.16246033 291.50335693]
[-118.15376282 304.43423462]
[-130.48811340 313.31860352]
[-145.28462219 316.80169678]
[-160.28692627 314.35232544]
[-173.20727539 306.34402466]
[-182.07542419 293.99798584]
[-185.53903198 279.19689941]
[-183.06993103 264.19784546]
[-175.04463196 251.28802490]
[-162.68695068 242.43614197]
[-147.88133240 238.99200439]
[-132.88551331 241.48083496]
[-119.98628235 249.52310181]
[-107.80345154 240.77218628]
[-95.62061310 232.02127075]
[-89.79756927 218.31210327]
[-74.07532501 216.54530334]
[-61.89248657 207.79438782]
[-49.70965576 199.04345703]
[-43.88660431 185.33428955]
[-28.16436005 183.56748962]
[-32.75906372 169.33901978]
[-32.73088837 154.36672974]
[-28.07000923 140.11694336]
[-19.22092056 127.98910522]
[-7.04007769 119.17832947]
[7.28698826 114.55770111]
[22.36104584 114.59169769]
[36.70581818 119.28957367]
[48.91255569 128.20321655]
[61.09539032 119.45229340]
[73.27822113 110.70137024]
[85.46105957 101.95045471]
[71.62438202 107.74237823]
[56.68734360 106.36943054]
[44.13832474 98.15224457]
[36.90799713 85.00985718]
[36.68492889 70.01151276]
[43.52120590 56.65991211]
[55.82029724 48.07315826]
[70.70989227 46.25659561]
[84.71269989 51.63445663]
[94.55777740 62.94934464]
[102.29108429 50.09648514]
[110.02439117 37.24362946]
[117.75769806 24.39076996]
[125.49100494 11.53791237]
[133.22431946 -1.31494486]
[133.70928955 -17.12871742]
[146.90063477 -24.04517555]
[154.63394165 -36.89803314]
[147.72135925 -50.69004822]
[149.38536072 -66.02740479]
[159.09498596 -78.01602173]
[173.75190735 -82.83036041]
[188.67918396 -78.93418884]
[199.11355591 -67.57077026]
[201.72546387 -52.36611176]
[195.68144226 -38.17197800]
[182.91012573 -29.51766396]
[167.48680115 -29.16472626]
[159.75349426 -16.31186867]
[159.82167053 -1.41741872]
[146.07717896 6.41836309]
[138.34387207 19.27122116]
[130.61054993 32.12407684]
[122.87725067 44.97693634]
[115.14394379 57.82979202]
[107.41063690 70.68264771]
[109.51477051 77.88144684]
[123.91241455 73.67340088]
[128.12023926 88.07111359]
[113.72303772 92.27902985]
[115.82717133 99.47782135]
[129.26525879 106.14250183]
[144.07968140 101.32894897]
[157.61286926 108.27930450]
[162.11056519 122.43227386]
[175.54864502 129.09695435]
[189.23439026 121.78393555]
[204.60020447 123.94520569]
[215.73764038 134.74969482]
[218.36412048 150.04287720]
[211.46969604 163.94419861]
[197.70542908 171.10830688]
[182.36396790 168.78048706]
[171.34439087 157.85580444]
[168.88397217 142.53503418]
[155.44589233 135.87036133]
[141.45692444 140.85478210]
[127.73385620 134.28729248]
[122.60057831 119.58058167]
[109.16249084 112.91590881]
[94.21197510 114.13328552]
[82.02914429 122.88420868]
[69.84630585 131.63513184]
[57.66347504 140.38604736]
[62.21288300 154.79994202]
[62.08453369 169.89384460]
[57.30357742 184.18968201]
[48.35016632 196.29139709]
[36.11125183 205.02131653]
[21.79273796 209.53474426]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 33]
[4 31]
[5 30]
[6 29]
[8 27]
[9 26]
[10 25]
[42 109]
[43 108]
[44 107]
[45 106]
[55 81]
[56 80]
[57 79]
[58 78]
[59 77]
[60 76]
[62 74]
[63 73]
[86 105]
[87 104]
[90 101]
[91 100]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
