%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 08:14:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUACAGACAACUGCAACAGGUGCCACCACCCACAAAAGACAACACUACCCUCGUAACUACUGCUUCUACUACCCAAAAAUAAGAAUUUCAACACUACUUCCAAGAGACUUUU\
) } def
/len { sequence length } bind def

/coor [
[120.48577118 189.90171814]
[101.74832153 192.18963623]
[82.93759918 190.61380005]
[64.84198761 185.24024963]
[58.01355362 198.59587097]
[51.18512726 211.95149231]
[52.56055069 228.29286194]
[38.94359207 237.43125916]
[24.34220886 229.96589661]
[23.77705193 213.57649231]
[37.82950592 205.12306213]
[44.65793610 191.76744080]
[51.48636627 178.41181946]
[42.36683273 171.97502136]
[34.09192657 164.48342896]
[26.78291512 156.04681396]
[20.54691315 146.78881836]
[15.47531033 136.84512329]
[11.64243221 126.36146545]
[-3.03266549 129.46653748]
[-17.70776367 132.57160950]
[-32.38286209 135.67669678]
[-44.21164322 147.03503418]
[-59.88518524 142.21092224]
[-63.27989197 126.16698456]
[-50.90357971 115.40785217]
[-35.48793793 121.00159454]
[-20.81283951 117.89652252]
[-6.13774252 114.79144287]
[8.53735542 111.68636322]
[7.80220079 98.75407410]
[8.88654709 85.84637451]
[11.76899338 73.21799469]
[16.39265633 61.11814499]
[22.66628838 49.78562164]
[30.46608353 39.44406891]
[39.63811111 30.29756927]
[50.00136566 22.52663040]
[61.35132980 16.28460884]
[73.46401978 11.69468784]
[86.10038757 8.84745121]
[99.01105499 7.79908657]
[111.94124603 8.57028294]
[124.63578033 11.14582253]
[136.84413147 15.47487640]
[148.32537842 21.47201157]
[158.85292053 29.01887703]
[168.21902466 37.96653748]
[176.23884583 48.13841248]
[182.75411987 59.33376312]
[196.70996094 53.83516693]
[210.66578674 48.33657074]
[206.85086060 33.81132507]
[204.78070068 18.93682480]
[204.48435974 3.92188120]
[205.96601868 -11.02271938]
[209.20484924 -25.68717766]
[214.15539551 -39.86562729]
[220.74816895 -53.35902405]
[228.89059448 -65.97794342]
[238.46838379 -77.54523468]
[249.34707642 -87.89851379]
[261.37396240 -96.89243317]
[274.38018799 -104.40073395]
[288.18316650 -110.31800842]
[302.58911133 -114.56118774]
[317.39584351 -117.07070923]
[332.39541626 -117.81134033]
[347.37734985 -116.77268219]
[362.13122559 -113.96932220]
[376.45001221 -109.44060516]
[390.13262939 -103.25011444]
[402.98703003 -95.48474884]
[414.83273315 -86.25353241]
[425.50347900 -75.68604279]
[434.84942627 -63.93064499]
[442.73941040 -51.15235901]
[449.06265259 -37.53057098]
[453.73034668 -23.25651169]
[456.67703247 -8.53056812]
[457.86132812 6.44053221]
[457.26657104 21.44661903]
[454.90112305 36.27702713]
[450.79821777 50.72356415]
[445.01541138 64.58342743]
[437.63394165 77.66203308]
[428.75735474 89.77578735]
[418.51034546 100.75463104]
[407.03674316 110.44444275]
[394.49758911 118.70918274]
[381.06890869 125.43283081]
[366.93927002 130.52099609]
[352.30700684 133.90226746]
[337.37750244 135.52914429]
[322.36038208 135.37881470]
[307.46646118 133.45336914]
[292.90481567 129.77984619]
[278.87988281 124.40982056]
[265.58850098 117.41867828]
[253.21733093 108.90456390]
[241.93998718 98.98699951]
[231.91482544 87.80520630]
[223.28256226 75.51617432]
[216.16438293 62.29240799]
[202.20855713 67.79100800]
[188.25271606 73.28960419]
[191.84280396 91.82167053]
[191.58367920 110.69650269]
[187.48620605 129.12303162]
[179.72209167 146.32899475]
[168.61674500 161.59326172]
[154.63560486 174.27609253]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 13]
[5 12]
[6 11]
[19 30]
[20 29]
[21 28]
[22 27]
[50 106]
[51 105]
[52 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
