%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 00:53:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAGACCCAGAGCUGGAAGCUGCAAAGGAGCCCAGAGCUCAUGGGAGUGUCCCUGGAAAGCCUAUUCCAGCGUUCUUUACUGCCGUUUAAAUAAAGAAUCAUACAUCUGAAAGUG\
) } def
/len { sequence length } bind def

/coor [
[63.39813614 153.51399231]
[57.35843658 148.83790588]
[51.91059875 143.48394775]
[47.13024521 137.52642822]
[43.08372116 131.04804993]
[39.82719421 124.13871765]
[37.40586853 116.89434052]
[22.56914520 119.10152435]
[7.73242188 121.30870819]
[-7.10430098 123.51588440]
[-21.91005516 125.92205811]
[-36.68217087 128.52677917]
[-51.45428848 131.13150024]
[-66.22640228 133.73622131]
[-80.99851990 136.34094238]
[-86.32620239 150.67842102]
[-98.03770447 160.36022949]
[-112.92395782 162.86338806]
[-126.97045135 157.61439514]
[-136.43984985 146.11674500]
[-151.21197510 148.72146606]
[-165.98408508 151.32620239]
[-178.23103333 161.34231567]
[-192.10852051 155.93263245]
[-206.65708923 164.63755798]
[-219.04925537 153.06732178]
[-211.36167908 137.95648193]
[-194.71324158 141.16052246]
[-183.52288818 131.33070374]
[-168.58880615 136.55407715]
[-153.81669617 133.94935608]
[-139.04457092 131.34463501]
[-134.07867432 117.30165100]
[-122.67455292 107.56502533]
[-107.82991791 104.82582855]
[-93.51332855 109.91819000]
[-83.60324097 121.56883240]
[-68.83112335 118.96410370]
[-54.05900955 116.35938263]
[-39.28689194 113.75466156]
[-24.51477814 111.14994049]
[-18.39427567 106.83330536]
[-9.31148338 108.67916107]
[5.52523994 106.47198486]
[20.36196327 104.26480103]
[35.19868469 102.05761719]
[36.22437286 88.33322906]
[40.12384796 75.13455200]
[46.72138977 63.05633926]
[55.71971512 52.64284134]
[66.71334839 44.36329269]
[79.20690918 38.59078598]
[92.63742065 35.58543015]
[106.39970398 35.48265457]
[109.59712219 20.82740021]
[112.79454803 6.17214537]
[115.99197388 -8.48310947]
[119.18939972 -23.13836288]
[122.38681793 -37.79361725]
[113.64063263 -50.95719910]
[116.84606171 -66.43301392]
[130.10137939 -75.03953552]
[145.54243469 -71.67066193]
[154.00833130 -58.32509995]
[150.47639465 -42.92052078]
[137.04206848 -34.59619522]
[133.84465027 -19.94094086]
[130.64723206 -5.28568602]
[127.44980621 9.36956882]
[124.25238037 24.02482224]
[121.05495453 38.68007660]
[149.10174561 57.66250992]
[163.75059509 88.19718170]
[178.71681213 87.19100952]
[193.68301392 86.18484497]
[208.64923096 85.17868042]
[223.61544800 84.17251587]
[238.58166504 83.16635132]
[253.54788208 82.16018677]
[268.51409912 81.15402222]
[281.76419067 72.50846863]
[294.98181152 79.37462616]
[303.12557983 66.16635132]
[317.49041748 60.29858398]
[332.55276489 64.02759552]
[342.52081299 75.91950226]
[343.56167603 91.40162659]
[335.27508545 104.52078247]
[320.84744263 110.23237610]
[305.82641602 106.34018707]
[295.98797607 94.34084320]
[283.80834961 102.91443634]
[269.52026367 96.12023926]
[254.55404663 97.12640381]
[239.58782959 98.13256836]
[224.62161255 99.13873291]
[209.65539551 100.14489746]
[194.68917847 101.15106201]
[179.72297668 102.15722656]
[164.75675964 103.16339111]
[163.93530273 110.75740814]
[162.22642517 118.20210266]
[159.65383911 125.39415741]
[156.25326538 132.23374939]
[152.07189941 138.62591553]
[147.16777039 144.48196411]
[141.60894775 149.72061157]
[135.47259521 154.26913452]
[128.84388733 158.06439209]
[121.81483459 161.05372620]
[114.48297882 163.19563293]
[106.95010376 164.46037292]
[99.32076263 164.83041382]
[91.70084381 164.30061340]
[84.19612122 162.87831116]
[76.91075897 160.58325195]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 46]
[8 45]
[9 44]
[10 43]
[11 41]
[12 40]
[13 39]
[14 38]
[15 37]
[20 32]
[21 31]
[22 30]
[24 28]
[54 71]
[55 70]
[56 69]
[57 68]
[58 67]
[59 66]
[73 100]
[74 99]
[75 98]
[76 97]
[77 96]
[78 95]
[79 94]
[80 93]
[82 91]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
