%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 16:58:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGGCCGGGCCACUCUGGCUUCUCUGUGCCCCUGUAAAUAGUUUUAAAUAUGAACAAAGAAAAAAAUAUAUUUUAUGAUUUAAAAAAUAAAUAUAAUUGGGAUUUUAAAAACAUGAGAAAUGUGAACUGUGAUGGGGUGGGCAGGGCUGGGAGAACUUUGUACAGUGGAGAAAUAUUUAUAAACUUAAUUUUGUAAAACAGAA\
) } def
/len { sequence length } bind def

/coor [
[163.11206055 196.11648560]
[166.61814880 178.33033752]
[156.09272766 167.64317322]
[145.56730652 156.95599365]
[135.04188538 146.26882935]
[124.51647949 135.58164978]
[113.99105835 124.89448547]
[103.46564484 114.20731354]
[88.62279510 116.37290955]
[81.58969879 129.62190247]
[74.55660248 142.87088013]
[67.52350616 156.11985779]
[60.49041367 169.36885071]
[53.45731735 182.61782837]
[51.37129974 199.44296265]
[34.62623978 202.09611511]
[27.44126892 186.73992920]
[40.20833588 175.58473206]
[47.24142838 162.33575439]
[54.27452469 149.08676147]
[61.30762100 135.83778381]
[68.34071350 122.58879852]
[75.37380981 109.33981323]
[80.21196747 104.14324951]
[85.92138672 100.70870209]
[92.06885529 99.15768433]
[84.63498688 86.12934113]
[77.20111847 73.10100555]
[69.76725769 60.07266617]
[56.20773315 51.92098236]
[56.62048721 37.03209686]
[49.08749390 24.06081963]
[41.45581055 11.14736176]
[33.82413101 -1.76609695]
[26.19244576 -14.67955589]
[18.56076431 -27.59301376]
[10.92908096 -40.50647354]
[-1.34798086 -44.46919632]
[-7.43792486 -55.38521957]
[-4.55136776 -67.13486481]
[-11.98523521 -80.16320801]
[-19.41910172 -93.19154358]
[-26.85296822 -106.21988678]
[-34.28683472 -119.24822235]
[-41.72070312 -132.27656555]
[-49.15457153 -145.30490112]
[-48.47056961 -130.32051086]
[-51.79954147 -115.69457245]
[-58.90131378 -102.48226929]
[-69.26354218 -91.63680267]
[-82.13864899 -83.94059753]
[-96.59777832 -79.94889069]
[-111.59777832 -79.94965363]
[-126.05648804 -83.94284821]
[-138.93080139 -91.64038086]
[-149.29191589 -102.48691559]
[-156.39233398 -115.69993591]
[-159.71980286 -130.32621765]
[-159.03427124 -145.31054688]
[-154.38517761 -159.57188416]
[-146.10795593 -172.08137512]
[-134.79972839 -181.93653870]
[-121.27633667 -188.42636108]
[-106.51340485 -191.08265686]
[-91.57599640 -189.71377563]
[-77.54175568 -184.41848755]
[-65.42316437 -175.57881165]
[-56.09384537 -163.83134460]
[-59.04824066 -178.53750610]
[-62.00263596 -193.24368286]
[-64.95703125 -207.94985962]
[-75.26084900 -219.95578003]
[-70.18186951 -233.95767212]
[-73.13626099 -248.66384888]
[-76.09066010 -263.37002563]
[-79.04505157 -278.07620239]
[-81.99944305 -292.78237915]
[-84.95384216 -307.48855591]
[-87.90823364 -322.19470215]
[-100.39338684 -335.72747803]
[-94.14447784 -352.12438965]
[-97.32279205 -366.78381348]
[-100.50111389 -381.44320679]
[-103.67942810 -396.10263062]
[-106.85774994 -410.76202393]
[-110.03606415 -425.42144775]
[-113.21438599 -440.08084106]
[-128.09410095 -449.27581787]
[-131.65190125 -466.05657959]
[-122.16444397 -479.94064331]
[-125.56594849 -494.54986572]
[-128.96745300 -509.15911865]
[-142.51657104 -517.29528809]
[-146.26300049 -532.64910889]
[-137.98403931 -546.11145020]
[-122.59146881 -549.69531250]
[-109.21741486 -541.27447510]
[-105.79647064 -525.84490967]
[-114.35821533 -512.56060791]
[-110.95671082 -497.95138550]
[-107.55520630 -483.34213257]
[-95.76843262 -478.13058472]
[-89.03601837 -466.91372681]
[-90.00877380 -453.67266846]
[-98.55496979 -443.25915527]
[-95.37665558 -428.59976196]
[-92.19833374 -413.94033813]
[-89.02001953 -399.28094482]
[-85.84169769 -384.62152100]
[-82.66338348 -369.96212769]
[-79.48506165 -355.30270386]
[-69.48480225 -348.49234009]
[-66.71866608 -336.30236816]
[-73.20206451 -325.14910889]
[-70.24766541 -310.44293213]
[-67.29327393 -295.73675537]
[-64.33887482 -281.03057861]
[-61.38448334 -266.32440186]
[-58.43008804 -251.61824036]
[-55.47569275 -236.91206360]
[-45.38319397 -225.95803833]
[-50.25085831 -210.90425110]
[-47.29646301 -196.19807434]
[-44.34206772 -181.49191284]
[-41.38767242 -166.78573608]
[-36.12623215 -152.73876953]
[-28.69236374 -139.71043396]
[-21.25849724 -126.68209076]
[-13.82462978 -113.65374756]
[-6.39076281 -100.62541199]
[1.04310441 -87.59706879]
[8.47697163 -74.56873322]
[24.08435822 -66.54891205]
[23.84253883 -48.13815689]
[31.47422218 -35.22469711]
[39.10590363 -22.31123924]
[46.73758698 -9.39777946]
[54.36927032 3.51567888]
[62.00095367 16.42913818]
[68.11281586 20.58977127]
[69.64882660 29.59823036]
[82.67662811 36.81803894]
[82.79559326 52.63879776]
[90.22946167 65.66713715]
[97.66333008 78.69548035]
[105.09719849 91.72381592]
[114.15281677 103.68190002]
[124.67823029 114.36907196]
[135.20364380 125.05624390]
[145.72906494 135.74340820]
[156.25448608 146.43058777]
[166.77989197 157.11775208]
[177.30531311 167.80491638]
[189.31788635 164.32946777]
[201.59674072 166.28138733]
[211.81999207 173.22943115]
[218.08096313 183.80349731]
[219.24363708 195.96449280]
[215.14834595 207.39741516]
[225.34295654 218.40058899]
[235.53755188 229.40377808]
[245.73216248 240.40696716]
[255.92675781 251.41015625]
[252.78402710 236.74307251]
[255.41583252 221.97575378]
[263.43203735 209.29740906]
[275.64425659 200.58755493]
[290.24209595 197.13739014]
[305.06143188 199.45838928]
[317.90536499 207.20649719]
[326.86984253 219.23304749]
[330.62591553 233.75517273]
[328.61672974 248.61999512]
[321.14016724 261.62387085]
[309.30459595 270.83901978]
[294.86459351 274.89935303]
[279.96081543 273.20288086]
[266.80120850 265.99984741]
[274.43289185 278.91329956]
[282.06457520 291.82678223]
[289.69625854 304.74023438]
[297.32794189 317.65368652]
[304.95962524 330.56713867]
[312.59130859 343.48062134]
[320.22299194 356.39407349]
[335.59002686 360.08587646]
[343.77432251 373.60595703]
[339.92025757 388.93310547]
[326.31439209 396.97399902]
[311.02883911 392.95809937]
[303.13226318 379.26797485]
[307.30953979 364.02575684]
[299.67785645 351.11230469]
[292.04617310 338.19882202]
[284.41448975 325.28536987]
[276.78280640 312.37191772]
[269.15112305 299.45846558]
[261.51943970 286.54498291]
[253.88775635 273.63153076]
[244.92358398 261.60476685]
[234.72897339 250.60156250]
[224.53437805 239.59838867]
[214.33976746 228.59519958]
[204.14515686 217.59201050]
[186.72985840 220.50216675]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 153]
[3 152]
[4 151]
[5 150]
[6 149]
[7 148]
[8 147]
[9 23]
[10 22]
[11 21]
[12 20]
[13 19]
[14 18]
[26 146]
[27 145]
[28 144]
[29 143]
[31 141]
[32 139]
[33 138]
[34 137]
[35 136]
[36 135]
[37 134]
[40 132]
[41 131]
[42 130]
[43 129]
[44 128]
[45 127]
[46 126]
[68 125]
[69 124]
[70 123]
[71 122]
[73 120]
[74 119]
[75 118]
[76 117]
[77 116]
[78 115]
[79 114]
[81 111]
[82 110]
[83 109]
[84 108]
[85 107]
[86 106]
[87 105]
[90 101]
[91 100]
[92 99]
[159 204]
[160 203]
[161 202]
[162 201]
[163 200]
[178 199]
[179 198]
[180 197]
[181 196]
[182 195]
[183 194]
[184 193]
[185 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
