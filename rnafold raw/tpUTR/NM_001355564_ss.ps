%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 22:12:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGAGGUGUUCCCAGGCUGCCCCCAACACUCCAGGCCCUGCCCCCUCCCACUCUUGAAGAGGAGGCCGCCUCCUCGGGGCUCCAGGCUGGCUUGCCCGCGCUCUUUCUUCCCUCGUGACAGUGGUGUGUGGUGUCGUCUGUGAAUGCUAAGUCCAUCACCCUUUCCGGCACACUGCCAAAUAAACAGCUAUUUAAGGGGGAGUCGGC\
) } def
/len { sequence length } bind def

/coor [
[85.74580383 107.82335663]
[70.74961853 108.16153717]
[55.75342941 108.49971771]
[44.86875534 119.64250183]
[29.65567207 119.77184296]
[19.09980774 109.32630157]
[4.10362005 109.66448212]
[-10.89256668 110.00266266]
[-25.88875389 110.34084320]
[-34.01369858 121.08444214]
[-46.65842438 125.12744141]
[-59.13788223 121.20709229]
[-66.96260834 110.96861267]
[-81.96218872 111.08134460]
[-96.96176147 111.19408417]
[-111.96134186 111.30681610]
[-125.70297241 119.14762115]
[-138.48803711 111.50618744]
[-153.48760986 111.61892700]
[-168.48718262 111.73165894]
[-185.38841248 122.71665192]
[-201.77729797 112.45716858]
[-216.76670837 113.02071381]
[-231.75611877 113.58426666]
[-246.74552917 114.14781952]
[-250.40713501 124.80062866]
[-257.12255859 133.81140137]
[-266.24114990 140.33412170]
[-276.88751221 143.76252747]
[-288.04562378 143.78645325]
[-298.65588379 140.41983032]
[-307.71557617 133.99780273]
[-314.37371826 125.14342499]
[-318.01095581 114.70730591]
[-333.00714111 114.36912537]
[-348.00332642 114.03094482]
[-362.99951172 113.69276428]
[-370.41607666 121.65177917]
[-380.77548218 124.16262817]
[-390.59963989 120.63079071]
[-396.72555542 112.45001984]
[-411.70480347 111.66122437]
[-426.68405151 110.87243652]
[-440.87200928 117.87332916]
[-453.17480469 109.47745514]
[-468.15402222 108.68866730]
[-483.13327026 107.89987183]
[-498.11251831 107.11108398]
[-505.87326050 120.30310059]
[-518.88183594 128.36761475]
[-534.14892578 129.45143127]
[-548.16625977 123.30551910]
[-557.71282959 111.34215546]
[-560.59478760 96.31043243]
[-556.15002441 81.66453552]
[-545.39978027 70.76998138]
[-530.81445312 66.13025665]
[-515.74566650 68.81153870]
[-503.65603638 78.19768524]
[-497.32373047 92.13183594]
[-482.34448242 92.92062378]
[-467.36523438 93.70941925]
[-452.38598633 94.49821472]
[-439.26947021 87.44089508]
[-425.89526367 95.89318848]
[-410.91601562 96.68197632]
[-395.93676758 97.47077179]
[-379.39553833 87.45878601]
[-362.66131592 98.69657898]
[-347.66513062 99.03475952]
[-332.66894531 99.37294006]
[-317.67276001 99.71112061]
[-308.74368286 83.04978943]
[-292.51867676 73.19195557]
[-273.45358276 72.94209290]
[-256.83380127 82.45258331]
[-247.30908203 99.15840912]
[-232.31967163 98.59485626]
[-217.33026123 98.03131104]
[-202.34085083 97.46775818]
[-196.09266663 89.37998199]
[-186.21650696 85.99621582]
[-175.89601135 88.66249084]
[-168.59992981 96.73208618]
[-153.60034180 96.61934662]
[-138.60076904 96.50661469]
[-125.93200684 88.67388153]
[-112.07407379 96.30724335]
[-97.07450104 96.19450378]
[-82.07492065 96.08177185]
[-67.07534790 95.96903229]
[-55.79659653 83.49485779]
[-38.64807510 83.02764893]
[-26.22693634 95.34465790]
[-11.23074818 95.00646973]
[3.76543903 94.66828918]
[18.76162720 94.33010864]
[28.83588028 83.41933441]
[44.03932953 82.86274719]
[55.41524506 93.50353241]
[70.41143799 93.16535187]
[85.40762329 92.82717133]
[99.51124573 83.74736786]
[114.13499451 91.96327209]
[129.12440491 91.39972687]
[139.84036255 80.09458923]
[155.04978943 79.73660278]
[165.76145935 90.02229309]
[180.75086975 89.45874786]
[195.74028015 88.89519501]
[210.72969055 88.33164215]
[225.71910095 87.76809692]
[240.70851135 87.20454407]
[255.69792175 86.64099884]
[266.09365845 80.65653992]
[276.05697632 84.49085999]
[290.83343506 81.91081238]
[295.05953979 67.28543854]
[305.17535400 55.99131393]
[319.13458252 50.23282242]
[334.14804077 51.10261154]
[347.24102783 58.37469101]
[355.84262085 70.55986023]
[370.61904907 67.97981262]
[385.39550781 65.39976501]
[400.17193604 62.81971741]
[414.92858887 60.12868500]
[429.66458130 57.32682800]
[444.40057373 54.52496719]
[459.13656616 51.72310638]
[473.87255859 48.92124557]
[485.98458862 38.74238205]
[499.93313599 43.96616745]
[514.66912842 41.16430664]
[517.81994629 26.32018471]
[526.39086914 13.84690189]
[539.05004883 5.62755251]
[553.85162354 2.88851833]
[568.53424072 6.01656437]
[580.86712646 14.50456810]
[588.98846436 27.03343964]
[603.72448730 24.23157883]
[618.46044922 21.42971802]
[633.19647217 18.62785912]
[641.04394531 13.94988251]
[648.17492676 15.89637947]
[662.95135498 13.31633186]
[670.63568115 -0.30295634]
[685.29461670 -5.74811077]
[700.00665283 -0.44809613]
[707.82519531 13.09458351]
[705.05859375 28.48548698]
[693.01318359 38.45750427]
[677.37634277 38.30215073]
[665.53143311 28.09277725]
[650.75494385 30.67282486]
[635.99829102 33.36385345]
[621.26232910 36.16571426]
[606.52630615 38.96757507]
[591.79034424 41.76943588]
[588.83386230 56.40461731]
[580.47674561 68.82654572]
[567.96667480 77.12493896]
[553.19281006 80.00929260]
[538.40039062 77.00951385]
[525.84985352 68.55220795]
[517.47100830 55.90030289]
[502.73498535 58.70216370]
[491.67697144 68.68061829]
[476.67443848 63.65724182]
[461.93844604 66.45909882]
[447.20245361 69.26096344]
[432.46643066 72.06282043]
[417.73043823 74.86468506]
[411.74560547 79.20298004]
[402.75198364 77.59616089]
[387.97555542 80.17620850]
[373.19909668 82.75625610]
[358.42266846 85.33630371]
[354.45935059 99.71537018]
[344.60540771 110.99410248]
[330.77505493 116.90018463]
[315.69036865 116.21291351]
[302.34576416 109.01510620]
[293.41348267 96.68725586]
[278.63702393 99.26730347]
[291.59948730 106.81545258]
[299.33300781 119.66817474]
[299.93066406 134.65626526]
[293.24508667 148.08395386]
[280.92477417 156.64025879]
[266.00772095 158.21536255]
[252.17211914 152.42086792]
[242.82955933 140.68559265]
[240.28373718 125.90321350]
[245.16238403 111.71876526]
[256.26147461 101.63040161]
[241.27206421 102.19395447]
[226.28265381 102.75750732]
[211.29324341 103.32105255]
[196.30383301 103.88460541]
[181.31442261 104.44815826]
[166.32501221 105.01170349]
[156.41589355 116.07266998]
[141.22253418 116.85772705]
[129.68795776 106.38913727]
[114.69854736 106.95268250]
[106.27744293 114.99935913]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 102]
[2 101]
[3 100]
[6 97]
[7 96]
[8 95]
[9 94]
[13 91]
[14 90]
[15 89]
[16 88]
[18 86]
[19 85]
[20 84]
[22 80]
[23 79]
[24 78]
[25 77]
[34 72]
[35 71]
[36 70]
[37 69]
[41 67]
[42 66]
[43 65]
[45 63]
[46 62]
[47 61]
[48 60]
[104 207]
[105 206]
[108 203]
[109 202]
[110 201]
[111 200]
[112 199]
[113 198]
[114 197]
[116 186]
[117 185]
[123 179]
[124 178]
[125 177]
[126 176]
[127 174]
[128 173]
[129 172]
[130 171]
[131 170]
[133 168]
[134 167]
[141 160]
[142 159]
[143 158]
[144 157]
[146 156]
[147 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
