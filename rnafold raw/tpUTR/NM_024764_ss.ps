%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 11:59:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACAUGGUGAUCAUAAUUUCUCUUUAUUUUCUAGUUUUAUCAGCCAAUUCCUAGAACAAUAUAUUUAAAUGUUAAAUAUGCAAGCUACAUAAAAUCCUAAAGAAUUGUCAUUAU\
) } def
/len { sequence length } bind def

/coor [
[71.73198700 372.52633667]
[56.63404083 377.95141602]
[43.05530930 369.40756226]
[41.41223145 353.44888306]
[52.96524048 342.31750488]
[54.58702469 327.40542603]
[56.20880890 312.49334717]
[57.83059692 297.58129883]
[59.45238113 282.66921997]
[61.07416534 267.75714111]
[62.69595337 252.84507751]
[64.31773376 237.93301392]
[58.00185394 224.44380188]
[67.18585968 211.56106567]
[68.80764008 196.64900208]
[55.98746872 204.43637085]
[41.35850906 201.12072754]
[33.14865494 188.56690979]
[35.97544479 173.83567810]
[48.24898529 165.21243286]
[63.06616211 167.54724121]
[72.09313965 179.52661133]
[76.10607147 165.07334900]
[80.11899567 150.62010193]
[84.13191986 136.16685486]
[88.14484406 121.71360779]
[92.15776825 107.26035309]
[82.83112335 108.01081085]
[73.01194000 103.42512512]
[65.13592529 93.50845337]
[54.52932358 82.90185547]
[43.92272186 72.29524994]
[33.31612015 61.68864822]
[22.70952034 51.08204651]
[12.10291862 40.47544479]
[-1.62470675 46.90414047]
[-16.72347260 48.24692154]
[-31.37013054 44.34164047]
[-43.79602432 35.65988159]
[-52.50067139 23.25000763]
[-56.43293381 8.61057091]
[-55.11798096 -6.49064445]
[-48.71459579 -20.23009300]
[-37.99601746 -30.94867134]
[-24.25656891 -37.35205460]
[-9.15535450 -38.66701126]
[5.48408222 -34.73474503]
[17.89395714 -26.03009987]
[26.57571602 -13.60420609]
[30.48099518 1.04245210]
[29.13821411 16.14121819]
[22.70952034 29.86884308]
[33.31612015 40.47544479]
[43.92272186 51.08204651]
[54.52932358 61.68864822]
[65.13592529 72.29524994]
[75.74253082 82.90185547]
[83.23634338 82.59725189]
[90.20230103 69.31285095]
[98.22396851 81.98806000]
[105.71778107 81.68346405]
[115.42857361 70.25103760]
[125.13936615 58.81860352]
[134.85015869 47.38617325]
[144.56095886 35.95374298]
[154.27174377 24.52131271]
[163.98254395 13.08888149]
[173.69334412 1.65645015]
[183.40412903 -9.77598095]
[189.04988098 -25.76228333]
[205.97433472 -24.76262474]
[209.69888306 -8.22285461]
[194.83656311 -0.06518635]
[185.12576294 11.36724472]
[175.41497803 22.79967499]
[165.70417786 34.23210526]
[155.99337769 45.66453552]
[146.28259277 57.09696960]
[136.57179260 68.52939606]
[126.86100006 79.96183014]
[117.15020752 91.39425659]
[128.81971741 81.96969604]
[142.87242126 76.72359467]
[157.86312866 76.19547272]
[172.25016785 80.43963623]
[184.55398560 89.01962280]
[193.50924683 101.05304718]
[198.19497681 115.30239868]
[198.12930298 130.30224609]
[193.31896973 144.51002502]
[184.25868225 156.46456909]
[171.88020325 164.93647766]
[157.45654297 169.05450439]
[142.47105408 168.39512634]
[128.46482849 163.02618408]
[116.87828064 153.49978638]
[108.90299225 140.79566956]
[105.35913849 126.22030640]
[106.61101532 111.27328491]
[102.59809113 125.72653198]
[98.58516693 140.17977905]
[94.57224274 154.63302612]
[90.55931854 169.08627319]
[86.54639435 183.53953552]
[83.71971130 198.27078247]
[82.09793091 213.18286133]
[88.29781342 227.73867798]
[79.22980499 239.55479431]
[77.60802460 254.46685791]
[75.98623657 269.37893677]
[74.36444855 284.29101562]
[72.74266815 299.20306396]
[71.12088013 314.11514282]
[69.49909210 329.02722168]
[67.87731171 343.93927002]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 115]
[6 114]
[7 113]
[8 112]
[9 111]
[10 110]
[11 109]
[12 108]
[14 106]
[15 105]
[22 104]
[23 103]
[24 102]
[25 101]
[26 100]
[27 99]
[30 57]
[31 56]
[32 55]
[33 54]
[34 53]
[35 52]
[61 81]
[62 80]
[63 79]
[64 78]
[65 77]
[66 76]
[67 75]
[68 74]
[69 73]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
