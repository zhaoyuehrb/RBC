%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 18:42:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACCACAAGGCUGAAAAGUGCUUUGCUGGAGUCCUGUUCUCAGAGCUCCACAGAAGACACGUGUUUUUGUAUCUUUAAAGACUUGAUGAAUAAACACUUUUUCUGGUCAAUGUC\
) } def
/len { sequence length } bind def

/coor [
[106.12251282 180.15216064]
[117.42258453 169.51788330]
[115.39758301 154.65519714]
[113.37258911 139.79251099]
[111.34758759 124.92982483]
[98.55223846 124.61661530]
[88.63914490 118.75473022]
[76.94794464 128.15237427]
[65.25674438 137.55003357]
[53.56554413 146.94767761]
[41.87434387 156.34533691]
[30.18314362 165.74298096]
[31.07375908 181.23448181]
[22.66030312 194.27262878]
[8.17791939 199.84399414]
[-6.80461979 195.80628967]
[-16.52622223 183.71206665]
[-17.24873352 168.21182251]
[-8.69433403 155.26571655]
[5.84763670 149.85177612]
[20.78549385 154.05177307]
[32.47669220 144.65412903]
[44.16789627 135.25648499]
[55.85909653 125.85883331]
[67.55029297 116.46118164]
[79.24149323 107.06352997]
[78.10480499 101.18712616]
[78.59947968 95.22226715]
[65.96075439 87.14374542]
[53.32202148 79.06522369]
[40.68328857 70.98670959]
[28.04455757 62.90818787]
[15.40582657 54.82966995]
[-0.38901341 53.91664886]
[-6.94572258 40.54283524]
[-19.58445358 32.46431732]
[-32.22318649 24.38579750]
[-48.62112427 24.18676376]
[-56.41067886 9.75572586]
[-47.57862473 -4.06190157]
[-31.21061897 -3.05172777]
[-24.14466476 11.74706650]
[-11.50593376 19.82558632]
[1.13279688 27.90410614]
[16.02363014 28.23929596]
[23.48434639 42.19093704]
[36.12307739 50.26945496]
[48.76180649 58.34797668]
[61.40053940 66.42649841]
[74.03926849 74.50501251]
[86.67800140 82.58353424]
[109.33222198 77.17494202]
[127.11686707 96.13486481]
[140.73049927 89.83653259]
[154.34413147 83.53819275]
[167.95776367 77.23986053]
[181.57139587 70.94152069]
[195.18502808 64.64318848]
[198.40156555 54.07733917]
[206.77981567 47.22536850]
[217.33335876 46.21203995]
[226.47261047 51.13502121]
[240.40725708 45.58295059]
[254.34190369 40.03087616]
[268.27655029 34.47880554]
[282.21121216 28.92673302]
[296.14587402 23.37466049]
[300.07177734 8.47857857]
[311.87820435 -1.13712037]
[326.90512085 -1.94738352]
[339.37838745 6.14924955]
[353.31301880 0.59717709]
[367.24768066 -4.95489550]
[381.18234253 -10.50696754]
[382.71029663 -25.73601723]
[391.15020752 -38.50420380]
[404.56262207 -45.87749100]
[419.86550903 -46.16155243]
[433.54232788 -39.29111099]
[442.45028687 -26.84494591]
[444.54235840 -11.68309498]
[439.33786011 2.71036148]
[428.03268433 13.02791119]
[413.22470093 16.89865685]
[398.31671143 13.43313026]
[386.73440552 3.42768312]
[372.79974365 8.97975540]
[358.86511230 14.53182793]
[344.93045044 20.08390045]
[341.44296265 34.53988266]
[329.97628784 44.28562164]
[314.79217529 45.42393875]
[301.69793701 37.30931091]
[287.76327515 42.86138153]
[273.82864380 48.41345596]
[259.89398193 53.96552658]
[245.95933533 59.51760101]
[232.02467346 65.06967163]
[221.35089111 81.09830475]
[201.48336792 78.25681305]
[187.86973572 84.55515289]
[174.25610352 90.85349274]
[160.64247131 97.15182495]
[147.02883911 103.45016479]
[133.41520691 109.74849701]
[126.21027374 122.90482330]
[128.23527527 137.76750183]
[130.26026917 152.63018799]
[132.28527832 167.49287415]
[146.01843262 174.71644592]
[152.85267639 188.64744568]
[150.16009521 203.92912292]
[138.97604370 214.68536377]
[123.60102081 216.78016663]
[109.94702911 209.40803528]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 109]
[3 108]
[4 107]
[5 106]
[7 26]
[8 25]
[9 24]
[10 23]
[11 22]
[12 21]
[28 51]
[29 50]
[30 49]
[31 48]
[32 47]
[33 46]
[35 44]
[36 43]
[37 42]
[53 105]
[54 104]
[55 103]
[56 102]
[57 101]
[58 100]
[62 98]
[63 97]
[64 96]
[65 95]
[66 94]
[67 93]
[71 89]
[72 88]
[73 87]
[74 86]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
