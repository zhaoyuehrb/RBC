%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 23:00:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUUUACUCCAGCAUCUAUUGUAUUUUAAAUUUCUACUCCAGUCCAAUGUAACUAUUUAGCCCUGGAUUAUACAUACUGUCCAAUUUUCAUUAAAUUUUUGUCUUAUAACUAUU\
) } def
/len { sequence length } bind def

/coor [
[127.31516266 284.20755005]
[115.58523560 274.85827637]
[105.18737030 264.04696655]
[96.30236053 251.96159363]
[89.08468628 238.81225586]
[83.65982819 224.82757568]
[80.12211609 210.25073242]
[78.53305054 195.33514404]
[78.92026520 180.34013367]
[81.27703094 165.52644348]
[85.56237030 151.15161133]
[91.70626068 137.45707703]
[79.69256592 146.43879700]
[67.67887115 155.42050171]
[63.97196579 171.02941895]
[49.39641190 177.73262024]
[35.13332367 170.38795471]
[32.12412643 154.62965393]
[42.67721176 142.54611206]
[58.69716263 143.40679932]
[70.71086121 134.42509460]
[82.72455597 125.44338226]
[83.23637390 117.96086884]
[70.78791809 109.59211731]
[84.26000977 102.99584198]
[84.77182770 95.51332092]
[74.09303284 84.97940826]
[63.41424561 74.44548798]
[52.73545074 63.91157150]
[42.05665970 53.37765503]
[31.37786674 42.84373856]
[16.15869522 45.22763824]
[2.61237454 38.27417755]
[-4.16187906 24.83641624]
[-1.75328994 10.16206074]
[-12.43208218 -0.37185541]
[-23.11087418 -10.90577221]
[-37.67240524 -6.19192457]
[-52.75466919 -8.79652977]
[-64.89186859 -18.12106895]
[-71.29496002 -32.02283096]
[-70.49256897 -47.30729294]
[-62.66907120 -60.46219635]
[-49.62225342 -68.46463776]
[-34.35017776 -69.47572327]
[-20.36225510 -63.26310730]
[-10.87280750 -51.25440216]
[-8.06244087 -36.20912170]
[-12.57695770 -21.58456421]
[-1.89816546 -11.05064774]
[8.78062630 -0.51673090]
[23.42071533 -3.12552762]
[36.94975281 3.46455216]
[44.08758545 16.91463470]
[41.91178513 32.16494751]
[52.59057617 42.69886398]
[63.26936722 53.23278046]
[73.94815826 63.76669693]
[84.62695312 74.30061340]
[95.30574799 84.83453369]
[94.43278503 69.85995483]
[107.48186493 62.46255493]
[119.88227081 70.90233612]
[117.78685760 85.75626373]
[129.29214478 76.13189697]
[140.79742432 66.50753021]
[152.30271912 56.88317108]
[163.80799866 47.25880432]
[161.08491516 32.14323807]
[166.29953003 17.69667053]
[178.04914856 7.80515480]
[193.17317200 5.12945986]
[207.60333252 10.38933372]
[217.45796204 22.16989708]
[220.08624268 37.30223846]
[214.78115845 51.71583176]
[202.96977234 61.53349686]
[187.82925415 64.11432648]
[173.43237305 58.76409149]
[161.92707825 68.38845825]
[150.42179871 78.01281738]
[138.91650391 87.63718414]
[127.41122437 97.26155090]
[140.27720642 89.55010223]
[154.04594421 83.59848785]
[168.47805786 79.51018524]
[183.32261658 77.35627747]
[198.32150269 77.17420959]
[213.21395874 78.96715546]
[227.74105835 82.70393372]
[241.65020752 88.31958008]
[254.69958496 95.71645355]
[266.66232300 104.76594543]
[277.33038330 115.31072235]
[286.51831055 127.16744995]
[294.06637573 140.12995911]
[299.84332275 153.97290039]
[303.74868774 168.45558167]
[305.71463013 183.32618713]
[305.70693970 198.32618713]
[303.72570801 213.19477844]
[299.80545044 227.67343140]
[294.01428223 241.51042175]
[286.45291138 254.46517944]
[277.25277710 266.31243896]
[266.57388306 276.84625244]
[254.60188293 285.88345337]
[241.54490662 293.26690674]
[227.62998962 298.86825562]
[213.09906006 302.59011841]
[198.20477295 304.36773682]
[183.20606995 304.17025757]
[168.36373901 302.00109863]
[153.93583679 297.89797974]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 22]
[13 21]
[14 20]
[26 60]
[27 59]
[28 58]
[29 57]
[30 56]
[31 55]
[35 51]
[36 50]
[37 49]
[64 83]
[65 82]
[66 81]
[67 80]
[68 79]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
