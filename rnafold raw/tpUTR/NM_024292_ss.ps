%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 19:57:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGAAUCCUCAUCUUCCUGCCCCGCUUUCCUCUCCCAUCCUCAUCCCCCACACUGGGAUAGAUGCUUGUUUGUAAAAACUCACCUUAAUAAAGACUUAGAUGUUGCUUUGU\
) } def
/len { sequence length } bind def

/coor [
[77.33145905 170.34992981]
[71.30603027 184.08653259]
[65.28059387 197.82313538]
[59.25516510 211.55973816]
[53.22973251 225.29632568]
[55.57059479 241.52754211]
[42.51877594 251.45640564]
[27.50087547 244.86894226]
[25.96601677 228.54177856]
[39.49313354 219.27090454]
[45.51856613 205.53430176]
[51.54399490 191.79769897]
[57.56942749 178.06109619]
[63.59486008 164.32449341]
[57.73476791 160.63519287]
[52.24566269 156.41363525]
[47.17572784 151.69692993]
[42.56945801 146.52642822]
[38.46729279 140.94754028]
[34.90523529 135.00924683]
[31.91455078 128.76364136]
[29.52149200 122.26557159]
[27.74706459 115.57205963]
[26.60684395 108.74185944]
[26.11083603 101.83493042]
[26.26339531 94.91189575]
[27.06318474 88.03352356]
[28.50318336 81.26018524]
[30.57074928 74.65133667]
[33.24773788 68.26498413]
[36.51064682 62.15719604]
[40.33084106 56.38157272]
[44.67478561 50.98881531]
[49.50435257 46.02625656]
[54.77714920 41.53745651]
[60.44688797 37.56181335]
[66.46381378 34.13422775]
[72.77510071 31.28478622]
[68.69355011 16.85076714]
[64.61199951 2.41674662]
[60.53044510 -12.01727295]
[50.59545517 -16.85703659]
[45.14446640 -26.21498680]
[45.80826187 -36.80267334]
[52.11678696 -45.05467224]
[48.83657074 -59.69161606]
[45.55635071 -74.32855988]
[42.27613449 -88.96550751]
[38.99591827 -103.60245514]
[25.02642250 -110.63005066]
[18.88993454 -125.01329041]
[23.48391914 -139.96084595]
[36.63923645 -148.41493225]
[52.14434814 -146.38378906]
[62.67821503 -134.82647705]
[63.26706696 -119.19998169]
[53.63286591 -106.88266754]
[56.91308212 -92.24572754]
[60.19329834 -77.60877991]
[63.47351456 -62.97183228]
[66.75373077 -48.33488846]
[80.89559937 -35.26840210]
[74.96446991 -16.09882545]
[79.04602051 -1.66480541]
[83.12757111 12.76921463]
[87.20912170 27.20323372]
[107.30899048 26.45032883]
[126.86758423 31.14429092]
[144.43643188 40.93750000]
[158.71446228 55.10470581]
[171.49325562 47.24961090]
[184.27204895 39.39451599]
[197.05084229 31.53942299]
[204.37585449 16.86712837]
[220.75907898 16.14484596]
[229.34686279 30.11559868]
[221.30484009 44.40747070]
[204.90592957 44.31821442]
[192.12713623 52.17330933]
[179.34834290 60.02840042]
[166.56954956 67.88349915]
[170.32371521 77.25026703]
[172.76704407 87.04109192]
[173.85398865 97.07347107]
[173.56428528 107.16040039]
[171.90335083 117.11386108]
[168.90213013 126.74831390]
[164.61657715 135.88418579]
[159.12655640 144.35116577]
[152.53442383 151.99143982]
[162.07028198 163.57019043]
[171.60614014 175.14894104]
[181.14198303 186.72769165]
[190.67784119 198.30644226]
[200.21369934 209.88519287]
[210.06498718 221.19679260]
[220.22421265 232.23265076]
[236.02336121 232.63525391]
[246.84965515 244.14903259]
[246.28002930 259.94305420]
[234.65243530 270.64700317]
[218.86532593 269.91043091]
[208.28489685 258.17031860]
[209.18835449 242.39187622]
[199.02912903 231.35601807]
[194.24748230 230.27311707]
[190.14700317 226.08859253]
[188.63494873 219.42105103]
[179.09909058 207.84230042]
[169.56324768 196.26354980]
[160.02738953 184.68479919]
[150.49153137 173.10604858]
[140.95567322 161.52729797]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 14]
[2 13]
[3 12]
[4 11]
[5 10]
[38 66]
[39 65]
[40 64]
[41 63]
[45 61]
[46 60]
[47 59]
[48 58]
[49 57]
[70 81]
[71 80]
[72 79]
[73 78]
[90 113]
[91 112]
[92 111]
[93 110]
[94 109]
[95 108]
[96 105]
[97 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
