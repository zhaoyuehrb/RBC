%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 11:32:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUUGCGAACACUCUGUAUAUUUCGAGCUACCUCCCACACCUGUCUGUGCACUUGUAUGUUUUGUAAACUUGGCAUCUGUAAAAAUAACCAGCCAUUAGAUGAAUUCAGAACCUUCUAAUGAAAACUCCAUGCCUCUGGUCCUUGGACUCUUGUCCAUGGUUCCUGAGCUGUGGACCGGGAUAGAAUAA\
) } def
/len { sequence length } bind def

/coor [
[54.03445435 230.57402039]
[44.24971771 228.82875061]
[37.11050797 242.02085876]
[29.97129822 255.21296692]
[28.63456154 264.26766968]
[22.60342598 268.56274414]
[15.24707317 281.63500977]
[7.89072037 294.70727539]
[0.53436786 307.77954102]
[9.31307030 320.26541138]
[11.79651642 335.32513428]
[7.49161768 349.96859741]
[-2.74688697 361.28829956]
[-16.88613319 367.03671265]
[-32.11876678 366.07250977]
[-45.42033386 358.58712769]
[-54.14979553 346.06677246]
[-56.57392120 330.99740601]
[-52.21138763 316.37100220]
[-41.92838669 305.09170532]
[-27.76661301 299.39901733]
[-12.53789616 300.42318726]
[-5.18154335 287.35092163]
[2.17480922 274.27865601]
[9.53116226 261.20639038]
[16.77919197 248.07376099]
[23.91840172 234.88165283]
[31.05761337 221.68954468]
[19.33185768 205.26087952]
[17.52615738 185.08142090]
[26.21382332 166.69438171]
[43.07505798 155.18971252]
[63.51583099 153.79519653]
[69.31331635 139.96084595]
[75.11080933 126.12650299]
[80.90829468 112.29215240]
[74.99663544 98.50621033]
[60.97816467 93.16930389]
[46.95969772 87.83238983]
[32.67885971 94.05295563]
[18.53816795 88.44087982]
[12.69581890 74.78794861]
[-1.32264829 69.45103455]
[-15.34111500 64.11412811]
[-29.35958290 58.77722168]
[-47.45655441 62.13510132]
[-58.01042557 48.12387848]
[-72.11521149 43.01948166]
[-86.29125214 49.47531509]
[-100.52279663 44.09780121]
[-106.59008789 30.54333305]
[-120.69487762 25.43893623]
[-131.95185852 35.80903244]
[-146.74163818 39.74871063]
[-161.66563416 36.35266113]
[-173.29440308 26.40127373]
[-178.95576477 12.18130016]
[-177.34875488 -3.03961062]
[-168.84268188 -15.76380634]
[-155.39215088 -23.06735802]
[-140.08801270 -23.27196503]
[-126.44703674 -16.33061028]
[-117.60382080 -3.83836436]
[-115.59048462 11.33414459]
[-101.48568726 16.43854141]
[-88.14914703 9.90614796]
[-73.77217102 14.88180447]
[-67.01081848 28.91469002]
[-52.90602493 34.01908875]
[-41.81129456 29.17077827]
[-30.01128769 33.32185745]
[-24.02267456 44.75875473]
[-10.00420761 50.09566116]
[4.01425934 55.43257141]
[18.03272629 60.76947784]
[31.47545433 54.45848083]
[45.76819992 59.67116547]
[52.29660797 73.81392670]
[66.31507111 79.15083313]
[80.33354187 84.48773956]
[70.58982849 73.08335114]
[60.84611511 61.67896652]
[48.13112640 53.72100830]
[40.60122681 40.74794006]
[39.99787903 25.76007843]
[46.46062088 12.22372150]
[58.49479675 3.26946974]
[73.31722260 0.96820289]
[87.49985504 5.85214281]
[97.76263428 16.79176331]
[101.73205566 31.25702286]
[98.48933411 45.90401840]
[99.78719330 60.84776306]
[101.08506012 75.79151154]
[107.11048889 62.05491257]
[113.13592529 48.31830978]
[119.16135406 34.58171082]
[125.18678284 20.84511185]
[131.21221924 7.10851097]
[137.23765564 -6.62808895]
[126.68817902 -17.57236290]
[121.13459015 -31.72248840]
[121.42375183 -46.92067337]
[127.51158142 -60.84930420]
[138.46972656 -71.38436890]
[152.62713623 -76.91934204]
[167.82493591 -76.61018372]
[181.74554443 -70.50403595]
[192.26618958 -59.53204727]
[197.78253174 -45.36735916]
[197.45338440 -30.16998863]
[191.32893372 -16.25742149]
[180.34310913 -5.75122404]
[166.17117310 -0.25351614]
[150.97424316 -0.60265744]
[144.94882202 13.13394260]
[138.92338562 26.87054253]
[132.89794922 40.60714340]
[126.87252045 54.34374237]
[120.84709167 68.08034515]
[114.82166290 81.81694031]
[118.00377655 88.60841370]
[128.95539856 78.35843658]
[142.08786011 85.60679626]
[139.25222778 100.33633423]
[124.36801910 102.19136047]
[127.55014038 108.98283386]
[141.96144104 113.14388275]
[156.37274170 117.30492401]
[170.78405762 121.46596527]
[185.19535828 125.62701416]
[199.60665894 129.78805542]
[215.01158142 126.18262482]
[225.09300232 137.14685059]
[239.50430298 141.30789185]
[253.91561890 145.46893311]
[269.32052612 141.86349487]
[279.40194702 152.82772827]
[293.81326294 156.98876953]
[311.57113647 152.14791870]
[323.24600220 165.23976135]
[337.72412109 169.16195679]
[353.06732178 165.30230713]
[363.32864380 176.09834290]
[377.80679321 180.02055359]
[392.28491211 183.94274902]
[406.76306152 187.86494446]
[421.24118042 191.78713989]
[436.94595337 187.06565857]
[448.70016479 198.50112915]
[444.41213989 214.32974243]
[428.49298096 218.26835632]
[417.31896973 206.26527405]
[402.84085083 202.34307861]
[388.36273193 198.42088318]
[373.88458252 194.49868774]
[359.40646362 190.57647705]
[345.09881592 194.71667480]
[333.80191040 183.64009094]
[319.32379150 179.71789551]
[308.66732788 185.46583557]
[296.56481934 182.30337524]
[289.65222168 171.40007019]
[275.24090576 167.23902893]
[260.86679077 171.14208984]
[249.75457764 159.88023376]
[235.34326172 155.71919250]
[220.93196106 151.55815125]
[206.55783081 155.46121216]
[195.44561768 144.19935608]
[181.03431702 140.03831482]
[166.62301636 135.87727356]
[152.21170044 131.71623230]
[137.80039978 127.55518341]
[123.38909149 123.39414215]
[111.79191589 125.76278687]
[101.72505951 123.52249146]
[94.74263763 118.08963776]
[88.94515228 131.92398071]
[83.14766693 145.75833130]
[77.35018158 159.59268188]
[84.91236115 166.30218506]
[90.49250031 174.71180725]
[93.72496033 184.25473022]
[94.40198517 194.29039001]
[92.48706055 204.14753723]
[88.11673737 213.16909790]
[81.59092712 220.75598145]
[73.35238647 226.40684509]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 28]
[3 27]
[4 26]
[6 25]
[7 24]
[8 23]
[9 22]
[33 181]
[34 180]
[35 179]
[36 178]
[37 80]
[38 79]
[39 78]
[42 75]
[43 74]
[44 73]
[45 72]
[47 69]
[48 68]
[51 65]
[52 64]
[94 121]
[95 120]
[96 119]
[97 118]
[98 117]
[99 116]
[100 115]
[127 175]
[128 174]
[129 173]
[130 172]
[131 171]
[132 170]
[134 168]
[135 167]
[136 166]
[138 164]
[139 163]
[141 160]
[142 159]
[144 157]
[145 156]
[146 155]
[147 154]
[148 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
