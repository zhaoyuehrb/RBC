%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 00:29:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUCCUAAAAAGCCUUGGCUAUUCAUCAGACAUUUGUUAAGCACAGUGGACAGACAUUUCUUAAGCAUUGUGCUAGAUAUUAAGGAUACAGAUAUAAAGAGUCCAGUCUCUAC\
) } def
/len { sequence length } bind def

/coor [
[133.85798645 205.83738708]
[135.23001099 186.88391113]
[144.61056519 170.30265808]
[135.46560669 158.41276550]
[126.32064819 146.52287292]
[117.17568970 134.63296509]
[108.03072357 122.74307251]
[99.76213074 125.26586151]
[90.73760986 124.73748016]
[82.09413910 120.95385742]
[75.01129913 114.13619995]
[70.55251312 104.93264771]
[58.78863525 114.23915863]
[47.02475357 123.54566193]
[41.48014450 138.97904968]
[25.29623795 141.62730408]
[15.12165070 128.76612854]
[21.42312622 113.62599945]
[37.71824646 111.78178406]
[49.48212433 102.47527313]
[61.24600601 93.16876984]
[49.11234283 101.98773193]
[34.57116318 105.66931915]
[19.70274734 103.68684387]
[6.63419008 96.32390594]
[-2.76490617 84.63386536]
[-7.14989519 70.28911591]
[-5.89345455 55.34183121]
[0.82466686 41.93038940]
[12.04336739 31.97344208]
[26.15768433 26.89544868]
[41.14841080 27.42287064]
[54.87094879 33.48025513]
[65.36214447 44.20102310]
[71.12110138 58.05144882]
[71.32363892 73.05182648]
[71.73336029 58.05742264]
[72.14308167 43.06301880]
[72.55280304 28.06861687]
[65.19534302 14.06225014]
[73.27739716 1.55107021]
[73.68711853 -13.44333267]
[74.09683990 -28.43773651]
[74.50656128 -43.43214035]
[74.91628265 -58.42654419]
[75.32600403 -73.42094421]
[75.73573303 -88.41535187]
[76.14545441 -103.40975189]
[76.55517578 -118.40415192]
[63.04431534 -128.47169495]
[58.19609451 -144.43569946]
[63.71610260 -160.00473022]
[77.26362610 -169.16416931]
[77.26362610 -184.16416931]
[77.26362610 -199.16416931]
[68.59992218 -213.08798218]
[76.56405640 -227.42341614]
[92.96320343 -227.42341614]
[100.92733002 -213.08798218]
[92.26362610 -199.16416931]
[92.26362610 -184.16416931]
[92.26362610 -169.16416931]
[103.80255890 -162.30130005]
[110.46696472 -150.52156067]
[110.40523529 -136.87873840]
[103.52576447 -124.97155762]
[91.54957581 -117.99443054]
[91.13985443 -103.00003052]
[90.73013306 -88.00563049]
[90.32041168 -73.01122284]
[89.91069031 -58.01681900]
[89.50096893 -43.02241898]
[89.09124756 -28.02801514]
[88.68152618 -13.03361130]
[88.27179718 1.96079218]
[95.65856934 14.89465809]
[87.54721069 28.47833824]
[87.13748932 43.47274017]
[86.72776794 58.46714401]
[86.31804657 73.46154785]
[105.24037170 72.06412506]
[120.22015381 82.12472534]
[125.50403595 98.40442657]
[119.92062378 113.59811401]
[129.06558228 125.48800659]
[138.21054077 137.37791443]
[147.35551453 149.26780701]
[156.50047302 161.15769958]
[167.35220337 157.27070618]
[178.82861328 156.37704468]
[190.12033081 158.53144836]
[200.43322754 163.57395935]
[209.04423523 171.14179993]
[215.35200500 180.69549561]
[218.91899109 191.55726624]
[219.50167847 202.95910645]
[217.06730652 214.09715271]
[211.79548645 224.18832397]
[204.06504822 232.52536011]
[211.50582886 245.54974365]
[218.94659424 258.57415771]
[226.38737488 271.59854126]
[241.69841003 275.51614380]
[249.68281555 289.15524292]
[245.60356140 304.42401123]
[231.88079834 312.26373291]
[216.65602112 308.02328491]
[208.96179199 294.21841431]
[213.36297607 279.03930664]
[205.92221069 266.01492310]
[198.48143005 252.99052429]
[191.04064941 239.96614075]
[172.38053894 242.35374451]
[154.45043945 236.50489807]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 88]
[4 87]
[5 86]
[6 85]
[7 84]
[12 21]
[13 20]
[14 19]
[36 80]
[37 79]
[38 78]
[39 77]
[41 75]
[42 74]
[43 73]
[44 72]
[45 71]
[46 70]
[47 69]
[48 68]
[49 67]
[53 62]
[54 61]
[55 60]
[99 112]
[100 111]
[101 110]
[102 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
