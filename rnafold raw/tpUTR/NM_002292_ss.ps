%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 05:22:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCUGCCCAAGGCCUACCCCAGUUCCUAGCACUGCCCCACAUGCAUGUCUGCCUAUGCACUGAAGAGCUCUUGGCCCGGCAGGGCCCCCAAUAAACCAGUGUGAACCCCCA\
) } def
/len { sequence length } bind def

/coor [
[211.86241150 268.09869385]
[220.91934204 256.07550049]
[210.99653625 244.82659912]
[201.07373047 233.57768250]
[191.15092468 222.32878113]
[181.22811890 211.07986450]
[171.30531311 199.83096313]
[161.38250732 188.58204651]
[150.99539185 188.84358215]
[142.03315735 183.16134644]
[137.66007996 173.25012207]
[139.58085632 162.36380005]
[130.29853821 150.58081055]
[121.01622009 138.79783630]
[111.73390961 127.01485443]
[100.66601562 129.44560242]
[89.49953461 127.51776123]
[79.88735199 121.51670074]
[73.25227356 112.33070374]
[70.57643890 101.31949615]
[72.25592804 90.11297607]
[78.04212952 80.36994934]
[69.77370453 67.85462952]
[61.50527954 55.33931351]
[53.23685455 42.82399750]
[44.96842957 30.30868340]
[28.34319687 22.54526329]
[27.81268120 5.06479454]
[19.19954872 -7.21583796]
[10.58641529 -19.49647141]
[9.56820107 -4.53106928]
[2.29703569 8.58876896]
[-9.85346127 17.38453102]
[-24.58789825 20.19458008]
[-39.12274170 16.48806190]
[-50.71216965 6.96518421]
[-57.16677856 -6.57505226]
[-57.26721191 -21.57471657]
[-50.99449539 -35.20016861]
[-39.53362656 -44.87738419]
[-25.04971886 -48.77820587]
[-10.27897453 -46.16571426]
[1.98849487 -37.53313828]
[-2.12824583 -51.95716095]
[-6.24498653 -66.38118744]
[-10.36172771 -80.80520630]
[-14.47846794 -95.22923279]
[-18.59520912 -109.65325165]
[-32.52851486 -117.11237335]
[-37.02642822 -132.26309204]
[-29.42041206 -146.11676025]
[-14.22298241 -150.45423889]
[-0.45050624 -142.70217896]
[3.72605228 -127.45973969]
[-4.17118549 -113.76999664]
[-0.05444479 -99.34597015]
[4.06229591 -84.92195129]
[8.17903709 -70.49792480]
[12.29577732 -56.07390213]
[16.41251755 -41.64987946]
[22.86704826 -28.10960388]
[31.48018074 -15.82897091]
[40.09331512 -3.54833865]
[52.03099442 -1.10688424]
[59.29055786 9.17629528]
[57.48374557 22.04025650]
[65.75216675 34.55557251]
[74.02059937 47.07088852]
[82.28902435 59.58620453]
[90.55744934 72.10151672]
[108.96949768 71.94585419]
[123.87612152 82.75419617]
[129.45158386 100.30247498]
[123.51688385 117.73254395]
[132.79920959 129.51551819]
[142.08151245 141.29850769]
[151.36383057 153.08148193]
[170.35992432 159.54110718]
[172.63140869 178.65924072]
[182.55421448 189.90815735]
[192.47702026 201.15705872]
[202.39982605 212.40597534]
[212.32263184 223.65487671]
[222.24543762 234.90379333]
[232.16824341 246.15269470]
[245.22760010 238.66683960]
[259.52664185 233.96336365]
[274.47979736 232.23489380]
[289.47479248 233.55220032]
[303.89755249 237.86134338]
[317.15750122 244.98587036]
[328.71163940 254.63401794]
[338.08682251 266.41070557]
[344.89916992 279.83370972]
[348.86968994 294.35336304]
[349.83581543 309.37506104]
[347.75796509 324.28369141]
[342.72125244 338.46875000]
[334.93188477 351.34939575]
[324.70889282 362.39816284]
[312.47085571 371.16259766]
[298.71890259 377.28378296]
[284.01620483 380.51110840]
[268.96481323 380.71240234]
[254.18107605 377.87939453]
[240.27037048 372.12811279]
[227.80233765 363.69406128]
[217.28753662 352.92263794]
[209.15653992 340.25488281]
[203.74229431 326.20959473]
[201.26652527 311.36184692]
[201.83061218 296.31967163]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 85]
[3 84]
[4 83]
[5 82]
[6 81]
[7 80]
[8 79]
[12 77]
[13 76]
[14 75]
[15 74]
[22 70]
[23 69]
[24 68]
[25 67]
[26 66]
[28 63]
[29 62]
[30 61]
[43 60]
[44 59]
[45 58]
[46 57]
[47 56]
[48 55]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
