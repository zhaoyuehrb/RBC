%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 08:45:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUGGCAAAGUCCACCCUCAGGCCUUAUAAUACAUAAAAUAAUUUACACUGGAAAAAAACACUACAAAUGUAGAGAAUGUGGCCAAGCCUUUAACCAGUUCCAAACCUUAAUUGAAUGUAAGAGAAUUCAUAUUGGACAGAAAUUUUAUAAAUGUAAAAAAAUGUAACAAAGCCUUUAACCAACCCUCAAACCUUAAUAAACCUAAGAGAAUUUAUUUUAA\
) } def
/len { sequence length } bind def

/coor [
[110.25939178 190.69000244]
[115.27873230 178.85916138]
[122.30279541 168.09216309]
[131.11378479 158.72541809]
[122.36583710 146.54043579]
[113.61788940 134.35546875]
[96.95090485 131.42478943]
[85.84931946 122.03651428]
[78.90740967 135.33349609]
[71.96549225 148.63047791]
[72.43769836 164.44464111]
[59.68873978 172.14614868]
[52.74682617 185.44314575]
[58.88087082 199.82742310]
[54.28434372 214.77418518]
[41.12759018 223.22604370]
[25.62282562 221.19227600]
[15.09092236 209.63316345]
[14.50472546 194.00657654]
[24.14101982 181.69090271]
[39.44984055 178.50122070]
[46.39175415 165.20423889]
[45.42301559 150.34117126]
[58.66850662 141.68856812]
[65.61042023 128.39158630]
[72.55233765 115.09459686]
[60.08531952 123.43566895]
[47.61830139 131.77674866]
[35.15128326 140.11781311]
[22.68426514 148.45887756]
[14.12202930 160.77505493]
[1.89698613 169.46690369]
[-12.54820824 173.50874329]
[-27.50890350 172.42356873]
[-41.21961594 166.33946228]
[-52.06236649 155.97438049]
[-58.75762558 142.55151367]
[-60.51529694 127.65484619]
[-57.12796021 113.04232025]
[-48.99534988 100.43832397]
[-37.07717896 91.33023834]
[-22.77989006 86.79289246]
[-7.79067945 87.36172485]
[6.11888933 92.96792603]
[21.11821938 93.10964203]
[36.11754990 93.25135040]
[51.11688232 93.39305878]
[66.11621094 93.53476715]
[53.02099991 86.21934509]
[39.92578888 78.90392303]
[26.83057594 71.58849335]
[13.73536491 64.27307129]
[5.75804090 73.23876190]
[-4.36019039 80.05119324]
[-16.03925896 84.20228577]
[-28.57960510 85.33995056]
[-41.20403290 83.29576874]
[-53.10586166 78.10159302]
[-63.50045395 69.99346924]
[-71.67675781 59.40237808]
[-77.04555511 46.93196487]
[-79.18113708 33.32445526]
[-93.32429504 28.32735825]
[-107.46746063 23.33026123]
[-121.61061859 18.33316422]
[-137.62528992 21.86340141]
[-148.48867798 9.57849884]
[-143.02546692 -5.88388729]
[-126.85573578 -8.61738110]
[-116.61352539 4.19000196]
[-102.47035980 9.18709850]
[-88.32720184 14.18419552]
[-74.18403625 19.18129349]
[-70.02829742 12.93791008]
[-82.51506805 4.62643099]
[-95.00183105 -3.68504739]
[-101.65997314 -17.12636757]
[-86.69035339 -16.17181396]
[-74.20358276 -7.86033487]
[-61.71681976 0.45114362]
[-57.56108093 -5.79223919]
[-67.62954712 -16.91095924]
[-77.69802094 -28.02968025]
[-92.81157684 -35.71191406]
[-89.61341858 -52.36148071]
[-72.72917938 -53.89736557]
[-66.57929993 -38.09814835]
[-56.51082993 -26.97942734]
[-46.44235992 -15.86070728]
[-25.38927650 -19.40061378]
[-5.08038950 -14.73757076]
[11.48563671 -2.95971107]
[22.01636696 13.82528305]
[25.24027824 32.85800552]
[21.05078888 51.17786026]
[34.14599991 58.49328232]
[47.24121094 65.80870819]
[60.33642578 73.12413025]
[73.43163300 80.43955994]
[80.37084198 77.59396362]
[68.50299072 68.42041016]
[70.51370239 53.55578613]
[84.39223480 47.86490250]
[96.25988770 57.03871155]
[94.24925995 71.90277863]
[101.18846130 69.05718231]
[105.37741089 54.65396118]
[95.19028473 45.07467270]
[90.14673615 32.10327148]
[91.17736053 18.29039764]
[98.02431488 6.32592058]
[109.30269623 -1.48486102]
[122.78027344 -3.66533995]
[127.17261505 -18.00784111]
[131.56495667 -32.35034180]
[135.95730591 -46.69284439]
[140.34963989 -61.03534317]
[130.90985107 -73.35077667]
[130.54537964 -88.86357117]
[139.39637756 -101.60874176]
[154.05946350 -106.68550873]
[168.89637756 -102.14175415]
[178.20201111 -89.72464752]
[178.39817810 -74.20880890]
[169.40943909 -61.56040573]
[154.69213867 -56.64300156]
[150.29980469 -42.30050278]
[145.90745544 -27.95800018]
[141.51512146 -13.61549950]
[137.12277222 0.72700173]
[148.42494202 12.28092098]
[152.37870789 28.04939651]
[147.81246948 43.74936676]
[135.88220215 55.06699371]
[119.78062439 58.84290314]
[115.59168243 73.24612427]
[126.99087524 82.99591064]
[140.57051086 76.62459564]
[154.15013123 70.25327301]
[155.73254395 56.56528091]
[163.80601501 45.53290176]
[176.17672729 39.97298813]
[189.57148743 41.23946762]
[200.50361633 48.89530182]
[214.17204285 42.71678162]
[227.84046936 36.53826523]
[241.50889587 30.35974503]
[255.17732239 24.18122673]
[268.84576416 18.00270844]
[277.96493530 4.37286377]
[294.30822754 5.72522163]
[301.06304932 20.66859245]
[291.28063965 33.83051682]
[275.02426147 31.67113495]
[261.35583496 37.84965515]
[247.68742371 44.02817154]
[234.01899719 50.20669174]
[220.35057068 56.38521194]
[206.68214417 62.56372833]
[203.87432861 78.74132538]
[191.85466003 90.16994476]
[175.22608948 92.19947052]
[160.52145386 83.83290100]
[146.94181824 90.20422363]
[133.36219788 96.57553864]
[131.47236633 103.83353424]
[145.93339539 99.84873962]
[156.61491394 110.37989807]
[152.83551025 124.89596558]
[138.37454224 128.88102722]
[127.69268799 118.34953308]
[125.80285645 125.60752869]
[134.55079651 137.79249573]
[143.29875183 149.97746277]
[159.28141785 143.25144958]
[176.39353943 140.49575806]
[193.66441345 141.86299133]
[210.11518860 147.27206421]
[224.81439209 156.41282654]
[236.93060303 168.76402283]
[245.77952576 183.62286377]
[250.86259460 200.14514160]
[251.89514160 217.39306641]
[248.82221985 234.38864136]
[241.82164001 250.16897583]
[231.29359436 263.84091187]
[240.88110352 275.37692261]
[250.46861267 286.91296387]
[264.51483154 281.29519653]
[279.60968018 280.29495239]
[294.27432251 284.01016235]
[307.07211304 292.07690430]
[316.74920654 303.70486450]
[322.35754395 317.75482178]
[323.34768677 332.85034180]
[319.62261963 347.51251221]
[311.54730225 360.30487061]
[299.91287231 369.97418213]
[285.85916138 375.57308960]
[270.76296997 376.55313110]
[256.10330200 372.81823730]
[243.31636047 364.73437500]
[233.65486145 353.09344482]
[228.06535339 339.03598022]
[227.09544373 323.93914795]
[230.84014893 309.28198242]
[238.93258667 296.50045776]
[229.34509277 284.96444702]
[219.75758362 273.42840576]
[208.54771423 279.59750366]
[196.42376709 283.70016479]
[183.76327515 285.60720825]
[170.96072388 285.25769043]
[158.41525269 282.66119385]
[146.51826477 277.89718628]
[135.64118958 271.11294556]
[126.12384796 262.51873779]
[118.26391602 252.38146973]
[112.30753326 241.01626587]
[108.44165039 228.77680969]
[106.78813171 216.04421997]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 174]
[5 173]
[6 172]
[8 26]
[9 25]
[10 24]
[12 22]
[13 21]
[48 99]
[49 98]
[50 97]
[51 96]
[52 95]
[62 73]
[63 72]
[64 71]
[65 70]
[81 89]
[82 88]
[83 87]
[106 136]
[107 135]
[113 130]
[114 129]
[115 128]
[116 127]
[117 126]
[137 165]
[138 164]
[139 163]
[144 159]
[145 158]
[146 157]
[147 156]
[148 155]
[149 154]
[186 209]
[187 208]
[188 207]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
