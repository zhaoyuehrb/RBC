%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 23:44:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCCACAGUGCAAAUAUCUUUCUGUAACACCCUCAGCAUCCUGCACUGCCCUCUCUGAAAACACCCACAUUCUUUGGUCACUGUGAUUUCUUAGGCCUCCGUCUGUUGUACCACUAGCAUCUAUAUGACUUUUGUGUAAUUUUCUCUCUUGAACUCUGGUGCUGUUU\
) } def
/len { sequence length } bind def

/coor [
[107.49640656 177.81416321]
[93.95131683 177.94006348]
[80.58783722 175.72587585]
[67.80719757 171.23806763]
[55.99311447 164.61140442]
[45.50030899 156.04483032]
[36.64381027 145.79556274]
[23.70015144 153.37590027]
[10.75649261 160.95625305]
[-2.18716574 168.53660583]
[-15.13082409 176.11695862]
[-28.07448387 183.69731140]
[-41.01814270 191.27764893]
[-38.65783310 202.87954712]
[-39.65462112 214.65766907]
[-43.91717911 225.66184998]
[-51.09117126 235.00741577]
[-60.58866501 241.94630432]
[-71.63631439 245.92700195]
[-83.33833313 246.63827515]
[-94.74910736 244.03352356]
[-104.94961548 238.33370972]
[-113.12147522 230.00857544]
[-126.59250641 236.60639954]
[-140.06353760 243.20423889]
[-141.74324036 258.53988647]
[-151.46514893 270.51855469]
[-166.12699890 275.31787109]
[-181.05027771 271.40640259]
[-191.47299194 260.03228760]
[-194.06932068 244.82498169]
[-188.01075745 230.63703918]
[-175.23059082 221.99581909]
[-159.80691528 221.65867615]
[-146.66136169 229.73321533]
[-133.19033813 223.13537598]
[-119.71931458 216.53753662]
[-120.67967987 198.21725464]
[-113.54875183 181.25949097]
[-99.70842743 169.06419373]
[-81.89048767 164.09715271]
[-63.63750839 167.39170837]
[-48.59849167 178.33399963]
[-35.65483093 170.75364685]
[-22.71117401 163.17329407]
[-9.76751518 155.59294128]
[3.17614341 148.01260376]
[16.11980247 140.43225098]
[29.06346130 132.85189819]
[24.51307297 120.32151031]
[22.15786743 107.20015717]
[22.06633568 93.86943054]
[24.24114037 80.71697998]
[28.61903381 68.12528229]
[35.07270813 56.46051407]
[43.41448975 46.06188965]
[53.40179443 37.23180008]
[64.74418640 30.22702789]
[59.29498672 16.25182724]
[53.84578705 2.27662849]
[48.39658737 -11.69857121]
[36.17456818 -21.74510765]
[38.75969315 -36.41365814]
[33.31049347 -50.38885880]
[27.86128998 -64.36405945]
[21.76873207 -78.07102203]
[15.04597569 -91.48014069]
[8.32321835 -104.88925934]
[-6.93119383 -108.32974243]
[-16.36407280 -120.80190277]
[-15.52149963 -136.41677856]
[-4.80131435 -147.80148315]
[10.73474121 -149.58052063]
[23.75101662 -140.91389465]
[28.10162354 -125.89369202]
[21.73233986 -111.61201477]
[28.45509720 -98.20289612]
[35.17785263 -84.79377747]
[42.51525497 -97.87668610]
[57.28670883 -100.48516083]
[68.66120148 -90.70656586]
[68.29849243 -75.71095276]
[56.46454620 -66.49369812]
[41.83649063 -69.81326294]
[47.28569031 -55.83806229]
[52.73489380 -41.86286163]
[64.56714630 -32.81592560]
[62.37178421 -17.14777184]
[67.82098389 -3.17257309]
[73.27018738 10.80262661]
[78.71939087 24.77782631]
[107.25558472 22.16301537]
[134.81686401 30.00695801]
[142.75514221 17.27967453]
[150.69342041 4.55239010]
[158.63169861 -8.17489433]
[166.56996155 -20.90217781]
[166.58767700 -37.30131531]
[180.93170166 -45.24996185]
[194.84614563 -36.57123184]
[194.01701355 -20.19305801]
[179.29725647 -12.96390247]
[171.35897827 -0.23661794]
[163.42070007 12.49066639]
[155.48242188 25.21795082]
[147.54414368 37.94523621]
[155.36509705 44.80990982]
[162.20497131 52.65255356]
[167.94258118 61.33419418]
[172.47625732 70.70098877]
[175.72564697 80.58696747]
[177.63317871 90.81694031]
[178.16505432 101.20963287]
[177.31185913 111.58089447]
[175.08868408 121.74694061]
[171.53494263 131.52763367]
[184.61726379 138.86607361]
[197.69960022 146.20451355]
[210.78192139 153.54295349]
[223.86425781 160.88139343]
[236.94657898 168.21983337]
[250.02890015 175.55827332]
[264.19699097 180.48425293]
[279.01013184 182.84454346]
[293.82327271 185.20483398]
[308.63641357 187.56510925]
[323.44955444 189.92539978]
[338.26269531 192.28569031]
[353.07583618 194.64596558]
[369.66903687 191.16728210]
[377.60525513 206.14903259]
[365.40594482 217.92245483]
[350.71554565 209.45910645]
[335.90240479 207.09883118]
[321.08926392 204.73854065]
[306.27612305 202.37825012]
[291.46298218 200.01795959]
[276.64984131 197.65768433]
[261.83670044 195.29739380]
[258.35128784 201.93830872]
[266.36828613 214.61614990]
[251.38043213 215.22015381]
[247.89501953 221.86106873]
[258.25231934 232.71125793]
[268.60961914 243.56143188]
[284.41348267 243.67802429]
[295.44638062 254.99397278]
[295.16268921 270.79571533]
[283.73074341 281.70834351]
[267.93289185 281.25762939]
[257.14172363 269.71093750]
[257.75942993 253.91873169]
[247.40213013 243.06855774]
[237.04483032 232.21836853]
[232.13360596 221.29751587]
[230.76066589 210.59495544]
[232.52482605 201.09056091]
[236.77862549 193.58464050]
[242.69046021 188.64060974]
[229.60813904 181.30216980]
[216.52581787 173.96372986]
[203.44348145 166.62528992]
[190.36116028 159.28684998]
[177.27882385 151.94841003]
[164.19650269 144.60997009]
[155.53204346 155.02209473]
[145.20028687 163.78222656]
[133.51142883 170.62736511]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 49]
[8 48]
[9 47]
[10 46]
[11 45]
[12 44]
[13 43]
[23 37]
[24 36]
[25 35]
[58 91]
[59 90]
[60 89]
[61 88]
[63 86]
[64 85]
[65 84]
[66 78]
[67 77]
[68 76]
[93 106]
[94 105]
[95 104]
[96 103]
[97 102]
[116 165]
[117 164]
[118 163]
[119 162]
[120 161]
[121 160]
[122 159]
[123 139]
[124 138]
[125 137]
[126 136]
[127 135]
[128 134]
[129 133]
[143 154]
[144 153]
[145 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
