%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 18:49:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAAUGAGAACACAUGGACACAGGGCAGGGAACAUCACCCACCGAGGCCGGUCGCGGGGGUGGGGGGUUGAGGGAGGGAUAGCAUUUGGAGAAAUACCUAAUGUAAAUGACGAGUUGAUAGGGGCAGCAAACAAACAUGGAACAUGUAUCCCUAUGUUACAAACCUGCACGUUGUGUACAUGUACCCUAGAACUUACAGGAUAAUAAAACAA\
) } def
/len { sequence length } bind def

/coor [
[56.22856522 624.95623779]
[56.92439651 609.97241211]
[61.11969757 595.57104492]
[68.57979584 582.55767822]
[78.88740540 571.66027832]
[91.46597290 563.48840332]
[105.61188507 558.49914551]
[120.53389740 556.97149658]
[135.39732361 558.99102783]
[149.37077332 564.44470215]
[161.67263794 573.02752686]
[171.61408997 584.25836182]
[167.67840576 569.78387451]
[163.74272156 555.30938721]
[159.80703735 540.83489990]
[155.87135315 526.36047363]
[145.06575012 516.10919189]
[148.91110229 500.76239014]
[144.97541809 486.28793335]
[141.03973389 471.81344604]
[137.10404968 457.33895874]
[133.16836548 442.86450195]
[129.23268127 428.39001465]
[125.19036102 413.94497681]
[120.93544006 399.56109619]
[116.57455444 385.20901489]
[112.21366882 370.85690308]
[107.85278320 356.50482178]
[103.49189758 342.15270996]
[94.29221344 341.32073975]
[85.69380188 337.05389404]
[78.97730255 329.69836426]
[75.24323273 320.07476807]
[75.23812103 309.39010620]
[60.27114487 310.38494873]
[45.30417252 311.37979126]
[32.04754639 320.01531982]
[18.83513641 313.13916016]
[3.86816335 314.13400269]
[-11.09881020 315.12884521]
[-26.06578255 316.12368774]
[-41.03275681 317.11853027]
[-55.99972916 318.11340332]
[-64.31885529 331.07867432]
[-78.51129150 336.59484863]
[-93.05840302 332.74185181]
[-102.43505096 321.19992065]
[-117.40202332 322.19476318]
[-129.00820923 333.27066040]
[-144.88394165 330.95962524]
[-152.85069275 317.03445435]
[-146.79707336 302.17736816]
[-131.36689758 297.78543091]
[-118.39686584 307.22778320]
[-103.42989349 306.23294067]
[-95.66336060 293.55151367]
[-81.75418091 287.80703735]
[-66.95652008 291.39627075]
[-56.99457169 303.14642334]
[-42.02759933 302.15158081]
[-27.06062698 301.15673828]
[-12.09365368 300.16189575]
[2.87331891 299.16702271]
[17.84029198 298.17218018]
[30.02638054 289.60781860]
[44.30932999 296.41281128]
[59.27630234 295.41796875]
[74.24327850 294.42312622]
[85.63858032 284.66879272]
[88.93016052 270.03439331]
[92.22173309 255.40000916]
[87.46587372 241.28507996]
[98.04287720 229.51913452]
[93.28701782 215.40420532]
[103.86402130 203.63825989]
[107.15560150 189.00386047]
[110.44717407 174.36946106]
[113.73875427 159.73507690]
[117.03033447 145.10067749]
[120.32190704 130.46627808]
[75.96849060 133.45623779]
[55.81344223 88.09113312]
[49.99662781 74.26490021]
[44.17981720 60.43867111]
[38.36300278 46.61243820]
[32.54619217 32.78620529]
[20.06280899 23.06634140]
[22.25918007 8.33456612]
[16.44236755 -5.49166584]
[1.45030677 -9.93825340]
[-7.13290071 -23.00969505]
[-5.25452709 -38.53405380]
[6.19851685 -49.18120193]
[21.81845474 -49.92388535]
[34.23002625 -40.41142654]
[37.57287216 -25.13532257]
[30.26859856 -11.30847836]
[36.08541107 2.51775384]
[48.15273666 11.24867344]
[46.37242126 26.96939278]
[52.18923569 40.79562378]
[58.00605011 54.62185669]
[63.82286072 68.44808960]
[69.63967133 82.27432251]
[77.13885498 82.38493347]
[77.36009216 67.38656616]
[77.58132172 52.38819885]
[73.15715027 38.05548477]
[85.42134094 29.41895103]
[97.42489624 38.41419983]
[92.57968903 52.60943222]
[92.35845947 67.60779572]
[92.13722992 82.60617065]
[99.63641357 82.71678162]
[105.85848999 69.06813049]
[112.08056641 55.41947556]
[118.30264282 41.77082062]
[111.40935516 27.73455811]
[115.20130157 12.56369305]
[127.88803864 3.42144346]
[143.47927856 4.62450075]
[154.61331177 15.60481739]
[156.03298950 31.17782402]
[147.06797791 43.99042130]
[131.95129395 47.99289703]
[125.72921753 61.64155197]
[119.50714111 75.29020691]
[113.28506470 88.93885803]
[118.91016388 93.89952850]
[128.83149719 82.64932251]
[138.75302124 71.39927673]
[150.00291443 81.32096100]
[140.08171082 92.57066345]
[130.16036987 103.82086945]
[135.78547668 108.78153229]
[148.54899597 100.90165710]
[161.31251526 93.02177429]
[174.07603455 85.14189911]
[186.83956909 77.26201630]
[197.14080811 63.79648590]
[212.93177795 69.96752167]
[211.37327576 86.84968567]
[194.71943665 90.02554321]
[181.95591736 97.90541840]
[169.19239807 105.78530121]
[156.42887878 113.66517639]
[143.66534424 121.54505920]
[134.95629883 133.75785828]
[131.66473389 148.39225769]
[128.37315369 163.02665710]
[125.08157349 177.66104126]
[121.78999329 192.29544067]
[118.49842072 206.92984009]
[123.01884460 222.09150696]
[112.67727661 232.81071472]
[117.19770050 247.97238159]
[106.85613251 258.69158936]
[103.56455231 273.32598877]
[100.27297974 287.96035767]
[115.31046295 291.14440918]
[126.25011444 301.18316650]
[130.40570068 314.89160156]
[127.12739563 328.29794312]
[117.84399414 337.79183960]
[122.20487976 352.14392090]
[126.56576538 366.49603271]
[130.92665100 380.84811401]
[135.28753662 395.20022583]
[140.77586365 402.50003052]
[139.60522461 409.79623413]
[144.98529053 417.17620850]
[143.70715332 424.45434570]
[147.64283752 438.92880249]
[151.57852173 453.40328979]
[155.51420593 467.87774658]
[159.44989014 482.35223389]
[163.38557434 496.82672119]
[174.47267151 508.11328125]
[170.34582520 522.42474365]
[174.28150940 536.89923096]
[178.21719360 551.37371826]
[182.15287781 565.84820557]
[186.08856201 580.32263184]
[191.57872009 584.76159668]
[194.03359985 590.67376709]
[193.41156006 596.38629150]
[201.75660706 608.85064697]
[210.10165405 621.31500244]
[217.47517395 626.70391846]
[218.47627258 634.02526855]
[233.98312378 637.07702637]
[242.72070312 650.24633789]
[239.50515747 665.72003174]
[226.24421692 674.31793213]
[210.80537415 670.93896484]
[202.34819031 657.58789062]
[205.89019775 642.18560791]
[197.63729858 629.66003418]
[189.29225159 617.19567871]
[180.94720459 604.73132324]
[182.90469360 619.60302734]
[181.31484985 634.51855469]
[176.26660156 648.64355469]
[168.04231262 661.18792725]
[157.10200500 671.44995117]
[144.05766296 678.85571289]
[129.63891602 682.99090576]
[114.65229797 683.62420654]
[99.93608856 680.72027588]
[86.31344604 674.44140625]
[74.54637146 665.13891602]
[65.29306793 653.33319092]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 183]
[13 182]
[14 181]
[15 180]
[16 179]
[18 177]
[19 176]
[20 175]
[21 174]
[22 173]
[23 172]
[24 170]
[25 168]
[26 167]
[27 166]
[28 165]
[29 164]
[34 68]
[35 67]
[36 66]
[38 64]
[39 63]
[40 62]
[41 61]
[42 60]
[43 59]
[47 55]
[48 54]
[69 159]
[70 158]
[71 157]
[73 155]
[75 153]
[76 152]
[77 151]
[78 150]
[79 149]
[80 148]
[82 104]
[83 103]
[84 102]
[85 101]
[86 100]
[88 98]
[89 97]
[114 128]
[115 127]
[116 126]
[117 125]
[135 147]
[136 146]
[137 145]
[138 144]
[139 143]
[186 200]
[187 199]
[188 198]
[190 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
