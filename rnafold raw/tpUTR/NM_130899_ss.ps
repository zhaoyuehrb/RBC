%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 00:53:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGGAGCCAGGGCUACAACCGCCCAGGGAUCUGGAAGUAUCCCUAGAGGAGCCCAUCCCAGCUUUCUUUACUGCAGUUCAAAUAAUAAAGGAAAUCGUACAACUCCAAAAGAA\
) } def
/len { sequence length } bind def

/coor [
[83.28726196 238.38279724]
[83.50473785 223.07882690]
[90.81960297 209.63444519]
[103.55094910 201.13906860]
[101.91511536 186.22853088]
[100.27928162 171.31799316]
[98.64344788 156.40745544]
[83.32250977 154.87496948]
[68.74277496 149.19219971]
[56.02459717 139.65179443]
[46.18310547 126.84743500]
[33.69684982 135.15968323]
[21.21059608 143.47192383]
[8.72434044 151.78416443]
[7.17532539 167.34484863]
[-4.04955101 178.23226929]
[-19.65024567 179.30575562]
[-32.26058578 170.05841064]
[-35.92635727 154.85656738]
[-28.91669273 140.87806702]
[-14.54134178 134.72311401]
[0.41209400 139.29791260]
[12.89834881 130.98567200]
[25.38460350 122.67342377]
[37.87085724 114.36117554]
[36.23502731 99.45064545]
[22.24359322 94.04325867]
[8.25216103 88.63587189]
[-5.73927212 83.22848511]
[-19.73070526 77.82109833]
[-33.72213745 72.41371918]
[-47.78612137 67.19793701]
[-61.92003632 62.17474747]
[-78.86943054 62.56777191]
[-83.93915558 46.38957214]
[-69.79663849 37.03940201]
[-56.89684296 48.04083252]
[-42.76292801 53.06402588]
[-35.30561066 52.32889175]
[-28.31475258 58.42228317]
[-14.32331944 63.82966995]
[-0.33188707 69.23705292]
[13.65954590 74.64443970]
[27.65097809 80.05182648]
[41.64241028 85.45920563]
[47.88681030 71.88743591]
[57.16582489 60.47633743]
[68.80644989 51.87139511]
[82.00774384 46.52177429]
[79.15678406 31.79519653]
[76.30582428 17.06862259]
[63.87079239 6.93207645]
[64.18682098 -9.10786343]
[77.01147461 -18.74672890]
[92.50678253 -14.59040833]
[98.78606415 0.17272680]
[91.03239441 14.21766090]
[93.88336182 28.94423676]
[96.73432159 43.67081070]
[109.09765625 44.31450272]
[121.02301788 47.63899612]
[131.93629456 53.48424530]
[141.31208801 61.56884766]
[148.69905090 71.50360107]
[162.53755188 65.71605682]
[176.37606812 59.92852020]
[190.21458435 54.14097977]
[204.05308533 48.35343933]
[217.89160156 42.56589890]
[231.73011780 36.77835846]
[245.56861877 30.99081802]
[245.13691711 15.81919670]
[250.21865845 1.51743960]
[260.12661743 -9.98025990]
[273.52078247 -17.11893082]
[288.58972168 -18.93312836]
[303.29550171 -15.17749691]
[315.64926147 -6.35995388]
[323.98025513 6.32700014]
[327.16180420 21.16755867]
[324.76361084 36.15465927]
[317.11004639 49.26141739]
[305.23614502 58.71525192]
[290.74777222 63.23760986]
[275.60437012 62.21688080]
[261.85397339 55.79111099]
[251.35617065 44.82932663]
[237.51765442 50.61686707]
[223.67913818 56.40440750]
[209.84063721 62.19194794]
[196.00212097 67.97949219]
[182.16360474 73.76702881]
[168.32510376 79.55457306]
[154.48658752 85.34210968]
[156.12068176 94.15954590]
[156.33718872 103.12450409]
[155.13066101 112.01053619]
[152.53153992 120.59319305]
[148.60549927 128.65567017]
[143.45170593 135.99432373]
[137.20034790 142.42376709]
[130.00932312 147.78161621]
[122.06026459 151.93252563]
[113.55398560 154.77163696]
[115.18981934 169.68215942]
[116.82565308 184.59269714]
[118.46147919 199.50323486]
[132.73187256 205.03625488]
[142.78762817 216.57492065]
[146.31797791 231.46769714]
[142.51170349 246.29237366]
[132.24343872 257.64233398]
[117.87275696 262.90942383]
[102.70195007 260.88330078]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 107]
[5 106]
[6 105]
[7 104]
[11 25]
[12 24]
[13 23]
[14 22]
[26 45]
[27 44]
[28 43]
[29 42]
[30 41]
[31 40]
[32 38]
[33 37]
[49 59]
[50 58]
[51 57]
[64 94]
[65 93]
[66 92]
[67 91]
[68 90]
[69 89]
[70 88]
[71 87]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
