%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 07:29:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCGGCACACAGCUCCAGUGCUGAGAAGUCAGUGCCCCGAGAGACGACCCCACCAGUGGGGUGCCCGCUGCCUGUCCUCCGUGAAACCAGCCUCAGAUCAGGGCCCUGCCACCCAGGGCAGGGGAUCUUCUGCCGGCUGCCCCAGAGGACAGUGGGUGGAGUGGUACCUACUUAUUAAAUGUCUCAGACCCC\
) } def
/len { sequence length } bind def

/coor [
[49.14393616 237.66474915]
[40.09301758 249.62638855]
[38.89269257 256.15139771]
[35.13469696 260.43844604]
[30.55023193 261.82247925]
[21.11671829 273.48477173]
[11.68320656 285.14706421]
[2.24969506 296.80935669]
[-7.18381691 308.47161865]
[-8.47128391 332.85195923]
[-30.71372604 341.05810547]
[-38.76752853 353.71261597]
[-46.82133102 366.36709595]
[-54.87513351 379.02160645]
[-51.20328522 394.39343262]
[-59.54748535 407.81539917]
[-74.95727539 411.32452393]
[-88.29029846 402.83889771]
[-91.63629913 387.39285278]
[-83.01016998 374.15029907]
[-67.52963257 370.96780396]
[-59.47582626 358.31329346]
[-51.42202377 345.65881348]
[-43.36822128 333.00430298]
[-46.38866425 327.78518677]
[-47.83536530 321.88955688]
[-47.57044983 315.78442383]
[-45.59254074 309.95977783]
[-42.03866959 304.88958740]
[-37.17501831 300.99298096]
[-31.37706375 298.59973145]
[-25.10063744 297.92254639]
[-18.84609985 299.03811646]
[-9.41258812 287.37582397]
[0.02092371 275.71356201]
[9.45443535 264.05126953]
[18.88794708 252.38897705]
[28.13137436 240.57546997]
[37.18229294 228.61383057]
[31.96174812 207.32002258]
[44.31985474 188.87843323]
[66.54328156 185.52891541]
[74.39111328 172.74566650]
[82.23894501 159.96241760]
[90.08677673 147.17915344]
[97.93460846 134.39590454]
[79.19728088 121.19653320]
[75.13658905 101.96150208]
[60.52043152 98.58986664]
[45.90427399 95.21823120]
[31.28811646 91.84659576]
[16.67195892 88.47496033]
[2.05580115 85.10332489]
[-13.45908928 90.41559601]
[-25.63754463 79.43300629]
[-21.95141411 63.45350266]
[-6.19267321 58.91542816]
[5.42743731 70.48716736]
[20.04359436 73.85880280]
[34.65975189 77.23043823]
[49.27590942 80.60207367]
[63.89206696 83.97370911]
[78.50822449 87.34534454]
[96.27460480 72.13486481]
[121.84241486 77.60158539]
[134.25794983 103.70639801]
[141.68771362 90.67572021]
[149.11749268 77.64504242]
[156.54725647 64.61437225]
[163.97702026 51.58369446]
[160.02723694 36.51594925]
[167.74771118 23.40682983]
[182.13684082 19.73416710]
[189.56660461 6.70349169]
[196.99638367 -6.32718420]
[204.42614746 -19.35786057]
[211.85592651 -32.38853455]
[219.28569031 -45.41921234]
[226.71545410 -58.44989014]
[234.14523315 -71.48056793]
[234.49253845 -78.10595703]
[237.66520691 -82.84255981]
[242.03245544 -84.80728149]
[249.88029480 -97.59053802]
[243.68020630 -109.91011810]
[244.37525940 -123.57594299]
[251.67681885 -135.02029419]
[263.58551025 -141.30841064]
[276.93759155 -140.89080811]
[284.99139404 -153.54530334]
[293.04519653 -166.19979858]
[301.09899902 -178.85429382]
[309.15280151 -191.50878906]
[309.51434326 -209.91282654]
[325.36901855 -217.42176819]
[333.21682739 -230.20501709]
[341.06466675 -242.98826599]
[348.91250610 -255.77151489]
[349.47418213 -262.38220215]
[352.79855347 -267.01358032]
[357.22714233 -268.83584595]
[365.48480225 -281.35827637]
[373.74246216 -293.88067627]
[374.40197754 -312.27645874]
[390.37615967 -319.52767944]
[398.42996216 -332.18215942]
[406.48376465 -344.83666992]
[414.53756714 -357.49114990]
[422.59136963 -370.14566040]
[430.64517212 -382.80014038]
[438.69897461 -395.45465088]
[435.02709961 -410.82647705]
[443.37130737 -424.24847412]
[458.78109741 -427.75759888]
[472.11413574 -419.27194214]
[475.46014404 -403.82592773]
[466.83401489 -390.58334351]
[451.35345459 -387.40084839]
[443.29965210 -374.74633789]
[435.24584961 -362.09185791]
[427.19204712 -349.43734741]
[419.13824463 -336.78286743]
[411.08444214 -324.12835693]
[403.03063965 -311.47387695]
[405.34640503 -299.59194946]
[398.72814941 -288.98013306]
[386.26489258 -285.62301636]
[378.00723267 -273.10061646]
[369.74954224 -260.57818604]
[361.69573975 -247.92369080]
[353.84793091 -235.14044189]
[346.00009155 -222.35717773]
[338.15225220 -209.57392883]
[340.66012573 -197.73106384]
[334.21456909 -187.01347351]
[321.80731201 -183.45498657]
[313.75350952 -170.80049133]
[305.69970703 -158.14599609]
[297.64590454 -145.49150085]
[289.59210205 -132.83700562]
[296.10162354 -117.77415466]
[292.31735229 -101.63657379]
[279.53656006 -90.82324219]
[262.66354370 -89.74270630]
[254.81570435 -76.95944977]
[247.17590332 -64.05079651]
[239.74613953 -51.02011871]
[232.31636047 -37.98944092]
[224.88659668 -24.95876694]
[217.45683289 -11.92809010]
[210.02705383 1.10258579]
[202.59729004 14.13326168]
[195.16751099 27.16393852]
[199.33558655 41.41745758]
[191.98635864 54.73825455]
[177.00770569 59.01346207]
[169.57792664 72.04413605]
[162.14816284 85.07481384]
[154.71839905 98.10549164]
[147.28862000 111.13616943]
[149.94648743 125.89881897]
[161.45448303 135.51994324]
[172.96247864 145.14106750]
[184.47047424 154.76219177]
[195.97846985 164.38330078]
[212.00842285 169.90390015]
[211.14109802 186.83566284]
[194.63095093 190.68940735]
[186.35734558 175.89131165]
[174.84934998 166.27018738]
[163.34135437 156.64906311]
[151.83335876 147.02793884]
[140.32536316 137.40681458]
[132.92349243 138.61604309]
[138.41009521 152.57659912]
[145.94549561 165.54647827]
[139.53952026 179.10978699]
[124.73587036 181.52890015]
[114.34557343 170.71032715]
[117.36123657 156.01531982]
[118.11973572 141.03450012]
[110.71786499 142.24374390]
[102.87003326 155.02699280]
[95.02220154 167.81024170]
[87.17436981 180.59349060]
[79.32653809 193.37675476]
[83.92858124 200.30271912]
[86.28047943 208.24349976]
[86.19322968 216.49099731]
[83.69441223 224.31588745]
[79.02399445 231.03199768]
[72.61143494 236.05659485]
[65.03623199 238.96084595]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 39]
[2 38]
[5 37]
[6 36]
[7 35]
[8 34]
[9 33]
[11 24]
[12 23]
[13 22]
[14 21]
[42 186]
[43 185]
[44 184]
[45 183]
[46 182]
[48 63]
[49 62]
[50 61]
[51 60]
[52 59]
[53 58]
[66 160]
[67 159]
[68 158]
[69 157]
[70 156]
[73 153]
[74 152]
[75 151]
[76 150]
[77 149]
[78 148]
[79 147]
[80 146]
[83 145]
[84 144]
[89 140]
[90 139]
[91 138]
[92 137]
[93 136]
[95 133]
[96 132]
[97 131]
[98 130]
[101 129]
[102 128]
[103 127]
[105 124]
[106 123]
[107 122]
[108 121]
[109 120]
[110 119]
[111 118]
[161 173]
[162 172]
[163 171]
[164 170]
[165 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
