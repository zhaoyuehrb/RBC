%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 15:08:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCUCAGGUUUGGGGUCUCCUGAAGAUGCUAUUUCUAGAAUUAGUAUAUAGUGUACAAAUGUCUGACAAAUAAGUGCUCUUGUGACCCUCAUGUGAGCACUUUUGAGAAAGAGAAACCUAUAGCAACUUCAUGAAUUAAGCCUUUUUCUAUAUUUUUAUAUUCAUGUGUAAACAAAAAAUAAAAUAAAAUUCUGAUCGCAU\
) } def
/len { sequence length } bind def

/coor [
[368.48406982 437.32540894]
[370.83291626 428.15658569]
[374.02789307 419.24645996]
[378.04122925 410.67294312]
[382.83792114 402.51101685]
[388.37622070 394.83203125]
[377.36535645 384.64575195]
[366.35446167 374.45947266]
[355.34359741 364.27316284]
[344.33270264 354.08688354]
[333.32183838 343.90057373]
[322.31094360 333.71429443]
[311.30007935 323.52798462]
[299.19998169 323.68350220]
[289.94274902 315.28091431]
[288.86083984 302.42346191]
[278.00970459 292.06713867]
[267.84814453 293.22317505]
[258.53390503 288.49240112]
[253.25585938 279.22335815]
[253.96878052 268.36062622]
[243.44497681 257.67187500]
[232.92117310 246.98310852]
[222.39736938 236.29435730]
[211.87356567 225.60559082]
[197.43080139 221.96473694]
[193.26226807 206.70256042]
[182.73846436 196.01379395]
[172.21466064 185.32504272]
[161.69085693 174.63627625]
[151.16705322 163.94752502]
[140.64324951 153.25875854]
[129.79211426 142.90246582]
[118.62415314 132.88864136]
[107.45619202 122.87481689]
[96.28823090 112.86100006]
[82.27896118 107.50000000]
[67.27896118 107.50000000]
[52.27896118 107.50000000]
[37.27941513 107.61664581]
[22.28122902 107.84992218]
[7.28304243 108.08319855]
[-6.39513206 116.03417969]
[-19.24119377 108.49574280]
[-34.23937988 108.72902679]
[-49.23756409 108.96230316]
[-64.23574829 109.19557953]
[-79.23394012 109.42885590]
[-94.97711945 115.72078705]
[-105.38131714 102.33463287]
[-95.39846039 88.63138580]
[-79.46721649 94.43067169]
[-64.46903229 94.19739532]
[-49.47084427 93.96411133]
[-34.47265625 93.73083496]
[-19.47447014 93.49755859]
[-6.86906719 85.56326294]
[7.04976511 93.08500671]
[22.04795074 92.85173035]
[37.04613876 92.61845398]
[43.69008636 89.36876678]
[52.27896118 92.50000000]
[67.27896118 92.50000000]
[82.27896118 92.50000000]
[86.21260834 86.11435699]
[94.07990265 73.34307098]
[98.01354980 66.95743561]
[91.26612091 53.56070709]
[84.51869965 40.16398239]
[77.77127075 26.76725578]
[72.45253754 22.82043076]
[70.26005554 17.56745529]
[71.02964020 12.84731674]
[64.70211792 -0.75277245]
[58.37459183 -14.35286140]
[52.04706573 -27.95295143]
[45.71953964 -41.55303955]
[39.39201355 -55.15312958]
[33.06448746 -68.75321960]
[18.49035263 -74.25160980]
[12.26708126 -88.13417816]
[17.59877586 -101.99449921]
[11.27125072 -115.59458923]
[4.94372463 -129.19467163]
[-1.38380075 -142.79476929]
[-13.54735184 -154.60511780]
[-5.56576157 -169.56274414]
[11.01683807 -166.03375244]
[12.21628857 -149.12229919]
[18.54381371 -135.52220154]
[24.87133980 -121.92211151]
[31.19886398 -108.32202911]
[45.23527908 -103.47283173]
[51.84602737 -89.77054596]
[46.66457748 -75.08074188]
[52.99210358 -61.48065567]
[59.31962967 -47.88056564]
[65.64715576 -34.28047562]
[71.97467804 -20.68038750]
[78.30220795 -7.08029795]
[84.62973022 6.51979113]
[91.16799927 20.01983070]
[97.91542053 33.41655731]
[104.66284943 46.81328201]
[111.41027069 60.21000671]
[117.49752045 68.06711578]
[120.80233765 76.43746948]
[121.44181824 84.51255798]
[119.74455261 91.56962585]
[116.21688843 97.02316284]
[111.49726105 100.46537018]
[106.30205536 101.69303894]
[117.47001648 111.70685577]
[128.63798523 121.72068024]
[139.80593872 131.73449707]
[144.10055542 132.47813416]
[147.58195496 134.36346436]
[149.99049377 136.99333191]
[151.22271729 139.92697144]
[151.33201599 142.73495483]
[161.85580444 153.42372131]
[172.37960815 164.11247253]
[182.90341187 174.80123901]
[193.42721558 185.49000549]
[203.95101929 196.17875671]
[219.14651489 200.58415222]
[222.56233215 215.08178711]
[233.08613586 225.77055359]
[243.60993958 236.45930481]
[254.13372803 247.14807129]
[264.65753174 257.83682251]
[284.30746460 262.31488037]
[288.36599731 281.21603394]
[299.21713257 291.57232666]
[317.20370483 295.50189209]
[321.48635864 312.51712036]
[332.49725342 322.70339966]
[343.50811768 332.88970947]
[354.51901245 343.07598877]
[365.52987671 353.26229858]
[376.54077148 363.44857788]
[387.55163574 373.63488770]
[398.56250000 383.82116699]
[416.26315308 370.64340210]
[436.39324951 361.61437988]
[457.99618530 357.16079712]
[480.04586792 357.49194336]
[501.49548340 362.58993530]
[521.32720947 372.21057129]
[538.60034180 385.89514160]
[552.49633789 402.99221802]
[562.35699463 422.68872070]
[567.71618652 444.04855347]
[568.32165527 466.05703735]
[564.14672852 487.66928101]
[578.11389160 493.13903809]
[592.08105469 498.60882568]
[606.04821777 504.07858276]
[620.01531982 509.54837036]
[633.98248291 515.01812744]
[647.94964600 520.48791504]
[664.07397461 517.49810791]
[674.51818848 530.14129639]
[668.53820801 545.41125488]
[652.28570557 547.59954834]
[642.47991943 534.45507812]
[628.51275635 528.98529053]
[614.54559326 523.51550293]
[600.57843018 518.04577637]
[586.61126709 512.57598877]
[572.64410400 507.10620117]
[558.67694092 501.63644409]
[554.20379639 509.95220947]
[548.97326660 517.81457520]
[543.03100586 525.15478516]
[536.42877197 531.90850830]
[529.22424316 538.01672363]
[521.48022461 543.42596436]
[513.26434326 548.08886719]
[504.64828491 551.96447754]
[495.70730591 555.01885986]
[486.51947021 557.22521973]
[477.16506958 558.56408691]
[467.72576904 559.02368164]
[458.28408813 558.59985352]
[448.92251587 557.29614258]
[439.72286987 555.12384033]
[430.76556396 552.10174561]
[422.12893677 548.25622559]
[413.88851929 543.62066650]
[406.11633301 538.23547363]
[398.88037109 532.14764404]
[392.24401855 525.41021729]
[386.26528931 518.08197021]
[380.99655151 510.22692871]
[376.48394775 501.91357422]
[372.76705933 493.21450806]
[369.87844849 484.20571899]
[367.84353638 474.96582031]
[366.68017578 465.57559204]
[366.39871216 456.11703491]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 143]
[7 142]
[8 141]
[9 140]
[10 139]
[11 138]
[12 137]
[13 136]
[16 134]
[17 133]
[21 131]
[22 130]
[23 129]
[24 128]
[25 127]
[27 125]
[28 124]
[29 123]
[30 122]
[31 121]
[32 120]
[33 115]
[34 114]
[35 113]
[36 112]
[37 64]
[38 63]
[39 62]
[40 60]
[41 59]
[42 58]
[44 56]
[45 55]
[46 54]
[47 53]
[48 52]
[67 105]
[68 104]
[69 103]
[70 102]
[73 101]
[74 100]
[75 99]
[76 98]
[77 97]
[78 96]
[79 95]
[82 92]
[83 91]
[84 90]
[85 89]
[155 172]
[156 171]
[157 170]
[158 169]
[159 168]
[160 167]
[161 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
