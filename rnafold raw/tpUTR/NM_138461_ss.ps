%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 05:20:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGGCAGAACCUUCACUUGCAAGCAUGGGUGUUUUCAUCAUCGGCUGUCUUGAAUCCUUUCUACAAGGAGUGGGUACGAAUUAUAAACAAACUUCCCCUUUAGGUAUCCCUGGAGUAAUAAUGACAACAAAAUUCACUGCAGGUCGGUGGAAUGAUAGAAUGCAUUUUAAAUCACAUUGUAAACUUCCAGGUGAUCCAUGGAUAGGAUAAAUAACUAAGUUAUUAUAAUUGUUUAGGAAUUUAUAGUCCAUAAAA\
UAUCCUCCAGCCAGGG\
) } def
/len { sequence length } bind def

/coor [
[544.50512695 478.63244629]
[537.51153564 481.34176636]
[535.09661865 496.14608765]
[532.68170166 510.95040894]
[540.84661865 524.76031494]
[535.00592041 539.70239258]
[519.64007568 544.31439209]
[506.53646851 535.05834961]
[505.74700928 519.03472900]
[517.87738037 508.53549194]
[520.29229736 493.73114014]
[522.70721436 478.92681885]
[518.35296631 464.57272339]
[508.12017822 453.60504150]
[497.88739014 442.63735962]
[487.65460205 431.66967773]
[477.42181396 420.70199585]
[467.18902588 409.73431396]
[456.95623779 398.76663208]
[442.61651611 394.73901367]
[438.85955811 379.37036133]
[428.62677002 368.40267944]
[418.39398193 357.43499756]
[413.54080200 357.31637573]
[408.69894409 354.86090088]
[405.00231934 350.12503052]
[403.50817871 343.70654297]
[391.74990845 334.39294434]
[379.99163818 325.07934570]
[368.23336792 315.76574707]
[356.47509766 306.45214844]
[344.71682739 297.13858032]
[329.93597412 295.30126953]
[323.92236328 280.66751099]
[312.16409302 271.35391235]
[300.40582275 262.04031372]
[288.59396362 252.79478455]
[276.72891235 243.61761475]
[264.86386108 234.44044495]
[252.99880981 225.26327515]
[241.13374329 216.08610535]
[229.21589661 206.97760010]
[214.39654541 205.48220825]
[208.04653931 190.99124146]
[196.07627869 181.95172119]
[184.10601807 172.91220093]
[172.13575745 163.87269592]
[157.31640625 162.37728882]
[150.96640015 147.88633728]
[138.99613953 138.84681702]
[127.02588654 129.80729675]
[115.05562592 120.76777649]
[92.83792114 124.63081360]
[76.15581512 109.45658875]
[61.20481110 110.66801453]
[46.25381088 111.87944031]
[31.30281067 113.09086609]
[18.17259407 121.91741943]
[4.86201954 115.23326874]
[-10.08898258 116.44469452]
[-25.03998375 117.65612030]
[-39.99098587 118.86755371]
[-53.16960907 128.62745667]
[-68.10140991 121.84710693]
[-69.42583466 105.50152588]
[-55.78042603 96.40565491]
[-41.20241165 103.91654968]
[-26.25140953 102.70512390]
[-11.30040836 101.49369812]
[3.65059304 100.28227234]
[15.71141243 91.54236603]
[30.09138298 98.13986969]
[45.04238510 96.92844391]
[59.99338531 95.71701050]
[74.94438934 94.50558472]
[75.82991791 91.41051483]
[77.09613800 88.45073700]
[78.72312164 85.67286682]
[69.27433777 74.02294922]
[59.82556152 62.37303543]
[50.37678146 50.72311783]
[40.92800522 39.07320023]
[27.69566345 46.22451782]
[13.37833691 50.82129669]
[-1.53592634 52.70837784]
[-16.53900719 51.82294464]
[-31.12003326 48.19661713]
[-44.78277206 41.95431900]
[-57.06252670 33.30998230]
[-67.54192352 22.55919456]
[-75.86511993 10.06912613]
[-81.74987793 -3.73404098]
[-84.99711609 -18.37963676]
[-85.49768829 -33.36856461]
[-83.23600006 -48.19029236]
[-78.29053497 -62.34025955]
[-70.83110046 -75.33705139]
[-61.11301422 -86.73876190]
[-70.56179047 -98.38867950]
[-80.01057434 -110.03859711]
[-89.45935059 -121.68851471]
[-98.90813446 -133.33842468]
[-108.35691071 -144.98834229]
[-117.80568695 -156.63825989]
[-133.30531311 -161.99491882]
[-136.15003967 -178.14544678]
[-123.41345978 -188.47557068]
[-108.19787598 -182.35855103]
[-106.15576935 -166.08705139]
[-96.70699310 -154.43713379]
[-87.25821686 -142.78721619]
[-77.80943298 -131.13729858]
[-68.36065674 -119.48737335]
[-58.91187668 -107.83745575]
[-49.46309662 -96.18753815]
[-36.30104065 -103.34299469]
[-22.04445076 -107.95919800]
[-7.17840815 -109.87754822]
[7.79098177 -109.03125000]
[22.35382462 -105.44766998]
[36.01380539 -99.24742126]
[48.30509949 -90.64034271]
[58.80826569 -79.91835785]
[67.16455078 -67.44560242]
[73.08814240 -53.64603424]
[76.37596130 -38.98905945]
[76.91460419 -23.97351837]
[74.68425751 -9.11074734]
[69.75942993 5.09285831]
[62.30647278 18.15308762]
[52.57792282 29.62442207]
[62.02669907 41.27433777]
[71.47547913 52.92425537]
[80.92425537 64.57417297]
[90.37303925 76.22409058]
[101.95765686 74.42384338]
[113.13333130 77.96620941]
[121.56558228 86.11123657]
[125.49298859 97.15748596]
[124.09514618 108.79751587]
[136.06539917 117.83703613]
[148.03565979 126.87655640]
[160.00592041 135.91607666]
[175.68145752 138.05802917]
[181.17527771 151.90243530]
[193.14553833 160.94195557]
[205.11579895 169.98147583]
[217.08605957 179.02099609]
[232.76159668 181.16294861]
[238.25541687 195.00733948]
[246.95504761 197.66703796]
[250.31091309 204.22103882]
[262.17596436 213.39820862]
[274.04101562 222.57537842]
[285.90609741 231.75254822]
[297.77114868 240.92971802]
[306.43948364 243.68971252]
[309.71942139 250.28204346]
[321.47769165 259.59564209]
[333.23596191 268.90924072]
[348.85784912 271.41268921]
[354.03042603 285.38031006]
[365.78869629 294.69387817]
[377.54696655 304.00747681]
[389.30523682 313.32107544]
[401.06350708 322.63467407]
[412.82177734 331.94827271]
[406.98150635 318.13192749]
[406.07501221 303.15936279]
[410.20578003 288.73934937]
[418.90234375 276.51763916]
[431.17218018 267.88916016]
[445.61492920 263.83859253]
[460.58224487 264.82827759]
[474.36590576 270.74526978]
[485.39279175 280.91424561]
[492.40438843 294.17462158]
[494.60049438 309.01296997]
[491.73043823 323.73583984]
[484.12176514 336.66290283]
[472.64291382 346.31875610]
[458.60391235 351.60140991]
[443.60705566 351.90792847]
[429.36166382 347.20220947]
[439.59445190 358.16989136]
[449.82723999 369.13754272]
[464.89889526 373.94967651]
[467.92388916 388.53384399]
[478.15670776 399.50152588]
[488.38949585 410.46920776]
[498.62228394 421.43688965]
[508.85507202 432.40457153]
[519.08782959 443.37225342]
[529.32061768 454.33993530]
[548.44628906 444.66729736]
[574.79931641 458.74624634]
[586.55761719 468.05984497]
[595.19348145 470.91976929]
[598.39709473 477.54953003]
[610.04699707 486.99832153]
[621.69689941 496.44711304]
[640.48223877 493.78363037]
[654.97583008 505.52517700]
[656.22467041 523.81488037]
[668.08972168 532.99206543]
[679.95477295 542.16925049]
[691.81982422 551.34637451]
[703.68487549 560.52355957]
[715.54992676 569.70074463]
[728.85955811 576.61840820]
[743.18829346 581.05554199]
[757.51696777 585.49261475]
[771.84570312 589.92968750]
[786.17443848 594.36682129]
[800.50317383 598.80389404]
[817.42199707 597.71343994]
[823.15344238 613.66925049]
[809.40783691 623.59368896]
[796.06604004 613.13262939]
[781.73736572 608.69549561]
[767.40863037 604.25842285]
[753.07989502 599.82135010]
[738.75115967 595.38421631]
[724.42248535 590.94714355]
[720.18395996 597.13464355]
[732.55889893 605.61169434]
[744.93383789 614.08874512]
[751.41265869 627.61743164]
[736.45684814 626.46368408]
[724.08184814 617.98663330]
[711.70690918 609.50958252]
[707.46838379 615.69708252]
[716.78198242 627.45532227]
[726.09558105 639.21362305]
[735.40917969 650.97186279]
[744.79052734 662.67620850]
[754.23925781 674.32611084]
[763.68804932 685.97601318]
[779.17547607 685.01751709]
[792.25036621 693.37377930]
[797.88513184 707.83160400]
[793.91314697 722.83172607]
[781.86163330 732.60620117]
[766.36468506 733.39660645]
[753.38122559 724.89904785]
[747.90362549 710.38092041]
[752.03814697 695.42480469]
[742.58935547 683.77490234]
[733.14056396 672.12493896]
[726.51080322 668.92138672]
[723.65087891 660.28546143]
[714.33728027 648.52722168]
[705.02368164 636.76892090]
[695.71008301 625.01068115]
[692.49639893 597.19714355]
[706.37280273 581.56579590]
[694.50775146 572.38861084]
[682.64270020 563.21148682]
[670.77758789 554.03430176]
[658.91253662 544.85711670]
[647.04748535 535.67993164]
[636.35479736 539.53509521]
[625.00860596 537.74755859]
[615.82983398 530.64526367]
[611.15631104 519.89160156]
[612.24810791 508.09701538]
[600.59820557 498.64822388]
[588.94830322 489.19946289]
[577.24401855 479.81811523]
[565.48571777 470.50451660]
[558.49218750 473.21383667]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 12]
[3 11]
[4 10]
[13 194]
[14 193]
[15 192]
[16 191]
[17 190]
[18 189]
[19 188]
[21 186]
[22 185]
[23 184]
[27 167]
[28 166]
[29 165]
[30 164]
[31 163]
[32 162]
[34 160]
[35 159]
[36 158]
[37 156]
[38 155]
[39 154]
[40 153]
[41 152]
[42 150]
[44 148]
[45 147]
[46 146]
[47 145]
[49 143]
[50 142]
[51 141]
[52 140]
[54 75]
[55 74]
[56 73]
[57 72]
[59 70]
[60 69]
[61 68]
[62 67]
[78 135]
[79 134]
[80 133]
[81 132]
[82 131]
[98 115]
[99 114]
[100 113]
[101 112]
[102 111]
[103 110]
[104 109]
[196 270]
[197 269]
[199 268]
[200 267]
[201 266]
[204 261]
[205 260]
[206 259]
[207 258]
[208 257]
[209 256]
[210 224]
[211 223]
[212 222]
[213 221]
[214 220]
[215 219]
[232 254]
[233 253]
[234 252]
[235 251]
[236 249]
[237 248]
[238 247]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
