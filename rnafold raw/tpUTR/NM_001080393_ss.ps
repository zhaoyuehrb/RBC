%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 07:21:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAUUUUGUCUUGUUGCAAGUCAAUUAGGUGUCUUGUGACCAAGGAAAUACUAAUCUCUAAGCUGCCUGGGUCUUUUUGUGUGAAUAUUUAAUGGUGCUCCAUGACUGUUGAGUUUUAAAAACCUCGUUAAAUUUUGCCAAAUCAGUUGCCCCCAAAAGGGAAUAUGCUUUUCCUUAUUUUUUUUUCUAAAAUGCUAUUUAUCUCUAAGGAA\
) } def
/len { sequence length } bind def

/coor [
[139.21955872 590.45629883]
[126.08450317 583.21264648]
[113.92862701 574.42431641]
[102.93263245 564.22198486]
[93.25999451 552.75726318]
[85.05449677 540.20056152]
[78.43812561 526.73864746]
[73.50923920 512.57159424]
[70.34111786 497.90994263]
[68.98084259 482.97177124]
[69.44865417 467.97906494]
[71.73757935 453.15472412]
[75.81198120 438.72378540]
[65.24456024 449.36941528]
[54.67714310 460.01507568]
[44.10972214 470.66070557]
[33.54230118 481.30633545]
[22.97488213 491.95199585]
[12.40746307 502.59762573]
[1.84004283 513.24328613]
[-2.39087081 528.48828125]
[-16.84840012 532.07000732]
[-27.41581917 542.71569824]
[-27.10692024 558.51696777]
[-38.12174988 569.85046387]
[-53.92539978 569.99230957]
[-65.14185333 558.85827637]
[-65.11657715 543.05401611]
[-53.86457825 531.95587158]
[-38.06145859 532.14825439]
[-27.49403954 521.50262451]
[-24.01897812 507.01907349]
[-8.80559635 502.67584229]
[1.76182318 492.03021240]
[12.32924271 481.38455200]
[22.89666367 470.73892212]
[33.46408081 460.09329224]
[44.03150177 449.44763184]
[54.59892273 438.80200195]
[65.16634369 428.15637207]
[66.16213989 422.26129150]
[70.18586731 417.14559937]
[71.29106140 402.18637085]
[72.39624786 387.22714233]
[73.50144196 372.26791382]
[74.60663605 357.30868530]
[75.71183014 342.34945679]
[76.81701660 327.39022827]
[66.92537689 316.31362915]
[67.83309937 301.12710571]
[79.51832581 290.82693481]
[80.51316833 275.85998535]
[81.39761353 260.88607788]
[74.42420959 247.72473145]
[82.96174622 234.40478516]
[83.84619141 219.43087769]
[84.73062897 204.45697021]
[85.61507416 189.48307800]
[86.49951172 174.50917053]
[77.25463867 167.82650757]
[72.33209229 157.40332031]
[73.05909729 145.77906799]
[79.37050629 135.84808350]
[89.79638672 130.13894653]
[91.12209320 115.19763947]
[84.30319977 107.96216583]
[82.49299622 98.18604279]
[86.26909637 88.98873901]
[94.42658997 83.30501556]
[96.19239807 68.40930939]
[97.95820618 53.51361084]
[99.72401428 38.61790848]
[101.26993561 23.69778442]
[102.59563446 8.75648117]
[94.44883728 -7.75827456]
[105.08661652 -21.71633148]
[106.19181061 -36.67556000]
[107.29700470 -51.63478851]
[108.40219116 -66.59401703]
[105.91385651 -75.38136292]
[109.63559723 -81.76519775]
[110.96130371 -96.70650482]
[112.28700256 -111.64780426]
[113.61270905 -126.58911133]
[114.93840790 -141.53041077]
[112.57994080 -150.35350037]
[116.39543915 -156.68174744]
[117.94136047 -171.60188293]
[119.48728180 -186.52200317]
[121.03320312 -201.44212341]
[122.57912445 -216.36224365]
[124.12504578 -231.28237915]
[125.67097473 -246.20249939]
[126.99667358 -261.14379883]
[128.10186768 -276.10302734]
[129.20706177 -291.06225586]
[116.30484772 -297.09231567]
[106.25679779 -307.14297485]
[100.25534058 -319.99261475]
[99.00283813 -334.08926392]
[102.62940979 -347.73800659]
[110.67977905 -359.30474854]
[122.17028046 -367.41183472]
[135.70906067 -371.10220337]
[137.03475952 -386.04351807]
[138.36045837 -400.98480225]
[139.68617249 -415.92611694]
[132.28695679 -430.56112671]
[141.48689270 -444.13659668]
[157.82185364 -442.68722534]
[164.48785400 -427.70404053]
[154.62747192 -414.60040283]
[153.30177307 -399.65911865]
[151.97607422 -384.71780396]
[150.65036011 -369.77648926]
[164.80943298 -362.65829468]
[175.17776489 -350.62213135]
[180.14512634 -335.49194336]
[178.92272949 -319.57553101]
[171.66825867 -305.31259155]
[159.46630859 -294.90078735]
[144.16629028 -289.95706177]
[143.06109619 -274.99783325]
[141.95590210 -260.03860474]
[144.34019470 -255.90206909]
[144.15229797 -250.22404480]
[140.59109497 -244.65657043]
[139.04516602 -229.73645020]
[137.49925232 -214.81632996]
[135.95332336 -199.89620972]
[134.40740967 -184.97607422]
[132.86148071 -170.05595398]
[131.31556702 -155.13583374]
[129.87971497 -140.20471191]
[128.55400085 -125.26340485]
[127.22830963 -110.32210541]
[125.90260315 -95.38080597]
[124.57690430 -80.43949890]
[123.36141968 -65.48883057]
[122.25623322 -50.52959824]
[121.15103912 -35.57036972]
[120.04584503 -20.61113930]
[127.70542145 -11.24981785]
[126.90806580 1.22109056]
[117.53693390 10.08218288]
[116.21123505 25.02348518]
[118.53425598 29.19474030]
[118.26264191 34.86936951]
[114.61971283 40.38371658]
[112.85390472 55.27941895]
[111.08809662 70.17511749]
[109.32228851 85.07082367]
[117.50700378 101.81395721]
[106.06339264 116.52333832]
[104.73769379 131.46464539]
[117.44293976 145.51937866]
[115.86581421 164.07923889]
[101.47341919 175.39361572]
[100.58897400 190.36750793]
[99.70453644 205.34141541]
[98.82009125 220.31532288]
[97.93564606 235.28921509]
[104.84578705 249.52159119]
[96.37151337 261.77050781]
[95.48707581 276.74441528]
[98.10474396 285.49411011]
[94.47755432 291.93212891]
[104.52221680 303.83770752]
[103.18829346 318.99273682]
[91.77625275 328.49542236]
[90.67105865 343.45465088]
[89.56586456 358.41387939]
[88.46067047 373.37310791]
[87.35548401 388.33233643]
[86.25028992 403.29156494]
[85.14509583 418.25079346]
[93.36923981 405.70635986]
[103.05890656 394.25601196]
[114.07004547 384.06997681]
[126.23896790 375.29974365]
[139.38478088 368.07562256]
[153.31204224 362.50503540]
[167.81370544 358.67080688]
[182.67422485 356.62991333]
[197.67265320 356.41268921]
[212.58602905 358.02236938]
[227.19265747 361.43505859]
[241.27539062 366.59997559]
[254.62489319 373.44036865]
[267.04269409 381.85452271]
[278.34420776 391.71740723]
[288.36138916 402.88232422]
[296.94537354 415.18338013]
[303.96850586 428.43762207]
[309.32641602 442.44808960]
[312.93945312 457.00643921]
[314.75387573 471.89630127]
[314.74273682 486.89630127]
[312.90618896 501.78344727]
[309.27151489 516.33642578]
[303.89279175 530.33892822]
[296.84997559 543.58270264]
[288.24774170 555.87097168]
[278.21395874 567.02099609]
[266.89782715 576.86706543]
[254.46752930 585.26281738]
[241.10787964 592.08331299]
[227.01748657 597.22735596]
[212.40579224 600.61828613]
[197.49003601 602.20581055]
[182.49195862 601.96630859]
[167.63449097 599.90338135]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 40]
[14 39]
[15 38]
[16 37]
[17 36]
[18 35]
[19 34]
[20 33]
[22 31]
[23 30]
[42 176]
[43 175]
[44 174]
[45 173]
[46 172]
[47 171]
[48 170]
[51 167]
[52 165]
[53 164]
[55 162]
[56 161]
[57 160]
[58 159]
[59 158]
[64 155]
[65 154]
[69 152]
[70 151]
[71 150]
[72 149]
[73 146]
[74 145]
[76 142]
[77 141]
[78 140]
[79 139]
[81 138]
[82 137]
[83 136]
[84 135]
[85 134]
[87 133]
[88 132]
[89 131]
[90 130]
[91 129]
[92 128]
[93 127]
[94 124]
[95 123]
[96 122]
[104 115]
[105 114]
[106 113]
[107 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
