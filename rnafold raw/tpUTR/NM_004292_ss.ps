%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 06:44:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUGAAGUGGCCAGAAGGGUCAUUCGGGGCGGGAGACCCUGAGCCUGCUGAGAAAUCCUUUUAGCGCCAGCAAGCCCCACCCAGGGCCCUGUCCUGUGUCUGCCACCACCUUUGUCUGAUACUUGUUUCCAGGGAAGCUGGGGGAACUGCCACAUCUGAGGAACUGGAAUAAAGAUGAGGGGGCUUCGGGGGCCCCCAGACUGUG\
) } def
/len { sequence length } bind def

/coor [
[-10.54381275 146.42292786]
[-22.55641556 143.40574646]
[-33.48381424 137.59849548]
[-42.68954086 129.34542847]
[-49.63886261 119.13307190]
[-53.92981720 107.56156158]
[-55.31648254 95.30936432]
[-70.14238739 93.03065491]
[-84.96829224 90.75194550]
[-99.79419708 88.47323608]
[-114.62010193 86.19451904]
[-129.52209473 84.48258209]
[-144.47850037 83.33991241]
[-159.43492126 82.19723511]
[-177.19349670 91.73095703]
[-192.66893005 80.14174652]
[-207.65322876 79.45571899]
[-222.63754272 78.76969147]
[-237.62184143 78.08365631]
[-252.60614014 77.39762878]
[-267.59045410 76.71159363]
[-273.43353271 85.64630127]
[-282.39102173 91.30458832]
[-292.80929565 92.72123718]
[-302.79772949 89.70686340]
[-310.57168579 82.87008667]
[-314.77145386 73.49607849]
[-329.70870972 72.12545013]
[-344.64596558 70.75482178]
[-359.09539795 77.19876099]
[-371.06240845 68.33087921]
[-385.99966431 66.96025085]
[-400.93692017 65.58962250]
[-409.77261353 67.92242432]
[-416.09091187 64.08249664]
[-427.26077271 76.78157806]
[-443.63604736 80.28723145]
[-458.72348022 73.41190338]
[-466.66079712 59.04466629]
[-481.59802246 57.67404175]
[-496.53527832 56.30341339]
[-505.37100220 58.63621521]
[-511.68927002 54.79629135]
[-526.60388184 53.19803238]
[-532.79968262 55.52354813]
[-538.39825439 54.51894760]
[-541.94647217 51.31683731]
[-556.80541992 49.26448441]
[-571.66436768 47.21213531]
[-586.52325439 45.15978241]
[-601.38220215 43.10742950]
[-616.24114990 41.05507660]
[-631.10009766 39.00272369]
[-644.70623779 47.50278473]
[-659.78668213 42.02907181]
[-664.77282715 26.78055191]
[-655.83984375 13.45458126]
[-639.84033203 12.27370548]
[-629.04772949 24.14379120]
[-614.18878174 26.19614410]
[-599.32983398 28.24849701]
[-584.47094727 30.30084991]
[-569.61199951 32.35320282]
[-554.75305176 34.40555573]
[-539.89410400 36.45790863]
[-525.00561523 38.28342438]
[-510.09100342 39.88168335]
[-495.16464233 41.36616516]
[-480.22741699 42.73679352]
[-465.29016113 44.10741806]
[-457.45651245 33.29380035]
[-445.20385742 27.71924400]
[-431.68923950 28.93762398]
[-420.45327759 36.73714828]
[-414.49264526 49.16789246]
[-399.56628418 50.65237427]
[-384.62902832 52.02300262]
[-369.69180298 53.39362717]
[-356.31076050 46.85165024]
[-343.27532959 55.81757355]
[-328.33807373 57.18820190]
[-313.40081787 58.55882645]
[-299.38467407 45.03356934]
[-279.63543701 46.18850327]
[-266.90441895 61.72729111]
[-251.92012024 62.41332245]
[-236.93580627 63.09935379]
[-221.95150757 63.78538513]
[-206.96720886 64.47141266]
[-191.98289490 65.15744781]
[-185.08094788 57.61591339]
[-174.95413208 55.06686401]
[-164.88958740 58.58680725]
[-158.29225159 67.24082184]
[-143.33583069 68.38349915]
[-128.37942505 69.52616882]
[-135.99765015 56.60477448]
[-130.79194641 42.53705978]
[-116.59757233 37.68733597]
[-103.87216187 45.62860870]
[-101.99108124 60.51019287]
[-112.34139252 71.36861420]
[-97.51548767 73.64732361]
[-82.68958282 75.92604065]
[-67.86367798 78.20475006]
[-53.03777313 80.48345947]
[-45.02328873 64.72698212]
[-32.09430695 52.63645172]
[-15.79289055 45.67614746]
[1.92904627 44.69713974]
[18.94346809 49.83325195]
[33.20174026 60.48301697]
[42.98131180 75.38008881]
[47.09379196 92.74379730]
[62.03104019 94.11442566]
[76.96828461 95.48505402]
[91.90553284 96.85567474]
[89.14617920 89.90935516]
[91.01046753 81.07021332]
[98.24312592 72.96508026]
[110.24936676 68.39221954]
[125.11834717 69.69158173]
[139.82452393 66.73719025]
[154.53070068 63.78279495]
[163.29995728 50.90887070]
[178.25619507 48.12218857]
[190.47546387 56.56167221]
[205.18164062 53.60728073]
[219.88781738 50.65288544]
[234.59399414 47.69849014]
[249.30017090 44.74409485]
[264.00634766 41.78969955]
[271.23559570 24.07209015]
[287.55142212 14.36396599]
[306.27331543 16.42988586]
[319.86151123 29.25591660]
[334.41717529 25.63202095]
[345.93927002 14.78989124]
[360.15881348 19.22317314]
[374.71447754 15.59927845]
[386.23657227 4.75714922]
[400.45611572 9.19043255]
[415.01177979 5.56653643]
[422.94036865 -8.10507870]
[438.23526001 -12.08521461]
[451.82229614 -4.01252699]
[455.64050293 11.32360172]
[447.42462158 24.82451820]
[432.04898071 28.48036957]
[418.63568115 20.12220192]
[404.08001709 23.74609756]
[393.59902954 34.32902145]
[378.33837891 30.15494347]
[363.78271484 33.77883911]
[353.30172729 44.36176300]
[338.04107666 40.18768692]
[323.48541260 43.81158066]
[321.32980347 54.76384354]
[315.21334839 64.16257477]
[305.98834229 70.62786865]
[294.96667480 73.19351196]
[283.73333740 71.45120239]
[273.91842651 65.61501312]
[266.96072388 56.49587631]
[252.25456238 59.45026779]
[237.54838562 62.40466309]
[222.84220886 65.35905457]
[208.13603210 68.31345367]
[193.42987061 71.26784515]
[185.41798401 83.77166748]
[170.54592896 86.97734070]
[157.48509216 78.48896790]
[142.77891541 81.44335938]
[128.07273865 84.39775848]
[125.07106018 91.27088165]
[138.81721497 97.27446747]
[132.81343079 111.02053833]
[119.06768799 105.01713562]
[116.06600189 111.89026642]
[123.89372253 124.68584442]
[131.72145081 137.48141479]
[139.54917908 150.27699280]
[147.37689209 163.07257080]
[155.20462036 175.86814880]
[163.03234863 188.66371155]
[170.86006165 201.45928955]
[184.28344727 211.81539917]
[178.04801941 227.58105469]
[161.17236328 225.95367432]
[158.06449890 209.28701782]
[150.23677063 196.49143982]
[142.40904236 183.69586182]
[134.58131409 170.90028381]
[126.75360107 158.10472107]
[118.92587280 145.30914307]
[111.09815216 132.51356506]
[103.27042389 119.71798706]
[90.53491211 111.79292297]
[75.59766388 110.42230225]
[60.66041565 109.05167389]
[45.72316742 107.68104553]
[41.30810547 119.32413483]
[34.23363876 129.55793762]
[24.91779709 137.78709412]
[13.90881729 143.53437805]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 106]
[8 105]
[9 104]
[10 103]
[11 102]
[12 96]
[13 95]
[14 94]
[16 90]
[17 89]
[18 88]
[19 87]
[20 86]
[21 85]
[27 82]
[28 81]
[29 80]
[31 78]
[32 77]
[33 76]
[35 75]
[39 70]
[40 69]
[41 68]
[43 67]
[44 66]
[47 65]
[48 64]
[49 63]
[50 62]
[51 61]
[52 60]
[53 59]
[114 201]
[115 200]
[116 199]
[117 198]
[122 174]
[123 173]
[124 172]
[127 169]
[128 168]
[129 167]
[130 166]
[131 165]
[132 164]
[136 157]
[137 156]
[139 154]
[140 153]
[142 151]
[143 150]
[179 197]
[180 196]
[181 195]
[182 194]
[183 193]
[184 192]
[185 191]
[186 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
