%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 05:44:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCCCACUUGGUCCACCAGGGCAGGGCCCUGACCACAGGAAGGAGGACACCCCUGUGGCUCCUGGAGGCUUAACGACCCUGCCCUUCUCUAGAGGGGUCCCCCUACGCUUAGCAGGUUUUUCUACCAAAACACUCCCCGUAUUGUGUUUCCGGACUUAACUGUGCUUUUACGCCAUGCAAAACCAGGUUUCCUGGAAAUUUACCCAAUAAAGUGUGUUCUCCUGGCAUAGCAAACUCAA\
) } def
/len { sequence length } bind def

/coor [
[57.20455551 328.05343628]
[52.86644745 313.69442749]
[52.84820938 298.69058228]
[46.95026398 312.48239136]
[41.05232239 326.27420044]
[35.15437698 340.06604004]
[38.44038773 359.96817017]
[22.44000053 370.84585571]
[16.90359116 384.78674316]
[11.36718178 398.72763062]
[5.83077240 412.66851807]
[0.29436263 426.60937500]
[3.20714760 442.74777222]
[-9.48577309 453.13150024]
[-24.72701073 447.07867432]
[-26.83768654 430.81591797]
[-13.64651871 421.07296753]
[-8.11010933 407.13208008]
[-2.57369947 393.19122314]
[2.96271014 379.25033569]
[8.49911976 365.30944824]
[3.63205147 356.35290527]
[4.50595570 345.97680664]
[11.07320023 337.61532593]
[21.36255836 334.16809082]
[27.26050377 320.37628174]
[33.15844727 306.58444214]
[39.05639267 292.79263306]
[27.13133621 283.69357300]
[15.38646793 293.02404785]
[3.64159966 302.35455322]
[-8.10326862 311.68502808]
[-13.61637688 327.12969971]
[-29.79484558 329.81097412]
[-39.99565125 316.97058105]
[-33.72508240 301.81762695]
[-17.43375969 299.94015503]
[-5.68889189 290.60968018]
[6.05597639 281.27917480]
[17.80084419 271.94869995]
[34.19412231 267.73947144]
[46.66904831 272.87048340]
[51.47134781 258.66000366]
[56.27364731 244.44950867]
[61.07594681 230.23901367]
[65.87825012 216.02853394]
[70.68054962 201.81805420]
[75.48284912 187.60755920]
[80.28514862 173.39707947]
[85.08744812 159.18658447]
[89.88974762 144.97610474]
[71.45876312 114.67034149]
[83.34499359 92.95636749]
[71.36088562 83.93521118]
[59.37677765 74.91406250]
[47.39266968 65.89291382]
[35.40856171 56.87176132]
[23.30787849 48.00759125]
[11.09267712 39.30191040]
[-1.12252390 30.59623337]
[-13.81881332 35.93282318]
[-27.38703156 34.31716156]
[-38.30094147 26.27670670]
[-43.77729797 13.99458122]
[-42.48528671 0.71775812]
[-54.58596802 -8.14640999]
[-70.29105377 -10.05977345]
[-75.98598480 -23.82266045]
[-88.08666229 -32.68682861]
[-82.50604248 -18.76358604]
[-83.44350433 -3.79290819]
[-90.71746063 9.32538509]
[-102.91893768 18.05028343]
[-117.68452454 20.69177628]
[-132.15412903 16.73820496]
[-143.52497864 6.95537663]
[-149.59454346 -6.76177597]
[-149.18716431 -21.75624275]
[-142.38174438 -35.12360001]
[-130.49649048 -44.27458954]
[-115.83356476 -47.43666840]
[-101.23470306 -43.99807739]
[-111.80667877 -54.63919067]
[-122.37866211 -65.28030396]
[-132.95063782 -75.92140961]
[-143.52261353 -86.56252289]
[-154.09460449 -97.20363617]
[-164.66658020 -107.84474945]
[-180.62614441 -111.61622620]
[-185.07992554 -127.39900208]
[-173.44625854 -138.95709229]
[-157.69285583 -134.40054321]
[-154.02546692 -118.41672516]
[-143.45349121 -107.77561188]
[-132.88150024 -97.13450623]
[-122.30952454 -86.49339294]
[-111.73754883 -75.85227966]
[-101.16557312 -65.21116638]
[-90.59358978 -54.57005692]
[-79.22249603 -44.78750992]
[-67.12181091 -35.92334366]
[-52.28225327 -34.64400482]
[-45.72180176 -20.24709320]
[-33.62112045 -11.38292408]
[-18.14743996 -16.89169312]
[-2.28248382 -12.03616714]
[7.65481520 1.45716631]
[7.58315563 18.38103104]
[19.79835701 27.08670998]
[32.01355743 35.79238892]
[36.76976013 35.90437698]
[41.51065063 38.99187469]
[44.42971420 44.88765335]
[56.41381836 53.90880585]
[68.39792633 62.92995453]
[80.38203430 71.95110321]
[92.36614227 80.97225952]
[86.17407227 67.30996704]
[79.98199463 53.64767456]
[68.19455719 44.37101364]
[59.43046951 32.19765472]
[54.37260437 18.07611084]
[53.41505814 3.10670495]
[56.63244247 -11.54417992]
[63.77406693 -24.73498154]
[74.28347015 -35.43789673]
[87.34178162 -42.81898499]
[101.93153381 -46.30312347]
[116.91591644 -45.61883926]
[131.12738037 -40.81944656]
[143.45860291 -32.27890396]
[152.94877625 -20.66267586]
[158.85842896 -6.87586784]
[160.72708130 8.00727940]
[158.40916443 22.82710648]
[152.08526611 36.42888260]
[142.24813843 47.75278854]
[129.66525269 55.91603470]
[122.25399017 68.95724487]
[114.84272766 81.99845886]
[127.59901428 74.10686493]
[140.35530090 66.21527863]
[153.11157227 58.32368469]
[160.77687073 44.48337936]
[175.67102051 44.36743164]
[188.42730713 36.47583771]
[201.18357849 28.58424759]
[213.93986511 20.69265366]
[213.57734680 5.40161705]
[220.86912537 -7.92980385]
[233.76905823 -15.76934338]
[248.76066589 -16.09716415]
[261.81558228 -8.92533684]
[269.48086548 -22.76563835]
[284.37500000 -22.88158798]
[297.13128662 -30.77318001]
[300.51116943 -46.21183014]
[313.86279297 -54.66819763]
[329.26483154 -51.12527084]
[337.57958984 -37.68500519]
[333.87399292 -22.32126999]
[320.34658813 -14.14910030]
[305.02288818 -18.01689720]
[292.26660156 -10.12530518]
[285.51373291 3.15053773]
[269.70715332 3.83094692]
[270.29663086 18.71443176]
[263.31066895 31.98289871]
[250.53683472 40.02626038]
[235.35237122 40.59962082]
[221.83146667 33.44893646]
[209.07518005 41.34053040]
[196.31889343 49.23212433]
[183.56260681 57.12371445]
[176.80973816 70.39955902]
[161.00317383 71.07996368]
[148.24688721 78.97155762]
[135.49060059 86.86315155]
[122.73432159 94.75474548]
[123.90274811 102.16316986]
[138.71963501 99.82655334]
[141.05601501 114.64348602]
[126.23960876 116.98001862]
[127.40804291 124.38844299]
[141.97396851 127.97087860]
[156.53988647 131.55331421]
[171.10581970 135.13574219]
[185.67173767 138.71817017]
[202.49655151 136.62965393]
[209.16104126 152.21878052]
[196.02604675 162.93830872]
[182.08930969 153.28410339]
[167.52337646 149.70167542]
[152.95745850 146.11923218]
[138.39154053 142.53680420]
[123.82560730 138.95437622]
[134.89089966 149.08152771]
[145.95619202 159.20867920]
[157.02148438 169.33584595]
[170.93588257 174.93847656]
[181.81933594 185.26078796]
[188.14999390 198.85943604]
[189.04261780 213.83283997]
[184.37239075 228.08728027]
[174.79237366 239.62951660]
[161.64215088 246.84558105]
[146.76052856 248.72640991]
[132.22845459 245.00904846]
[120.07797241 236.21327209]
[112.00810242 223.56901550]
[109.14727783 208.84434509]
[111.89559937 194.09806824]
[109.29714203 179.32484436]
[106.69869232 164.55162048]
[104.10023499 149.77839661]
[99.29793549 163.98889160]
[94.49563599 178.19937134]
[89.69333649 192.40986633]
[84.89103699 206.62034607]
[80.08873749 220.83084106]
[75.28643036 235.04132080]
[70.48413086 249.25180054]
[65.68183136 263.46228027]
[60.87953186 277.67279053]
[70.89569855 266.50692749]
[83.70330811 258.69888306]
[98.21699524 254.91040039]
[113.20683289 255.46247864]
[127.40252686 260.30834961]
[139.60107422 269.03732300]
[148.76873779 280.90972900]
[154.12861633 294.91943359]
[155.22650146 309.87921143]
[151.96932983 324.52130127]
[144.63316345 337.60488892]
[133.83966064 348.02124023]
[120.50350952 354.88763428]
[105.75487518 357.62216187]
[90.84359741 355.99313354]
[77.03330994 350.13858032]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 28]
[4 27]
[5 26]
[6 25]
[8 21]
[9 20]
[10 19]
[11 18]
[12 17]
[29 40]
[30 39]
[31 38]
[32 37]
[42 224]
[43 223]
[44 222]
[45 221]
[46 220]
[47 219]
[48 218]
[49 217]
[50 216]
[51 215]
[53 117]
[54 116]
[55 115]
[56 114]
[57 113]
[58 110]
[59 109]
[60 108]
[65 104]
[66 103]
[68 101]
[69 100]
[82 99]
[83 98]
[84 97]
[85 96]
[86 95]
[87 94]
[88 93]
[140 179]
[141 178]
[142 177]
[143 176]
[145 174]
[146 173]
[147 172]
[148 171]
[153 166]
[155 164]
[156 163]
[184 196]
[185 195]
[186 194]
[187 193]
[188 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
