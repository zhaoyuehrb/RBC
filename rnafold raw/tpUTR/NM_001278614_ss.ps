%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 04:16:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGACAGCGGAAAGCCCUGUGCUCCAUGGCUGCCAUCUCACCUCCUGCUGGGCAGGGGGCAUGAUGCGGGCCAGUGCUCCAGCCACAGAAAAGAAAGUUCAUGCUUUGUUCAGCCUGCCUUCUUUUCUCCCUUUUAAUCCUGGCUGUCGAGAAACAGCCUGUGUCUUUAAAUGCUGCUUUUUCUCAAAAUGGGACUUGUGACGGUGUACCUGAGGCCCCCAUCUCCUUAAAGAGUGUGGCAAAAUAAUGAUUUUU\
AAAUCUCA\
) } def
/len { sequence length } bind def

/coor [
[110.57194519 143.31831360]
[111.01812744 128.32495117]
[111.46430969 113.33158112]
[103.96762848 113.10848999]
[99.74163818 127.50088501]
[95.51564789 141.89328003]
[91.28966522 156.28567505]
[91.87585449 165.36781311]
[86.92681122 170.82363892]
[82.52985382 185.16471863]
[86.73149109 201.01647949]
[74.91506195 212.38766479]
[59.23628616 207.58058167]
[55.82415009 191.54034424]
[68.18876648 180.76777649]
[72.58572388 166.42668152]
[76.89727020 152.05969238]
[81.12325287 137.66729736]
[85.34924316 123.27490234]
[89.57523346 108.88250732]
[76.04415131 102.40872955]
[67.48931122 114.73004150]
[58.93446732 127.05135345]
[58.10995483 143.42976379]
[43.39223099 150.66305542]
[29.92162895 141.31025696]
[31.55555153 124.99271393]
[46.61315536 118.49651337]
[55.16799545 106.17520142]
[63.72283554 93.85388947]
[68.88108063 79.76870728]
[70.30692291 64.83662415]
[71.73276520 49.90454865]
[73.15860748 34.97246933]
[74.58444977 20.04039001]
[76.01028442 5.10831118]
[77.34725952 -9.83198738]
[78.59531403 -24.77997589]
[79.84336090 -39.72796249]
[66.11809540 -46.71639633]
[55.95287323 -58.12031555]
[42.02735519 -52.54537964]
[28.10183525 -46.97043991]
[14.17631626 -41.39550400]
[0.25079694 -35.82056808]
[-13.67472172 -30.24563026]
[-27.60024071 -24.67069435]
[-41.52576065 -19.09575653]
[-53.98310471 -7.59571838]
[-68.48225403 -16.38269806]
[-64.05243683 -32.74769211]
[-47.10069656 -33.02127457]
[-33.17517853 -38.59621429]
[-19.24965858 -44.17115021]
[-5.32414007 -49.74608612]
[8.60137939 -55.32102203]
[22.52689743 -60.89596176]
[36.45241547 -66.47089386]
[50.37793732 -72.04583740]
[51.00491714 -90.87478638]
[59.95467758 -107.45260620]
[75.35275269 -118.30717468]
[93.97410583 -121.16507721]
[97.85639191 -135.65396118]
[101.73867798 -150.14285278]
[105.62096405 -164.63174438]
[101.71905518 -179.96424866]
[112.48677063 -190.25527954]
[116.36905670 -204.74417114]
[120.25134277 -219.23306274]
[124.13362885 -233.72193909]
[128.01591492 -248.21083069]
[121.26621246 -268.57107544]
[136.56674194 -282.44750977]
[139.92941284 -297.06573486]
[143.29208374 -311.68395996]
[146.65475464 -326.30218506]
[142.20808411 -341.48565674]
[152.60162354 -352.15444946]
[155.96429443 -366.77267456]
[154.83906555 -375.80389404]
[159.45494080 -381.54434204]
[155.18925476 -396.77966309]
[165.70901489 -407.32403564]
[169.24540710 -421.90121460]
[172.78178406 -436.47836304]
[176.31816101 -451.05554199]
[173.74275208 -465.83279419]
[165.48355103 -478.35421753]
[157.22434998 -490.87561035]
[148.96514893 -503.39703369]
[140.70596313 -515.91845703]
[132.44676208 -528.43981934]
[124.18756104 -540.96124268]
[115.92835999 -553.48266602]
[101.87100983 -560.74224854]
[101.32199860 -575.62670898]
[93.06280518 -588.14813232]
[81.21347809 -588.22021484]
[70.96776581 -593.93121338]
[64.80202484 -603.76898193]
[64.14266968 -615.24060059]
[69.03766632 -625.50396729]
[61.07878494 -638.21838379]
[53.11990738 -650.93280029]
[37.66361618 -654.23107910]
[29.13682556 -667.53784180]
[32.59832764 -682.95837402]
[45.99447632 -691.34399414]
[61.37757492 -687.71966553]
[69.62110138 -674.23559570]
[65.83432007 -658.89166260]
[73.79319763 -646.17724609]
[81.75207520 -633.46289062]
[99.82640839 -630.41448975]
[110.08110809 -614.83691406]
[105.58421326 -596.40734863]
[113.84340668 -583.88592529]
[127.31000519 -577.52197266]
[128.44976807 -561.74188232]
[136.70896912 -549.22045898]
[144.96817017 -536.69903564]
[153.22737122 -524.17761230]
[161.48655701 -511.65621948]
[169.74575806 -499.13482666]
[178.00495911 -486.61340332]
[186.26416016 -474.09201050]
[201.24266052 -473.28912354]
[210.79301453 -484.85592651]
[220.34335327 -496.42272949]
[229.89370728 -507.98953247]
[239.37507629 -519.61291504]
[248.78710938 -531.29254150]
[258.19915771 -542.97216797]
[267.61117554 -554.65179443]
[253.61547852 -549.25549316]
[238.63169861 -549.95312500]
[225.19792175 -556.62646484]
[215.58964539 -568.14520264]
[211.43438721 -582.55816650]
[213.43597412 -597.42401123]
[221.25540161 -610.22467041]
[233.56811523 -618.79187012]
[248.28854370 -621.67443848]
[262.92321777 -618.38409424]
[274.99322510 -609.47814941]
[282.45404053 -596.46527100]
[284.04193115 -581.54956055]
[279.48730469 -567.25646973]
[290.58657837 -577.34637451]
[301.68585205 -587.43627930]
[312.78512573 -597.52618408]
[323.88439941 -607.61608887]
[334.98367310 -617.70599365]
[339.99053955 -632.71405029]
[354.61267090 -635.54992676]
[365.71194458 -645.63983154]
[376.81121826 -655.72973633]
[378.19671631 -668.53179932]
[387.62155151 -676.70697021]
[399.69064331 -676.29589844]
[410.90917969 -686.25299072]
[422.12774658 -696.21008301]
[433.34628296 -706.16723633]
[434.03576660 -721.95648193]
[445.74429321 -732.57183838]
[461.52536011 -731.71545410]
[472.01635742 -719.89538574]
[470.99316406 -704.12426758]
[459.06283569 -693.75878906]
[443.30340576 -694.94866943]
[432.08483887 -684.99157715]
[420.86630249 -675.03442383]
[409.64773560 -665.07733154]
[404.99255371 -648.14270020]
[386.90112305 -644.63049316]
[375.80184937 -634.54058838]
[364.70257568 -624.45068359]
[360.48959351 -610.16430664]
[345.07357788 -606.60668945]
[333.97430420 -596.51678467]
[322.87503052 -586.42687988]
[311.77575684 -576.33697510]
[300.67648315 -566.24707031]
[289.57720947 -556.15716553]
[279.29080200 -545.23974609]
[269.87875366 -533.56011963]
[260.46673584 -521.88055420]
[251.05470276 -510.20089722]
[249.31044006 -503.04431152]
[241.46051025 -498.43917847]
[231.91015625 -486.87237549]
[222.35980225 -475.30557251]
[212.80944824 -463.73876953]
[207.63052368 -454.40832520]
[199.63114929 -448.83309937]
[190.89533997 -447.51916504]
[187.35896301 -432.94198608]
[183.82257080 -418.36480713]
[180.28619385 -403.78762817]
[184.80482483 -389.59500122]
[174.03210449 -378.00796509]
[170.58251953 -363.41000366]
[167.21984863 -348.79177856]
[171.90704346 -334.65390015]
[161.27297974 -322.93951416]
[157.91030884 -308.32128906]
[154.54763794 -293.70306396]
[151.18496704 -279.08483887]
[157.02410889 -272.47171021]
[159.21702576 -263.78491211]
[157.15425110 -254.92536926]
[151.17204285 -247.89146423]
[142.50480652 -244.32855225]
[138.62251282 -229.83966064]
[134.74023438 -215.35076904]
[130.85794067 -200.86189270]
[126.97566223 -186.37300110]
[131.15525818 -172.07684326]
[120.10984802 -160.74945068]
[116.22756958 -146.26057434]
[112.34528351 -131.77168274]
[108.46299744 -117.28279114]
[118.36326599 -110.75167084]
[126.00682831 -101.65433502]
[130.75085449 -90.73667145]
[132.19090271 -78.89843750]
[130.19541931 -67.11909485]
[124.91754913 -56.37678146]
[116.78357697 -47.56707764]
[106.45841980 -41.42835617]
[94.79135132 -38.47991180]
[93.54329681 -23.53192329]
[92.29524994 -8.58393478]
[94.86206055 -1.67954302]
[90.94236755 6.53415203]
[89.51652527 21.46623039]
[88.09068298 36.39830780]
[86.66484070 51.33038712]
[85.23900604 66.26246643]
[83.81316376 81.19454956]
[91.27548981 68.18248749]
[103.41228485 59.36783218]
[118.09455109 56.29682922]
[132.74676514 59.50817871]
[144.79866028 68.43856049]
[152.13613892 81.52143097]
[153.47207642 96.46181488]
[148.57257080 110.63819122]
[151.93524170 125.25641632]
[155.29791260 139.87463379]
[158.66058350 154.49285889]
[170.22518921 166.12007141]
[165.67745972 181.87602234]
[149.69569397 185.55235291]
[138.72058105 173.36715698]
[144.04235840 157.85552979]
[140.67968750 143.23730469]
[137.31701660 128.61907959]
[133.95434570 114.00086212]
[126.45767212 113.77777100]
[126.01148987 128.77113342]
[125.56530762 143.76449585]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 20]
[5 19]
[6 18]
[7 17]
[9 16]
[10 15]
[21 30]
[22 29]
[23 28]
[31 241]
[32 240]
[33 239]
[34 238]
[35 237]
[36 236]
[37 234]
[38 233]
[39 232]
[41 59]
[42 58]
[43 57]
[44 56]
[45 55]
[46 54]
[47 53]
[48 52]
[63 223]
[64 222]
[65 221]
[66 220]
[68 218]
[69 217]
[70 216]
[71 215]
[72 214]
[74 209]
[75 208]
[76 207]
[77 206]
[79 204]
[80 203]
[82 202]
[84 200]
[85 199]
[86 198]
[87 197]
[88 127]
[89 126]
[90 125]
[91 124]
[92 123]
[93 122]
[94 121]
[95 120]
[97 118]
[98 117]
[103 114]
[104 113]
[105 112]
[128 194]
[129 193]
[130 192]
[131 191]
[132 189]
[133 188]
[134 187]
[135 186]
[149 185]
[150 184]
[151 183]
[152 182]
[153 181]
[154 180]
[156 178]
[157 177]
[158 176]
[161 174]
[162 173]
[163 172]
[164 171]
[249 260]
[250 259]
[251 258]
[252 257]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
