%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 09:39:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUAAAACGUCACAAAGGUGCUGCUUUUACAGGGAAGCUUAUUCUGUUUUAAACAUUGAAAAGUUGUGGUCUGAUCAGUUAAUUUGUAUGUAGCAGUGUAUGCUCUCAUAUACAAUUACUGACCUAUGCUCUAAAACAUGAAUGCUUUGUUACAGACCCAAGCUGUCCAUUUCUGUGAUGGGUUUUGAAUAAAGUAUUCCCUGUCUUAAAUGAA\
) } def
/len { sequence length } bind def

/coor [
[50.81635666 276.12759399]
[40.59786987 265.14657593]
[34.97020340 251.24229431]
[34.67406464 236.24623108]
[27.55506134 249.44924927]
[20.43605423 262.65228271]
[13.31704998 275.85528564]
[6.19804382 289.05831909]
[-0.82475913 302.31274414]
[-7.75098848 315.61791992]
[-7.26012945 331.43151855]
[-19.99999809 339.14804077]
[-26.92622757 352.45321655]
[-33.85245895 365.75836182]
[-32.59695435 382.10937500]
[-46.28059006 391.14764404]
[-60.82681274 383.57537842]
[-61.27171326 367.18225098]
[-47.15761948 358.83215332]
[-40.23139191 345.52697754]
[-33.30516052 332.22180176]
[-34.29143143 317.35989380]
[-21.05615044 308.69168091]
[-14.12992191 295.38653564]
[-13.82972145 288.00479126]
[-7.00497675 281.93930054]
[0.11402865 268.73629761]
[7.23303413 255.53326416]
[14.35203934 242.33024597]
[21.47104454 229.12722778]
[27.11036682 215.22764587]
[31.20296669 200.79675293]
[35.29556656 186.36585999]
[39.38816452 171.93498230]
[43.48076630 157.50408936]
[47.57336426 143.07319641]
[38.09968948 131.44351196]
[23.13933754 132.53338623]
[8.17898369 133.62324524]
[-6.78137064 134.71311951]
[-21.74172401 135.80299377]
[-30.06963348 139.54643250]
[-36.92730713 136.79830933]
[-51.90192795 137.67047119]
[-66.87654877 138.54264832]
[-81.83690643 139.63252258]
[-96.77982330 140.93984985]
[-111.72274780 142.24719238]
[-126.66566467 143.55453491]
[-141.91755676 150.95832825]
[-153.25415039 138.35206604]
[-144.27883911 123.96875000]
[-127.97299957 128.61160278]
[-113.03008270 127.30427551]
[-98.08715820 125.99693298]
[-83.14424133 124.68959808]
[-79.44467163 121.67470551]
[-73.81287384 120.94937897]
[-67.74872589 123.56803131]
[-52.77410126 122.69585419]
[-37.79947662 121.82368469]
[-22.83159447 120.84263611]
[-7.87124014 119.75276947]
[7.08911371 118.66289520]
[22.04946709 117.57302856]
[37.00982285 116.48316193]
[41.40054321 110.40273285]
[27.74908447 104.18680573]
[12.80301666 102.91596222]
[3.82793784 90.89730835]
[6.85382414 76.20568085]
[19.84771156 68.71175385]
[34.07955551 73.45038605]
[39.98756790 87.23852539]
[50.18198395 98.24188232]
[54.57270432 92.16146088]
[50.90155411 77.61763763]
[47.23040390 63.07382202]
[43.55925369 48.53000259]
[39.88810349 33.98618317]
[28.69318390 29.99824715]
[20.89190292 21.19280434]
[18.33462715 9.83275127]
[21.54349327 -1.23599112]
[29.61072350 -9.29736805]
[26.36413002 -23.94180870]
[23.11753464 -38.58624649]
[19.87094116 -53.23069000]
[16.62434578 -67.87512970]
[13.37775230 -82.51956940]
[10.13115788 -97.16400909]
[6.88456392 -111.80844879]
[3.31927538 -126.37857819]
[-0.56301022 -140.86746216]
[-4.44529581 -155.35635376]
[-8.32758141 -169.84524536]
[-21.44642258 -179.07971191]
[-22.26221466 -195.10202026]
[-10.14914989 -205.62120056]
[5.60066366 -202.56785583]
[12.90531731 -188.28424072]
[6.16130590 -173.72752380]
[10.04359150 -159.23864746]
[13.92587757 -144.74975586]
[17.80816269 -130.26086426]
[20.65865898 -128.19155884]
[22.65009117 -124.64051056]
[23.09770775 -120.02575684]
[21.52900314 -115.05504608]
[24.77559853 -100.41060638]
[28.02219200 -85.76615906]
[31.26878738 -71.12171936]
[34.51538086 -56.47728348]
[37.76197433 -41.83284378]
[41.00856781 -27.18840218]
[44.25516510 -12.54396248]
[60.25960159 -3.65166378]
[64.75514984 14.42616653]
[54.43192291 30.31503296]
[58.10307312 44.85885239]
[61.77422333 59.40267181]
[65.44537354 73.94648743]
[69.11652374 88.49031067]
[81.11186981 75.46147156]
[97.16617584 71.16516113]
[111.98040009 75.82427979]
[122.11425018 64.76512146]
[132.24810791 53.70596313]
[142.38195801 42.64680099]
[139.15650940 27.46865845]
[145.49929810 13.30713558]
[158.97138977 5.60762978]
[174.39248657 7.33075809]
[185.83287048 17.81394196]
[188.89347839 33.02618408]
[182.39744568 47.11806488]
[168.84262085 54.67097092]
[153.44111633 52.78065491]
[143.30726624 63.83981705]
[133.17341614 74.89897919]
[123.03955841 85.95813751]
[119.46833038 122.78555298]
[78.66578674 125.12197113]
[93.20960999 128.79312134]
[107.75342560 132.46427917]
[122.29724121 136.13542175]
[136.84106445 139.80657959]
[151.38488770 143.47772217]
[165.92869568 147.14888000]
[180.47251892 150.82002258]
[195.01634216 154.49118042]
[209.56015015 158.16232300]
[223.02107239 150.32385254]
[237.71827698 154.25410461]
[245.10809326 167.13533020]
[259.65191650 170.80648804]
[274.19573975 174.47763062]
[288.73956299 178.14878845]
[303.28338623 181.81993103]
[317.82717896 185.49108887]
[332.37100220 189.16223145]
[349.96731567 183.72938538]
[362.06686401 196.44248962]
[376.66253662 199.90173340]
[386.66082764 188.31324768]
[400.90356445 182.70938110]
[416.11785889 184.37785339]
[428.80758667 192.93525696]
[436.05673218 206.41517639]
[436.19952393 221.72001648]
[429.20312500 235.33283997]
[416.67526245 244.12551880]
[401.49475098 246.07756042]
[387.14996338 240.74040222]
[376.93719482 229.34046936]
[373.20330811 214.49740601]
[358.60763550 211.03816223]
[348.15328979 217.11894226]
[335.96691895 214.35917664]
[328.69985962 203.70605469]
[314.15603638 200.03491211]
[299.61221313 196.36375427]
[285.06838989 192.69261169]
[270.52459717 189.02145386]
[255.98075867 185.35031128]
[241.43695068 181.67915344]
[228.81896973 189.51000977]
[214.01718140 185.99412537]
[205.88900757 172.70614624]
[191.34518433 169.03498840]
[176.80136108 165.36384583]
[162.25755310 161.69268799]
[147.71372986 158.02154541]
[133.16990662 154.35038757]
[118.62609100 150.67924500]
[104.08227539 147.00808716]
[89.53845978 143.33694458]
[74.99463654 139.66578674]
[62.00425720 147.16578674]
[57.91165924 161.59667969]
[53.81905746 176.02757263]
[49.72645569 190.45846558]
[45.63385773 204.88935852]
[41.54125595 219.32025146]
[52.20300674 208.76908875]
[65.92776489 202.71672058]
[80.90866089 201.95994568]
[95.17346954 206.59840393]
[106.84423065 216.02142334]
[114.38449097 228.98846436]
[116.80158234 243.79244995]
[113.77728271 258.48440552]
[105.70975494 271.13015747]
[93.66107941 280.06488037]
[79.21746063 284.11233521]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 30]
[5 29]
[6 28]
[7 27]
[8 26]
[9 24]
[10 23]
[12 21]
[13 20]
[14 19]
[31 204]
[32 203]
[33 202]
[34 201]
[35 200]
[36 199]
[37 66]
[38 65]
[39 64]
[40 63]
[41 62]
[43 61]
[44 60]
[45 59]
[46 56]
[47 55]
[48 54]
[49 53]
[76 123]
[77 122]
[78 121]
[79 120]
[80 119]
[85 116]
[86 115]
[87 114]
[88 113]
[89 112]
[90 111]
[91 110]
[92 109]
[93 105]
[94 104]
[95 103]
[96 102]
[126 141]
[127 140]
[128 139]
[129 138]
[143 198]
[144 197]
[145 196]
[146 195]
[147 194]
[148 193]
[149 192]
[150 191]
[151 190]
[152 189]
[155 186]
[156 185]
[157 184]
[158 183]
[159 182]
[160 181]
[161 180]
[163 177]
[164 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
