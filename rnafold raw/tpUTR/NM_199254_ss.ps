%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 08:54:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCCAAUGAUGUUGUAGCUGGAUCCGACUAAGUAUAGCUCCCCCUUCCCCUUCUGGGAAAGAAUUAUGUUCUUUCCAACCCCUGCCACAUGUUCAUGUGUCCUAAGUCUUCCUUGAUGAUGCAUCUAUAUUUAUAUAUGUUUAUAUAUGUUCUUCAUAAAUCUAUUAAAUAUAUAUAGAUAA\
) } def
/len { sequence length } bind def

/coor [
[348.01861572 354.38415527]
[340.90325928 353.25564575]
[334.26950073 350.38983154]
[328.53579712 345.95556641]
[324.06671143 340.22100830]
[321.14984131 333.53744507]
[319.97723389 326.31768799]
[320.63287354 319.01065063]
[323.08670044 312.07348633]
[311.95095825 302.02383423]
[300.81521606 291.97418213]
[289.67947388 281.92456055]
[278.54373169 271.87490845]
[264.73858643 279.42224121]
[249.15776062 281.79440308]
[233.67944336 278.68682861]
[220.17584229 270.45669556]
[210.28665161 258.08190918]
[205.22007751 243.04492188]
[205.60513306 227.15515137]
[211.41368103 212.33128357]
[200.10798645 202.47322083]
[188.80229187 192.61517334]
[178.68247986 194.22723389]
[169.15127563 189.90054321]
[163.46908569 180.84912109]
[163.72489929 169.94509888]
[152.76235962 159.70680237]
[141.79981995 149.46849060]
[130.83728027 139.23019409]
[116.25461578 136.19786072]
[111.45007324 121.12380981]
[100.48753357 110.88551331]
[108.04570007 123.84214020]
[112.21591187 138.25079346]
[112.74636078 153.24140930]
[109.60500336 167.90878296]
[102.98154449 181.36723328]
[93.27592468 192.80406189]
[81.07422638 201.52865601]
[67.11325073 207.01419067]
[52.23602295 208.92941284]
[37.34090424 207.15869141]
[23.32733917 201.80892944]
[11.04152966 193.20318604]
[1.22535646 181.86109924]
[-5.52843285 168.46757507]
[-8.81201172 153.83139038]
[-8.42710018 138.83633423]
[-4.39694309 124.38787842]
[3.03509998 111.35849762]
[13.42024612 100.53496552]
[26.13138962 92.57086945]
[40.40096664 87.94711304]
[55.36731720 86.94290161]
[70.12669373 89.61888123]
[83.78392029 95.81105042]
[72.47822571 85.95299530]
[61.17253494 76.09494019]
[49.86683655 66.23688507]
[38.56114197 56.37882996]
[27.25544739 46.52077484]
[15.94975185 36.66271973]
[4.64405632 26.80466461]
[-6.66163921 16.94660950]
[-22.57347679 11.09427929]
[-21.35469055 -5.81580353]
[-4.76806784 -9.32582569]
[3.19641590 5.64091492]
[14.50211143 15.49897003]
[25.80780602 25.35702515]
[37.11350250 35.21508026]
[48.41919708 45.07313538]
[59.72489166 54.93119049]
[71.03058624 64.78924561]
[82.33628082 74.64730072]
[93.64197540 84.50535583]
[100.54631805 81.57617950]
[94.68797302 67.76750183]
[88.82962799 53.95881271]
[78.99090576 42.63628769]
[86.71895599 29.78026962]
[101.33385468 33.15737915]
[102.63831329 48.10046768]
[108.49665833 61.90914917]
[114.35500336 75.71783447]
[121.25934601 72.78865814]
[122.02733612 57.80833435]
[122.79532623 42.82800674]
[123.56331635 27.84768105]
[124.33129883 12.86735439]
[116.39184570 -1.48176241]
[125.07949829 -15.39063835]
[141.45713806 -14.55101490]
[148.67684937 0.17337570]
[139.31163025 13.63534260]
[138.54364014 28.61566925]
[137.77565002 43.59599686]
[137.00765991 58.57632446]
[136.23966980 73.55664825]
[130.53691101 86.26625824]
[121.59610748 95.28597260]
[110.72583008 99.92297363]
[121.68836975 110.16127014]
[137.05514526 113.92592621]
[141.07557678 128.26765442]
[152.03811646 138.50595093]
[163.00065613 148.74426270]
[173.96319580 158.98255920]
[193.77584839 162.61471558]
[198.66035461 181.30947876]
[209.96604919 191.16752625]
[221.27174377 201.02558899]
[233.66218567 193.80580139]
[247.65641785 190.77354431]
[261.88128662 192.21278381]
[274.94525146 197.96936035]
[285.57443237 207.46745300]
[292.73681641 219.76712036]
[295.74252319 233.65727234]
[294.31024170 247.77497864]
[288.59338379 260.73916626]
[299.72912598 270.78881836]
[310.86486816 280.83843994]
[322.00061035 290.88809204]
[333.13635254 300.93774414]
[356.44537354 297.33505249]
[374.66940308 311.89492798]
[376.26562500 334.90597534]
[388.66607666 343.34567261]
[401.06652832 351.78540039]
[413.46697998 360.22512817]
[425.86743164 368.66485596]
[438.26788330 377.10455322]
[450.66830444 385.54428101]
[463.06875610 393.98400879]
[475.46920776 402.42373657]
[487.86965942 410.86346436]
[500.27011108 419.30316162]
[512.67053223 427.74288940]
[525.07098389 436.18261719]
[537.47143555 444.62234497]
[549.87188721 453.06207275]
[562.27233887 461.50177002]
[574.74438477 469.83532715]
[587.28710938 478.06210327]
[600.10339355 485.85586548]
[613.17834473 493.20751953]
[626.25323486 500.55917358]
[639.32812500 507.91082764]
[655.10205078 504.98443604]
[667.13000488 515.60083008]
[666.18518066 531.61602783]
[652.99237061 540.74456787]
[637.67199707 535.98376465]
[631.97650146 520.98571777]
[618.90155029 513.63409424]
[605.82666016 506.28244019]
[592.75177002 498.93078613]
[590.00018311 499.57461548]
[586.82495117 499.15408325]
[583.63519287 497.50119019]
[580.89337158 494.60083008]
[579.06036377 490.60485840]
[566.51763916 482.37808228]
[559.18261719 481.33612061]
[553.83264160 473.90222168]
[541.43218994 465.46252441]
[529.03173828 457.02279663]
[516.63128662 448.58306885]
[504.23083496 440.14334106]
[491.83038330 431.70361328]
[479.42993164 423.26391602]
[467.02947998 414.82418823]
[454.62902832 406.38446045]
[442.22860718 397.94473267]
[429.82815552 389.50500488]
[417.42770386 381.06530762]
[405.02725220 372.62557983]
[392.62680054 364.18585205]
[380.22634888 355.74612427]
[367.82589722 347.30639648]
[361.91122437 351.30279541]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 126]
[10 125]
[11 124]
[12 123]
[13 122]
[21 113]
[22 112]
[23 111]
[27 109]
[28 108]
[29 107]
[30 106]
[32 104]
[33 103]
[57 77]
[58 76]
[59 75]
[60 74]
[61 73]
[62 72]
[63 71]
[64 70]
[65 69]
[87 100]
[88 99]
[89 98]
[90 97]
[91 96]
[129 182]
[130 181]
[131 180]
[132 179]
[133 178]
[134 177]
[135 176]
[136 175]
[137 174]
[138 173]
[139 172]
[140 171]
[141 170]
[142 169]
[143 168]
[144 167]
[145 165]
[146 164]
[147 159]
[148 158]
[149 157]
[150 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
