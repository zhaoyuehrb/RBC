%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 11:58:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGACAGUCUUCCCUUCUCUCCAAGAGGCCUCAGUCCCCAAGACUGCCACCAGUCUACACAUACAGCAGCCCCCUGGACAGAAUCAGCAUUUCAGCUCAGCUGGCCUGGGAUGGGCCAGGCUGGUCCUGGCUGCCUGUUCCCUGUGCUCUUCAGAAUUACUGUUUUUGUUUCCUUUUACCCCAGCUGCCAUUAAAGCCCAAACCUCUAGCCCA\
) } def
/len { sequence length } bind def

/coor [
[130.70526123 346.14868164]
[124.76722717 359.97387695]
[116.31983948 372.42532349]
[105.66847229 383.05285645]
[93.19815826 391.47235107]
[79.35969543 397.37942505]
[64.65333557 400.56054688]
[49.61070251 400.90069580]
[34.77557755 398.38760376]
[20.68424606 393.11209106]
[7.84609556 385.26492310]
[-3.27478075 375.12969971]
[-12.27637100 363.07284546]
[-18.83327293 349.53018188]
[-22.70845795 334.99130249]
[-23.76184082 319.98171997]
[-21.95534325 305.04409790]
[-17.35426903 290.71835327]
[-10.12494278 277.52239990]
[-0.52870160 265.93322754]
[11.08755684 256.36981201]
[24.30391312 249.17784119]
[38.64260483 244.61730957]
[53.58529282 242.85307312]
[68.59181213 243.94891357]
[72.49173737 229.46476746]
[76.39166260 214.98060608]
[80.29158783 200.49645996]
[84.19151306 186.01231384]
[79.26877594 180.35398865]
[68.90219879 191.19529724]
[58.53561783 202.03662109]
[48.16904068 212.87792969]
[40.48448563 225.75999451]
[25.54391289 227.09390259]
[15.69883633 215.77690125]
[19.08827019 201.16487122]
[32.90896988 195.33760071]
[45.08041000 186.57084656]
[57.25185394 177.80409241]
[69.42329407 169.03733826]
[64.50055695 163.37901306]
[49.61610413 165.23727417]
[34.73165131 167.09552002]
[19.84720039 168.95376587]
[4.96274853 170.81202698]
[-9.92170334 172.67027283]
[-22.66495895 182.99217224]
[-37.87658691 176.86531067]
[-39.90816879 160.59248352]
[-26.66978836 150.91378784]
[-11.77995396 157.78582764]
[3.10449743 155.92756653]
[17.98894882 154.06932068]
[32.87340164 152.21107483]
[47.75785446 150.35281372]
[62.64230347 148.49456787]
[49.68329239 91.35132599]
[87.29331970 61.13042068]
[85.32637024 46.25994110]
[83.35942841 31.38946342]
[81.39247894 16.51898575]
[67.32997894 0.34672788]
[76.03224945 -18.36959839]
[73.41553497 -33.13959503]
[70.79882050 -47.90959167]
[68.18210602 -62.67958832]
[65.45755768 -77.43007660]
[62.62530899 -92.16026306]
[59.79306030 -106.89044952]
[56.96081543 -121.62062836]
[54.12856674 -136.35081482]
[45.69259644 -140.55081177]
[40.21472549 -148.04917908]
[38.82049179 -157.09091187]
[41.69742966 -165.63038635]
[48.08095169 -171.79400635]
[45.89693451 -186.63415527]
[43.71291733 -201.47431946]
[41.52890015 -216.31446838]
[32.51831436 -204.32240295]
[17.79234505 -201.46832275]
[4.95404291 -209.22576904]
[0.63185078 -223.58956909]
[7.05732679 -237.14364624]
[20.91298294 -242.89001465]
[35.04666901 -237.86047363]
[28.67981911 -251.44219971]
[22.31296921 -265.02392578]
[7.36748219 -270.16278076]
[0.50832713 -284.40103149]
[5.80491972 -299.29135132]
[20.11488533 -305.99960327]
[34.94837570 -300.54586792]
[41.50494385 -286.16577148]
[35.89469147 -271.39077759]
[42.26154327 -257.80905151]
[48.62839508 -244.22732544]
[63.43504715 -246.62794495]
[65.18450165 -261.52557373]
[66.93395996 -276.42321777]
[68.68341827 -291.32083130]
[70.32398224 -306.23086548]
[71.85557556 -321.15246582]
[73.38716888 -336.07406616]
[74.91876221 -350.99566650]
[76.45035553 -365.91726685]
[77.98194885 -380.83886719]
[69.01137543 -394.13955688]
[73.95449066 -409.40209961]
[89.01936340 -414.91836548]
[102.64950562 -406.45675659]
[104.38903809 -390.50830078]
[92.90354919 -379.30728149]
[91.37195587 -364.38568115]
[89.84036255 -349.46408081]
[88.30876923 -334.54248047]
[86.77718353 -319.62088013]
[85.24559021 -304.69924927]
[87.68887329 -297.72656250]
[83.58104706 -289.57138062]
[81.83158875 -274.67376709]
[80.08213806 -259.77612305]
[78.33267975 -244.87849426]
[56.36904907 -218.49847412]
[58.55307007 -203.65832520]
[60.73708725 -188.81817627]
[62.92110443 -173.97802734]
[77.09114075 -158.97001648]
[68.85875702 -139.18305969]
[71.69100189 -124.45288086]
[74.52324677 -109.72269440]
[77.35549164 -94.99250793]
[80.18773651 -80.26232147]
[84.53625488 -74.28916931]
[82.95210266 -65.29630280]
[85.56881714 -50.52630615]
[88.18553162 -35.75630951]
[90.80224609 -20.98631096]
[98.80620575 -17.15534401]
[104.23387146 -9.96230793]
[105.76786041 -0.94322735]
[102.93976593 7.90178251]
[96.26295471 14.55203819]
[98.22990417 29.42251587]
[100.19685364 44.29299545]
[102.16379547 59.16347122]
[117.13630676 59.16948700]
[132.20495605 64.85677338]
[145.17698669 76.21743011]
[153.90780640 92.39562225]
[156.62588501 111.73189545]
[152.22842407 131.92979431]
[167.22802734 131.82020569]
[182.22763062 131.71061707]
[197.22721863 131.60102844]
[212.22682190 131.49143982]
[222.05056763 119.32475281]
[237.40643311 116.36986542]
[251.04385376 124.02198029]
[256.52365112 138.66799927]
[251.25843811 153.39251709]
[237.73428345 161.24307251]
[222.33688354 158.51287842]
[212.33641052 146.49102783]
[197.33682251 146.60063171]
[182.33721924 146.71022034]
[167.33761597 146.81980896]
[152.33801270 146.92939758]
[149.15458679 153.72026062]
[162.73631287 160.08711243]
[176.31803894 166.45394897]
[189.89976501 172.82080078]
[203.48149109 179.18765259]
[217.06320190 185.55450439]
[231.94763184 187.41294861]
[234.77951050 202.14320374]
[221.64521790 209.38821411]
[210.69636536 199.13623047]
[197.11463928 192.76937866]
[183.53291321 186.40252686]
[169.95118713 180.03567505]
[156.36946106 173.66882324]
[142.78773499 167.30197144]
[139.60430908 174.09283447]
[149.11491394 185.69233704]
[158.62551880 197.29183960]
[174.10765076 196.25100708]
[187.22679138 204.53761292]
[192.93836975 218.96527100]
[189.04615784 233.98626709]
[177.04681396 243.82472229]
[161.55430603 244.69754028]
[148.52583313 236.26910400]
[142.97109985 221.78033447]
[147.02601624 206.80244446]
[137.51541138 195.20294189]
[128.00482178 183.60343933]
[120.67252350 185.18064880]
[128.20397949 198.15281677]
[118.19391632 209.32414246]
[104.47614288 203.25596619]
[106.00794983 188.33503723]
[98.67566681 189.91224670]
[94.77574158 204.39639282]
[90.87581635 218.88053894]
[86.97589111 233.36468506]
[83.07595825 247.84883118]
[96.60390472 254.43603516]
[108.64058685 263.46459961]
[118.75087738 274.60812378]
[126.56930542 287.46383667]
[131.81324768 301.56692505]
[134.29312134 316.40765381]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 208]
[26 207]
[27 206]
[28 205]
[29 204]
[42 57]
[43 56]
[44 55]
[45 54]
[46 53]
[47 52]
[59 147]
[60 146]
[61 145]
[62 144]
[64 139]
[65 138]
[66 137]
[67 136]
[68 134]
[69 133]
[70 132]
[71 131]
[72 130]
[77 128]
[78 127]
[79 126]
[80 125]
[87 98]
[88 97]
[89 96]
[99 124]
[100 123]
[101 122]
[102 121]
[103 119]
[104 118]
[105 117]
[106 116]
[107 115]
[108 114]
[153 169]
[154 168]
[155 167]
[156 166]
[157 165]
[185 198]
[186 197]
[187 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
