%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 01:07:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCAAAGAUGGGGACAAGGACUAAGAGUCAGAAUGUUGACACUUUGAUGAAAUGGAGUAGAGAAAUGCAUUCUGUAAGUGGUCAAAGGACAUUUGACUGUUUACUUUCUCCACACUAAGUCUUCUCCAUGUUUUGUGGCCUUCGGUUGUAAUAAACUUGGCUUCUUUAUACAUCUGUAA\
) } def
/len { sequence length } bind def

/coor [
[243.42448425 302.98074341]
[258.38320923 304.09286499]
[272.44845581 309.31286621]
[262.65240479 297.95339966]
[252.85635376 286.59393311]
[243.06030273 275.23446655]
[233.26425171 263.87500000]
[223.46820068 252.51554871]
[213.57392883 241.24153137]
[203.58219910 230.05380249]
[193.59046936 218.86607361]
[183.59873962 207.67832947]
[173.60700989 196.49060059]
[163.61528015 185.30287170]
[153.62355042 174.11514282]
[150.11584473 173.55979919]
[146.70756531 171.26148987]
[144.22242737 167.28788757]
[143.42156982 162.07527161]
[134.02566528 150.38265991]
[124.62976837 138.69006348]
[115.23386383 126.99745178]
[105.83796692 115.30484009]
[91.34347534 111.44351959]
[77.37584686 116.91209412]
[63.40821457 122.38066101]
[53.37863159 134.61659241]
[38.70651245 132.05181885]
[24.73888016 137.52038574]
[10.77124977 142.98895264]
[-3.19638157 148.45753479]
[-17.16401291 153.92610168]
[-26.97097588 167.06974792]
[-43.22327423 164.88005066]
[-49.20193481 149.60955811]
[-38.75662613 136.96726990]
[-22.63258553 139.95848083]
[-8.66495419 134.48989868]
[5.30267668 129.02133179]
[19.27030754 123.55275726]
[33.23793793 118.08418274]
[42.26846313 106.23939514]
[57.93964005 108.41303253]
[71.90727234 102.94445801]
[85.87490082 97.47588348]
[71.52359772 101.83937836]
[57.20021057 97.38510895]
[47.85450745 85.65233612]
[46.71610641 70.69560242]
[54.17840576 57.68352509]
[67.66264343 51.11273193]
[82.50903320 53.25389862]
[93.58708191 63.36710739]
[97.06848907 77.95785522]
[94.73483276 63.14049530]
[92.40116882 48.32313919]
[82.61109161 35.89475250]
[88.27410126 22.11870193]
[85.94044495 7.30134583]
[76.15036011 -5.12704372]
[81.81337738 -18.90309334]
[79.47972107 -33.72044754]
[77.14606476 -48.53780365]
[74.81240082 -63.35515976]
[72.47874451 -78.17251587]
[70.14508820 -92.98987579]
[61.95834732 -80.42096710]
[47.99577713 -74.93949127]
[33.44473267 -78.58190155]
[23.71120453 -89.99497986]
[22.41137886 -104.93855286]
[30.02816582 -117.86080933]
[43.73178482 -123.96086884]
[58.43108749 -120.97246552]
[68.66456604 -110.00673676]
[68.40422821 -125.00447845]
[68.14389038 -140.00222778]
[67.88355255 -154.99996948]
[67.62320709 -169.99769592]
[67.36286926 -184.99543762]
[67.10253143 -199.99317932]
[66.84218597 -214.99092102]
[66.58184814 -229.98866272]
[66.32151031 -244.98640442]
[66.06117249 -259.98416138]
[65.80082703 -274.98187256]
[65.54048920 -289.97961426]
[55.04652786 -302.11456299]
[58.13262939 -317.85797119]
[72.43141174 -325.13290405]
[86.97406006 -318.35861206]
[90.60470581 -302.73178101]
[80.53823090 -290.23995972]
[80.79856873 -275.24221802]
[81.05891418 -260.24447632]
[81.31925201 -245.24674988]
[81.57958984 -230.24900818]
[81.83992767 -215.25126648]
[82.10027313 -200.25352478]
[82.36061096 -185.25578308]
[82.62094879 -170.25804138]
[82.88128662 -155.26029968]
[83.14163208 -140.26255798]
[83.40196991 -125.26482391]
[83.66230774 -110.26708221]
[84.96244049 -95.32353210]
[87.29609680 -80.50617218]
[89.62976074 -65.68881989]
[91.96341705 -50.87146378]
[94.29707336 -36.05410767]
[96.63073730 -21.23675156]
[106.25389862 -9.86819839]
[100.75780487 4.96768713]
[103.09146118 19.78504372]
[112.71462250 31.15359688]
[107.21852875 45.98948288]
[109.55218506 60.80683899]
[111.88584137 75.62419128]
[117.53057098 105.90894318]
[126.92646790 117.60154724]
[136.32237244 129.29415894]
[145.71827698 140.98675537]
[155.11416626 152.67936707]
[164.81127930 164.12341309]
[174.80300903 175.31114197]
[184.79473877 186.49887085]
[194.78646851 197.68659973]
[204.77819824 208.87432861]
[214.76992798 220.06205750]
[224.76165771 231.24980164]
[232.83508301 235.58140564]
[234.82766724 242.71949768]
[244.62371826 254.07894897]
[254.41976929 265.43841553]
[264.21582031 276.79788208]
[274.01187134 288.15734863]
[283.80792236 299.51681519]
[295.41854858 309.01382446]
[308.49484253 316.36300659]
[321.57113647 323.71218872]
[334.64743042 331.06137085]
[344.96627808 327.51599121]
[355.31625366 330.19476318]
[362.32482910 337.97445679]
[363.84695435 348.11203003]
[376.66030884 355.91061401]
[389.47363281 363.70922852]
[402.28698730 371.50781250]
[417.58215332 367.52865601]
[431.16867065 375.60220337]
[434.98590088 390.93856812]
[426.76913452 404.43896484]
[411.39328003 408.09384155]
[397.98049927 399.73480225]
[394.48840332 384.32116699]
[381.67504883 376.52255249]
[368.86169434 368.72396851]
[356.04833984 360.92538452]
[336.75347900 361.92108154]
[327.29824829 344.13766479]
[314.22195435 336.78848267]
[301.14566040 329.43930054]
[288.06936646 322.09011841]
[295.97351074 334.83862305]
[300.03027344 349.27963257]
[299.92117310 364.27923584]
[295.65475464 378.65969849]
[287.56597900 391.29187012]
[276.29000854 401.18389893]
[262.71218872 407.55908203]
[247.89865112 409.91683960]
[233.01252747 408.07208252]
[219.22264099 402.16958618]
[207.61178589 392.67285156]
[199.09159851 380.32754517]
[194.33108521 366.10302734]
[193.70404053 351.11611938]
[197.25968933 336.54364014]
[204.71885681 323.52978516]
[215.49584961 313.09634399]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 137]
[4 136]
[5 135]
[6 134]
[7 133]
[8 132]
[9 130]
[10 129]
[11 128]
[12 127]
[13 126]
[14 125]
[15 124]
[19 123]
[20 122]
[21 121]
[22 120]
[23 119]
[24 45]
[25 44]
[26 43]
[28 41]
[29 40]
[30 39]
[31 38]
[32 37]
[54 118]
[55 117]
[56 116]
[58 114]
[59 113]
[61 111]
[62 110]
[63 109]
[64 108]
[65 107]
[66 106]
[75 105]
[76 104]
[77 103]
[78 102]
[79 101]
[80 100]
[81 99]
[82 98]
[83 97]
[84 96]
[85 95]
[86 94]
[87 93]
[138 163]
[139 162]
[140 161]
[141 160]
[145 158]
[146 157]
[147 156]
[148 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
