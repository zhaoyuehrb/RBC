%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 02:10:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAUGUGAUGUGUAUGUAUAGCCCUUACAUAGUGGAUUGUAAUUUGUGAUAUUUUGUGGUUUUGGAGCAAAGAACAAUGUCAUUUGAGUUAUCUAAAUCUACAUUUGCAACAUUUGUAGCAGUUAAUGUGUGUCCUUGAAGAGUUAUUAAAUUUUCUGACUUGCAGACCCUGAA\
) } def
/len { sequence length } bind def

/coor [
[84.79490662 126.10510254]
[76.55705261 118.47626495]
[68.18157196 130.92018127]
[59.80608368 143.36410522]
[51.43059540 155.80802917]
[43.05510712 168.25195312]
[34.67962265 180.69587708]
[26.30413437 193.13980103]
[25.01741409 208.90859985]
[11.49211597 215.14683533]
[9.28489971 224.04588318]
[2.85291815 227.73710632]
[-5.74459982 240.02867126]
[-1.51529253 255.08348083]
[-7.99957037 269.31329346]
[-22.13575554 275.99929810]
[-37.24917603 271.98449707]
[-46.20373154 259.16458130]
[-44.77136230 243.59274292]
[-33.62838364 232.62150574]
[-18.03616905 231.43115234]
[-9.43865108 219.13958740]
[-0.95180678 206.77134705]
[-0.26415795 191.89262390]
[13.86021042 184.76431274]
[22.23569870 172.32038879]
[30.61118507 159.87646484]
[38.98667145 147.43254089]
[47.36215973 134.98861694]
[55.73764420 122.54470062]
[64.11313629 110.10077667]
[63.03694153 95.13942719]
[52.96667480 84.02233887]
[42.89640808 72.90524292]
[32.82614136 61.78815460]
[22.75587463 50.67106247]
[12.68560886 39.55397034]
[2.61534262 28.43687820]
[-7.75059700 17.59495544]
[-18.40469360 7.03606272]
[-29.05879211 -3.52283001]
[-39.71288681 -14.08172226]
[-50.36698532 -24.64061546]
[-61.02108383 -35.19950867]
[-71.67517853 -45.75839996]
[-82.51710510 -56.12434006]
[-93.54335785 -66.29398346]
[-104.56961060 -76.46363068]
[-115.59586334 -86.63327789]
[-126.62212372 -96.80292511]
[-137.64837646 -106.97257233]
[-148.67463684 -117.14221954]
[-155.08216858 -118.97893524]
[-158.99137878 -123.16177368]
[-159.90580750 -127.88031769]
[-170.55990601 -138.43920898]
[-181.21398926 -148.99810791]
[-194.11349487 -149.72647095]
[-202.77154541 -158.76844788]
[-202.92842102 -170.88494873]
[-213.39126587 -181.63339233]
[-223.85409546 -192.38183594]
[-234.31694031 -203.13027954]
[-244.77976990 -213.87872314]
[-260.16052246 -221.01100159]
[-257.56478882 -237.76506042]
[-240.74690247 -239.90875244]
[-234.03132629 -224.34156799]
[-223.56849670 -213.59312439]
[-213.10565186 -202.84468079]
[-202.64282227 -192.09623718]
[-192.17997742 -181.34779358]
[-175.06961060 -177.51344299]
[-170.65510559 -159.65219116]
[-160.00100708 -149.09330750]
[-149.34690857 -138.53440857]
[-138.50498962 -128.16847229]
[-127.47872925 -117.99882507]
[-116.45247650 -107.82917786]
[-105.42622375 -97.65953064]
[-94.39996338 -87.48989105]
[-83.37371063 -77.32024384]
[-72.34745789 -67.15059662]
[-67.59263611 -66.44878387]
[-63.23862457 -62.73117828]
[-61.11628723 -56.41249847]
[-50.46218872 -45.85360336]
[-39.80809402 -35.29471207]
[-29.15399551 -24.73581886]
[-18.49989891 -14.17692661]
[-7.84580135 -3.61803412]
[2.80829549 6.94085836]
[6.34968662 7.27948332]
[9.89841175 9.37093258]
[12.62294388 13.19750977]
[13.73243427 18.36661148]
[23.80270004 29.48370361]
[33.87296677 40.60079575]
[43.94323349 51.71788788]
[54.01350021 62.83498001]
[64.08376312 73.95207214]
[74.15402985 85.06916046]
[87.40496826 72.27516174]
[105.99052429 69.52870941]
[123.03044891 78.27912903]
[134.58815002 68.71776581]
[146.14584351 59.15641022]
[157.70355225 49.59505081]
[169.26124573 40.03369141]
[180.81893921 30.47233009]
[189.16912842 15.71730232]
[205.65907288 19.65655518]
[206.43864441 36.59257126]
[190.38031006 42.03002930]
[178.82260132 51.59138870]
[167.26490784 61.15274811]
[155.70721436 70.71411133]
[144.14950562 80.27546692]
[132.59181213 89.83683014]
[133.80224609 104.78791046]
[146.74751282 112.36550903]
[159.69279480 119.94310760]
[173.03497314 112.46424103]
[188.22891235 112.66647339]
[201.19543457 120.39537048]
[208.50346375 133.48921204]
[208.27777100 148.38264465]
[221.22303772 155.96025085]
[234.16830444 163.53785706]
[249.28002930 159.75981140]
[262.30041504 167.62898254]
[265.80908203 182.05899048]
[278.75436401 189.63658142]
[291.69961548 197.21418762]
[302.08709717 193.84861755]
[312.39511108 196.71495056]
[319.26544189 204.62763977]
[320.59939575 214.79968262]
[333.26431274 222.83708191]
[345.92922974 230.87448120]
[358.59414673 238.91188049]
[371.25906372 246.94927979]
[385.21188354 240.36732483]
[400.50524902 242.39636230]
[412.25906372 252.38891602]
[416.72277832 267.15640259]
[412.47198486 281.98660278]
[400.86312866 292.14721680]
[385.60055542 294.39602661]
[371.55447388 288.01547241]
[363.20697021 275.04156494]
[363.22167969 259.61419678]
[350.55676270 251.57679749]
[337.89184570 243.53939819]
[325.22689819 235.50199890]
[312.56198120 227.46459961]
[293.25588989 228.10525513]
[284.12200928 210.15945435]
[271.17675781 202.58186340]
[258.23147583 195.00425720]
[243.93144226 199.00982666]
[230.69515991 191.50947571]
[226.59071350 176.48312378]
[213.64543152 168.90551758]
[200.70016479 161.32792664]
[187.82437134 168.81654358]
[172.82922363 168.85505676]
[159.74163818 161.33300781]
[152.12634277 148.18370056]
[152.11518860 132.88838196]
[139.16992188 125.31077576]
[126.22464752 117.73317719]
[117.67893219 125.82400513]
[106.88348389 130.15840149]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 31]
[3 30]
[4 29]
[5 28]
[6 27]
[7 26]
[8 25]
[10 23]
[12 22]
[13 21]
[32 102]
[33 101]
[34 100]
[35 99]
[36 98]
[37 97]
[38 96]
[39 92]
[40 91]
[41 90]
[42 89]
[43 88]
[44 87]
[45 86]
[46 83]
[47 82]
[48 81]
[49 80]
[50 79]
[51 78]
[52 77]
[55 76]
[56 75]
[57 74]
[60 72]
[61 71]
[62 70]
[63 69]
[64 68]
[105 119]
[106 118]
[107 117]
[108 116]
[109 115]
[110 114]
[120 172]
[121 171]
[122 170]
[127 165]
[128 164]
[129 163]
[132 160]
[133 159]
[134 158]
[138 156]
[139 155]
[140 154]
[141 153]
[142 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
