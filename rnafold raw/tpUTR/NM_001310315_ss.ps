%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 20:55:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACUUCUCAGAUCAAUCGUGCAUCCUUAGUGAACUUCUGUUGUCCUCAAGCAUGGUCUUUCUACUUGUAAACUAUGGUGCUCAGUUUUGCCUCUGUUAGAAAUUCACACUGUUGAUGUAAUGAUGUGGAACUCCUCUAAAAAUUACAGUAUUGUCUGUGAAGGUAUCUAUACUAAUAAAAAAGCAUGUGUAGAAA\
) } def
/len { sequence length } bind def

/coor [
[226.13250732 303.98004150]
[224.69111633 292.69113159]
[227.58482361 281.63153076]
[234.43164062 272.41271973]
[227.52604675 259.09683228]
[220.62046814 245.78096008]
[213.71487427 232.46507263]
[200.98698425 224.72879028]
[201.50234985 208.91596985]
[194.59675598 195.60009766]
[187.69117737 182.28421021]
[180.78558350 168.96832275]
[174.90858459 164.47257996]
[173.87794495 155.38458252]
[167.18557739 141.96026611]
[160.49320984 128.53594971]
[153.80084229 115.11164093]
[147.00163269 101.74111938]
[121.99214172 134.29864502]
[86.79136658 131.82107544]
[72.47744751 105.97392273]
[57.50080872 105.13713837]
[42.52416611 104.30034637]
[33.76963043 106.94840240]
[27.31595421 103.32891083]
[12.35456181 102.25340271]
[-1.96486139 108.98130798]
[-14.10460567 100.35136414]
[-29.06599808 99.27585602]
[-44.02739334 98.20034790]
[-58.98878479 97.12483215]
[-70.87440491 107.19309235]
[-86.03205872 105.88924408]
[-95.55735779 94.49607849]
[-110.51875305 93.42057037]
[-117.11541748 108.68457031]
[-128.51847839 120.75203705]
[-143.33898926 128.17864990]
[-159.78047180 130.08383179]
[-175.85667419 126.25508118]
[-189.63151550 117.17155457]
[-199.45222473 103.94414520]
[-204.14768982 88.17967224]
[-218.24528503 95.36078644]
[-230.65405273 87.12236023]
[-245.64213562 86.52449799]
[-255.14988708 98.78754425]
[-270.05920410 103.08770752]
[-284.63717651 97.77149200]
[-293.27828979 84.88307953]
[-292.65982056 69.37833405]
[-283.01959229 57.21914673]
[-268.06448364 53.08097076]
[-253.54504395 58.55502319]
[-245.04428101 71.53641510]
[-230.05619812 72.13427734]
[-217.03063965 64.91040039]
[-203.54983521 73.19158936]
[-199.08517456 60.47224426]
[-191.20686340 49.51320267]
[-180.54592896 41.20853424]
[-167.96093750 36.23905563]
[-154.46876526 35.01649857]
[-141.16249084 37.64943314]
[-129.12278748 43.93368149]
[-119.33023071 53.36813736]
[-112.58535004 65.19469452]
[-109.44324493 78.45917511]
[-94.48184967 79.53468323]
[-83.42489624 69.62108612]
[-68.23659515 70.49868011]
[-57.91327286 82.16344452]
[-42.95188141 83.23895264]
[-27.99048805 84.31446075]
[-13.02909565 85.38997650]
[0.22018856 78.58514404]
[13.43007183 87.29200745]
[28.39146423 88.36752319]
[43.36095810 89.32369995]
[58.33760071 90.16049194]
[73.31423950 90.99728394]
[74.43718719 72.42825317]
[88.37321472 54.42584991]
[84.12636566 40.03959656]
[79.87951660 25.65334320]
[65.21278381 20.58712769]
[56.35261154 7.84833002]
[56.70591736 -7.66472244]
[66.13684845 -19.98694420]
[81.01902008 -24.38018990]
[95.62992859 -19.15516472]
[104.35139465 -6.32100105]
[103.82981873 9.18730545]
[94.26576996 21.40649414]
[98.51261902 35.79274750]
[102.75946808 50.17900085]
[110.25088501 50.53767395]
[110.96823120 35.55483627]
[111.68558502 20.57200050]
[112.40316772 5.58917475]
[127.38597870 6.30698681]
[126.66841888 21.28935051]
[125.95107269 36.27218628]
[125.23372650 51.25502396]
[132.72514343 51.61369705]
[138.32698059 37.69898224]
[143.92883301 23.78426552]
[137.50575256 9.34405613]
[143.25263977 -5.37833977]
[157.75994873 -11.64838600]
[172.42076111 -5.74617481]
[178.53707886 8.82661629]
[172.48019409 23.42420769]
[157.84355164 29.38611031]
[152.24169922 43.30082703]
[146.63986206 57.21554184]
[157.78169250 67.25842285]
[171.04209900 60.24687958]
[184.30249023 53.23533249]
[197.56289673 46.22378540]
[210.82328796 39.21223831]
[224.08369446 32.20069122]
[225.01435852 18.44187546]
[232.56459045 7.03177071]
[244.67135620 0.89409578]
[258.12136841 1.53788733]
[269.40362549 8.68794155]
[282.77413940 1.88874340]
[296.14468384 -4.91045523]
[309.51519775 -11.70965385]
[315.83209229 -26.45673943]
[331.33792114 -30.57356453]
[344.13796997 -20.90205193]
[344.41314697 -4.86135864]
[331.95233154 5.24346781]
[316.31439209 1.66086984]
[302.94387817 8.46006870]
[289.57336426 15.25926685]
[276.20281982 22.05846596]
[274.14562988 38.33949280]
[262.67758179 50.30896378]
[246.17190552 53.11639023]
[231.09524536 45.46109009]
[217.83483887 52.47263718]
[204.57444763 59.48418427]
[191.31404114 66.49573517]
[178.05363464 73.50727844]
[164.79324341 80.51882935]
[160.31752014 94.83552551]
[167.05422974 101.02187347]
[167.22514343 108.41927338]
[173.91752625 121.84358215]
[180.60989380 135.26789856]
[187.30226135 148.69219971]
[194.10145569 162.06272888]
[201.00704956 175.37861633]
[207.91264343 188.69450378]
[214.81823730 202.01039124]
[228.04006958 210.69911194]
[227.03074646 225.55947876]
[233.93634033 238.87536621]
[240.84193420 252.19125366]
[247.74752808 265.50714111]
[266.76593018 267.54858398]
[280.61160278 280.52746582]
[283.82543945 299.07891846]
[275.28948975 315.69213867]
[282.82400513 328.66253662]
[290.35848999 341.63296509]
[297.89300537 354.60336304]
[305.42749023 367.57376099]
[312.96200562 380.54415894]
[320.49649048 393.51455688]
[335.55737305 391.45571899]
[350.25839233 395.32196045]
[362.35781860 404.52374268]
[370.01052856 417.65783691]
[372.04956055 432.72137451]
[368.16397095 447.41732788]
[358.94628906 459.50463867]
[345.80212402 467.14004517]
[330.73590088 469.15927124]
[316.04510498 465.25436401]
[303.96994019 456.02078247]
[296.35180664 442.86660767]
[294.35241699 427.79772949]
[298.27664185 413.11206055]
[307.52609253 401.04904175]
[299.99160767 388.07864380]
[292.45709229 375.10824585]
[284.92260742 362.13784790]
[277.38809204 349.16744995]
[269.85360718 336.19705200]
[262.31909180 323.22665405]
[251.18701172 324.20681763]
[240.44573975 320.94189453]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 163]
[5 162]
[6 161]
[7 160]
[9 158]
[10 157]
[11 156]
[12 155]
[14 154]
[15 153]
[16 152]
[17 151]
[18 149]
[21 81]
[22 80]
[23 79]
[25 78]
[26 77]
[28 75]
[29 74]
[30 73]
[31 72]
[34 69]
[35 68]
[43 58]
[45 56]
[46 55]
[83 96]
[84 95]
[85 94]
[105 116]
[106 115]
[107 114]
[117 148]
[118 147]
[119 146]
[120 145]
[121 144]
[122 143]
[127 139]
[128 138]
[129 137]
[130 136]
[167 194]
[168 193]
[169 192]
[170 191]
[171 190]
[172 189]
[173 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
