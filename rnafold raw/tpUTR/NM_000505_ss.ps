%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 08:13:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGCUCAGGGACUCAUCUUUCCCUCCUUGGUGAUUCCGCAGUGAGAGAGUGGCUGGGGCAUGGAAGGCAAGAUUGUGUCCCAUUCCCCCAGUGCGGCCAGCUCCGCGCCAGGAUGGCGCAGGAACUCAAUAAAGUGCUUUGAAAAUGCUGAGAA\
) } def
/len { sequence length } bind def

/coor [
[48.82932663 403.48623657]
[37.94320679 392.02902222]
[38.43055344 376.23226929]
[50.00222778 365.46786499]
[50.30623245 350.47094727]
[50.61023712 335.47402954]
[50.91424179 320.47711182]
[51.21824646 305.48019409]
[37.88782501 298.60272217]
[25.84254265 307.54202271]
[13.79726028 316.48132324]
[7.32653475 330.91879272]
[-7.50477695 332.29043579]
[-19.55006027 341.22973633]
[-31.59534264 350.16906738]
[-43.64062500 359.10836792]
[-55.68590546 368.04766846]
[-53.25806808 383.15939331]
[-58.14208603 397.66473389]
[-69.21564484 408.23046875]
[-83.93412018 412.42868042]
[-98.91532135 409.29464722]
[-110.71667480 399.54852295]
[-116.62631226 385.42993164]
[-115.28624725 370.18319702]
[-107.00441742 357.31192017]
[-93.68392181 349.77383423]
[-78.38571167 349.30108643]
[-64.62521362 356.00238037]
[-52.57992935 347.06307983]
[-40.53464508 338.12377930]
[-28.48936462 329.18447876]
[-16.44408226 320.24517822]
[-10.83491421 306.44711304]
[4.85795593 304.43603516]
[16.90323830 295.49673462]
[28.94852066 286.55743408]
[38.24984360 274.78945923]
[44.16518402 261.00506592]
[50.08052063 247.22071838]
[47.98934174 232.47363281]
[60.54177475 222.84310913]
[50.56348038 210.16743469]
[48.30941010 194.09915161]
[54.48580170 178.99378967]
[67.50072479 168.99388123]
[83.87316895 166.89295959]
[89.50791931 152.99154663]
[95.14267731 139.09011841]
[100.77743530 125.18869781]
[75.80790710 111.87348175]
[77.85176086 81.75263977]
[74.53511810 67.12390900]
[71.21848297 52.49517059]
[67.90184021 37.86643600]
[64.58520508 23.23769951]
[61.26856232 8.60896397]
[57.95192337 -6.01977158]
[45.13724899 -19.20553017]
[50.91295624 -35.75029373]
[47.30051804 -50.30880737]
[43.68807983 -64.86731720]
[40.07564163 -79.42583466]
[29.24258614 -90.95646667]
[33.68705750 -105.17250824]
[22.85400391 -116.70314026]
[27.29847717 -130.91918945]
[23.68603897 -145.47769165]
[20.07360268 -160.03620911]
[8.31163502 -171.46372986]
[12.58896923 -187.29522705]
[28.50544930 -191.24462891]
[39.68756485 -179.24911499]
[34.63211441 -163.64865112]
[38.24455261 -149.09013367]
[41.85699081 -134.53161621]
[52.43165970 -124.04231262]
[48.24557114 -108.78494263]
[58.82024384 -98.29563904]
[54.63415527 -83.03826904]
[58.24659348 -68.47975922]
[61.85902786 -53.92124557]
[65.47146606 -39.36273193]
[75.69338226 -32.82585526]
[78.79741669 -20.68131065]
[72.58065796 -9.33641052]
[75.89730072 5.29232502]
[79.21393585 19.92106056]
[82.53057861 34.54979706]
[85.84721375 49.17853165]
[89.16385651 63.80726624]
[92.48049164 78.43600464]
[106.88065338 82.63546753]
[117.54086304 72.08274078]
[119.05967712 56.11174774]
[132.57150269 47.46245575]
[147.71121216 52.76986694]
[152.86492920 67.96259308]
[144.07914734 81.38606262]
[128.09358215 82.74295044]
[117.43337250 93.29567719]
[124.17542267 106.69510651]
[139.00244141 104.42369080]
[153.82946777 102.15227509]
[168.63272095 99.73072052]
[183.41065979 97.15927124]
[198.18859863 94.58782196]
[212.96655273 92.01637268]
[227.74449158 89.44492340]
[242.52244568 86.87347412]
[257.09057617 78.20133972]
[269.45666504 89.79946136]
[261.73507690 104.89295197]
[245.09388733 101.65142059]
[230.31594849 104.22286987]
[215.53799438 106.79431915]
[200.76005554 109.36576080]
[185.98210144 111.93721008]
[171.20416260 114.50865936]
[165.11769104 118.77884674]
[156.10089111 116.97930145]
[141.27386475 119.25071716]
[126.44683838 121.52213287]
[114.67885590 130.82345581]
[109.04409790 144.72488403]
[103.40934753 158.62629700]
[97.77458954 172.52772522]
[106.95192719 183.12646484]
[110.63740540 196.58453369]
[108.16407776 210.24981689]
[100.07286835 221.45486450]
[87.99560547 228.03761292]
[74.32614136 228.75845337]
[75.99421692 244.49147034]
[63.86488724 253.13604736]
[57.94955063 266.92041016]
[52.03421402 280.70477295]
[63.83398819 271.44381714]
[76.20343781 262.95874023]
[91.11853027 261.36502075]
[105.00155640 267.04498291]
[114.52234650 278.63610840]
[117.39713287 293.35806274]
[112.93632507 307.67941284]
[102.20996094 318.16488647]
[87.79099274 322.29928589]
[73.13828278 319.09097290]
[66.21516418 305.78421021]
[65.91116333 320.78112793]
[65.60715485 335.77804565]
[65.30315399 350.77496338]
[64.99914551 365.77188110]
[76.12508392 376.99636841]
[75.97185516 392.79992676]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 152]
[5 151]
[6 150]
[7 149]
[8 148]
[9 37]
[10 36]
[11 35]
[13 33]
[14 32]
[15 31]
[16 30]
[17 29]
[38 137]
[39 136]
[40 135]
[42 133]
[47 127]
[48 126]
[49 125]
[50 124]
[52 92]
[53 91]
[54 90]
[55 89]
[56 88]
[57 87]
[58 86]
[60 83]
[61 82]
[62 81]
[63 80]
[65 78]
[67 76]
[68 75]
[69 74]
[93 101]
[94 100]
[102 123]
[103 122]
[104 121]
[105 119]
[106 118]
[107 117]
[108 116]
[109 115]
[110 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
