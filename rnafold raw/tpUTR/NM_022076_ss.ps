%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 04:30:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCAUCCCGGCCAGCCCCUGACAUCUGCCAUCGAUCUUGCACCAAGACUGAACUUGAACACUGACAUUUUGUUAGUAAAGAAAACCGGAUGGUGCCUUGUUAAAGGGCAAGAAAAAAGGGAGGGGGUUGGAGUUUUGAACGUAGUAAGCCUUACCUUAAUAGAAUUAAAUUCAUGAAACAUAA\
) } def
/len { sequence length } bind def

/coor [
[345.80386353 366.70553589]
[342.75201416 381.39178467]
[339.70019531 396.07803345]
[347.26129150 410.22756958]
[340.78094482 424.90356445]
[325.23031616 428.84786987]
[312.53851318 419.03472900]
[312.44158936 402.99197388]
[325.01391602 393.02621460]
[328.06576538 378.33993530]
[331.11761475 363.65368652]
[327.19409180 349.17590332]
[317.14447021 338.04016113]
[307.09481812 326.90441895]
[297.04519653 315.76867676]
[286.99554443 304.63293457]
[276.94589233 293.49719238]
[266.89627075 282.36145020]
[264.89138794 297.22686768]
[253.05882263 306.44589233]
[238.15444946 304.75488281]
[228.68798828 293.11932373]
[230.06439209 278.18261719]
[241.49777222 268.47293091]
[256.46060181 269.53430176]
[247.60243225 257.42922974]
[233.84237671 251.72747803]
[231.93679810 236.02145386]
[223.07864380 223.91638184]
[208.43153381 226.73205566]
[193.95491028 222.89324951]
[182.53382874 213.10958862]
[176.46844482 199.28094482]
[177.01086426 184.12863159]
[184.10700989 170.65992737]
[175.24884033 158.55484009]
[166.39067078 146.44976807]
[157.53251648 134.34469604]
[148.67434692 122.23961639]
[139.81617737 110.13453674]
[129.19729614 144.63200378]
[89.36120605 164.71327209]
[38.78334427 148.06288147]
[23.89035034 146.27438354]
[8.99735546 144.48590088]
[-5.89563942 142.69740295]
[-18.16731071 152.65640259]
[-33.87790298 150.93801880]
[-43.70660019 138.56173706]
[-41.82221222 122.87019348]
[-29.34271049 113.17289734]
[-13.67196369 115.22307587]
[-4.10714769 127.80440521]
[10.78584671 129.59289551]
[25.67884254 131.38139343]
[40.57183838 133.16987610]
[43.73502350 126.36957550]
[35.11970139 114.09047699]
[50.06140137 112.76895142]
[53.22459030 105.96863556]
[42.26205063 95.73033905]
[31.29950905 85.49204254]
[20.33697128 75.25374603]
[9.37443066 65.01544952]
[-1.58810854 54.77714920]
[-12.55064774 44.53885269]
[-28.25340462 38.14668655]
[-26.45800018 21.28807259]
[-9.76121044 18.34638214]
[-2.31235075 33.57631302]
[8.65018845 43.81460953]
[19.61272812 54.05290985]
[30.57526779 64.29120636]
[41.53780746 74.52950287]
[52.50034714 84.76779938]
[63.46288681 95.00609589]
[70.15123749 91.61257935]
[63.36421204 78.23587799]
[52.77586746 67.61104584]
[59.60886765 54.25776672]
[74.42007446 56.63013077]
[76.74091339 71.44885254]
[83.52794647 84.82555389]
[90.21629333 81.43203735]
[88.42780304 66.53904724]
[86.63931274 51.64604950]
[76.37724304 38.85457230]
[82.57530212 23.67181778]
[98.85746765 21.71650124]
[108.47402954 35.00008774]
[101.53231049 49.85755920]
[103.32080078 64.75055695]
[105.10929108 79.64354706]
[112.58197784 80.28304291]
[135.00004578 82.20152283]
[139.29299927 67.82895660]
[143.58596802 53.45639801]
[147.87892151 39.08383942]
[143.56257629 23.26292992]
[155.29632568 11.80644989]
[171.00950623 16.49984169]
[174.53775024 32.51494980]
[162.25148010 43.37680054]
[157.95852661 57.74935913]
[153.66555786 72.12191772]
[149.37260437 86.49448395]
[151.92124939 101.27637482]
[160.77941895 113.38144684]
[169.63758850 125.48652649]
[178.49575806 137.59159851]
[187.35392761 149.69668579]
[196.21208191 161.80175781]
[211.19639587 159.11257935]
[225.80284119 163.17938232]
[237.14868164 173.14392090]
[243.01887512 186.98956299]
[242.29841614 201.94918823]
[235.18371582 215.05821228]
[244.04188538 227.16328430]
[258.43554688 233.73088074]
[259.70751953 248.57107544]
[268.56567383 260.67614746]
[278.03201294 272.31182861]
[288.08163452 283.44757080]
[298.13128662 294.58331299]
[308.18093872 305.71905518]
[318.23056030 316.85476685]
[328.28021240 327.99050903]
[338.32983398 339.12625122]
[379.11444092 339.81423950]
[392.66055298 346.25646973]
[406.20666504 352.69873047]
[419.75280762 359.14099121]
[433.29891968 365.58325195]
[446.84503174 372.02548218]
[457.51586914 362.73913574]
[470.88107300 358.23913574]
[484.90896606 359.17465210]
[497.48049927 365.37124634]
[506.70916748 375.86215210]
[511.22424316 389.03912354]
[510.37420654 402.89880371]
[523.80834961 409.57138062]
[539.60980225 408.78063965]
[547.56658936 421.37182617]
[561.00079346 428.04440308]
[574.43493652 434.71701050]
[587.86907959 441.38958740]
[602.76727295 436.11514282]
[616.99530029 442.99545288]
[622.11193848 457.94857788]
[615.08154297 472.10305786]
[600.07519531 477.06130981]
[585.99584961 469.88168335]
[581.19653320 454.82373047]
[567.76232910 448.15115356]
[554.32818604 441.47857666]
[540.89404297 434.80596924]
[526.05352783 436.07400513]
[517.13580322 423.00552368]
[503.70162964 416.33294678]
[491.28839111 426.37841797]
[475.68157959 430.02374268]
[459.98937988 426.49084473]
[447.35955811 416.43655396]
[440.34832764 401.83093262]
[440.40280151 385.57162476]
[426.85665894 379.12936401]
[413.31054688 372.68710327]
[399.76443481 366.24484253]
[386.21829224 359.80261230]
[372.67218018 353.36035156]
[365.95510864 356.69665527]
[374.75436401 368.84460449]
[383.55361938 380.99258423]
[396.55023193 388.48175049]
[401.39318848 402.67843628]
[395.68307495 416.54907227]
[382.24890137 423.22164917]
[367.74645996 419.39031982]
[359.36077881 406.95327759]
[361.24639893 392.07229614]
[356.88366699 377.72076416]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 11]
[2 10]
[3 9]
[12 129]
[13 128]
[14 127]
[15 126]
[16 125]
[17 124]
[18 123]
[25 122]
[26 121]
[28 119]
[29 118]
[35 112]
[36 111]
[37 110]
[38 109]
[39 108]
[40 107]
[43 56]
[44 55]
[45 54]
[46 53]
[60 76]
[61 75]
[62 74]
[63 73]
[64 72]
[65 71]
[66 70]
[84 93]
[85 92]
[86 91]
[95 106]
[96 105]
[97 104]
[98 103]
[130 172]
[131 171]
[132 170]
[133 169]
[134 168]
[135 167]
[142 161]
[143 160]
[145 158]
[146 157]
[147 156]
[148 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
