%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 09:22:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGCCGGUGAGCUGCGGAGAGCUCAUGGAAGGCGAGUGGGAACCCGGCUGCCUGCCUUUUUUUCUGAUCCAGACCCUCGGCACCUGCUACUUACCAACUGGAAAAUUUUAUGCAUCCCAUGAAGCCCAGAUACACAAAAUUCCACCCCAUGAUCAAGAAUCCUGCUCCACUAAGAAUGGUGCUAAAGUAAAACUAGUUUAAUAAGCCCUUCUG\
) } def
/len { sequence length } bind def

/coor [
[279.40890503 390.66180420]
[274.85284424 385.83911133]
[271.98641968 379.79873657]
[271.11846924 373.11737061]
[272.36532593 366.44378662]
[275.63641357 360.43603516]
[267.88360596 347.59494019]
[260.13076782 334.75384521]
[252.37796021 321.91275024]
[244.53109741 309.12890625]
[236.59060669 296.40298462]
[228.65011597 283.67709351]
[218.53096008 282.27749634]
[210.68704224 275.39547729]
[207.86651611 265.12103271]
[211.23295593 254.78112793]
[203.66947937 241.82760620]
[196.10600281 228.87408447]
[176.95036316 225.31738281]
[166.42697144 208.55906677]
[171.70465088 189.17066956]
[158.30604553 182.66477966]
[157.33305359 166.87351990]
[149.20661926 154.26554871]
[141.08016968 141.65757751]
[132.95372009 129.04960632]
[124.82727814 116.44164276]
[116.70082855 103.83367920]
[109.45961761 123.02329254]
[82.50756836 127.56473541]
[68.42899323 132.74099731]
[54.35041046 137.91725159]
[40.27183533 143.09350586]
[33.29919052 148.99075317]
[25.94841194 148.24075317]
[11.79536533 153.20979309]
[-2.35768151 158.17881775]
[-12.81552315 170.05081177]
[-27.38729286 166.96652222]
[-41.54034042 171.93556213]
[-54.48217773 182.88751221]
[-68.58877563 173.48324585]
[-63.45713043 157.32456970]
[-46.50936890 157.78251648]
[-32.35632324 152.81347656]
[-22.91080284 141.29690552]
[-7.32671118 144.02577209]
[6.82633591 139.05674744]
[20.97938347 134.08770752]
[35.09557724 129.01493835]
[49.17415237 123.83867645]
[63.25273132 118.66241455]
[77.33130646 113.48616028]
[77.77165985 98.49262238]
[64.02112579 92.49904633]
[50.27059555 86.50547028]
[39.92223740 96.12961578]
[26.72748184 101.06811523]
[12.68972206 100.60639191]
[-0.07304208 94.84714508]
[-9.64777470 84.68984985]
[-14.61313343 71.69046783]
[-14.25040627 57.82310486]
[-27.91147041 51.62832260]
[-41.57253265 45.43353653]
[-55.23359680 39.23875427]
[-72.15593719 38.20404816]
[-75.84624481 21.65660095]
[-60.96705246 13.52972794]
[-49.03881073 25.57769012]
[-35.37775040 31.77247429]
[-21.71668625 37.96725845]
[-8.05562210 44.16204071]
[4.00712776 33.67995453]
[19.48992920 29.49303055]
[35.30587006 32.48862076]
[48.27865219 42.11678696]
[55.78044891 56.49041748]
[56.26417160 72.75494385]
[70.01470184 78.74851990]
[83.76522827 84.74209595]
[90.40221405 81.24917603]
[81.20845795 69.39695740]
[72.01470947 57.54475021]
[62.82095337 45.69253922]
[53.62720108 33.84032822]
[42.24691772 24.06847191]
[39.08946228 9.40455437]
[45.43952560 -4.18502522]
[58.71342087 -11.17099094]
[73.51031494 -8.71091747]
[83.80970001 2.19424820]
[85.42090607 17.10788155]
[89.98472595 31.39674377]
[94.54853821 45.68560410]
[99.11235809 59.97446823]
[103.67617035 74.26332855]
[110.31314850 70.77040863]
[113.15847015 56.04274368]
[116.00379181 41.31507874]
[118.84911346 26.58741188]
[112.57755280 19.55191422]
[110.27907562 10.55336761]
[112.34638214 1.64005303]
[118.19290924 -5.21859026]
[126.41181946 -8.56705761]
[129.90278625 -23.15517235]
[133.39376831 -37.74328613]
[136.88473511 -52.33140182]
[140.37571716 -66.91951752]
[143.86668396 -81.50763702]
[147.35766602 -96.09574890]
[140.22436523 -110.46570587]
[147.14198303 -124.94071198]
[162.80392456 -128.41679382]
[175.19567871 -118.22739410]
[174.81135559 -102.18894196]
[161.94577026 -92.60477448]
[158.45480347 -78.01666260]
[154.96383667 -63.42854309]
[151.47285461 -48.84043121]
[147.98188782 -34.25231552]
[144.49090576 -19.66419983]
[140.99993896 -5.07608414]
[148.57412720 14.12407017]
[133.57678223 29.43273163]
[130.73146057 44.16039658]
[127.88613892 58.88806534]
[125.04081726 73.61573029]
[128.21305847 58.95500565]
[135.86286926 46.05227280]
[147.20352173 36.23446655]
[161.06877136 30.51124573]
[176.03266907 29.47119522]
[190.55633545 33.22127533]
[203.14614868 41.37582397]
[212.50735474 53.09622192]
[217.67724609 67.17713165]
[218.12416077 82.17047882]
[213.80212402 96.53431702]
[205.15562439 108.79147339]
[193.07385254 117.68141937]
[178.79933167 122.28989410]
[163.80004883 122.14295959]
[149.61854553 117.25573730]
[137.71325684 108.13082886]
[129.30879211 95.70722961]
[137.43524170 108.31520081]
[145.56169128 120.92316437]
[153.68814087 133.53114319]
[161.81457520 146.13909912]
[169.94102478 158.74707031]
[183.92089844 166.15476990]
[184.31262207 181.04421997]
[194.96928406 180.62664795]
[204.76361084 184.63844299]
[211.95465088 192.29412842]
[215.29438782 202.16716003]
[214.24398804 212.45555115]
[209.05952454 221.31060791]
[216.62300110 234.26412964]
[224.18647766 247.21765137]
[242.12680054 256.41369629]
[241.37602234 275.73660278]
[249.31651306 288.46249390]
[257.25698853 301.18841553]
[264.45309448 306.81079102]
[265.21905518 314.15991211]
[272.97186279 327.00103760]
[280.72470093 339.84213257]
[288.47750854 352.68322754]
[310.33380127 362.22555542]
[310.14129639 385.34655762]
[318.99365234 397.45587158]
[327.84603882 409.56518555]
[336.69839478 421.67449951]
[344.28744507 426.75402832]
[345.59030151 434.02719116]
[354.26394653 446.26513672]
[361.77761841 451.45553589]
[362.97354126 458.74703979]
[371.46661377 471.11099243]
[379.95968628 483.47497559]
[393.72619629 482.81274414]
[405.92572021 488.98974609]
[413.42059326 500.29733276]
[414.34255981 513.72344971]
[408.55755615 525.75433350]
[416.86819458 538.24163818]
[425.17886353 550.72894287]
[433.48950195 563.21624756]
[448.87213135 567.77197266]
[454.76745605 582.69262695]
[446.65310669 596.53228760]
[430.75369263 598.67443848]
[419.26589966 587.47576904]
[421.00219727 571.52691650]
[412.69152832 559.03961182]
[404.38088989 546.55230713]
[396.07022095 534.06494141]
[379.65408325 533.91558838]
[366.42977905 523.90985107]
[361.72937012 507.83370972]
[367.59573364 491.96804810]
[359.10266113 479.60406494]
[350.60958862 467.24011230]
[342.02600098 454.93881226]
[333.35232544 442.70083618]
[324.58908081 430.52688599]
[315.73672485 418.41757202]
[306.88433838 406.30825806]
[298.03198242 394.19891357]
[291.60498047 395.02536011]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 171]
[7 170]
[8 169]
[9 168]
[10 166]
[11 165]
[12 164]
[16 162]
[17 161]
[18 160]
[21 154]
[23 152]
[24 151]
[25 150]
[26 149]
[27 148]
[28 147]
[30 53]
[31 52]
[32 51]
[33 50]
[35 49]
[36 48]
[37 47]
[39 45]
[40 44]
[54 81]
[55 80]
[56 79]
[63 73]
[64 72]
[65 71]
[66 70]
[98 129]
[99 128]
[100 127]
[101 126]
[106 124]
[107 123]
[108 122]
[109 121]
[110 120]
[111 119]
[112 118]
[173 212]
[174 211]
[175 210]
[176 209]
[178 208]
[179 207]
[181 206]
[182 205]
[183 204]
[188 200]
[189 199]
[190 198]
[191 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
