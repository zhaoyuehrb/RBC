%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 14:14:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUAUUAUAUAAAAGUGUAGGAAGGGCUUUAUUCAUGACUCAUUAAUUGAUGUCAUUUAUUUUUUUCUCUUGAGGAACACCACAAAUGUAAGUAAUAUUGGAAGGCAUUUU\
) } def
/len { sequence length } bind def

/coor [
[183.58346558 364.72274780]
[178.62928772 350.56448364]
[173.67509460 336.40625000]
[168.72091675 322.24798584]
[163.76672363 308.08975220]
[158.81254578 293.93148804]
[153.85835266 279.77322388]
[148.90417480 265.61499023]
[137.39750671 256.15740967]
[140.14271545 240.57617188]
[135.18852234 226.41792297]
[120.52827454 223.78305054]
[109.07909393 214.09944153]
[103.98049927 199.89131165]
[106.69602966 184.94064331]
[116.59493256 173.28050232]
[111.64074707 159.12225342]
[106.68656158 144.96400452]
[101.43170929 139.61331177]
[101.79804993 130.33862305]
[97.24289703 116.04699707]
[87.16956329 110.02435303]
[83.76264954 98.79326630]
[88.79232025 88.18917084]
[75.24150848 80.50715637]
[71.23558044 65.83040619]
[78.64271545 52.95911789]
[74.49018097 38.54536057]
[70.33764648 24.13159943]
[66.18511963 9.71784019]
[62.03258133 -4.69591951]
[38.95113754 -9.95579624]
[23.14722824 -27.43532562]
[20.25880241 -50.71313095]
[31.20960617 -71.33361053]
[22.87605286 -83.80565643]
[14.54249859 -96.27770233]
[6.20894527 -108.74974060]
[-2.12460828 -121.22178650]
[-10.63225651 -133.57572937]
[-19.31232643 -145.80914307]
[-27.99239540 -158.04255676]
[-43.50427246 -162.13661194]
[-49.84280014 -176.87440491]
[-42.14560699 -190.95036316]
[-26.31731606 -193.56661987]
[-14.50004101 -182.71620178]
[-15.75898266 -166.72262573]
[-7.07891273 -154.48921204]
[1.60115671 -142.25579834]
[8.13189030 -138.56896973]
[10.34743595 -129.55534363]
[18.68099022 -117.08329773]
[27.01454353 -104.61125183]
[35.34809494 -92.13920593]
[43.68164825 -79.66716766]
[51.22626877 -81.98342896]
[59.09362030 -82.72222137]
[66.95702362 -81.84887695]
[74.48915100 -79.39574432]
[81.37567139 -75.46103668]
[87.32832336 -70.20486450]
[92.09703827 -63.84275055]
[95.48039246 -56.63679886]
[97.33414459 -48.88486862]
[97.57736969 -40.90829086]
[96.19599152 -33.03853226]
[93.24352264 -25.60342598]
[88.83900452 -18.91352081]
[83.16221619 -13.24910164]
[76.44634247 -8.84845257]
[80.59887695 5.56530762]
[84.75141144 19.97906685]
[88.90393829 34.39282608]
[93.05647278 48.80658722]
[106.17620850 55.76418304]
[110.59279633 70.32263184]
[103.20607758 84.03664398]
[115.58102417 95.27354431]
[111.53452301 111.49184418]
[116.08967590 125.78347015]
[120.84481049 140.00981140]
[125.79899597 154.16806030]
[130.75318909 168.32630920]
[145.76243591 171.27072144]
[157.20712280 181.26651001]
[162.07949829 195.55378723]
[159.16580200 210.26318359]
[149.34677124 221.46374512]
[154.30096436 235.62199402]
[166.16197205 246.09226990]
[163.06242371 260.66079712]
[168.01660156 274.81906128]
[172.97079468 288.97729492]
[177.92497253 303.13555908]
[182.87916565 317.29379272]
[187.83334351 331.45205688]
[192.78753662 345.61029053]
[197.74171448 359.76855469]
[212.92253113 360.97811890]
[226.29580688 368.26339722]
[235.54455566 380.36215210]
[239.06637573 395.17825317]
[236.25109863 410.14468384]
[227.58647156 422.66842651]
[214.57369995 430.57968140]
[199.46733093 432.50775146]
[184.88462830 428.11859131]
[173.35214233 418.17266846]
[166.86793518 404.39315796]
[166.55543518 389.16744995]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 99]
[2 98]
[3 97]
[4 96]
[5 95]
[6 94]
[7 93]
[8 92]
[10 90]
[11 89]
[16 84]
[17 83]
[18 82]
[20 81]
[21 80]
[24 78]
[27 75]
[28 74]
[29 73]
[30 72]
[31 71]
[35 56]
[36 55]
[37 54]
[38 53]
[39 52]
[40 50]
[41 49]
[42 48]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
