%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 14:14:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACCUGCAUGGCCCCUGCAGCACUCACCAGUUGCAUCUUGUGAAUGAAGGUGCUUUUCUGCUUGCUGCUUCAGUCAAUCCUUUUGAUGAUCUCACCACUUUAAGAGUUCCAGAUGGAAAAAGACAAAAGUUUGCUUCAUCCGGGGAUGCAGGAUGCAGAAUAAACCAAACUAGUUACUCAACUUGG\
) } def
/len { sequence length } bind def

/coor [
[187.79121399 312.09637451]
[196.30461121 290.66400146]
[189.09588623 277.50976562]
[181.77749634 264.41619873]
[174.34997559 251.38424683]
[166.92245483 238.35229492]
[159.49491882 225.32034302]
[152.06739807 212.28837585]
[144.63987732 199.25642395]
[137.21234131 186.22447205]
[132.90614319 184.11763000]
[129.88743591 179.27307129]
[129.76271057 172.63061523]
[122.77479553 159.35774231]
[115.78688049 146.08486938]
[108.79896545 132.81201172]
[84.17409515 130.05978394]
[67.96867371 111.31562805]
[53.07117462 113.06623840]
[38.17368317 114.81685638]
[23.27618599 116.56746674]
[8.37869167 118.31808472]
[-6.51880264 120.06870270]
[-10.84961605 129.85693359]
[-18.79935265 136.90267944]
[-28.88227463 139.97903442]
[-39.25091553 138.59263611]
[-48.03454208 133.06150818]
[-53.67665863 124.44526672]
[-68.64316559 125.44715881]
[-83.60966492 126.44904327]
[-95.50806427 141.17166138]
[-114.06983948 142.51977539]
[-127.50224304 130.10366821]
[-142.42691040 131.60510254]
[-157.35157776 133.10653687]
[-172.27624512 134.60797119]
[-187.20091248 136.10940552]
[-202.12557983 137.61083984]
[-217.05024719 139.11227417]
[-225.70222473 152.13830566]
[-240.71749878 156.50582886]
[-255.00634766 150.15263367]
[-261.82199097 136.07850647]
[-257.94628906 120.92881775]
[-245.20924377 111.85678864]
[-229.62489319 113.14595795]
[-218.55168152 124.18761444]
[-203.62701416 122.68618011]
[-188.70234680 121.18474579]
[-173.77767944 119.68330383]
[-158.85301208 118.18186951]
[-143.92834473 116.68043518]
[-129.00367737 115.17900085]
[-123.85745239 104.97054291]
[-114.31858826 98.45406342]
[-102.69876099 97.34922791]
[-91.88258362 102.04679108]
[-84.61155701 111.48254395]
[-69.64505005 110.48065186]
[-54.67855072 109.47875977]
[-42.99277878 93.91263580]
[-23.32697678 91.89688110]
[-8.26941681 105.17120361]
[6.62807751 103.42059326]
[21.52557182 101.66997528]
[36.42306900 99.91936493]
[51.32056046 98.16874695]
[66.21805573 96.41813660]
[65.93181610 90.95387268]
[66.55148315 85.32492828]
[68.11924744 79.68424988]
[70.65116119 74.19355011]
[74.13552856 69.01879883]
[67.82150269 55.41243362]
[61.50748444 41.80607224]
[55.19346237 28.19970703]
[48.87944031 14.59334373]
[34.36903381 7.75026846]
[30.81243515 -7.89358521]
[40.93795776 -20.33759117]
[56.97817230 -20.03577423]
[66.62839508 -7.21966124]
[62.48580551 8.27932167]
[68.79982758 21.88568497]
[75.11384583 35.49205017]
[81.42787170 49.09841156]
[87.74188995 62.70477676]
[102.62423706 60.82975388]
[105.36598206 46.08245468]
[100.28147125 31.10052109]
[110.21475983 20.00191116]
[112.95650482 5.25461197]
[115.69824982 -9.49268723]
[103.97283173 -19.41287231]
[98.79351807 -33.87213516]
[101.55352020 -48.98100662]
[111.51041412 -60.67527390]
[125.98583984 -65.80924225]
[141.08598328 -63.00189209]
[152.74897766 -53.00839233]
[157.83755493 -38.51694489]
[154.98287964 -23.42567444]
[144.95288086 -11.79405689]
[130.44555664 -6.75093889]
[127.70380402 7.99635983]
[124.96205139 22.74365807]
[130.24267578 36.67076492]
[120.11328125 48.82419968]
[117.37153625 63.57149887]
[121.27180481 68.23526764]
[124.21336365 73.22409821]
[126.18930054 78.36276245]
[139.57708740 71.59761047]
[152.96487427 64.83245850]
[166.35264587 58.06731033]
[179.74043274 51.30215836]
[193.12821960 44.53700638]
[195.83686829 31.33099174]
[205.51998901 22.23369217]
[218.48355103 20.40781593]
[229.95626831 26.29882050]
[243.45523071 19.75831985]
[256.95419312 13.21782017]
[270.45315552 6.67732048]
[279.20593262 -7.19065237]
[295.57946777 -6.27421665]
[302.73004150 8.48387718]
[293.30175781 21.90176582]
[276.99365234 20.17627907]
[263.49468994 26.71677780]
[249.99572754 33.25727844]
[236.49676514 39.79777908]
[231.67225647 55.89937210]
[216.39880371 63.69167709]
[199.89337158 57.92478943]
[186.50558472 64.68994141]
[173.11779785 71.45509338]
[159.73001099 78.22024536]
[146.34223938 84.98539734]
[132.95445251 91.75054932]
[132.36085510 110.33560944]
[122.07183075 125.82408905]
[129.05975342 139.09695435]
[136.04766846 152.36982727]
[143.03558350 165.64270020]
[150.24430847 178.79695129]
[157.67182922 191.82890320]
[165.09934998 204.86085510]
[172.52687073 217.89280701]
[179.95440674 230.92477417]
[187.38192749 243.95672607]
[194.80944824 256.98867798]
[201.79182434 262.90957642]
[202.25012207 270.30102539]
[209.45884705 283.45529175]
[217.22567749 282.76211548]
[224.86634827 284.17779541]
[231.82081604 287.58380127]
[237.58329773 292.71627808]
[241.73904419 299.18643188]
[243.99421692 306.50988770]
[244.19657898 314.14303589]
[242.34573364 321.52337646]
[238.59205627 328.11087036]
[233.22457886 333.42755127]
[238.84884644 347.33322144]
[244.47311401 361.23889160]
[248.02740479 363.81091309]
[250.33456421 367.05831909]
[251.33563232 370.50201416]
[251.13464355 373.69360352]
[249.97418213 376.26608276]
[254.65708923 390.51638794]
[259.33999634 404.76666260]
[264.02288818 419.01693726]
[276.60049438 429.54003906]
[273.50985718 445.64532471]
[257.93038940 450.76504517]
[245.88887024 439.63244629]
[249.77262878 423.69982910]
[245.08972168 409.44955444]
[240.40681458 395.19927979]
[235.72390747 380.94900513]
[230.56744385 366.86315918]
[224.94317627 352.95748901]
[219.31890869 339.05181885]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 156]
[3 155]
[4 153]
[5 152]
[6 151]
[7 150]
[8 149]
[9 148]
[10 147]
[13 146]
[14 145]
[15 144]
[16 143]
[18 69]
[19 68]
[20 67]
[21 66]
[22 65]
[23 64]
[29 61]
[30 60]
[31 59]
[34 54]
[35 53]
[36 52]
[37 51]
[38 50]
[39 49]
[40 48]
[74 88]
[75 87]
[76 86]
[77 85]
[78 84]
[89 110]
[90 109]
[92 107]
[93 106]
[94 105]
[113 141]
[114 140]
[115 139]
[116 138]
[117 137]
[118 136]
[122 133]
[123 132]
[124 131]
[125 130]
[166 187]
[167 186]
[168 185]
[173 184]
[174 183]
[175 182]
[176 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
