%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 08:14:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCUCACCCCUGCUGAGGCUCAGCCCCUCAACCCGGUGGCAUUCUGGGGGAGGAGUGGGGCCCACAGCUCUCCAGCACCCGGAAUAAAGCCCGCCUGCCCCAGUCGGA\
) } def
/len { sequence length } bind def

/coor [
[74.58969116 134.16932678]
[70.51681519 119.73286438]
[79.92690277 108.05157471]
[65.66104889 112.68682861]
[58.33598328 118.39680481]
[50.92120361 117.24445343]
[36.52880859 121.47043610]
[22.13641357 125.69642639]
[7.74401903 129.92240906]
[5.12809896 143.74598694]
[-3.17546177 155.02072144]
[-15.48315048 161.55772400]
[-29.34131241 162.11895752]
[-42.01525116 156.65126038]
[-51.02888107 146.28552246]
[-65.53607941 150.09880066]
[-80.04328156 153.91206360]
[-94.55049133 157.72534180]
[-109.05769348 161.53862000]
[-115.56974792 175.75576782]
[-129.71896362 182.41412354]
[-144.82450867 178.36981201]
[-153.75401306 165.53245544]
[-152.29124451 149.96343994]
[-141.12686157 139.01397705]
[-125.53234863 137.85408020]
[-112.87096405 147.03141785]
[-98.36376190 143.21813965]
[-83.85655975 139.40486145]
[-69.34935760 135.59159851]
[-54.84215546 131.77832031]
[-51.00868225 116.15167999]
[-39.78405380 104.49370575]
[-24.13421822 100.01998138]
[-8.26278496 104.02967072]
[3.51803041 115.53002167]
[17.91042519 111.30403137]
[32.30281830 107.07804108]
[46.69521332 102.85205841]
[61.02579498 98.42098236]
[75.29164124 93.78572845]
[100.03350067 77.63625336]
[107.40949249 64.57506561]
[114.78548431 51.51387405]
[122.16147614 38.45268250]
[129.53747559 25.39149094]
[136.91346741 12.33030033]
[144.28945923 -0.73089057]
[151.66545105 -13.79208183]
[158.28376770 -27.25305748]
[164.12281799 -41.06991196]
[169.96186829 -54.88676834]
[175.80093384 -68.70362091]
[181.63998413 -82.52047729]
[178.12104797 -102.26808929]
[193.75219727 -113.49910736]
[198.79293823 -127.62677002]
[203.83367920 -141.75444031]
[208.87442017 -155.88209534]
[208.50244141 -172.83197021]
[224.68692017 -177.88160706]
[234.01953125 -163.72749329]
[223.00209045 -150.84135437]
[217.96134949 -136.71369934]
[212.92060852 -122.58602905]
[207.87986755 -108.45836639]
[213.14006042 -99.48615265]
[212.49891663 -88.88356018]
[205.92770386 -80.25807953]
[195.45683289 -76.68142700]
[189.61778259 -62.86457062]
[183.77873230 -49.04771805]
[177.93968201 -35.23086166]
[172.10063171 -21.41400719]
[173.16203308 -18.66506195]
[173.11375427 -15.30074024]
[171.70390320 -11.77491379]
[168.86239624 -8.62792015]
[164.72663879 -6.41608763]
[157.35064697 6.64510345]
[149.97465515 19.70629501]
[142.59866333 32.76748657]
[135.22267151 45.82867813]
[127.84667969 58.88986969]
[120.47068024 71.95105743]
[113.09468842 85.01225281]
[126.00547028 77.37603760]
[140.35125732 81.75763702]
[146.79216003 95.30440521]
[141.13479614 109.19664001]
[127.06242371 114.38974762]
[113.73719788 107.50307465]
[121.84680939 120.12187958]
[129.95642090 132.74067688]
[143.92639160 140.16702271]
[144.29824829 155.05699158]
[152.40785217 167.67579651]
[160.51747131 180.29458618]
[174.16725159 190.35041809]
[168.28305054 206.25050354]
[151.37544250 204.99783325]
[147.89866638 188.40420532]
[139.78904724 175.78540039]
[131.67944336 163.16659546]
[118.28952789 156.64283752]
[117.33762360 140.85029602]
[109.22801208 128.23149109]
[101.11840057 115.61268616]
[101.00877380 130.61228943]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 41]
[4 40]
[6 39]
[7 38]
[8 37]
[9 36]
[15 31]
[16 30]
[17 29]
[18 28]
[19 27]
[42 86]
[43 85]
[44 84]
[45 83]
[46 82]
[47 81]
[48 80]
[49 79]
[50 74]
[51 73]
[52 72]
[53 71]
[54 70]
[56 66]
[57 65]
[58 64]
[59 63]
[92 108]
[93 107]
[94 106]
[96 104]
[97 103]
[98 102]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
