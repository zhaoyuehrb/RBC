%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 18:34:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACAAACAAUGUACGCAAUGUUAAUAAGAGUAUAAAAUGUUAAUCAAGAGUCAACUUGAUAUUCACGAGAAACAUUUUUUUAUUUGUUUAAUAUCUGGCUAUCUCUGAGUCCUAUAAACAAAGAUUUUAAUUGAAUGUUCCAUCAAUACCUCUCUAUGAGAAGUUUAAAAUUUUAAAAAAUAAAUUUGAUUUAUUAUAA\
) } def
/len { sequence length } bind def

/coor [
[121.06314850 145.34700012]
[107.49839020 151.74992371]
[94.03482056 145.13687134]
[90.81053925 130.48750305]
[100.25470734 118.83221436]
[92.75493622 118.77360535]
[82.52782440 129.74656677]
[72.30070496 140.71954346]
[62.07358551 151.69252014]
[58.44417572 171.51615906]
[39.73568726 176.38430786]
[29.85652161 187.67156982]
[19.97735596 198.95881653]
[10.09819031 210.24606323]
[0.21902417 221.53332520]
[7.28372145 234.96665955]
[9.01478958 250.04537964]
[5.17811584 264.73022461]
[-3.70742130 277.03515625]
[-16.44012642 285.29608154]
[-31.29800415 288.39572144]
[-46.27165222 285.91491699]
[-59.33600235 278.18917847]
[-68.72421265 266.26333618]
[-73.16660309 251.75024414]
[-72.06237793 236.61270142]
[-65.56087494 222.89793396]
[-54.54136276 212.46075439]
[-40.49414825 206.71269226]
[-25.31900024 206.43113708]
[-11.06822872 211.65415955]
[-1.18906307 200.36689758]
[8.69010258 189.07965088]
[18.56926918 177.79240417]
[28.44843483 166.50514221]
[26.85564232 156.40177917]
[31.18172455 146.89167786]
[40.21622086 141.21952820]
[51.10061646 141.46539307]
[61.32773209 130.49243164]
[71.55484772 119.51945496]
[81.78196716 108.54648590]
[79.03411865 101.56799316]
[70.79056549 80.63253021]
[55.82765198 79.57838440]
[40.86473846 78.52423859]
[25.90182686 77.47010040]
[10.93891239 76.41595459]
[-4.02400112 75.36181641]
[-15.79121780 85.91207886]
[-31.56729317 84.96815491]
[-41.99256134 73.09005737]
[-40.88189697 57.32484055]
[-28.89423561 47.02573776]
[-13.14164543 48.30302048]
[-2.96985841 60.39889908]
[11.99305534 61.45304108]
[26.95596886 62.50718689]
[41.91888428 63.56132889]
[56.88179779 64.61547089]
[71.84471130 65.66961670]
[57.79740906 60.40906906]
[50.90398026 47.08688354]
[54.72351837 32.58132935]
[67.28398895 24.38165474]
[82.10038757 26.72137260]
[91.52297974 38.39247894]
[90.68601227 53.37102890]
[95.74281311 39.24910355]
[100.79960632 25.12717628]
[105.85640717 11.00524998]
[109.68204498 -3.49869680]
[112.24828339 -18.27754784]
[114.81451416 -33.05640030]
[117.38074493 -47.83525085]
[119.94697571 -62.61410141]
[122.51321411 -77.39295197]
[125.07944489 -92.17180634]
[116.25019073 -105.00465393]
[119.06324768 -119.95595551]
[131.35182190 -128.29421997]
[133.91806030 -143.07305908]
[136.48428345 -157.85191345]
[138.47123718 -172.71974182]
[139.87585449 -187.65382385]
[141.28047180 -202.58792114]
[142.68510437 -217.52200317]
[144.08972168 -232.45610046]
[145.49433899 -247.39018250]
[146.89897156 -262.32427979]
[148.30358887 -277.25836182]
[145.99024963 -286.10357666]
[149.84864807 -292.41424561]
[151.48651123 -307.32458496]
[144.19587708 -315.41018677]
[142.59623718 -325.95706177]
[146.97747803 -335.44186401]
[155.67149353 -340.82974243]
[157.77456665 -355.68157959]
[159.87763977 -370.53341675]
[161.98071289 -385.38525391]
[151.39535522 -396.89541626]
[150.73675537 -412.51913452]
[160.31587219 -424.87933350]
[175.60974121 -428.13992310]
[189.39707947 -420.76132202]
[195.16790771 -406.22753906]
[190.19743347 -391.40090942]
[176.83255005 -383.28216553]
[174.72947693 -368.43032837]
[172.62640381 -353.57849121]
[170.52333069 -338.72665405]
[179.04641724 -321.37548828]
[166.39682007 -305.68670654]
[164.75895691 -290.77639771]
[163.23767090 -275.85372925]
[161.83305359 -260.91964722]
[160.42843628 -245.98556519]
[159.02380371 -231.05146790]
[157.61918640 -216.11738586]
[156.21456909 -201.18328857]
[154.80993652 -186.24920654]
[153.40531921 -171.31510925]
[166.47016907 -178.68463135]
[180.43698120 -173.21395874]
[185.02095032 -158.93154907]
[176.84657288 -146.35459900]
[161.93324280 -144.74444580]
[151.26313782 -155.28569031]
[148.69689941 -140.50683594]
[146.13067627 -125.72798157]
[154.88890076 -113.73510742]
[152.49690247 -98.71069336]
[139.85829163 -89.60557556]
[137.29206848 -74.82672119]
[134.72583008 -60.04787064]
[132.15959167 -45.26901627]
[129.59336853 -30.49016762]
[127.02713013 -15.71131516]
[124.46089935 -0.93246388]
[134.97502136 -11.63074207]
[149.22663879 -16.30959320]
[164.03588867 -13.92506790]
[176.09852600 -5.00920391]
[182.72312927 8.44868088]
[182.43161011 23.44584656]
[175.28898621 36.63611221]
[162.88896179 45.07644272]
[147.99821472 46.88362885]
[133.93920898 41.65444565]
[123.84880066 30.55563545]
[119.97833252 16.06204605]
[114.92153168 30.18397331]
[109.86473846 44.30590057]
[104.80794525 58.42782593]
[133.88549805 108.95368195]
[143.93986511 120.08515167]
[153.99423218 131.21662903]
[164.04859924 142.34809875]
[174.10296631 153.47956848]
[189.09494019 158.53439331]
[191.88409424 173.16552734]
[201.93846130 184.29699707]
[211.99282837 195.42846680]
[222.04719543 206.55993652]
[232.10156250 217.69142151]
[238.27691650 220.08924866]
[241.78247070 224.57521057]
[242.28953552 229.33148193]
[251.99108887 240.77175903]
[261.69262695 252.21203613]
[271.39419556 263.65231323]
[281.09573364 275.09259033]
[290.79727173 286.53286743]
[306.26004028 285.23559570]
[319.51470947 293.30361938]
[325.46463013 307.63464355]
[321.82192993 322.71807861]
[309.98727417 332.75405884]
[294.51135254 333.88351440]
[281.34497070 325.67218018]
[275.55087280 311.27746582]
[279.35699463 296.23443604]
[269.65545654 284.79415894]
[259.95391846 273.35388184]
[250.25236511 261.91360474]
[240.55081177 250.47331238]
[230.84925842 239.03303528]
[220.97009277 227.74578857]
[210.91572571 216.61431885]
[200.86135864 205.48283386]
[190.80699158 194.35136414]
[180.75260925 183.21989441]
[166.47979736 178.96125793]
[162.97149658 163.53393555]
[152.91712952 152.40246582]
[142.86276245 141.27099609]
[132.80839539 130.13952637]
[122.75402069 119.00804901]
[115.25424957 118.94944000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 42]
[7 41]
[8 40]
[9 39]
[11 35]
[12 34]
[13 33]
[14 32]
[15 31]
[44 61]
[45 60]
[46 59]
[47 58]
[48 57]
[49 56]
[68 155]
[69 154]
[70 153]
[71 152]
[72 140]
[73 139]
[74 138]
[75 137]
[76 136]
[77 135]
[78 134]
[81 131]
[82 130]
[83 129]
[84 123]
[85 122]
[86 121]
[87 120]
[88 119]
[89 118]
[90 117]
[91 116]
[93 115]
[94 114]
[98 112]
[99 111]
[100 110]
[101 109]
[156 199]
[157 198]
[158 197]
[159 196]
[160 195]
[162 193]
[163 192]
[164 191]
[165 190]
[166 189]
[169 188]
[170 187]
[171 186]
[172 185]
[173 184]
[174 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
