%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 12:36:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGAGAAAAGUCAGAAAUGUGCCUGUAUGCUCUGGGAACCUGUUUAUCCCAGAAAGCCCUCUUUUUCGCACCUCAUCAAACAGAACAAAUAAGUUAUAUUUAAUGUCUUUAGUUGCAUUCUAAUGUCAUCAAAACUCAUUUAUAGUGUUUCUAUUAAAUAUGGUGAAAACAUUAA\
) } def
/len { sequence length } bind def

/coor [
[82.30216980 135.24322510]
[73.14436340 147.12322998]
[63.98656464 159.00325012]
[54.82876205 170.88325500]
[45.67095947 182.76327515]
[36.51316071 194.64328003]
[42.55398560 206.09666443]
[43.79888535 218.93847656]
[40.09742737 231.24926758]
[32.03583908 241.20246887]
[20.84448051 247.33537292]
[8.21017170 248.76403809]
[-3.97803569 245.31053162]
[-13.55169868 256.85806274]
[-23.12536049 268.40554810]
[-19.15210342 283.40533447]
[-24.78569221 297.86361694]
[-37.85989761 306.22094727]
[-53.34741974 305.26370239]
[-65.29299164 295.36004639]
[-69.10329437 280.31805420]
[-63.31319427 265.92172241]
[-50.14909744 257.70672607]
[-34.67287064 258.83190918]
[-25.09920883 247.28437805]
[-15.52554512 235.73687744]
[-22.09306908 219.84909058]
[-19.71563721 202.73289490]
[-8.95660782 189.09696960]
[7.30246830 182.73840332]
[24.63314819 185.48548889]
[33.79095078 173.60546875]
[42.94874954 161.72546387]
[52.10655212 149.84544373]
[61.26435471 137.96543884]
[70.42215729 126.08542633]
[65.14565277 118.45190430]
[61.79893112 109.79676056]
[60.56728363 100.59919739]
[61.51890182 91.36846161]
[64.60110474 82.61563110]
[52.64028931 73.56361389]
[40.67947388 64.51160431]
[28.71866226 55.45959091]
[16.75784683 46.40757751]
[4.79703331 37.35556412]
[-10.58376694 47.01313400]
[-28.45480156 50.05250549]
[-46.09758377 46.03753662]
[-60.83836746 35.60318756]
[-70.45332336 20.35524559]
[-73.50402832 2.62325931]
[-69.55262756 -14.89535618]
[-82.12542725 -23.07610321]
[-94.69823456 -31.25684929]
[-107.27103424 -39.43759537]
[-119.84384155 -47.61834335]
[-135.25184631 -44.10137558]
[-148.58917236 -52.58023071]
[-151.94303894 -68.02455139]
[-143.32365417 -81.27149963]
[-127.84473419 -84.46189880]
[-114.68965149 -75.70293427]
[-111.66309357 -60.19114685]
[-99.09028625 -52.01039886]
[-86.51748657 -43.82965088]
[-73.94467926 -35.64890671]
[-61.37187958 -27.46815872]
[-52.17756271 -35.26924896]
[-41.26078033 -40.42335892]
[-29.36627769 -42.57058334]
[-17.30764771 -41.55643845]
[-5.91168690 -37.44293976]
[4.03828764 -30.50485992]
[11.85628796 -21.21140289]
[17.00094604 -10.19446564]
[19.11299706 1.79432285]
[18.04035568 13.93487644]
[13.84904575 25.39475250]
[25.80986023 34.44676590]
[37.77067566 43.49877548]
[49.73148727 52.55078888]
[61.69230270 61.60280228]
[73.65311432 70.65481567]
[86.05673981 63.10984039]
[100.34998322 60.56428146]
[114.59579468 63.36311722]
[126.86355591 71.12704468]
[138.98313904 62.28874207]
[151.10273743 53.45043564]
[163.22232056 44.61213303]
[169.81350708 30.22926712]
[184.65576172 28.98162651]
[196.77534485 20.14332199]
[208.89494324 11.30501747]
[221.01452637 2.46671391]
[222.65225220 -1.63136423]
[225.25849915 -4.67300558]
[228.37593079 -6.48222685]
[231.53727722 -7.05195713]
[234.32214355 -6.53231812]
[247.03816223 -14.48863125]
[254.63301086 -28.36770821]
[269.52639771 -28.55934334]
[282.24240112 -36.51565552]
[294.95840454 -44.47196960]
[302.55328369 -58.35104752]
[317.44665527 -58.54268265]
[325.04150391 -72.42175293]
[339.93487549 -72.61339569]
[352.65087891 -80.56970215]
[365.36691284 -88.52601624]
[378.08291626 -96.48233032]
[380.07077026 -111.99305725]
[391.59863281 -122.55915070]
[407.22341919 -123.19162750]
[419.56756592 -113.59185028]
[422.80258179 -98.29254150]
[415.40093994 -84.51757050]
[400.85751343 -78.77104950]
[386.03924561 -83.76631927]
[373.32321167 -75.81000519]
[360.60720825 -67.85369110]
[347.89117432 -59.89737701]
[341.20587158 -46.58738708]
[325.40295410 -45.82666397]
[318.71765137 -32.51667786]
[302.91473389 -31.75595284]
[290.19873047 -23.79964066]
[277.48269653 -15.84332657]
[270.79739380 -2.53333926]
[254.99447632 -1.77261519]
[242.27845764 6.18369865]
[229.85282898 14.58630085]
[217.73324585 23.42460442]
[205.61364746 32.26290894]
[193.49406433 41.10121155]
[187.76976013 54.85190582]
[172.06062317 56.73171997]
[159.94104004 65.57002258]
[147.82144165 74.40832520]
[135.70185852 83.24663544]
[138.93516541 106.27303314]
[128.63342285 127.11872864]
[137.36381531 139.31626892]
[146.09422302 151.51382446]
[154.82461548 163.71136475]
[163.55502319 175.90890503]
[172.28543091 188.10646057]
[181.01582336 200.30400085]
[189.74623108 212.50154114]
[204.07003784 219.22010803]
[205.18591309 234.07286072]
[213.91630554 246.27040100]
[222.64671326 258.46795654]
[231.37712097 270.66549683]
[240.10751343 282.86303711]
[255.25660706 289.14294434]
[257.12402344 305.43542480]
[243.78872681 314.98016357]
[228.96893311 307.95834351]
[227.90997314 291.59344482]
[219.17956543 279.39590454]
[210.44917297 267.19833374]
[201.71876526 255.00079346]
[192.98837280 242.80325317]
[179.28901672 236.95713806]
[177.54869080 221.23194885]
[168.81828308 209.03439331]
[160.08787537 196.83685303]
[151.35748291 184.63931274]
[142.62707520 172.44177246]
[133.89668274 160.24421692]
[125.16627502 148.04667664]
[116.43587494 135.84913635]
[105.16950226 139.09698486]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 36]
[2 35]
[3 34]
[4 33]
[5 32]
[6 31]
[13 26]
[14 25]
[15 24]
[41 84]
[42 83]
[43 82]
[44 81]
[45 80]
[46 79]
[53 68]
[54 67]
[55 66]
[56 65]
[57 64]
[88 142]
[89 141]
[90 140]
[91 139]
[93 137]
[94 136]
[95 135]
[96 134]
[101 133]
[102 132]
[104 130]
[105 129]
[106 128]
[108 126]
[110 124]
[111 123]
[112 122]
[113 121]
[144 175]
[145 174]
[146 173]
[147 172]
[148 171]
[149 170]
[150 169]
[151 168]
[153 166]
[154 165]
[155 164]
[156 163]
[157 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
