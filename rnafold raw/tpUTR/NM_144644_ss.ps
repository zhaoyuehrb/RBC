%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 11:23:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGCACCUGUCAAAUGGCUUUGAAGAAGUGAUGCCACCAUCUCUAGCCAUAAUAAAGAAACAGAAUCACCUAGUAUUGGAUGUAUUUCAAUAAUAAAUAGAGUGGUGUCUUUUCCAUAAUUGUGUUAAAGAACAUUUCUUUUCCAUUCAAUUUGUUUAUUAAACUCCUAUGCCAGGCAUUGUUGAAAAUACAAAAUUAAAUAAAU\
) } def
/len { sequence length } bind def

/coor [
[12.47358799 341.80093384]
[3.75525212 329.59475708]
[-2.45579314 315.94110107]
[-5.92817163 301.34854126]
[-6.53252888 286.36071777]
[-4.24635077 271.53594971]
[0.84519631 257.42651367]
[8.55497932 244.55459595]
[-4.08058023 252.63806152]
[-2.33413911 267.76126099]
[-7.30679607 282.08465576]
[-17.96165466 292.78485107]
[-32.14743423 297.77734375]
[-47.03267670 296.12237549]
[-59.67089844 288.20144653]
[-72.30645752 296.28494263]
[-84.94201660 304.36840820]
[-97.57757568 312.45187378]
[-110.21313477 320.53536987]
[-122.84869385 328.61883545]
[-126.37462616 341.02786255]
[-137.06784058 347.50006104]
[-148.91184998 345.03155518]
[-161.66864014 352.92236328]
[-167.32293701 360.10049438]
[-174.67942810 360.83438110]
[-187.55450439 368.53067017]
[-196.14094543 384.81872559]
[-213.68368530 384.40390015]
[-226.44046021 392.29467773]
[-239.19725037 400.18548584]
[-246.48121643 414.87820435]
[-262.86236572 415.64627075]
[-271.48916626 401.69958496]
[-263.48712158 387.38528442]
[-247.08804321 387.42871094]
[-234.33125305 379.53790283]
[-221.57447815 371.64712524]
[-218.49440002 359.94723511]
[-207.92839050 353.26940918]
[-195.25077820 355.65560913]
[-182.37571716 347.95932007]
[-169.55943298 340.16555786]
[-156.80264282 332.27478027]
[-149.34033203 316.39291382]
[-130.93217468 315.98327637]
[-118.29661560 307.89981079]
[-105.66105652 299.81631470]
[-93.02549744 291.73284912]
[-80.38993835 283.64938354]
[-67.75437927 275.56588745]
[-69.64817047 260.77133179]
[-64.91117096 246.56321716]
[-54.43214798 235.77661133]
[-40.25112152 230.58828735]
[-25.16242218 232.07762146]
[-12.16405964 240.00250244]
[0.47149947 231.91903687]
[3.75920033 224.64941406]
[11.70786667 220.59707642]
[19.69523048 207.90054321]
[27.68259430 195.20399475]
[35.66996002 182.50746155]
[43.65732193 169.81092834]
[38.76448441 160.78088379]
[38.05754089 150.45384216]
[41.73105240 140.69004822]
[49.18444443 133.27621460]
[59.11913300 129.59861755]
[69.76449585 130.38420105]
[78.32145691 118.06436157]
[86.87841797 105.74452209]
[88.23542023 91.82869720]
[100.80174255 85.69850922]
[109.35870361 73.37867737]
[117.91567230 61.05883789]
[126.47263336 48.73900223]
[127.99032593 32.99075699]
[141.60559082 26.95141792]
[150.16256714 14.63158226]
[158.71952820 2.31174588]
[161.04592896 -6.52479315]
[167.50100708 -10.12878513]
[176.24395752 -22.31734085]
[168.52305603 -33.32350159]
[164.57676697 -46.15170288]
[164.77587891 -59.54891205]
[169.08695984 -72.21103668]
[177.07701111 -82.90987396]
[187.95689392 -90.61222076]
[200.65927124 -94.57968140]
[213.94329834 -94.43939209]
[226.51585388 -90.21905518]
[235.62467957 -102.13665771]
[244.73352051 -114.05425262]
[253.84234619 -125.97185516]
[262.95117188 -137.88946533]
[272.05999756 -149.80706787]
[281.16882324 -161.72467041]
[283.40173340 -177.38751221]
[297.27777100 -182.80090332]
[306.38659668 -194.71850586]
[315.49542236 -206.63610840]
[324.60424805 -218.55371094]
[333.71307373 -230.47131348]
[342.82189941 -242.38890076]
[351.19091797 -254.83718872]
[358.78927612 -267.77029419]
[366.38763428 -280.70336914]
[373.88763428 -293.69375610]
[381.28884888 -306.74069214]
[388.69006348 -319.78759766]
[396.09124756 -332.83450317]
[392.10848999 -347.89358521]
[399.80020142 -361.01956177]
[414.18127441 -364.72375488]
[421.58248901 -377.77066040]
[428.98367310 -390.81759644]
[428.31823730 -407.20321655]
[442.31869507 -415.74249268]
[456.58258057 -407.65093994]
[456.43643188 -391.25244141]
[442.03060913 -383.41638184]
[434.62939453 -370.36944580]
[427.22817993 -357.32254028]
[431.42745972 -343.07818604]
[424.10745239 -329.74130249]
[409.13818359 -325.43331909]
[401.73696899 -312.38638306]
[394.33575439 -299.33947754]
[386.93453979 -286.29254150]
[386.36828613 -278.92123413]
[379.32073975 -273.10501099]
[371.72238159 -260.17193604]
[364.12402344 -247.23883057]
[378.36602783 -251.94676208]
[392.69061279 -247.49635315]
[401.75744629 -235.54675293]
[402.18627930 -220.55288696]
[393.81726074 -208.10459900]
[379.77044678 -202.84274292]
[365.28262329 -206.72897339]
[355.75497437 -218.31448364]
[354.73950195 -233.28007507]
[345.63067627 -221.36247253]
[336.52185059 -209.44487000]
[327.41302490 -197.52726746]
[318.30419922 -185.60966492]
[309.19537354 -173.69206238]
[307.61398315 -158.88165283]
[293.08642578 -152.61582947]
[283.97760010 -140.69822693]
[274.86877441 -128.78062439]
[265.75994873 -116.86302948]
[256.65112305 -104.94542694]
[247.54228210 -93.02782440]
[238.43345642 -81.11022186]
[247.12290955 -66.90951538]
[249.69848633 -50.42442322]
[245.73736572 -34.17851639]
[235.81951904 -20.66973495]
[221.44305420 -11.98631001]
[204.79797363 -9.48398209]
[188.43251038 -13.57439327]
[179.68955994 -1.38583815]
[171.03936768 10.86871052]
[162.48239136 23.18854713]
[153.92543030 35.50838089]
[153.01979065 50.37543106]
[138.79246521 57.29596710]
[130.23550415 69.61579895]
[121.67854309 81.93563843]
[113.12158203 94.25547791]
[111.76457977 108.17130280]
[99.19825745 114.30149078]
[90.64129639 126.62132263]
[82.08432770 138.94116211]
[86.69401550 158.49400330]
[75.61297607 174.88316345]
[56.35385895 177.79829407]
[48.36649323 190.49482727]
[40.37913132 203.19136047]
[32.39176559 215.88789368]
[24.40440178 228.58444214]
[37.21361923 220.77905273]
[51.28372574 215.57981873]
[66.09057617 213.18040466]
[81.08258057 213.67018127]
[95.70124817 217.03092957]
[109.40199280 223.13743591]
[121.67444611 231.76222229]
[132.06141663 242.58398438]
[140.17597961 255.19961548]
[145.71583557 269.13912964]
[148.47460938 283.88323975]
[148.34953308 298.88272095]
[145.34527588 313.57879639]
[139.57374573 327.42398071]
[131.24993896 339.90255737]
[120.68394470 350.54959106]
[108.26937866 358.96853638]
[94.46870422 364.84573364]
[79.79602814 367.96221924]
[64.79794312 368.20193481]
[50.03316498 365.55593872]
[36.05171585 360.12280273]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 58]
[9 57]
[15 51]
[16 50]
[17 49]
[18 48]
[19 47]
[20 46]
[23 44]
[24 43]
[26 42]
[27 41]
[29 38]
[30 37]
[31 36]
[60 184]
[61 183]
[62 182]
[63 181]
[64 180]
[70 177]
[71 176]
[72 175]
[74 173]
[75 172]
[76 171]
[77 170]
[79 168]
[80 167]
[81 166]
[83 165]
[84 164]
[93 157]
[94 156]
[95 155]
[96 154]
[97 153]
[98 152]
[99 151]
[101 149]
[102 148]
[103 147]
[104 146]
[105 145]
[106 144]
[107 135]
[108 134]
[109 133]
[110 131]
[111 130]
[112 129]
[113 128]
[116 125]
[117 124]
[118 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
