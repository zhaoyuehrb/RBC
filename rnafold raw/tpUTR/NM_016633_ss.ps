%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 04:54:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCAGGGACCCAGCCCCUCCUCUCUGAGAAACUCUGACCUUCAUGUCCUUAGGCUGUGCUCCUGCCACUCUACCCUGACACCUCAAUAAAGACCAGUGCUGGUUUUGUUGGAC\
) } def
/len { sequence length } bind def

/coor [
[180.51731873 184.86308289]
[182.09783936 169.64962769]
[170.01136780 160.76609802]
[157.92489624 151.88256836]
[145.83840942 142.99903870]
[133.75193787 134.11550903]
[121.66545868 125.23197937]
[104.22537231 132.98774719]
[85.39352417 129.87802124]
[71.37276459 116.92707825]
[66.78121948 98.40071106]
[52.34720230 94.31916046]
[37.91318130 90.23760986]
[23.47916222 86.15605164]
[9.04514217 82.07450104]
[-11.40219212 99.70742798]
[-42.38718796 90.84929657]
[-56.57444382 95.71978760]
[-70.76170349 100.59027863]
[-77.47685242 114.89700317]
[-92.36973572 120.18640137]
[-106.60466003 113.32036591]
[-111.73630524 98.37239838]
[-104.72015381 84.21086121]
[-89.71876526 79.23754120]
[-75.63219452 86.40302277]
[-61.44493866 81.53253174]
[-47.25767899 76.66204071]
[-45.81984711 69.30115509]
[-60.60537720 66.77367401]
[-75.52935791 68.28192139]
[-81.76287842 54.63848877]
[-70.85335541 44.34371567]
[-57.59400558 51.35713577]
[-42.94418716 54.57938004]
[-41.50635910 47.21849442]
[-52.81795883 37.36721420]
[-64.12955475 27.51593399]
[-79.87712097 28.85380363]
[-91.90431213 18.60089111]
[-93.07561493 2.84006548]
[-82.69611359 -9.07805347]
[-66.92378235 -10.08265781]
[-55.11606979 0.42226660]
[-54.27827835 16.20433426]
[-42.96667862 26.05561447]
[-31.65507889 35.90689468]
[-16.73532677 33.28942871]
[-2.98005652 36.84478378]
[7.32933474 45.19782639]
[12.80520153 56.24732971]
[13.12669468 67.64048004]
[27.56071472 71.72203827]
[41.99473572 75.80358887]
[56.42875290 79.88513947]
[70.86277771 83.96669006]
[83.37137604 71.19837189]
[100.68335724 66.74977112]
[104.36563873 52.20876312]
[99.38513947 36.58421326]
[110.62471008 24.64251709]
[126.52204895 28.66826820]
[130.72332764 44.52012253]
[118.90664673 55.89104462]
[115.22436523 70.43205261]
[120.47454071 73.79240417]
[125.00543213 78.07346344]
[128.65786743 83.12480927]
[131.30351257 88.76900482]
[132.84944153 94.80775452]
[133.24133301 101.02891541]
[132.46542358 107.21392059]
[130.54898071 113.14550018]
[142.63546753 122.02902985]
[154.72193909 130.91256714]
[166.80841064 139.79609680]
[178.89489746 148.67961121]
[190.98136902 157.56314087]
[205.02935791 151.51324463]
[220.11976624 153.29544067]
[232.21163940 162.33166504]
[238.11747742 176.11488342]
[236.34321594 190.90397644]
[248.42968750 199.78750610]
[260.51617432 208.67103577]
[272.60263062 217.55456543]
[284.68911743 226.43809509]
[296.77560425 235.32162476]
[308.86206055 244.20515442]
[317.76232910 246.81988525]
[321.15466309 253.50373840]
[332.99176025 262.71691895]
[344.82888794 271.93011475]
[356.66598511 281.14331055]
[368.50308228 290.35650635]
[384.81228638 292.07180786]
[391.23327637 307.16162109]
[381.16073608 320.10284424]
[364.95639038 317.58267212]
[359.28988647 302.19360352]
[347.45278931 292.98040771]
[335.61569214 283.76724243]
[323.77856445 274.55404663]
[311.94146729 265.34085083]
[299.97854614 256.29162598]
[287.89205933 247.40809631]
[275.80560303 238.52456665]
[263.71911621 229.64105225]
[251.63264465 220.75752258]
[239.54615784 211.87399292]
[227.45968628 202.99046326]
[213.87452698 209.09858704]
[198.95678711 207.57652283]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 78]
[3 77]
[4 76]
[5 75]
[6 74]
[7 73]
[11 56]
[12 55]
[13 54]
[14 53]
[15 52]
[17 28]
[18 27]
[19 26]
[36 47]
[37 46]
[38 45]
[58 65]
[59 64]
[83 111]
[84 110]
[85 109]
[86 108]
[87 107]
[88 106]
[89 105]
[91 104]
[92 103]
[93 102]
[94 101]
[95 100]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
