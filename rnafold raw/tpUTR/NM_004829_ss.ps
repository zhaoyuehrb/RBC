%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 13:39:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAUGACCAUGAGACACAGUGGCCAUGGGUGGAUCUGAAAGCUGGUGUUGAGCCUGGGCGGCGUGAGCUCUGUGUUGGACCCACGGAGGAGGGAGUCACUGCAGGGAAAGAGGGACACUGGCAUUCCAUUUGUCAGAGCAUCCCGGACGAUGCAGAGGGUGGGAGAACUACAUGCUAAAUUUCUUUUUUUUUUUUUUUG\
) } def
/len { sequence length } bind def

/coor [
[67.38459015 323.52911377]
[55.18007278 314.69747925]
[45.24715805 303.37118530]
[38.08407974 290.11834717]
[34.05012894 275.60369873]
[33.34765625 260.55529785]
[36.01189041 245.72798157]
[41.90919876 231.86544800]
[50.74377060 219.66307068]
[62.07247162 209.73291016]
[75.32705688 202.57302856]
[89.84268188 198.54260254]
[89.13959503 183.55909729]
[88.43651581 168.57557678]
[87.73342896 153.59207153]
[75.50244141 144.90858459]
[61.12514877 149.18566895]
[46.74785614 153.46275330]
[39.40762711 158.91346741]
[32.11235046 157.69244385]
[17.66996765 161.74430847]
[6.47283840 172.92173767]
[-7.87133455 168.91000366]
[-22.31371880 172.96186829]
[-36.75609970 177.01371765]
[-44.53247833 190.51060486]
[-59.23682785 194.41401672]
[-72.05611420 186.91725159]
[-86.49849701 190.96911621]
[-97.69562531 202.14654541]
[-112.03980255 198.13481140]
[-123.23693085 209.31224060]
[-137.58110046 205.30050659]
[-152.02348328 209.35237122]
[-166.46586609 213.40423584]
[-180.87614441 217.56883240]
[-195.25343323 221.84591675]
[-209.63073730 226.12300110]
[-218.50297546 239.48948669]
[-234.49696350 240.74316406]
[-245.34349060 228.92231750]
[-242.72201538 213.09489441]
[-228.64352417 205.40232849]
[-213.90782166 211.74571228]
[-199.53053284 207.46862793]
[-185.15322876 203.19154358]
[-179.63400269 198.26710510]
[-170.51773071 198.96185303]
[-156.07534790 194.90998840]
[-141.63296509 190.85812378]
[-131.46884155 179.97052002]
[-116.09165955 183.69242859]
[-105.92755127 172.80482483]
[-90.55036163 176.52673340]
[-76.10797882 172.47486877]
[-69.05900574 159.40400696]
[-54.47009659 155.08911133]
[-40.80796051 162.57133484]
[-26.36557770 158.51948547]
[-11.92319393 154.46762085]
[-1.75908077 143.58000183]
[13.61810780 147.30192566]
[28.06049156 143.25006104]
[42.47076797 139.08546448]
[56.84806061 134.80838013]
[71.22535706 130.53129578]
[63.00109482 99.17463684]
[79.07212830 75.70989990]
[103.41124725 73.09913635]
[109.34048462 59.32073975]
[115.26972198 45.54234314]
[121.19895172 31.76394844]
[127.12818909 17.98555183]
[133.05741882 4.20715714]
[138.98666382 -9.57123756]
[144.91589355 -23.34963417]
[150.84512329 -37.12802887]
[156.77436829 -50.90642548]
[151.16778564 -65.43928528]
[157.37715149 -79.32807922]
[171.26657104 -84.58351898]
[172.90443420 -99.49383545]
[170.10752869 -114.23077393]
[157.32815552 -123.13725281]
[154.70162964 -138.12245178]
[163.27136230 -150.25073242]
[153.09657288 -162.36619568]
[158.32504272 -176.31295776]
[155.52815247 -191.04989624]
[152.61616516 -205.76452637]
[149.58927917 -220.45594788]
[137.03390503 -230.44305420]
[137.15808105 -246.48562622]
[149.86653137 -256.27719116]
[165.41044617 -252.30647278]
[171.86584473 -237.61950684]
[164.28070068 -223.48283386]
[167.30758667 -208.79141235]
[171.73997498 -202.86976624]
[170.26509094 -193.84680176]
[173.06198120 -179.10986328]
[183.03672791 -168.04849243]
[178.00830078 -153.04763794]
[190.42568970 -144.90246582]
[193.47207642 -129.99694824]
[184.84446716 -117.02767181]
[187.64137268 -102.29073334]
[194.68235779 -99.70723724]
[195.24491882 -114.69667816]
[209.67459106 -118.79361725]
[218.02999878 -106.33620453]
[208.76432800 -94.54022980]
[215.80532837 -91.95673370]
[227.46987915 -101.38742065]
[239.13444519 -110.81811523]
[250.79901123 -120.24880981]
[252.06806946 -139.14498901]
[266.49340820 -150.91769409]
[284.62777710 -148.45881653]
[295.99188232 -158.24948120]
[307.35601807 -168.04013062]
[318.72012329 -177.83079529]
[330.08422852 -187.62144470]
[341.44833374 -197.41209412]
[341.06378174 -213.04495239]
[350.85812378 -225.23530579]
[366.20681763 -228.22723389]
[379.86267090 -220.60804749]
[385.37777710 -205.97529602]
[380.14813232 -191.23811340]
[366.64294434 -183.35494995]
[351.23901367 -186.04798889]
[339.87487793 -176.25733948]
[328.51077271 -166.46667480]
[317.14666748 -156.67602539]
[305.78256226 -146.88536072]
[294.41842651 -137.09471130]
[296.05841064 -125.79460907]
[291.99435425 -114.99562073]
[283.12881470 -107.42472076]
[271.59182739 -105.05316162]
[260.22970581 -108.58424377]
[248.56513977 -99.15354919]
[236.90057373 -89.72286224]
[225.23602295 -80.29216766]
[185.04496765 -78.65428925]
[190.77758789 -64.95491791]
[184.96078491 -50.89720535]
[170.55274963 -44.97718811]
[164.62351990 -31.19879341]
[158.69429016 -17.42039871]
[152.76506042 -3.64200330]
[146.83581543 10.13639164]
[140.90658569 23.91478729]
[134.97735596 37.69318390]
[129.04811096 51.47157669]
[123.11888123 65.24996948]
[117.18964386 79.02836609]
[134.16357422 94.94755554]
[134.84893799 123.36004639]
[148.17657471 130.24291992]
[161.50422668 137.12577820]
[174.83186340 144.00865173]
[190.49194336 140.52413940]
[202.88917542 150.70686340]
[202.51348877 166.74551392]
[189.65306091 176.33660889]
[174.17332458 172.12268066]
[167.94900513 157.33628845]
[154.62135315 150.45343018]
[141.29371643 143.57055664]
[127.96606445 136.68768311]
[121.65378571 140.73800659]
[130.05006409 153.16790771]
[138.44635010 165.59780884]
[151.51654053 172.95785522]
[151.94863892 187.95162964]
[139.32402039 196.05218506]
[125.87422943 189.41117859]
[124.63021088 174.46304321]
[116.82971954 161.65084839]
[109.02922058 148.83865356]
[102.71694183 152.88897705]
[103.42002869 167.87249756]
[104.12310791 182.85600281]
[104.82619476 197.83952332]
[119.65545654 200.49298096]
[133.52226257 206.38020325]
[145.73106384 215.20590210]
[155.66946411 226.52738953]
[162.83895874 239.77676392]
[166.87994385 254.28945923]
[167.58970642 269.33752441]
[164.93266296 284.16613770]
[159.04206848 298.03149414]
[150.21340942 310.23815918]
[138.88952637 320.17382812]
[125.63841248 327.34011841]
[111.12474060 331.37756348]
[96.07651520 332.08370972]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 186]
[13 185]
[14 184]
[15 183]
[16 66]
[17 65]
[18 64]
[20 63]
[21 62]
[23 60]
[24 59]
[25 58]
[28 55]
[29 54]
[31 52]
[33 50]
[34 49]
[35 48]
[36 46]
[37 45]
[38 44]
[69 158]
[70 157]
[71 156]
[72 155]
[73 154]
[74 153]
[75 152]
[76 151]
[77 150]
[78 149]
[81 146]
[82 107]
[83 106]
[86 103]
[88 101]
[89 100]
[90 98]
[91 97]
[113 145]
[114 144]
[115 143]
[116 142]
[119 137]
[120 136]
[121 135]
[122 134]
[123 133]
[124 132]
[160 172]
[161 171]
[162 170]
[163 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
