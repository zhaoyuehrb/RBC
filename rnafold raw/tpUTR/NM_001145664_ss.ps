%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Sep  9 23:06:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUAUUUAUUUGAAUAGAGAAUAAGAAAACUGAUAGACUUGCAUUCUUAAAAAUAUUAAAUACUAAAGUUUUUCUAUUGACGAAAGAUGAUGUUAUGUAUAUAAUAGAUGUAGCAUUGUCUAUUUUAUGUUUAUAUGUAUUUCAAGGAGGUGGUUUCGAUAAAAUAUGUAAACUGAUUUGGAGAAU\
) } def
/len { sequence length } bind def

/coor [
[91.48472595 114.14914703]
[86.19019318 105.40022278]
[71.19019318 105.40022278]
[56.19018936 105.40022278]
[41.19018936 105.40022278]
[26.19018936 105.40022278]
[11.19019032 105.40022278]
[-3.80980992 105.40022278]
[-12.41131020 108.53464508]
[-19.05993271 105.27280426]
[-34.05783844 105.02215576]
[-49.05574417 104.77150726]
[-64.05364990 104.52085876]
[-79.05364990 104.52085876]
[-94.05155945 104.77150726]
[-109.04946136 105.02215576]
[-124.04737091 105.27280426]
[-139.04527283 105.52345276]
[-154.04318237 105.77410126]
[-169.04109192 106.02474213]
[-184.03898621 106.27539062]
[-199.03689575 106.52603912]
[-213.78419495 109.26778412]
[-227.87004089 114.42425537]
[-241.95587158 119.58071899]
[-256.04171753 124.73718262]
[-270.12756348 129.89364624]
[-284.21337891 135.05010986]
[-290.92285156 149.10787964]
[-305.28137207 154.13661194]
[-318.64193726 147.65351868]
[-321.20181274 162.79757690]
[-331.00311279 174.62255859]
[-345.40936279 179.94757080]
[-360.54531860 177.34024048]
[-372.33950806 167.50192261]
[-377.61935425 153.07905579]
[-374.96459961 137.95133972]
[-365.08935547 126.18804932]
[-350.65002441 120.95344543]
[-335.53070068 123.65560913]
[-323.79840088 133.56768799]
[-317.78121948 119.99089050]
[-303.56964111 114.56084442]
[-289.36984253 120.96427155]
[-275.28402710 115.80780792]
[-261.19818115 110.65134430]
[-247.11233521 105.49488068]
[-233.02650452 100.33840942]
[-218.94065857 95.18194580]
[-233.78376770 93.01816559]
[-247.44282532 86.81893158]
[-258.84408569 77.07155609]
[-267.09130859 64.54226685]
[-271.53622437 50.21596527]
[-271.82937622 35.21883011]
[-267.94778442 20.72976303]
[-260.19653320 7.88772345]
[-249.18492126 -2.29779267]
[-235.77859497 -9.02611732]
[-221.03138733 -11.76834583]
[-206.10255432 -10.30891705]
[-192.16563416 -4.76255369]
[-180.31617737 4.43475246]
[-171.48565674 16.56001472]
[-166.36824036 30.66008377]
[-165.36618042 45.62657547]
[-168.55825806 60.28299713]
[-175.69354248 73.47722626]
[-186.21115112 84.17208099]
[-199.28753662 91.52813721]
[-184.28964233 91.27748871]
[-169.29173279 91.02684021]
[-154.29382324 90.77619171]
[-139.29591370 90.52554321]
[-124.29801178 90.27489471]
[-109.30010986 90.02424622]
[-94.30220032 89.77360535]
[-79.30429840 89.52295685]
[-75.38722229 86.75913239]
[-69.68804169 86.44009399]
[-63.80300522 89.52295685]
[-48.80509949 89.77360535]
[-33.80719376 90.02424622]
[-18.80928612 90.27489471]
[-3.80980992 90.40022278]
[11.19019032 90.40022278]
[26.19018936 90.40022278]
[41.19018936 90.40022278]
[56.19018936 90.40022278]
[71.19019318 90.40022278]
[86.19019318 90.40022278]
[98.41323090 81.70555878]
[103.33360291 67.53552246]
[108.25398254 53.36548615]
[113.17435455 39.19544983]
[118.09472656 25.02541542]
[123.01509857 10.85537815]
[127.93547058 -3.31465816]
[118.33051300 -15.38728523]
[116.80000305 -30.73854256]
[123.83231354 -44.46989822]
[137.18347168 -52.19972610]
[152.59315491 -51.46146774]
[165.14421082 -42.49069977]
[170.83161926 -28.14995956]
[167.84056091 -13.01532459]
[157.12548828 -1.91620386]
[142.10551453 1.60571468]
[137.18513489 15.77575111]
[132.26475525 29.94578743]
[127.34439087 44.11582565]
[122.42401886 58.28586197]
[117.50364685 72.45589447]
[112.58326721 86.62593079]
[119.01075745 100.17906952]
[133.09658813 105.33553314]
[147.18243408 110.49199677]
[162.80137634 107.97024536]
[172.09318542 119.61118317]
[186.17903137 124.76764679]
[200.26486206 129.92411804]
[214.35070801 135.08058167]
[228.55049133 128.67715454]
[242.76208496 134.10720825]
[248.77926636 147.68399048]
[262.86511230 152.84045410]
[276.95092773 157.99691772]
[286.10574341 158.01040649]
[291.22784424 163.35902405]
[305.22555542 168.75013733]
[319.22326660 174.14125061]
[333.22097778 179.53237915]
[347.21868896 184.92349243]
[361.21640015 190.31460571]
[375.21411133 195.70571899]
[389.21182251 201.09683228]
[403.20953369 206.48796082]
[417.20724487 211.87907410]
[426.36053467 212.04554749]
[431.39254761 217.47898865]
[445.29821777 223.10325623]
[459.20388794 228.72752380]
[472.34002686 220.68090820]
[487.51806641 221.89796448]
[498.93402100 231.70303345]
[502.34649658 246.17691040]
[516.25219727 251.80116272]
[530.15783691 257.42541504]
[544.06353760 263.04968262]
[560.21997070 260.23880005]
[570.52337646 272.99697876]
[564.37451172 288.19973755]
[548.09875488 290.20773315]
[538.43927002 276.95535278]
[524.53356934 271.33111572]
[510.62792969 265.70684814]
[496.72225952 260.08258057]
[484.20715332 268.11441040]
[469.18466187 267.22622681]
[457.42825317 257.54943848]
[453.57965088 242.63319397]
[439.67398071 237.00892639]
[425.76831055 231.38465881]
[411.81613159 225.87678528]
[397.81842041 220.48567200]
[383.82070923 215.09454346]
[369.82299805 209.70343018]
[355.82528687 204.31231689]
[341.82757568 198.92120361]
[327.82986450 193.53007507]
[313.83215332 188.13896179]
[299.83444214 182.74784851]
[285.83673096 177.35673523]
[271.79446411 172.08276367]
[257.70864868 166.92630005]
[243.62278748 161.76982117]
[230.26220703 168.25291443]
[215.90371704 163.22418213]
[209.19424438 149.16641235]
[195.10839844 144.00994873]
[181.02256775 138.85348511]
[166.93672180 133.69702148]
[152.32530212 136.58760071]
[142.02597046 124.57783508]
[127.94013214 119.42137146]
[113.85429382 114.26490784]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 92]
[3 91]
[4 90]
[5 89]
[6 88]
[7 87]
[8 86]
[10 85]
[11 84]
[12 83]
[13 82]
[14 79]
[15 78]
[16 77]
[17 76]
[18 75]
[19 74]
[20 73]
[21 72]
[22 71]
[23 50]
[24 49]
[25 48]
[26 47]
[27 46]
[28 45]
[31 42]
[93 115]
[94 114]
[95 113]
[96 112]
[97 111]
[98 110]
[99 109]
[116 187]
[117 186]
[118 185]
[120 183]
[121 182]
[122 181]
[123 180]
[126 177]
[127 176]
[128 175]
[130 174]
[131 173]
[132 172]
[133 171]
[134 170]
[135 169]
[136 168]
[137 167]
[138 166]
[139 165]
[141 164]
[142 163]
[143 162]
[147 158]
[148 157]
[149 156]
[150 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
