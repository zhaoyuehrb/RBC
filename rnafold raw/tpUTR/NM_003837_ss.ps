%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 22:31:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAGUUUGACCCCACAUGCCCUCUUCUGUUUGUCUUGCACCUUGUCUAAGGACCCUAAAUGAACGAUAAACAGAGAUGGUAGCUAUGAGUAUACAAAAGGUAAAUCCACUUAAUCACAUACAGAAGAGCAACAACAAACUGCUUACGACAGGUUUGGAAGCCACAGGCGAUUCUAUGGUCAAUGUGAAGGACUAGAAAUAAAAACCCACAUGUGGAAAGUGCGA\
) } def
/len { sequence length } bind def

/coor [
[85.65122986 362.20343018]
[70.75872040 359.73043823]
[57.08615494 353.33016968]
[45.64813232 343.47753906]
[37.29343414 330.90368652]
[32.64202881 316.54168701]
[32.03908539 301.45730591]
[35.52934265 286.76986694]
[42.85380173 273.56930542]
[53.46893692 262.83517456]
[66.58703613 255.36402893]
[81.23465729 251.71028137]
[81.65348053 236.71612549]
[82.07230377 221.72198486]
[82.49112701 206.72782898]
[82.90995789 191.73367310]
[83.32878113 176.73951721]
[83.74760437 161.74537659]
[72.25693512 152.10356140]
[57.56330872 155.11972046]
[45.60079956 165.47390747]
[31.57768059 160.45381165]
[16.88405228 163.46997070]
[2.19042301 166.48614502]
[-5.57731342 171.27268982]
[-12.72935295 169.44033813]
[-27.46366119 172.25106812]
[-42.19797134 175.06178284]
[-56.93227768 177.87249756]
[-71.66658783 180.68322754]
[-86.40089417 183.49394226]
[-101.13520813 186.30465698]
[-115.86951447 189.11538696]
[-130.60382080 191.92610168]
[-137.28155518 205.80824280]
[-150.69630432 213.01228333]
[-165.60444641 210.96012878]
[-176.31730652 200.64640808]
[-191.05160522 203.45713806]
[-196.44674683 220.19114685]
[-209.51164246 231.82371521]
[-226.58229065 235.21348572]
[-242.93217468 229.51400757]
[-254.08091736 216.38276672]
[-268.73101807 219.60380554]
[-283.38110352 222.82482910]
[-295.11968994 234.27636719]
[-310.83087158 229.57633972]
[-314.35235596 213.55975342]
[-302.06152344 202.70307922]
[-286.60211182 208.17474365]
[-271.95202637 204.95372009]
[-257.30194092 201.73268127]
[-254.80349731 189.35943604]
[-247.78802490 178.80938721]
[-237.26689148 171.66716003]
[-224.78105164 169.02149963]
[-212.17547607 171.29942322]
[-201.32644653 178.19772339]
[-193.86231995 188.72282410]
[-179.12802124 185.91210938]
[-172.96418762 172.37898254]
[-159.85839844 164.98289490]
[-144.73370361 166.74273682]
[-133.41453552 177.19178772]
[-118.68023682 174.38107300]
[-103.94592285 171.57035828]
[-89.21161652 168.75962830]
[-74.47731018 165.94891357]
[-59.74300003 163.13819885]
[-45.00868988 160.32746887]
[-30.27438164 157.51675415]
[-15.54007339 154.70603943]
[-0.82574570 151.79251099]
[13.86788273 148.77635193]
[28.56151199 145.76017761]
[39.47303391 135.62173462]
[54.54713821 140.42610168]
[69.24076843 137.40992737]
[46.81779480 112.05787659]
[45.05883789 74.35353851]
[69.51821136 40.63593674]
[66.60469818 25.92160797]
[63.69118500 11.20728111]
[47.98061752 6.03733063]
[37.08568954 -6.28144932]
[33.91101837 -22.32179260]
[39.23071671 -37.68437195]
[51.50232315 -48.20436859]
[48.38364792 -62.87657928]
[45.26497269 -77.54879761]
[42.14629745 -92.22100830]
[26.30471611 -95.95370483]
[13.72343254 -106.18641663]
[6.89086390 -120.82979584]
[7.12978792 -136.92878723]
[14.34155941 -151.25895691]
[27.03604507 -160.97230530]
[23.71281815 -175.59954834]
[20.38959122 -190.22679138]
[17.06636238 -204.85403442]
[3.56100702 -213.06262207]
[-0.10315385 -228.43627930]
[8.24776173 -241.85409546]
[23.65930367 -245.35551453]
[36.98807907 -236.86320496]
[40.32635880 -221.41549683]
[31.69360352 -208.17726135]
[35.01683044 -193.55001831]
[38.34005737 -178.92277527]
[41.66328430 -164.29553223]
[55.31676483 -161.86558533]
[67.05088043 -154.39328003]
[75.07751465 -142.97816467]
[78.15863037 -129.32354736]
[75.79718781 -115.48230743]
[68.31693268 -103.54833221]
[56.81851196 -95.33968353]
[59.93718719 -80.66747284]
[63.05586243 -65.99525452]
[66.17453766 -51.32304382]
[79.40818787 -47.97043610]
[89.95832062 -39.20262146]
[95.73107910 -26.68566132]
[95.54892731 -12.83670139]
[89.39043427 -0.35726058]
[78.40550995 8.29376602]
[81.31902313 23.00809288]
[84.23254395 37.72241974]
[91.24373627 40.38572311]
[91.97666931 25.40363884]
[106.45201111 21.47116280]
[114.66499329 34.02293396]
[105.26612091 45.71232605]
[112.27731323 48.37562943]
[124.22525787 39.30664062]
[136.17320251 30.23765564]
[148.12115479 21.16866875]
[160.06910706 12.09968281]
[172.01705933 3.03069568]
[170.01249695 -12.19682312]
[175.90507507 -26.38037109]
[188.10972595 -35.70464325]
[203.34346008 -37.66146088]
[217.50846863 -31.72444916]
[226.79443359 -19.49063110]
[228.70349121 -4.25084591]
[222.72210693 9.89548206]
[210.45924377 19.14306259]
[195.21354675 21.00434113]
[181.08604431 14.97864437]
[169.13809204 24.04763031]
[157.19013977 33.11661911]
[145.24220276 42.18560410]
[133.29425049 51.25459290]
[121.34629822 60.32357788]
[124.20432281 67.25767517]
[139.07260132 69.24121094]
[129.92037964 81.12586212]
[132.77841187 88.05995941]
[147.64663696 86.07611084]
[162.51487732 84.09226990]
[177.41520691 76.00421143]
[189.31199646 88.08323669]
[180.99838257 102.85890198]
[164.49871826 98.96050262]
[149.63049316 100.94434357]
[134.76225281 102.92819214]
[133.66662598 110.34773254]
[131.47538757 125.18682098]
[130.37976074 132.60636902]
[144.04002380 138.80293274]
[157.70027161 144.99949646]
[171.36053467 151.19606018]
[177.95040894 150.93266296]
[182.94003296 153.62643433]
[185.31193542 157.76109314]
[198.79385376 164.33665466]
[212.27575684 170.91223145]
[225.75767517 177.48779297]
[238.88986206 169.39155579]
[254.31407166 169.70320129]
[267.10848999 178.32330322]
[273.19049072 192.50120544]
[270.61929321 207.71279907]
[260.21539307 219.10411072]
[245.29859924 223.04022217]
[230.62882996 218.26513672]
[220.88716125 206.30255127]
[219.18209839 190.96971130]
[205.70019531 184.39413452]
[192.21827698 177.81857300]
[178.73637390 171.24301147]
[165.16395569 164.85632324]
[151.50370789 158.65974426]
[137.84346008 152.46318054]
[124.18319702 146.26661682]
[117.82283783 150.24101257]
[126.84004974 162.22808838]
[135.85725403 174.21516418]
[149.32667542 180.81628418]
[153.24298096 195.29600525]
[144.93728638 207.78660583]
[130.06977844 209.77592468]
[118.77246857 199.90826416]
[118.74417114 184.90859985]
[111.92314148 171.54919434]
[105.10211945 158.18980408]
[98.74175262 162.16419983]
[98.32292938 177.15834045]
[97.90410614 192.15249634]
[97.48528290 207.14665222]
[97.06645966 222.14080811]
[96.64763641 237.13494873]
[96.22880554 252.12910461]
[110.64962769 256.59481812]
[123.33022308 264.78659058]
[133.32962036 276.09652710]
[139.90577698 289.68536377]
[142.57072449 304.54473877]
[141.12667847 319.57192993]
[135.68081665 333.65191650]
[126.63725281 345.73977661]
[114.66708374 354.93853760]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 215]
[13 214]
[14 213]
[15 212]
[16 211]
[17 210]
[18 209]
[19 79]
[20 78]
[22 76]
[23 75]
[24 74]
[26 73]
[27 72]
[28 71]
[29 70]
[30 69]
[31 68]
[32 67]
[33 66]
[34 65]
[38 61]
[39 60]
[44 53]
[45 52]
[46 51]
[82 129]
[83 128]
[84 127]
[89 121]
[90 120]
[91 119]
[92 118]
[98 111]
[99 110]
[100 109]
[101 108]
[135 156]
[136 155]
[137 154]
[138 153]
[139 152]
[140 151]
[160 168]
[161 167]
[162 166]
[171 197]
[172 196]
[173 195]
[174 194]
[177 193]
[178 192]
[179 191]
[180 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
