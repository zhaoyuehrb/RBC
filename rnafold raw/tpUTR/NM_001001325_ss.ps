%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 03:53:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGAGUGGACUUGAAUGUGGAAGAUAUCUUCUUUUUUUUUUCCUCCAUGUCUCCAAUCUCCCUCUUGCGCUUUUUACAUCUCCUUGCAUUUGUUCUUCAUGACAAAGAGCUAUCACUACUGAGCUUGUAGCAGAUUGUUCAAAGUUCCUUCCAUGGACCUCUCCCCUCACUGACUGAUUGCCUUCCAUAGUCUCCCUAAUAAAUACACUUUUAUGAAAGUC\
) } def
/len { sequence length } bind def

/coor [
[-5.29718828 244.07112122]
[-20.23101234 245.42642212]
[-33.74707794 239.16691589]
[-45.93204498 247.91485596]
[-58.11701584 256.66281128]
[-63.25774765 264.20336914]
[-70.53688049 265.44689941]
[-82.84441376 274.02151489]
[-95.15195465 282.59616089]
[-102.58914185 299.44570923]
[-120.12349701 300.24166870]
[-132.30845642 308.98962402]
[-144.49343872 317.73757935]
[-151.96867371 336.46441650]
[-171.28065491 337.51974487]
[-183.21318054 346.60900879]
[-195.14570618 355.69827271]
[-207.07824707 364.78753662]
[-219.01077271 373.87680054]
[-230.94329834 382.96606445]
[-242.87583923 392.05532837]
[-249.16548157 406.57260132]
[-263.97848511 408.12966919]
[-275.91101074 417.21893311]
[-271.38027954 431.68432617]
[-272.07333374 446.82684326]
[-277.90652466 460.81790161]
[-288.17541504 471.96804810]
[-301.64001465 478.93081665]
[-316.67440796 480.86541748]
[-331.46313477 477.53826904]
[-344.22033691 469.35113525]
[-353.40554810 457.29263306]
[-357.90963745 442.81887817]
[-357.18865967 427.67767334]
[-351.32971191 413.69738770]
[-341.04028320 402.56619263]
[-327.56286621 395.62826538]
[-312.52493286 393.72134399]
[-297.74237061 397.07574463]
[-285.00027466 405.28637695]
[-273.06774902 396.19711304]
[-267.63159180 382.32998657]
[-251.96510315 380.12280273]
[-240.03256226 371.03353882]
[-228.10003662 361.94427490]
[-216.16751099 352.85501099]
[-204.23497009 343.76574707]
[-192.30244446 334.67648315]
[-180.36991882 325.58721924]
[-179.91850281 315.38879395]
[-173.80308533 306.94232178]
[-163.84475708 303.17431641]
[-153.24137878 305.55261230]
[-141.05641174 296.80465698]
[-128.87144470 288.05670166]
[-126.60510254 276.17950439]
[-116.53220367 268.79089355]
[-103.72660065 270.28863525]
[-91.41905975 261.71398926]
[-79.11151886 253.13934326]
[-66.86495972 244.47782898]
[-54.67999268 235.72988892]
[-42.49502563 226.98194885]
[-44.10395050 212.17393494]
[-38.04450226 198.45756531]
[-25.85243988 189.55700684]
[-10.74305820 187.94349670]
[3.23646545 194.14996338]
[15.42143345 185.40202332]
[27.60640144 176.65406799]
[39.79137039 167.90612793]
[51.97633743 159.15818787]
[64.16130829 150.41023254]
[50.98772049 157.58357239]
[36.32798004 160.76036072]
[21.36665344 159.68391418]
[7.31268311 154.44122314]
[-4.69831133 145.45588684]
[-13.69578934 133.45401001]
[-18.95271492 119.40534973]
[-20.04430580 104.44512177]
[-16.88235664 89.78216553]
[-9.72236633 76.60132599]
[0.85710549 65.96766663]
[14.00119305 58.74042892]
[28.64779663 55.50360870]
[43.61340714 56.51875305]
[57.68502045 61.70182419]
[52.09217072 47.78348923]
[46.49932480 33.86515427]
[40.90647888 19.94681740]
[35.31362915 6.02848196]
[29.72078323 -7.88985348]
[15.08799934 -13.86121655]
[9.04055405 -28.46272087]
[15.16628933 -43.03155518]
[29.83091545 -48.92428589]
[44.33417130 -42.64486313]
[50.07152939 -27.91875458]
[43.63911819 -13.48270035]
[49.23196411 0.43563464]
[54.82481384 14.35397053]
[60.41765976 28.27230453]
[66.01050568 42.19063950]
[71.60335541 56.10897446]
[86.60185242 55.89671326]
[91.79858398 41.82567978]
[96.99532318 27.75464821]
[102.19205475 13.68361664]
[99.71498871 -1.94247460]
[111.38246155 -11.20095253]
[116.57919312 -25.27198410]
[121.77593231 -39.34301758]
[118.24624634 -57.41951752]
[132.17822266 -68.09600067]
[137.17530823 -82.23915863]
[142.17240906 -96.38232422]
[147.16950989 -110.52548218]
[139.06800842 -123.90082550]
[141.51046753 -139.34648132]
[153.34364319 -149.56948853]
[168.98027039 -149.74287415]
[181.03720093 -139.78474426]
[183.82153320 -124.39703369]
[176.01858521 -110.84535217]
[161.31266785 -105.52838898]
[156.31556702 -91.38522339]
[151.31848145 -77.24206543]
[146.32138062 -63.09890366]
[151.25135803 -52.05808640]
[147.21017456 -40.23761368]
[135.84695435 -34.14628220]
[130.65022278 -20.07525063]
[125.45349121 -6.00421762]
[128.30226135 8.61541843]
[116.26308441 18.88035011]
[111.06635284 32.95138168]
[105.86962128 47.02241516]
[100.67288208 61.09344864]
[106.16045380 66.20584869]
[117.13558197 76.43064880]
[122.62314606 81.54304504]
[136.29156494 75.36452484]
[145.67967224 62.62977219]
[160.46414185 64.43784332]
[174.13256836 58.25932312]
[187.80099487 52.08080292]
[193.14593506 37.20777130]
[207.47763062 30.54607010]
[222.29331970 36.04796600]
[228.80311584 50.44928360]
[223.14489746 65.20597839]
[208.67555237 71.56316376]
[193.97950745 65.74922943]
[180.31108093 71.92774963]
[166.64265442 78.10626984]
[158.23220825 90.39909363]
[142.47009277 89.03295898]
[128.80166626 95.21147156]
[128.74859619 102.71128845]
[143.74821472 102.81742096]
[158.74784851 102.92355347]
[173.74746704 103.02968597]
[188.04582214 98.49566650]
[196.77619934 110.69322205]
[187.87333679 122.76545715]
[173.64134216 118.02931213]
[158.64170837 117.92317963]
[143.64208984 117.81704712]
[128.64245605 117.71091461]
[128.58940125 125.21072388]
[142.16902161 131.58204651]
[155.74865723 137.95336914]
[169.32827759 144.32467651]
[183.04008484 150.40634155]
[196.87788391 156.19557190]
[211.40350342 149.96809387]
[226.04695129 155.91326904]
[232.12051392 170.50392151]
[226.02085876 185.08369446]
[211.36680603 191.00265503]
[196.85234070 184.74919128]
[191.08863831 170.03337097]
[177.25083923 164.24412537]
[173.87371826 165.23103333]
[169.85162354 164.63619995]
[165.93092346 162.17460632]
[162.95695496 157.90431213]
[149.37733459 151.53298950]
[135.79769897 145.16166687]
[122.21807861 138.79034424]
[116.91477203 144.09365845]
[127.52137756 154.70025635]
[138.12780762 165.30702209]
[127.52088165 175.91329956]
[116.91477203 165.30685425]
[106.30817413 154.70025635]
[101.00487518 160.00355530]
[107.37619019 173.58317566]
[113.74751282 187.16281128]
[120.11883545 200.74243164]
[126.49015045 214.32206726]
[141.43733215 219.45600891]
[148.30116272 233.69200134]
[143.00947571 248.58406067]
[128.70172119 255.29701233]
[113.86643982 249.84815979]
[107.30513763 235.47023010]
[112.91052246 220.69338989]
[106.53920746 207.11375427]
[100.16788483 193.53413391]
[93.79656219 179.95449829]
[87.42524719 166.37487793]
[72.90924835 162.59519958]
[60.72428131 171.34315491]
[48.53931427 180.09109497]
[36.35434723 188.83903503]
[24.16937828 197.58699036]
[11.98441124 206.33493042]
[13.39486885 221.56509399]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 64]
[4 63]
[5 62]
[7 61]
[8 60]
[9 59]
[11 56]
[12 55]
[13 54]
[15 50]
[16 49]
[17 48]
[18 47]
[19 46]
[20 45]
[21 44]
[23 42]
[24 41]
[69 220]
[70 219]
[71 218]
[72 217]
[73 216]
[74 215]
[89 106]
[90 105]
[91 104]
[92 103]
[93 102]
[94 101]
[107 140]
[108 139]
[109 138]
[110 137]
[112 135]
[113 134]
[114 133]
[116 130]
[117 129]
[118 128]
[119 127]
[143 160]
[144 159]
[146 157]
[147 156]
[148 155]
[172 192]
[173 191]
[174 190]
[175 189]
[176 185]
[177 184]
[199 214]
[200 213]
[201 212]
[202 211]
[203 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
