%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 10:30:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCUAGGGCCCCCACCCUCUCACUGAGAUGCCCCAAUCUCACAUUUCUGCCCUCCACCUUGGCGGUCAGCAGCCCUUCAAAGCCUCUAGCAUUGGCACUGGGGGCUAGCAGUCCACUGAGAACUUCAUGGGGUCCUGCUCCCCACCCUACCCCCAGUUUAUUGAACCUACAGUGAUAAUAAUUAGCAUGUGUCAUAAUCUGUGGCUGCCCAAAAAU\
) } def
/len { sequence length } bind def

/coor [
[407.27261353 277.12298584]
[394.28222656 269.62298584]
[381.29183960 262.12298584]
[368.30145264 254.62297058]
[350.77529907 255.56594849]
[341.70635986 239.53671265]
[328.60974121 232.22381592]
[315.51309204 224.91093445]
[302.41647339 217.59805298]
[289.31985474 210.28515625]
[276.22320557 202.97227478]
[263.12658691 195.65939331]
[250.02995300 188.34651184]
[236.93333435 181.03361511]
[223.39360046 191.14817810]
[206.73970032 194.33433533]
[190.31567383 189.90303040]
[177.44099426 178.69969177]
[170.73963928 162.94349670]
[171.60545349 145.78785706]
[158.30442810 138.85366821]
[145.00341797 131.91949463]
[131.70239258 124.98531342]
[118.40137482 118.05113220]
[102.09567261 136.02392578]
[70.87235260 136.10899353]
[58.33346939 144.34162903]
[45.79458618 152.57427979]
[33.25570297 160.80693054]
[20.71682167 169.03956604]
[8.17793941 177.27221680]
[5.21551800 192.79637146]
[-7.90324354 201.60963440]
[-23.39521790 198.48326111]
[-32.06929016 185.27204895]
[-28.77928734 169.81399536]
[-15.47711182 161.28007507]
[-0.05470520 164.73333740]
[12.48417664 156.50068665]
[25.02305984 148.26803589]
[37.56194305 140.03540039]
[50.10082245 131.80274963]
[62.63970566 123.57010651]
[60.82876968 116.29202271]
[46.27260208 119.91389465]
[33.54806900 127.85657501]
[22.06204414 118.20923615]
[27.68786049 104.30419159]
[42.65073395 105.35772705]
[57.20690155 101.73585510]
[55.39596939 94.45777130]
[40.46112823 93.06114197]
[25.52628899 91.66451263]
[16.09463120 103.87300873]
[1.55215931 109.02277374]
[-13.46067429 105.47053528]
[-24.15332794 94.34980774]
[-27.11381721 79.20915985]
[-21.39745903 64.87993622]
[-8.82832432 55.93452454]
[6.58282423 55.22737885]
[19.91834450 62.98414993]
[26.92291832 76.72967529]
[41.85775757 78.12630463]
[56.79259872 79.52293396]
[64.84452820 66.86724091]
[57.25154877 53.93099213]
[43.59313965 45.94610214]
[43.82338715 31.05327606]
[30.16498184 23.06838608]
[30.39523125 8.17556095]
[22.80224991 -4.76069212]
[15.11667824 -17.64215088]
[7.33891201 -30.46815491]
[-0.43885389 -43.29415894]
[-8.21661949 -56.12015915]
[-15.99438572 -68.94616699]
[-23.77215195 -81.77216339]
[-30.89338875 -87.48310089]
[-31.56797409 -94.83840942]
[-39.16095352 -107.77466583]
[-54.19217300 -111.86125183]
[-61.70825577 -125.08861542]
[-57.71968842 -139.39340210]
[-65.31266785 -152.32965088]
[-72.90564728 -165.26591492]
[-88.32421875 -165.78666687]
[-101.00059509 -174.57945251]
[-106.88978577 -188.83851624]
[-104.11257935 -204.01385498]
[-93.55516052 -215.26304626]
[-78.58638000 -218.99655151]
[-63.98270416 -214.02297974]
[-54.40412521 -201.92942810]
[-52.90712357 -186.57485962]
[-59.96939468 -172.85888672]
[-52.37641525 -159.92263794]
[-44.78343582 -146.98638916]
[-30.34927177 -143.49488831]
[-22.46462822 -130.48385620]
[-26.22470093 -115.36764526]
[-18.63171959 -102.43138885]
[-10.94614887 -89.54993439]
[-3.16838288 -76.72393036]
[4.60938311 -63.89792633]
[12.38714886 -51.07192230]
[20.16491508 -38.24592209]
[27.94268227 -25.41991806]
[34.09505081 -21.33286285]
[35.73850250 -12.35367298]
[43.33148193 0.58258015]
[56.44678879 7.64218235]
[56.75964355 23.46029472]
[69.87494659 30.51989746]
[70.18779755 46.33800888]
[77.78078461 59.27426529]
[109.87001801 61.73154831]
[127.54822540 82.47729492]
[125.33555603 104.75010681]
[138.63656616 111.68428802]
[151.93759155 118.61846924]
[165.23861694 125.55265045]
[178.53962708 132.48683167]
[188.52816772 123.84611511]
[200.82814026 119.12373352]
[213.96896362 118.86107635]
[226.38734436 123.06769562]
[236.61334229 131.22276306]
[243.44427490 142.33941650]
[246.08622742 155.08421326]
[244.24621582 167.93699646]
[257.34283447 175.24987793]
[270.43948364 182.56275940]
[283.53610229 189.87565613]
[296.63272095 197.18853760]
[309.72937012 204.50141907]
[322.82598877 211.81430054]
[335.92260742 219.12719727]
[349.01925659 226.44007874]
[361.61483765 223.68077087]
[372.37088013 230.03657532]
[375.80145264 241.63259888]
[388.79183960 249.13259888]
[401.78222656 256.63259888]
[414.77261353 264.13259888]
[422.48547363 254.84552002]
[431.76507568 247.02439880]
[442.33450317 240.93196106]
[453.87322998 236.77890015]
[466.02661133 234.71678162]
[478.41683960 234.83245850]
[490.65481567 237.14480591]
[502.35217285 241.60328674]
[513.13372803 248.08894348]
[522.64941406 256.41748047]
[530.58581543 266.34432983]
[536.67614746 277.57196045]
[540.70959473 289.75863647]
[542.53820801 302.52893066]
[542.08227539 315.48519897]
[556.97094727 317.30966187]
[571.85955811 319.13415527]
[586.74816895 320.95861816]
[601.63677979 322.78311157]
[616.52545166 324.60757446]
[628.82116699 314.67828369]
[644.52752686 316.43463135]
[654.32629395 328.83462524]
[652.40399170 344.52157593]
[639.90106201 354.18869019]
[624.23535156 352.10061646]
[614.70092773 339.49621582]
[599.81231689 337.67172241]
[584.92370605 335.84725952]
[570.03509521 334.02276611]
[555.14642334 332.19830322]
[540.25781250 330.37380981]
[536.32305908 336.75875854]
[549.09289551 344.62832642]
[561.86279297 352.49786377]
[576.43945312 356.03634644]
[577.57843018 370.99304199]
[563.70568848 376.69796753]
[553.99322510 365.26776123]
[541.22332764 357.39819336]
[528.45349121 349.52865601]
[524.51867676 355.91357422]
[532.84106445 368.39309692]
[541.16345215 380.87261963]
[545.83282471 383.17922974]
[548.85223389 386.69299316]
[550.03808594 390.58489990]
[549.56182861 394.07290649]
[557.33959961 406.89889526]
[565.11737061 419.72491455]
[572.89514160 432.55090332]
[580.67291260 445.37692261]
[588.45068359 458.20291138]
[601.83355713 468.61129761]
[595.53668213 484.35250854]
[578.66754150 482.65933228]
[575.62469482 465.98068237]
[567.84692383 453.15466309]
[560.06915283 440.32867432]
[552.29138184 427.50265503]
[544.51361084 414.67666626]
[536.73583984 401.85067749]
[528.68389893 389.19497681]
[520.36157227 376.71545410]
[512.03918457 364.23596191]
[495.03149414 372.64941406]
[476.56842041 376.37329102]
[457.90878296 375.22717285]
[440.30599976 369.36029053]
[424.92391968 359.23645020]
[412.75988770 345.59835815]
[404.58013916 329.41333008]
[400.87185669 311.80508423]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 145]
[2 144]
[3 143]
[4 142]
[6 139]
[7 138]
[8 137]
[9 136]
[10 135]
[11 134]
[12 133]
[13 132]
[14 131]
[20 123]
[21 122]
[22 121]
[23 120]
[24 119]
[26 43]
[27 42]
[28 41]
[29 40]
[30 39]
[31 38]
[51 65]
[52 64]
[53 63]
[66 116]
[67 115]
[69 113]
[71 111]
[72 110]
[73 108]
[74 107]
[75 106]
[76 105]
[77 104]
[78 103]
[80 102]
[81 101]
[84 98]
[85 97]
[86 96]
[160 177]
[161 176]
[162 175]
[163 174]
[164 173]
[165 172]
[187 210]
[188 209]
[189 208]
[193 207]
[194 206]
[195 205]
[196 204]
[197 203]
[198 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
