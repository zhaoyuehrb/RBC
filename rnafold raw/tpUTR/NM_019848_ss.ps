%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 19:00:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCUCUGGGUCAAGCUUUCAUCAGCCCCAGCCCCCACACUCCACCAAAGUUCUCAUGCACUAUGCACUCAGAAAAAUCCAGGCUUAUUUUUUUUACUGAUUUUUUAUUCUCCAGCUUUCAGUGCCAAAGAGGCCAUGCUGAGUUAGGUAGGUGGGCGCUGCCCAGAAAAUAUAUUUCAAUAAAAGAGAGAAGCAAGCUUG\
) } def
/len { sequence length } bind def

/coor [
[84.20623016 311.79501343]
[81.19412231 326.48947144]
[78.18201447 341.18392944]
[75.16990662 355.87838745]
[80.86113739 371.25833130]
[70.18058014 383.70248413]
[54.11546707 380.40942383]
[49.19221878 364.76675415]
[60.47544479 352.86630249]
[63.48755264 338.17184448]
[66.49965668 323.47735596]
[69.51176453 308.78289795]
[55.63586807 291.80337524]
[58.88267899 269.83825684]
[77.53489685 257.29156494]
[79.16467285 242.38035583]
[80.79445648 227.46916199]
[82.42424011 212.55796814]
[84.05402374 197.64675903]
[74.55741882 186.22966003]
[75.99784088 171.08438110]
[88.03752899 161.20088196]
[89.66731262 146.28967285]
[72.48982239 136.74632263]
[61.16495895 121.47557068]
[57.29262924 103.51502991]
[61.05205917 86.18324280]
[71.25893402 72.46781158]
[85.66613007 64.51068878]
[82.88291931 49.77115631]
[80.09970093 35.03162766]
[77.31648254 20.29210091]
[67.15294647 8.16720295]
[72.39437866 -5.77470160]
[69.61116028 -20.51423073]
[66.82794189 -35.25375748]
[64.04473114 -49.99328613]
[61.26151276 -64.73281860]
[56.59100342 -72.59155273]
[58.55149460 -79.72310638]
[55.99784088 -94.50413513]
[53.32932663 -109.26486206]
[50.54610825 -124.00438690]
[45.92210388 -109.73489380]
[45.39180374 -94.74427032]
[39.05131912 -81.15021515]
[27.90691566 -71.11018372]
[13.72727013 -66.21757507]
[-1.23723555 -67.24887085]
[-14.61165619 -74.04039764]
[-24.27340126 -85.51431274]
[-28.68910408 -99.84963226]
[-27.15796661 -114.77128601]
[-19.92299080 -127.91111755]
[-8.13240242 -137.18376160]
[6.34256887 -141.11761475]
[21.20522499 -139.08816528]
[36.05362701 -141.21537781]
[22.00308800 -146.46726990]
[7.95255184 -151.71916199]
[-9.00098515 -151.60124207]
[-13.80750561 -167.85958862]
[0.48487809 -176.97901917]
[13.20444870 -165.76969910]
[27.25498581 -160.51780701]
[41.30552292 -155.26591492]
[54.19761276 -162.93363953]
[56.29034042 -177.78692627]
[58.38307190 -192.64022827]
[60.47580338 -207.49353027]
[62.56853104 -222.34683228]
[64.66126251 -237.20013428]
[52.69869614 -228.15043640]
[37.71175766 -228.77632141]
[26.54540443 -238.79194641]
[24.29961967 -253.62286377]
[32.00011444 -266.49542236]
[46.12985992 -271.53033447]
[60.23540497 -266.42800903]
[67.87432861 -253.51902771]
[71.56851196 -268.05700684]
[75.14952850 -282.62329102]
[78.61717224 -297.21694946]
[82.08482361 -311.81063843]
[85.55246735 -326.40432739]
[84.02618408 -332.84921265]
[85.73258209 -338.27960205]
[89.36154938 -341.39447021]
[93.28137970 -355.87326050]
[97.20121002 -370.35202026]
[101.12104034 -384.83081055]
[105.04087067 -399.30957031]
[97.43421173 -412.90283203]
[101.61573029 -427.53054810]
[114.62169647 -434.69854736]
[118.54152679 -449.17733765]
[122.46135712 -463.65609741]
[126.38117981 -478.13488770]
[130.30101013 -492.61364746]
[134.22084045 -507.09243774]
[121.54489899 -515.34930420]
[112.04244232 -527.12036133]
[106.64443207 -541.25250244]
[105.87971497 -556.36108398]
[109.82319641 -570.96606445]
[118.08853912 -583.63647461]
[129.86599731 -593.13104248]
[144.00172424 -598.51953125]
[159.11085510 -599.27416992]
[173.71313477 -595.32086182]
[186.37800598 -587.04705811]
[195.86468506 -575.26324463]
[201.24374390 -561.12390137]
[201.98822021 -546.01428223]
[198.02516174 -531.41461182]
[189.74284363 -518.75531006]
[177.95268250 -509.27655029]
[163.80973816 -503.90695190]
[148.69961548 -503.17260742]
[144.77978516 -488.69381714]
[140.85995483 -474.21505737]
[136.94012451 -459.73626709]
[133.02029419 -445.25750732]
[129.10047913 -430.77871704]
[136.71397400 -418.02841187]
[132.94496155 -403.28903198]
[119.51964569 -395.38973999]
[115.59981537 -380.91098022]
[111.67998505 -366.43218994]
[107.76015472 -351.95343018]
[103.84032440 -337.47463989]
[100.14614105 -322.93667603]
[96.67849731 -308.34298706]
[93.21085358 -293.74929810]
[89.74320984 -279.15563965]
[91.25653839 -271.91598511]
[86.10649109 -264.36282349]
[82.41230774 -249.82484436]
[79.51456451 -235.10739136]
[77.42182922 -220.25410461]
[75.32910156 -205.40080261]
[73.23637390 -190.54750061]
[71.14363861 -175.69419861]
[69.05091095 -160.84089661]
[75.32253265 -149.41378784]
[73.87846375 -136.49473572]
[65.28563690 -126.78760529]
[68.06885529 -112.04808044]
[72.40219116 -106.05435181]
[70.77886963 -97.05778503]
[73.33252716 -82.27675629]
[76.00103760 -67.51602936]
[78.78425598 -52.77650452]
[81.56747437 -38.03697586]
[84.35069275 -23.29744720]
[87.13390350 -8.55791759]
[97.09836578 2.51270962]
[92.05601501 17.50888443]
[94.83923340 32.24841309]
[97.62244415 46.98794174]
[100.40566254 61.72747040]
[116.64654541 63.51239395]
[131.37936401 72.17926025]
[141.70840454 86.73435974]
[145.32504272 104.98210907]
[140.99612427 123.84988403]
[153.04856873 132.77951050]
[165.10102844 141.70915222]
[177.15348816 150.63877869]
[193.16955566 149.70877075]
[203.77484131 161.74653625]
[200.83386230 177.51771545]
[186.60269165 184.92402649]
[171.99826050 178.28396606]
[168.22384644 162.69123840]
[156.17138672 153.76161194]
[144.11894226 144.83197021]
[132.06648254 135.90234375]
[125.19448853 138.90661621]
[131.49041748 152.52136230]
[141.24543762 163.91609192]
[133.57952881 176.80926514]
[118.90926361 173.68144226]
[117.16904449 158.78234863]
[111.45050049 144.91517639]
[104.57850647 147.91946411]
[102.94873047 162.83065796]
[112.56914520 175.08158875]
[110.70389557 190.18045044]
[98.96521759 199.27655029]
[97.33544159 214.18774414]
[95.70565796 229.09893799]
[94.07587433 244.01013184]
[92.44609070 258.92132568]
[99.54812622 263.20443726]
[105.05685425 269.35900879]
[108.50136566 276.82919312]
[109.59594727 284.94805908]
[108.26374054 292.99710083]
[104.64176178 300.26989746]
[99.06710815 306.13406372]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[4 9]
[15 194]
[16 193]
[17 192]
[18 191]
[19 190]
[22 187]
[23 186]
[29 161]
[30 160]
[31 159]
[32 158]
[34 156]
[35 155]
[36 154]
[37 153]
[38 152]
[40 151]
[41 150]
[42 148]
[43 147]
[58 66]
[59 65]
[60 64]
[67 144]
[68 143]
[69 142]
[70 141]
[71 140]
[72 139]
[80 138]
[81 137]
[82 135]
[83 134]
[84 133]
[85 132]
[88 131]
[89 130]
[90 129]
[91 128]
[92 127]
[95 124]
[96 123]
[97 122]
[98 121]
[99 120]
[100 119]
[166 178]
[167 177]
[168 176]
[169 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
