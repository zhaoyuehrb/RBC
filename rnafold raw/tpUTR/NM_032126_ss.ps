%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 01:32:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUUAACUGCCAGCUUGAAAUGAGAGUAAAGAAGAUACAGAGCAAACAGUGUUUCAGAAACUGUCCUGCCCUGGGUGUGAUUCUUUGGCUUCAAUUUGAAGGACGAGGAAUGAUGGGAUUUCAUAUUUUAUUUCACACCAGUUCCUCCUUGUUUCAUCUCUUUGCUAAGCUGGCUGCUUCUACCAUCUAAUAAAUAAUUGGCCAAGUUCUUUU\
) } def
/len { sequence length } bind def

/coor [
[198.17565918 516.51348877]
[190.36119080 503.70980835]
[187.25598145 489.03472900]
[189.21441650 474.16314697]
[196.01300049 460.79229736]
[206.87579346 450.44824219]
[220.56303406 444.31152344]
[235.51260376 443.08251953]
[250.01831055 446.90151978]
[262.42642212 455.33438110]
[256.05957031 441.75265503]
[249.69271851 428.17092896]
[243.32586670 414.58920288]
[236.95903015 401.00747681]
[230.59217834 387.42575073]
[224.22532654 373.84405518]
[217.85847473 360.26232910]
[211.49162292 346.68060303]
[196.57568359 337.43252563]
[198.29986572 319.09783936]
[191.73524475 305.61059570]
[179.20826721 297.55303955]
[180.12573242 281.75845337]
[173.56111145 268.27120972]
[166.99649048 254.78396606]
[160.43186951 241.29672241]
[146.31272888 236.69398499]
[139.46313477 223.10951233]
[144.38665771 208.33126831]
[137.82203674 194.84400940]
[131.25741577 181.35676575]
[118.73043823 173.29920959]
[119.64790344 157.50463867]
[113.08328247 144.01739502]
[106.51866150 130.53013611]
[90.16812897 130.96546936]
[75.19652557 122.90163422]
[65.87464905 107.90935516]
[65.21576691 89.61811829]
[50.26418686 88.41391754]
[35.31259918 87.20972443]
[20.93581963 93.81417847]
[8.87077618 85.08010101]
[-6.08080912 83.87590790]
[-21.03239441 82.67170715]
[-37.48128510 90.95222473]
[-51.52484512 80.42652130]
[-66.49243164 79.44091797]
[-81.46001434 78.45531464]
[-96.42759705 77.46971130]
[-111.39517975 76.48410797]
[-120.48771667 88.94722748]
[-134.88314819 94.49475861]
[-149.98794556 91.35650635]
[-160.98222351 80.53387451]
[-164.35774231 65.48032379]
[-159.03739929 50.99938965]
[-146.71888733 41.71188354]
[-131.33299255 40.58141708]
[-117.78931427 47.96871567]
[-110.40957642 61.51652145]
[-95.44199371 62.50212479]
[-80.47441101 63.48772812]
[-65.50682831 64.47333527]
[-50.53924179 65.45893860]
[-41.24032593 57.72518921]
[-28.76435089 58.42190170]
[-19.82819748 67.72012329]
[-4.87661171 68.92432404]
[10.07497406 70.12851715]
[23.38231659 63.43793488]
[36.51679611 72.25814056]
[51.46838379 73.46233368]
[66.41996765 74.66653442]
[77.44409943 64.49458313]
[77.44409943 49.49458694]
[77.44409943 34.49458694]
[77.44409943 19.49458504]
[77.44409943 4.49458551]
[77.44409943 -10.50541401]
[75.04347992 -25.31206894]
[70.30412292 -39.54367065]
[65.56476593 -53.77527237]
[60.82540894 -68.00687408]
[56.08605194 -82.23847961]
[51.34669495 -96.47007751]
[46.60733795 -110.70168304]
[41.86798096 -124.93328094]
[27.81379890 -136.83340454]
[32.00858688 -153.87500000]
[27.06179237 -168.03582764]
[22.11499596 -182.19667053]
[17.16819763 -196.35749817]
[12.22140217 -210.51832581]
[1.28979003 -223.47735596]
[10.71619511 -237.56916809]
[26.86678505 -232.41215515]
[26.38223457 -215.46513367]
[31.32903099 -201.30429077]
[36.27582932 -187.14346313]
[41.22262573 -172.98262024]
[46.16942215 -158.82179260]
[56.92399597 -153.28826904]
[61.16218948 -141.53356934]
[56.09958267 -129.67263794]
[60.83893967 -115.44104004]
[65.57829285 -101.20943451]
[70.31764984 -86.97783661]
[75.05700684 -72.74623108]
[79.79636383 -58.51462936]
[84.53572083 -44.28302765]
[89.27507782 -30.05142593]
[104.24266815 -29.06582260]
[110.80728912 -42.55306625]
[117.37190247 -56.04030991]
[123.93652344 -69.52755737]
[130.50114441 -83.01480103]
[137.06576538 -96.50204468]
[143.63038635 -109.98928833]
[150.19500732 -123.47653198]
[146.33981323 -139.04948425]
[156.22544861 -151.68490601]
[172.26849365 -151.68997192]
[182.16210938 -139.06080627]
[178.31675720 -123.48541260]
[163.68225098 -116.91191101]
[157.11763000 -103.42466736]
[150.55300903 -89.93742371]
[143.98838806 -76.45018005]
[137.42376709 -62.96293259]
[130.85914612 -49.47568893]
[124.29453278 -35.98844528]
[117.72991180 -22.50120163]
[105.45633698 -11.33584499]
[92.44409943 -10.50541401]
[92.44409943 4.49458551]
[92.44409943 19.49458504]
[92.44409943 34.49458694]
[92.44409943 49.49458694]
[92.44409943 64.49458313]
[103.04792023 64.39440918]
[113.06104279 67.34396362]
[121.64022064 72.99433136]
[128.09251404 80.77368927]
[131.93099976 89.94393158]
[132.91072083 99.67015076]
[131.04234314 109.09645844]
[126.58303070 117.42128754]
[120.00590515 123.96552277]
[126.57052612 137.45277405]
[133.13514709 150.94001770]
[146.13166809 159.96226501]
[144.74465942 174.79214478]
[151.30928040 188.27940369]
[157.87390137 201.76664734]
[172.54205322 207.00907898]
[179.00737000 220.78057861]
[173.91911316 234.73210144]
[180.48373413 248.21934509]
[187.04835510 261.70660400]
[193.61297607 275.19384766]
[206.60949707 284.21609497]
[205.22248840 299.04598999]
[211.78710938 312.53323364]
[223.70045471 317.47122192]
[228.89118958 328.83746338]
[225.07334900 340.31375122]
[231.44020081 353.89547729]
[237.80705261 367.47720337]
[244.17388916 381.05892944]
[250.54074097 394.64062500]
[256.90759277 408.22235107]
[263.27444458 421.80407715]
[269.64129639 435.38580322]
[276.00814819 448.96752930]
[284.96786499 455.55795288]
[286.02001953 465.37261963]
[295.18762207 477.24505615]
[304.35525513 489.11752319]
[313.52285767 500.98995972]
[326.98901367 501.15777588]
[337.74340820 508.93630981]
[341.99206543 521.30499268]
[338.39608765 533.67645264]
[347.38922119 545.68157959]
[356.38238525 557.68670654]
[371.22122192 554.26202393]
[386.16888428 557.17523193]
[398.63562012 565.92169189]
[406.46148682 578.98602295]
[408.29058838 594.10467529]
[403.80603027 608.65832520]
[393.78479004 620.12542725]
[379.96310425 626.51928711]
[364.73568726 626.73205566]
[350.74075317 620.72692871]
[340.40301514 609.54431152]
[335.51354980 595.12164307]
[336.91949463 579.95776367]
[344.37725830 566.67987061]
[335.38409424 554.67474365]
[326.39096069 542.66961670]
[309.65542603 540.99420166]
[299.10314941 527.46600342]
[301.65039062 510.15756226]
[292.48278809 498.28512573]
[283.31518555 486.41268921]
[274.14758301 474.54022217]
[275.97390747 489.42861938]
[272.73849487 504.07556152]
[264.81063843 516.80932617]
[253.09515381 526.17669678]
[238.92909241 531.10845947]
[223.92922974 531.04187012]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 175]
[11 174]
[12 173]
[13 172]
[14 171]
[15 170]
[16 169]
[17 168]
[18 167]
[20 164]
[21 163]
[23 161]
[24 160]
[25 159]
[26 158]
[29 155]
[30 154]
[31 153]
[33 151]
[34 150]
[35 149]
[39 74]
[40 73]
[41 72]
[43 70]
[44 69]
[45 68]
[47 65]
[48 64]
[49 63]
[50 62]
[51 61]
[75 140]
[76 139]
[77 138]
[78 137]
[79 136]
[80 135]
[81 112]
[82 111]
[83 110]
[84 109]
[85 108]
[86 107]
[87 106]
[88 105]
[90 102]
[91 101]
[92 100]
[93 99]
[94 98]
[113 133]
[114 132]
[115 131]
[116 130]
[117 129]
[118 128]
[119 127]
[120 126]
[177 208]
[178 207]
[179 206]
[180 205]
[184 202]
[185 201]
[186 200]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
