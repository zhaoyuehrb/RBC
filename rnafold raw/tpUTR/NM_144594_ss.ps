%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 14:11:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGAAUACCUAUCUCAUCAAAUGCCAGACCCUAGAAGACUGUUGCUUCUUCUUCUACCAGUGGGUUCUCAUUUUCCUCCUAAUCUAAUUAUAGAAUGGUAAACUCCCUGUGACUUUCCAAACUGACAAGCACACUUUUUUCCUCCCCCCUUGAAUCCUCAUUUAAUGCAAGAACCCUCAUACUCAGAAGCUUCCAAAUAAACCUUUGAUACAGAUUGCUUAA\
) } def
/len { sequence length } bind def

/coor [
[22.98750877 694.79681396]
[7.87305784 694.15765381]
[-6.30341768 688.87725830]
[-18.15304947 679.47290039]
[-26.51493263 666.86602783]
[-30.56985474 652.29162598]
[-29.92055702 637.17761230]
[-24.63064766 623.00469971]
[-15.21838188 611.16137695]
[-2.60587478 602.80792236]
[11.97122765 598.76275635]
[12.60499191 583.77618408]
[13.23875713 568.78955078]
[13.87252235 553.80291748]
[4.92325401 538.70300293]
[14.93630791 523.24438477]
[15.35888767 508.25033569]
[15.78146744 493.25628662]
[16.20404816 478.26223755]
[16.62662697 463.26821899]
[17.04920769 448.27416992]
[10.82421303 444.09091187]
[3.26483583 457.04684448]
[-4.29454184 470.00274658]
[-11.85391903 482.95867920]
[-18.26483536 496.51965332]
[-33.26238632 496.24862671]
[-39.17911911 482.46484375]
[-29.04523659 471.40600586]
[-19.90541649 459.51214600]
[-10.76559544 447.61831665]
[-1.62577450 435.72445679]
[-7.85076857 431.54122925]
[-21.57393074 437.59719849]
[-35.29709625 443.65316772]
[-49.02025604 449.70913696]
[-62.74341965 455.76510620]
[-69.32403564 462.08728027]
[-76.70282745 461.80822754]
[-86.13352203 475.22439575]
[-102.44132996 473.49594116]
[-108.85016632 458.40097046]
[-98.76717377 445.46786499]
[-82.56487274 448.00109863]
[-68.79939270 442.04193115]
[-55.07622910 435.98596191]
[-41.35306549 429.92999268]
[-27.62990379 423.87402344]
[-13.90674019 417.81805420]
[6.08797693 415.11276245]
[20.47367859 422.83978271]
[24.03183937 408.26791382]
[27.59000015 393.69604492]
[31.14816093 379.12417603]
[34.70632172 364.55227661]
[28.64222527 356.34124756]
[28.08231926 345.92926025]
[33.45198822 336.73608398]
[43.18931961 331.91390991]
[47.15658951 317.44805908]
[51.12385559 302.98220825]
[54.68201447 288.41033936]
[57.82824707 273.74401855]
[60.97447586 259.07769775]
[64.12070465 244.41136169]
[67.26693726 229.74502563]
[70.41316223 215.07868958]
[73.55939484 200.41236877]
[76.49870300 185.70317078]
[79.23050690 170.95402527]
[81.96230316 156.20487976]
[84.69410706 141.45573425]
[70.60588837 136.27352905]
[58.39158630 126.22838593]
[49.73955154 112.03958893]
[46.05077362 95.01072693]
[48.23890686 76.91278839]
[56.57780838 59.80009079]
[70.61871338 45.77805328]
[61.56431961 33.81903839]
[52.50992966 21.86002731]
[38.01108551 15.52803516]
[36.49726868 0.71055764]
[27.44287682 -11.24845505]
[18.38848495 -23.20746803]
[9.33409214 -35.16648102]
[-5.97796774 -41.03783798]
[-8.28166962 -57.27437210]
[4.79283762 -67.17332458]
[19.79562187 -60.55150604]
[21.29310417 -44.22087097]
[30.34749794 -32.26185989]
[39.40188980 -20.30284691]
[48.45627975 -8.34383488]
[62.30749512 -2.86723089]
[64.46894073 12.80563450]
[73.52333069 24.76464653]
[82.57772827 36.72365952]
[89.93231964 35.25400543]
[86.99301910 20.54480934]
[84.05371094 5.83561277]
[76.71303558 -7.24546051]
[86.88562012 -18.26900482]
[100.51305389 -12.00059605]
[98.76290894 2.89630532]
[101.70220947 17.60550308]
[104.64151764 32.31469727]
[111.99611664 30.84504509]
[115.75920868 16.32474327]
[119.52229309 1.80444133]
[123.28537750 -12.71586037]
[122.40888977 -21.79914474]
[127.20510864 -27.41347504]
[131.17237854 -41.87932587]
[135.13964844 -56.34517288]
[139.00491333 -70.83860779]
[142.76800537 -85.35890961]
[134.53863525 -98.85161591]
[138.34152222 -114.19155121]
[151.92048645 -122.27780151]
[167.21936035 -118.31294250]
[175.16159058 -104.64924622]
[171.03520203 -89.39315033]
[157.28829956 -81.59582520]
[153.52522278 -67.07552338]
[154.88873291 -59.81844330]
[149.60548401 -52.37790680]
[145.63822937 -37.91205597]
[141.67095947 -23.44620895]
[137.80567932 -8.95277309]
[134.04260254 5.56752872]
[130.27951050 20.08783150]
[126.51641846 34.60813141]
[132.02114868 39.70204926]
[142.20898438 28.69259071]
[152.39680481 17.68313408]
[162.58464050 6.67367649]
[172.77246094 -4.33578062]
[182.96029663 -15.34523773]
[193.14811707 -26.35469437]
[199.43537903 -39.97344589]
[214.33042908 -38.20214081]
[217.24845886 -23.48871040]
[204.15757751 -16.16686630]
[193.96975708 -5.15740871]
[183.78192139 5.85204840]
[173.59408569 16.86150551]
[163.40626526 27.87096214]
[153.21842957 38.88042068]
[143.03060913 49.88987732]
[148.53533936 54.98379135]
[162.72077942 50.10803986]
[176.90623474 45.23228836]
[187.25779724 32.51311874]
[203.40351868 35.38503647]
[208.73405457 50.89365768]
[197.76582336 63.08504105]
[181.78198242 59.41773987]
[167.59654236 64.29348755]
[153.41108704 69.16924286]
[157.30052185 100.18419647]
[145.67071533 126.75565338]
[123.88110352 142.28309631]
[99.44325256 144.18753052]
[96.71144867 158.93667603]
[93.97964478 173.68582153]
[91.24784851 188.43496704]
[93.08797455 194.77050781]
[91.67108154 200.26272583]
[88.22572327 203.55859375]
[85.07949829 218.22492981]
[81.93326569 232.89125061]
[78.78703308 247.55758667]
[75.64080811 262.22390747]
[72.49457550 276.89025879]
[69.34834290 291.55657959]
[70.82044983 295.62051392]
[70.91828918 299.54772949]
[69.85256195 302.92431641]
[67.94638062 305.44689941]
[65.58970642 306.94949341]
[61.62243652 321.41534424]
[57.65517044 335.88119507]
[63.62644196 355.14086914]
[49.27819443 368.11044312]
[45.72003555 382.68231201]
[42.16187286 397.25421143]
[38.60371399 411.82608032]
[35.04555130 426.39794922]
[43.65973282 414.11804199]
[56.21860123 405.91592407]
[70.92546844 402.96496582]
[85.67634583 405.68737793]
[98.36096954 413.69363403]
[107.16464996 425.83840942]
[110.82793427 440.38421631]
[108.82672882 455.25012207]
[101.44734955 468.30938721]
[89.74548340 477.69375610]
[75.39522552 482.06066895]
[60.44953156 480.78543091]
[47.04655838 474.05041504]
[37.10374451 462.81918335]
[32.04325485 448.69674683]
[31.62067413 463.69079590]
[31.19809341 478.68484497]
[30.77551460 493.67886353]
[30.35293388 508.67291260]
[29.93035507 523.66699219]
[38.20399475 533.55444336]
[37.54841614 546.02899170]
[28.85912704 554.43670654]
[28.22536278 569.42333984]
[27.59159851 584.40991211]
[26.95783234 599.39654541]
[41.14137268 604.65795898]
[53.00359726 614.04638672]
[61.38236618 626.64208984]
[65.45681763 641.21099854]
[64.82777405 656.32586670]
[59.55686569 670.50592041]
[50.16047668 682.36181641]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 215]
[12 214]
[13 213]
[14 212]
[16 209]
[17 208]
[18 207]
[19 206]
[20 205]
[21 204]
[33 49]
[34 48]
[35 47]
[36 46]
[37 45]
[39 44]
[51 189]
[52 188]
[53 187]
[54 186]
[55 185]
[59 183]
[60 182]
[61 181]
[62 176]
[63 175]
[64 174]
[65 173]
[66 172]
[67 171]
[68 170]
[69 167]
[70 166]
[71 165]
[72 164]
[79 98]
[80 97]
[81 96]
[83 94]
[84 93]
[85 92]
[86 91]
[108 133]
[109 132]
[110 131]
[111 130]
[113 129]
[114 128]
[115 127]
[116 125]
[117 124]
[151 160]
[152 159]
[153 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
