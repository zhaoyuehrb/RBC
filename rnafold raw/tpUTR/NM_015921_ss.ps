%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 15:58:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGCCCUGUUCCUGCUCAUCAUGAAGAUCCCCGCGAUACUUCAACGCCUUCUGACUUCCAGGUGAUGACUGGGCCCCCAAUAAAUCCCGUCUUUGGGUCUCUCUGCC\
) } def
/len { sequence length } bind def

/coor [
[140.28262329 192.94969177]
[151.55783081 183.05679321]
[165.70083618 178.05923462]
[180.69003296 178.67240906]
[169.27693176 168.93890381]
[157.86383057 159.20539856]
[146.45071411 149.47190857]
[131.74613953 147.10028076]
[126.26668549 132.25823975]
[114.85357666 122.52474976]
[103.44047546 112.79124451]
[91.48555756 103.73144531]
[79.02854919 95.37544250]
[66.57153320 87.01943207]
[54.11452103 78.66342926]
[40.33945084 85.31133270]
[25.18639946 84.17916870]
[12.71744156 75.67085266]
[6.22484350 62.15411758]
[7.36202097 47.30243683]
[-5.09499121 38.94643021]
[-17.55200386 30.59042358]
[-26.56982422 28.35568810]
[-30.24282265 21.80979538]
[-42.45385742 13.09827423]
[-54.66489410 4.38675213]
[-66.87593079 -4.32476997]
[-66.48381805 10.67010403]
[-76.61521149 21.73151398]
[-91.58679199 22.65443420]
[-103.00006866 12.92113686]
[-104.45263672 -2.00836587]
[-95.12964630 -13.75919437]
[-80.26026154 -15.73940372]
[-90.79016876 -26.42215538]
[-101.32006836 -37.10490799]
[-116.39663696 -33.83372879]
[-130.84037781 -39.25424576]
[-140.04232788 -51.63679123]
[-141.06620789 -67.03014374]
[-133.58528137 -80.52233124]
[-119.98667908 -87.80805969]
[-104.60968781 -86.56246185]
[-92.36103058 -77.18302155]
[-87.14921570 -62.66267395]
[-90.63731384 -47.63480759]
[-80.10741425 -36.95205688]
[-69.57751465 -26.26930428]
[-58.16440582 -16.53580475]
[-45.95337296 -7.82428360]
[-33.74233627 0.88723862]
[-21.53130150 9.59876060]
[-9.19599628 18.13341141]
[3.26101565 26.48941803]
[15.71802807 34.84542465]
[29.02818680 28.15922737]
[43.99755859 29.03891182]
[56.60002899 37.34819031]
[63.39591599 50.93909836]
[62.47052765 66.20641327]
[74.92754364 74.56242371]
[87.38455200 82.91842651]
[99.84156799 91.27443695]
[103.03392029 90.85958862]
[106.45156860 91.67209625]
[109.61111450 93.79825592]
[112.00457001 97.13337708]
[113.17397308 101.37814331]
[124.58708191 111.11164093]
[136.00018311 120.84513855]
[151.52110291 123.91296387]
[156.18421936 138.05879211]
[167.59732056 147.79229736]
[179.01043701 157.52580261]
[190.42353821 167.25929260]
[199.82420349 168.97615051]
[205.11067200 175.64511108]
[219.29423523 180.52636719]
[233.47779846 185.40760803]
[247.66136169 190.28886414]
[261.84490967 195.17012024]
[272.54519653 184.28587341]
[286.91122437 179.13027954]
[302.09060669 180.72697449]
[315.06945801 188.75892639]
[323.27081299 201.63139343]
[325.06631470 216.78852844]
[320.09942627 231.22088623]
[309.35635376 242.06289673]
[294.97015381 247.16188049]
[279.79718018 245.50543213]
[266.85006714 237.42243958]
[258.69946289 224.51777649]
[256.96365356 209.35368347]
[242.78010559 204.47242737]
[228.59654236 199.59117126]
[214.41299438 194.70991516]
[200.22943115 189.82867432]
[208.37577820 202.42378235]
[211.26148987 217.14360046]
[208.47370911 231.88226318]
[200.41125488 244.53125000]
[188.22758484 253.28099060]
[173.66567993 256.87973022]
[158.80879211 254.81263733]
[145.78236389 247.37541199]
[136.44998169 235.63204956]
[132.14672852 221.26255798]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 75]
[5 74]
[6 73]
[7 72]
[9 70]
[10 69]
[11 68]
[12 63]
[13 62]
[14 61]
[15 60]
[20 55]
[21 54]
[22 53]
[24 52]
[25 51]
[26 50]
[27 49]
[34 48]
[35 47]
[36 46]
[77 98]
[78 97]
[79 96]
[80 95]
[81 94]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
