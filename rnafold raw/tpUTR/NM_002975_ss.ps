%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 18:04:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGGCCGGUACCCCGCCUCCCUGCCCAUCCCACCACCCGGCCUUUCCCUGCGCCGUGCCCACCCUCCUCCGGAAUCUCCCUUCCCUUCCUGGCCACGAAUGGCAGCGUCCUCCCCGACCCCCAGUCUGGGCGCUUCUGGGAGGGCUCUUGCGGUGCCGGCACUCCUCCUUGUUAGUGUCUUUCCUUGAAGGGGCGGGCACCAGGCUAGGUCCGGUGCCAAUAAAUCCUUGUGGAAUCUGACUUGAGGGGCAGUG\
AA\
) } def
/len { sequence length } bind def

/coor [
[79.71200562 867.49243164]
[76.62907410 882.17218018]
[73.54613495 896.85192871]
[70.46320343 911.53173828]
[67.38027191 926.21148682]
[76.22893524 939.30639648]
[73.14440155 954.80676270]
[59.95667267 963.51647949]
[44.48978806 960.26824951]
[35.91997910 946.98913574]
[39.33156204 931.55749512]
[52.70050430 923.12854004]
[55.78343964 908.44879150]
[58.86637115 893.76898193]
[61.94930649 879.08923340]
[65.03224182 864.40948486]
[56.69997787 852.11682129]
[59.61738968 837.18554688]
[72.56753540 828.52923584]
[75.65047455 813.84948730]
[70.69417572 799.80371094]
[81.10263062 787.88836670]
[84.18556213 773.20861816]
[87.26849365 758.52886963]
[90.35143280 743.84906006]
[93.43436432 729.16931152]
[96.51730347 714.48956299]
[91.56100464 700.44372559]
[101.96945953 688.52844238]
[105.05239105 673.84869385]
[107.23641205 659.00854492]
[108.51342010 644.06298828]
[109.79042816 629.11743164]
[111.06742859 614.17187500]
[111.15876007 599.17218018]
[110.06382751 584.21221924]
[108.96889496 569.25219727]
[107.87397003 554.29223633]
[99.22827911 542.16369629]
[105.93759155 527.83557129]
[104.84265900 512.87554932]
[103.74772644 497.91558838]
[102.65280151 482.95559692]
[101.55786896 467.99560547]
[90.73571777 461.03375244]
[85.81737518 448.93264771]
[88.80158234 436.01602173]
[98.81921387 427.03918457]
[97.90652466 412.06698608]
[96.99383545 397.09478760]
[96.08113861 382.12255859]
[94.10531616 380.17373657]
[92.77068329 377.33630371]
[92.41530609 373.84643555]
[93.28713226 370.05682373]
[95.50662994 366.40252686]
[95.32398224 351.40365601]
[95.14134216 336.40475464]
[94.95869446 321.40585327]
[94.77604675 306.40698242]
[94.59339905 291.40808105]
[86.70169830 278.77597046]
[94.27039337 264.88259888]
[94.08774567 249.88372803]
[93.90509796 234.88484192]
[93.72245026 219.88595581]
[80.16273499 213.67309570]
[70.60588074 202.14158630]
[66.98867798 187.54443359]
[70.08057404 172.76402283]
[79.32073975 160.74293518]
[92.91889954 153.89813232]
[92.73625183 138.89924622]
[92.55360413 123.90035248]
[92.37095642 108.90146637]
[86.93135071 122.88040161]
[77.14749146 134.25036621]
[64.13601685 141.71371460]
[49.38191605 144.41864014]
[34.56908417 142.05644226]
[21.38810158 134.89671326]
[11.34331226 123.75659943]
[5.58112717 109.90750885]
[4.75918388 94.93004608]
[8.97129059 80.53358459]
[17.73672104 68.36119080]
[30.05507469 59.80209351]
[44.52046204 55.83314514]
[59.48195267 56.90732193]
[73.23198700 62.90202713]
[84.20128632 73.13308716]
[91.13868713 86.43524170]
[89.67978668 71.50635529]
[88.22089386 56.57746887]
[76.93694305 66.46040344]
[62.15303421 63.92346954]
[54.80945969 50.84402466]
[60.34056091 36.90103531]
[74.65325165 32.41250610]
[87.15595245 40.70002747]
[86.60812378 25.71003532]
[78.37197876 12.20165157]
[85.63928986 -0.79971099]
[85.09146118 -15.78970337]
[84.54363251 -30.77969551]
[83.99579620 -45.76968765]
[73.85613251 -61.15707779]
[82.70388031 -76.32696533]
[81.97356415 -91.30918121]
[81.24324799 -106.29138947]
[80.51293945 -121.27359772]
[79.78262329 -136.25581360]
[79.05230713 -151.23802185]
[78.32199097 -166.22023010]
[77.59168243 -181.20243835]
[69.19165802 -194.60954285]
[76.30012512 -207.69842529]
[75.56980896 -222.68063354]
[65.24353027 -237.94342041]
[73.90590668 -253.21992493]
[72.90207672 -268.18627930]
[71.80714417 -283.14627075]
[70.71221924 -298.10626221]
[69.61728668 -313.06625366]
[62.43089676 -328.42178345]
[75.19692993 -339.57815552]
[89.45130157 -330.39941406]
[84.57727051 -314.16116333]
[85.67220306 -299.20120239]
[86.76712799 -284.24121094]
[87.86206055 -269.28121948]
[91.47391510 -262.85882568]
[88.87811279 -254.13261414]
[97.71535492 -245.89971924]
[98.61456299 -233.45378113]
[90.55201721 -223.41094971]
[91.28233337 -208.42874146]
[99.63011932 -196.09327698]
[92.57389069 -181.93275452]
[93.30420685 -166.95054626]
[94.03451538 -151.96833801]
[94.76483154 -136.98612976]
[95.49514771 -122.00391388]
[96.22546387 -107.02170563]
[96.95577240 -92.03948975]
[97.68608856 -77.05728149]
[106.42242432 -68.71739197]
[107.17002106 -56.26143646]
[98.98579407 -46.31752014]
[99.53362274 -31.32752609]
[100.08145142 -16.33753395]
[100.62928009 -1.34754133]
[108.82624817 11.08865738]
[101.59812164 25.16220474]
[102.14595032 40.15219879]
[103.14978027 55.11857224]
[104.60867310 70.04745483]
[106.06756592 84.97634125]
[119.61027527 91.42576599]
[132.12023926 83.14924622]
[144.63021851 74.87273407]
[157.14018250 66.59621429]
[169.65014648 58.31969833]
[182.16011047 50.04318237]
[181.14550781 34.71784210]
[187.94390869 20.94549751]
[200.72656250 12.43084717]
[216.05500793 11.46428680]
[229.80596924 18.30581665]
[238.28051758 31.11509895]
[239.19902039 46.44650269]
[232.31442261 60.17595673]
[219.47863770 68.61030579]
[204.14443970 69.48075104]
[190.43663025 62.55315018]
[177.92666626 70.82966614]
[165.41670227 79.10618591]
[152.90672302 87.38269806]
[140.39675903 95.65921783]
[127.88679504 103.93572998]
[117.32303619 109.56797028]
[107.36985016 108.71881866]
[107.55249023 123.71771240]
[107.73513794 138.71659851]
[107.91778564 153.71548462]
[121.67858887 160.22714233]
[131.20874023 172.01963806]
[134.65963745 186.72038269]
[131.39897156 201.40127563]
[122.12574768 213.16210938]
[108.72134399 219.70330811]
[108.90398407 234.70219421]
[109.08663177 249.70108032]
[109.26927948 264.69998169]
[117.17404175 278.40490723]
[109.59228516 291.22543335]
[109.77493286 306.22433472]
[109.95758057 321.22320557]
[110.14022827 336.22210693]
[110.32287598 351.22100830]
[110.50551605 366.21987915]
[111.05335236 381.20986938]
[111.96604156 396.18209839]
[112.87873077 411.15429688]
[113.79141998 426.12649536]
[127.10630035 437.49432373]
[128.04656982 454.63790894]
[116.51785278 466.90066528]
[117.61278534 481.86065674]
[118.70771027 496.82064819]
[119.80264282 511.78063965]
[120.89757538 526.74060059]
[129.62158203 539.93920898]
[122.83395386 553.19726562]
[123.92887878 568.15728760]
[125.02381134 583.11724854]
[126.11874390 598.07727051]
[132.69567871 584.59600830]
[144.14434814 574.90435791]
[158.52635193 570.64312744]
[173.40670776 572.53387451]
[186.26603699 580.25640869]
[194.92713928 592.50329590]
[197.92359924 607.20092773]
[194.74809265 621.86096191]
[185.93826294 634.00128174]
[172.98570251 641.56640625]
[158.08338928 643.27551270]
[143.75440979 638.83923340]
[132.42481995 629.00860596]
[126.01297760 615.44891357]
[124.73596954 630.39447021]
[123.45896149 645.33996582]
[122.18195343 660.28552246]
[131.80758667 648.78131104]
[145.86773682 643.55523682]
[160.67053223 645.97955322]
[172.32907104 655.41766357]
[177.78205872 669.39141846]
[175.59767151 684.23150635]
[166.34948730 696.04125977]
[152.46586609 701.71972656]
[137.59234619 699.77587891]
[125.63441467 690.72003174]
[119.73215485 676.93164062]
[116.64922333 691.61138916]
[121.38500214 706.70715332]
[111.19706726 717.57250977]
[108.11412811 732.25225830]
[105.03119659 746.93200684]
[101.94826508 761.61175537]
[98.86532593 776.29156494]
[95.78239441 790.97131348]
[100.51817322 806.06707764]
[90.33023834 816.93243408]
[87.24729919 831.61218262]
[95.62108612 844.74676514]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 16]
[2 15]
[3 14]
[4 13]
[5 12]
[19 256]
[20 255]
[22 253]
[23 252]
[24 251]
[25 250]
[26 249]
[27 248]
[29 246]
[30 245]
[31 234]
[32 233]
[33 232]
[34 231]
[35 217]
[36 216]
[37 215]
[38 214]
[40 212]
[41 211]
[42 210]
[43 209]
[44 208]
[48 205]
[49 204]
[50 203]
[51 202]
[56 201]
[57 200]
[58 199]
[59 198]
[60 197]
[61 196]
[63 194]
[64 193]
[65 192]
[66 191]
[72 185]
[73 184]
[74 183]
[75 182]
[92 158]
[93 157]
[94 156]
[100 155]
[101 154]
[103 152]
[104 151]
[105 150]
[106 149]
[108 146]
[109 145]
[110 144]
[111 143]
[112 142]
[113 141]
[114 140]
[115 139]
[117 137]
[118 136]
[120 133]
[121 131]
[122 130]
[123 129]
[124 128]
[159 180]
[160 179]
[161 178]
[162 177]
[163 176]
[164 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
