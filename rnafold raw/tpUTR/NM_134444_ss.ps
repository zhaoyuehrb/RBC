%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 09:53:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGCGAGGAACCUGGGCUCUGACUCGAACACCUGCAAAGGACAGGGACUGGGACCGUUACUUACAUGACACUGCACCCAGGAGAUACAAAUCAUUGAUACUCUGAGUUGUGAGAUUUCUGGCACCCCAUUCAUAGAUUUGAUAUGAUACACGUGGUUUUUAUGUGCUCUGUGGCCUUGGAUGAGUCACUGAAAGGCCUUCAUGGUCUCUCGGUCUCACAAGGACCUCUUAACCCCUCAAUAAAGUGUUACAUUUC\
UAAACAUUGGAA\
) } def
/len { sequence length } bind def

/coor [
[80.22263336 217.03411865]
[81.27679443 205.46235657]
[85.51914978 194.62416077]
[92.62393188 185.38116455]
[102.03737640 178.47129822]
[97.53610992 164.16261292]
[93.03484344 149.85392761]
[88.53356934 135.54524231]
[81.20924377 133.93147278]
[66.56058502 130.70396423]
[59.23625946 129.09019470]
[49.13846970 140.18229675]
[39.04068375 151.27439880]
[28.94289398 162.36650085]
[18.84510422 173.45860291]
[15.27655029 188.87210083]
[0.98720354 193.07493591]
[-9.11058521 204.16703796]
[-19.20837402 215.25914001]
[-29.30616188 226.35122681]
[-39.40394974 237.44332886]
[-24.47459602 235.98924255]
[-10.95547009 242.48794556]
[-2.76626301 255.05525208]
[-2.28132772 270.04739380]
[-9.64126396 283.11764526]
[-22.71215630 290.47644043]
[-37.70427322 289.99017334]
[-50.27084732 281.79986572]
[-56.76837158 268.28018188]
[-55.31385422 253.35324097]
[-66.40595245 263.45101929]
[-77.49805450 273.54879761]
[-81.96205139 289.32870483]
[-97.92405701 293.08984375]
[-108.96373749 280.96310425]
[-103.72440338 265.42343140]
[-87.59584045 262.45672607]
[-76.50373840 252.35891724]
[-65.41164398 242.26113892]
[-62.15773010 231.65354919]
[-50.49604797 227.34555054]
[-40.39826202 216.25344849]
[-30.30047226 205.16134644]
[-20.20268440 194.06924438]
[-10.10489559 182.97714233]
[-7.25860262 168.35702515]
[7.75300550 163.36080933]
[17.85079384 152.26870728]
[27.94858170 141.17660522]
[38.04637146 130.08451843]
[48.14416122 118.99240875]
[33.96467972 123.88550568]
[19.78520203 128.77861023]
[5.90449953 123.09299469]
[-5.27979088 113.09741974]
[-12.48289108 99.94008636]
[-14.87735558 85.13243103]
[-12.18812466 70.37546539]
[-4.72411919 57.36437225]
[6.65724468 47.59377670]
[20.64855003 42.18606186]
[35.64256668 41.76243210]
[49.91688156 46.37155151]
[61.83174896 55.48395538]
[70.01814270 68.05210114]
[81.18727112 78.06462097]
[92.35640717 88.07713318]
[87.35482788 73.93556213]
[82.35324860 59.79397964]
[68.36995697 52.93064880]
[63.49909973 38.51782608]
[70.12841797 25.22919464]
[65.12683868 11.08761597]
[60.12525940 -3.05396175]
[55.12368011 -17.19553947]
[46.90010071 -29.74036789]
[35.92713165 -39.96748352]
[24.95416069 -50.19460297]
[13.98119068 -60.42171860]
[3.00822043 -70.64883423]
[-7.96474981 -80.87595367]
[-18.93771935 -91.10307312]
[-38.78081131 -94.77975464]
[-43.55280304 -113.53825378]
[-54.76250839 -123.50532532]
[-65.97221375 -133.47239685]
[-77.18191528 -143.43946838]
[-88.39162445 -153.40653992]
[-103.84589386 -156.79417419]
[-108.21594238 -171.03327942]
[-119.42564392 -181.00035095]
[-130.63534546 -190.96742249]
[-145.46412659 -186.71174622]
[-160.23310852 -191.17056274]
[-170.22953796 -202.92108154]
[-172.26361084 -218.21376038]
[-165.68624878 -232.16876221]
[-152.59628296 -240.33308411]
[-137.17065430 -240.10153198]
[-124.33164215 -231.54798889]
[-118.17610931 -217.40185547]
[-120.66828156 -202.17712402]
[-109.45857239 -192.21005249]
[-98.24887085 -182.24298096]
[-83.59638977 -179.56825256]
[-78.42454529 -164.61624146]
[-67.21484375 -154.64916992]
[-56.00513840 -144.68209839]
[-44.79543686 -134.71502686]
[-33.58573151 -124.74796295]
[-23.52286148 -126.26113129]
[-14.08180809 -121.91082001]
[-8.46166420 -112.90657806]
[-8.71060276 -102.07604218]
[2.26236773 -91.84892273]
[13.23533726 -81.62180328]
[24.20830727 -71.39469147]
[35.18127823 -61.16757202]
[46.15424728 -50.94045639]
[57.12721634 -40.71333694]
[71.14765930 -46.04505539]
[72.55228424 -60.97914505]
[73.95690155 -75.91323853]
[60.96192551 -83.84367371]
[52.73236847 -96.57793427]
[50.85553360 -111.56118011]
[55.65053558 -125.81491852]
[66.11553955 -136.52906799]
[80.13655853 -141.61596680]
[81.54118347 -156.55006409]
[82.94580078 -171.48414612]
[84.35042572 -186.41824341]
[85.75505066 -201.35232544]
[74.64182281 -212.35369873]
[73.25161743 -227.92936707]
[82.24085999 -240.72497559]
[97.36509705 -244.69882202]
[111.48312378 -237.97459412]
[117.92884827 -223.72726440]
[113.65878296 -208.68397522]
[100.68914032 -199.94770813]
[99.28451538 -185.01361084]
[97.87989044 -170.07952881]
[96.47527313 -155.14543152]
[95.07064819 -140.21134949]
[107.89727020 -132.59930420]
[116.18098450 -120.12174225]
[118.23413849 -105.22389984]
[113.59644318 -90.85337830]
[103.13678741 -79.87693024]
[88.89099121 -74.50861359]
[87.48637390 -59.57452393]
[86.08174896 -44.64043427]
[94.47420502 -57.07291794]
[109.33950806 -55.06722260]
[120.67529297 -45.24378204]
[124.77476501 -30.81484222]
[120.29741669 -16.49865150]
[108.70732880 -6.97658253]
[93.79444122 -5.36233997]
[80.43438721 -12.18459892]
[69.26525879 -22.19711685]
[74.26683807 -8.05553913]
[79.26841736 6.08603859]
[84.26998901 20.22761726]
[97.77993011 26.39342117]
[103.05369568 40.66374207]
[96.49482727 54.79240417]
[101.49640656 68.93398285]
[106.49798584 83.07556152]
[118.99439240 91.37252808]
[133.96864319 90.49385071]
[148.93746948 89.52742767]
[163.90039062 88.47328186]
[178.86329651 87.41914368]
[193.82621765 86.36499786]
[208.78912354 85.31085968]
[214.42507935 81.96209717]
[220.06468201 81.93970490]
[224.11442566 84.41158295]
[239.09794617 83.70849609]
[254.08145142 83.00541687]
[269.06497192 82.30233002]
[274.77786255 79.08660889]
[280.41644287 79.19643402]
[284.40713501 81.76256561]
[299.40301514 81.41093445]
[314.39889526 81.05929565]
[329.39477539 80.70765686]
[344.39065552 80.35601807]
[358.00564575 72.29733276]
[370.91079712 79.73414612]
[385.90667725 79.38250732]
[400.90255737 79.03086853]
[415.89843750 78.67922974]
[430.89431763 78.32759094]
[442.96511841 67.75994110]
[458.72705078 70.75015259]
[466.08889771 85.00437164]
[459.40325928 99.58799744]
[443.79882812 103.31371307]
[431.24594116 93.32346344]
[416.25009155 93.67510223]
[401.25421143 94.02674103]
[386.25833130 94.37837982]
[371.26245117 94.73001862]
[358.72006226 102.76355743]
[344.74227905 95.35189056]
[329.74639893 95.70352936]
[314.75051880 96.05516815]
[299.75466919 96.40680695]
[284.75878906 96.75844574]
[269.76806641 97.28584290]
[254.78454590 97.98892975]
[239.80102539 98.69200897]
[224.81750488 99.39509583]
[209.84327698 100.27377319]
[194.88035583 101.32791138]
[179.91744995 102.38205719]
[164.95452881 103.43619537]
[149.99162292 104.49034119]
[143.56260681 108.08275604]
[134.84730530 105.46809387]
[119.87306976 106.34677124]
[115.61536407 112.52106476]
[129.17776489 118.92899323]
[143.87104797 121.94684601]
[149.46630859 135.86421204]
[140.95086670 148.21278381]
[125.95354462 147.92971802]
[117.91014862 135.26869202]
[107.09996033 124.86966705]
[102.84226227 131.04396057]
[107.34352875 145.35266113]
[111.84480286 159.66134644]
[116.34606934 173.97003174]
[134.93849182 176.02439880]
[150.69538879 186.00952148]
[160.43771362 201.85751343]
[162.22337341 220.32308960]
[155.73422241 237.64811707]
[142.33160400 250.32644653]
[147.49859619 264.40841675]
[152.66560364 278.49038696]
[157.83261108 292.57238770]
[162.99960327 306.65435791]
[168.16661072 320.73632812]
[183.24578857 323.99548340]
[194.15299988 334.90585327]
[197.40782166 349.98596191]
[191.97163391 364.42382812]
[179.57910156 373.61233521]
[164.18464661 374.61950684]
[150.70059204 367.12393188]
[143.42962646 353.51742554]
[144.69190979 338.14181519]
[154.08464050 325.90332031]
[148.91763306 311.82135010]
[143.75062561 297.73937988]
[138.58363342 283.65740967]
[133.41662598 269.57543945]
[128.24961853 255.49345398]
[116.75096893 255.85966492]
[105.58669281 253.00408936]
[95.64294434 247.14234924]
[87.71205902 238.72908020]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 237]
[6 236]
[7 235]
[8 234]
[11 52]
[12 51]
[13 50]
[14 49]
[15 48]
[17 46]
[18 45]
[19 44]
[20 43]
[21 42]
[31 40]
[32 39]
[33 38]
[68 171]
[69 170]
[70 169]
[73 166]
[74 165]
[75 164]
[76 163]
[77 121]
[78 120]
[79 119]
[80 118]
[81 117]
[82 116]
[83 115]
[85 111]
[86 110]
[87 109]
[88 108]
[89 107]
[91 105]
[92 104]
[93 103]
[122 154]
[123 153]
[124 152]
[130 146]
[131 145]
[132 144]
[133 143]
[134 142]
[172 225]
[173 224]
[174 222]
[175 221]
[176 220]
[177 219]
[178 218]
[181 217]
[182 216]
[183 215]
[184 214]
[187 213]
[188 212]
[189 211]
[190 210]
[191 209]
[193 207]
[194 206]
[195 205]
[196 204]
[197 203]
[243 263]
[244 262]
[245 261]
[246 260]
[247 259]
[248 258]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
