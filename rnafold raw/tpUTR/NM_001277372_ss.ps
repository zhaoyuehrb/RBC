%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 07:51:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUAGAAGAAAACUAAAAAAUUUAGGAUGUUGCAGUCAAGCACCAGAUAAGAGUGACUUCCCUAAAUGUUAUUCAAGGUCCCUUCAGAAAUCUGAUAAUCUGUUAAAAUUUUUGUUGUGAAAUGCCUAUUUUAUCAGCACUGCUAACCAGAUAAGCACACAUUUAAGUUAACCAUAUCAGAGUGCAAUGCAUUUCGAAAAAUCCAAAAAACUAAAAACAAGAA\
) } def
/len { sequence length } bind def

/coor [
[87.71749115 513.39093018]
[79.94708252 526.22143555]
[72.17668152 539.05187988]
[64.40627289 551.88232422]
[67.95782471 567.04888916]
[59.89475632 579.95013428]
[45.41388321 583.24249268]
[37.64347458 596.07299805]
[37.11282349 611.88525391]
[23.90154457 618.76361084]
[28.59769249 631.38092041]
[25.22199059 644.21276855]
[15.22241402 652.63507080]
[2.39110208 653.74664307]
[-5.55768681 666.46734619]
[-13.50647640 679.18804932]
[-21.45526505 691.90875244]
[-29.40405464 704.62951660]
[-32.66992950 721.26593018]
[-49.56027222 722.73309326]
[-55.64582443 706.90899658]
[-42.12477493 696.68072510]
[-34.17598724 683.95996094]
[-26.22719765 671.23925781]
[-18.27840805 658.51855469]
[-10.32961941 645.79785156]
[-14.80783463 629.58245850]
[-5.99501324 614.85803223]
[11.07108021 610.99316406]
[11.04594040 596.09863281]
[24.81301308 588.30255127]
[32.58341599 575.47210693]
[28.79221916 561.11376953]
[36.48973846 547.99114990]
[51.57580948 544.11193848]
[59.34621429 531.28149414]
[67.11662292 518.45098877]
[74.88702393 505.62054443]
[74.17784119 500.87863159]
[75.54145813 495.82604980]
[79.07601929 491.38754272]
[79.49484253 476.39340210]
[79.91367340 461.39926147]
[80.33249664 446.40509033]
[80.64662933 431.40838623]
[73.08778381 418.57434082]
[81.01701355 404.88354492]
[81.22644806 389.88497925]
[81.43587494 374.88644409]
[81.64530945 359.88790894]
[74.08646393 347.05386353]
[82.01569366 333.36306763]
[71.47991943 322.89724731]
[71.47865295 307.68362427]
[82.52758789 296.70370483]
[82.73701477 281.70516968]
[82.94644928 266.70660400]
[83.15588379 251.70808411]
[83.36531830 236.70954895]
[81.52052307 234.61163330]
[80.39125824 231.66021729]
[80.30541992 228.12263489]
[81.48870850 224.37942505]
[84.02852631 220.88578796]
[85.07487488 205.92231750]
[86.12122345 190.95886230]
[87.16757202 175.99540710]
[88.21391296 161.03193665]
[89.26026154 146.06848145]
[90.30661011 131.10502625]
[81.06642151 128.31524658]
[72.68017578 122.73764801]
[65.99617767 114.65078735]
[61.76723862 104.59178162]
[60.57214737 93.32262421]
[62.74922180 81.77287292]
[68.34886169 70.96293640]
[59.36351013 58.95196152]
[50.37815857 46.94099045]
[41.39280319 34.93002319]
[29.53296471 35.55772781]
[18.94903564 30.43923759]
[12.21592045 20.94813347]
[10.90947819 9.50543976]
[15.23898315 -1.03743875]
[6.59249878 -13.29461193]
[-2.05398607 -25.55178642]
[-10.70047092 -37.80895996]
[-25.80610085 -44.19268417]
[-27.56166267 -60.49759293]
[-14.16118240 -69.95059204]
[0.61007297 -62.82724762]
[1.55670261 -46.45544434]
[10.20318699 -34.19826889]
[18.84967232 -21.94109726]
[27.49615669 -9.68392372]
[45.69651413 -7.65184784]
[56.81419373 7.30114651]
[53.40377426 25.94466782]
[62.38912964 37.95563889]
[71.37448120 49.96660995]
[80.35983276 61.97758102]
[87.80707550 61.08955002]
[85.68005371 46.24112320]
[83.55303192 31.39269638]
[81.42600250 16.54426956]
[75.98130798 2.56731629]
[87.19323730 -7.39724731]
[100.43433380 -0.34930685]
[98.42924500 14.51675701]
[99.85334778 29.44900131]
[101.27745056 44.38124466]
[102.70156097 59.31349182]
[110.14880371 58.42546082]
[116.05792999 44.63843155]
[121.96705627 30.85140038]
[127.87619019 17.06436920]
[133.78530884 3.27733994]
[139.59805298 -10.55060768]
[145.31410217 -24.41879845]
[151.03016663 -38.28698730]
[156.74621582 -52.15517807]
[162.46226501 -66.02336884]
[168.17832947 -79.89156342]
[165.47428894 -96.06623840]
[178.30029297 -106.28511047]
[193.46206665 -100.03588104]
[195.36245728 -83.74722290]
[182.04652405 -74.17550659]
[176.33045959 -60.30731201]
[170.61441040 -46.43912506]
[164.89834595 -32.57093430]
[159.18229675 -18.70274162]
[153.46624756 -4.83455181]
[153.82304382 2.53985453]
[147.57234192 9.18646812]
[141.66322327 22.97349930]
[135.75408936 36.76052856]
[129.84495544 50.54755783]
[123.93582916 64.33458710]
[124.41641235 71.18755341]
[123.70770264 77.65209198]
[136.69808960 70.15209198]
[149.68846130 62.65209579]
[162.67884827 55.15209579]
[163.31018066 39.73765564]
[172.19366455 27.12467384]
[186.49459839 21.33790588]
[201.64962769 24.22389030]
[212.82281494 34.86171722]
[216.44885254 49.85689926]
[211.37066650 64.42452240]
[199.20870972 73.91611481]
[183.84381104 75.30294800]
[170.17884827 68.14247894]
[157.18846130 75.64247894]
[144.19808960 83.14247894]
[131.20770264 90.64247894]
[127.62976837 117.26499176]
[105.27007294 132.15136719]
[104.22372437 147.11482239]
[103.17737579 162.07829285]
[102.13102722 177.04174805]
[101.08468628 192.00521851]
[100.03833771 206.96867371]
[98.99198914 221.93212891]
[98.36385345 236.91897583]
[98.15441895 251.91751099]
[97.94499207 266.91604614]
[97.73555756 281.91458130]
[97.52612305 296.91311646]
[108.26417542 308.19726562]
[107.83811951 323.40493774]
[97.01422882 333.57247925]
[104.55809784 347.47933960]
[96.64384460 360.09735107]
[96.43441772 375.09588623]
[96.22498322 390.09442139]
[96.01554871 405.09295654]
[103.55941772 418.99981689]
[95.64517212 431.61782837]
[98.65204620 440.23220825]
[95.32664490 446.82391357]
[94.90782166 461.81808472]
[94.48899841 476.81222534]
[94.07017517 491.80636597]
[100.93841553 478.47119141]
[109.73925781 466.32437134]
[120.27136230 455.64379883]
[132.29380798 446.67379761]
[145.53155518 439.61956787]
[159.68177795 434.64248657]
[174.42076111 431.85644531]
[189.41134644 431.32510376]
[204.31060791 433.06066895]
[218.77769470 437.02343750]
[232.48164368 443.12274170]
[245.10899353 451.21905518]
[256.37084961 461.12716675]
[266.00958252 472.62039185]
[273.80471802 485.43585205]
[279.57791138 499.28036499]
[283.19708252 513.83721924]
[284.57946777 528.77337646]
[283.69342041 543.74719238]
[280.55923462 558.41607666]
[275.24859619 572.44451904]
[267.88299561 585.51153564]
[258.63088989 597.31829834]
[247.70401001 607.59460449]
[235.35224915 616.10546875]
[221.85821533 622.65612793]
[207.53057861 627.09667969]
[192.69711304 629.32568359]
[177.69715881 629.29205322]
[162.87384033 626.99658203]
[148.56626892 622.49169922]
[135.10174561 615.88061523]
[122.78829956 607.31445312]
[111.90760803 596.98925781]
[102.70858002 585.14111328]
[95.40164948 572.04113770]
[90.15398407 557.98907471]
[87.08561707 543.30621338]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 38]
[2 37]
[3 36]
[4 35]
[7 32]
[8 31]
[10 29]
[14 26]
[15 25]
[16 24]
[17 23]
[18 22]
[41 186]
[42 185]
[43 184]
[44 183]
[45 181]
[47 179]
[48 178]
[49 177]
[50 176]
[52 174]
[55 171]
[56 170]
[57 169]
[58 168]
[59 167]
[64 166]
[65 165]
[66 164]
[67 163]
[68 162]
[69 161]
[70 160]
[77 102]
[78 101]
[79 100]
[80 99]
[85 96]
[86 95]
[87 94]
[88 93]
[114 140]
[115 139]
[116 138]
[117 137]
[118 136]
[119 134]
[120 133]
[121 132]
[122 131]
[123 130]
[124 129]
[142 158]
[143 157]
[144 156]
[145 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
