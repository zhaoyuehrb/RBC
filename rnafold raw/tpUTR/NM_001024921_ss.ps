%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 13:30:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUCUAAGAGUUACCUGGCUACAGAAAGAAGAUGCCAGAUGACACUUAAGACCUACUUGUGAUAUUUAAAUGAUGCAAUAAAAGACCUAUUGAUUUGGACCUUCUUCUUAA\
) } def
/len { sequence length } bind def

/coor [
[36.77335739 295.81692505]
[44.99116135 308.36553955]
[48.81428528 322.87014771]
[47.84955215 337.83908081]
[42.19618225 351.73294067]
[32.43556976 363.12286377]
[19.57150078 370.83752441]
[4.92692423 374.08349609]
[-9.99210072 372.52700806]
[-23.65129280 366.32809448]
[-34.64593506 356.12426758]
[-41.84532547 342.96490479]
[-44.50907898 328.20333862]
[-42.36325455 313.35760498]
[-35.62890625 299.95501709]
[-48.95558929 306.83975220]
[-62.28227615 313.72448730]
[-70.67633057 327.81246948]
[-87.06797791 327.31649780]
[-94.59488678 312.74673462]
[-85.51403046 299.09133911]
[-69.16699982 300.39779663]
[-55.84031677 293.51306152]
[-42.51363373 286.62832642]
[-38.61144257 279.74835205]
[-30.42322159 276.41888428]
[-21.40346527 264.43374634]
[-12.38370895 252.44857788]
[-3.36395264 240.46342468]
[5.65580368 228.47827148]
[14.67556000 216.49311829]
[23.69531631 204.50794983]
[19.97601128 186.69152832]
[30.52079773 171.47158813]
[49.13153458 168.59762573]
[57.46508789 156.12557983]
[65.79864502 143.65353394]
[74.13219452 131.18148804]
[82.46575165 118.70944214]
[90.79930115 106.23739624]
[84.67168427 101.70964050]
[81.63004303 92.79866028]
[84.28504181 81.80929565]
[80.94722748 67.18537140]
[77.60941315 52.56145477]
[62.65948868 49.65979385]
[50.18598557 40.92299271]
[42.35002136 27.86475563]
[40.50922012 12.74750328]
[44.98250961 -1.80961072]
[54.99486542 -13.28447819]
[68.81159210 -19.68900871]
[84.03884888 -19.91357803]
[98.03842926 -13.91927910]
[108.38481903 -2.74466038]
[113.28544617 11.67420864]
[111.89124298 26.83917046]
[104.44376373 40.12280655]
[92.23332977 49.22364044]
[95.57114410 63.84756088]
[98.90895844 78.47148132]
[102.99082947 64.03755188]
[99.83000946 49.37435913]
[102.76692963 34.66468430]
[111.31623077 22.33953094]
[124.06501007 14.43581772]
[138.90632629 12.25975418]
[153.38743591 16.17096901]
[165.11509705 25.52307510]
[172.15115356 38.77048874]
[173.33276367 53.72387695]
[168.46466064 67.91195679]
[158.35137939 78.98993683]
[144.66429138 85.12699890]
[129.66390991 85.30861664]
[116.50016785 92.50000000]
[131.50016785 92.50000000]
[146.50016785 92.50000000]
[161.50016785 92.50000000]
[176.50016785 92.50000000]
[186.41253662 80.40541840]
[201.78958130 77.56279755]
[215.37072754 85.31433868]
[220.74337769 100.00000000]
[215.37072754 114.68566132]
[201.78958130 122.43720245]
[186.41253662 119.59458160]
[176.50016785 107.50000000]
[161.50016785 107.50000000]
[146.50016785 107.50000000]
[131.50016785 107.50000000]
[116.50016785 107.50000000]
[103.27134705 114.57095337]
[94.93779755 127.04299164]
[86.60424042 139.51504517]
[78.27069092 151.98709106]
[69.93713379 164.45912170]
[61.60358047 176.93116760]
[66.19730377 188.08149719]
[64.78403473 199.93627930]
[57.83966827 209.49865723]
[47.22320938 214.40924072]
[35.68047333 213.52770996]
[26.66071701 225.51286316]
[17.64096069 237.49803162]
[8.62120438 249.48318481]
[-0.39855173 261.46835327]
[-9.41830826 273.45349121]
[-18.43806458 285.43865967]
[-4.09615421 281.04437256]
[10.89924622 281.41583252]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 24]
[16 23]
[17 22]
[26 109]
[27 108]
[28 107]
[29 106]
[30 105]
[31 104]
[32 103]
[35 98]
[36 97]
[37 96]
[38 95]
[39 94]
[40 93]
[43 61]
[44 60]
[45 59]
[76 92]
[77 91]
[78 90]
[79 89]
[80 88]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
