%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 20:49:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAGAACUUGGGGAGCCAGUUCACCCACGGGUGGUCCAGGUCACGACUCUGCACGCCCUUAGGCCAGGUCAGCUGCGAGGGUCACAGAGCGUUCCGGGGGCCAAGGCGCCGGGCCCCGGGGCCAUGCUCUUAUCACCAGCCACCCGUCCUCCCGCCAGAGGGUCCCUGCCCCGAGUGACACCCCAUCCCCUCCCAUCCCCCGGCGCGUGUGUGUAGAGCCUCAGGGCUGAGUGCCCAAUAAAGGUGGCGGCAA\
GGCUGCGGUGAGGCA\
) } def
/len { sequence length } bind def

/coor [
[79.44944000 259.34591675]
[67.91752625 265.04730225]
[65.15122986 279.79003906]
[62.38493347 294.53274536]
[59.61863708 309.27545166]
[67.45288086 323.27560425]
[61.25852585 338.07458496]
[45.78735733 342.31985474]
[32.90752792 332.75485229]
[32.49934006 316.71697998]
[44.87592316 306.50915527]
[47.64222336 291.76644897]
[50.40851974 277.02374268]
[53.17481613 262.28100586]
[43.09439087 248.79887390]
[45.95748138 231.86694336]
[60.47084808 222.06988525]
[63.06605530 207.29609680]
[65.66126251 192.52230835]
[63.97688293 189.46324158]
[63.66986084 185.44476318]
[65.17150116 181.11370850]
[68.61213684 177.28373718]
[71.71947479 162.60913086]
[74.82680511 147.93450928]
[77.93414307 133.25988770]
[81.04148102 118.58526611]
[84.68637085 108.58876801]
[91.69293213 102.09307098]
[78.47694397 94.99816895]
[65.26095581 87.90326691]
[52.04496765 80.80836487]
[38.82897949 73.71347046]
[25.61298943 66.61856842]
[12.39699936 59.52366257]
[-0.81898993 52.42876434]
[-14.03497887 45.33386230]
[-24.20664597 49.05688477]
[-34.53959274 46.63714981]
[-41.69852829 39.10243225]
[-43.50864029 29.09047699]
[-56.55659485 21.69109344]
[-69.60455322 14.29171181]
[-85.16487885 24.01400948]
[-103.39978790 24.42005348]
[-119.18847656 15.50669098]
[-128.15370178 -0.12765220]
[-143.14135742 0.48079196]
[-158.12901306 1.08923614]
[-173.11666870 1.69768023]
[-188.10432434 2.30612445]
[-203.09197998 2.91456842]
[-218.07585144 3.60987496]
[-233.05545044 4.39202023]
[-248.03504944 5.17416525]
[-256.40646362 8.73585796]
[-263.19262695 5.87753201]
[-278.18026733 6.48597622]
[-293.15509033 7.35493374]
[-308.11251831 8.48414230]
[-323.06994629 9.61335087]
[-333.18093872 21.76011658]
[-348.92691040 23.11642456]
[-360.96609497 12.87760067]
[-362.15585327 -2.88184214]
[-351.79031372 -14.81210613]
[-336.01916504 -15.83517647]
[-324.19915771 -5.34408522]
[-309.24172974 -6.47329378]
[-294.28430176 -7.60250235]
[-291.73522949 -9.98940849]
[-287.91665649 -11.27817631]
[-283.34902954 -10.89126873]
[-278.78872681 -8.50167847]
[-263.80105591 -9.11012268]
[-248.81718445 -9.80542946]
[-233.83760071 -10.58757401]
[-218.85800171 -11.36971951]
[-212.36570740 -14.84421444]
[-203.70042419 -12.07308578]
[-188.71276855 -12.68153000]
[-173.72511292 -13.28997421]
[-158.73745728 -13.89841843]
[-143.74980164 -14.50686264]
[-128.76214600 -15.11530685]
[-126.98270416 -21.34810257]
[-124.05006409 -27.12856674]
[-120.07132721 -32.24557877]
[-128.43197632 -44.69948196]
[-136.79261780 -57.15338135]
[-145.15325928 -69.60728455]
[-153.51390076 -82.06118011]
[-162.08982849 -94.36782837]
[-170.87844849 -106.52349091]
[-179.66706848 -118.67915344]
[-188.45568848 -130.83482361]
[-197.24430847 -142.99047852]
[-206.03292847 -155.14614868]
[-214.82154846 -167.30181885]
[-223.61016846 -179.45747375]
[-232.39878845 -191.61314392]
[-246.75454712 -198.26313782]
[-247.94142151 -213.11038208]
[-256.73004150 -225.26605225]
[-272.24679565 -225.16735840]
[-284.83850098 -234.23538208]
[-289.66333008 -248.98327637]
[-284.86611938 -263.74017334]
[-272.29141235 -272.83175659]
[-256.77450562 -272.76211548]
[-244.28192139 -263.55804443]
[-239.61734009 -248.75866699]
[-244.57438660 -234.05467224]
[-235.78576660 -221.89900208]
[-222.05860901 -216.11845398]
[-220.24311829 -200.40176392]
[-211.45449829 -188.24609375]
[-202.66587830 -176.09042358]
[-193.87725830 -163.93476868]
[-185.08863831 -151.77909851]
[-176.30001831 -139.62344360]
[-167.51139832 -127.46777344]
[-158.72277832 -115.31211090]
[-149.93415833 -103.15644836]
[-146.56631470 -102.23310089]
[-143.47001648 -99.65330505]
[-141.40975952 -95.55838776]
[-141.05999756 -90.42182922]
[-132.69935608 -77.96792603]
[-124.33871460 -65.51402283]
[-115.97807312 -53.06012344]
[-107.61742401 -40.60622406]
[-92.71127319 -42.93707275]
[-78.19473267 -38.56723022]
[-66.94488525 -28.29707146]
[-61.21973801 -14.10276222]
[-62.20516968 1.24375653]
[-49.15721130 8.64313889]
[-36.10925674 16.04252052]
[-16.81278801 14.51580620]
[-6.94007778 32.11787033]
[6.27591133 39.21277237]
[19.49190140 46.30767441]
[32.70788956 53.40257645]
[45.92387772 60.49747849]
[59.13986969 67.59237671]
[72.35585785 74.68727875]
[85.57184601 81.78218079]
[98.78783417 88.87708282]
[113.32433319 92.57711029]
[128.32408142 92.66404724]
[143.32383728 92.75099182]
[159.13041687 83.27235413]
[173.91069031 92.76162720]
[188.91044617 92.67468262]
[203.91018677 92.58773804]
[218.90994263 92.50079346]
[233.90968323 92.41384888]
[248.90943909 92.32690430]
[263.41558838 75.11648560]
[285.63320923 74.40849304]
[300.81884766 90.25685120]
[315.77630615 89.12764740]
[330.73373413 87.99843597]
[345.69116211 86.86922455]
[358.86972046 78.11499786]
[372.14334106 84.87222290]
[387.09396362 83.65634155]
[400.17016602 74.74993134]
[413.52120972 81.35282898]
[428.46456909 80.05030823]
[443.40789795 78.74777985]
[458.35122681 77.44525909]
[471.42742920 68.53884888]
[484.77847290 75.14174652]
[499.72183228 73.83922577]
[514.66516113 72.53669739]
[526.80261230 56.48406982]
[546.53265381 54.62050629]
[561.00573730 67.70520020]
[575.89471436 65.88387299]
[590.78375244 64.06254578]
[605.67279053 62.24121857]
[614.19927979 52.59473419]
[626.61297607 51.36695480]
[636.22583008 58.67267227]
[651.13494873 57.02406693]
[666.04406738 55.37545776]
[678.91027832 46.16829300]
[692.41082764 52.45990372]
[707.31011963 50.72490692]
[722.19915771 48.90357590]
[727.55407715 34.56540680]
[738.96667480 24.36679268]
[753.81433105 20.65130615]
[768.68524170 24.27273941]
[780.16217041 34.39891052]
[785.60772705 48.70290375]
[783.77069092 63.89776230]
[775.07305908 76.49182129]
[761.51361084 83.59105682]
[746.20812988 83.56411743]
[732.67370605 76.41719055]
[724.02050781 63.79259109]
[709.13146973 65.61392212]
[702.89636230 69.53122711]
[694.05944824 67.36903381]
[682.25964355 76.45827484]
[667.69268799 70.28458405]
[652.78356934 71.93319702]
[637.87445068 73.58180237]
[624.29095459 84.71696472]
[607.49407959 77.13023376]
[592.60510254 78.95156097]
[577.71606445 80.77288818]
[562.82702637 82.59421539]
[558.94342041 92.02943420]
[551.44775391 99.07010651]
[541.63562012 102.40796661]
[531.24121094 101.38274384]
[522.13073730 96.11161041]
[515.96771240 87.48004150]
[501.02435303 88.78256226]
[486.08099365 90.08509064]
[474.07366943 98.89833832]
[459.65377808 92.38859558]
[444.71041870 93.69112396]
[429.76708984 94.99364471]
[414.82373047 96.29617310]
[402.81640625 105.10942078]
[388.39648438 98.59967804]
[382.02893066 102.29781342]
[373.27255249 99.82965851]
[361.16384888 108.50312042]
[346.82037354 101.82666016]
[331.86294556 102.95587158]
[316.90548706 104.08508301]
[301.94805908 105.21428680]
[299.30557251 112.64815521]
[294.59597778 119.01969910]
[288.21038818 123.76684570]
[280.68884277 126.46380615]
[272.67449951 126.85916901]
[264.85876465 124.89926147]
[257.92163086 120.73443604]
[252.47241211 114.70771790]
[248.99638367 107.32665253]
[233.99662781 107.41359711]
[218.99688721 107.50054169]
[203.99713135 107.58748627]
[188.99739075 107.67443085]
[173.99763489 107.76137543]
[165.29431152 116.12993622]
[152.82191467 116.34625244]
[143.23689270 107.75074005]
[128.23713684 107.66379547]
[113.23739624 107.57685089]
[125.96833038 115.50926971]
[126.87490845 130.48185730]
[115.19406891 139.89237976]
[100.75741577 135.82012939]
[95.71609497 121.69259644]
[92.60876465 136.36721802]
[89.50142670 151.04183960]
[86.39409637 165.71646118]
[83.28675842 180.39108276]
[80.43505859 195.11750793]
[77.83984375 209.89129639]
[75.24463654 224.66508484]
[84.18410492 234.71096802]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 14]
[3 13]
[4 12]
[5 11]
[17 269]
[18 268]
[19 267]
[23 266]
[24 265]
[25 264]
[26 263]
[27 262]
[29 149]
[30 148]
[31 147]
[32 146]
[33 145]
[34 144]
[35 143]
[36 142]
[37 141]
[41 139]
[42 138]
[43 137]
[47 85]
[48 84]
[49 83]
[50 82]
[51 81]
[52 80]
[53 78]
[54 77]
[55 76]
[57 75]
[58 74]
[59 70]
[60 69]
[61 68]
[88 132]
[89 131]
[90 130]
[91 129]
[92 128]
[93 124]
[94 123]
[95 122]
[96 121]
[97 120]
[98 119]
[99 118]
[100 117]
[101 116]
[103 114]
[104 113]
[150 257]
[151 256]
[152 255]
[154 252]
[155 251]
[156 250]
[157 249]
[158 248]
[159 247]
[162 238]
[163 237]
[164 236]
[165 235]
[167 233]
[168 231]
[170 229]
[171 228]
[172 227]
[173 226]
[175 224]
[176 223]
[177 222]
[180 216]
[181 215]
[182 214]
[183 213]
[186 211]
[187 210]
[188 209]
[190 207]
[191 205]
[192 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
