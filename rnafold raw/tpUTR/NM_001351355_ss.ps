%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 19:46:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUAAAGCGACAUGAGACUACUAGAAAGAAACGACACCCUUCCCCAAGCCCCCACAGCUACUCCAACCCAAACAACAACCAAGCCAGUUUAAUGGUAGGAAUUUGUAUUUUUUGCCUUUGUUCAGAAUACAUGACAUUGGUAAAUAUGCCACAUGCCUUUGGUGGAAGUACAA\
) } def
/len { sequence length } bind def

/coor [
[78.12173462 301.84579468]
[76.35781097 316.76565552]
[72.57865906 331.30633545]
[66.85468292 345.19699097]
[59.29252243 358.17880249]
[50.03304672 370.00991821]
[39.24876022 380.47000122]
[27.14056396 389.36410522]
[13.93402863 396.52658081]
[-0.12481655 401.82400513]
[-14.77406406 405.15768433]
[-29.74080849 406.46548462]
[-44.74622726 405.72305298]
[-59.51077652 402.94424438]
[-73.75940704 398.18081665]
[-87.22666931 391.52148438]
[-99.66168213 383.09033203]
[-110.83278656 373.04443359]
[-120.53186798 361.57092285]
[-128.57824707 348.88354492]
[-134.82200623 335.21865845]
[-139.14685059 320.83084106]
[-141.47221375 305.98809814]
[-141.75474548 290.96697998]
[-139.98921204 276.04730225]
[-136.20848083 261.50701904]
[-130.48300171 247.61700439]
[-122.91944122 234.63601685]
[-113.65868378 222.80587769]
[-102.87326050 212.34698486]
[-90.76410675 203.45417786]
[-77.55679321 196.29312134]
[-63.49737549 190.99722290]
[-48.84776688 187.66514587]
[-33.88088226 186.35896301]
[-18.87554359 187.10301208]
[-4.11129427 189.88342285]
[10.13681889 194.64840698]
[23.60336113 201.30917358]
[32.02116776 188.89384460]
[40.43897247 176.47851562]
[48.85678101 164.06317139]
[57.27458572 151.64784241]
[65.57997131 139.15701294]
[73.77225494 126.59173584]
[81.96453857 114.02644348]
[77.17501831 99.81164551]
[63.04900742 94.76626587]
[48.92299652 89.72089386]
[35.52006531 97.77665710]
[20.08283997 95.28144836]
[9.90030670 83.41342163]
[9.78034687 67.77629852]
[19.77960205 55.75345230]
[35.17673111 53.02169800]
[48.70167542 60.87089157]
[53.96837616 75.59487915]
[68.09438324 80.64025879]
[82.22039795 85.68563843]
[88.53976440 81.64637756]
[78.56190491 70.44627380]
[68.58404541 59.24616623]
[58.60619354 48.04605865]
[48.62833405 36.84595490]
[38.65047836 25.64584732]
[28.67262077 14.44574165]
[15.00823879 8.25828362]
[5.71296072 -3.51447344]
[2.86416531 -18.24146843]
[7.09852123 -32.63140106]
[17.46970367 -43.46831131]
[31.65988541 -48.33028030]
[46.49774170 -46.13071823]
[58.66719818 -37.36120605]
[65.44853210 -23.98161507]
[65.32640839 -8.98290157]
[71.30175781 4.77555847]
[77.27709961 18.53401756]
[83.25244904 32.29247665]
[89.22779846 46.05093765]
[95.20314789 59.80939865]
[101.17848969 73.56785583]
[107.49785614 69.52859497]
[108.85015869 54.58967972]
[110.20245361 39.65076065]
[111.55474854 24.71184158]
[101.24121857 12.73659134]
[102.49952698 -3.01752543]
[114.58315277 -13.20386982]
[130.32308960 -11.77906418]
[140.38110352 0.41157880]
[138.78996277 16.13556862]
[126.49366760 26.06413841]
[125.14137268 41.00305557]
[123.78907013 55.94197464]
[122.43677521 70.88089752]
[133.13870239 81.39131165]
[148.05076599 79.76953125]
[162.96282959 78.14774323]
[168.26304626 62.78179932]
[179.68681335 51.30067062]
[194.91632080 45.96200180]
[210.89273071 47.78441238]
[224.43049622 56.35356903]
[232.85249329 69.91499329]
[247.73286438 68.02424622]
[262.61322021 66.13350677]
[277.49356079 64.24275970]
[286.01254272 54.52813339]
[298.46926880 53.27626038]
[308.11169434 60.61622238]
[323.02377319 58.99443817]
[337.93582153 57.37265015]
[352.84790039 55.75086594]
[367.75997925 54.12908173]
[382.67202759 52.50729752]
[392.56198120 40.47290421]
[407.70803833 39.04061127]
[419.12005615 48.54333496]
[434.03213501 46.92155075]
[448.94418335 45.29976273]
[457.17056274 41.24847412]
[464.13980103 43.78581238]
[479.07870483 42.43351746]
[487.86035156 29.49455452]
[502.91851807 25.27722168]
[517.14318848 31.77281570]
[523.81793213 45.91431427]
[519.79107666 61.02453613]
[506.96408081 69.96889496]
[491.39337158 68.52413940]
[480.43099976 57.37243652]
[465.49209595 58.72473145]
[450.56597900 60.21183395]
[435.65390015 61.83361816]
[420.74185181 63.45540619]
[411.63943481 75.18920135]
[396.53958130 77.04634857]
[384.29382324 67.41936493]
[369.38174438 69.04115295]
[354.46969604 70.66293335]
[339.55761719 72.28472137]
[324.64553833 73.90650940]
[309.73345947 75.52828979]
[296.17428589 86.64576721]
[279.38430786 79.12311554]
[264.50396729 81.01386261]
[249.62359619 82.90460968]
[234.74324036 84.79535675]
[230.99224854 98.17060852]
[222.39454651 109.13661957]
[210.22520447 116.01349640]
[196.30953979 117.73174286]
[182.74934387 113.99849701]
[171.60548401 105.34680939]
[164.58462524 93.05981445]
[149.67254639 94.68159485]
[134.76048279 96.30338287]
[119.01834869 121.78602600]
[94.52983093 122.21872711]
[86.33753967 134.78401184]
[78.14525604 147.34930420]
[76.06826782 156.28083801]
[69.68991852 160.06564331]
[61.27211380 172.48098755]
[52.85430908 184.89631653]
[44.43650436 197.31164551]
[36.01869583 209.72698975]
[47.19088745 219.77168274]
[56.89121246 231.24414062]
[64.93896484 243.93064880]
[71.18421173 257.59487915]
[75.51061249 271.98220825]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 168]
[40 167]
[41 166]
[42 165]
[43 164]
[44 162]
[45 161]
[46 160]
[47 59]
[48 58]
[49 57]
[83 96]
[84 95]
[85 94]
[86 93]
[97 158]
[98 157]
[99 156]
[105 149]
[106 148]
[107 147]
[108 146]
[111 144]
[112 143]
[113 142]
[114 141]
[115 140]
[116 139]
[119 136]
[120 135]
[121 134]
[123 133]
[124 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
