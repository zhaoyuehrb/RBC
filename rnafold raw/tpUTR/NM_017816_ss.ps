%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 00:01:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUUUGUGUAUUUAAAAAUUGAAUCCAUUCUGCUGACUUCUUCCUUUCACUGCUGUUUAUAAAAUGUGUAAUGAAUUCUAACAACUCAAAUUUUGCUUUUUGAAGCUGUAUUUUUAAGUUAAGAAAAUAUAUUUUUGGUAUAACUUUUAUGAGAAAAAUAAAAUAUAUUCUGGUCCAAACUUCUAA\
) } def
/len { sequence length } bind def

/coor [
[79.36917877 263.82888794]
[70.98611450 267.56604004]
[62.11418152 269.90130615]
[52.98596954 270.77490234]
[43.84056091 270.16531372]
[34.91725922 268.08981323]
[26.44934654 264.60409546]
[17.96014023 276.97073364]
[9.47093391 289.33734131]
[8.03971863 305.09368896]
[-5.54219580 311.20767212]
[-14.03140163 323.57431030]
[-22.52060890 335.94091797]
[-31.00981522 348.30755615]
[-39.49901962 360.67416382]
[-47.98822784 373.04080200]
[-51.96748352 389.52114868]
[-68.90534210 390.25961304]
[-74.30381775 374.18811035]
[-60.35485077 364.55160522]
[-51.86564636 352.18496704]
[-43.37643814 339.81835938]
[-34.88723373 327.45172119]
[-26.39802551 315.08511353]
[-17.90881920 302.71847534]
[-17.08480835 287.84667969]
[-2.89568901 280.84814453]
[5.59351730 268.48153687]
[14.08272362 256.11489868]
[1.08949518 238.96408081]
[-4.57374668 218.17805481]
[-2.06981897 196.75329590]
[8.25959110 177.78614807]
[24.94039345 164.02528381]
[45.57643127 157.47340393]
[67.19367218 159.09579468]
[73.04950714 145.28604126]
[78.90534973 131.47630310]
[84.76119232 117.66654968]
[77.65718842 130.87765503]
[63.95275116 136.97587585]
[49.38295364 133.40921021]
[40.04502869 121.67025757]
[39.84674072 106.67156982]
[48.87107086 94.68984985]
[63.34148407 90.73926544]
[77.20330048 96.47389984]
[63.93042755 89.48599243]
[50.65755844 82.49807739]
[37.38468933 75.51016235]
[21.56899261 75.92761230]
[13.91167068 63.15205765]
[0.63880217 56.16414261]
[-12.63406658 49.17622757]
[-25.96485710 42.29945374]
[-39.35264206 35.53430557]
[-52.74042130 28.76915169]
[-66.12820435 22.00399971]
[-79.51599121 15.23884869]
[-96.37966919 13.49171162]
[-99.36914825 -3.19658923]
[-84.16059875 -10.68901539]
[-72.75083923 1.85106587]
[-59.36305237 8.61621761]
[-45.97526932 15.38136959]
[-32.58749008 22.14652061]
[-19.19970512 28.91167259]
[-11.79705524 29.12274170]
[-5.64615202 35.90335846]
[7.62671709 42.89127350]
[20.89958572 49.87918854]
[35.76591873 48.96191788]
[44.37260437 62.23728943]
[57.64547348 69.22520447]
[70.91834259 76.21311951]
[84.19120789 83.20103455]
[97.90118408 77.11525726]
[101.62181854 62.58401871]
[105.34245300 48.05278015]
[109.06308746 33.52154160]
[102.97606659 24.47706032]
[102.88480377 13.79523945]
[108.57743835 5.01711559]
[117.96466064 0.91951716]
[122.16877747 -13.47928047]
[126.37289429 -27.87807846]
[130.57701111 -42.27687836]
[124.90021515 -61.60592651]
[139.40019226 -74.38061523]
[143.12081909 -88.91184998]
[146.84146118 -103.44309235]
[150.56210327 -117.97432709]
[140.83641052 -129.92074585]
[140.01956177 -145.12556458]
[148.21554565 -157.74656677]
[162.10543823 -163.05776978]
[165.82608032 -177.58900452]
[169.54670715 -192.12023926]
[173.26734924 -206.65148926]
[168.32809448 -222.28912354]
[179.59912109 -234.20112610]
[195.48579407 -230.13343811]
[199.64523315 -214.27055359]
[187.79858398 -202.93084717]
[184.07795715 -188.39961243]
[180.35731506 -173.86837769]
[176.63667297 -159.33712769]
[186.26495361 -148.00424194]
[187.38699341 -132.99740601]
[179.36351013 -120.05611420]
[165.09333801 -114.25369263]
[161.37269592 -99.72245026]
[157.65206909 -85.19121552]
[153.93142700 -70.65998077]
[159.91999817 -62.35051346]
[160.34448242 -51.89673996]
[154.82231140 -42.75259781]
[144.97581482 -38.07275772]
[140.77169800 -23.67395973]
[136.56758118 -9.27516174]
[132.36346436 5.12363672]
[138.32905579 23.50442505]
[123.59432983 37.24217606]
[119.87369537 51.77341461]
[116.15305328 66.30464935]
[112.43241882 80.83589172]
[120.07666779 93.74191284]
[134.60791016 97.46254730]
[149.13914490 101.18318939]
[163.67037964 104.90382385]
[178.20161438 108.62445831]
[192.73286438 112.34509277]
[207.26409912 116.06573486]
[221.79533386 119.78636932]
[236.32656860 123.50700378]
[250.85780334 127.22763824]
[258.32061768 116.02368927]
[268.85821533 107.68297577]
[281.43371582 103.00830078]
[294.81524658 102.44258118]
[307.69650269 106.02694702]
[318.82443237 113.39812469]
[327.12103271 123.82516479]
[331.78784180 136.28192139]
[332.38265991 149.54803467]
[346.78146362 153.75215149]
[361.18023682 157.95628357]
[376.97421265 153.54231262]
[388.50292969 165.20509338]
[383.90664673 180.94696045]
[367.91363525 184.57402039]
[356.97613525 172.35507202]
[342.57733154 168.15095520]
[328.17852783 163.94683838]
[318.07357788 177.15969849]
[303.64123535 185.50357056]
[287.07583618 187.67729187]
[270.90847778 183.32032776]
[257.62045288 173.07215881]
[249.26219177 158.47865295]
[247.13717651 141.75888062]
[232.60592651 138.03823853]
[218.07469177 134.31761169]
[203.54345703 130.59696960]
[189.01222229 126.87633514]
[174.48098755 123.15569305]
[159.94975281 119.43505859]
[145.41850281 115.71442413]
[130.88726807 111.99378967]
[116.35603333 108.27315521]
[113.15803528 115.16127777]
[107.00978088 120.66368866]
[98.57093811 123.52239227]
[92.71509552 137.33213806]
[86.85926056 151.14189148]
[81.00341797 164.95162964]
[88.53613281 170.29101562]
[95.10620117 176.77229309]
[100.54261017 184.22485352]
[104.70413971 192.45278931]
[107.48306274 201.24012756]
[108.80792999 210.35641479]
[108.64541626 219.56283569]
[107.00112915 228.61839294]
[103.91944885 237.28628540]
[99.48231506 245.34008789]
[93.80709076 252.56961060]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 29]
[8 28]
[9 27]
[11 25]
[12 24]
[13 23]
[14 22]
[15 21]
[16 20]
[36 176]
[37 175]
[38 174]
[39 173]
[47 76]
[48 75]
[49 74]
[50 73]
[52 71]
[53 70]
[54 69]
[55 67]
[56 66]
[57 65]
[58 64]
[59 63]
[77 126]
[78 125]
[79 124]
[80 123]
[84 121]
[85 120]
[86 119]
[87 118]
[89 114]
[90 113]
[91 112]
[92 111]
[96 107]
[97 106]
[98 105]
[99 104]
[127 170]
[128 169]
[129 168]
[130 167]
[131 166]
[132 165]
[133 164]
[134 163]
[135 162]
[136 161]
[145 154]
[146 153]
[147 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
