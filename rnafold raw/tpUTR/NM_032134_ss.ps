%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 13:53:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCUUCCUCCGAGGGCCGUCUCUCCCAGCCGAACACAGCCCACCCGCCCAGCUCCGCCGCGGUGGCAAACAGGGGGCUGGAGAGGCACGUGGACAUGCCUCCUGGGGAGGGGCUCGAGGAGCCCACGCGGGGGCCGCGGUCCAGCACCGCUCAGUGAGCGGAGGUGUAAAUAAACAUUCAGGAGGAA\
) } def
/len { sequence length } bind def

/coor [
[85.83524323 266.99224854]
[70.05081177 266.20028687]
[59.51164627 254.42312622]
[60.47044754 238.64794922]
[72.35838318 228.23390198]
[73.11003876 213.25274658]
[73.86170197 198.27159119]
[74.61336517 183.29043579]
[75.36502838 168.30928040]
[76.11669159 153.32812500]
[56.44365692 124.05322266]
[59.32442474 94.24237061]
[77.09471893 77.07689667]
[69.23588562 64.30040741]
[61.37704086 51.52391815]
[53.51820374 38.74743271]
[45.65936279 25.97094345]
[37.80052185 13.19445610]
[29.94168282 0.41796869]
[14.82917881 -3.35694361]
[7.04120398 -16.42607117]
[10.73313904 -30.81027031]
[2.87429929 -43.58675766]
[-4.98454046 -56.36324692]
[-12.84337997 -69.13973236]
[-20.70221901 -81.91622162]
[-27.87853050 -87.60049438]
[-28.58357048 -94.97251892]
[-36.22782135 -107.87854004]
[-48.40855789 -106.33837891]
[-60.43857193 -109.87493134]
[-70.24884033 -118.09746552]
[-76.06639862 -129.79222107]
[-76.73269653 -143.09877014]
[-71.92801666 -155.80535889]
[-62.25940704 -165.71650696]
[-77.78927612 -166.92518616]
[-87.64254761 -178.51689148]
[-86.39455414 -193.31480408]
[-96.26902771 -204.60615540]
[-106.14350128 -215.89752197]
[-116.01797485 -227.18887329]
[-125.87240601 -224.89759827]
[-135.80720520 -226.41560364]
[-144.41191101 -231.47695923]
[-150.48364258 -239.31626892]
[-153.19520569 -248.78411865]
[-152.20748901 -258.51541138]
[-164.85087585 -266.58663940]
[-177.49426270 -274.65786743]
[-190.13763428 -282.72909546]
[-202.78102112 -290.80035400]
[-215.42440796 -298.87158203]
[-228.06779480 -306.94281006]
[-240.71118164 -315.01403809]
[-253.74313354 -322.44155884]
[-267.13092041 -329.20672607]
[-280.51870728 -335.97186279]
[-296.14746094 -332.34948730]
[-308.63394165 -342.42257690]
[-308.39959717 -358.46392822]
[-295.62420654 -368.16796875]
[-280.10794067 -364.09060669]
[-273.75354004 -349.35964966]
[-260.36575317 -342.59451294]
[-246.97798157 -335.82934570]
[-250.49131775 -350.41210938]
[-242.79650879 -363.28802490]
[-228.28936768 -367.10153198]
[-215.25738525 -359.67401123]
[-211.14538574 -345.24865723]
[-218.30241394 -332.06619263]
[-232.63993835 -327.65744019]
[-219.99655151 -319.58618164]
[-207.35317993 -311.51495361]
[-194.70979309 -303.44372559]
[-182.06640625 -295.37249756]
[-169.42301941 -287.30123901]
[-156.77963257 -279.23001099]
[-144.13624573 -271.15878296]
[-140.69560242 -273.64334106]
[-136.89427185 -275.53036499]
[-138.14610291 -290.47802734]
[-139.39794922 -305.42572021]
[-140.64978027 -320.37338257]
[-141.90161133 -335.32104492]
[-143.15345764 -350.26870728]
[-156.49369812 -358.19445801]
[-162.59661865 -372.46099854]
[-159.11549377 -387.58255005]
[-147.38890076 -397.74459839]
[-131.92596436 -399.03958130]
[-118.67247772 -390.96957397]
[-112.72469330 -376.63766479]
[-116.36964417 -361.55477905]
[-128.20578003 -351.52056885]
[-126.95394897 -336.57287598]
[-125.70211029 -321.62521362]
[-124.45027161 -306.67755127]
[-123.19843292 -291.72985840]
[-121.94659424 -276.78219604]
[-103.04921722 -261.68740845]
[-104.72661591 -237.06335449]
[-94.85214233 -225.77198792]
[-84.97766876 -214.48063660]
[-75.10319519 -203.18927002]
[-60.27097702 -202.45376587]
[-50.09600830 -191.14338684]
[-50.96804810 -175.59098816]
[-35.97275925 -175.21504211]
[-25.54487228 -185.99739075]
[-15.11698532 -196.77973938]
[-4.68909931 -207.56210327]
[5.73878717 -218.34445190]
[16.16667366 -229.12681580]
[22.83166695 -244.71572876]
[39.65641403 -242.62664795]
[42.30652618 -225.88110352]
[26.94902802 -218.69892883]
[16.52114296 -207.91656494]
[6.09325600 -197.13421631]
[-4.33463049 -186.35185242]
[-14.76251698 -175.56950378]
[-25.19040298 -164.78715515]
[-14.14314270 -148.88002014]
[-13.79845715 -130.37730408]
[-23.32179642 -115.52278900]
[-15.67754745 -102.61676788]
[-7.92573214 -89.77506256]
[-0.06689236 -76.99857330]
[7.79194736 -64.22208405]
[15.65078735 -51.44559860]
[23.50962639 -38.66910934]
[38.01289749 -35.47681427]
[46.16488266 -22.63158989]
[42.71817017 -7.44087124]
[50.57701111 5.33561659]
[58.43585205 18.11210442]
[66.29469299 30.88859177]
[74.15352631 43.66508102]
[82.01236725 56.44156647]
[89.87120819 69.21805573]
[102.44477081 62.46868515]
[118.54584503 61.40888977]
[135.46644592 67.62423706]
[149.87196350 81.40237427]
[158.41226196 101.51924133]
[172.01863098 107.83326721]
[185.62500000 114.14728546]
[199.23135376 120.46131134]
[212.83772278 126.77532959]
[226.44407654 133.08935547]
[243.35673523 134.27201843]
[246.90217590 150.85110474]
[231.95248413 158.84753418]
[220.13006592 146.69570923]
[206.52369690 140.38169861]
[192.91732788 134.06767273]
[179.31097412 127.75364685]
[165.70460510 121.43962860]
[152.09825134 115.12561035]
[147.20834351 120.81233978]
[132.53866577 137.87254333]
[140.82005310 150.37928772]
[149.10142517 162.88604736]
[157.38279724 175.39279175]
[165.66418457 187.89953613]
[181.19975281 190.80152893]
[190.06399536 203.88589478]
[186.99792480 219.38992310]
[173.82057190 228.11534119]
[158.34983826 224.88551331]
[149.76422119 211.61665344]
[153.15742493 196.18092346]
[144.87605286 183.67416382]
[136.59468079 171.16741943]
[128.31329346 158.66067505]
[120.03192139 146.15391541]
[112.79840088 148.13539124]
[98.33136749 152.09831238]
[91.09784698 154.07978821]
[90.34618378 169.06094360]
[89.59452057 184.04209900]
[88.84285736 199.02325439]
[88.09119415 214.00439453]
[87.33953857 228.98554993]
[98.12535858 240.53724670]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 186]
[6 185]
[7 184]
[8 183]
[9 182]
[10 181]
[13 142]
[14 141]
[15 140]
[16 139]
[17 138]
[18 137]
[19 136]
[22 133]
[23 132]
[24 131]
[25 130]
[26 129]
[28 128]
[29 127]
[36 109]
[39 106]
[40 105]
[41 104]
[42 103]
[48 80]
[49 79]
[50 78]
[51 77]
[52 76]
[53 75]
[54 74]
[55 73]
[56 66]
[57 65]
[58 64]
[82 101]
[83 100]
[84 99]
[85 98]
[86 97]
[87 96]
[110 124]
[111 123]
[112 122]
[113 121]
[114 120]
[115 119]
[147 161]
[148 160]
[149 159]
[150 158]
[151 157]
[152 156]
[163 178]
[164 177]
[165 176]
[166 175]
[167 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
