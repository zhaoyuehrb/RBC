%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 14:17:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACCGUAAAGAGUACGAGCGCGCCAUUCAUCAUCAGACAGCCCACACUGGUGAGAAAUGAUGGAAUGUUAGUCUUAUAGGUAUGGCUUUAGCAAUUGAGAGAGUUCAAAAUGCAGAUCUUGCCACAUUAGAAAGCAUUCAAUGUCAGUCCUGUUUUAAUGGAAUAUCUGACUAUUCAAUGGUAAAUUAAG\
) } def
/len { sequence length } bind def

/coor [
[105.88842010 317.81604004]
[118.26698303 308.72387695]
[116.54373932 293.82321167]
[114.82050323 278.92251587]
[113.09725952 264.02182007]
[111.37401581 249.12115479]
[102.81208038 243.50584412]
[98.67594910 233.89959717]
[100.55767822 223.38806152]
[108.07236481 215.49468994]
[106.84014130 200.54537964]
[105.60792542 185.59608459]
[104.37570190 170.64678955]
[103.14348602 155.69747925]
[88.65993500 151.79533386]
[80.08438110 164.10224915]
[79.23231506 180.47923279]
[64.50244141 187.68777466]
[51.04759216 178.31231689]
[52.70896149 161.99754333]
[67.77747345 155.52668762]
[76.35302734 143.21978760]
[67.49707794 129.44335938]
[64.61782837 115.04026031]
[49.93375778 118.10260010]
[35.24967957 121.16494751]
[20.56560707 124.22728729]
[11.89115334 137.16528320]
[-3.04421091 140.06175232]
[-15.32515049 131.71224976]
[-30.00922585 134.77459717]
[-44.69330215 137.83692932]
[-59.37737656 140.89927673]
[-74.06145477 143.96162415]
[-88.74552917 147.02395630]
[-103.42960358 150.08630371]
[-108.15550232 164.70004272]
[-119.56587982 174.98104858]
[-134.59138489 178.16377258]
[-149.19023132 173.39207458]
[-159.43542480 161.94953918]
[-162.57102966 146.91413879]
[-157.75361633 132.33030701]
[-146.27900696 122.12104034]
[-131.23384094 119.03256989]
[-116.66519165 123.89568329]
[-106.49194336 135.40222168]
[-91.80786896 132.33988953]
[-77.12379456 129.27754211]
[-62.43971634 126.21520233]
[-47.75564194 123.15286255]
[-33.07156754 120.09051514]
[-18.38749313 117.02817535]
[-10.46768475 104.46584320]
[4.38043165 101.15100861]
[17.50326347 109.54321289]
[32.18733978 106.48086548]
[46.87141418 103.41852570]
[61.55548859 100.35618591]
[64.32355499 85.67176819]
[72.48117065 73.15188599]
[84.79599762 64.68788147]
[99.40766144 61.55840302]
[102.10681915 46.80324936]
[104.80597687 32.04809570]
[107.50513458 17.29294395]
[110.20429230 2.53779030]
[112.90345764 -12.21736240]
[115.60261536 -26.97251511]
[108.92403412 -38.01999283]
[111.48727417 -50.26279449]
[121.38177490 -57.24017334]
[124.32324982 -71.94893646]
[127.26472473 -86.65769958]
[114.73709106 -97.43653870]
[109.38060760 -112.97167969]
[112.56620789 -128.99694824]
[123.33261871 -141.16180420]
[138.67376709 -146.21243286]
[141.37292480 -160.96759033]
[144.07208252 -175.72273254]
[146.77124023 -190.47789001]
[141.64349365 -205.44508362]
[151.54469299 -216.57232666]
[154.24385071 -231.32748413]
[152.70857239 -240.34965515]
[157.11065674 -246.30226135]
[160.05212402 -261.01101685]
[162.99360657 -275.71978760]
[161.60693359 -284.76599121]
[166.10632324 -290.64538574]
[169.28932190 -305.30377197]
[172.47232056 -319.96215820]
[166.44909668 -337.35504150]
[178.72766113 -349.88299561]
[181.66914368 -364.59176636]
[184.61061096 -379.30053711]
[187.55209351 -394.00927734]
[190.49357605 -408.71804810]
[184.72851562 -424.07046509]
[195.34916687 -436.56579590]
[211.42991638 -433.34994507]
[216.42825317 -417.73110962]
[205.20233154 -405.77658081]
[202.26084900 -391.06781006]
[199.31938171 -376.35903931]
[196.37789917 -361.65029907]
[193.43641663 -346.94152832]
[199.88656616 -336.69552612]
[197.54431152 -324.40853882]
[187.13070679 -316.77917480]
[183.94770813 -302.12075806]
[180.76470947 -287.46237183]
[177.70237732 -272.77828979]
[174.76089478 -258.06954956]
[171.81941223 -243.36077881]
[168.99900818 -228.62832642]
[166.29985046 -213.87316895]
[171.62065125 -199.96136475]
[161.52639771 -187.77873230]
[158.82723999 -173.02357483]
[156.12808228 -158.26843262]
[153.42892456 -143.51327515]
[164.40127563 -135.36633301]
[170.82060242 -123.22666168]
[171.38223267 -109.43948364]
[165.91940308 -96.69622803]
[155.44699097 -87.50918579]
[141.97349548 -83.71621704]
[139.03201294 -69.00745392]
[136.09053040 -54.29869461]
[142.60675049 -38.01214600]
[130.35777283 -24.27335739]
[127.65860748 -9.51820374]
[124.95944977 5.23694897]
[122.26029205 19.99210167]
[119.56113434 34.74725342]
[116.86197662 49.50240707]
[114.16281891 64.25756073]
[131.07157898 73.01908875]
[142.63455200 89.72152710]
[145.20520020 111.15409851]
[137.02565002 132.49969482]
[150.51715088 139.05554199]
[164.00866699 145.61138916]
[177.50018311 152.16725159]
[190.99168396 158.72309875]
[204.69152832 164.83164978]
[218.58485413 170.48631287]
[232.47819519 176.14099121]
[245.03659058 167.18051147]
[260.44689941 166.45487976]
[273.79168701 174.19566345]
[280.81274414 187.93278503]
[279.26965332 203.28277588]
[269.65478516 215.34751892]
[255.03625488 220.27720642]
[240.07873535 216.49877930]
[229.55516052 205.21792603]
[226.82353210 190.03431702]
[212.93019104 184.37965393]
[199.03686523 178.72499084]
[196.39242554 179.70277405]
[193.19821167 179.68286133]
[189.83561707 178.44937134]
[186.75746155 175.92958069]
[184.43583679 172.21459961]
[170.94433594 165.65875244]
[157.45281982 159.10290527]
[143.96130371 152.54705811]
[130.46980286 145.99121094]
[118.09278870 154.46525574]
[119.32500458 169.41456604]
[120.55722809 184.36386108]
[121.78944397 199.31317139]
[123.02166748 214.26246643]
[135.24400330 230.27897644]
[126.27470398 247.39790344]
[127.99794769 262.29858398]
[129.72119141 277.19927979]
[131.44442749 292.09997559]
[133.16766357 307.00064087]
[147.29470825 313.02746582]
[156.50283813 325.31997681]
[158.31512451 340.57156372]
[152.24406433 354.67965698]
[139.92274475 363.84921265]
[124.66555023 365.61367798]
[110.57656860 359.49841309]
[101.44567871 347.14843750]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 182]
[3 181]
[4 180]
[5 179]
[6 178]
[10 176]
[11 175]
[12 174]
[13 173]
[14 172]
[15 22]
[16 21]
[24 59]
[25 58]
[26 57]
[27 56]
[30 53]
[31 52]
[32 51]
[33 50]
[34 49]
[35 48]
[36 47]
[63 139]
[64 138]
[65 137]
[66 136]
[67 135]
[68 134]
[69 133]
[72 131]
[73 130]
[74 129]
[79 123]
[80 122]
[81 121]
[82 120]
[84 118]
[85 117]
[87 116]
[88 115]
[89 114]
[91 113]
[92 112]
[93 111]
[95 108]
[96 107]
[97 106]
[98 105]
[99 104]
[143 171]
[144 170]
[145 169]
[146 168]
[147 167]
[148 162]
[149 161]
[150 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
