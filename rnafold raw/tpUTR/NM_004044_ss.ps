%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 21:40:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUACCACACACUGUUUUUUGGCUUGCUUAUGUGUAGGUGAACAGUCACGCCUGAAACUUUGAGGAUAACUUUUUAAAAAAAUAAAACAGUAUCUCUUAAUCACUGGAUCCAUAGUU\
) } def
/len { sequence length } bind def

/coor [
[96.94935608 165.86112976]
[88.63020325 164.94400024]
[80.49427032 162.98031616]
[72.67265320 160.00175476]
[65.29141235 156.05630493]
[58.46947479 151.20751953]
[52.31678009 145.53355408]
[46.93247223 139.12585449]
[42.40332413 132.08764648]
[38.80231094 124.53237915]
[36.18746567 116.58177948]
[34.60092545 108.36396790]
[19.60223389 108.56196594]
[4.60354090 108.75995636]
[-10.39515209 108.95795441]
[-25.39384651 109.15594482]
[-40.39253998 109.35393524]
[-55.39123154 109.55193329]
[-59.27279663 112.08267212]
[-63.34896851 113.06266022]
[-67.08242798 112.63308716]
[-70.04430389 111.10287476]
[-71.96149445 108.89540863]
[-86.89750671 107.51138306]
[-101.83351898 106.12735748]
[-116.76953125 104.74333191]
[-131.70553589 103.35930634]
[-146.64155579 101.97528076]
[-158.63868713 112.26335144]
[-174.39009094 110.97158051]
[-184.55075073 98.86634064]
[-183.09251404 83.12947083]
[-170.88053894 73.09737396]
[-155.15995789 74.72190857]
[-145.25752258 87.03926849]
[-130.32151794 88.42329407]
[-115.38550568 89.80731964]
[-100.44949341 91.19134521]
[-85.51348114 92.57537079]
[-70.57746887 93.95939636]
[-55.58922577 94.55323792]
[-40.59053421 94.35524750]
[-25.59183884 94.15724945]
[-10.59314632 93.95925903]
[4.40554714 93.76126099]
[19.40423965 93.56327057]
[34.40293503 93.36527252]
[36.61309052 81.85904694]
[40.82500076 70.92571259]
[46.90566254 60.91053772]
[54.66304016 52.12981033]
[63.85216141 44.86082458]
[74.18283081 39.33313370]
[85.32880402 35.72130203]
[96.93809509 34.13939285]
[108.64408875 34.63736343]
[120.07709503 37.19948196]
[130.87606812 41.74484253]
[140.69996643 48.12990189]
[149.23857117 56.15301514]
[156.22221375 65.56082153]
[169.82147217 59.23151779]
[183.42074585 52.90221405]
[197.02000427 46.57291031]
[210.61926270 40.24360657]
[224.13380432 33.73535156]
[237.56124878 27.04927635]
[250.98869324 20.36320114]
[264.41613770 13.67712593]
[270.80166626 6.96628666]
[278.28744507 6.99705744]
[291.88671875 0.66775477]
[305.40124512 -5.84050131]
[318.82870483 -12.52657700]
[332.25613403 -19.21265221]
[345.68359375 -25.89872742]
[359.11105347 -32.58480453]
[363.89523315 -47.64757156]
[377.96737671 -54.84133148]
[392.97872925 -49.89815140]
[400.02331543 -35.75073242]
[394.92169189 -20.79248619]
[380.70059204 -13.89787769]
[365.79711914 -19.15735245]
[352.36965942 -12.47127819]
[338.94223022 -5.78520250]
[325.51477051 0.90087271]
[312.08731079 7.58694792]
[307.44406128 13.45874500]
[298.21600342 14.26701641]
[284.61676025 20.59631920]
[271.10223389 27.10457611]
[257.67477417 33.79064941]
[244.24731445 40.47672653]
[230.81987000 47.16279984]
[226.17662048 53.03459930]
[216.94856262 53.84286880]
[203.34930420 60.17217255]
[189.75004578 66.50147247]
[176.15078735 72.83078003]
[162.55151367 79.16007996]
[165.44488525 107.99755859]
[155.69232178 135.28967285]
[135.17828369 155.76274109]
[141.68653870 169.27726746]
[148.19480896 182.79179382]
[154.70306396 196.30633545]
[169.70137024 201.28894043]
[176.70875549 215.45481873]
[171.56785583 230.39959717]
[157.32868958 237.25682068]
[142.43908691 231.95822144]
[135.73278809 217.64733887]
[141.18852234 202.81459045]
[134.68026733 189.30006409]
[128.17201233 175.78552246]
[121.66375732 162.27099609]
[113.60029602 164.51376343]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 47]
[13 46]
[14 45]
[15 44]
[16 43]
[17 42]
[18 41]
[23 40]
[24 39]
[25 38]
[26 37]
[27 36]
[28 35]
[61 101]
[62 100]
[63 99]
[64 98]
[65 97]
[66 95]
[67 94]
[68 93]
[69 92]
[71 91]
[72 90]
[73 88]
[74 87]
[75 86]
[76 85]
[77 84]
[104 117]
[105 116]
[106 115]
[107 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
