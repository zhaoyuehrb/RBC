%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 15:42:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGAGGGAGAGGAGGGGAGCCAAGACACUCAUGCCACUCUGGCUCUGAAGGGACAAAGGCUUCUGGCUUUUGCCCCCAGCCCCUUGGAUACCAGUAAUUCAAACCUUCCUCAUUUCAUCUCAGGUGUCUCCUUGCUGUCAUCCCACAUAGCCCUGGGGUGAAUGUGAAUCCAGAGUCUAUUUUUCUAAAUAAAUUGGAAAAAACAUUUUGAACUCUA\
) } def
/len { sequence length } bind def

/coor [
[90.27854156 206.02412415]
[82.52087402 191.57592773]
[91.38341522 177.77783203]
[91.59858704 162.77937317]
[91.81375885 147.78091431]
[92.02892303 132.78247070]
[82.06832123 128.57766724]
[73.94926453 121.43798065]
[68.50557709 112.09665680]
[66.29631042 101.51303101]
[51.53681946 98.83769989]
[36.77732468 96.16236877]
[22.01783371 93.48704529]
[7.25834084 90.81171417]
[-7.50115156 88.13638306]
[-22.26064301 85.46105957]
[-37.02013779 82.78572845]
[-51.60190964 86.30310059]
[-63.51856232 95.41316986]
[-75.43521881 104.52323151]
[-87.35187531 113.63330078]
[-99.26853180 122.74337006]
[-111.18518066 131.85343933]
[-116.09841156 139.54675293]
[-123.33875275 141.00724792]
[-135.38485718 149.94544983]
[-132.45828247 164.92535400]
[-136.32937622 179.68942261]
[-146.22953796 191.30619812]
[-160.19306946 197.46919250]
[-175.44750977 196.95472717]
[-188.96408081 189.86494446]
[-198.05906677 177.60752869]
[-200.92662048 162.61619568]
[-196.99742126 147.86750793]
[-187.05158997 136.28979492]
[-173.06390381 130.18183899]
[-157.81159973 130.75637817]
[-144.32305908 137.89933777]
[-132.27694702 128.96115112]
[-120.29524994 119.93678284]
[-108.37859344 110.82671356]
[-96.46194458 101.71664429]
[-84.54528809 92.60658264]
[-72.62863159 83.49651337]
[-60.71197510 74.38644409]
[-62.20811462 67.03718567]
[-76.90667725 70.02922058]
[-79.89846802 55.33060837]
[-65.20039368 52.33867264]
[-66.69652557 44.98941803]
[-81.22634888 41.26323700]
[-95.75616455 37.53705978]
[-104.84008026 38.43661499]
[-110.46692657 33.65181351]
[-124.94179535 29.71759033]
[-139.41667175 25.78336906]
[-153.89154053 21.84914780]
[-168.36640930 17.91492462]
[-182.84127808 13.98070335]
[-197.31614685 10.04648113]
[-211.79101562 6.11225891]
[-228.66148376 7.79261398]
[-234.94638062 -7.95338249]
[-221.55558777 -18.35158920]
[-207.85679626 -8.36261177]
[-193.38192749 -4.42839003]
[-178.90705872 -0.49416810]
[-164.43218994 3.44005394]
[-149.95732117 7.37427568]
[-135.48243713 11.30849743]
[-121.00756836 15.24271965]
[-106.53269958 19.17694092]
[-92.02998352 23.00724220]
[-77.50016785 26.73342133]
[-62.97034836 30.45960045]
[-55.47034836 17.46921921]
[-65.96222687 6.74911928]
[-76.45410156 -3.97098184]
[-86.94597626 -14.69108295]
[-102.87680817 -18.58215523]
[-107.21209717 -34.39788437]
[-95.49206543 -45.86840439]
[-79.77327728 -41.19382858]
[-76.22587585 -25.18295670]
[-65.73400116 -14.46285629]
[-55.24212265 -3.74275589]
[-44.75024796 6.97734499]
[-48.81824493 -7.46050119]
[-39.86636353 -19.49643898]
[-27.73640251 -28.32050133]
[-13.52902699 -33.13199615]
[1.46659589 -33.49433517]
[15.88977528 -29.37463760]
[28.43176079 -21.14672279]
[37.95450592 -9.55718613]
[43.59391785 4.34234715]
[44.83828354 19.29064369]
[41.57469177 33.93130493]
[34.09927368 46.93584824]
[23.09034920 57.12425232]
[9.54685688 63.57202530]
[-5.30227709 65.69410706]
[-20.10951424 63.29798126]
[-34.34480667 68.02623749]
[-19.58531570 70.70156097]
[-4.82582283 73.37689209]
[9.93367004 76.05222321]
[24.69316292 78.72755432]
[39.45265579 81.40287781]
[54.21214676 84.07820892]
[68.97164154 86.75354004]
[83.60014343 67.19249725]
[109.42515564 61.51875305]
[134.46797180 75.03512573]
[145.70112610 65.09448242]
[156.93426514 55.15383911]
[168.16741943 45.21319580]
[179.40055847 35.27254868]
[190.63371277 25.33190727]
[201.86685181 15.39126301]
[213.10000610 5.45061970]
[224.33314514 -4.49002409]
[235.56629944 -14.43066788]
[246.79945374 -24.37131119]
[231.82456970 -23.50340652]
[218.70767212 -30.77986336]
[211.51687622 -43.94392014]
[212.48237610 -58.91281509]
[221.30473328 -71.04402161]
[235.24772644 -76.57509613]
[249.98701477 -73.79061127]
[260.95129395 -63.55416107]
[264.74002075 -49.04052734]
[260.17944336 -34.75296783]
[272.59893799 -43.16463089]
[285.01843262 -51.57629395]
[297.43792725 -59.98795700]
[309.85742188 -68.39962006]
[310.23468018 -83.91210938]
[319.68463135 -96.21974945]
[334.57357788 -100.59001160]
[349.17639160 -95.34242249]
[357.87802124 -82.49480438]
[357.33251953 -66.98732758]
[347.74960327 -54.78292084]
[332.81411743 -50.57443619]
[318.26907349 -55.98012543]
[305.84957886 -47.56846237]
[293.43008423 -39.15679550]
[281.01058960 -30.74513435]
[268.59109497 -22.33346939]
[256.74008179 -13.13816357]
[245.50694275 -3.19752026]
[234.27378845 6.74312353]
[223.04064941 16.68376732]
[211.80749512 26.62441063]
[200.57435608 36.56505585]
[189.34120178 46.50569916]
[178.10806274 56.44634247]
[166.87490845 66.38698578]
[155.64176941 76.32762909]
[144.40861511 86.26827240]
[144.19346619 93.76518250]
[158.81727600 90.42691040]
[173.11857605 85.90220642]
[185.09140015 94.93832397]
[184.66168213 109.93216705]
[172.19099426 118.26773834]
[158.17146301 112.93045807]
[143.76316833 108.75901031]
[143.54801941 116.25592804]
[154.19259644 126.82442474]
[164.83717346 137.39291382]
[175.48173523 147.96141052]
[186.12631226 158.52990723]
[196.77088928 169.09840393]
[210.14111328 167.49969482]
[221.82128906 173.79971313]
[227.65556335 185.50236511]
[225.71530151 198.23719788]
[236.20718384 208.95730591]
[246.69905090 219.67739868]
[257.19091797 230.39750671]
[267.68280029 241.11759949]
[278.17468262 251.83770752]
[288.66656494 262.55780029]
[299.15841675 273.27789307]
[309.65029907 283.99801636]
[325.61239624 285.60769653]
[334.18463135 299.16854858]
[328.79113770 314.27780151]
[313.56933594 319.34494019]
[300.19607544 310.48291016]
[298.93020630 294.48986816]
[288.43832397 283.76977539]
[277.94644165 273.04968262]
[267.45458984 262.32958984]
[256.96270752 251.60948181]
[246.47082520 240.88937378]
[235.97895813 230.16928101]
[225.48707581 219.44917297]
[214.99520874 208.72908020]
[198.18325806 209.26518250]
[185.94641113 197.23735046]
[186.20239258 179.74298096]
[175.55781555 169.17448425]
[164.91323853 158.60598755]
[154.26867676 148.03749084]
[143.62409973 137.46899414]
[132.97952271 126.90049744]
[124.32190704 131.27435303]
[115.47024536 133.25596619]
[107.02738190 132.99763489]
[106.81221008 147.99609375]
[106.59704590 162.99455261]
[106.38187408 177.99299622]
[114.84494781 192.03965759]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 217]
[4 216]
[5 215]
[6 214]
[10 112]
[11 111]
[12 110]
[13 109]
[14 108]
[15 107]
[16 106]
[17 105]
[18 46]
[19 45]
[20 44]
[21 43]
[22 42]
[23 41]
[25 40]
[26 39]
[51 76]
[52 75]
[53 74]
[55 73]
[56 72]
[57 71]
[58 70]
[59 69]
[60 68]
[61 67]
[62 66]
[77 88]
[78 87]
[79 86]
[80 85]
[115 163]
[116 162]
[117 161]
[118 160]
[119 159]
[120 158]
[121 157]
[122 156]
[123 155]
[124 154]
[125 153]
[135 152]
[136 151]
[137 150]
[138 149]
[139 148]
[172 211]
[173 210]
[174 209]
[175 208]
[176 207]
[177 206]
[181 203]
[182 202]
[183 201]
[184 200]
[185 199]
[186 198]
[187 197]
[188 196]
[189 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
