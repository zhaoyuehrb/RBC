%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 00:20:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGUCGCUGGAUCUCUGGGAGCUCCUUGAUGGCUCCCAGACCUUGGCUUUUGGGAAUUGCACUUUUGGGCCUUUGGGCUCUGGAACCUGCUCUGGGUCAUUGGUGAGACUUGGAAGGGGCAGCCCCCGCUGGCUUCUUGGUUUUGUGGUUGCCAGCCUCAGGUCAUCCUUUUAAUCUUUGCUGACGGUUCAGUCCUGCCUCUACUGUCUCUCCAUAGCCCUGGUGGGGUCCCCCUUCUUUCUCCACUGUACAGAA\
GAGCCACCACUGGGAUGGGGAAUAAAGUUGAGAACAUGAGUUUGGGCUGA\
) } def
/len { sequence length } bind def

/coor [
[280.48977661 184.88963318]
[273.89877319 170.77593994]
[259.85678101 165.50119019]
[245.81481934 160.22645569]
[231.77284241 154.95170593]
[217.70397949 149.74911499]
[203.60858154 144.61882019]
[186.48930359 148.57463074]
[174.80497742 134.31228638]
[160.65765381 129.32696533]
[146.51034546 124.34165192]
[132.36302185 119.35633087]
[119.09950256 143.32322693]
[88.60549927 155.83232117]
[80.70901489 168.58557129]
[72.81253052 181.33883667]
[64.91604614 194.09208679]
[57.01956558 206.84535217]
[49.12308502 219.59860229]
[41.22660065 232.35186768]
[33.33012009 245.10511780]
[25.43363571 257.85836792]
[17.53715324 270.61163330]
[22.60198402 285.40628052]
[16.92385674 299.97656250]
[3.18381023 307.44281006]
[-12.13052654 304.27972412]
[-21.78819084 291.98080444]
[-21.22912979 276.35321045]
[-10.71731472 264.77584839]
[4.78389692 262.71514893]
[12.68037891 249.96189880]
[20.57686234 237.20863342]
[28.47334480 224.45538330]
[36.36982727 211.70211792]
[44.26630783 198.94886780]
[52.16279221 186.19561768]
[60.05927277 173.44235229]
[67.95575714 160.68910217]
[75.85224152 147.93583679]
[65.03009796 137.54924011]
[52.61178589 145.96266174]
[40.19347000 154.37606812]
[39.81838989 169.88861084]
[30.37016869 182.19758606]
[15.48184490 186.56993103]
[0.87828201 181.32440186]
[-7.82515240 168.47801208]
[-7.28181028 152.97044373]
[2.29938221 140.76469421]
[17.23426056 136.55410767]
[31.78006172 141.95774841]
[44.19837570 133.54434204]
[56.61669159 125.13093567]
[54.19678116 118.03205872]
[39.99902725 122.87187195]
[25.80127716 127.71168518]
[11.60352421 132.55149841]
[-2.59422851 137.39132690]
[-16.79206085 142.23089600]
[-21.63140678 128.03298950]
[-7.43404484 123.19356537]
[6.76370764 118.35375214]
[20.96146011 113.51393890]
[35.15921402 108.67411804]
[49.35696411 103.83430481]
[46.93705750 96.73542786]
[31.96550751 97.65884399]
[16.99395752 98.58225250]
[2.02240729 99.50566864]
[-12.94914246 100.42908478]
[-26.31319237 109.93351746]
[-41.11171722 102.86698914]
[-42.12126160 86.49894714]
[-28.30329514 77.66741943]
[-13.87255573 85.45753479]
[1.09899378 84.53411865]
[16.07054329 83.61070251]
[31.04209328 82.68729401]
[46.01364517 81.76387787]
[59.90303421 74.82212067]
[73.60965729 73.06335449]
[65.45299530 60.47491837]
[57.29632950 47.88647842]
[49.01085281 35.38244247]
[40.59744263 22.96412849]
[32.18403244 10.54581451]
[23.77062416 -1.87250018]
[15.35721302 -14.29081440]
[-8.87130737 -5.89814806]
[-37.55477142 -25.77618790]
[-50.46746826 -33.40915680]
[-63.38016891 -41.04212952]
[-76.29286194 -48.67509842]
[-89.20556641 -56.30806732]
[-102.11826324 -63.94103622]
[-115.03096008 -71.57400513]
[-127.94365692 -79.20697784]
[-142.12921143 -72.91813660]
[-157.29496765 -76.20132446]
[-167.60939026 -87.79409790]
[-169.10636902 -103.23880005]
[-161.21026611 -116.59661865]
[-146.95732117 -122.73120880]
[-131.82807922 -119.28369141]
[-121.64002228 -107.57970428]
[-120.31068420 -92.11967468]
[-107.39798737 -84.48670959]
[-94.48529053 -76.85373688]
[-81.57259369 -69.22076416]
[-68.65989685 -61.58779526]
[-55.74719620 -53.95482635]
[-42.83449936 -46.32185745]
[-29.92180061 -38.68888474]
[-24.92625237 -44.28303528]
[-9.93960762 -61.06547928]
[-18.97912598 -73.03573608]
[-28.01864624 -85.00599670]
[-37.05816650 -96.97625732]
[-52.36291504 -102.86663818]
[-54.64643478 -119.10602570]
[-41.55963135 -128.98872375]
[-26.56509018 -122.34825897]
[-25.08790779 -106.01577759]
[-16.04838753 -94.04551697]
[-7.00886822 -82.07525635]
[2.03065133 -70.10499573]
[15.62526798 -76.44427490]
[12.26600933 -91.06327820]
[8.90675068 -105.68228912]
[5.54749155 -120.30129242]
[2.18823290 -134.92030334]
[-1.17102575 -149.53930664]
[-14.28213215 -157.94981384]
[-17.48064613 -172.82342529]
[-9.38171291 -185.27102661]
[-12.74097157 -199.89002991]
[-27.29203415 -205.01547241]
[-36.74409866 -217.20817566]
[-38.08104324 -232.57749939]
[-30.87625504 -246.21914673]
[-17.42875481 -253.78012085]
[-2.02959251 -252.84774780]
[10.40741634 -243.71952820]
[15.91366768 -229.30825806]
[12.73213577 -214.21250916]
[1.87803614 -203.24929810]
[5.23729515 -188.63029480]
[17.95752907 -180.96665955]
[21.57254791 -166.18876648]
[13.44798183 -152.89857483]
[16.80723953 -138.27955627]
[20.16650009 -123.66055298]
[23.52575874 -109.04154968]
[26.88501740 -94.42253876]
[30.24427605 -79.80352783]
[43.67594910 -56.58294678]
[40.73710251 -34.63710022]
[27.77552795 -22.70422554]
[36.18893814 -10.28591061]
[44.60234833 2.13240385]
[53.01575851 14.55071831]
[61.42916870 26.96903229]
[65.81971741 28.72904587]
[69.17342377 33.23842239]
[69.88476562 39.72981262]
[78.04143524 52.31825256]
[86.19809723 64.90669250]
[98.96828461 62.30426788]
[111.86170197 64.20429230]
[123.33834076 70.37982178]
[132.02738953 80.09324646]
[136.89103699 92.18437195]
[137.34834290 105.20901489]
[151.49566650 110.19433594]
[165.64297485 115.17965698]
[179.79029846 120.16497803]
[191.70602417 115.31453705]
[203.36624146 119.72084045]
[208.73889160 130.52342224]
[222.83427429 135.65373230]
[231.91706848 135.64288330]
[237.04759216 140.90972900]
[251.08955383 146.18447876]
[265.13153076 151.45921326]
[279.17352295 156.73396301]
[293.42663574 150.45018005]
[307.59207153 155.99954224]
[313.49484253 169.62646484]
[327.53683472 174.90119934]
[341.57879639 180.17594910]
[355.62078857 185.45068359]
[369.66275024 190.72541809]
[383.70474243 196.00016785]
[397.74670410 201.27490234]
[415.86508179 197.85987854]
[426.43646240 211.89425659]
[440.53186035 217.02456665]
[454.80245972 221.64517212]
[469.22982788 225.75010681]
[483.65722656 229.85505676]
[499.04800415 226.18971252]
[509.17199707 237.11463928]
[523.59936523 241.21957397]
[538.02679443 245.32452393]
[551.21600342 234.69659424]
[567.97540283 234.04954529]
[581.67010498 243.44062805]
[586.99719238 258.99237061]
[601.46594238 262.94897461]
[615.93469238 266.90557861]
[630.40350342 270.86218262]
[644.87225342 274.81878662]
[659.34100342 278.77542114]
[673.80981445 282.73202515]
[678.76281738 281.43548584]
[683.27862549 282.07293701]
[686.70239258 284.16394043]
[688.65960693 287.03967285]
[702.99963379 291.43997192]
[717.33972168 295.84027100]
[731.67980957 300.24057007]
[746.01983643 304.64086914]
[760.35992432 309.04116821]
[774.69995117 313.44146729]
[789.04003906 317.84179688]
[803.40246582 322.16842651]
[817.78698730 326.42126465]
[832.17144775 330.67410278]
[839.70928955 325.16018677]
[848.79876709 323.72399902]
[857.40899658 326.55969238]
[863.67382812 332.92080688]
[866.29595947 341.31176758]
[880.54266357 346.00555420]
[894.78936768 350.69937134]
[909.03607178 355.39315796]
[923.28277588 360.08697510]
[938.78302002 351.92587280]
[955.06103516 357.41607666]
[962.16625977 372.68426514]
[976.08660889 365.20095825]
[991.19696045 369.83258057]
[998.53271484 383.83126831]
[993.74157715 398.89184570]
[979.66613770 406.07913208]
[964.65704346 401.12905884]
[957.61895752 386.97839355]
[947.14324951 394.43045044]
[934.09326172 394.50497437]
[923.21386719 386.95150757]
[918.58892822 374.33364868]
[904.34228516 369.63986206]
[890.09558105 364.94604492]
[875.84887695 360.25225830]
[861.60217285 355.55844116]
[841.79022217 361.43389893]
[827.91857910 345.05859375]
[813.53411865 340.80572510]
[799.14965820 336.55288696]
[791.88140869 337.66409302]
[784.63970947 332.18185425]
[770.29968262 327.78155518]
[755.95959473 323.38125610]
[741.61956787 318.98095703]
[727.27947998 314.58062744]
[712.93945312 310.18032837]
[698.59936523 305.78002930]
[684.25927734 301.37973022]
[669.85314941 297.20077515]
[655.38439941 293.24417114]
[640.91564941 289.28756714]
[626.44689941 285.33096313]
[611.97808838 281.37435913]
[597.50933838 277.41772461]
[583.04058838 273.46112061]
[573.46582031 282.72506714]
[560.46264648 286.08749390]
[547.38854980 282.57012939]
[537.67388916 272.98538208]
[533.92181396 259.75192261]
[519.49444580 255.64697266]
[505.06704712 251.54202271]
[490.70822144 255.50097656]
[479.55227661 244.28244019]
[465.12490845 240.17749023]
[450.69750977 236.07255554]
[458.40032959 248.94371033]
[456.11343384 263.76834106]
[444.88992310 273.71987915]
[429.89813232 274.21572876]
[418.04159546 265.02752686]
[414.78018188 250.38638306]
[421.61569214 237.03439331]
[435.40155029 231.11994934]
[421.30615234 225.98965454]
[410.24670410 230.81143188]
[398.48214722 226.69181824]
[392.47198486 215.31687927]
[378.42999268 210.04214478]
[364.38803101 204.76739502]
[350.34603882 199.49266052]
[336.30407715 194.21791077]
[322.26208496 188.94317627]
[308.22012329 183.66844177]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 186]
[3 185]
[4 184]
[5 183]
[6 181]
[7 180]
[9 177]
[10 176]
[11 175]
[12 174]
[14 40]
[15 39]
[16 38]
[17 37]
[18 36]
[19 35]
[20 34]
[21 33]
[22 32]
[23 31]
[41 54]
[42 53]
[43 52]
[67 80]
[68 79]
[69 78]
[70 77]
[71 76]
[82 168]
[83 167]
[84 166]
[85 163]
[86 162]
[87 161]
[88 160]
[89 159]
[91 114]
[92 113]
[93 112]
[94 111]
[95 110]
[96 109]
[97 108]
[98 107]
[116 127]
[117 126]
[118 125]
[119 124]
[128 156]
[129 155]
[130 154]
[131 153]
[132 152]
[133 151]
[136 148]
[137 147]
[189 305]
[190 304]
[191 303]
[192 302]
[193 301]
[194 300]
[195 299]
[197 296]
[198 295]
[199 287]
[200 286]
[201 285]
[203 283]
[204 282]
[205 281]
[209 276]
[210 275]
[211 274]
[212 273]
[213 272]
[214 271]
[215 270]
[219 269]
[220 268]
[221 267]
[222 266]
[223 265]
[224 264]
[225 263]
[226 262]
[227 260]
[228 259]
[229 258]
[234 256]
[235 255]
[236 254]
[237 253]
[238 252]
[241 248]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
