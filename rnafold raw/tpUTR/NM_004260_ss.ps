%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 23:23:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCACUGCAUUGGGGGAUGUCGGGUAGAGCUGGGGUUGUCAGAGGCUAGGGCAGUGACUGAGGACCUGGGCAAAACCUGCCACAGGGUGUGGGAACGAGGAGGCUCCAAAAUGCAGAAUAAAAAAUGCUCACUUUGUUUUUAUGGG\
) } def
/len { sequence length } bind def

/coor [
[208.20715332 368.10995483]
[217.76441956 356.42401123]
[230.12077332 347.75088501]
[225.12367249 333.60772705]
[220.12657166 319.46456909]
[213.80332947 305.86248779]
[206.21160889 292.92550659]
[198.61988831 279.98849487]
[191.02815247 267.05151367]
[183.43643188 254.11453247]
[175.84469604 241.17753601]
[168.25297546 228.24055481]
[152.56048584 220.45103455]
[152.49645996 202.06906128]
[144.63185120 189.29611206]
[136.76724243 176.52317810]
[128.90263367 163.75024414]
[122.67425537 159.67535400]
[121.00998688 150.62167358]
[107.89536285 143.56080627]
[107.58404541 127.74265289]
[99.99231720 114.80566406]
[89.72875214 103.86678314]
[77.30110931 95.46715546]
[64.87345886 87.06753540]
[52.44581604 78.66791534]
[37.92081070 83.79922485]
[23.32999802 79.44473267]
[14.20892239 67.47518921]
[13.88881207 52.60792542]
[1.46116698 44.20830536]
[-10.96647739 35.80868149]
[-26.73274612 34.49136353]
[-32.94472122 20.95398331]
[-45.37236786 12.55436134]
[-57.80001068 4.15473986]
[-70.22765350 -4.24488211]
[-82.65530396 -12.64450359]
[-98.42156982 -13.96182442]
[-104.63354492 -27.49920273]
[-117.06118774 -35.89882660]
[-129.48883057 -44.29844666]
[-141.91647339 -52.69807053]
[-157.24105835 -49.90609741]
[-169.72479248 -58.60154343]
[-172.29208374 -73.22839355]
[-184.71972656 -81.62801361]
[-197.14736938 -90.02763367]
[-213.10818481 -88.40530396]
[-224.22453308 -99.97277069]
[-221.96890259 -115.85646820]
[-208.07162476 -123.87177277]
[-193.19349670 -117.87004089]
[-188.74774170 -102.45527649]
[-176.32009888 -94.05565643]
[-163.89245605 -85.65603638]
[-149.36314392 -88.72760010]
[-136.64007568 -80.38622284]
[-133.51686096 -65.12571716]
[-121.08921051 -56.72609329]
[-108.66156769 -48.32646942]
[-96.23392487 -39.92684937]
[-81.35655975 -39.21032333]
[-74.25567627 -25.07214928]
[-61.82803345 -16.67252731]
[-49.40039062 -8.27290440]
[-36.97274399 0.12671694]
[-24.54509926 8.52633858]
[-9.66773891 9.24286175]
[-2.56685591 23.38103867]
[9.86078835 31.78066063]
[22.28843307 40.18028259]
[36.20296097 34.93395233]
[50.71022034 38.93437576]
[60.19098282 50.84943390]
[60.84543991 66.24027252]
[73.27308655 74.63989258]
[85.70072937 83.03951263]
[98.12837219 91.43913269]
[98.42139435 84.12035370]
[100.39516449 76.85060120]
[108.25977325 64.07765961]
[116.12438202 51.30472565]
[123.98899078 38.53178787]
[131.85360718 25.75885010]
[135.00953674 9.10122776]
[151.88983154 7.52254200]
[158.07974243 23.30611610]
[144.62654114 33.62345886]
[136.76193237 46.39639664]
[128.89732361 59.16933441]
[121.03271484 71.94226837]
[113.16810608 84.71520996]
[124.40312958 74.77668762]
[139.37097168 73.79501343]
[151.80783081 82.18099213]
[156.50907898 96.42522430]
[151.50732422 110.56674194]
[138.89572144 118.68753815]
[123.95201111 117.38919830]
[112.92930603 107.21394348]
[120.52103424 120.15093231]
[134.17866516 128.13714600]
[133.94697571 143.02995300]
[141.67558289 155.88563538]
[149.54019165 168.65856934]
[157.40480042 181.43150330]
[165.26940918 194.20443726]
[177.65457153 197.96467590]
[183.93150330 208.82252502]
[181.18995667 220.64881897]
[188.78169250 233.58581543]
[196.37341309 246.52279663]
[203.96514893 259.45977783]
[211.55686951 272.39678955]
[219.14859009 285.33377075]
[226.74032593 298.27075195]
[229.44648743 283.51687622]
[239.58872986 272.46542358]
[254.05661011 268.50558472]
[268.41314697 272.85183716]
[278.25549316 284.17120361]
[280.56515503 298.99234009]
[274.63388062 312.76983643]
[262.28060913 321.27847290]
[247.29383850 321.90878296]
[234.26972961 314.46746826]
[239.26683044 328.61062622]
[244.26393127 342.75378418]
[259.32623291 341.73928833]
[274.10348511 344.82733154]
[287.49905396 351.78869629]
[298.51895142 362.10687256]
[306.34542847 375.01611328]
[310.39767456 389.55853271]
[310.37500000 404.65496826]
[306.27908325 419.18515015]
[298.41387939 432.07083130]
[287.36303711 442.35583496]
[273.94659424 449.27694702]
[259.16012573 452.32055664]
[244.10093689 451.26083374]
[229.88647461 446.17636108]
[217.57156372 437.44451904]
[208.07003784 425.71319580]
[202.08699036 411.85296631]
[200.06639099 396.89236450]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 129]
[4 128]
[5 127]
[6 117]
[7 116]
[8 115]
[9 114]
[10 113]
[11 112]
[12 111]
[14 108]
[15 107]
[16 106]
[17 105]
[19 104]
[21 102]
[22 101]
[23 79]
[24 78]
[25 77]
[26 76]
[30 72]
[31 71]
[32 70]
[34 68]
[35 67]
[36 66]
[37 65]
[38 64]
[40 62]
[41 61]
[42 60]
[43 59]
[46 56]
[47 55]
[48 54]
[81 93]
[82 92]
[83 91]
[84 90]
[85 89]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
