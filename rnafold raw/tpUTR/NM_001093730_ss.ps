%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 06:08:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGGAGUCCAGGCUCAAAGGCCUCUUGGUGUGAUGACAAAAUGCAGUUGCACAACUGUAUUAAAAGAAUUAAGACUUCUACCUUUCUUUUAAUAGUUUAGUGUGAACUAUGAAGAAAACAGGUUUUGUUUUUUGAUCUCCCUCCCUACUUAUGUAUCUUAGUUCUGCAGUUCAGAGUGAAGGUUGGGGGUUAGCAG\
) } def
/len { sequence length } bind def

/coor [
[142.82836914 169.88403320]
[152.56675720 158.47511292]
[166.38606262 152.64183044]
[181.35382080 153.62188721]
[170.17485046 143.62036133]
[158.99588013 133.61882019]
[147.81690979 123.61728668]
[136.55895996 113.70475006]
[125.22270966 103.88183594]
[126.77899170 129.21792603]
[103.52593231 153.63122559]
[95.61755371 166.37710571]
[87.70916748 179.12300110]
[79.80078888 191.86888123]
[71.89241028 204.61476135]
[71.91319275 221.01388550]
[57.58786392 228.99618530]
[43.65309143 220.35012817]
[44.44377518 203.97006226]
[59.14652634 196.70637512]
[67.05490875 183.96049500]
[74.96328735 171.21461487]
[82.87167358 158.46873474]
[90.78005219 145.72285461]
[85.69123077 140.21340942]
[74.67235565 150.39105225]
[60.04097748 153.69601440]
[64.49471283 139.37217712]
[75.51359558 129.19453430]
[70.42477417 123.68509674]
[57.09223938 130.55850220]
[43.75970840 137.43190002]
[35.35367584 151.51275635]
[18.96245956 151.00283813]
[11.44793415 136.42668152]
[20.54040146 122.77901459]
[36.88631058 124.09935760]
[50.21884155 117.22595978]
[63.55137253 110.35256195]
[60.47912979 95.66987610]
[57.40717316 80.98849487]
[42.43737411 80.03713226]
[27.46757317 79.08577728]
[12.49777317 78.13441467]
[-2.47202706 77.18305969]
[-17.44182777 76.23169708]
[-32.41162872 75.28034210]
[-47.38142776 74.32897949]
[-62.35122681 73.37762451]
[-76.79648590 81.14077759]
[-90.59793854 72.28347778]
[-89.55783844 55.91734314]
[-74.74615479 48.87845993]
[-61.39986801 58.40782166]
[-46.43006897 59.35918045]
[-31.46026802 60.31053925]
[-16.49046898 61.26189804]
[-1.52066827 62.21325684]
[13.44913197 63.16461563]
[28.41893196 64.11597443]
[43.38873291 65.06733704]
[58.35853195 66.01869202]
[82.79479980 59.13644409]
[103.11584473 65.21046448]
[113.92472839 78.61412048]
[114.16271210 63.61600876]
[114.40070343 48.61789703]
[114.63869476 33.61978531]
[114.87668610 18.62167358]
[107.35931396 4.70047808]
[115.29756927 -7.90243196]
[115.53555298 -22.90054321]
[115.77354431 -37.89865494]
[116.01153564 -52.89676666]
[116.24952698 -67.89488220]
[116.48751831 -82.89299011]
[116.72550201 -97.89110565]
[116.96349335 -112.88921356]
[107.84844971 -118.46931458]
[101.92194366 -127.26573944]
[100.20033264 -137.64981079]
[102.92878723 -147.73214722]
[109.54893494 -155.70646667]
[118.81155396 -160.17317200]
[119.76290894 -175.14297485]
[120.71427155 -190.11277771]
[121.66562653 -205.08258057]
[122.61698914 -220.05236816]
[123.56834412 -235.02217102]
[124.51970673 -249.99197388]
[121.92396545 -256.09130859]
[122.69087219 -261.73593140]
[125.74617767 -265.41928101]
[127.17201996 -280.35134888]
[128.59785461 -295.28344727]
[130.02369690 -310.21551514]
[131.44953918 -325.14758301]
[132.87538147 -340.07968140]
[134.30122375 -355.01174927]
[135.72706604 -369.94381714]
[131.21369934 -386.28598022]
[145.66778564 -395.14691162]
[158.18370056 -383.71066284]
[150.65913391 -368.51797485]
[149.23329163 -353.58590698]
[147.80746460 -338.65383911]
[146.38162231 -323.72174072]
[144.95578003 -308.78967285]
[143.52993774 -293.85760498]
[142.10409546 -278.92550659]
[140.67825317 -263.99343872]
[139.48950195 -249.04061890]
[138.53814697 -234.07081604]
[137.58679199 -219.10101318]
[136.63542175 -204.13121033]
[135.68406677 -189.16140747]
[134.73271179 -174.19161987]
[133.78135681 -159.22181702]
[147.69541931 -145.59963989]
[147.11318970 -125.83119202]
[131.96160889 -112.65122986]
[131.72361755 -97.65311432]
[131.48562622 -82.65499878]
[131.24763489 -67.65689087]
[131.00964355 -52.65877914]
[130.77165222 -37.66066742]
[130.53367615 -22.66255379]
[130.29568481 -7.66444254]
[137.83007812 5.18398714]
[129.87480164 18.85966301]
[129.63681030 33.85777283]
[129.39881897 48.85588455]
[129.16082764 63.85400009]
[128.92283630 78.85211182]
[135.04562378 92.54559326]
[146.38186646 102.36850739]
[154.92657471 105.62818146]
[157.81845093 112.43831635]
[168.99742126 122.43984985]
[180.17637634 132.44139099]
[191.35534668 142.44291687]
[202.76498413 145.25250244]
[207.36807251 154.62930298]
[219.98687744 162.73892212]
[232.60566711 170.84852600]
[245.22447205 178.95814514]
[257.84329224 187.06774902]
[270.46209717 195.17736816]
[267.26605225 180.52180481]
[274.11935425 167.17893982]
[287.89346313 161.23974609]
[302.30053711 165.41546631]
[310.76373291 177.79989624]
[309.41967773 192.73956299]
[298.88186646 203.41452026]
[283.95999146 204.95147705]
[295.60217285 214.40977478]
[307.24438477 223.86805725]
[318.88656616 233.32635498]
[330.52877808 242.78463745]
[346.03930664 241.34889221]
[357.71139526 251.10679626]
[358.98458862 265.90255737]
[370.62680054 275.36083984]
[382.26898193 284.81915283]
[393.91119385 294.27743530]
[405.55337524 303.73571777]
[421.59500122 303.52096558]
[431.65283203 316.01974487]
[428.01138306 331.64404297]
[413.46405029 338.40826416]
[399.17031860 331.12347412]
[396.09509277 315.37792969]
[384.45288086 305.91961670]
[372.81069946 296.46133423]
[361.16848755 287.00305176]
[349.52630615 277.54476929]
[334.78341675 279.32882690]
[322.84182739 269.90261841]
[321.07049561 254.42683411]
[309.42828369 244.96855164]
[297.78610229 235.51025391]
[286.14389038 226.05197144]
[274.50170898 216.59368896]
[262.35247803 207.79617310]
[249.73367310 199.68655396]
[237.11486816 191.57695007]
[224.49606323 183.46733093]
[211.87725830 175.35771179]
[199.25845337 167.24810791]
[204.19160461 181.41369629]
[202.25164795 196.28771973]
[193.85018921 208.71412659]
[180.76991272 216.05622864]
[165.78625488 216.75613403]
[152.07850647 210.66534424]
[142.55526733 199.07621765]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 141]
[5 140]
[6 139]
[7 138]
[8 136]
[9 135]
[11 24]
[12 23]
[13 22]
[14 21]
[15 20]
[30 39]
[31 38]
[32 37]
[41 62]
[42 61]
[43 60]
[44 59]
[45 58]
[46 57]
[47 56]
[48 55]
[49 54]
[65 134]
[66 133]
[67 132]
[68 131]
[69 130]
[71 128]
[72 127]
[73 126]
[74 125]
[75 124]
[76 123]
[77 122]
[78 121]
[84 118]
[85 117]
[86 116]
[87 115]
[88 114]
[89 113]
[90 112]
[93 111]
[94 110]
[95 109]
[96 108]
[97 107]
[98 106]
[99 105]
[100 104]
[143 190]
[144 189]
[145 188]
[146 187]
[147 186]
[148 185]
[156 184]
[157 183]
[158 182]
[159 181]
[160 180]
[163 177]
[164 176]
[165 175]
[166 174]
[167 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
