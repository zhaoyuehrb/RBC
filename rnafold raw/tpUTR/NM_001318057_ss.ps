%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 08:41:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUUGUGAUCUCUCUCUUCAUUCUAUUCUUUUUCUCUCAAGAGUUCCAUUUAAUGGAAAUAAAACGGUAUAAUUAAUAAUUCUCUAGGGGGGAAAAAUGAAGCAAAUCUCACUGGAUAUUUUUAAAGGUCUCCACAGAGUUUAUGCCAUAUUGGAAUUUUGUUGUAUAAUUCUCAAAUAAAUAUUUUGGUGAAGCAUACAA\
) } def
/len { sequence length } bind def

/coor [
[92.45838165 137.28021240]
[81.24058533 131.04786682]
[73.23565674 121.79332733]
[69.11462402 110.90699005]
[69.00585938 99.86256409]
[54.46787262 96.16838074]
[39.92988968 92.47419739]
[25.39190292 88.78001404]
[17.20336914 100.43786621]
[5.55113983 108.58236694]
[-8.15275288 112.25144196]
[-22.25612640 111.02386475]
[-35.06583023 105.06747437]
[-45.05102158 95.11659241]
[-51.02609253 82.38156128]
[-52.29143906 68.40150452]
[-66.77021790 64.48167419]
[-81.24899292 60.56184769]
[-95.72776794 56.64201736]
[-110.20654297 52.72218704]
[-124.68531799 48.80236053]
[-139.16409302 44.88253021]
[-131.66889954 57.87568283]
[-134.14981079 72.66909790]
[-145.47372437 82.50620270]
[-160.46871948 82.89413452]
[-172.28613281 73.65569305]
[-175.52862549 59.01034927]
[-168.71528625 45.64702988]
[-154.95809937 39.66915131]
[-168.92526245 34.19937897]
[-182.89242554 28.72960472]
[-196.85958862 23.25983238]
[-210.82675171 17.79006004]
[-224.79389954 12.32028675]
[-238.76106262 6.85051394]
[-252.72822571 1.38074088]
[-266.69540405 -4.08903217]
[-282.36676025 -1.91674471]
[-291.39627075 -13.76230526]
[-305.36343384 -19.23207855]
[-319.33059692 -24.70185089]
[-333.29772949 -30.17162323]
[-348.01519775 -33.06937408]
[-363.01336670 -33.30265045]
[-378.01156616 -33.53592682]
[-393.00973511 -33.76920319]
[-408.00793457 -34.00247955]
[-423.00610352 -34.23575974]
[-438.93737793 -28.43647766]
[-448.92022705 -42.13972473]
[-438.51602173 -55.52587891]
[-422.77282715 -49.23394394]
[-407.77465820 -49.00066757]
[-392.77645874 -48.76739120]
[-377.77828979 -48.53411102]
[-362.78009033 -48.30083466]
[-347.78192139 -48.06755829]
[-361.04071045 -55.08212662]
[-372.17434692 -65.13408661]
[-380.50286865 -77.60950470]
[-385.51754761 -91.74644470]
[-386.91210938 -106.68147278]
[-384.60144043 -121.50242615]
[-378.72662354 -135.30410767]
[-369.64645386 -147.24357605]
[-357.91552734 -156.59159851]
[-344.25033569 -162.77725220]
[-329.48547363 -165.42274475]
[-314.52270508 -164.36650085]
[-300.27590942 -159.67303467]
[-287.61520386 -151.62898254]
[-277.31387329 -140.72566223]
[-270.00103760 -127.62899780]
[-266.12338257 -113.13887787]
[-265.91769409 -98.14028168]
[-269.39657593 -83.54927826]
[-276.34753418 -70.25701141]
[-286.34600830 -59.07532501]
[-298.78137207 -50.68714142]
[-312.89413452 -45.60477448]
[-327.82797241 -44.13878632]
[-313.86080933 -38.66901016]
[-299.89364624 -33.19923782]
[-285.92648315 -27.72946548]
[-271.25415039 -30.29298782]
[-261.22561646 -18.05619240]
[-247.25845337 -12.58642006]
[-233.29129028 -7.11664724]
[-219.32412720 -1.64687419]
[-205.35697937 3.82289863]
[-191.38981628 9.29267120]
[-177.42265320 14.76244450]
[-163.45549011 20.23221779]
[-149.48832703 25.70199013]
[-135.24426270 30.40375519]
[-120.76548767 34.32358551]
[-106.28671265 38.24341202]
[-91.80793762 42.16324234]
[-77.32916260 46.08306885]
[-62.85038376 50.00289917]
[-48.37160873 53.92272949]
[-38.88874817 41.23036957]
[-25.22885513 33.12788010]
[-9.46754169 30.88079262]
[5.98704529 34.86230469]
[18.76215744 44.49166107]
[26.88472939 58.31866455]
[29.08608627 74.24202728]
[43.62407303 77.93621063]
[58.16205597 81.63039398]
[72.70004272 85.32457733]
[94.17451477 63.30426407]
[129.92533875 68.68297577]
[139.58700562 57.20899200]
[149.24865723 45.73500443]
[152.21897888 30.19512558]
[166.33526611 25.44329834]
[175.99691772 13.96930981]
[185.65856934 2.49532151]
[195.32022095 -8.97866631]
[197.66154480 -25.20981789]
[212.98716736 -31.04567909]
[225.53141785 -20.48281860]
[222.38983154 -4.38739920]
[206.79421997 0.68298978]
[197.13255310 12.15697765]
[187.47090149 23.63096619]
[177.80924988 35.10495377]
[175.52998352 49.82413483]
[160.72264099 55.39665985]
[151.06098938 66.87064362]
[141.39933777 78.34463501]
[148.45742798 91.58032227]
[163.36862183 89.95053864]
[178.27981567 88.32075500]
[193.19100952 86.69097137]
[208.10220337 85.06119537]
[223.01341248 83.43141174]
[237.92460632 81.80162811]
[252.83580017 80.17184448]
[256.25650024 77.47080231]
[259.98431396 76.13742828]
[263.55026245 76.09986115]
[266.55706787 77.14089966]
[268.72064209 78.93410492]
[283.70431519 78.23450470]
[298.68798828 77.53489685]
[314.22790527 70.75639343]
[325.04336548 83.81250763]
[315.49151611 97.81958771]
[299.38760376 92.51856995]
[284.40393066 93.21817780]
[269.42025757 93.91778564]
[254.46559143 95.08304596]
[239.55438232 96.71282196]
[224.64318848 98.34260559]
[209.73199463 99.97238922]
[194.82080078 101.60217285]
[179.90959167 103.23195648]
[164.99839783 104.86173248]
[150.08720398 106.49151611]
[144.07864380 120.23550415]
[153.00827026 132.28796387]
[161.93791199 144.34040833]
[170.86753845 156.39286804]
[179.79718018 168.44532776]
[195.17855835 170.90513611]
[204.06278992 183.25523376]
[201.62294006 197.90388489]
[210.55258179 209.95634460]
[219.48220825 222.00878906]
[228.50529480 233.99143982]
[237.62129211 245.90356445]
[246.73727417 257.81570435]
[255.85327148 269.72781372]
[264.96926880 281.63995361]
[280.59814453 282.16149902]
[292.20071411 292.64550781]
[294.29861450 308.14172363]
[285.90124512 321.33331299]
[270.97360229 325.99163818]
[256.56408691 319.91714478]
[249.47639465 305.97802734]
[253.05712891 290.75592041]
[243.94114685 278.84381104]
[234.82514954 266.93167114]
[225.70916748 255.01956177]
[216.59317017 243.10743713]
[210.02685547 239.70361328]
[207.42976379 230.93843079]
[198.50012207 218.88597107]
[189.57049561 206.83351135]
[174.84623718 204.90170288]
[165.61862183 192.80601501]
[167.74472046 177.37495422]
[158.81509399 165.32249451]
[149.88545227 153.27005005]
[140.95582581 141.21759033]
[132.02618408 129.16514587]
[119.49169159 136.70097351]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 112]
[6 111]
[7 110]
[8 109]
[16 102]
[17 101]
[18 100]
[19 99]
[20 98]
[21 97]
[22 96]
[30 95]
[31 94]
[32 93]
[33 92]
[34 91]
[35 90]
[36 89]
[37 88]
[38 87]
[40 85]
[41 84]
[42 83]
[43 82]
[44 58]
[45 57]
[46 56]
[47 55]
[48 54]
[49 53]
[114 133]
[115 132]
[116 131]
[118 129]
[119 128]
[120 127]
[121 126]
[134 162]
[135 161]
[136 160]
[137 159]
[138 158]
[139 157]
[140 156]
[141 155]
[146 154]
[147 153]
[148 152]
[163 200]
[164 199]
[165 198]
[166 197]
[167 196]
[170 193]
[171 192]
[172 191]
[173 189]
[174 188]
[175 187]
[176 186]
[177 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
