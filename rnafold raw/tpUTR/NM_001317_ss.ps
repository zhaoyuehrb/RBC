%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 03:34:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCCCGAGUAGCAUCCUGUGACCCCUCCCCAGUGCCUCUCCUGGCCCUGAAGGUGCCACUCCAGUGCCCACCAGCCUUGUCCUAAUAAAAUUAAGUUGUAUCAUUUCAUCUGA\
) } def
/len { sequence length } bind def

/coor [
[229.75219727 150.04501343]
[215.48635864 145.40975952]
[201.22050476 140.77450562]
[186.95466614 136.13925171]
[173.84138489 143.10902405]
[159.30776978 138.61143494]
[152.08613586 124.80977631]
[137.82028198 120.17452240]
[123.55443573 115.53926849]
[109.28858948 110.90401459]
[95.57365417 113.62287903]
[86.07615662 103.36183167]
[71.81031036 98.72657776]
[57.54446030 94.09132385]
[48.27610397 94.40619659]
[42.95531464 89.12971497]
[28.82140160 84.10652161]
[14.68748665 79.08332825]
[22.33071709 91.98995209]
[23.85491371 106.91231537]
[18.97891045 121.09767914]
[8.60218334 131.92927551]
[-5.36107540 137.40901184]
[-20.33506393 136.52601624]
[-33.55753326 129.44319153]
[-42.58933258 117.46710968]
[-45.76436615 102.80699158]
[-42.49694061 88.16718292]
[-33.38979340 76.24829865]
[-20.12292099 69.24900055]
[-5.14667940 68.45996857]
[-17.16037750 59.47825623]
[-29.17407417 50.49655151]
[-44.85976028 48.43017960]
[-50.42025375 34.61243439]
[-62.43395233 25.63072586]
[-74.44764709 16.64901733]
[-90.05187988 19.15568924]
[-102.80908966 9.82674503]
[-105.15064240 -5.80311966]
[-95.68734741 -18.46098328]
[-80.03359985 -20.63715935]
[-67.47649384 -11.04056072]
[-65.46594238 4.63531971]
[-53.45224380 13.61702728]
[-41.43854523 22.59873581]
[-26.61216164 24.02267265]
[-20.19236565 38.48285294]
[-8.17866898 47.46456146]
[3.83502817 56.44626617]
[12.94498158 57.19135666]
[19.71068192 64.94941711]
[33.84459686 69.97261047]
[47.97850800 74.99580383]
[62.17971420 79.82547760]
[76.44556427 84.46073151]
[90.71141052 89.09598541]
[104.42634583 86.37712097]
[113.92384338 96.63816833]
[128.18969727 101.27342224]
[142.45553589 105.90867615]
[156.72138977 110.54393005]
[170.67622375 103.62291718]
[185.07778931 108.52694702]
[191.58992004 121.87339783]
[205.85575867 126.50865936]
[220.12161255 131.14390564]
[234.38746643 135.77915955]
[249.71963501 118.62292480]
[271.32757568 110.89208221]
[293.94522095 114.41020203]
[312.08920288 128.26669312]
[321.38833618 149.05157471]
[336.38696289 148.84669495]
[351.38555908 148.64181519]
[366.38415527 148.43693542]
[375.05755615 145.15461731]
[381.79391479 148.43693542]
[396.79251099 148.64181519]
[411.79110718 148.84669495]
[418.55459595 135.16392517]
[430.59030151 125.77751923]
[445.50851440 122.55113983]
[460.34722900 126.12539673]
[472.16018677 135.79060364]
[478.60195923 149.62774658]
[478.39349365 164.88945007]
[471.57617188 178.54547119]
[459.50360107 187.88441467]
[444.57278442 191.05201721]
[429.74826050 187.41935730]
[417.97344971 177.70770264]
[411.58624268 163.84529114]
[396.58761597 163.64041138]
[381.58901978 163.43553162]
[366.58901978 163.43553162]
[351.59042358 163.64041138]
[336.59182739 163.84529114]
[321.59323120 164.05017090]
[319.58306885 172.33876038]
[316.07980347 180.12214661]
[311.20080566 187.13366699]
[305.11056519 193.13262939]
[298.01528931 197.91259766]
[290.15573120 201.30839539]
[281.79925537 203.20191956]
[273.23043823 203.52616882]
[264.74172974 202.26765442]
[256.62316895 199.46696472]
[249.15260315 195.21737671]
[242.58624268 189.66181946]
[237.14974976 182.98806763]
[233.03051758 175.42234802]
[230.37130737 167.22175598]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 68]
[2 67]
[3 66]
[4 65]
[7 62]
[8 61]
[9 60]
[10 59]
[12 57]
[13 56]
[14 55]
[16 54]
[17 53]
[18 52]
[31 50]
[32 49]
[33 48]
[35 46]
[36 45]
[37 44]
[73 99]
[74 98]
[75 97]
[76 96]
[78 95]
[79 94]
[80 93]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
