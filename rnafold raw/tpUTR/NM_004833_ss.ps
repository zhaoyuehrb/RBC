%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 18:32:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAGUAAAAAGGACCAAUUCAAGCCAACUGGUCUAAGCAGCAUUUAAUUGAAGAAUAUGUGAUACAGCCUCUUCAAUCAGAUUGUAAGUUACCUGAAAGCUGCAGUUCACAGGCUCCUCUCUCCACCAAAUUAGGAUAGAAUAAUUGCUGGAUAAACAAAUUCAGAAUAUCAACAGAUGAUCACAAUAAACAUCUGUUUCUCAUUCA\
) } def
/len { sequence length } bind def

/coor [
[119.87249756 237.05651855]
[125.91883087 221.21737671]
[125.91883087 206.21737671]
[125.91883087 191.21737671]
[118.88191223 188.62283325]
[113.69280243 202.69667053]
[113.10652924 217.68521118]
[98.67036438 221.75917053]
[90.33493805 209.28837585]
[99.61895752 197.50756836]
[104.80806732 183.43371582]
[97.77114105 180.83915710]
[88.03370667 192.24891663]
[78.29627228 203.65866089]
[68.55883789 215.06840515]
[58.82140732 226.47816467]
[49.08397293 237.88790894]
[55.29219818 251.83139038]
[54.82718277 267.08743286]
[47.78125763 280.62692261]
[35.55339432 289.76156616]
[20.57144356 292.67773438]
[5.81008530 288.79635620]
[-5.79980469 278.88812256]
[-11.95307255 264.92028809]
[-11.42798424 249.66621399]
[-4.32879400 236.15457153]
[7.93494701 227.06813049]
[22.92826462 224.21099854]
[37.67422485 228.15046692]
[47.41165924 216.74072266]
[57.14909363 205.33097839]
[66.88652802 193.92121887]
[76.62396240 182.51147461]
[86.36139679 171.10173035]
[50.28306961 140.25672913]
[44.46569824 98.88904572]
[64.59555817 68.90758514]
[51.91616440 60.89304352]
[39.23677063 52.87849808]
[26.55737305 44.86395645]
[13.87797642 36.84941101]
[-1.92127550 36.01622391]
[-8.54548836 22.67572021]
[-21.22488403 14.66117573]
[-33.90428162 6.64663124]
[-46.58367538 -1.36791265]
[-60.13295364 -7.80352354]
[-74.35641479 -12.56725121]
[-88.57987976 -17.33097839]
[-102.80334473 -22.09470558]
[-117.02680206 -26.85843277]
[-131.25027466 -31.62215996]
[-145.47372437 -36.38588715]
[-159.69718933 -41.14961624]
[-172.31689453 -32.31507111]
[-187.54092407 -32.60205078]
[-199.53491211 -41.69095993]
[-203.82575989 -55.92916870]
[-218.04922485 -60.69289780]
[-232.27268982 -65.45662689]
[-249.21205139 -64.75351715]
[-254.57696533 -80.83624268]
[-240.60791016 -90.44363403]
[-227.50895691 -79.68008423]
[-213.28549194 -74.91635895]
[-199.06202698 -70.15263367]
[-187.06130981 -78.93446350]
[-172.01261902 -78.96623230]
[-159.68669128 -70.02616882]
[-154.93347168 -55.37307739]
[-140.71000671 -50.60935211]
[-126.48654175 -45.84562302]
[-112.26307678 -41.08189774]
[-98.03961182 -36.31816864]
[-83.81615448 -31.55444145]
[-69.59268951 -26.79071426]
[-55.36922455 -22.02698708]
[-65.49530792 -33.09325790]
[-71.29032898 -46.92864227]
[-72.07365417 -61.90817261]
[-67.75328827 -76.27252197]
[-58.83665466 -88.33459473]
[-46.37100983 -96.67771912]
[-31.82043076 -100.32199097]
[-16.89388084 -98.83939362]
[-3.34447193 -92.40406036]
[7.23642540 -81.77181244]
[13.60609055 -68.19141388]
[15.01641083 -53.25785828]
[11.30174351 -38.72509384]
[2.89837456 -26.29998207]
[-9.20672417 -17.44184494]
[-23.59181786 -13.19106770]
[-38.56913376 -14.04730892]
[-25.88973618 -6.03276443]
[-13.21033955 1.98177946]
[-0.53094387 9.99632359]
[14.36139297 10.25625610]
[21.89252090 24.17001534]
[34.57191849 32.18455887]
[47.25131226 40.19910431]
[59.93070984 48.21364594]
[72.61010742 56.22819138]
[86.34670258 50.20275879]
[89.03773499 35.44612122]
[91.72876740 20.68948364]
[94.41979218 5.93284655]
[88.39460754 -9.31934071]
[98.80133057 -21.99341393]
[114.93441772 -19.05137444]
[120.19753265 -3.51974010]
[109.17642975 8.62387562]
[106.48540497 23.38051414]
[103.79437256 38.13714981]
[101.10334015 52.89379120]
[126.59423828 51.23485565]
[152.95378113 64.10745239]
[171.87884521 91.34557343]
[182.28428650 80.54156494]
[192.68974304 69.73754883]
[196.68994141 54.43040085]
[211.09173584 50.63069916]
[221.49719238 39.82669067]
[231.90263367 29.02268028]
[228.24069214 14.03623009]
[233.28395081 -0.54351699]
[245.42314148 -10.06421566]
[260.78466797 -11.48784637]
[274.46676636 -4.36013317]
[282.10348511 9.04449654]
[281.25799561 24.44867325]
[272.20007324 36.93698120]
[257.82009888 42.52444839]
[242.70664978 39.42813110]
[232.30119324 50.23213959]
[221.89575195 61.03614807]
[218.63980103 75.57052612]
[203.49374390 80.14299774]
[193.08830261 90.94701385]
[182.68284607 101.75102234]
[185.53994751 108.68550110]
[199.40890503 102.97129822]
[210.83329773 93.25103760]
[223.60812378 101.11257935]
[220.07897949 115.69150543]
[205.12310791 116.84024811]
[191.25415039 122.55445099]
[194.11125183 129.48892212]
[209.10743713 129.82710266]
[224.10363770 130.16528320]
[239.09982300 130.50347900]
[254.09600830 130.84165955]
[269.09219360 131.17984009]
[280.34201050 120.07950592]
[296.14517212 120.26875305]
[307.12591553 131.63528442]
[306.76962280 147.43556213]
[295.28759766 158.29554749]
[279.49200439 157.77220154]
[268.75399780 146.17602539]
[253.75782776 145.83784485]
[238.76164246 145.49966431]
[223.76545715 145.16148376]
[208.76925659 144.82330322]
[193.77307129 144.48512268]
[190.50444031 151.23538208]
[204.00497437 157.77264404]
[217.50540161 164.31010437]
[210.96771240 177.81044006]
[197.46771240 171.27316284]
[183.96717834 164.73590088]
[180.69854736 171.48617554]
[190.26338196 183.04098511]
[199.82821655 194.59580994]
[209.39305115 206.15063477]
[218.95788574 217.70545959]
[228.52272034 229.26028442]
[238.08755493 240.81510925]
[247.65238953 252.36993408]
[262.61428833 249.14498901]
[277.35797119 253.25373840]
[288.49548340 263.75204468]
[293.46749878 278.22747803]
[291.13146973 293.35366821]
[282.02420044 305.65472412]
[268.23846436 312.30398560]
[252.94216919 311.77346802]
[239.65023804 304.18508911]
[231.41709900 291.28262329]
[230.13462830 276.03094482]
[236.09756470 261.93475342]
[226.53273010 250.37994385]
[216.96789551 238.82511902]
[207.40306091 227.27029419]
[197.83822632 215.71546936]
[188.27339172 204.16064453]
[178.70855713 192.60581970]
[169.14372253 181.05099487]
[162.08750916 183.59259033]
[171.28274536 195.44364929]
[162.85304260 207.85092163]
[148.44816589 203.66767883]
[147.97505188 188.67578125]
[140.91883850 191.21737671]
[140.91883850 206.21737671]
[140.91883850 221.21737671]
[146.96517944 237.05651855]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 207]
[3 206]
[4 205]
[12 35]
[13 34]
[14 33]
[15 32]
[16 31]
[17 30]
[38 104]
[39 103]
[40 102]
[41 101]
[42 100]
[44 98]
[45 97]
[46 96]
[47 95]
[48 78]
[49 77]
[50 76]
[51 75]
[52 74]
[53 73]
[54 72]
[55 71]
[59 67]
[60 66]
[61 65]
[105 116]
[106 115]
[107 114]
[108 113]
[119 141]
[120 140]
[121 139]
[123 137]
[124 136]
[125 135]
[149 166]
[150 165]
[151 164]
[152 163]
[153 162]
[154 161]
[173 199]
[174 198]
[175 197]
[176 196]
[177 195]
[178 194]
[179 193]
[180 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
