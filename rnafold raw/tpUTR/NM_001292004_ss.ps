%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 17:00:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAUGGAGGGGAAAAAGGCCACAGCAAUCUGUACUACAAUCAACUUUAUUUUGAAAUCAUGUAAAAUAAGAUAUUAGACUGUUUUUUGAAUAAAAUAUUUUUAUUGAUUGAA\
) } def
/len { sequence length } bind def

/coor [
[79.10681152 109.25696564]
[64.15804291 110.49565125]
[49.20927811 111.73434448]
[34.26050949 112.97303009]
[19.31174088 114.21172333]
[4.36297464 115.45041656]
[-10.58579254 116.68910217]
[-25.53456116 117.92779541]
[-40.48332596 119.16648102]
[-50.67876053 130.94319153]
[-65.85658264 131.98645020]
[-77.02104187 122.19408417]
[-91.96981049 123.43277740]
[-98.59020996 137.22108459]
[-111.14044952 145.78778076]
[-126.19355774 146.91487122]
[-139.69934082 140.39952087]
[-148.07414246 128.08171082]
[-163.02290344 129.32040405]
[-172.01525879 138.69262695]
[-184.58410645 139.34562683]
[-193.88381958 131.47520447]
[-208.86103821 132.30151367]
[-223.83827209 133.12783813]
[-238.81549072 133.95414734]
[-252.24089050 143.37173462]
[-266.99328613 136.20939636]
[-267.89666748 119.83515930]
[-254.02172852 111.09341431]
[-239.64179993 118.97692871]
[-224.66458130 118.15061188]
[-209.68736267 117.32429504]
[-194.71014404 116.49797821]
[-180.64363098 106.10461426]
[-164.26159668 114.37163544]
[-149.31283569 113.13294220]
[-143.07969666 99.60469055]
[-130.83050537 90.95522308]
[-115.79719543 89.58927917]
[-102.00808716 95.97343445]
[-93.20850372 108.48400879]
[-78.25973511 107.24531555]
[-68.85931396 95.74890137]
[-53.71678162 94.27973938]
[-41.72201920 104.21772003]
[-26.77325058 102.97902679]
[-11.82448292 101.74033356]
[3.12428427 100.50164795]
[18.07305145 99.26295471]
[33.02182007 98.02426910]
[47.97058487 96.78557587]
[62.91935349 95.54688263]
[77.86811829 94.30819702]
[88.78079987 80.09155273]
[106.59405518 78.11998749]
[120.35151672 89.60613251]
[135.20935059 87.54582977]
[150.06718445 85.48552704]
[164.92501831 83.42522430]
[179.78283691 81.36492157]
[187.15560913 67.83907318]
[200.91824341 61.32422638]
[215.70320129 64.12935638]
[225.87954712 74.97279358]
[240.73738098 72.91248322]
[255.59521484 70.85218048]
[270.45303345 68.79187775]
[285.31088257 66.73157501]
[300.16870117 64.67127228]
[304.98648071 49.19872665]
[316.00546265 37.39537048]
[331.00280762 31.56863213]
[346.98486328 32.82765198]
[360.78482056 40.87252045]
[369.69009399 54.06372833]
[384.48550415 51.59480667]
[399.28094482 49.12588882]
[414.07635498 46.65697098]
[428.87176514 44.18805313]
[437.85015869 31.18173218]
[453.41052246 28.41576385]
[466.32116699 37.53114700]
[468.92248535 53.11988449]
[459.67111206 65.93345642]
[444.05572510 68.36979675]
[431.34069824 58.98347092]
[416.54528809 61.45238876]
[401.74984741 63.92131042]
[386.95443726 66.39022827]
[372.15902710 68.85914612]
[368.91064453 82.42059326]
[360.69213867 93.74028778]
[348.72888184 101.07370758]
[334.82653809 103.27494812]
[321.09838867 99.97567749]
[309.64419556 91.64627838]
[302.22900391 79.52910614]
[287.37118530 81.58940887]
[272.51333618 83.64971161]
[257.65551758 85.71001434]
[242.79768372 87.77031708]
[227.93984985 89.83061981]
[221.09802246 103.03392792]
[207.63420105 109.75625610]
[192.61814880 107.23209381]
[181.84313965 96.22275543]
[166.98532104 98.28305817]
[152.12748718 100.34336090]
[137.26965332 102.40366364]
[122.41181946 104.46396637]
[117.44594574 114.75994110]
[108.11481476 121.36273956]
[96.75321960 122.62023926]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 53]
[2 52]
[3 51]
[4 50]
[5 49]
[6 48]
[7 47]
[8 46]
[9 45]
[12 42]
[13 41]
[18 36]
[19 35]
[22 33]
[23 32]
[24 31]
[25 30]
[56 110]
[57 109]
[58 108]
[59 107]
[60 106]
[64 102]
[65 101]
[66 100]
[67 99]
[68 98]
[69 97]
[75 90]
[76 89]
[77 88]
[78 87]
[79 86]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
