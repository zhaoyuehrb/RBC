%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 01:20:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCACAGCCUGUGCCAUCCUGGAACCUCCACCUUUGAACCCAGAGCCAGGCUGGGCCCUAUUUAUGAGCUCCCUUUGCCCUUCUCCUGUAUCCCACACCACCACAUCCAACCUCCUUGCCUGCCUGUAUCCUCAUUGGUGGGAGCCCAGCCAUGGCCCUAAUUGUGCCUGAGCUUGACUUUCAGUCAGGGCCACAGUGAGCAUUAAAUUAUUAUUCCAUACA\
) } def
/len { sequence length } bind def

/coor [
[119.52582550 244.61009216]
[130.61143494 234.40196228]
[143.75268555 227.02603149]
[139.61811829 212.60710144]
[135.48356628 198.18818665]
[131.34899902 183.76925659]
[127.21443939 169.35032654]
[119.71900940 169.08859253]
[97.23271942 168.30334473]
[92.10241699 182.39874268]
[95.48141479 198.44599915]
[83.09457397 209.19300842]
[67.68441010 203.58416748]
[65.10358429 187.38937378]
[78.00702667 177.26843262]
[83.13732910 163.17304993]
[76.74937439 159.24314880]
[68.88958740 172.01905823]
[55.69500732 179.15368652]
[56.11368561 164.15927124]
[63.97347260 151.38336182]
[57.58552170 147.45346069]
[47.31731415 158.38800049]
[37.04910660 169.32252502]
[26.78090096 180.25704956]
[20.34586143 195.94229126]
[3.49221420 194.10084534]
[0.59614730 177.39607239]
[15.84637165 169.98884583]
[26.11457825 159.05432129]
[36.38278580 148.11979675]
[46.65098953 137.18525696]
[42.24260330 131.11763000]
[29.01743317 112.91474915]
[15.44502831 119.30143738]
[1.87262213 125.68813324]
[-11.69978333 132.07481384]
[-25.27219009 138.46150208]
[-34.18199921 152.22912598]
[-50.54404831 151.12669373]
[-57.52646637 136.28831482]
[-47.94633865 122.97841644]
[-31.65887833 124.88910675]
[-18.08647346 118.50241089]
[-4.51406717 112.11572266]
[9.05833817 105.72903442]
[22.63074493 99.34234619]
[35.26692200 81.76409912]
[51.01646805 70.59213257]
[67.47450256 66.05306244]
[82.37908936 67.58542633]
[78.04360962 53.22563553]
[73.70813751 38.86584091]
[69.37265778 24.50605011]
[65.03717804 10.14625740]
[60.70170212 -4.21353483]
[56.36622620 -18.57332802]
[52.03075027 -32.93312073]
[47.59512711 -47.26229477]
[43.05958176 -61.56015396]
[38.52403259 -75.85801697]
[33.98848343 -90.15587616]
[29.45293617 -104.45373535]
[24.91738701 -118.75159454]
[13.36950779 -129.56626892]
[16.89628601 -144.03730774]
[12.36073875 -158.33517456]
[7.82519007 -172.63302612]
[3.28964162 -186.93089294]
[-1.24590671 -201.22874451]
[-0.82943660 -186.23452759]
[-4.95481157 -171.81297302]
[-13.23779774 -159.30729675]
[-24.90692520 -149.88224792]
[-38.87534332 -144.41567993]
[-53.84204102 -143.41674805]
[-68.41304016 -146.97848511]
[-81.23120880 -154.76914978]
[-91.10267639 -166.06314087]
[-97.10801697 -179.80853271]
[-98.68790436 -194.72509766]
[-95.69519043 -209.42352295]
[-88.40860748 -222.53480530]
[-77.50682831 -232.83778381]
[-64.00522614 -239.37281799]
[-49.16133881 -241.53128052]
[-34.35770416 -239.11210632]
[-20.97312164 -232.34062195]
[-10.25376034 -221.84690857]
[-17.66288757 -234.88932800]
[-25.07201576 -247.93176270]
[-40.09496689 -253.56118774]
[-44.92314529 -268.86047363]
[-35.85278702 -282.09332275]
[-19.84189224 -283.10861206]
[-9.17265129 -271.12750244]
[-12.02959156 -255.34088135]
[-4.62046385 -242.29846191]
[2.78866410 -229.25604248]
[10.14582729 -230.71279907]
[2.82795405 -243.80664062]
[13.01960945 -254.81254578]
[26.63624001 -248.52070618]
[24.86015511 -233.62631226]
[32.21731949 -235.08306885]
[34.09731674 -249.96478271]
[35.97731400 -264.84649658]
[26.56402016 -277.25729370]
[28.68260193 -292.32269287]
[40.57239914 -301.22033691]
[42.45240021 -316.10208130]
[33.03910446 -328.51284790]
[35.15768433 -343.57824707]
[47.04748535 -352.47592163]
[38.39029694 -365.98266602]
[43.68885803 -381.12548828]
[58.87856293 -386.28808594]
[72.30717468 -377.51016235]
[73.67340851 -361.52539062]
[61.92920303 -350.59591675]
[71.23270416 -339.02093506]
[69.53811646 -323.90194702]
[57.33411789 -314.22207642]
[55.45412064 -299.34036255]
[64.75762177 -287.76535034]
[63.06303406 -272.64639282]
[50.85903549 -262.96652222]
[48.97903824 -248.08479309]
[47.09904099 -233.20306396]
[41.55984879 -219.81039429]
[32.82289124 -210.51248169]
[22.70855331 -205.86950684]
[13.05195332 -205.76429749]
[17.58750153 -191.46643066]
[22.12305069 -177.16857910]
[26.65859795 -162.87071228]
[31.19414711 -148.57286072]
[42.41761398 -138.78086853]
[39.21524811 -123.28714752]
[43.75079727 -108.98928070]
[48.28634262 -94.69142151]
[52.82189178 -80.39356232]
[57.35744095 -66.09570312]
[61.89299011 -51.79784393]
[66.90649414 -46.37807083]
[66.39054108 -37.26859665]
[70.72602081 -22.90880394]
[75.06149292 -8.54901218]
[79.39697266 5.81078053]
[83.73245239 20.17057228]
[88.06792450 34.53036499]
[92.40340424 48.89015961]
[96.73888397 63.24995041]
[124.49520111 72.41039276]
[136.87765503 98.88682556]
[151.64978027 101.49154663]
[166.42189026 104.09627533]
[181.19401550 106.70099640]
[195.96612549 109.30571747]
[210.73823547 111.91043854]
[225.51036072 114.51515961]
[240.44444275 109.29178619]
[251.63479614 119.12160492]
[266.40692139 121.72632599]
[281.17901611 124.33104706]
[295.95114136 126.93577576]
[303.26138306 113.67533875]
[314.48284912 103.50886536]
[328.39834595 97.53913879]
[343.49841309 96.41371918]
[358.14511108 100.25466919]
[370.74969482 108.64535522]
[379.94485474 120.67562866]
[384.73324585 135.04052734]
[384.59539795 150.18185425]
[379.54629517 164.45718384]
[370.13360596 176.31805420]
[357.37835693 184.47787476]
[342.66415405 188.05152893]
[327.58709717 186.65136719]
[313.78259277 180.42929077]
[302.74804688 170.06019592]
[295.68045044 156.66886902]
[293.34640503 141.70788574]
[278.57431030 139.10316467]
[263.80218506 136.49844360]
[249.03007507 133.89372253]
[235.15258789 139.30340576]
[222.90563965 129.28727722]
[208.13351440 126.68255615]
[193.36140442 124.07783508]
[178.58929443 121.47311401]
[163.81716919 118.86838531]
[149.04505920 116.26366425]
[134.27293396 113.65894318]
[141.95150757 127.90913391]
[144.74162292 145.59364319]
[141.63336182 165.21577454]
[145.76792908 179.63470459]
[149.90249634 194.05361938]
[154.03704834 208.47254944]
[158.17161560 222.89147949]
[173.22467041 222.18281555]
[188.03527832 224.96531677]
[201.80474854 231.08892822]
[213.79048157 240.22343445]
[223.34609985 251.87617493]
[229.95631409 265.41876221]
[233.26460266 280.12088013]
[233.09259033 295.18963623]
[229.44952393 309.81237793]
[222.53189087 323.20053101]
[212.71273804 334.63211060]
[200.52160645 343.49063110]
[186.61593628 349.29830933]
[171.74566650 351.74197388]
[156.71270752 350.68988037]
[142.32777405 346.19869995]
[129.36663818 338.51068115]
[118.52827454 328.04040527]
[110.39717865 315.35253906]
[105.41184235 301.13131714]
[103.84113312 286.14367676]
[105.76974487 271.19787598]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 202]
[4 201]
[5 200]
[6 199]
[7 198]
[9 16]
[10 15]
[22 32]
[23 31]
[24 30]
[25 29]
[34 47]
[35 46]
[36 45]
[37 44]
[38 43]
[51 153]
[52 152]
[53 151]
[54 150]
[55 149]
[56 148]
[57 147]
[58 146]
[59 144]
[60 143]
[61 142]
[62 141]
[63 140]
[64 139]
[66 137]
[67 136]
[68 135]
[69 134]
[70 133]
[89 99]
[90 98]
[91 97]
[105 129]
[106 128]
[107 127]
[110 124]
[111 123]
[114 120]
[155 195]
[156 194]
[157 193]
[158 192]
[159 191]
[160 190]
[161 189]
[163 187]
[164 186]
[165 185]
[166 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
