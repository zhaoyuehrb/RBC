%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 07:04:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGAGGGAAAGCCUUUAGCCAUGGCACAUUUUUACUGUUGUCACUAUUAUGAUGCUAUAGUGAAGAUUAAACUAGUUAAUAUAGAAUAUAAAUACUUGGAAAGGCAUCUGGCACAUCGUAUUUGCUUACUAAAUACAUUAUUUUUAUGAUAAUUGUUAGAAUUACUAAAAAUAAAUCUUAUAGAAGGAAGA\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 158.90687561]
[92.50000000 143.90687561]
[85.00000000 143.90687561]
[80.20249939 158.11898804]
[75.40499878 172.33108521]
[70.60749817 186.54319763]
[65.80999756 200.75531006]
[71.61288452 215.71211243]
[63.41304398 229.50131226]
[47.50069809 231.54502869]
[36.08243179 220.27548218]
[37.91736221 204.33770752]
[51.59788895 195.95780945]
[56.39538956 181.74569702]
[61.19289017 167.53358459]
[65.99039459 153.32148743]
[70.78789520 139.10937500]
[57.65629959 111.81858826]
[63.75191116 85.31600952]
[51.18739319 77.12255096]
[38.62287140 68.92909241]
[26.05834961 60.73562622]
[13.36212730 52.74776459]
[0.53756970 44.96761322]
[-15.27432728 44.42495346]
[-22.14261246 31.20845032]
[-27.56837082 42.30694580]
[-40.06484985 50.50759125]
[-57.72221375 52.02075577]
[-72.72171783 51.89867401]
[-87.72122192 51.77659225]
[-102.72072601 51.65451050]
[-117.72022247 51.53243256]
[-132.71972656 51.41035080]
[-147.71923828 51.28826904]
[-162.71873474 51.16618729]
[-177.71823120 51.04410553]
[-192.71774292 50.92202377]
[-207.71723938 50.79994202]
[-224.77355957 61.52586746]
[-241.01148987 51.04362869]
[-256.00701904 51.40983963]
[-271.00256348 51.77605438]
[-285.99807739 52.14226532]
[-296.71435547 63.75849533]
[-312.50897217 64.31136322]
[-324.01126099 53.47286224]
[-324.39709473 37.67328644]
[-313.43759155 26.28623772]
[-297.63482666 26.06745338]
[-286.36428833 37.14673615]
[-271.36877441 36.78052521]
[-256.37322998 36.41431046]
[-241.37770081 36.04809952]
[-235.01147461 28.03167725]
[-225.07261658 24.78228188]
[-214.77638245 27.60563660]
[-207.59516907 35.80044174]
[-192.59565735 35.92251968]
[-177.59616089 36.04460144]
[-162.59664917 36.16668320]
[-147.59715271 36.28876495]
[-132.59764099 36.41084671]
[-117.59814453 36.53292847]
[-102.59864044 36.65501022]
[-87.59913635 36.77709198]
[-72.59963226 36.89916992]
[-57.60013199 37.02125168]
[-53.97414780 30.45602226]
[-67.10448456 23.20383835]
[-59.85208511 10.07361889]
[-46.72217941 17.32556343]
[-43.09619904 10.76033306]
[-51.18712616 -1.87045670]
[-59.27805710 -14.50124645]
[-74.80902100 -16.32422256]
[-85.49696350 -27.73920822]
[-86.29536438 -43.35639572]
[-76.82724762 -55.80183029]
[-61.56316757 -59.19915009]
[-47.71035004 -51.94425201]
[-41.80968094 -37.46267700]
[-46.64727020 -22.59217644]
[-38.55633926 -9.96138668]
[-30.46540833 2.66940284]
[-36.49234390 -11.06653690]
[-38.09566879 -25.98060226]
[-35.12605667 -40.68371201]
[-27.86008644 -53.80642700]
[-16.97450829 -64.12651825]
[-3.48319602 -70.68276978]
[11.35728359 -72.86454773]
[26.16470146 -70.46864319]
[39.55990982 -63.71820068]
[50.29528809 -53.24195862]
[57.37095261 -40.01565933]
[60.12788391 -25.27119255]
[58.30930710 -10.38184261]
[52.08459854 3.26561165]
[42.03351974 14.40005684]
[29.09222603 21.98444176]
[14.46605301 25.31236267]
[-0.48272985 24.07386017]
[-14.36246395 18.38389206]
[0.53213537 18.37006760]
[8.31771851 32.14305878]
[21.14227676 39.92320633]
[25.92542267 39.67329025]
[30.91366386 42.43587112]
[34.25180817 48.17110443]
[46.81632996 56.36456680]
[59.38085175 64.55802917]
[71.94537354 72.75148773]
[80.30015564 66.21450806]
[90.10433960 62.16325378]
[100.63658142 60.89580536]
[111.12198639 62.50540543]
[120.78910828 66.87362671]
[128.92669678 73.67909241]
[141.75125122 65.89894867]
[154.57580566 58.11879730]
[167.40036011 50.33864594]
[180.22491455 42.55849838]
[193.04948425 34.77835083]
[205.87403870 26.99819946]
[211.07028198 11.81997108]
[226.22479248 6.55498028]
[239.71234131 15.24207783]
[241.18641663 31.21726608]
[229.51625061 42.22574615]
[213.65419006 39.82275772]
[200.82962036 47.60290527]
[188.00506592 55.38305664]
[175.18051147 63.16320419]
[162.35595703 70.94335175]
[149.53140259 78.72350311]
[136.70683289 86.50365448]
[139.00450134 97.13781738]
[138.28378296 107.99346924]
[152.10667419 113.81820679]
[165.92956543 119.64294434]
[179.75247192 125.46768188]
[193.57536316 131.29241943]
[207.39825439 137.11715698]
[221.22116089 142.94189453]
[235.04405212 148.76663208]
[248.86694336 154.59135437]
[258.00579834 155.04226685]
[262.86621094 160.62504578]
[271.99649048 161.22465515]
[276.76538086 166.88580322]
[290.39135742 173.15737915]
[304.01733398 179.42895508]
[317.64334106 185.70053101]
[331.26931763 191.97212219]
[346.75531006 187.78123474]
[359.60144043 197.39146423]
[359.95324707 213.43064880]
[347.54086304 223.59492493]
[331.88598633 220.08709717]
[324.99771118 205.59809875]
[311.37173462 199.32650757]
[297.74575806 193.05493164]
[284.11978149 186.78335571]
[270.49380493 180.51177979]
[256.81723022 174.35130310]
[243.04220581 168.41426086]
[229.21931458 162.58952332]
[215.39642334 156.76478577]
[201.57351685 150.94004822]
[187.75062561 145.11531067]
[173.92773438 139.29057312]
[160.10482788 133.46583557]
[146.28193665 127.64110565]
[132.45904541 121.81636810]
[131.84974670 130.30284119]
[129.21211243 139.10937500]
[134.00961304 153.32148743]
[138.80711365 167.53358459]
[143.60461426 181.74569702]
[157.28514099 190.12559509]
[159.12007141 206.06336975]
[147.70179749 217.33291626]
[131.78945923 215.28921509]
[123.58961487 201.50000000]
[129.39250183 186.54319763]
[124.59500122 172.33108521]
[119.79750061 158.11898804]
[115.00000000 143.90687561]
[107.50000000 143.90687561]
[107.50000000 158.90687561]
[107.49977112 173.90687561]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 17]
[4 16]
[5 15]
[6 14]
[7 13]
[19 113]
[20 112]
[21 111]
[22 110]
[23 107]
[24 106]
[26 104]
[29 68]
[30 67]
[31 66]
[32 65]
[33 64]
[34 63]
[35 62]
[36 61]
[37 60]
[38 59]
[39 58]
[41 54]
[42 53]
[43 52]
[44 51]
[73 85]
[74 84]
[75 83]
[119 137]
[120 136]
[121 135]
[122 134]
[123 133]
[124 132]
[125 131]
[139 175]
[140 174]
[141 173]
[142 172]
[143 171]
[144 170]
[145 169]
[146 168]
[147 167]
[149 166]
[151 165]
[152 164]
[153 163]
[154 162]
[155 161]
[177 189]
[178 188]
[179 187]
[180 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
