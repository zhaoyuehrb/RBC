%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 15:08:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAGUUCCUGCCUCAGACCACAAGGUUCGGAGCGCCCGCCCACCCCUGCCCCUCCUGGGCACCCUGCCCACCAGGUCACCUGCACCUGCUCUGAAUAAACUGUGAAGUC\
) } def
/len { sequence length } bind def

/coor [
[63.59004211 226.60008240]
[56.03250885 234.05903625]
[45.81924438 236.00540161]
[38.50382233 249.10061646]
[31.18839645 262.19583130]
[36.91292572 276.74792480]
[31.89526367 291.55865479]
[18.50460243 299.63479614]
[3.06359768 297.16308594]
[-7.13697720 285.31054688]
[-7.28072405 269.67361450]
[2.70023036 257.63558960]
[18.09318542 254.88040161]
[25.40860939 241.78520203]
[32.72403336 228.68998718]
[30.88968849 209.52830505]
[48.07611084 199.18157959]
[54.63895798 185.69346619]
[61.20180130 172.20535278]
[67.38032532 158.53692627]
[73.16956329 144.69912720]
[78.95880890 130.86132812]
[84.74805450 117.02353668]
[77.15726471 100.79497528]
[83.60147858 84.07796478]
[100.12125397 77.14375305]
[105.11834717 63.00059509]
[110.11544800 48.85743332]
[115.11254120 34.71427155]
[120.10964203 20.57110786]
[125.10673523 6.42794657]
[130.10383606 -7.71521521]
[135.10093689 -21.85837746]
[140.09802246 -36.00153732]
[145.09512329 -50.14469910]
[136.46940613 -62.90805054]
[137.00682068 -78.12529755]
[146.29183960 -89.96812439]
[160.59870911 -94.02413177]
[165.59580994 -108.16728973]
[154.06907654 -119.55236816]
[148.64709473 -134.75813293]
[150.35766602 -150.75256348]
[158.81159973 -164.36946106]
[172.28991699 -172.93522644]
[188.09300232 -174.79376221]
[192.68785095 -189.07266235]
[197.28271484 -203.35157776]
[201.87757874 -217.63049316]
[196.99462891 -223.03552246]
[194.12348938 -229.67297363]
[193.53663635 -236.82853699]
[195.26268005 -243.74372864]
[199.08685303 -249.69630432]
[204.57705688 -254.07562256]
[211.13253784 -256.44534302]
[218.04949951 -256.58663940]
[224.99140930 -269.88363647]
[231.93333435 -283.18060303]
[238.87524414 -296.47760010]
[245.81715393 -309.77456665]
[252.75907898 -323.07156372]
[254.72946167 -339.91061401]
[271.45590210 -342.67874146]
[278.74618530 -327.37228394]
[266.05606079 -316.12963867]
[259.11413574 -302.83267212]
[252.17222595 -289.53567505]
[245.23031616 -276.23870850]
[238.28839111 -262.94171143]
[231.34648132 -249.64472961]
[235.58564758 -226.87403870]
[216.15649414 -213.03562927]
[211.56163025 -198.75671387]
[206.96676636 -184.47781372]
[202.37190247 -170.19889832]
[212.93388367 -161.08699036]
[219.22073364 -148.58607483]
[220.24415588 -134.58715820]
[215.81488037 -121.22222137]
[206.57659912 -110.53946686]
[193.91265869 -104.18946838]
[179.73896790 -103.17019653]
[174.74186707 -89.02703094]
[183.32507324 -76.88344574]
[183.10923767 -61.83627701]
[173.96759033 -49.65909576]
[159.23828125 -45.14760208]
[154.24118042 -31.00444221]
[149.24409485 -16.86128044]
[144.24699402 -2.71811819]
[139.24989319 11.42504311]
[134.25280762 25.56820488]
[129.25570679 39.71136856]
[124.25860596 53.85453033]
[119.26151276 67.99768829]
[114.26441193 82.14085388]
[121.13216400 91.29055786]
[122.70565033 102.62226105]
[118.59066010 113.29699707]
[109.81813049 120.64041901]
[98.58585358 122.81277466]
[92.79660797 136.65057373]
[87.00736237 150.48837280]
[81.21811676 164.32617188]
[81.69527435 171.15974426]
[78.96691132 176.35614014]
[74.68991089 178.76820374]
[68.12706757 192.25631714]
[61.56422043 205.74441528]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 15]
[4 14]
[5 13]
[17 110]
[18 109]
[19 108]
[20 105]
[21 104]
[22 103]
[23 102]
[26 97]
[27 96]
[28 95]
[29 94]
[30 93]
[31 92]
[32 91]
[33 90]
[34 89]
[35 88]
[39 84]
[40 83]
[46 76]
[47 75]
[48 74]
[49 73]
[57 71]
[58 70]
[59 69]
[60 68]
[61 67]
[62 66]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
