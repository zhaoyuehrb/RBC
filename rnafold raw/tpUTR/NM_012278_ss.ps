%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 06:14:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACACCAGACAGUUGAUGUCUAGAUAGGACCUCAAUGAUUCCCUUAGAAUCUUAGAUACCAGGAUAUUGUUGGCCAUGUGGCAUCAUUGAGCAGCAGGAGGCUGAAGGAGGGGAGAACAAAAUUGUCCAAACCAUGCUGUUUUUUUCCCUUAAAUAAAUCUUGUAUUCUUCAGUUUCA\
) } def
/len { sequence length } bind def

/coor [
[145.48362732 143.37614441]
[137.32286072 150.56930542]
[128.04399109 156.24752808]
[117.92498779 160.24072266]
[107.26899719 162.42924500]
[96.39524841 162.74755859]
[85.62948608 161.18609619]
[75.29422760 157.79165649]
[67.79422760 170.78202820]
[60.29423141 183.77241516]
[52.79423141 196.76278687]
[45.29423141 209.75317383]
[48.04088974 225.55935669]
[37.28826523 237.46568298]
[21.28484917 236.33863831]
[12.30709362 223.04280090]
[17.24196243 207.77758789]
[32.30384827 202.25317383]
[39.80384827 189.26278687]
[47.30384827 176.27241516]
[54.80384827 163.28202820]
[62.30384827 150.29165649]
[55.64867020 144.53323364]
[49.86306763 137.90168762]
[45.06047440 130.52700806]
[41.33505630 122.55381012]
[38.75985336 114.13840485]
[37.38536072 105.44579315]
[37.23852158 96.64640808]
[38.32221603 87.91277313]
[40.61520004 79.41613770]
[44.07251740 71.32306671]
[31.63695145 62.93517685]
[19.20138931 54.54728317]
[6.76582479 46.15938950]
[-5.66973877 37.77149582]
[-18.10530281 29.38360214]
[-30.54086685 20.99570847]
[-42.97642899 12.60781479]
[-55.41199493 4.21992159]
[-43.72414780 13.62174511]
[-37.54803467 27.29125977]
[-38.21748352 42.27631378]
[-45.58791733 55.34064484]
[-58.06756973 63.66279984]
[-72.96126556 65.44547272]
[-87.05245972 60.30367279]
[-97.29795074 49.34785080]
[-101.48503876 34.94409180]
[-98.70964050 20.20350456]
[-112.19155121 13.62793732]
[-125.67346191 7.05236959]
[-139.15538025 0.47680256]
[-152.63728333 -6.09876442]
[-166.84838867 0.42647675]
[-181.91529846 -3.75944662]
[-190.72390747 -16.68006897]
[-189.11503601 -32.23466873]
[-177.84837341 -43.07883835]
[-162.24365234 -44.09229279]
[-149.66897583 -34.79651260]
[-146.06172180 -19.58067513]
[-132.57980347 -13.00510788]
[-119.09790039 -6.42954111]
[-105.61598969 0.14602627]
[-92.13407898 6.72159338]
[-86.69377136 1.55893421]
[-97.01908875 -9.32168102]
[-110.20133209 -16.47908401]
[-107.46775055 -31.22789955]
[-92.59606934 -33.18571854]
[-86.13847351 -19.64699936]
[-75.81315613 -8.76638412]
[-70.37284851 -13.92904377]
[-76.23381042 -27.73661613]
[-82.09477997 -41.54418945]
[-95.51022339 -50.97594070]
[-93.78050232 -67.28360748]
[-78.68501282 -73.69126892]
[-65.75269318 -63.60726166]
[-68.28720856 -47.40515518]
[-62.42623901 -33.59758377]
[-56.56527328 -19.79001045]
[-47.02410126 -8.21564198]
[-34.58853531 0.17225158]
[-22.15297318 8.56014538]
[-9.71740913 16.94803810]
[2.71815467 25.33593178]
[15.15371799 33.72382736]
[27.58928108 42.11172104]
[40.02484512 50.49961472]
[52.46040726 58.88750458]
[69.29199982 45.16143036]
[89.79050446 37.98374557]
[111.50814056 38.21155167]
[131.85156250 45.81764603]
[148.39152527 59.89377213]
[159.15295410 78.75906372]
[162.85081482 100.16078186]
[177.73899841 101.98882294]
[192.62719727 103.81686401]
[207.51538086 105.64490509]
[222.40357971 107.47294617]
[237.29176331 109.30098724]
[252.17996216 111.12902832]
[267.06814575 112.95706940]
[281.95635986 114.78510284]
[296.84454346 116.61314392]
[311.73272705 118.44118500]
[326.62091064 120.26922607]
[341.62036133 120.13832855]
[356.47436523 118.05073547]
[371.32839966 115.96313477]
[386.18240356 113.87554169]
[401.03643799 111.78794098]
[415.83071899 109.31222534]
[430.55511475 106.45009613]
[445.27954102 103.58795929]
[460.00393677 100.72582245]
[474.72836304 97.86368561]
[483.57815552 85.04499817]
[498.55157471 82.35214233]
[510.71768188 90.86807251]
[525.44207764 88.00593567]
[537.51239014 77.77759552]
[551.48217773 82.94425964]
[566.20654297 80.08212280]
[578.22143555 68.92081451]
[593.81311035 74.00328827]
[596.94219971 90.10113525]
[584.38977051 100.65427399]
[569.06872559 94.80653381]
[554.34429932 97.66867065]
[543.32720947 107.69229126]
[528.30426025 102.73034668]
[513.57983398 105.59247589]
[505.48971558 118.04582214]
[490.59783936 121.15818787]
[477.59048462 112.58809662]
[462.86608887 115.45023346]
[448.14166260 118.31236267]
[433.41726685 121.17449951]
[418.69284058 124.03663635]
[416.42098999 126.76757812]
[412.70135498 128.52088928]
[408.01397705 128.62271118]
[403.12402344 126.64196014]
[388.27001953 128.72955322]
[373.41598511 130.81715393]
[358.56198120 132.90475464]
[343.70794678 134.99235535]
[357.50354004 140.88146973]
[368.29937744 151.29537964]
[374.68139648 164.86999512]
[375.81359863 179.82720947]
[371.54766846 194.20780945]
[362.44241333 206.12815857]
[349.69052124 214.02680969]
[334.96228027 216.86915588]
[320.18692017 214.28288269]
[307.29980469 206.60676575]
[297.98901367 194.84628296]
[293.47412109 180.54188538]
[294.34652710 165.56727600]
[300.49194336 151.88392639]
[311.10540771 141.28419495]
[324.79287720 135.15742493]
[309.90469360 133.32937622]
[295.01651001 131.50134277]
[280.12829590 129.67329407]
[265.24011230 127.84526062]
[250.35191345 126.01721954]
[235.46372986 124.18917847]
[220.57553101 122.36113739]
[205.68734741 120.53309631]
[190.79914856 118.70505524]
[175.91096497 116.87701416]
[161.02276611 115.04898071]
[157.51377869 125.34590912]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 22]
[9 21]
[10 20]
[11 19]
[12 18]
[32 92]
[33 91]
[34 90]
[35 89]
[36 88]
[37 87]
[38 86]
[39 85]
[40 84]
[50 66]
[51 65]
[52 64]
[53 63]
[54 62]
[74 83]
[75 82]
[76 81]
[99 178]
[100 177]
[101 176]
[102 175]
[103 174]
[104 173]
[105 172]
[106 171]
[107 170]
[108 169]
[109 168]
[110 167]
[111 151]
[112 150]
[113 149]
[114 148]
[115 147]
[116 143]
[117 142]
[118 141]
[119 140]
[120 139]
[123 136]
[124 135]
[126 133]
[127 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
