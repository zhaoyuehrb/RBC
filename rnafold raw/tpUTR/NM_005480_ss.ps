%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 14:14:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGACAACCACUCCUGCCCUGCCGUACUUCUUCCUUUUAGCCCUUAUUUAUUGUCGGUCUGCCCAUGGGACUGGGAGCCGCCCACUUUUGUCCUCAAUAAAGUUUCUAAAGUA\
) } def
/len { sequence length } bind def

/coor [
[100.13272095 226.63960266]
[111.64480591 216.36947632]
[109.19716644 201.57052612]
[106.74951935 186.77156067]
[104.30187988 171.97261047]
[101.85423279 157.17366028]
[91.04167175 156.49790955]
[80.55041504 153.79571533]
[70.75677490 149.16400146]
[62.01201248 142.76889038]
[54.62979126 134.83976746]
[48.87488556 125.66102600]
[44.95371628 115.56188202]
[43.00692368 104.90457916]
[43.10433578 94.07135010]
[45.24245834 83.45077515]
[49.34459686 73.42377472]
[37.09004974 64.77357483]
[24.08625984 68.58251953]
[11.46135998 64.22814178]
[3.79832554 53.53023148]
[3.73997402 40.56648254]
[-8.27372360 31.58477402]
[-20.28742027 22.60306740]
[-32.30111694 13.62135887]
[-41.17728806 10.93525028]
[-44.51581573 4.22658205]
[-56.27969742 -5.07992649]
[-68.09831238 4.26978397]
[-81.75479889 10.64136505]
[-96.51268768 13.69120502]
[-111.57609558 13.25482941]
[-126.13267517 9.35577202]
[-139.39741516 2.20430398]
[-150.65495300 -7.81390476]
[-159.29818726 -20.15858459]
[-164.86100769 -34.16400528]
[-167.04341125 -49.07486725]
[-165.72770691 -64.08705139]
[-160.98484802 -78.39096832]
[-153.07060242 -91.21521759]
[-142.41178894 -101.86821747]
[-129.58322144 -109.77545929]
[-115.27671051 -114.51050568]
[-100.26381683 -115.81801605]
[-85.35414124 -113.62747955]
[-71.35176849 -108.05701447]
[-59.01180649 -99.40703583]
[-48.99974442 -88.14402771]
[-41.85551834 -74.87538910]
[-37.96440887 -60.31668091]
[-37.53625870 -45.25303268]
[-40.59415436 -30.49681473]
[-46.97319031 -16.84380722]
[-35.20930862 -7.53729916]
[-23.31941032 1.60766184]
[-11.30571270 10.58936977]
[0.70798445 19.57107735]
[12.72168159 28.55278587]
[29.18092918 25.41176414]
[43.13154602 35.28720093]
[45.74025345 52.51902390]
[57.99480057 61.16922760]
[76.47827911 47.85602570]
[98.69158173 42.81124878]
[121.11235809 46.83484268]
[140.18536377 59.28879547]
[152.88619995 78.19828796]
[167.38389587 74.34899902]
[181.88157654 70.49970245]
[196.37927246 66.65041351]
[210.87695312 62.80112076]
[225.07815552 57.97144699]
[238.91667175 52.18390656]
[252.75518799 46.39636612]
[266.59368896 40.60882568]
[273.98825073 26.37154198]
[289.75698853 23.41753769]
[301.80349731 34.01287079]
[300.88671875 50.02970886]
[287.70993042 59.18130112]
[272.38122559 54.44733429]
[258.54272461 60.23487473]
[244.70420837 66.02241516]
[230.86570740 71.80995941]
[243.10554504 80.48095703]
[244.23661804 95.43825531]
[233.43991089 105.85128021]
[218.53330994 104.17996979]
[210.31066895 91.63452911]
[214.72624207 77.29881287]
[200.22856140 81.14810181]
[185.73088074 84.99739075]
[171.23318481 88.84668732]
[156.73550415 92.69597626]
[157.13948059 102.71015930]
[155.78948975 112.64115143]
[152.72694397 122.18410492]
[148.04588318 131.04608154]
[141.88996887 138.95504761]
[134.44818115 145.66824341]
[125.94895172 150.97956848]
[116.65319061 154.72601318]
[119.10083008 169.52496338]
[121.54847717 184.32392883]
[123.99611664 199.12287903]
[126.44376373 213.92182922]
[140.64955139 219.93840027]
[149.32853699 232.69294739]
[149.71128845 248.11557007]
[141.67567444 261.28494263]
[127.78582001 267.99877930]
[112.47393799 266.11471558]
[100.62598419 256.23394775]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 107]
[3 106]
[4 105]
[5 104]
[6 103]
[17 63]
[18 62]
[22 59]
[23 58]
[24 57]
[25 56]
[27 55]
[28 54]
[68 95]
[69 94]
[70 93]
[71 92]
[72 91]
[73 85]
[74 84]
[75 83]
[76 82]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
