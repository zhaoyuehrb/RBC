%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 10:24:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUGCUGGACCCCAGCUAUGGCAACAGGGACUCAGGAGAGAGAGGUCAGCAUGUUUCUGGGAGGACAUCACCUGUGGUUAGUCGAACAGUCAGCCCUCUUCCUCGCUAUAGCCAGGACACAGGGAUGCAGGGGUCAAGCAUGUAAGCACCAACUGGCCCAAUCCCCUUCACUAAUAAACCUCUGAGCUGCAAG\
) } def
/len { sequence length } bind def

/coor [
[-13.03380680 277.90847778]
[-23.11272812 266.79922485]
[-22.53341293 251.81082153]
[-34.30381012 261.10910034]
[-46.07420731 270.40734863]
[-57.84460449 279.70562744]
[-69.61500549 289.00387573]
[-81.38539886 298.30215454]
[-86.18785095 306.08828735]
[-93.42114258 307.65356445]
[-105.33980560 316.76101685]
[-117.25847626 325.86843872]
[-127.38490295 336.93441772]
[-135.40188599 349.61224365]
[-143.41886902 362.29010010]
[-143.53819275 378.68881226]
[-157.93119812 386.54843140]
[-171.79159546 377.78366089]
[-170.86099243 361.41091919]
[-156.09672546 354.27313232]
[-148.07974243 341.59527588]
[-140.06275940 328.91741943]
[-144.80609131 323.10787964]
[-156.42517090 332.59457397]
[-168.04423523 342.08123779]
[-176.16311646 354.69409180]
[-190.66751099 350.87014771]
[-191.51280212 335.89398193]
[-177.53091431 330.46215820]
[-165.91184998 320.97549438]
[-154.29277039 311.48880005]
[-159.03611755 305.67926025]
[-173.06135559 310.99835205]
[-187.08659363 316.31741333]
[-193.34352112 330.83038330]
[-208.06069946 336.59060669]
[-222.50671387 330.18060303]
[-228.11099243 315.40332031]
[-221.54861450 301.02587891]
[-206.71292114 295.57815552]
[-192.40567017 302.29217529]
[-178.38043213 296.97311401]
[-164.35517883 291.65402222]
[-137.40802002 296.56396484]
[-126.36591339 313.94976807]
[-114.44724274 304.84234619]
[-102.52857971 295.73489380]
[-90.68366241 286.53176880]
[-78.91326904 277.23348999]
[-67.14286804 267.93521118]
[-55.37247467 258.63696289]
[-43.60207748 249.33869934]
[-31.83167839 240.04042053]
[-20.52425766 230.18435669]
[-9.70622063 219.79348755]
[-9.66398335 204.94309998]
[1.15902221 194.25119019]
[16.73518181 194.39617920]
[27.55321884 184.00531006]
[31.37234116 169.60865784]
[46.68487549 165.62910461]
[57.50291061 155.23823547]
[68.32094574 144.84736633]
[79.13898468 134.45651245]
[89.95702362 124.06564331]
[77.27742004 100.02598572]
[92.50000000 82.14302063]
[92.50000000 67.14302063]
[92.50000000 52.14301682]
[92.50000000 37.14301682]
[89.36723328 28.54805946]
[92.62277222 21.90185547]
[92.86442566 6.90380144]
[93.10607910 -8.09425163]
[93.34772491 -23.09230614]
[93.58937836 -38.09035873]
[93.83103180 -53.08841324]
[91.30567169 -67.87430573]
[86.09974670 -81.94194031]
[80.89382935 -96.00957489]
[74.97280121 -102.98302460]
[75.71934509 -110.34599304]
[63.84027481 -120.79579163]
[66.91468048 -135.36964417]
[53.12824631 -143.57414246]
[51.08991623 -159.48718262]
[62.36332703 -170.90164185]
[78.30047607 -169.06132507]
[86.67575073 -155.37796021]
[81.06436157 -140.34826660]
[92.58732605 -130.91055298]
[89.86902618 -115.32460785]
[94.96146393 -101.21549988]
[100.16738129 -87.14786530]
[105.37330627 -73.08022308]
[112.87233734 -72.95940399]
[108.46768188 -87.29812622]
[120.74361420 -95.91795349]
[132.73492432 -86.90637207]
[127.87039185 -72.71775055]
[135.36941528 -72.59692383]
[141.02583313 -86.48954773]
[146.68226624 -100.38216400]
[152.33868408 -114.27478790]
[150.37657166 -129.97384644]
[162.34204102 -138.84382629]
[167.99847412 -152.73645020]
[165.22496033 -168.89936829]
[178.00695801 -179.17324829]
[193.19543457 -172.98921204]
[195.16578674 -156.70886230]
[181.89108276 -147.08003235]
[176.23466492 -133.18740845]
[178.60136414 -118.48203278]
[166.23130798 -108.61836243]
[160.57487488 -94.72574615]
[154.91845703 -80.83312225]
[149.26203918 -66.94050598]
[108.82907867 -52.84675980]
[108.58743286 -37.84870911]
[108.34577942 -22.85065460]
[108.10413361 -7.85260153]
[107.86248016 7.14545202]
[107.62082672 22.14350510]
[107.50000000 37.14301682]
[107.50000000 52.14301682]
[107.50000000 67.14302063]
[107.50000000 82.14302063]
[121.44309998 92.48270416]
[122.89980316 112.47460175]
[137.84095764 113.80199432]
[152.78210449 115.12939453]
[167.72325134 116.45678711]
[182.66441345 117.78418732]
[192.02110291 104.15938568]
[206.88523865 97.14892578]
[223.16310120 98.57896423]
[236.42401123 107.96529388]
[243.10644531 122.67105103]
[258.06704712 123.75757599]
[269.96005249 113.69806671]
[285.11676025 115.01307678]
[294.63366699 126.41324615]
[309.59426880 127.49977112]
[319.49703979 115.55343628]
[334.53872681 111.74196625]
[348.93548584 117.53096008]
[357.15151978 130.69442749]
[356.02752686 146.17073059]
[345.99575806 158.00894165]
[330.91360474 161.65701294]
[316.58047485 155.71218872]
[308.50775146 142.46037292]
[293.54714966 141.37384033]
[282.48291016 151.27929688]
[267.29525757 150.39053345]
[256.98052979 138.71817017]
[242.01992798 137.63165283]
[235.10954285 149.41970825]
[223.73814392 157.11492920]
[210.09495544 159.16691589]
[196.83645630 155.11845398]
[186.56912231 145.70574951]
[181.33700562 132.72534180]
[166.39585876 131.39794922]
[151.45471191 130.07054138]
[136.51354980 128.74314880]
[121.57240295 127.41574860]
[136.11779785 131.08065796]
[147.47723389 140.87672424]
[153.24043274 154.72540283]
[152.18449402 169.68818665]
[144.53350830 182.59020996]
[131.91087341 190.69386292]
[116.99494171 192.27966309]
[102.95063019 187.01113892]
[92.75794220 176.00617981]
[88.57960510 161.59988403]
[91.30220032 146.84904480]
[100.34788513 134.88368225]
[89.52985382 145.27453613]
[78.71181488 155.66540527]
[67.89377594 166.05627441]
[57.07574081 176.44714355]
[52.48283768 191.58702087]
[37.94408417 194.82334900]
[27.12604713 205.21421814]
[26.64373207 220.78356934]
[15.52468300 231.16728210]
[0.68464494 230.61152649]
[-10.13339138 241.00238037]
[4.79416466 242.47482300]
[14.42324448 253.97616577]
[13.24803257 268.93005371]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 53]
[4 52]
[5 51]
[6 50]
[7 49]
[8 48]
[10 47]
[11 46]
[12 45]
[13 22]
[14 21]
[15 20]
[32 43]
[33 42]
[34 41]
[54 191]
[55 190]
[58 187]
[59 186]
[61 184]
[62 183]
[63 182]
[64 181]
[65 180]
[67 128]
[68 127]
[69 126]
[70 125]
[72 124]
[73 123]
[74 122]
[75 121]
[76 120]
[77 119]
[78 95]
[79 94]
[80 93]
[82 92]
[84 90]
[101 118]
[102 117]
[103 116]
[104 115]
[106 113]
[107 112]
[130 168]
[131 167]
[132 166]
[133 165]
[134 164]
[139 158]
[140 157]
[143 154]
[144 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
