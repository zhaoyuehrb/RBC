%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 21:15:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCGCCCCUCCCACAGCGCUGGCCGGGACCCCGAGCCUGGCUCCAAACCCUCGAGGCGGAUCUUUGGACAGAAGCAGCUCUUCCCCGAACACUGUGGCGUCCGGGACGGCCCCACCCGUCCCCCCACACUCCCUCCCACGGGGCUCCGGGAGACAGGCCGGCCCUGCACCUCACCCCACCGUGACCUCAAUAAACGUUGAAACUCC\
) } def
/len { sequence length } bind def

/coor [
[242.89114380 506.51986694]
[238.16236877 500.73684692]
[234.26293945 494.36117554]
[231.26622009 487.51107788]
[229.22879028 480.31365967]
[228.18945312 472.90258789]
[228.16845703 465.41571045]
[229.16708374 457.99230957]
[231.16766357 450.77072144]
[234.13381958 443.88552856]
[238.01121521 437.46527100]
[242.72842407 431.62988281]
[248.19839478 426.48855591]
[254.31993103 422.13763428]
[248.34391785 408.37945557]
[242.36790466 394.62127686]
[230.20060730 386.03024292]
[231.79933167 370.29000854]
[225.82331848 356.53182983]
[219.84730530 342.77368164]
[213.87129211 329.01550293]
[207.89526367 315.25732422]
[201.91925049 301.49917603]
[195.94323730 287.74099731]
[183.77593994 279.14993286]
[185.37467957 263.40972900]
[169.48112488 257.91552734]
[162.33677673 242.31991577]
[168.80557251 226.06809998]
[162.62144470 212.40220642]
[156.43733215 198.73631287]
[144.14105225 190.33090210]
[145.50071716 174.56823730]
[139.31660461 160.90234375]
[133.13247681 147.23645020]
[126.94834900 133.57055664]
[60.11394119 131.35873413]
[45.21100616 133.06243896]
[30.30807495 134.76614380]
[17.47600937 144.02079773]
[3.95229411 137.77912903]
[-10.95063877 139.48283386]
[-25.85357094 141.18653870]
[-32.57376862 155.07331848]
[-45.74682236 163.10289001]
[-61.16926193 162.71307373]
[-73.91983795 154.02824402]
[-79.92989349 139.81968689]
[-77.28163147 124.62133026]
[-66.82012177 113.28289032]
[-51.88357162 109.42243195]
[-37.23819733 114.27181244]
[-27.55727386 126.28360748]
[-12.65434170 124.57990265]
[2.24859118 122.87619781]
[14.01469898 113.74340820]
[28.60437202 119.86321259]
[43.50730515 118.15950775]
[58.41023636 116.45580292]
[61.55406189 109.64651489]
[46.61621475 111.01063538]
[37.96586227 98.75618744]
[44.25325775 85.13750458]
[59.19107819 83.77310944]
[67.84170532 96.02794647]
[70.98553467 89.21865845]
[62.61652374 76.77037811]
[54.24751282 64.32210541]
[45.87850189 51.87382126]
[38.49105072 46.49588776]
[37.47861481 39.17251587]
[22.27556229 35.78062439]
[14.15988159 22.91243172]
[17.48722076 8.43954754]
[9.30809116 -4.13430834]
[1.12896204 -16.70816422]
[-7.05016756 -29.28201866]
[-25.41196823 -37.59611130]
[-25.60694504 -56.92947388]
[-34.16390991 -69.24931335]
[-49.76007080 -71.80571747]
[-58.91258621 -84.69008636]
[-56.19142914 -100.25835419]
[-43.21101379 -109.27413940]
[-27.67238808 -106.38853455]
[-18.79434776 -93.31352234]
[-21.84407234 -77.80627441]
[-13.28710842 -65.48643494]
[-3.10483456 -64.58490753]
[5.07098389 -58.08988190]
[8.38903427 -47.95803452]
[5.52368832 -37.46114731]
[13.70281792 -24.88729286]
[21.88194656 -12.31343746]
[30.06107712 0.26041779]
[44.64036942 3.08527112]
[53.11428833 15.72043419]
[50.05247116 30.99338531]
[58.32677841 43.50481415]
[66.69579315 55.95309067]
[75.06480408 68.40137482]
[83.43381500 80.84964752]
[98.24375916 78.46941376]
[102.29071045 64.02565002]
[106.33766174 49.58189392]
[110.38461304 35.13813400]
[114.43156433 20.69437408]
[118.47851562 6.25061560]
[122.52546692 -8.19314384]
[114.56213379 -21.84454727]
[118.66493988 -37.10700226]
[132.39978027 -44.92556000]
[147.61799622 -40.66161346]
[155.29090881 -26.84488678]
[150.86630249 -11.67259502]
[136.96922302 -4.14619207]
[132.92227173 10.29756737]
[128.87532043 24.74132729]
[124.82836914 39.18508530]
[120.78141785 53.62884521]
[116.73446655 68.07260132]
[112.68751526 82.51636505]
[118.71475220 86.97982025]
[127.64166260 74.92535400]
[136.56858826 62.87088776]
[145.49568176 50.81655884]
[157.54988098 59.74384689]
[148.62304688 71.79780579]
[139.69613647 83.85227203]
[130.76921082 95.90673828]
[136.79644775 100.37019348]
[149.43200684 92.28672028]
[162.06756592 84.20323944]
[165.21374512 68.71527100]
[178.43601990 60.05808258]
[193.88986206 63.36783218]
[202.40676880 76.68090057]
[198.93382263 92.09888458]
[185.53144836 100.47456360]
[170.15104675 96.83879852]
[157.51548767 104.92227936]
[144.87992859 113.00575256]
[140.61424255 127.38643646]
[146.79837036 141.05232239]
[152.98249817 154.71821594]
[159.16661072 168.38410950]
[171.90522766 177.76699829]
[170.10322571 192.55218506]
[176.28733826 206.21807861]
[182.47146606 219.88397217]
[195.53974915 223.15280151]
[204.21194458 233.20532227]
[205.49099731 246.22431946]
[199.13284302 257.43371582]
[211.72758484 267.00881958]
[209.70140076 281.76498413]
[215.67742920 295.52313232]
[221.65344238 309.28131104]
[227.62945557 323.03948975]
[233.60546875 336.79766846]
[239.58148193 350.55581665]
[245.55751038 364.31399536]
[258.15225220 373.88912964]
[256.12606812 388.64526367]
[262.10208130 402.40344238]
[268.07809448 416.16159058]
[294.02023315 415.35290527]
[317.40219116 426.50732422]
[333.03851318 447.10189819]
[337.48403931 472.52563477]
[329.79296875 497.11178589]
[341.50012207 506.48956299]
[353.20730591 515.86730957]
[364.91445923 525.24505615]
[380.59368896 523.26068115]
[393.03234863 533.01031494]
[394.85083008 548.70959473]
[384.97024536 561.04449463]
[369.25259399 562.69689941]
[357.02282715 552.68646240]
[355.53671265 536.95220947]
[343.82952881 527.57446289]
[332.12237549 518.19671631]
[320.41519165 508.81896973]
[317.55389404 511.34140015]
[314.52334595 513.65771484]
[311.33831787 515.75659180]
[317.31433105 529.51477051]
[323.29034424 543.27294922]
[329.26635742 557.03112793]
[335.24237061 570.78924561]
[348.73608398 580.10870361]
[347.14254761 596.43023682]
[332.10107422 602.96368408]
[319.08502197 592.98797607]
[321.48419189 576.76525879]
[315.50817871 563.00714111]
[309.53216553 549.24896240]
[303.55615234 535.49078369]
[297.58013916 521.73260498]
[290.29525757 523.26147461]
[282.86676025 523.78479004]
[275.43280029 523.29205322]
[268.13186646 521.79138184]
[261.09994507 519.30987549]
[254.46823120 515.89288330]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 166]
[15 165]
[16 164]
[18 162]
[19 161]
[20 160]
[21 159]
[22 158]
[23 157]
[24 156]
[26 154]
[29 150]
[30 149]
[31 148]
[33 146]
[34 145]
[35 144]
[36 143]
[37 59]
[38 58]
[39 57]
[41 55]
[42 54]
[43 53]
[66 102]
[67 101]
[68 100]
[69 99]
[71 98]
[74 95]
[75 94]
[76 93]
[77 92]
[79 88]
[80 87]
[103 122]
[104 121]
[105 120]
[106 119]
[107 118]
[108 117]
[109 116]
[131 142]
[132 141]
[133 140]
[171 184]
[172 183]
[173 182]
[174 181]
[187 200]
[188 199]
[189 198]
[190 197]
[191 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
