%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 07:38:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUGGAGCGCAGUCCCCAGCUAGCGUCUCGGCCCUUGCCGCCCCGUGCCUGUACAUACGUGUUCUAUAGAGCCUGGCGUCUGGACGCCGAGGGCAGCCCCGACCCCUGUCCAGCGCGGCUCCCGCCACCCUCAAUAAAUGUUGCUUGGAGUGGACCGAGGCUCUGCAGGAAUGCAGGGAGGGCCGGGCUCCGCCCCAGGGUUAUUUCUAAGUUGA\
) } def
/len { sequence length } bind def

/coor [
[140.44412231 139.39808655]
[126.03789520 135.21946716]
[111.63167572 131.04086304]
[96.75882721 132.98977661]
[83.91562653 140.73912048]
[71.07243347 148.48846436]
[58.22923660 156.23780823]
[45.38603973 163.98715210]
[32.54284668 171.73649597]
[19.69964981 179.48583984]
[6.85645342 187.23518372]
[1.12871706 194.34480286]
[-6.22924232 195.00219727]
[-19.18327904 202.56480408]
[-20.45517159 220.65553284]
[-32.23129272 234.23985291]
[-49.65100861 237.99914551]
[-65.69550323 230.61195374]
[-78.42517090 238.54641724]
[-91.15483093 246.48088074]
[-92.66808319 259.86190796]
[-101.48197937 269.78436279]
[-114.21244049 272.77575684]
[-126.16209412 267.96246338]
[-139.00529480 275.71179199]
[-151.84848022 283.46112061]
[-153.29364014 298.79794312]
[-163.37464905 310.20962524]
[-178.06845093 313.45864868]
[-191.69474792 307.50363159]
[-204.53794861 315.25296021]
[-217.38113403 323.00231934]
[-230.22433472 330.75164795]
[-237.67021179 345.36297607]
[-254.05885315 345.95001221]
[-262.53103638 331.90884399]
[-254.37129211 317.68383789]
[-237.97367859 317.90844727]
[-225.13047791 310.15911865]
[-212.28727722 302.40975952]
[-199.44409180 294.66043091]
[-198.35977173 279.82928467]
[-188.63516235 268.34469604]
[-173.83970642 264.74639893]
[-159.59782410 270.61795044]
[-146.75462341 262.86859131]
[-133.91143799 255.11924744]
[-130.57258606 238.63414001]
[-116.05702209 229.48619080]
[-99.08929443 233.75122070]
[-86.35962677 225.81675720]
[-73.62996674 217.88229370]
[-74.57453918 205.78434753]
[-70.26193237 194.36460876]
[-61.45265198 185.81050110]
[-49.77466202 181.78831482]
[-37.42270279 183.11885071]
[-26.74588013 189.61076355]
[-13.79184341 182.04815674]
[-0.89288950 174.39198303]
[11.95030689 166.64263916]
[24.79350281 158.89329529]
[37.63669968 151.14395142]
[50.47989655 143.39460754]
[63.32308960 135.64527893]
[76.16629028 127.89592743]
[89.00948334 120.14658356]
[80.65702057 109.34534454]
[80.27776337 96.58900452]
[86.97927094 86.79080963]
[81.66800690 72.76260376]
[76.35674286 58.73440170]
[71.04547882 44.70619965]
[65.73421478 30.67799568]
[60.87080383 26.21001244]
[59.23586273 20.77312279]
[60.47871017 16.16601944]
[55.57579803 1.98993170]
[50.67288971 -12.18615627]
[44.91290665 -19.26968384]
[45.80323029 -26.60310364]
[41.10606003 -40.84868240]
[36.40888977 -55.09426498]
[31.71171761 -69.33984375]
[27.01454735 -83.58542633]
[22.31737709 -97.83100891]
[17.62020683 -112.07659149]
[12.95537472 -116.75152588]
[11.55803585 -122.25427246]
[12.99974346 -126.80307007]
[7.55274773 -134.13000488]
[8.76063919 -141.41784668]
[4.68641949 -155.85394287]
[0.61220032 -170.29003906]
[-3.56640959 -184.69625854]
[-17.58479691 -191.99423218]
[-22.25710297 -207.09207153]
[-14.81133175 -221.03251648]
[0.33507359 -225.54493713]
[14.19601917 -217.95219421]
[18.54805183 -202.75894165]
[10.80918694 -188.97903442]
[15.72928238 -183.46864319]
[15.04829216 -174.36425781]
[19.12251091 -159.92816162]
[23.19672966 -145.49206543]
[27.37533951 -131.08584595]
[31.86578751 -116.77375793]
[36.56295776 -102.52818298]
[41.26012802 -88.28260040]
[45.95729828 -74.03701782]
[50.65446854 -59.79143524]
[55.35163879 -45.54585648]
[60.04881287 -31.30027390]
[64.84897614 -17.08906555]
[69.75188446 -2.91297817]
[74.65480042 11.26311016]
[79.76242065 25.36673355]
[85.07368469 39.39493561]
[90.38494110 53.42314148]
[95.69620514 67.45133972]
[101.00746918 81.47954559]
[114.77100372 86.49374390]
[121.46903992 100.75279236]
[115.81028748 116.63463593]
[130.21650696 120.81324768]
[144.62272644 124.99185944]
[152.19844055 119.39141846]
[161.36521912 117.92369843]
[170.04959106 120.79270935]
[176.34567261 127.23572540]
[178.93325806 135.72093201]
[193.14445496 140.52110291]
[207.35566711 145.32125854]
[221.56687927 150.12142944]
[235.77807617 154.92160034]
[250.12229919 159.30831909]
[264.58749390 163.27793884]
[279.05270386 167.24755859]
[293.51791382 171.21716309]
[307.98312378 175.18678284]
[318.84063721 167.22084045]
[332.10992432 166.96492004]
[342.94406128 174.28849792]
[347.51443481 186.33316040]
[361.92065430 190.51176453]
[376.32687378 194.69038391]
[390.73309326 198.86898804]
[405.13931274 203.04760742]
[420.54861450 199.46095276]
[430.61666870 210.43745422]
[445.02288818 214.61607361]
[459.42910767 218.79467773]
[473.83532715 222.97328186]
[488.24154663 227.15190125]
[502.67764282 231.22612000]
[517.14282227 235.19572449]
[528.71435547 229.50480652]
[540.67871094 233.10572815]
[546.78149414 243.54670715]
[561.18774414 247.72531128]
[575.59393311 251.90393066]
[590.00018311 256.08251953]
[604.40643311 260.26113892]
[618.81262207 264.43975830]
[634.22192383 260.85311890]
[644.28997803 271.82962036]
[658.01733398 264.46771240]
[672.56774902 268.91064453]
[679.50158691 282.04293823]
[695.28771973 277.60101318]
[706.83709717 289.24334717]
[702.26867676 304.99334717]
[686.28216553 308.64874268]
[675.32299805 296.44918823]
[662.43835449 303.83300781]
[647.76885986 299.80050659]
[640.11138916 286.23583984]
[625.73248291 290.12136841]
[614.63403320 278.84597778]
[600.22778320 274.66735840]
[585.82159424 270.48876953]
[571.41534424 266.31015015]
[557.00915527 262.13153076]
[542.60290527 257.95291138]
[525.81060791 263.05703735]
[513.17321777 249.66093445]
[498.70803833 245.69131470]
[491.42910767 246.95193481]
[484.06292725 241.55812073]
[469.65670776 237.37950134]
[455.25048828 233.20089722]
[440.84426880 229.02229309]
[426.43804932 224.84367371]
[412.05917358 228.72920227]
[400.96069336 217.45382690]
[386.55447388 213.27520752]
[372.14825439 209.09660339]
[357.74203491 204.91799927]
[343.33581543 200.73937988]
[328.95925903 209.46989441]
[312.39096069 205.01142883]
[304.01351929 189.65199280]
[289.54830933 185.68237305]
[275.08309937 181.71275330]
[260.61788940 177.74314880]
[246.15269470 173.77352905]
[243.65536499 175.03750610]
[240.50798035 175.39067078]
[237.05412292 174.58091736]
[233.72207642 172.48472595]
[230.97792053 169.13279724]
[216.76670837 164.33264160]
[202.55549622 159.53247070]
[188.34429932 154.73229980]
[174.13308716 149.93212891]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 127]
[2 126]
[3 125]
[4 67]
[5 66]
[6 65]
[7 64]
[8 63]
[9 62]
[10 61]
[11 60]
[13 59]
[14 58]
[18 52]
[19 51]
[20 50]
[24 47]
[25 46]
[26 45]
[30 41]
[31 40]
[32 39]
[33 38]
[70 122]
[71 121]
[72 120]
[73 119]
[74 118]
[77 117]
[78 116]
[79 115]
[81 114]
[82 113]
[83 112]
[84 111]
[85 110]
[86 109]
[87 108]
[90 107]
[92 106]
[93 105]
[94 104]
[95 102]
[132 216]
[133 215]
[134 214]
[135 213]
[136 212]
[137 207]
[138 206]
[139 205]
[140 204]
[141 203]
[145 200]
[146 199]
[147 198]
[148 197]
[149 196]
[151 194]
[152 193]
[153 192]
[154 191]
[155 190]
[156 188]
[157 187]
[160 185]
[161 184]
[162 183]
[163 182]
[164 181]
[165 180]
[167 178]
[170 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
