%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 23:58:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAAGGACUGAUCUCCCCUGGGAAGUGGGGAUGAGAGGAGAAAUCUUGGCUUCACUUUUGGUGAGAAAGACAUGAUAGACACUGAGGAAAGUUUGAACUUGUGGCCGGGACCUGUCCCUCUCAGGUCUUCUAGACAUGUCUGAGGGAAGUCUCUUGAAUGUAAGAAAGUGUUAUUGGCAAAGCAAUCCAAUAAAAUAAGCUACCUAUGAUGCAA\
) } def
/len { sequence length } bind def

/coor [
[207.06124878 205.84695435]
[195.96308899 195.75581360]
[184.86494446 185.66468811]
[173.76678467 175.57354736]
[162.66862488 165.48242188]
[151.49705505 155.47262573]
[140.25263977 145.54473877]
[129.00822449 135.61683655]
[117.76380157 125.68894196]
[103.25015259 131.06301880]
[87.93842316 128.80960083]
[75.58840942 119.48201752]
[61.96053314 125.74946594]
[48.33265686 132.01692200]
[34.70478058 138.28437805]
[25.39985275 151.08003235]
[10.60392952 149.36834717]
[-3.02394772 155.63578796]
[-7.14684200 160.79803467]
[-12.45989895 162.80433655]
[-17.14282990 161.88076782]
[-30.94802284 167.74734497]
[-44.75321579 173.61390686]
[-58.55840683 179.48048401]
[-72.36360168 185.34704590]
[-86.16879272 191.21362305]
[-99.97398376 197.08020020]
[-113.77917480 202.94676208]
[-127.58437347 208.81333923]
[-141.38955688 214.67990112]
[-147.37498474 229.06088257]
[-161.45898438 234.81376648]
[-175.13215637 229.01895142]
[-188.93734741 234.88552856]
[-202.74253845 240.75209045]
[-216.54774475 246.61866760]
[-220.94030762 261.62664795]
[-233.98074341 270.25686646]
[-249.51176453 268.43441772]
[-260.20010376 257.01980591]
[-260.99902344 241.40263367]
[-251.53134155 228.95689392]
[-236.26736450 225.55905151]
[-222.41430664 232.81347656]
[-208.60911560 226.94689941]
[-194.80392456 221.08033752]
[-180.99873352 215.21376038]
[-175.68023682 201.34837341]
[-161.76338196 195.20216370]
[-147.25613403 200.87471008]
[-133.45094299 195.00814819]
[-119.64575195 189.14157104]
[-105.84055328 183.27499390]
[-92.03536224 177.40843201]
[-78.23017120 171.54185486]
[-64.42498016 165.67529297]
[-50.61978531 159.80871582]
[-36.81459427 153.94215393]
[-23.00939941 148.07557678]
[-9.29140091 142.00791931]
[4.33647633 135.74046326]
[12.66664505 123.39308929]
[28.43732643 124.65649414]
[42.06520462 118.38904572]
[55.69308090 112.12158966]
[69.32096100 105.85413361]
[72.98989868 84.31787872]
[89.87409973 70.45442963]
[88.56069183 55.51204300]
[87.24729156 40.56965256]
[85.93389130 25.62726593]
[84.62049103 10.68487644]
[83.30709076 -4.25751209]
[81.99369049 -19.19989967]
[65.03800964 -31.64161491]
[62.81730652 -52.25894928]
[76.34540558 -67.58489227]
[74.16138458 -82.42504120]
[71.97737122 -97.26519012]
[69.79335022 -112.10533905]
[65.44898987 -120.13701630]
[67.68748474 -127.17812347]
[65.72054291 -142.04859924]
[63.75359344 -156.91908264]
[61.78664780 -171.78955078]
[59.81969833 -186.66003418]
[57.85275269 -201.53051758]
[37.49478149 -196.46862793]
[14.26695824 -211.61956787]
[8.70435524 -225.55001831]
[3.14175272 -239.48046875]
[-2.42084956 -253.41091919]
[-15.63030720 -263.12905884]
[-13.55020237 -279.39575195]
[1.67963231 -285.47720337]
[14.39204788 -275.11737061]
[11.50960064 -258.97351074]
[17.07220268 -245.04306030]
[22.63480568 -231.11260986]
[28.19740868 -217.18215942]
[35.64622498 -218.05690002]
[33.89676666 -232.95452881]
[32.14756012 -247.85218811]
[47.04524612 -249.60115051]
[48.79439926 -234.70397949]
[50.54385376 -219.80635071]
[57.99266815 -220.68107605]
[60.17668915 -235.52122498]
[62.36070633 -250.36137390]
[64.54472351 -265.20153809]
[58.00066757 -280.23840332]
[67.96717834 -293.26147461]
[84.19156647 -290.87374878]
[89.98357391 -275.53149414]
[79.38487244 -263.01751709]
[77.20085907 -248.17736816]
[75.01683807 -233.33720398]
[72.83281708 -218.49705505]
[72.72322845 -203.49746704]
[74.69017792 -188.62698364]
[76.65712738 -173.75650024]
[78.62406921 -158.88603210]
[80.59101868 -144.01554871]
[82.55796814 -129.14506531]
[84.63350677 -114.28936005]
[86.81752014 -99.44921112]
[89.00154114 -84.60905457]
[91.18555450 -69.76890564]
[100.03993988 -66.77145386]
[107.23979187 -60.71897888]
[111.76986694 -52.40989304]
[112.97146606 -42.96438599]
[110.63787079 -33.67345810]
[105.04848480 -25.82246017]
[96.93608093 -20.51330185]
[98.24948120 -5.57091331]
[99.56288147 9.37147522]
[100.87628174 24.31386375]
[102.18968201 39.25625229]
[103.50308228 54.19864273]
[104.81648254 69.14102936]
[112.90051270 71.55617523]
[120.04313660 76.04698181]
[125.72312927 82.28573608]
[129.52600098 89.81717682]
[131.17424011 98.09169769]
[130.54756165 106.50547791]
[127.69169617 114.44452667]
[138.93611145 124.37242889]
[150.18052673 134.30032349]
[161.42494202 144.22821045]
[169.92645264 147.56074524]
[172.75976562 154.38426208]
[183.85792542 164.47540283]
[194.95606995 174.56652832]
[206.05422974 184.65766907]
[217.15237427 194.74879456]
[224.92742920 190.71948242]
[233.44810486 188.78254700]
[242.16293335 189.05352783]
[250.51029968 191.50540161]
[257.95471191 195.97084045]
[264.02108765 202.15374756]
[268.32516479 209.64875793]
[270.59771729 217.96781921]
[270.70150757 226.57205200]
[268.63937378 234.90657043]
[264.55361938 242.43629456]
[274.56338501 253.60787964]
[284.57318115 264.77944946]
[294.58297729 275.95104980]
[304.59274292 287.12261963]
[314.60253906 298.29421997]
[324.61230469 309.46578979]
[339.58395386 314.58053589]
[342.31457520 329.22268677]
[352.32434082 340.39428711]
[363.19747925 340.36099243]
[372.11132812 346.19564819]
[376.25662231 355.77096558]
[374.48684692 365.83105469]
[384.16592407 377.29037476]
[393.84500122 388.74966431]
[408.18545532 383.77813721]
[423.35330200 384.32659912]
[437.29721069 390.32089233]
[448.13140869 400.95031738]
[454.39062500 414.77734375]
[455.22839355 429.93197632]
[450.53137207 444.36465454]
[440.93484497 456.12350464]
[427.73660278 463.61822510]
[412.72161865 465.83523560]
[397.92056274 462.47467041]
[385.33517456 453.99105835]
[376.66748047 441.53170776]
[373.08972168 426.78164673]
[375.08578491 411.73571777]
[382.38571167 398.42874146]
[372.70663452 386.96945190]
[363.02755737 375.51013184]
[344.40460205 370.30047607]
[341.15277100 350.40405273]
[331.14297485 339.23248291]
[316.88732910 334.91680908]
[313.44073486 319.47558594]
[303.43093872 308.30398560]
[293.42117310 297.13241577]
[283.41137695 285.96081543]
[273.40161133 274.78924561]
[263.39181519 263.61767578]
[253.38203430 252.44607544]
[232.21650696 256.53323364]
[212.76641846 246.93840027]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 157]
[2 156]
[3 155]
[4 154]
[5 153]
[6 151]
[7 150]
[8 149]
[9 148]
[12 66]
[13 65]
[14 64]
[15 63]
[17 61]
[18 60]
[21 59]
[22 58]
[23 57]
[24 56]
[25 55]
[26 54]
[27 53]
[28 52]
[29 51]
[30 50]
[33 47]
[34 46]
[35 45]
[36 44]
[68 141]
[69 140]
[70 139]
[71 138]
[72 137]
[73 136]
[74 135]
[77 128]
[78 127]
[79 126]
[80 125]
[82 124]
[83 123]
[84 122]
[85 121]
[86 120]
[87 119]
[89 100]
[90 99]
[91 98]
[92 97]
[107 118]
[108 117]
[109 116]
[110 115]
[168 212]
[169 211]
[170 210]
[171 209]
[172 208]
[173 207]
[174 206]
[176 204]
[177 203]
[181 201]
[182 200]
[183 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
