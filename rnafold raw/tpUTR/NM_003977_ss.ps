%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 05:03:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGGAGCACUUGGCCCUGCCUUACCUGCCAAGCCCACUGCUGCAGCUGCCAGCCCCCCUGCCCGUGCUGCGUCAUGCUUCUGUGUAUAUAAAGGCCUUUAUUUAUCUCUCUCUGA\
) } def
/len { sequence length } bind def

/coor [
[188.58416748 179.82717896]
[176.89297485 170.42953491]
[165.20176697 161.03187561]
[153.51055908 151.63423157]
[141.81936646 142.23657227]
[130.12815857 132.83892822]
[118.43696594 123.44127655]
[106.74576569 114.04363251]
[91.83369446 112.42184448]
[78.39560699 119.08651733]
[64.95752716 125.75119781]
[51.51944351 132.41586304]
[38.08135986 139.08055115]
[24.64327431 145.74522400]
[24.87194252 161.00662231]
[18.44849968 174.85227966]
[6.64832497 184.53312683]
[-8.18564701 188.12699890]
[-23.10812187 184.92036438]
[-35.15623093 175.54989624]
[-41.93781281 161.87608337]
[-42.10638046 146.61390686]
[-35.62846375 132.79365540]
[-23.79025650 123.15935516]
[-8.94224644 119.62391663]
[5.96748447 122.88928986]
[17.97859955 132.30714417]
[31.41668320 125.64246368]
[44.85476685 118.97778320]
[58.29285049 112.31311035]
[71.73093414 105.64843750]
[85.16902161 98.98375702]
[70.16917419 99.05166626]
[60.00205231 88.02307892]
[61.28700638 73.07821655]
[73.18746185 63.94700241]
[87.95557404 66.57434845]
[95.97642517 79.24927521]
[94.35463715 64.33720398]
[85.17063141 51.45447540]
[91.48651886 37.96526337]
[89.86473083 23.05319405]
[88.24294281 8.14112473]
[86.62116241 -6.77094460]
[84.99937439 -21.68301392]
[83.37758636 -36.59508514]
[79.29100037 -44.91687775]
[81.91942596 -51.93215179]
[80.70204926 -66.88266754]
[68.93988037 -77.09487915]
[67.91825867 -92.27416992]
[77.72653198 -103.42466736]
[76.50914764 -118.37518311]
[64.30297852 -128.41435242]
[62.85385132 -144.15206909]
[73.02151489 -156.25141907]
[88.77366638 -157.53407288]
[100.76483917 -147.23905945]
[101.88088226 -131.47422791]
[91.45966339 -119.59255981]
[92.67704773 -104.64204407]
[104.16005707 -95.22524261]
[105.60762787 -80.08063507]
[95.65256500 -68.10005188]
[96.86994934 -53.14953232]
[98.28965759 -38.21686935]
[99.91144562 -23.30480003]
[101.53322601 -8.39272976]
[103.15501404 6.51933956]
[104.77680206 21.43140793]
[106.39858246 36.34347916]
[115.46659088 48.15959167]
[109.26670837 62.71541595]
[110.88848877 77.62748718]
[116.14340973 102.35242462]
[127.83461761 111.75007629]
[139.52581787 121.14772797]
[151.21701050 130.54537964]
[162.90821838 139.94302368]
[174.59941101 149.34068298]
[186.29061890 158.73832703]
[197.98181152 168.13597107]
[208.42286682 169.92922974]
[213.79083252 177.64794922]
[227.57002258 183.57531738]
[241.34922791 189.50270081]
[257.08370972 187.84837341]
[265.71768188 199.98524475]
[279.49685669 205.91262817]
[293.27606201 211.84001160]
[307.05526733 217.76737976]
[320.83444214 223.69476318]
[337.04858398 221.23828125]
[347.07019043 234.21900940]
[340.58993530 249.28347778]
[324.27410889 250.93466187]
[314.90707397 237.47395325]
[301.12786865 231.54656982]
[287.34869385 225.61920166]
[273.56948853 219.69181824]
[259.79028320 213.76445007]
[245.04139709 215.84274292]
[235.42184448 203.28189087]
[221.64265442 197.35452271]
[207.86344910 191.42713928]
[214.30667114 204.97280884]
[213.99444580 219.96955872]
[206.99304199 233.23530579]
[194.78802490 241.95527649]
[179.96914673 244.27920532]
[165.68072510 239.71400452]
[154.95455933 229.22833252]
[150.06657410 215.04708862]
[152.05392456 200.17932129]
[160.49493408 187.77975464]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 82]
[2 81]
[3 80]
[4 79]
[5 78]
[6 77]
[7 76]
[8 75]
[9 32]
[10 31]
[11 30]
[12 29]
[13 28]
[14 27]
[38 74]
[39 73]
[41 71]
[42 70]
[43 69]
[44 68]
[45 67]
[46 66]
[48 65]
[49 64]
[52 61]
[53 60]
[84 105]
[85 104]
[86 103]
[88 101]
[89 100]
[90 99]
[91 98]
[92 97]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
