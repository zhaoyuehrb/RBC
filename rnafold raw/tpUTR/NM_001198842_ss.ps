%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 20:00:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAUUCCCACGUGCUGUCGAUCUUUGGACCAGUUUCUAGCAAAGUUGUGUUUGAAAGAUACUCUAUUAAAGAAGACUGUGGAAUCUGUUUAUCGGUGCCCAUUAUAUCCUUAAGUUUGGAUAUUUAGCUGACCUUCGCUUUAACAUAGGUCUAAUUUAUUUGCCGUGUCAUUUUCCAUACAAAUCAGUUGAUUUAAAAAAGUUCAUUUCUCAUACUGUGCAUUAAAAUAAAAAUUUGAACAAUUACUUGGUU\
) } def
/len { sequence length } bind def

/coor [
[101.50794983 285.79208374]
[86.51063538 289.40930176]
[71.94599915 284.32257080]
[62.46156693 272.15502930]
[61.08377838 256.78930664]
[68.25228119 243.12855530]
[81.67964172 235.53187561]
[82.42437744 220.55036926]
[83.16911316 205.56886292]
[76.07324982 192.47314453]
[84.48617554 179.07414246]
[85.23091125 164.09263611]
[85.97564697 149.11114502]
[71.31501007 132.87214661]
[66.87478638 114.55474854]
[71.27372742 99.27221680]
[57.62924576 105.50344086]
[43.98476410 111.73466492]
[38.76481628 123.51004791]
[27.29372025 128.42590332]
[15.92133236 124.35330200]
[2.20053053 130.41462708]
[-11.52027130 136.47595215]
[-25.24107170 142.53726196]
[-38.96187210 148.59858704]
[-52.68267441 154.65991211]
[-66.40347290 160.72123718]
[-69.77833557 175.75175476]
[-81.22275543 185.79559326]
[-96.20962524 187.15852356]
[-108.97252655 179.52659607]
[-122.69332886 185.58792114]
[-136.41412354 191.64923096]
[-145.91087341 204.30317688]
[-160.67932129 202.36865234]
[-174.40011597 208.42997742]
[-188.12091064 214.49130249]
[-193.90225220 228.95553589]
[-207.90344238 234.90711975]
[-221.65724182 229.30635071]
[-235.37805176 235.36767578]
[-249.09884644 241.42900085]
[-262.81964111 247.49031067]
[-268.29168701 262.31707764]
[-282.67987061 268.85586548]
[-297.44790649 263.22738647]
[-303.83425903 248.77088928]
[-298.04992676 234.06315613]
[-283.52673340 227.83003235]
[-268.88098145 233.76951599]
[-255.16017151 227.70819092]
[-241.43936157 221.64688110]
[-227.71856689 215.58555603]
[-222.59678650 201.64628601]
[-208.76829529 195.30378723]
[-194.18223572 200.77049255]
[-180.46144104 194.70918274]
[-166.74063110 188.64785767]
[-158.22529602 176.42745972]
[-142.47544861 177.92843628]
[-128.75465393 171.86711121]
[-115.03384399 165.80578613]
[-112.08092499 151.23121643]
[-100.98081970 141.06993103]
[-85.84889984 139.37336731]
[-72.46479797 147.00042725]
[-58.74399567 140.93910217]
[-45.02319336 134.87779236]
[-31.30239296 128.81646729]
[-17.58159065 122.75514221]
[-3.86079025 116.69382477]
[9.86001110 110.63250732]
[19.45459175 95.92491913]
[37.75354004 98.09018707]
[51.39802170 91.85896301]
[65.04250336 85.62773895]
[73.38572693 73.16216278]
[73.94438171 58.17257309]
[74.50303650 43.18297958]
[75.06168365 28.19338608]
[75.62033844 13.20379162]
[76.17899323 -1.78580129]
[76.73764038 -16.77539444]
[66.26528168 -28.30654716]
[67.04537201 -43.50016785]
[78.10309601 -53.41289902]
[78.66175079 -68.40248871]
[67.92227936 -74.73974609]
[60.92791748 -84.97612762]
[58.95030594 -97.14213562]
[62.30290604 -108.92819977]
[70.29313660 -118.12309265]
[81.36441040 -123.02880859]
[82.29512024 -137.99990845]
[83.22582245 -152.97100830]
[84.15652466 -167.94210815]
[82.02180481 -182.78942871]
[76.91094971 -196.89187622]
[64.57772827 -198.73269653]
[54.25141907 -205.59359741]
[47.85016632 -216.12672424]
[46.53174210 -228.30920410]
[50.48456192 -239.83158875]
[58.90355301 -248.53558350]
[54.14447403 -262.76062012]
[49.38539505 -276.98562622]
[44.62631607 -291.21066284]
[39.86723709 -305.43566895]
[35.10815811 -319.66067505]
[20.26947975 -324.19866943]
[10.95900440 -336.61215210]
[10.75679970 -352.12789917]
[19.74061775 -364.77981567]
[34.45599747 -369.70294189]
[49.24457550 -365.00427246]
[58.41983795 -352.49050903]
[58.45371628 -336.97348022]
[49.33317566 -324.41976929]
[54.09225464 -310.19473267]
[58.85133743 -295.96972656]
[63.61041641 -281.74472046]
[68.36949158 -267.51968384]
[73.12857056 -253.29466248]
[90.21669006 -248.75428772]
[101.23950958 -234.72877502]
[101.61906433 -216.73649597]
[91.01340485 -202.00273132]
[96.12425995 -187.90028381]
[103.62425995 -187.90028381]
[126.12425995 -187.90028381]
[131.23510742 -202.00273132]
[136.34596252 -216.10517883]
[141.45680237 -230.20764160]
[146.56765747 -244.31008911]
[135.85855103 -255.18565369]
[130.93682861 -269.63348389]
[132.77972412 -284.78491211]
[141.02130127 -297.63168335]
[154.02520752 -305.62301636]
[169.20948792 -307.17221069]
[183.55932617 -301.97171021]
[194.22550964 -291.05407715]
[199.09030151 -276.58697510]
[197.18775940 -261.44290161]
[188.89566040 -248.62870789]
[175.86038208 -240.68864441]
[160.67010498 -239.19924927]
[155.55926514 -225.09678650]
[150.44841003 -210.99433899]
[145.33755493 -196.89187622]
[140.22671509 -182.78942871]
[151.47297668 -192.71522522]
[163.54408264 -183.81082153]
[170.54374695 -170.54414368]
[171.07986450 -155.55372620]
[165.04579163 -141.82092285]
[153.64161682 -132.07695007]
[139.13545227 -128.25975037]
[124.41232300 -131.12849426]
[112.40044403 -140.11262512]
[105.48838043 -153.42681885]
[99.12762451 -167.01139832]
[98.19692230 -152.04029846]
[97.26621246 -137.06919861]
[96.33551025 -122.09810638]
[110.46822357 -111.47335815]
[115.41780853 -94.33512115]
[109.01345825 -77.51696777]
[93.65134430 -67.84384155]
[93.09268951 -52.85424423]
[103.38188934 -42.14593124]
[103.02886963 -26.93639183]
[91.72723389 -16.21674156]
[91.16858673 -1.22714913]
[90.60993195 13.76244450]
[90.05127716 28.75203705]
[89.49263000 43.74163055]
[88.93397522 58.73122406]
[88.37532043 73.72081757]
[116.49677277 63.66464233]
[148.76370239 84.81160736]
[163.74029541 83.97386932]
[178.71688843 83.13613892]
[193.69348145 82.29840088]
[208.67005920 81.46066284]
[222.08827209 72.03285217]
[236.84613037 79.18392944]
[237.76199341 95.55748749]
[223.89372253 104.30979919]
[209.50779724 96.43725586]
[194.53120422 97.27498627]
[179.55462646 98.11272430]
[164.57803345 98.95046234]
[149.60144043 99.78820038]
[147.00228882 106.82342529]
[161.07273865 112.02172852]
[175.14311218 117.22025299]
[169.94436646 131.29054260]
[155.87443542 126.09217834]
[141.80398560 120.89387512]
[139.20483398 127.92910004]
[150.03939819 138.30273438]
[160.87396240 148.67636108]
[171.70852661 159.04998779]
[182.54309082 169.42361450]
[194.86900330 160.78892517]
[208.64276123 154.72509766]
[223.33489990 151.46519470]
[238.38073730 151.13453674]
[253.20191956 153.74583435]
[267.22875977 159.19869995]
[279.92211914 167.28355408]
[290.79409790 177.68962097]
[299.42678833 190.01693726]
[305.48840332 203.79167175]
[308.74591064 218.48434448]
[309.07412720 233.53022766]
[306.46044922 248.35098267]
[301.00531006 262.37695312]
[292.91839600 275.06900024]
[282.51055908 285.93930054]
[270.18185425 294.57000732]
[256.40615845 300.62936401]
[241.71293640 303.88452148]
[226.66700745 304.21029663]
[211.84667969 301.59420776]
[197.82159424 296.13681030]
[185.13084412 288.04785156]
[174.26223755 277.63824463]
[165.63352966 265.30813599]
[159.57638550 251.53144836]
[156.32362366 236.83770752]
[156.00027466 221.79173279]
[158.61875916 206.97181702]
[164.07844543 192.94761658]
[172.16946411 180.25817871]
[161.33489990 169.88455200]
[150.50032043 159.51092529]
[139.66575623 149.13729858]
[128.83119202 138.76365662]
[121.86268616 141.53671265]
[119.69726562 156.37959290]
[107.92565918 147.08282471]
[100.95714569 149.85588074]
[100.21240997 164.83737183]
[99.46767426 179.81887817]
[106.51026917 193.98617554]
[98.15061188 206.31359863]
[97.40587616 221.29510498]
[96.66114044 236.27661133]
[109.26889038 245.16751099]
[115.04724884 259.47186279]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 250]
[8 249]
[9 248]
[11 246]
[12 245]
[13 244]
[16 76]
[17 75]
[18 74]
[21 72]
[22 71]
[23 70]
[24 69]
[25 68]
[26 67]
[27 66]
[31 62]
[32 61]
[33 60]
[35 58]
[36 57]
[37 56]
[40 53]
[41 52]
[42 51]
[43 50]
[77 179]
[78 178]
[79 177]
[80 176]
[81 175]
[82 174]
[83 173]
[86 170]
[87 169]
[93 165]
[94 164]
[95 163]
[96 162]
[97 128]
[98 127]
[104 123]
[105 122]
[106 121]
[107 120]
[108 119]
[109 118]
[130 151]
[131 150]
[132 149]
[133 148]
[134 147]
[181 194]
[182 193]
[183 192]
[184 191]
[185 190]
[201 240]
[202 239]
[203 238]
[204 237]
[205 236]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
