%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 07:10:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCUUCUGAAGUGCUGCUCCAUGUUUCCACCAAAUGAAUUUUUUUUAUCCUCCUGACUCUUCAGGCCAGGUAGCAGCAAAUAGCAAAUGAAAAAGUCAGCUACAAAAGUUAAUGAAUAUGCCAUCUAUGCAGAACAGGCAGAAAUAUAAACACAUUAAAAGACAAAUAUGUAGAAUGUAAUAUACUGAGCUGCUAAAAUAAACCUGUUUAAGAGAA\
) } def
/len { sequence length } bind def

/coor [
[112.68408203 281.04586792]
[99.43576813 270.46670532]
[105.93399048 254.80754089]
[106.36428833 239.81370544]
[106.79457855 224.81988525]
[107.22487640 209.82604980]
[107.65517426 194.83222961]
[100.28615570 181.88824463]
[108.41615295 168.31570435]
[108.84644318 153.32186890]
[109.27674103 138.32804871]
[109.70703888 123.33422089]
[95.55133057 118.37277985]
[86.52696991 130.35447693]
[77.50260925 142.33616638]
[80.25695801 159.61424255]
[69.86529541 173.26791382]
[53.14939880 175.14076233]
[44.29784012 187.25067139]
[45.33132935 203.26039124]
[33.36235809 213.94325256]
[17.57250023 211.10424805]
[10.07437992 196.92124939]
[16.61991310 182.27421570]
[32.18793106 178.39910889]
[41.03948975 166.28919983]
[37.29858017 153.96255493]
[41.39990997 141.54603577]
[52.05947495 133.64093018]
[65.52091980 133.31179810]
[74.54528046 121.33010864]
[83.56964111 109.34841919]
[79.14385986 103.29346466]
[64.23062134 104.90449524]
[70.29229736 91.18355560]
[65.86652374 85.12860107]
[51.71081161 90.09004211]
[37.55509949 95.05147552]
[23.39939117 100.01291656]
[9.24368095 104.97435760]
[1.02245510 118.75082397]
[-14.89304543 120.76983643]
[-26.29380989 109.48258209]
[-24.43414879 93.54767609]
[-10.74063301 85.18901062]
[4.28224230 90.81864929]
[18.43795204 85.85720825]
[32.59366226 80.89576721]
[46.74937057 75.93432617]
[60.90508270 70.97289276]
[60.26034546 63.50065231]
[46.67330551 57.14516068]
[58.97087479 48.55618286]
[58.32613754 41.08394623]
[43.52978897 38.62061310]
[28.73343658 36.15727997]
[13.93708611 33.69394684]
[-0.85926419 31.23061180]
[-16.01680183 37.49009323]
[-28.84972191 27.27989197]
[-26.15661812 11.10339069]
[-10.70792294 5.60158443]
[1.60406911 16.43426132]
[16.40041924 18.89759445]
[31.19676971 21.36092758]
[45.99312210 23.82426071]
[60.78947067 26.28759384]
[125.84120178 54.66093445]
[120.85801697 99.04285431]
[131.94740295 88.94210052]
[143.03680420 78.84133911]
[154.12620544 68.74058533]
[165.21559143 58.63982773]
[175.78408813 47.99525452]
[185.80505371 36.83369446]
[195.82600403 25.67213631]
[205.84696960 14.51057816]
[215.86791992 3.34901857]
[225.88888550 -7.81254053]
[217.30990601 -24.78882408]
[216.16099548 -43.71407700]
[222.58206177 -61.48919678]
[235.47735596 -75.22249603]
[228.83096313 -88.66963196]
[222.18457031 -102.11677551]
[215.53817749 -115.56391144]
[200.83847046 -120.71719360]
[194.28964233 -134.44918823]
[199.29310608 -148.43135071]
[192.64671326 -161.87849426]
[177.59814453 -166.70715332]
[170.44596863 -180.80047607]
[175.43347168 -195.79716492]
[189.60162354 -202.79992676]
[204.54473877 -197.65415955]
[211.39732361 -183.41275024]
[206.09385681 -168.52487183]
[212.74023438 -155.07774353]
[226.88706970 -150.56080627]
[233.81901550 -137.01817322]
[228.98532104 -122.21029663]
[235.63171387 -108.76316071]
[242.27809143 -95.31602478]
[248.92448425 -81.86888885]
[256.55557251 -84.25157166]
[264.60311890 -85.31332397]
[272.83660889 -84.98176575]
[281.01309204 -83.22504425]
[288.88430786 -80.05394745]
[296.20422363 -75.52271271]
[305.05578613 -87.63262177]
[313.90734863 -99.74253082]
[315.80435181 -115.44960022]
[329.56127930 -121.15885925]
[338.41284180 -133.26876831]
[347.26440430 -145.37867737]
[341.17739868 -159.41062927]
[342.91973877 -174.50570679]
[351.92395020 -186.62139893]
[365.69152832 -192.56364441]
[380.48526001 -190.82846069]
[389.33682251 -202.93836975]
[398.18838501 -215.04827881]
[407.03994751 -227.15818787]
[408.30401611 -247.28083801]
[426.32211304 -254.30702209]
[434.82263184 -266.66586304]
[443.32315063 -279.02471924]
[444.07559204 -295.40658569]
[458.76132202 -302.70458984]
[472.27297974 -293.41116333]
[470.71087646 -277.08657837]
[455.68200684 -270.52416992]
[447.18148804 -258.16534424]
[438.68096924 -245.80648804]
[441.43475342 -235.97381592]
[438.25805664 -226.03883362]
[429.96896362 -219.35205078]
[419.14984131 -218.30664062]
[410.29827881 -206.19673157]
[401.44671631 -194.08682251]
[392.59515381 -181.97691345]
[398.73916626 -168.40794373]
[397.25653076 -153.48622131]
[388.44580078 -141.22909546]
[374.59188843 -134.98680115]
[359.37432861 -136.52711487]
[350.52276611 -124.41721344]
[341.67120361 -112.30730438]
[340.40731812 -97.46641541]
[326.01724243 -90.89096832]
[317.16567993 -78.78105927]
[308.31414795 -66.67115021]
[314.57205200 -53.03888702]
[329.52539062 -51.85663986]
[344.47869873 -50.67438889]
[359.43203735 -49.49214172]
[374.38537598 -48.30989075]
[380.51083374 -57.03237534]
[389.63299561 -62.38724518]
[400.07427979 -63.46736526]
[409.94641113 -60.14470673]
[417.49188232 -53.08143616]
[421.39678955 -43.59917068]
[436.28543091 -41.77468872]
[451.17404175 -39.95020676]
[466.04824829 -46.85600281]
[479.30856323 -37.20735931]
[477.31390381 -20.92997169]
[462.11621094 -14.76862144]
[449.34957886 -25.06157875]
[434.46093750 -26.88606071]
[419.57232666 -28.71054077]
[405.13754272 -15.62063885]
[385.42636108 -17.40374184]
[373.20312500 -33.35655212]
[358.24978638 -34.53880310]
[343.29647827 -35.72105408]
[328.34313965 -36.90330124]
[313.38980103 -38.08555222]
[312.21313477 -28.23127174]
[309.15847778 -18.85900116]
[304.36782837 -10.32038689]
[298.04772949 -2.93043137]
[290.46054077 3.04412270]
[281.91357422 7.39438009]
[272.74670410 9.97653294]
[263.31887817 10.71649456]
[253.99401855 9.61178684]
[245.12709045 6.73064613]
[237.05044556 2.20841765]
[227.02947998 13.36997700]
[217.00852966 24.53153610]
[206.98756409 35.69309616]
[196.96661377 46.85465240]
[186.94564819 58.01621246]
[201.91627502 57.07781601]
[214.05906677 65.88420868]
[217.81762695 80.40568542]
[211.47207642 93.99737549]
[197.92607117 100.43987274]
[183.37811279 96.78516388]
[174.48518372 84.70560455]
[175.31636047 69.72922516]
[164.22695923 79.82997894]
[153.13755798 89.93074036]
[142.04817200 100.03149414]
[130.95877075 110.13224792]
[124.70086670 123.76451111]
[124.27056885 138.75834656]
[123.84027100 153.75216675]
[123.40998077 168.74600220]
[130.74821472 182.76245117]
[122.64900208 195.26252747]
[122.21870422 210.25634766]
[121.78840637 225.25018311]
[121.35810852 240.24400330]
[120.92781830 255.23782349]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 218]
[4 217]
[5 216]
[6 215]
[7 214]
[9 212]
[10 211]
[11 210]
[12 209]
[13 32]
[14 31]
[15 30]
[18 26]
[19 25]
[36 50]
[37 49]
[38 48]
[39 47]
[40 46]
[54 67]
[55 66]
[56 65]
[57 64]
[58 63]
[69 208]
[70 207]
[71 206]
[72 205]
[73 204]
[74 196]
[75 195]
[76 194]
[77 193]
[78 192]
[79 191]
[83 104]
[84 103]
[85 102]
[86 101]
[89 98]
[90 97]
[110 153]
[111 152]
[112 151]
[114 149]
[115 148]
[116 147]
[121 142]
[122 141]
[123 140]
[124 139]
[126 135]
[127 134]
[128 133]
[154 180]
[155 179]
[156 178]
[157 177]
[158 176]
[164 173]
[165 172]
[166 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
