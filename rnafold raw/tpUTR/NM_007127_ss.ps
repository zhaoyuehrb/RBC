%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 08:42:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGAGUAGCUGUGGUUGUAAAGCAGUACCCUACCCUGAUUGUAGGGUCUCAUUUUCUCACCGAUAUUAGUCCUACACCAAUUGAAGUGAAAUUUUGCAGAUGUGCCUAUGAGCACAAACUUCUGUGGCAAAUGCCAGUUUUGUUUAAUAAUGUACCUAUUCCUUCAGAAAGAUGAUACCCCAAAAGGA\
) } def
/len { sequence length } bind def

/coor [
[235.18521118 454.03018188]
[229.61724854 440.10186768]
[224.04930115 426.17355347]
[218.48133850 412.24523926]
[212.79841614 398.36343384]
[207.00093079 384.52911377]
[201.20344543 370.69476318]
[195.40596008 356.86041260]
[189.60847473 343.02606201]
[175.96710205 342.19390869]
[163.95933533 335.53009033]
[155.95910645 324.28677368]
[153.57612610 310.62777710]
[157.33222961 297.21212769]
[166.54846191 286.67660522]
[160.98049927 272.74829102]
[155.41255188 258.82000732]
[149.84458923 244.89167786]
[144.27662659 230.96337891]
[132.36779785 222.01747131]
[134.42971802 206.33120728]
[128.86175537 192.40289307]
[123.29380035 178.47459412]
[117.72583771 164.54627991]
[112.15788269 150.61796570]
[106.58992004 136.68965149]
[63.44164658 126.67778015]
[52.96936035 75.05265045]
[38.70351028 79.68790436]
[24.43766403 84.32315826]
[10.17181587 88.95841980]
[-4.09403133 93.59367371]
[-18.35987854 98.22892761]
[-32.62572861 102.86418152]
[-38.31552124 117.42990112]
[-52.06154251 124.88516235]
[-67.37333679 121.70981598]
[-77.02115631 109.40316010]
[-76.44957733 93.77603149]
[-65.92849731 82.20706940]
[-50.42563629 80.15879059]
[-37.26098251 88.59833527]
[-22.99513435 83.96308136]
[-8.72928619 79.32782745]
[5.53656149 74.69256592]
[19.80240822 70.05731201]
[34.06825638 65.42205811]
[48.33410263 60.78680420]
[50.41462708 53.58115005]
[35.67290878 50.80955887]
[20.93118858 48.03796768]
[6.05934668 46.08135986]
[1.73237252 31.71900177]
[13.04834366 21.87274361]
[26.67518044 28.14430237]
[40.62542343 33.65707397]
[54.57566833 39.16984558]
[56.65619278 31.96419334]
[47.05666351 20.43817711]
[37.45713425 8.91216087]
[27.85760689 -2.61385608]
[12.76786804 -0.11445613]
[-1.45300376 -5.46829796]
[-11.02109909 -17.14382553]
[-13.44422913 -31.94194603]
[-8.17045021 -45.87223053]
[-17.76997757 -57.39824677]
[-27.36950684 -68.92426300]
[-42.14653397 -74.57670593]
[-44.34623718 -89.30798340]
[-53.94576263 -100.83399963]
[-69.72764587 -103.71702576]
[-77.18618011 -117.92089081]
[-70.59981537 -132.54960632]
[-55.02105331 -136.38127136]
[-42.40058136 -126.47657013]
[-42.41974640 -110.43352509]
[-32.82022095 -98.90750885]
[-18.72981644 -94.07949066]
[-15.84348965 -78.52379608]
[-6.24396181 -66.99777985]
[3.35556650 -55.47175980]
[18.00999641 -58.13883209]
[32.12572861 -53.07897568]
[41.87798691 -41.55683136]
[44.57123566 -26.60212708]
[39.38362503 -12.21338463]
[48.98315048 -0.68736756]
[58.58267975 10.83864880]
[68.18220520 22.36466599]
[75.66145325 21.80713463]
[67.21646118 9.41027927]
[73.72986603 -4.10177088]
[88.68834686 -5.21710968]
[97.13357544 7.17958975]
[90.61995697 20.69207191]
[98.09920502 20.13454056]
[105.88374329 7.31264973]
[113.66828918 -5.50924063]
[121.45283508 -18.33113098]
[129.23738098 -31.15302277]
[136.59373474 -44.22528458]
[143.51383972 -57.53362656]
[150.43395996 -70.84197235]
[157.35408020 -84.15031433]
[164.27420044 -97.45865631]
[159.27644348 -112.45191956]
[166.41894531 -126.55014801]
[181.46421814 -131.38911438]
[195.48614502 -124.09794617]
[200.16577148 -109.00235748]
[192.72676086 -95.05830383]
[177.58253479 -90.53853607]
[170.66242981 -77.23019409]
[163.74230957 -63.92185211]
[156.82218933 -50.61351013]
[149.90206909 -37.30516815]
[150.63085938 -34.58065414]
[150.31446838 -31.40088463]
[148.77311707 -28.16614723]
[145.97642517 -25.33463287]
[142.05926514 -23.36847878]
[134.27471924 -10.54658794]
[126.49018097 2.27530289]
[118.70563507 15.09719372]
[110.92109680 27.91908455]
[120.52062225 39.44510269]
[134.53909302 34.10819244]
[148.55755615 28.77128601]
[158.48776245 15.72049332]
[174.71873474 18.06302643]
[180.55345154 33.38908768]
[169.98963928 45.93253708]
[153.89447021 42.78975296]
[139.87599182 48.12665939]
[125.85752869 53.46356964]
[139.73956299 69.58093262]
[145.47665405 88.72579193]
[143.05155945 107.27037811]
[133.90373230 122.09690857]
[120.51823425 131.12168884]
[126.08618927 145.05000305]
[131.65414429 158.97831726]
[137.22210693 172.90663147]
[142.79006958 186.83494568]
[148.35803223 200.76324463]
[160.66511536 210.70538330]
[158.20494080 225.39541626]
[163.77290344 239.32373047]
[169.34085083 253.25202942]
[174.90881348 267.18035889]
[180.47677612 281.10864258]
[196.85726929 283.29718018]
[209.82789612 293.38583374]
[215.91073608 308.54965210]
[213.53533936 324.61959839]
[203.44281006 337.22857666]
[209.24031067 351.06292725]
[215.03779602 364.89727783]
[220.83528137 378.73162842]
[226.63276672 392.56594849]
[232.84689331 399.28601074]
[232.40965271 406.67727661]
[237.97760010 420.60559082]
[243.54556274 434.53390503]
[249.11352539 448.46221924]
[252.04647827 433.75177002]
[260.23324585 421.18286133]
[272.50259399 412.55368042]
[287.09927368 409.09866333]
[301.93505859 411.31216431]
[314.88751221 418.87744141]
[324.10366821 430.71224976]
[328.26504517 445.12344360]
[326.77627563 460.04940796]
[319.85040283 473.35473633]
[308.47821045 483.13598633]
[294.28662109 487.99386597]
[279.30590820 487.23336792]
[265.67922974 480.96331787]
[255.35508728 470.07919312]
[258.06829834 484.83175659]
[269.10763550 496.95880127]
[263.86788940 512.49835205]
[247.73922729 515.46459961]
[237.31347656 502.80618286]
[243.31571960 487.54495239]
[240.60250854 472.79238892]
[235.61273193 468.73428345]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 166]
[2 165]
[3 164]
[4 163]
[5 161]
[6 160]
[7 159]
[8 158]
[9 157]
[15 152]
[16 151]
[17 150]
[18 149]
[19 148]
[21 146]
[22 145]
[23 144]
[24 143]
[25 142]
[26 141]
[28 48]
[29 47]
[30 46]
[31 45]
[32 44]
[33 43]
[34 42]
[58 90]
[59 89]
[60 88]
[61 87]
[66 82]
[67 81]
[68 80]
[70 78]
[71 77]
[97 126]
[98 125]
[99 124]
[100 123]
[101 122]
[102 117]
[103 116]
[104 115]
[105 114]
[106 113]
[127 136]
[128 135]
[129 134]
[181 188]
[182 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
