%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 16:17:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUCAACCACUCUGCCAAACCUGCCCUGCCAUUGUGCCUUUUUAGGGGGCCUGGCCCCCGUCCUGGGAGUUGGGGGAUGGGUCUCUCUGUCUCCCCACUUCCUGAGUUCAUGUUCCGCGUGCCUGAACUGAAUAUGUCACCUUGCUCCCAAGACACGGCCCUCUCAGGAAGCUCCCGGAGUCCCCGCCUCUCUCCUCCGCCCACAGGGGUUCGUGGGCACAGGGCUUCUGGGGACUCCCCGCGUGAUAAAUUAU\
UAAUGUUCCGCAGUCUCACUCUGAAUAAAGGACAGUUUGUAAGUCUUGA\
) } def
/len { sequence length } bind def

/coor [
[98.79985046 588.82836914]
[82.40853119 588.32171631]
[74.89111328 573.74700928]
[83.98086548 560.09753418]
[84.44430542 545.10473633]
[84.90774536 530.11187744]
[85.37118530 515.11901855]
[77.33162689 506.12280273]
[77.56446838 493.65975952]
[86.48882294 484.39294434]
[87.10666656 469.40567017]
[87.72451019 454.41839600]
[84.87484741 447.64010620]
[88.42668915 439.28018188]
[89.19887543 424.30007935]
[89.97105408 409.31994629]
[87.19136047 402.51266479]
[90.82912445 394.18975830]
[91.75556183 379.21841431]
[92.68199921 364.24703979]
[93.60843658 349.27566528]
[90.89900208 342.44012451]
[94.62229919 334.15512085]
[95.70289612 319.19409180]
[88.90257263 305.94250488]
[97.61392212 292.73559570]
[98.69451904 277.77456665]
[99.77511597 262.81353760]
[85.99172974 248.98793030]
[86.91371155 229.17936707]
[102.39439392 216.30039978]
[103.01223755 201.31314087]
[92.76541138 190.56427002]
[93.17848969 175.35624695]
[104.52236938 164.68130493]
[105.14021301 149.69404602]
[105.75805664 134.70677185]
[99.42974091 130.68154907]
[91.70224762 143.53790283]
[90.76782990 158.50877380]
[77.40106964 165.31536865]
[64.74407959 157.26548767]
[65.24112701 142.27372742]
[78.40486908 135.07991028]
[86.77310181 122.63110352]
[80.44478607 118.60588837]
[67.13269806 125.51878357]
[53.82060623 132.43168640]
[40.50851440 139.34458923]
[27.19642067 146.25749207]
[13.88432884 153.17039490]
[2.61404681 165.83598328]
[-12.67648792 158.51232910]
[-9.87188816 141.79196167]
[6.97142744 139.85830688]
[20.28351974 132.94540405]
[33.59561157 126.03250122]
[46.90770340 119.11959839]
[60.21979523 112.20669556]
[73.53188324 105.29379272]
[75.21692657 97.98553467]
[60.27437973 99.29711914]
[54.40950775 85.49121094]
[65.72738647 75.64714050]
[78.58701324 83.36901855]
[80.27205658 76.06076050]
[71.33074951 64.01696777]
[62.38944244 51.97316742]
[53.44813919 39.92937088]
[44.50683212 27.88557243]
[36.21355057 35.07980347]
[22.98607254 37.11253357]
[8.22910309 34.42332077]
[-6.52786636 31.73411179]
[-21.28483582 29.04489899]
[-36.04180527 26.35568810]
[-50.81242752 23.74251366]
[-65.59631348 21.20544243]
[-80.38019562 18.66837311]
[-95.16408539 16.13130188]
[-109.94796753 13.59423256]
[-124.73185730 11.05716228]
[-139.92041016 17.24099731]
[-152.70227051 6.96694565]
[-149.92855835 -9.19592857]
[-134.45262146 -14.62064648]
[-122.19478607 -3.72672319]
[-107.41090393 -1.18965316]
[-92.62701416 1.34741700]
[-77.84313202 3.88448715]
[-63.05924225 6.42155743]
[-48.27535629 8.95862770]
[-41.18727493 7.00287151]
[-33.35259247 11.59871960]
[-18.59562492 14.28793049]
[-3.83865476 16.97714233]
[10.91831493 19.66635323]
[25.67528343 22.35556412]
[35.34337616 10.88699818]
[30.19694328 -3.20251060]
[25.05051231 -17.29201889]
[19.90408325 -31.38152695]
[14.75765133 -45.47103500]
[9.61122131 -59.56054306]
[4.46479034 -73.65005493]
[-0.68164027 -87.73956299]
[-5.82807112 -101.82907104]
[-30.09259415 -104.36030579]
[-48.12357330 -124.32417297]
[-48.25564194 -153.73373413]
[-56.69328308 -166.13560486]
[-65.13092041 -178.53746033]
[-73.56855774 -190.93933105]
[-82.00620270 -203.34118652]
[-90.44384003 -215.74305725]
[-98.88147736 -228.14492798]
[-109.60447693 -229.54344177]
[-117.64022827 -236.44836426]
[-120.51512909 -246.41809082]
[-117.51857758 -256.12301636]
[-125.69895935 -268.69604492]
[-141.21066284 -271.72308350]
[-149.96923828 -284.87841797]
[-146.77839661 -300.35723877]
[-133.53120422 -308.97622681]
[-118.08697510 -305.62191772]
[-109.60850525 -292.28433228]
[-113.12591553 -276.87643433]
[-104.94554138 -264.30340576]
[-87.10890961 -256.76358032]
[-86.47961426 -236.58256531]
[-78.04197693 -224.18069458]
[-69.60433197 -211.77882385]
[-61.16669464 -199.37696838]
[-52.72905731 -186.97509766]
[-44.29141617 -174.57324219]
[-35.85377884 -162.17137146]
[-28.80902481 -164.74458313]
[-33.95523834 -178.83418274]
[-19.86557007 -183.98016357]
[-14.71951580 -169.89102173]
[-7.67476177 -172.46423340]
[-9.21707726 -187.38473511]
[-10.75939178 -202.30523682]
[-12.30170631 -217.22572327]
[-22.35115051 -230.18492126]
[-15.90321541 -245.26325989]
[0.40901431 -246.94943237]
[9.80491638 -233.50886536]
[2.61879134 -218.76803589]
[4.16110659 -203.84754944]
[5.70342112 -188.92704773]
[7.24573612 -174.00654602]
[14.14341450 -169.13969421]
[19.81280708 -163.14443970]
[24.08427238 -156.30819702]
[26.85208321 -148.94023132]
[28.07623482 -141.35797119]
[27.78145599 -133.87348938]
[26.05350113 -126.78072357]
[23.03300667 -120.34396362]
[18.90724564 -114.78797150]
[13.90019608 -110.29022980]
[8.26143742 -106.97550201]
[13.40786839 -92.88599396]
[18.55429840 -78.79648590]
[23.70072937 -64.70697784]
[28.84716034 -50.61746597]
[33.99359131 -36.52795792]
[39.14002228 -22.43844986]
[44.28645325 -8.34894085]
[49.43288422 5.74056721]
[56.55062866 18.94426727]
[65.49193573 30.98806381]
[74.43324280 43.03186035]
[83.37454987 55.07566071]
[92.31584930 67.11945343]
[106.82126617 70.93952179]
[120.53490448 64.86200714]
[134.24853516 58.78448868]
[147.96217346 52.70697403]
[161.67581177 46.62945938]
[175.38945007 40.55194092]
[189.10307312 34.47442627]
[202.81671143 28.39690971]
[216.53034973 22.31939316]
[230.24398804 16.24187660]
[230.38337708 3.38377690]
[235.34120178 -8.43037128]
[244.35365295 -17.47127342]
[256.06631470 -22.42996597]
[268.73754883 -22.60725975]
[280.49755859 -18.01211929]
[289.62420654 -9.35515881]
[303.46011353 -15.14889622]
[317.29602051 -20.94263458]
[331.13195801 -26.73637199]
[337.19305420 -41.08560562]
[351.30718994 -46.76418304]
[364.94964600 -40.89739990]
[378.78555298 -46.69113922]
[392.62145996 -52.48487473]
[406.45739746 -58.27861404]
[420.29330444 -64.07234955]
[434.12921143 -69.86608887]
[437.56210327 -84.99866486]
[449.25622559 -95.19803619]
[464.71496582 -96.54232788]
[477.99411011 -88.51463318]
[483.98757935 -74.20176697]
[480.39074707 -59.10731888]
[468.58663940 -49.03541183]
[453.11425781 -47.85889816]
[439.92297363 -56.03017044]
[426.08703613 -50.23643494]
[412.25112915 -44.44269562]
[398.41522217 -38.64896011]
[384.57928467 -32.85522079]
[370.74337769 -27.06148338]
[365.35186768 -13.22430992]
[351.40283203 -7.15153837]
[336.92568970 -12.90045452]
[323.08975220 -7.10671663]
[309.25384521 -1.31297934]
[295.41793823 4.48075819]
[293.83547974 21.66633415]
[283.69000244 35.73802948]
[267.72091675 42.74100876]
[250.31948853 40.65034485]
[236.32150269 29.95551300]
[222.60786438 36.03302765]
[208.89422607 42.11054611]
[195.18060303 48.18806076]
[181.46696472 54.26557922]
[167.75332642 60.34309387]
[154.03968811 66.42060852]
[140.32604980 72.49812317]
[126.61241913 78.57564545]
[112.89878082 84.65316010]
[127.29300690 83.86874390]
[142.53173828 91.56607819]
[154.46005249 107.80181885]
[167.47610474 115.25717926]
[180.49215698 122.71253204]
[196.31269836 122.85759735]
[203.51100159 135.89729309]
[216.52706909 143.35264587]
[229.54312134 150.80799866]
[242.55917358 158.26336670]
[256.19946289 151.05601501]
[271.56903076 152.39009094]
[283.76351929 161.83985901]
[288.89169312 176.38996887]
[285.31713867 191.39750671]
[274.18054199 202.07363892]
[259.03552246 205.01164246]
[244.71481323 199.27400208]
[235.78807068 186.69158936]
[235.10382080 171.27941895]
[222.08776855 163.82406616]
[209.07170105 156.36871338]
[196.05564880 148.91334534]
[181.16610718 149.30154419]
[173.03680420 135.72859192]
[160.02075195 128.27323914]
[147.00469971 120.81787872]
[140.43984985 124.44456482]
[151.39549255 134.69023132]
[145.03674316 148.27575684]
[130.15118408 146.42634583]
[127.31016541 131.69793701]
[120.74532318 135.32461548]
[120.12747955 150.31188965]
[119.50963593 165.29914856]
[129.93637085 176.87156677]
[129.09629822 192.06199646]
[117.99951172 201.93098450]
[117.38166809 216.91824341]
[126.26592255 222.66587830]
[131.94212341 231.50044250]
[133.45393372 241.81060791]
[130.59748840 251.74815369]
[123.94596863 259.55929565]
[114.73614502 263.89413452]
[113.65554810 278.85516357]
[112.57495117 293.81616211]
[119.29798889 308.13787842]
[110.66392517 320.27468872]
[109.58332825 335.23571777]
[108.57979584 350.20211792]
[107.65335846 365.17349243]
[106.72692108 380.14483643]
[105.80048370 395.11621094]
[104.95116425 410.09213257]
[104.17898560 425.07226562]
[103.40680695 440.05236816]
[102.71178436 455.03625488]
[102.09394073 470.02352905]
[101.47609711 485.01080322]
[110.38710785 501.15158081]
[100.36402130 515.58245850]
[99.90058136 530.57531738]
[99.43714142 545.56817627]
[98.97370148 560.56097412]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 304]
[5 303]
[6 302]
[7 301]
[10 299]
[11 298]
[12 297]
[14 296]
[15 295]
[16 294]
[18 293]
[19 292]
[20 291]
[21 290]
[23 289]
[24 288]
[26 286]
[27 285]
[28 284]
[31 278]
[32 277]
[35 274]
[36 273]
[37 272]
[46 60]
[47 59]
[48 58]
[49 57]
[50 56]
[51 55]
[66 177]
[67 176]
[68 175]
[69 174]
[70 173]
[72 98]
[73 97]
[74 96]
[75 95]
[76 94]
[77 92]
[78 91]
[79 90]
[80 89]
[81 88]
[82 87]
[99 172]
[100 171]
[101 170]
[102 169]
[103 168]
[104 167]
[105 166]
[106 165]
[107 164]
[110 137]
[111 136]
[112 135]
[113 134]
[114 133]
[115 132]
[116 131]
[120 129]
[121 128]
[142 153]
[143 152]
[144 151]
[145 150]
[178 239]
[179 238]
[180 237]
[181 236]
[182 235]
[183 234]
[184 233]
[185 232]
[186 231]
[187 230]
[194 225]
[195 224]
[196 223]
[197 222]
[200 219]
[201 218]
[202 217]
[203 216]
[204 215]
[205 214]
[242 266]
[243 265]
[244 264]
[246 262]
[247 261]
[248 260]
[249 259]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
