%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 18:56:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAAAUGAAACUGAAUUUUAAACUUUUUGCAUGCUUCUAUGUAGAAAAUAAUCAAAUGAUAAUAGAUACUUAUAAUGAAACUUCAUUAAGGUUUCAUUCAGUGUAGCAAUUACUGUCUUUAAAAAUUAAGUGGAAGAAGAAUUACUUUAAUCAACUAACAAGCAAUAAUAAAAUGAAACUUAAAAUA\
) } def
/len { sequence length } bind def

/coor [
[153.30560303 259.61828613]
[153.55113220 274.75823975]
[148.86505127 289.15682983]
[139.75566101 301.25219727]
[127.21109772 309.73229980]
[112.59208679 313.67733765]
[97.48439026 312.65933228]
[83.52678680 306.78872681]
[72.23328400 296.70233154]
[64.82892609 283.49423218]
[62.11686707 268.59713745]
[64.39130402 253.62696838]
[71.40552521 240.20759583]
[82.39866638 229.79464722]
[96.17828369 223.51763916]
[111.24967194 222.05744934]
[114.70890808 207.46177673]
[118.16814423 192.86610413]
[121.62738037 178.27043152]
[125.08662415 163.67475891]
[128.54585266 149.07908630]
[132.00509644 134.48341370]
[107.25288391 150.09881592]
[75.91128540 148.54727173]
[49.46531296 127.99115753]
[35.41304779 133.23843384]
[21.36078453 138.48570251]
[7.30851984 143.73297119]
[-6.74374485 148.98023987]
[-20.79600906 154.22750854]
[-34.84827423 159.47479248]
[-48.90053940 164.72206116]
[-62.95280457 169.96932983]
[-77.00506592 175.21659851]
[-87.01840973 188.20370483]
[-103.23409271 185.75756836]
[-108.97081757 170.39456177]
[-98.32712555 157.91882324]
[-82.25234222 161.16433716]
[-68.20007324 155.91706848]
[-54.14781189 150.66979980]
[-40.09554672 145.42251587]
[-26.04328156 140.17524719]
[-11.99101639 134.92797852]
[2.06124830 129.68070984]
[16.11351204 124.43343353]
[30.16577721 119.18616486]
[44.21804047 113.93888855]
[44.03106308 106.44122314]
[30.85772324 99.26744080]
[43.65710068 91.44588470]
[43.47011948 83.94821930]
[29.17376900 79.40791321]
[14.87741852 74.86761475]
[-1.01560855 78.91035461]
[-12.26793289 66.98067474]
[-7.30412817 51.35080719]
[8.76946926 48.09942245]
[19.41771889 60.57126236]
[33.71406937 65.11156464]
[48.01042175 69.65186310]
[53.37942505 64.41509247]
[40.10026932 57.43912506]
[42.63134384 42.65421295]
[57.47478104 40.49264145]
[64.11742401 53.94153595]
[69.48642731 48.70476151]
[65.30395508 34.29965973]
[61.12148285 19.89455986]
[56.93901062 5.48945808]
[52.75653839 -8.91564274]
[42.91814041 -13.60966301]
[37.40980148 -22.76073647]
[37.84878922 -33.21271896]
[43.84782028 -41.51317978]
[40.14646149 -56.04933929]
[36.44509888 -70.58550262]
[32.74374008 -85.12165833]
[29.04237747 -99.65782166]
[25.34101677 -114.19397736]
[21.63965607 -128.73013306]
[17.93829536 -143.26629639]
[14.23693371 -157.80245972]
[10.53557301 -172.33860779]
[-2.46712899 -181.73591614]
[-3.08311749 -197.76713562]
[9.16014099 -208.13450623]
[24.87066650 -204.88505554]
[31.99668884 -190.51148987]
[25.07173157 -176.03997803]
[28.77309227 -161.50381470]
[32.47445297 -146.96765137]
[36.17581558 -132.43150330]
[39.87717438 -117.89533997]
[43.57853699 -103.35917664]
[47.27989960 -88.82302094]
[50.98125839 -74.28685760]
[54.68262100 -59.75070190]
[58.38397980 -45.21454239]
[72.86673737 -32.41949081]
[67.16163635 -13.09811497]
[71.34410858 1.30698609]
[75.52658081 15.71208668]
[79.70905304 30.11718750]
[83.89152527 44.52228928]
[118.33647919 50.90438461]
[139.52441406 74.48035431]
[147.76705933 61.94803619]
[156.00968933 49.41571808]
[154.18672180 33.47657394]
[165.61344910 22.21559906]
[181.52426147 24.27125168]
[189.71374512 38.06660843]
[183.89962769 53.01905441]
[168.54200745 57.65835190]
[160.29937744 70.19066620]
[152.05673218 82.72298431]
[155.42272949 89.42523193]
[168.66464233 82.37881470]
[181.90653992 75.33240509]
[195.14845276 68.28598785]
[204.05639648 56.21750259]
[219.00199890 57.49385071]
[225.73458862 70.89804077]
[217.83462524 83.64913940]
[202.83354187 83.58827972]
[189.27394104 90.00209808]
[175.71432495 96.41590881]
[162.15472412 102.82971954]
[165.52072144 109.53196716]
[180.49533081 110.40413666]
[195.46995544 111.27631378]
[209.69667053 104.35450745]
[221.95252991 112.81874084]
[236.92713928 113.69091797]
[253.17489624 105.04394531]
[267.45541382 115.22976685]
[282.44247437 115.85292053]
[297.42950439 116.47607422]
[312.41656494 117.09922791]
[325.14828491 107.33795166]
[340.68270874 111.34564972]
[347.10311890 126.04795074]
[339.48434448 140.16651917]
[323.67086792 142.87078857]
[311.79342651 132.08627319]
[296.80636597 131.46311951]
[281.81930542 130.83996582]
[266.83227539 130.21682739]
[257.71029663 138.17944336]
[245.20748901 137.77124023]
[236.05497742 128.66554260]
[221.08035278 127.79336548]
[207.92472839 134.77755737]
[194.59779358 126.25093079]
[179.62316895 125.37876129]
[164.64854431 124.50658417]
[177.37187195 132.45120239]
[190.09519958 140.39582825]
[202.81851196 148.34045410]
[217.79206848 149.23081970]
[231.89944458 154.32806396]
[243.98397827 163.21423340]
[253.05484009 175.16076660]
[258.36828613 189.18814087]
[259.48870850 204.14624023]
[256.32418823 218.80862427]
[249.13421631 231.97314453]
[238.50830078 242.56039429]
[225.31767273 249.70233154]
[210.64384460 252.81338501]
[195.68992615 251.63847351]
[181.68202209 246.27391052]
[169.76863098 237.15957642]
[160.92655945 225.04273987]
[155.88076782 210.91687012]
[155.04498291 195.94017029]
[158.48608398 181.34472656]
[154.52430725 166.87736511]
[150.56254578 152.41001892]
[146.60076904 137.94265747]
[143.14152527 152.53833008]
[139.68229675 167.13400269]
[136.22305298 181.72967529]
[132.76382446 196.32534790]
[129.30458069 210.92102051]
[125.84534454 225.51669312]
[138.65829468 233.58558655]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 187]
[17 186]
[18 185]
[19 184]
[20 183]
[21 182]
[22 181]
[25 48]
[26 47]
[27 46]
[28 45]
[29 44]
[30 43]
[31 42]
[32 41]
[33 40]
[34 39]
[52 61]
[53 60]
[54 59]
[67 105]
[68 104]
[69 103]
[70 102]
[71 101]
[75 99]
[76 98]
[77 97]
[78 96]
[79 95]
[80 94]
[81 93]
[82 92]
[83 91]
[84 90]
[107 117]
[108 116]
[109 115]
[130 157]
[131 156]
[132 155]
[134 153]
[135 152]
[137 149]
[138 148]
[139 147]
[140 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
