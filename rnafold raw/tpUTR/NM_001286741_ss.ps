%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 19:57:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCCCUGCUUCCCCUGAACCCCCAGCAAGUUGCAGAGGCUACUGCCCUUGGGAGGCACUCAUGAAGGUGCCUCCAUCUCUCCCUUCCCCAAUAUACCUGAUGGUCAACUCUC\
) } def
/len { sequence length } bind def

/coor [
[63.16835022 168.80116272]
[55.58541870 164.16786194]
[48.57839203 158.70254517]
[42.23812103 152.47604370]
[36.64682007 145.56912231]
[31.87699127 138.07131958]
[18.14039040 144.09675598]
[4.40379143 150.12217712]
[-9.33280849 156.14761353]
[-15.15193558 170.59667969]
[-29.16863632 176.51164246]
[-42.90774918 170.87495422]
[-48.90791702 187.23634338]
[-64.54936981 194.12449646]
[-80.04841614 187.75956726]
[-93.61376953 194.16120911]
[-107.17913055 200.56285095]
[-112.27967072 215.52146912]
[-126.50028229 222.41709900]
[-141.40412903 217.15869141]
[-148.14903259 202.86598206]
[-142.73333740 188.01855469]
[-128.37011719 181.42514038]
[-113.58078003 186.99749756]
[-100.01541901 180.59585571]
[-86.45005798 174.19421387]
[-83.80335236 161.50183105]
[-74.15635681 152.54956055]
[-60.91439056 150.80592346]
[-48.93318176 157.13835144]
[-43.77498245 143.21252441]
[-29.92995071 136.90620422]
[-15.35824013 142.41101074]
[-1.62164009 136.38558960]
[12.11495972 130.36015320]
[25.85156059 124.33472443]
[23.20910645 86.09573364]
[39.09181976 51.21103287]
[28.34008217 40.75157928]
[17.58834457 30.29212761]
[1.56683338 26.79309464]
[-3.15519381 11.08849335]
[8.27987957 -0.66612846]
[24.10862923 3.62137580]
[28.04779625 19.54039001]
[38.79953384 29.99984169]
[49.55127335 40.45929337]
[61.90702057 31.88909912]
[75.67706299 25.84769249]
[90.35015869 22.55937386]
[105.38153076 22.14623260]
[120.21309662 24.62360764]
[125.47266388 10.57593918]
[130.73222351 -3.47172976]
[135.99179077 -17.51939774]
[141.25135803 -31.56706619]
[146.51091003 -45.61473465]
[151.77047729 -59.66240311]
[157.03004456 -73.71007538]
[162.28961182 -87.75774384]
[155.51498413 -102.03639984]
[160.89976501 -116.89505768]
[175.24925232 -123.51833344]
[190.05015564 -117.97675323]
[196.52134705 -103.55804443]
[190.82359314 -88.81656647]
[176.33728027 -82.49817657]
[171.07771301 -68.45050812]
[165.81814575 -54.40283966]
[160.55857849 -40.35517120]
[155.29902649 -26.30750275]
[150.03945923 -12.25983524]
[144.77989197 1.78783357]
[139.52032471 15.83550262]
[134.26077271 29.88317108]
[140.28660583 33.16318893]
[146.00108337 36.95977402]
[151.36003113 41.24357605]
[156.32202148 45.98149109]
[160.84872437 51.13690186]
[164.90515137 56.66996384]
[168.45993042 62.53791046]
[171.48559570 68.69538879]
[173.95878601 75.09481812]
[175.86035156 81.68672943]
[177.17562866 88.42017365]
[177.89442444 95.24312592]
[178.01119995 102.10283661]
[177.52505493 108.94628906]
[176.43972778 115.72061157]
[174.76362610 122.37342072]
[172.50968933 128.85331726]
[169.69535828 135.11021423]
[166.34236145 141.09576416]
[162.47662354 146.76368713]
[158.12802124 152.07017517]
[168.28724670 163.10603333]
[178.44647217 174.14189148]
[194.25090027 178.51820374]
[198.10061646 194.45909119]
[186.03536987 205.56591797]
[170.46684265 200.41296387]
[167.41059875 184.30111694]
[157.25138855 173.26525879]
[147.09216309 162.22940063]
[139.71224976 167.17967224]
[131.81739807 171.25885010]
[123.50999451 174.41404724]
[114.89775085 176.60435486]
[106.09233093 177.80137634]
[97.20791626 177.98957825]
[88.35970306 177.16653442]
[79.66242981 175.34291077]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 36]
[7 35]
[8 34]
[9 33]
[12 30]
[15 26]
[16 25]
[17 24]
[38 47]
[39 46]
[40 45]
[52 75]
[53 74]
[54 73]
[55 72]
[56 71]
[57 70]
[58 69]
[59 68]
[60 67]
[96 105]
[97 104]
[98 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
