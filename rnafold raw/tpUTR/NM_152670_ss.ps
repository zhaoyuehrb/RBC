%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 01:32:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGAUGAAAAUACCUUCCAAAGGCUCUUCCAAGGGCAUGUGGAAAUCCUAUGACCUUGGAGUGCAGAGAGGAGAACUGAAAAUAAAACUGGAAAGAUGUUCCAACUGCA\
) } def
/len { sequence length } bind def

/coor [
[98.61019897 122.15220642]
[90.62971497 134.85307312]
[82.64923096 147.55393982]
[74.66875458 160.25479126]
[66.68827057 172.95565796]
[58.88669968 185.76719666]
[51.26556778 198.68688965]
[51.65338516 215.08145142]
[37.51029968 223.38235474]
[23.38550568 215.05035400]
[23.80938148 198.65669250]
[38.34587860 191.06575012]
[45.96701050 178.14607239]
[46.66485214 170.67906189]
[53.98740768 164.97517395]
[61.96789169 152.27432251]
[69.94837189 139.57345581]
[77.92885590 126.87258911]
[85.90933228 114.17173004]
[76.38088226 125.75657654]
[62.22613525 130.72076416]
[47.54907227 127.62498474]
[36.60511398 117.36682129]
[32.56731796 102.92050171]
[36.60638428 88.47454071]
[47.55124283 78.21734619]
[62.22857666 75.12285614]
[76.38288879 80.08828735]
[85.90933228 91.67173004]
[77.92885590 78.97086334]
[69.94837189 66.27000427]
[61.96789169 53.56913757]
[53.98740768 40.86827469]
[46.00692749 28.16741371]
[38.02644730 15.46654987]
[30.04596519 2.76568699]
[16.15247154 -4.80276060]
[15.93251514 -19.69574165]
[7.95203352 -32.39660645]
[-0.02844753 -45.09746933]
[-8.00892830 -57.79833221]
[-15.33148670 -63.50220490]
[-16.02932739 -70.96921539]
[-23.65045738 -83.88890839]
[-38.18695450 -91.47984314]
[-38.61083221 -107.87351227]
[-24.48603821 -116.20551300]
[-10.34295368 -107.90460205]
[-10.73076916 -91.51004028]
[-3.10963869 -78.59034729]
[4.69193411 -65.77880859]
[12.67241573 -53.07794952]
[20.65289688 -40.37708664]
[28.63337708 -27.67622375]
[41.95605469 -21.01622581]
[42.74682999 -5.21479416]
[50.72731018 7.48606873]
[58.70779037 20.18693161]
[66.68827057 32.88779449]
[74.66875458 45.58865738]
[82.64923096 58.28952026]
[90.62971497 70.99038696]
[98.61019897 83.69124603]
[110.96414185 92.19889832]
[125.67591858 95.12525177]
[140.38769531 98.05160522]
[155.09947205 100.97795868]
[169.81126404 103.90431213]
[178.96940613 90.68724060]
[196.48440552 85.09217072]
[216.00552368 91.99640656]
[229.13388062 84.74062347]
[234.93896484 69.78466797]
[250.29379272 65.13610077]
[263.41943359 74.36090851]
[264.24703979 90.38259888]
[252.14172363 100.91071320]
[236.38966370 97.86897278]
[223.26130676 105.12475586]
[222.21289062 112.55111694]
[237.21270752 112.47763062]
[252.21252441 112.40415192]
[266.35577393 107.40728760]
[279.65621948 114.34255981]
[283.65560913 128.79956055]
[275.81057739 141.58453369]
[261.11007690 144.56701660]
[248.90251160 135.85002136]
[234.50927734 131.62692261]
[220.11602783 127.40383148]
[219.06759644 134.83018494]
[229.67420959 145.43678284]
[240.28080750 156.04339600]
[250.88740540 166.64999390]
[261.49401855 177.25659180]
[277.47250366 178.69447327]
[286.19015503 192.16229248]
[280.95950317 207.32870483]
[265.79309082 212.55932617]
[252.32527161 203.84169006]
[250.88740540 187.86318970]
[240.28080750 177.25659180]
[229.67420959 166.64999390]
[219.06759644 156.04339600]
[208.46099854 145.43678284]
[177.56478882 141.97994995]
[166.88490295 118.61609650]
[152.17312622 115.68973541]
[137.46134949 112.76338196]
[122.74956512 109.83702850]
[108.03778839 106.91067505]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 19]
[2 18]
[3 17]
[4 16]
[5 15]
[6 13]
[7 12]
[29 63]
[30 62]
[31 61]
[32 60]
[33 59]
[34 58]
[35 57]
[36 56]
[38 54]
[39 53]
[40 52]
[41 51]
[43 50]
[44 49]
[64 111]
[65 110]
[66 109]
[67 108]
[68 107]
[71 79]
[72 78]
[91 105]
[92 104]
[93 103]
[94 102]
[95 101]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
