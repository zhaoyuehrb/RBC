%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 22:12:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGAUUUGCACAGAGAUAGAUGACAUGGGAUGCCUGUCUCAAUGACAAGGGGAUACACUGUAGCUGUAUCUUUUCUUCUCCCUGAAACUUCCAUGACCAUGACCCUAGCCUUGUUGCCAGACUGAAAUGAACAAGCAUUUCCUCUCCUCUUCACUCCUAAGCUUCAUUUUUGUUUGUUAUUGAUGUCUUUUUUUUCAUUCAUAAAUAAUUUUCCUUUGG\
) } def
/len { sequence length } bind def

/coor [
[105.92401123 319.10083008]
[100.67266846 333.43212891]
[89.71726990 344.05953979]
[75.23302460 348.87301636]
[60.09578705 346.91677856]
[47.31106567 338.57931519]
[39.41727829 325.51596069]
[37.98173904 310.32049561]
[43.28947449 296.01000977]
[54.28663635 285.42581177]
[68.78972626 280.66940308]
[70.71221924 265.79312134]
[72.63470459 250.91683960]
[74.55719757 236.04054260]
[76.47969055 221.16426086]
[67.20928955 209.56274414]
[68.94705200 194.44868469]
[81.17864227 184.80368042]
[83.10113525 169.92739868]
[85.02362823 155.05110168]
[86.94612122 140.17481995]
[73.72994232 133.08026123]
[62.39370346 142.90316772]
[51.05745697 152.72608948]
[39.72121429 162.54899597]
[35.28888702 170.52821350]
[28.15224838 172.42982483]
[16.67689514 182.08985901]
[11.60430050 197.68475342]
[-4.49156237 200.82406616]
[-15.05265045 188.27832031]
[-9.21462154 172.95352173]
[7.01686049 170.61450195]
[18.49221420 160.95446777]
[29.89830399 151.21275330]
[41.23454666 141.38983154]
[52.57078934 131.56692505]
[63.90703583 121.74401855]
[61.63245392 114.88048553]
[60.61526489 107.89127350]
[60.82984161 100.99945831]
[62.21213150 94.41545868]
[64.66328430 88.33058167]
[68.05428314 82.91148376]
[56.57892609 73.25144958]
[45.10357285 63.59141922]
[33.62821960 53.93138504]
[22.15286446 44.27135086]
[10.67751026 34.61131668]
[-0.79784375 24.95128441]
[-14.39748573 18.62279701]
[-29.17779350 16.06496429]
[-43.95809937 13.50713062]
[-58.73840714 10.94929790]
[-73.51871490 8.39146519]
[-88.29902649 5.83363247]
[-103.07933044 3.27579927]
[-114.90892029 13.50296307]
[-130.54547119 13.68182182]
[-142.60591125 3.72792411]
[-145.39562988 -11.65880489]
[-137.59744263 -25.21322060]
[-122.89339447 -30.53534508]
[-108.22629547 -25.11223030]
[-100.52149963 -11.50450802]
[-85.74118805 -8.94667530]
[-70.96088409 -6.38884258]
[-56.18057632 -3.83100963]
[-41.40026855 -1.27317667]
[-26.61996078 1.28465629]
[-11.83965206 3.84248924]
[-5.51116562 -9.75715256]
[-16.98651886 -19.41718674]
[-28.46187401 -29.07722092]
[-39.93722916 -38.73725510]
[-54.96637726 -34.87665176]
[-69.38199615 -40.61856079]
[-77.64098358 -53.75510406]
[-76.56759644 -69.23500824]
[-66.57456207 -81.10593414]
[-51.50441742 -84.80327606]
[-37.15193558 -78.90531921]
[-29.03593826 -65.67995453]
[-30.27719307 -50.21260834]
[-18.80183983 -40.55257416]
[-7.32648563 -30.89253998]
[4.14886808 -21.23250580]
[10.21649551 -25.64089584]
[1.39991820 -37.77629852]
[13.53546524 -46.59267426]
[22.35175133 -34.45767593]
[28.41937828 -38.86606216]
[22.77821922 -52.76488876]
[17.13706017 -66.66371155]
[3.87294936 -76.30712891]
[5.86118746 -92.58529663]
[21.05644608 -98.75264740]
[33.82714462 -88.46472931]
[31.03588486 -72.30487061]
[36.67704391 -58.40604782]
[42.31820297 -44.50722122]
[55.15017319 -36.73930740]
[63.41643143 -24.22255898]
[65.52261353 -9.37116146]
[61.06248856 4.95040512]
[50.89630890 15.97985458]
[36.98488235 21.58986855]
[22.01139641 20.69841003]
[8.86219025 13.47592926]
[20.33754349 23.13596344]
[31.81289864 32.79599762]
[43.28824997 42.45603180]
[54.76360703 52.11606598]
[66.23896027 61.77610016]
[77.71430969 71.43613434]
[98.16631317 62.14574432]
[121.21044159 66.59700775]
[138.12710571 84.28768158]
[151.18829346 76.91168213]
[164.24949646 69.53569031]
[177.31068420 62.15969849]
[190.37187195 54.78370285]
[198.58363342 41.26047897]
[213.47053528 41.73928452]
[226.53173828 34.36329269]
[239.59292603 26.98729706]
[252.65411377 19.61130333]
[265.71530151 12.23530960]
[278.77648926 4.85931587]
[291.83767700 -2.51667809]
[294.48287964 -7.00131035]
[298.20932007 -9.75198555]
[302.17724609 -10.64707088]
[305.61999512 -9.91513824]
[318.98510742 -16.72499466]
[332.35018921 -23.53485298]
[328.91134644 -38.21265411]
[329.08578491 -53.28690338]
[332.86331177 -67.88120270]
[340.02435303 -81.14706421]
[350.15252686 -92.31322479]
[362.65905762 -100.73049927]
[376.81677246 -105.90952301]
[391.80261230 -107.54917908]
[406.74526978 -105.55416107]
[420.77603149 -100.04043579]
[433.07916260 -91.32857513]
[442.93936157 -79.92507935]
[449.78338623 -66.49292755]
[453.21331787 -51.81304550]
[453.02978516 -36.73890305]
[449.24337769 -22.14689255]
[442.07431030 -8.88537502]
[431.93936157 2.27464366]
[419.42773438 10.68433380]
[405.26687622 15.85476780]
[390.28005981 17.48534393]
[375.33859253 15.48126030]
[361.31118774 9.95903397]
[349.01333618 1.23971879]
[339.16006470 -10.16975498]
[325.79495239 -3.35989761]
[312.42987061 3.44995999]
[299.21368408 10.54451275]
[286.15249634 17.92050743]
[273.09130859 25.29650116]
[260.03012085 32.67249298]
[246.96891785 40.04848862]
[233.90773010 47.42448425]
[220.84654236 54.80047607]
[213.56900024 67.79611969]
[197.74786377 67.84489441]
[184.68667603 75.22088623]
[171.62548828 82.59687805]
[158.56430054 89.97287750]
[145.50309753 97.34886932]
[143.89967346 112.26292419]
[155.09449768 122.24671173]
[166.28932190 132.23049927]
[177.48414612 142.21427917]
[192.93334961 145.62496948]
[197.28213501 159.87055969]
[208.47695923 169.85435486]
[219.67178345 179.83813477]
[230.86660767 189.82191467]
[245.42567444 184.93016052]
[260.47686768 187.98902893]
[271.97152710 198.17570496]
[276.81762695 212.75003052]
[273.71160889 227.79158020]
[263.48895264 239.25425720]
[248.89950562 244.05464172]
[233.86776733 240.90147400]
[222.43719482 230.64294434]
[217.68255615 216.03852844]
[220.88282776 201.01673889]
[209.68800354 191.03295898]
[198.49317932 181.04917908]
[187.29835510 171.06538391]
[172.64988708 168.36880493]
[167.50035095 153.40910339]
[156.30552673 143.42532349]
[145.11071777 133.44152832]
[133.91589355 123.45774841]
[127.80702209 130.75564575]
[120.14968872 136.49406433]
[111.33558655 140.34996033]
[101.82241058 142.09730530]
[99.89991760 156.97360229]
[97.97742462 171.84988403]
[96.05493164 186.72618103]
[105.43274689 199.16380310]
[103.27114868 214.22308350]
[91.35598755 223.08674622]
[89.43349457 237.96304321]
[87.51100159 252.83932495]
[85.58850861 267.71560669]
[83.66601562 282.59191895]
[96.48346710 290.87899780]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 218]
[12 217]
[13 216]
[14 215]
[15 214]
[18 211]
[19 210]
[20 209]
[21 208]
[22 38]
[23 37]
[24 36]
[25 35]
[27 34]
[28 33]
[44 115]
[45 114]
[46 113]
[47 112]
[48 111]
[49 110]
[50 109]
[51 71]
[52 70]
[53 69]
[54 68]
[55 67]
[56 66]
[57 65]
[72 87]
[73 86]
[74 85]
[75 84]
[92 101]
[93 100]
[94 99]
[118 176]
[119 175]
[120 174]
[121 173]
[122 172]
[124 170]
[125 169]
[126 168]
[127 167]
[128 166]
[129 165]
[130 164]
[134 163]
[135 162]
[136 161]
[177 204]
[178 203]
[179 202]
[180 201]
[182 199]
[183 198]
[184 197]
[185 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
