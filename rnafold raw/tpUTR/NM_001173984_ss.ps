%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 00:00:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUGCCUGGUAUUUGAUUAUAUAUUAUGUACAUACUUUUUCAUUCUUAACUUAGAAAUGCUUUUCAGAAGAUAUUAAAUAUUUGUAAAUUGUGUUUUUAAUUAAACUUUGGAACAGCGAAUUUGGAUGUUCCAGAGGUUGGACUUGUAUUAGGUAAUAAAGCUGGACCUGGGACUCGUGAGGAAGGAAUGUG\
) } def
/len { sequence length } bind def

/coor [
[25.70962524 402.23498535]
[18.27973175 415.26559448]
[3.85229039 419.37033081]
[-9.32426357 412.20245361]
[-13.71668243 397.86035156]
[-21.77048492 410.51483154]
[-22.65263367 426.31143188]
[-36.01360703 432.89425659]
[-44.06740952 445.54876709]
[-52.12121201 458.20324707]
[-60.17501450 470.85775757]
[-68.22881317 483.51223755]
[-76.28261566 496.16674805]
[-70.46404266 510.55160522]
[-74.24456787 525.60107422]
[-86.17051697 535.52838135]
[-101.65612030 536.51623535]
[-114.74683380 528.18481445]
[-120.40902710 513.73767090]
[-116.46546173 498.73010254]
[-104.43251801 488.93276978]
[-88.93711090 488.11294556]
[-80.88330841 475.45843506]
[-72.82950592 462.80395508]
[-64.77570343 450.14944458]
[-56.72190475 437.49496460]
[-48.66810226 424.84045410]
[-48.36201477 409.94900513]
[-34.42498016 402.46102905]
[-26.37117767 389.80654907]
[-18.94140816 376.77587891]
[-12.15320301 363.39974976]
[-5.36499786 350.02365112]
[1.42320764 336.64755249]
[-0.47252619 319.20733643]
[15.02254009 309.27044678]
[21.59325600 295.78616333]
[28.16397095 282.30187988]
[34.73468399 268.81762695]
[41.30540085 255.33334351]
[47.87611771 241.84906006]
[54.44683075 228.36479187]
[61.01754761 214.88050842]
[67.58826447 201.39624023]
[73.82952881 187.75634766]
[79.73766327 173.96888733]
[85.64579773 160.18142700]
[91.55393982 146.39398193]
[97.46207428 132.60652161]
[78.04133606 124.38000488]
[67.62717438 105.96078491]
[70.60914612 84.94361877]
[61.36572266 73.13010406]
[52.12229538 61.31659317]
[42.87886810 49.50308228]
[33.63544083 37.68957138]
[24.39201355 25.87605858]
[15.14858723 14.06254673]
[5.90516043 2.24903464]
[-3.33826661 -9.56447697]
[-12.58169365 -21.37798882]
[-28.02243805 -23.43254089]
[-37.22829819 -35.54479980]
[-35.17444229 -50.25252533]
[-44.41786575 -62.06603622]
[-58.12629318 -60.55203247]
[-70.69157410 -65.96973419]
[-78.87070465 -76.80429840]
[-80.61052704 -90.15834045]
[-75.56227875 -102.52635193]
[-84.61319733 -114.48799133]
[-93.66411591 -126.44963837]
[-102.71503448 -138.41128540]
[-111.76595306 -150.37292480]
[-120.81687164 -162.33456421]
[-135.19572449 -171.31703186]
[-130.54475403 -187.62055969]
[-113.59085846 -187.66461182]
[-108.85522461 -171.38548279]
[-99.80430603 -159.42384338]
[-90.75338745 -147.46218872]
[-81.70246887 -135.50054932]
[-72.65155792 -123.53890991]
[-63.60063553 -111.57727051]
[-47.21327591 -112.42451477]
[-33.40888214 -103.24948120]
[-27.73216438 -87.49983215]
[-32.60435486 -71.30946350]
[-23.36092949 -59.49595261]
[-8.59097195 -57.95194244]
[0.95146507 -46.10303497]
[-0.76818192 -30.62141609]
[8.47524548 -18.80790329]
[17.71867180 -6.99439240]
[26.96209908 4.81911945]
[36.20552444 16.63263130]
[45.44895172 28.44614220]
[54.69237900 40.25965500]
[63.93580627 52.07316589]
[73.17923737 63.88667679]
[82.42266083 75.70018768]
[89.90275574 76.24624634]
[86.31848907 61.68077087]
[99.06349182 53.77097321]
[110.52455902 63.44794464]
[104.86294556 77.33835602]
[112.34304047 77.88441467]
[123.20413208 67.53855896]
[134.06521606 57.19270325]
[144.92631531 46.84684372]
[155.78739929 36.50098801]
[166.64848328 26.15513229]
[177.50956726 15.80927467]
[188.37066650 5.46341801]
[199.23175049 -4.88243866]
[210.09283447 -15.22829533]
[214.74856567 -30.34896851]
[229.30062866 -33.52490616]
[228.13598633 -49.11905670]
[237.30946350 -61.78323364]
[252.48962402 -65.53779602]
[266.50885010 -58.60995865]
[272.74771118 -44.27082825]
[268.26040649 -29.29090881]
[255.16569519 -20.74325752]
[239.64649963 -22.66381454]
[235.76762390 -8.28314590]
[220.43869019 -4.36720657]
[209.57760620 5.97865009]
[198.71652222 16.32450676]
[187.85543823 26.67036438]
[176.99433899 37.01622009]
[166.13325500 47.36207581]
[155.27217102 57.70793533]
[144.41107178 68.05378723]
[133.54998779 78.39965057]
[122.68889618 88.74550629]
[124.37471771 96.05358124]
[138.71850586 100.44171143]
[127.74635315 110.66973877]
[129.43217468 117.97782135]
[143.72773743 122.52056885]
[159.22308350 119.32601166]
[169.00941467 130.55441284]
[183.30497742 135.09715271]
[198.80032349 131.90260315]
[208.58665466 143.13099670]
[222.88223267 147.67375183]
[238.37756348 144.47918701]
[248.16389465 155.70758057]
[262.45947266 160.25033569]
[276.75503540 164.79309082]
[291.60574341 158.72383118]
[305.53930664 166.67593384]
[307.86703491 182.54922485]
[296.80334473 194.16706848]
[280.83532715 192.61724854]
[272.21228027 179.08866882]
[257.91671753 174.54591370]
[243.62113953 170.00315857]
[229.14833069 173.52264404]
[218.33947754 161.96932983]
[204.04389954 157.42657471]
[189.57107544 160.94606018]
[178.76223755 149.39273071]
[164.46665955 144.84997559]
[149.99383545 148.36947632]
[139.18499756 136.81614685]
[124.88941956 132.27339172]
[111.24952698 138.51466370]
[105.34139252 152.30210876]
[99.43325806 166.08956909]
[93.52512360 179.87702942]
[87.61698151 193.66447449]
[88.24200439 198.87545776]
[86.92840576 203.35260010]
[84.28360748 206.47822571]
[81.07254028 207.96694946]
[74.50182343 221.45121765]
[67.93110657 234.93550110]
[61.36039352 248.41978455]
[54.78967667 261.90405273]
[48.21896362 275.38833618]
[41.64824677 288.87261963]
[35.07752991 302.35687256]
[28.50681686 315.84115601]
[31.96556664 328.27661133]
[26.20408440 339.37692261]
[14.79931545 343.43576050]
[8.01111031 356.81185913]
[1.22290492 370.18795776]
[-5.56530046 383.56405640]
[9.01471329 380.03942871]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 30]
[6 29]
[8 27]
[9 26]
[10 25]
[11 24]
[12 23]
[13 22]
[31 192]
[32 191]
[33 190]
[34 189]
[36 186]
[37 185]
[38 184]
[39 183]
[40 182]
[41 181]
[42 180]
[43 179]
[44 178]
[45 174]
[46 173]
[47 172]
[48 171]
[49 170]
[52 101]
[53 100]
[54 99]
[55 98]
[56 97]
[57 96]
[58 95]
[59 94]
[60 93]
[61 92]
[64 89]
[65 88]
[70 84]
[71 83]
[72 82]
[73 81]
[74 80]
[75 79]
[107 137]
[108 136]
[109 135]
[110 134]
[111 133]
[112 132]
[113 131]
[114 130]
[115 129]
[116 128]
[118 126]
[141 169]
[142 168]
[144 166]
[145 165]
[147 163]
[148 162]
[150 160]
[151 159]
[152 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
