%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 07:38:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACAAUGAAGAACAGUUGAAACAUGCAAAAUAUGGAGCUUUUCAUGUAAUUACUCUUUUACUGUUUACCAUUCACUAUAAUUCACAAUUAAAAUUGUGUGACUAAACAAUG\
) } def
/len { sequence length } bind def

/coor [
[190.20079041 170.48361206]
[177.80162048 162.04202271]
[163.26199341 165.06443787]
[150.56721497 156.68009949]
[147.49560547 141.40911865]
[135.09643555 132.96751404]
[122.69726562 124.52592468]
[110.29809570 116.08432770]
[96.04375458 118.68433380]
[84.06655121 110.53002167]
[81.26031494 96.31484985]
[68.86113739 87.87325287]
[56.46196747 79.43165588]
[44.06279373 70.99005890]
[31.66362381 62.54846573]
[19.26445198 54.10686874]
[6.86527872 45.66527557]
[-2.12612534 43.37247086]
[-5.75676537 36.81269073]
[-17.91648483 28.02968407]
[-30.07620621 19.24667740]
[-42.23592758 10.46366978]
[-54.46612167 19.34509468]
[-68.82322693 24.00513649]
[-83.89732361 23.99939156]
[-98.21215820 19.34100533]
[-110.36973572 10.49815369]
[-119.18681335 -1.65297663]
[-123.81011200 -15.91499805]
[-123.79881287 -30.88730621]
[-119.16661835 -45.10362625]
[-131.32633972 -53.88663101]
[-143.48605347 -62.66963959]
[-155.64578247 -71.45264435]
[-167.80549622 -80.23564911]
[-179.96520996 -89.01866150]
[-192.12493896 -97.80166626]
[-208.48512268 -98.93131256]
[-215.44285583 -113.78129578]
[-205.84060669 -127.07523346]
[-189.55633545 -125.13745880]
[-183.34193420 -109.96138763]
[-171.18220520 -101.17837524]
[-159.02249146 -92.39537048]
[-146.86276245 -83.61236572]
[-134.70304871 -74.82936096]
[-122.54332733 -66.04634857]
[-110.38360596 -57.26334381]
[-98.34362030 -66.12899780]
[-84.13360596 -70.84552002]
[-69.14123535 -70.93907928]
[-54.83466339 -66.38791656]
[-42.61880875 -57.62575912]
[-33.69733429 -45.50048065]
[-28.95408440 -31.19209290]
[-28.86552811 -16.09790039]
[-33.45291901 -1.69605017]
[-21.29319954 7.08695650]
[-9.13347912 15.86996365]
[3.02624130 24.65296936]
[15.30687428 33.26610184]
[27.70604706 41.70769882]
[40.10521698 50.14929199]
[52.50439072 58.59088898]
[64.90356445 67.03248596]
[77.30273438 75.47407532]
[89.70190430 83.91567230]
[103.95624542 81.31566620]
[115.93344879 89.46997833]
[118.73968506 103.68515015]
[131.13885498 112.12674713]
[143.53802490 120.56834412]
[155.93721008 129.00993347]
[171.27113342 126.26979828]
[183.72540283 135.00740051]
[186.24320984 149.64285278]
[198.64237976 158.08444214]
[214.60455322 146.20791626]
[233.78746033 141.03782654]
[253.49958801 143.27796936]
[270.98309326 152.59393311]
[283.79968262 167.66279602]
[290.17062378 186.36105347]
[289.22354126 206.06372070]
[303.17938232 211.56231689]
[317.13522339 217.06091309]
[331.09106445 222.55950928]
[345.04687500 228.05810547]
[359.00271606 233.55670166]
[375.13317871 230.60017395]
[385.55126953 243.26489258]
[379.53976440 258.52249146]
[363.28280640 260.67724609]
[353.50411987 247.51254272]
[339.54827881 242.01394653]
[325.59246826 236.51535034]
[311.63662720 231.01675415]
[297.68078613 225.51815796]
[283.72494507 220.01956177]
[277.47109985 228.82446289]
[269.54818726 236.17436218]
[260.28698730 241.75833130]
[250.07502747 245.33927917]
[239.34027100 246.76399231]
[228.53327942 245.96966553]
[218.10823059 242.98674011]
[208.50387573 237.93766785]
[200.12503052 231.03192139]
[193.32556152 222.55729675]
[188.39337158 212.86795044]
[185.53831482 202.36955261]
[184.88316345 191.50231934]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 77]
[2 76]
[5 73]
[6 72]
[7 71]
[8 70]
[11 67]
[12 66]
[13 65]
[14 64]
[15 63]
[16 62]
[17 61]
[19 60]
[20 59]
[21 58]
[22 57]
[31 48]
[32 47]
[33 46]
[34 45]
[35 44]
[36 43]
[37 42]
[84 99]
[85 98]
[86 97]
[87 96]
[88 95]
[89 94]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
