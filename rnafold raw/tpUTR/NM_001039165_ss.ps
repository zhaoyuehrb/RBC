%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 06:24:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCUGGGGCCCCCGACCCCAGCUGCAGCCCCCGUGAGGCAAGAGGGUGACUUGGGGAAGGUGGUGGGGUCAGAGGCUGGGGCCAGCCGGACCUGGAGGAGGCCUUGGUGGGUGACCCGGUCAUGUGCUGUCAAAGUUGUGACCCUUGGUCUGGAGCAUGAGGCUCCCCUGGGAGGCAGCUGGAAAGGCAAGGUCUCUACAUGCCCAG\
) } def
/len { sequence length } bind def

/coor [
[74.72032166 216.67150879]
[58.33784866 215.93225098]
[51.02804565 201.25236511]
[60.31061554 187.73327637]
[60.98680878 172.74851990]
[61.66299820 157.76377869]
[62.33918762 142.77902222]
[63.01537704 127.79427338]
[54.16215897 115.68557739]
[39.67814255 111.78514099]
[25.19413185 107.88471222]
[10.71011829 103.98428345]
[-3.80280018 100.19281769]
[-18.34380341 96.51053619]
[-33.34210968 96.73600006]
[-47.76585770 100.85369873]
[-62.18960953 104.97139740]
[-76.61335754 109.08909607]
[-91.03710938 113.20680237]
[-105.46085358 117.32450104]
[-119.88460541 121.44219971]
[-127.27889252 126.80796814]
[-134.55616760 125.51164246]
[-149.04017639 129.41207886]
[-163.52418518 133.31250000]
[-178.00820923 137.21293640]
[-183.63333130 151.55392456]
[-196.47421265 159.73716736]
[-211.49378967 158.80119324]
[-222.94512939 149.31410217]
[-237.42913818 153.21453857]
[-251.91316223 157.11495972]
[-266.39715576 161.01539612]
[-280.88119507 164.91583252]
[-292.19473267 175.97541809]
[-306.49609375 171.81372070]
[-314.41336060 185.22845459]
[-329.15777588 188.97770691]
[-341.89785767 181.34715271]
[-356.38189697 185.24757385]
[-364.04867554 199.06770325]
[-379.26501465 203.33839417]
[-393.00329590 195.52590942]
[-397.11288452 180.26527405]
[-389.15557861 166.61035156]
[-373.85235596 162.66235352]
[-360.28231812 170.76356506]
[-345.79830933 166.86312866]
[-338.61288452 153.86677551]
[-323.97958374 149.70486450]
[-310.39654541 157.32971191]
[-300.11898804 146.54911804]
[-284.78161621 150.43180847]
[-270.29760742 146.53138733]
[-255.81358337 142.63095093]
[-241.32957458 138.73051453]
[-226.84556580 134.83009338]
[-221.70689392 120.87544250]
[-209.18843079 112.52367401]
[-193.97467041 113.15202332]
[-181.90863037 122.72892761]
[-167.42462158 118.82849121]
[-152.94061279 114.92806244]
[-138.45658875 111.02762604]
[-124.00230408 107.01844788]
[-109.57855988 102.90074921]
[-95.15480804 98.78305054]
[-80.73105621 94.66535187]
[-66.30731201 90.54764557]
[-51.88356018 86.42994690]
[-37.45980835 82.31224823]
[-35.23888779 75.14862823]
[-45.42575073 64.13827515]
[-30.79704475 60.82137680]
[-28.57612419 53.65775299]
[-38.14095688 42.10292816]
[-47.70579147 30.54810524]
[-57.27062607 18.99328232]
[-66.83545685 7.43845844]
[-82.38788605 2.23711109]
[-85.39402008 -13.88415527]
[-72.76139832 -24.34116364]
[-57.48538971 -18.37664032]
[-55.28063583 -2.12637544]
[-45.71580124 9.42844772]
[-36.15097046 20.98327255]
[-26.58613396 32.53809738]
[-17.02130127 44.09291840]
[-3.62056088 37.35346985]
[-7.19345331 22.78520203]
[-12.27762794 15.19454384]
[-10.70881271 7.97111320]
[-14.06232548 -6.64921331]
[-17.41584015 -21.26954079]
[-30.19064522 -30.97437668]
[-30.42399788 -47.01573181]
[-17.93688583 -57.08805084]
[-2.30835509 -53.46471405]
[4.47272348 -38.92523193]
[-2.79551291 -24.62305260]
[0.55800056 -10.00272655]
[3.91151404 4.61759949]
[7.37481499 19.21230888]
[10.94770718 33.78057861]
[8.37335873 54.88821411]
[-0.83633584 71.53283691]
[-14.66152191 81.96952820]
[-0.12051785 85.65180969]
[7.13644600 84.24625397]
[14.61054993 89.50026703]
[29.09456253 93.40069580]
[43.57857513 97.30113220]
[58.06258774 101.20156097]
[113.40034485 27.27574158]
[124.58766174 17.28354454]
[135.77497864 7.29134893]
[146.96229553 -2.70084715]
[152.39601135 -22.11208725]
[171.47750854 -25.23441887]
[182.35942078 -35.55837250]
[193.24131775 -45.88233185]
[204.12322998 -56.20628738]
[215.00514221 -66.53024292]
[225.88705444 -76.85419464]
[227.00613403 -89.70475006]
[236.28355408 -98.07960510]
[248.37965393 -97.89344025]
[259.41549683 -108.05266571]
[270.45135498 -118.21188354]
[272.54830933 -134.11730957]
[286.36489868 -142.27095032]
[301.30218506 -136.41802979]
[305.90161133 -121.04841614]
[296.63485718 -107.95236206]
[280.61059570 -107.17602539]
[269.57473755 -97.01679993]
[258.53887939 -86.85758209]
[254.21124268 -69.85124207]
[236.21101379 -65.97229004]
[225.32910156 -55.64833069]
[214.44718933 -45.32437515]
[203.56527710 -35.00041962]
[192.68336487 -24.67646599]
[181.80146790 -14.35250950]
[182.45243835 -4.15309477]
[177.27241516 4.91088486]
[167.76258850 9.72594261]
[156.95448303 8.48646736]
[145.76716614 18.47866440]
[134.57984924 28.47085953]
[123.39253998 38.46305466]
[125.72088623 45.59248734]
[132.70593262 66.98078156]
[147.63438416 68.44403076]
[162.56285095 69.90727234]
[177.49130249 71.37052155]
[192.41976929 72.83376312]
[205.67924500 63.80237961]
[220.96426392 68.67555237]
[226.54945374 83.71499634]
[218.15036011 97.38375092]
[202.21002197 99.19630432]
[190.95652771 87.76222229]
[176.02806091 86.29898071]
[161.09960938 84.83573151]
[146.17114258 83.37248993]
[131.24267578 81.90924072]
[127.82269287 88.58409882]
[141.17228699 95.42429352]
[134.33187866 108.77378082]
[120.98271942 101.93380737]
[117.56272888 108.60866547]
[127.47056580 119.87075806]
[137.37840271 131.13285828]
[147.28623962 142.39495850]
[157.19406128 153.65705872]
[167.10189819 164.91914368]
[186.47175598 170.49861145]
[189.45059204 189.60302734]
[199.69245911 200.56222534]
[209.93434143 211.52142334]
[225.85507202 213.49877930]
[234.11231995 227.25367737]
[228.37184143 242.23454285]
[213.03723145 246.94934082]
[199.87188721 237.78126526]
[198.97514343 221.76329041]
[188.73327637 210.80410767]
[178.49139404 199.84490967]
[168.28736877 200.41921997]
[159.26257324 195.17120361]
[154.51913452 185.62545776]
[155.83979797 174.82698059]
[145.93196106 163.56488037]
[136.02413940 152.30279541]
[126.11630249 141.04069519]
[116.20846558 129.77859497]
[106.30063629 118.51649475]
[99.22550964 121.00498962]
[108.33142090 132.92481995]
[99.80871582 145.26838684]
[85.43568420 140.97698975]
[85.07525635 125.98197174]
[78.00012970 128.47045898]
[77.32393646 143.45521545]
[76.64775085 158.43995667]
[75.97155762 173.42471313]
[75.29537201 188.40946960]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 208]
[5 207]
[6 206]
[7 205]
[8 204]
[9 113]
[10 112]
[11 111]
[12 110]
[13 108]
[14 107]
[15 71]
[16 70]
[17 69]
[18 68]
[19 67]
[20 66]
[21 65]
[23 64]
[24 63]
[25 62]
[26 61]
[30 57]
[31 56]
[32 55]
[33 54]
[34 53]
[36 51]
[39 48]
[40 47]
[75 88]
[76 87]
[77 86]
[78 85]
[79 84]
[89 104]
[90 103]
[92 102]
[93 101]
[94 100]
[114 151]
[115 150]
[116 149]
[117 148]
[119 144]
[120 143]
[121 142]
[122 141]
[123 140]
[124 139]
[127 137]
[128 136]
[129 135]
[153 167]
[154 166]
[155 165]
[156 164]
[157 163]
[172 198]
[173 197]
[174 196]
[175 195]
[176 194]
[177 193]
[179 189]
[180 188]
[181 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
