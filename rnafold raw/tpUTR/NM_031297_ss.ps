%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 17:08:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGCGCCUGCCUGCCCGCCACUGCCCGCUGAGCCUCGCUCGCUGCUUCUUCAGGGACCCGGCCCUGCCCUGCCGCCCGCUGACCCUUCCUUCCCCACCAUGGCUUCCGGCCCCACCCCGAGUGGCAUUGUCGCUGCAGCCAACUUUGCCAUUAAAACUCUUUGCCAAAGUUUGCACCUGU\
) } def
/len { sequence length } bind def

/coor [
[185.78976440 307.48135376]
[191.36700439 293.55673218]
[202.59425354 283.60943604]
[217.08927917 279.75012207]
[231.77626038 282.79754639]
[222.17883301 271.26977539]
[210.14883423 269.85046387]
[202.05984497 260.30145264]
[202.67510986 247.40031433]
[193.27922058 235.70770264]
[178.97055054 239.97283936]
[164.07870483 238.43063354]
[150.87617493 231.28514099]
[141.38964844 219.59782410]
[137.08888245 205.13002014]
[138.65911865 190.07754517]
[145.89204407 176.73735046]
[136.49613953 165.04473877]
[127.10024261 153.35214233]
[117.70433807 141.65953064]
[108.30844116 129.96691895]
[98.91253662 118.27431488]
[84.38508606 114.53892517]
[70.51447296 120.24909973]
[64.83042145 131.84690857]
[53.13861465 136.30976868]
[41.91603851 131.75024414]
[27.94840622 137.21881104]
[21.07570457 143.27758789]
[13.69059753 142.65876770]
[-0.36984158 147.88409424]
[-14.43028069 153.10942078]
[-28.49072075 158.33474731]
[-41.23145676 169.52000427]
[-55.50657654 160.37356567]
[-50.66933060 144.12434387]
[-33.71604919 144.27430725]
[-19.65560722 139.04898071]
[-5.59516859 133.82365417]
[8.46527100 128.59832764]
[22.47983360 123.25118256]
[36.44746399 117.78260803]
[46.62865067 103.50298309]
[64.80429840 106.37847900]
[78.67491913 100.66831207]
[79.90599823 93.27003479]
[65.10948944 90.80764771]
[67.57210541 76.01117706]
[82.36815643 78.47349548]
[83.59923553 71.07521820]
[72.32521820 61.18095398]
[61.05119705 51.28668976]
[49.77717590 41.39242554]
[38.41771698 31.59637260]
[26.97366905 21.89927101]
[16.16952324 23.42203903]
[6.51596022 18.82786369]
[1.11108088 9.85952091]
[1.54039872 -0.38267693]
[-9.56019878 -10.47112274]
[-20.66079521 -20.55956841]
[-31.76139259 -30.64801598]
[-46.92619324 -27.36038780]
[-61.11359024 -33.64508438]
[-68.86824036 -47.08550644]
[-67.20832062 -62.51354218]
[-56.77211380 -73.99679565]
[-41.57254028 -77.11972046]
[-27.45415497 -70.68148804]
[-19.84576416 -57.15773392]
[-21.67294693 -41.74861145]
[-10.57234955 -31.66016579]
[0.52824765 -21.57172012]
[11.62884521 -11.48327446]
[30.76205444 -8.79934883]
[36.67077255 10.45522404]
[48.11481857 20.15232658]
[55.26993561 22.08288574]
[59.67144012 30.11840630]
[70.94546509 40.01266861]
[82.21948242 49.90693283]
[93.49349976 59.80120087]
[100.90218353 58.63436890]
[95.75186157 44.54628372]
[90.60153961 30.45819473]
[85.45121765 16.37010765]
[80.30089569 2.28202105]
[70.37502289 -8.96417999]
[67.56129456 -23.69791412]
[72.64437866 -37.81040192]
[84.20675659 -47.36610794]
[99.02403259 -49.70023727]
[112.96414185 -44.16188049]
[122.13961029 -32.29551315]
[123.99169159 -17.41029167]
[118.00275421 -3.65583086]
[117.43194580 11.33330441]
[116.86114502 26.32243919]
[116.29033661 41.31157684]
[115.71953583 56.30071259]
[123.12821198 55.13388062]
[130.81532288 42.25333786]
[138.50242615 29.37279129]
[146.18951416 16.49224472]
[149.11463928 -0.20745505]
[165.97146606 -2.01958179]
[172.37921143 13.67682552]
[159.07006836 24.17934799]
[151.38296509 37.05989456]
[143.69586182 49.94043732]
[136.00875854 62.82098389]
[150.82458496 65.16432190]
[162.88862610 74.07830048]
[169.47999573 87.55249023]
[169.11210632 102.54798126]
[161.86793518 115.68273926]
[149.38130188 123.99441528]
[134.46838379 125.60841370]
[120.49259186 120.16072845]
[110.60514832 108.87841797]
[120.00104523 120.57102203]
[129.39694214 132.26362610]
[138.79284668 143.95623779]
[148.18875122 155.64884949]
[157.58465576 167.34144592]
[172.16906738 163.14974976]
[187.20668030 164.85656738]
[200.40950012 172.17086792]
[209.78073120 183.95083618]
[213.91670227 198.38200378]
[212.21708679 213.25671387]
[204.97181702 226.31181335]
[214.36772156 238.00440979]
[231.67611694 244.25279236]
[233.70660400 261.67236328]
[243.30403137 273.20013428]
[254.04714966 277.56256104]
[257.31408691 287.33230591]
[268.75811768 297.02941895]
[284.28872681 300.04779053]
[288.99688721 314.17868042]
[300.44091797 323.87579346]
[311.88497925 333.57290649]
[323.32901001 343.26998901]
[334.77307129 352.96710205]
[346.21710205 362.66421509]
[357.66116333 372.36129761]
[373.19177246 375.37969971]
[377.89990234 389.51058960]
[389.34396362 399.20770264]
[403.50778198 393.40728760]
[418.74371338 394.86508179]
[431.55062866 403.24609375]
[438.98562622 416.62442017]
[439.34014893 431.92581177]
[432.53277588 445.63415527]
[420.12777710 454.59933472]
[404.97570801 456.76123047]
[390.55844116 451.62307739]
[380.18893433 440.36553955]
[376.25003052 425.57556152]
[379.64685059 410.65173340]
[368.20281982 400.95465088]
[353.49075317 398.62988281]
[347.96405029 383.80535889]
[336.52001953 374.10824585]
[325.07595825 364.41116333]
[313.63189697 354.71405029]
[302.18786621 345.01693726]
[290.74380493 335.31985474]
[279.29977417 325.62274170]
[264.58770752 323.29797363]
[259.06100464 308.47344971]
[247.61697388 298.77633667]
[250.53683472 313.48941040]
[246.55177307 327.95037842]
[236.50735474 339.09082031]
[222.53483582 344.54693604]
[207.59899902 343.16098022]
[194.86900330 335.22708130]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 136]
[6 135]
[9 133]
[10 132]
[17 125]
[18 124]
[19 123]
[20 122]
[21 121]
[22 120]
[23 45]
[24 44]
[27 42]
[28 41]
[30 40]
[31 39]
[32 38]
[33 37]
[50 82]
[51 81]
[52 80]
[53 79]
[54 77]
[55 76]
[59 74]
[60 73]
[61 72]
[62 71]
[101 111]
[102 110]
[103 109]
[104 108]
[138 174]
[139 173]
[141 171]
[142 170]
[143 169]
[144 168]
[145 167]
[146 166]
[147 165]
[149 163]
[150 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
