%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 11:05:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGACACGUCUCAGCCUUAGCCCUGUGCCCCCUGAAACAGCUGCCACCAUCACUCGCAAGAGAAUCCCCUCCAUCUUUGGGAGGGGUUGAUGCCAGACAUCACCAGGUUGUAGAAGUUGACAGGCAGUGCCAUGGGGGCAACAGCCAAAAUAGGGGGGUAAUGAUGUAGGGGCCAAGCAGUGCCCAGCUGGGGGUCAAUAAAGUUACCCUUGUACUUGCA\
) } def
/len { sequence length } bind def

/coor [
[486.53555298 571.98370361]
[477.44628906 560.05114746]
[468.35702515 548.11865234]
[453.60836792 546.38299561]
[444.22055054 534.41119385]
[446.14108276 518.95318604]
[436.96762085 507.08526611]
[427.71038818 495.28256226]
[418.45318604 483.47985840]
[409.19598389 471.67712402]
[399.93878174 459.87442017]
[385.08609009 460.60620117]
[372.50164795 452.35415649]
[367.12652588 438.10769653]
[371.21810913 423.25625610]
[361.96090698 411.45355225]
[352.70370483 399.65084839]
[343.44647217 387.84811401]
[340.01690674 387.06268311]
[336.79565430 384.58184814]
[334.57333374 380.52072144]
[334.05963135 375.34231567]
[325.31167603 363.15734863]
[316.56372070 350.97238159]
[307.81579590 338.78741455]
[299.06784058 326.60244751]
[289.48034668 315.06640625]
[279.10125732 304.23709106]
[268.72216797 293.40774536]
[258.34307861 282.57839966]
[247.96400452 271.74905396]
[237.58493042 260.91970825]
[227.20584106 250.09037781]
[215.23457336 255.11131287]
[202.23773193 255.76934814]
[189.75949097 251.96455383]
[179.28981018 244.12860107]
[172.08647156 233.17576599]
[169.02406311 220.39640808]
[170.48774719 207.30487061]
[176.32508850 195.46012878]
[166.25662231 184.34140015]
[156.18814087 173.22268677]
[146.11967468 162.10397339]
[136.05120850 150.98524475]
[125.98274231 139.86653137]
[115.99261475 145.93112183]
[104.59020996 149.47274780]
[92.41712189 150.16490173]
[80.18944550 147.84513855]
[68.65566254 142.53173828]
[58.55089188 134.42951965]
[50.55035782 123.92404175]
[45.22496414 111.56428528]
[30.27900314 110.29219818]
[15.33304024 109.02011108]
[0.72466457 116.47177887]
[-12.88372135 107.32061005]
[-11.49297619 90.98054504]
[3.46622014 84.26083374]
[16.60512924 94.07414246]
[31.55109215 95.34623718]
[46.49705505 96.61832428]
[49.04557419 89.56459808]
[39.37644958 78.09690857]
[54.14262009 75.45714569]
[56.69113922 68.40342712]
[44.38360214 59.82878113]
[32.07606125 51.25413895]
[19.76852417 42.67949677]
[7.46098566 34.10485458]
[-4.84655285 25.53021049]
[-17.15409088 16.95556831]
[-32.20100021 21.21286964]
[-46.44286728 14.75506878]
[-53.15512085 0.63134223]
[-49.16844177 -14.48951721]
[-36.36521530 -23.46790314]
[-20.79073524 -22.06449509]
[-9.79879379 -10.94194126]
[-8.57944870 4.64803028]
[3.72808957 13.22267246]
[16.03562737 21.79731560]
[28.34316635 30.37195778]
[40.65070724 38.94660187]
[52.95824432 47.52124405]
[65.26578522 56.09588623]
[69.65659332 58.03700256]
[73.80996704 60.26934814]
[67.63144684 46.60091782]
[61.45292664 32.93249130]
[55.27441025 19.26406479]
[49.09589005 5.59563732]
[34.65419388 -1.39127326]
[31.25320435 -17.06969261]
[41.50187302 -29.41247940]
[57.53829575 -28.95130348]
[67.06069946 -16.03993988]
[62.76431656 -0.58288115]
[68.94283295 13.08554649]
[75.12135315 26.75397301]
[81.29987335 40.42240143]
[87.47839355 54.09082794]
[90.96420288 53.27958679]
[94.50112915 52.73262024]
[95.13774872 37.74613571]
[95.77436829 22.75965118]
[88.62973022 8.64353371]
[96.90022278 -3.74389005]
[97.53684235 -18.73037529]
[89.47188568 -33.00933075]
[98.03725433 -46.99383926]
[114.42162323 -46.29784012]
[121.77016449 -31.63731575]
[112.52332306 -18.09375572]
[111.88670349 -3.10727215]
[119.07687378 9.93691254]
[110.76084900 23.39627075]
[110.12422943 38.38275528]
[109.48761749 53.36923981]
[131.10499573 63.98720169]
[144.75462341 83.83008575]
[146.94004822 107.81500244]
[137.10145569 129.79804993]
[147.16993713 140.91677856]
[157.23840332 152.03549194]
[167.30686951 163.15422058]
[177.37533569 174.27293396]
[187.44380188 185.39166260]
[203.82664490 180.22146606]
[220.76603699 182.72845459]
[234.85754395 192.35983276]
[243.29052734 207.13584900]
[244.40869141 224.05667114]
[238.03518677 239.71128845]
[248.41426086 250.54063416]
[258.79333496 261.36996460]
[269.17242432 272.19931030]
[279.55151367 283.02865601]
[289.93060303 293.85800171]
[300.30969238 304.68734741]
[298.23925781 289.83090210]
[303.78726196 275.89465332]
[315.50164795 266.52593994]
[330.31655884 264.17675781]
[344.35461426 269.46194458]
[353.94177246 280.99826050]
[356.56884766 295.76641846]
[351.54833984 309.90127563]
[340.19418335 319.70349121]
[325.47796631 322.60757446]
[311.25280762 317.85449219]
[320.00076294 330.03945923]
[328.74871826 342.22442627]
[337.49664307 354.40939331]
[346.24459839 366.59436035]
[355.24920654 378.59091187]
[364.50640869 390.39361572]
[373.76361084 402.19635010]
[383.02081299 413.99905396]
[398.41943359 413.56378174]
[410.97491455 422.17846680]
[415.99096680 436.36660767]
[411.74148560 450.61721802]
[420.99868774 462.41992188]
[430.25592041 474.22262573]
[439.51312256 486.02536011]
[448.77032471 497.82806396]
[456.52227783 502.64413452]
[458.07360840 509.86392212]
[473.48638916 512.11877441]
[482.53421021 524.34954834]
[480.28955078 539.02935791]
[489.37881470 550.96191406]
[498.46807861 562.89447021]
[513.88085938 565.14929199]
[522.92864990 577.38006592]
[520.68402100 592.05987549]
[529.77325439 603.99243164]
[538.86254883 615.92492676]
[548.03601074 627.79284668]
[557.29321289 639.59558105]
[566.55041504 651.39831543]
[575.80761719 663.20098877]
[578.62554932 648.46807861]
[590.96173096 639.93475342]
[605.74169922 642.49468994]
[614.48937988 654.67987061]
[612.18811035 669.50231934]
[600.15771484 678.46160889]
[585.29809570 676.42028809]
[593.52105713 688.96551514]
[601.74395752 701.51080322]
[609.96685791 714.05603027]
[618.18981934 726.60131836]
[626.41271973 739.14660645]
[633.72833252 744.60272217]
[634.66174316 751.92803955]
[642.70635986 764.58843994]
[650.75091553 777.24877930]
[664.34875488 787.37475586]
[658.38281250 803.24432373]
[641.48187256 801.90466309]
[638.09051514 785.29339600]
[630.04595947 772.63299561]
[622.00140381 759.97265625]
[613.86743164 747.36950684]
[605.64453125 734.82421875]
[597.42163086 722.27899170]
[589.19873047 709.73370361]
[580.97576904 697.18847656]
[572.75286865 684.64318848]
[564.00494385 672.45825195]
[554.74768066 660.65551758]
[545.49047852 648.85278320]
[536.23327637 637.05004883]
[529.63732910 633.72955322]
[526.92999268 625.01422119]
[517.84075928 613.08166504]
[508.75149536 601.14916992]
[494.00280762 599.41351318]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 175]
[2 174]
[3 173]
[6 170]
[7 168]
[8 167]
[9 166]
[10 165]
[11 164]
[15 160]
[16 159]
[17 158]
[18 157]
[22 156]
[23 155]
[24 154]
[25 153]
[26 152]
[27 141]
[28 140]
[29 139]
[30 138]
[31 137]
[32 136]
[33 135]
[41 129]
[42 128]
[43 127]
[44 126]
[45 125]
[46 124]
[54 63]
[55 62]
[56 61]
[67 87]
[68 86]
[69 85]
[70 84]
[71 83]
[72 82]
[73 81]
[89 103]
[90 102]
[91 101]
[92 100]
[93 99]
[105 120]
[106 119]
[107 118]
[109 116]
[110 115]
[178 220]
[179 219]
[180 218]
[181 216]
[182 215]
[183 214]
[184 213]
[191 212]
[192 211]
[193 210]
[194 209]
[195 208]
[196 207]
[198 206]
[199 205]
[200 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
