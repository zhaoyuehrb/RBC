%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 18:32:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCCACUUACAAACUGUAUUGUAAGUAUGAAGAACCAAGCAUGGUGAAAGACAGGUAUUUCUGCAACACAAUGUAAUGAGUGAAUGAAUACAUUUCAAAUCAACUAUUAAAAAUUUUCUAAUCUGCAUUUUCUACUCAAGUUUUAUUUUAAAAACAGUAUUUUUUUUUCCUUUGAAUACUUGGCCUGUUAAGAAUUUCAGCUUUCACUCUAUGAAGAUUUAAAUGAUUCUUUAUUUCAAUAAACUUUAACAAAC\
AAUA\
) } def
/len { sequence length } bind def

/coor [
[167.56167603 667.96002197]
[156.92276001 657.38580322]
[148.52383423 644.95770264]
[142.68051147 631.14263916]
[139.61235046 616.45977783]
[139.43476868 601.45953369]
[133.61090088 615.28277588]
[127.78702545 629.10607910]
[121.96315002 642.92932129]
[116.13928223 656.75256348]
[110.31541443 670.57586670]
[104.49153900 684.39910889]
[98.66767120 698.22235107]
[104.85876465 712.76354980]
[98.87695312 727.39202881]
[84.27112579 733.42907715]
[69.70667267 727.29290771]
[63.82442093 712.62408447]
[70.11420441 698.12530518]
[84.84440613 692.39849854]
[90.66828156 678.57525635]
[96.49214935 664.75195312]
[102.31602478 650.92871094]
[108.13989258 637.10546875]
[113.96376038 623.28216553]
[119.78763580 609.45892334]
[125.61150360 595.63568115]
[128.84826660 580.98907471]
[129.39189148 565.99890137]
[129.93550110 551.00872803]
[130.47912598 536.01861572]
[131.02273560 521.02844238]
[131.56636047 506.03833008]
[132.10997009 491.04818726]
[132.65359497 476.05801392]
[125.38262939 463.05871582]
[133.61497498 449.54800415]
[134.15859985 434.55786133]
[116.70050812 419.49041748]
[116.22820282 396.16781616]
[133.45071411 380.04180908]
[132.54502869 365.06918335]
[131.63935852 350.09655762]
[130.55282593 335.13595581]
[129.28562927 320.18957520]
[128.01841736 305.24319458]
[126.75120544 290.29681396]
[125.48400116 275.35043335]
[124.21678925 260.40405273]
[122.94958496 245.45768738]
[121.68237305 230.51130676]
[119.33586121 215.69598389]
[115.92236328 201.08955383]
[112.50886536 186.48310852]
[109.09536743 171.87667847]
[105.68186951 157.27023315]
[102.26837158 142.66380310]
[91.25055695 141.81857300]
[80.81804657 138.17587280]
[71.66870880 131.97941589]
[64.41459656 123.64369202]
[59.54096603 113.72631836]
[57.37384796 102.89072418]
[42.46245575 101.26272583]
[27.55106354 99.63472748]
[12.63967133 98.00672913]
[0.47596458 108.09730530]
[-15.25222206 106.54821777]
[-25.21363640 94.27850342]
[-23.49834442 78.56757355]
[-11.12400246 68.73644257]
[4.56791449 70.61774445]
[14.26766968 83.09533691]
[29.17906189 84.72333527]
[44.09045410 86.35133362]
[59.00184631 87.97933197]
[64.26260376 76.58668518]
[72.60633087 67.21384430]
[65.15871429 54.19335938]
[57.71109772 41.17287445]
[50.26347733 28.15239334]
[42.81586075 15.13190937]
[35.28971481 2.15665889]
[27.68531799 -10.77288628]
[20.08091927 -23.70243073]
[6.23275185 -17.87905693]
[-8.26805210 -13.95348263]
[-23.16270828 -11.99576855]
[-38.18540573 -12.04084969]
[-53.06804276 -14.08792210]
[-67.54502869 -18.10045433]
[-81.35799408 -24.00683594]
[-94.26043701 -31.70166206]
[-106.02210236 -41.04761124]
[-116.43308258 -51.87789154]
[-125.30757904 -63.99922180]
[-132.48722839 -77.19528961]
[-137.84388733 -91.23059082]
[-141.28196716 -105.85464478]
[-142.74011230 -120.80648041]
[-142.19229126 -135.81924438]
[-139.64828491 -150.62504578]
[-135.15350342 -164.95962524]
[-128.78816223 -178.56719971]
[-120.66584015 -191.20489502]
[-110.93150330 -202.64718628]
[-99.75886536 -212.68988037]
[-87.34732819 -221.15374756]
[-73.91837311 -227.88774109]
[-59.71166611 -232.77168274]
[-44.98073959 -235.71841431]
[-29.98848343 -236.67535400]
[-15.00245380 -235.62541199]
[-0.29009405 -232.58734131]
[13.88603687 -227.61534119]
[27.27295113 -220.79815674]
[39.63174057 -212.25744629]
[50.74184799 -202.14562988]
[60.40500259 -190.64315796]
[68.44875336 -177.95530701]
[74.72955322 -164.30850220]
[79.13530731 -149.94630432]
[81.58739471 -135.12501526]
[82.04205322 -120.10913086]
[80.49117279 -105.16663361]
[76.96241760 -90.56419373]
[71.51878357 -76.56240082]
[64.25740051 -63.41113281]
[55.30786514 -51.34509659]
[44.82988739 -40.57962036]
[33.01046371 -31.30682945]
[40.61486053 -18.37728310]
[48.21926117 -5.44773912]
[54.30038834 -1.28826845]
[55.83634186 7.68429184]
[63.28396225 20.70477486]
[70.73158264 33.72525787]
[78.17919922 46.74574280]
[85.62681580 59.76622391]
[97.17256927 54.68861771]
[110.41974640 53.06779861]
[116.90466309 39.54205322]
[123.38957977 26.01630592]
[129.87449646 12.49055862]
[136.35942078 -1.03518891]
[130.87808228 -15.85849953]
[137.55966187 -30.18092918]
[152.44010925 -35.50523376]
[166.69108582 -28.67259979]
[171.85777283 -13.73670578]
[164.87484741 0.44124642]
[149.88516235 5.44972944]
[143.40025330 18.97547722]
[136.91532898 32.50122452]
[130.43040466 46.02696991]
[123.94549561 59.55271912]
[135.46846008 69.15590668]
[147.60371399 60.33913040]
[159.73896790 51.52235413]
[171.87422180 42.70557404]
[184.00947571 33.88879395]
[196.14472961 25.07201576]
[208.27998352 16.25523758]
[206.00541687 1.11968648]
[211.03617859 -13.33541679]
[222.21624756 -23.78839493]
[236.97650146 -27.83723259]
[251.92518616 -24.55153275]
[263.62716675 -14.68632698]
[269.39340210 -0.50856757]
[267.89889526 14.72380066]
[259.48706055 27.51049042]
[246.09086609 34.91321564]
[230.78865051 35.23088074]
[217.09677124 28.39049339]
[204.96150208 37.20727158]
[192.82624817 46.02405167]
[180.69099426 54.84082794]
[168.55574036 63.65760803]
[156.42048645 72.47438812]
[144.28523254 81.29116821]
[145.94853210 105.62313843]
[135.61242676 126.69625092]
[116.87480927 139.25030518]
[120.28830719 153.85673523]
[123.70180511 168.46318054]
[127.11530304 183.06961060]
[130.52879333 197.67605591]
[133.94229126 212.28248596]
[138.65885925 198.04331970]
[149.03578186 187.21191406]
[163.05982971 181.88967896]
[178.01017761 183.10920715]
[190.98628235 190.63388062]
[199.47062683 203.00382996]
[201.81716919 217.81915283]
[197.57064819 232.20550537]
[187.55491638 243.37176514]
[173.71316528 249.15155029]
[158.73085022 248.42352295]
[145.51469421 241.32893372]
[136.62875366 229.24411011]
[137.89596558 244.19047546]
[139.16316223 259.13687134]
[140.43037415 274.08322144]
[141.69758606 289.02960205]
[142.96479797 303.97598267]
[144.23199463 318.92236328]
[145.49920654 333.86874390]
[148.93124390 339.46179199]
[149.03152466 345.10549927]
[146.61198425 349.19085693]
[147.51766968 364.16351318]
[148.42333984 379.13613892]
[155.17280579 381.48840332]
[161.12689209 385.40301514]
[165.93222046 390.63488770]
[169.30673218 396.86108398]
[171.05618286 403.70086670]
[171.08535767 410.73883057]
[169.40319824 417.55032349]
[166.12156677 423.72689819]
[161.44792175 428.90084839]
[155.67214966 432.76718140]
[149.14874268 435.10147095]
[148.60513306 450.09161377]
[155.83720398 464.16314697]
[147.64373779 476.60165405]
[147.10012817 491.59179688]
[146.55650330 506.58193970]
[146.01289368 521.57208252]
[145.46926880 536.56225586]
[144.92564392 551.55236816]
[144.38203430 566.54254150]
[143.83840942 581.53265381]
[150.31991577 568.00531006]
[159.28952026 555.98254395]
[170.41018677 545.91619873]
[183.26403809 538.18457031]
[197.36808777 533.07812500]
[212.19235229 530.78875732]
[227.17979431 531.40252686]
[241.76724243 534.89630127]
[255.40653992 541.13885498]
[267.58520508 549.89556885]
[277.84558105 560.83740234]
[285.80212402 573.55328369]
[291.15588379 587.56530762]
[293.70565796 602.34704590]
[293.35565186 617.34295654]
[290.11901855 631.98962402]
[284.11737061 645.73657227]
[275.57623291 658.06738281]
[264.81652832 668.51867676]
[252.24259949 676.69769287]
[238.32690430 682.29705811]
[223.59234619 685.10650635]
[208.59259033 685.02032471]
[193.89128113 682.04180908]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 27]
[7 26]
[8 25]
[9 24]
[10 23]
[11 22]
[12 21]
[13 20]
[28 235]
[29 234]
[30 233]
[31 232]
[32 231]
[33 230]
[34 229]
[35 228]
[37 226]
[38 225]
[41 214]
[42 213]
[43 212]
[44 209]
[45 208]
[46 207]
[47 206]
[48 205]
[49 204]
[50 203]
[51 202]
[52 189]
[53 188]
[54 187]
[55 186]
[56 185]
[57 184]
[63 76]
[64 75]
[65 74]
[66 73]
[78 139]
[79 138]
[80 137]
[81 136]
[82 135]
[83 133]
[84 132]
[85 131]
[141 156]
[142 155]
[143 154]
[144 153]
[145 152]
[157 181]
[158 180]
[159 179]
[160 178]
[161 177]
[162 176]
[163 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
