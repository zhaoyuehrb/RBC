%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 21:51:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAACUGAGUAAUGCAUAUGAAAUGGAACUUUUGGGUGCCAAAUGGGACUUUUAGAUUAAAAAAAAAUCAGAAUUAUGCUUAACUUUCCCUACAAAGAAAGUAGAAUGUAAAAUACUUUAACAACUACAAAGUAGUUUAAAAUGCCAAUAAAACUAUCAUAUACAAUUA\
) } def
/len { sequence length } bind def

/coor [
[64.68183899 489.37918091]
[52.90127563 498.89218140]
[38.66930008 504.06225586]
[23.52968979 504.32858276]
[9.12467766 499.66229248]
[-2.98318863 490.56951904]
[-11.48053932 478.03662109]
[-15.44564438 463.42303467]
[-14.44839859 448.31396484]
[-8.59697723 434.34829712]
[1.47390318 423.04095459]
[14.67182732 415.61846924]
[29.56518364 412.88595581]
[31.77470970 398.04956055]
[25.99655914 384.32141113]
[35.68224716 371.81149292]
[37.89177322 356.97512817]
[40.10129929 342.13873291]
[42.31082535 327.30236816]
[44.52034760 312.46600342]
[46.72987366 297.62963867]
[44.63297272 293.29898071]
[45.26194382 287.60110474]
[49.30496216 282.28988647]
[52.06120300 267.54528809]
[54.81744766 252.80070496]
[42.73582077 244.05429077]
[35.62054443 230.87542725]
[34.93002701 215.85264587]
[40.85473251 201.96315002]
[52.26880264 191.98286438]
[66.94357300 187.93164062]
[69.69981384 173.18704224]
[72.45606232 158.44245911]
[75.21230316 143.69786072]
[65.62960052 132.15785217]
[50.62960052 132.15785217]
[36.82942963 139.89514160]
[24.10215569 132.15785217]
[9.10215664 132.15785217]
[-4.82164669 140.82154846]
[-19.15708160 132.85742188]
[-19.15708160 116.45827484]
[-4.82164669 108.49414062]
[9.10215664 117.15784454]
[24.10215569 117.15784454]
[36.82942963 109.42054749]
[50.62960052 117.15784454]
[65.62960052 117.15784454]
[68.27417755 110.13957214]
[53.29018402 109.44679260]
[49.31876755 94.98208618]
[61.84830475 86.73522186]
[73.56333160 96.10301971]
[76.20790863 89.08473969]
[64.93793488 79.18587494]
[53.66795349 69.28700256]
[42.39797592 59.38813400]
[26.96898460 61.93376541]
[13.53980541 53.92182541]
[8.45128632 39.13531113]
[14.10607147 24.55596352]
[27.83414268 17.06770134]
[43.15352631 20.20625496]
[52.83087540 32.48969650]
[52.29684448 48.11815643]
[63.56682205 58.01702499]
[74.83679962 67.91589355]
[86.10678101 77.81475830]
[100.57147980 73.84329987]
[105.20673370 59.57744980]
[102.11260986 44.06174850]
[113.40415955 34.34835052]
[118.03942108 20.08250427]
[122.67467499 5.81665659]
[119.58055115 -9.69904423]
[130.87210083 -19.41244125]
[135.50735474 -33.67829132]
[140.14260864 -47.94413757]
[144.64585876 -62.25220490]
[149.01670837 -76.60127258]
[144.42907715 -94.41607666]
[157.66720581 -105.91097260]
[161.77215576 -120.33836365]
[165.87709045 -134.76574707]
[169.98204041 -149.19313049]
[174.08699036 -163.62051392]
[178.19192505 -178.04789734]
[168.50799561 -190.17228699]
[167.83369446 -205.67471313]
[176.42831421 -218.59416199]
[190.98706055 -223.96284485]
[205.91177368 -219.71638489]
[215.46362305 -207.48765564]
[215.96971130 -191.97883606]
[207.23544312 -179.15338135]
[192.61930847 -173.94294739]
[188.51437378 -159.51556396]
[184.40942383 -145.08818054]
[180.30447388 -130.66079712]
[176.19953918 -116.23341370]
[172.09458923 -101.80603027]
[177.71018982 -91.06420898]
[174.37908936 -78.99293518]
[163.36576843 -72.23042297]
[158.99491882 -57.88135910]
[160.05807495 -50.53766251]
[154.40846252 -43.30888367]
[149.77320862 -29.04303551]
[145.13795471 -14.77718735]
[148.56361389 -0.28187501]
[136.94052124 10.45191193]
[132.30526733 24.71776009]
[127.67001343 38.98360825]
[131.09567261 53.47891998]
[119.47257996 64.21270752]
[114.83732605 78.47855377]
[118.96078491 84.74330139]
[128.32862854 73.02819824]
[142.36515808 78.31739807]
[141.67233276 93.30139160]
[127.20771027 97.27279663]
[131.33117676 103.53754425]
[146.26718140 104.92156982]
[161.20320129 106.30559540]
[176.13920593 107.68962097]
[191.07522583 109.07364655]
[206.01123047 110.45767212]
[222.34068298 105.89857483]
[231.24205017 120.32778168]
[219.84088135 132.87568665]
[204.62721252 125.39368439]
[189.69119263 124.00965881]
[174.75518799 122.62563324]
[159.81916809 121.24160767]
[144.88316345 119.85758209]
[129.94714355 118.47355652]
[141.65408325 127.85158539]
[147.01110840 141.86238098]
[144.54721069 156.65863037]
[134.93894958 168.17736816]
[120.82470703 173.25559998]
[106.08020782 170.49885559]
[94.75420380 160.66413879]
[89.95690155 146.45410156]
[87.20065308 161.19869995]
[84.44441223 175.94329834]
[81.68817139 190.68788147]
[93.90852356 199.76667786]
[100.94652557 213.19625854]
[101.45368958 228.28807068]
[95.38294220 242.04696655]
[83.98739624 251.76554871]
[69.56204224 255.55694580]
[66.80580139 270.30154419]
[64.04956055 285.04614258]
[61.56624985 299.83914185]
[59.35672379 314.67553711]
[57.14719772 329.51190186]
[54.93767166 344.34826660]
[52.72814560 359.18466187]
[50.51862335 374.02102661]
[56.13873291 388.81036377]
[46.61108398 400.25909424]
[44.40155792 415.09545898]
[57.85238266 422.04916382]
[68.31473541 432.99530029]
[74.65373993 446.74652100]
[76.18178558 461.81118774]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 165]
[14 164]
[16 162]
[17 161]
[18 160]
[19 159]
[20 158]
[21 157]
[24 156]
[25 155]
[26 154]
[32 148]
[33 147]
[34 146]
[35 145]
[36 49]
[37 48]
[39 46]
[40 45]
[55 69]
[56 68]
[57 67]
[58 66]
[70 117]
[71 116]
[73 114]
[74 113]
[75 112]
[77 110]
[78 109]
[79 108]
[80 106]
[81 105]
[83 102]
[84 101]
[85 100]
[86 99]
[87 98]
[88 97]
[123 137]
[124 136]
[125 135]
[126 134]
[127 133]
[128 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
