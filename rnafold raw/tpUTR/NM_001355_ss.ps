%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 06:57:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGGCACGGAGGGAUCCAGGGCAUCUGUGAACUGGCUGCUUCUUCCAGAGAGAUCUCUUGGCAGAGUGAGGGCCUGGAGAUAACCAGCUUUGGAUUAUCCCGCAUGCAACAUUCCUGUGAUCACAUAAUCCUCUUCUUCAUCCUCAUAUGAAAUAAAUGAAGAGAGCUUCCUCAUUCAAACAUGA\
) } def
/len { sequence length } bind def

/coor [
[-53.22153473 234.39920044]
[-63.95499802 228.50222778]
[-72.99718475 220.12652588]
[-84.16681671 230.13848877]
[-95.33644104 240.15045166]
[-96.96981049 245.15208435]
[-100.05811310 248.66410828]
[-103.78459930 250.38095093]
[-107.33021545 250.36801147]
[-118.99005127 259.80453491]
[-130.64988708 269.24108887]
[-142.30972290 278.67764282]
[-153.96954346 288.11416626]
[-159.82916260 302.81027222]
[-174.58992004 304.80267334]
[-180.44953918 319.49874878]
[-195.21028137 321.49114990]
[-206.87011719 330.92770386]
[-218.52995300 340.36422729]
[-230.18978882 349.80078125]
[-231.99002075 365.27322388]
[-243.94917297 374.67712402]
[-258.68869019 372.86553955]
[-270.34854126 382.30206299]
[-275.72146606 397.79605103]
[-291.87496948 400.62384033]
[-302.19171143 387.87640381]
[-296.05871582 372.66726685]
[-279.78506470 370.64224243]
[-268.12524414 361.20568848]
[-266.82443237 346.41232300]
[-255.13414001 336.67623901]
[-239.62632751 338.14093018]
[-227.96649170 328.70440674]
[-216.30665588 319.26785278]
[-204.64683533 309.83132935]
[-199.62120056 295.81018066]
[-184.02645874 293.14282227]
[-179.00082397 279.12170410]
[-163.40608215 276.45434570]
[-151.74626160 267.01779175]
[-140.08642578 257.58126831]
[-128.42658997 248.14471436]
[-116.76676178 238.70817566]
[-105.34840393 228.98083496]
[-94.17877960 218.96887207]
[-83.00914764 208.95690918]
[-86.74925995 194.43066406]
[-101.36512756 191.05776978]
[-115.98099518 187.68486023]
[-130.59686279 184.31196594]
[-146.11221313 189.62287903]
[-158.28971863 178.63923645]
[-154.60220337 162.66006470]
[-138.84306335 158.12335205]
[-127.22396088 169.69609070]
[-112.60809326 173.06900024]
[-97.99222565 176.44189453]
[-83.37635803 179.81480408]
[-76.49573517 162.97277832]
[-64.23336792 149.84960938]
[-48.31397629 142.04891968]
[-30.89270210 140.44259644]
[-14.26371956 145.07612610]
[-0.55814987 155.18405151]
[11.56227589 146.34689331]
[23.68270111 137.50975037]
[35.80312729 128.67259216]
[47.92355347 119.83543396]
[60.04397964 110.99828339]
[72.16440582 102.16113281]
[84.28482819 93.32397461]
[90.40122223 79.62763977]
[88.89178467 64.70377350]
[76.37285614 48.92122650]
[85.01342010 31.63653374]
[83.00348663 16.77180481]
[80.99356079 1.90707552]
[76.73447418 -6.19779158]
[79.07688904 -13.22401142]
[77.31696320 -28.12040710]
[75.55702972 -43.01680374]
[73.79709625 -57.91320038]
[72.03716278 -72.80960083]
[70.15216064 -87.69068909]
[68.14223480 -102.55541229]
[66.13230133 -117.42014313]
[55.68099976 -130.05747986]
[61.65242767 -145.33079529]
[77.90368652 -147.52821350]
[87.71687317 -134.38920593]
[80.99703217 -119.43007660]
[83.00695801 -104.56534576]
[85.01689148 -89.70061493]
[89.03725433 -83.48037720]
[86.93355560 -74.56953430]
[88.69348907 -59.67313385]
[90.45342255 -44.77673721]
[92.21335602 -29.88034058]
[93.97328949 -14.98394394]
[95.85829163 -0.10285597]
[97.86821747 14.76187325]
[99.87815094 29.62660217]
[108.55029297 35.07900238]
[112.87011719 44.60926056]
[111.18553162 55.15903854]
[103.81564331 63.19433975]
[105.32508087 78.11820221]
[112.12091064 81.29100800]
[117.95113373 67.47042847]
[117.08189392 52.49563217]
[129.49577332 44.07567978]
[143.08746338 50.42122650]
[144.60311890 65.34445190]
[132.56460571 74.29310608]
[125.71257019 87.63662720]
[132.50839233 90.80943298]
[144.91885376 82.38443756]
[157.32931519 73.95944214]
[169.73976135 65.53444672]
[176.39370728 50.54587555]
[192.72750854 49.08337402]
[201.93835449 62.65143585]
[194.55091858 77.29239655]
[178.16476440 77.94490051]
[165.75430298 86.36989594]
[153.34385681 94.79489136]
[140.93339539 103.21988678]
[142.00074768 110.64355469]
[155.92639160 116.21820068]
[144.13548279 125.49087524]
[145.20283508 132.91453552]
[159.48417664 137.50183105]
[173.76551819 142.08912659]
[188.04685974 146.67642212]
[197.19583130 146.32275391]
[202.52844238 151.46260071]
[216.73069763 156.28915405]
[230.93296814 161.11572266]
[245.13522339 165.94227600]
[259.33749390 170.76884460]
[273.53976440 175.59541321]
[283.26248169 163.94065857]
[296.54071045 156.58859253]
[311.57870483 154.53352356]
[326.34268188 158.05339050]
[338.83593750 166.67213440]
[347.36886597 179.22418213]
[350.78744507 194.01193237]
[348.62936401 209.03547668]
[341.18646240 222.26301575]
[329.46536255 231.90562439]
[315.05120850 236.65922546]
[299.89340210 235.88092041]
[286.04193115 229.67596436]
[275.37008667 218.88356018]
[269.32116699 204.96325684]
[268.71319580 189.79766846]
[254.51092529 184.97111511]
[240.30867004 180.14454651]
[226.10639954 175.31797791]
[211.90414429 170.49142456]
[197.70187378 165.66485596]
[183.45956421 160.95776367]
[169.17822266 156.37046814]
[154.89688110 151.78317261]
[140.61553955 147.19587708]
[114.80545807 146.59706116]
[96.61982727 135.35789490]
[89.41659546 119.45295715]
[93.12198639 105.44440460]
[81.00155640 114.28155518]
[68.88113403 123.11870575]
[56.76070786 131.95585632]
[44.64028168 140.79301453]
[32.51985550 149.63017273]
[20.39942932 158.46733093]
[8.27900410 167.30447388]
[12.47278786 177.97009277]
[13.96685791 189.41207886]
[12.63437557 200.95315552]
[8.51696014 211.90083313]
[1.82445812 221.58900452]
[-7.07545042 229.41839600]
[-17.67731094 234.89364624]
[-29.36653137 237.65449524]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 47]
[4 46]
[5 45]
[9 44]
[10 43]
[11 42]
[12 41]
[13 40]
[15 38]
[17 36]
[18 35]
[19 34]
[20 33]
[23 30]
[24 29]
[48 59]
[49 58]
[50 57]
[51 56]
[65 178]
[66 177]
[67 176]
[68 175]
[69 174]
[70 173]
[71 172]
[72 171]
[73 108]
[74 107]
[76 103]
[77 102]
[78 101]
[80 100]
[81 99]
[82 98]
[83 97]
[84 96]
[85 94]
[86 93]
[87 92]
[117 128]
[118 127]
[119 126]
[120 125]
[132 167]
[133 166]
[134 165]
[135 164]
[137 163]
[138 162]
[139 161]
[140 160]
[141 159]
[142 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
