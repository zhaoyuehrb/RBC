%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 11:22:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAGGGCUAAAGGAAGCGGGAAUUGACUUUCUUAAGCUUUGUUUUGAUUACAGUGUAAGAUGUAUGUAUUUUUAAAAUUCAAAAUAAAGCAUUCAUUUUGAAAAGCA\
) } def
/len { sequence length } bind def

/coor [
[58.79020691 151.56031799]
[47.14007950 139.52900696]
[38.89298630 124.95288086]
[24.45176506 129.00888062]
[10.01054382 133.06488037]
[-4.43067694 137.12088013]
[-18.87189865 141.17687988]
[-33.31311798 145.23287964]
[-47.75434113 149.28889465]
[-58.94826126 160.46952820]
[-73.29358673 156.46191406]
[-87.73480225 160.51791382]
[-102.17602539 164.57391357]
[-116.61724854 168.62991333]
[-131.05847168 172.68591309]
[-145.49969482 176.74191284]
[-159.94090271 180.79791260]
[-174.32218933 185.06159973]
[-188.64051819 189.53207397]
[-197.33178711 203.01693726]
[-213.30743408 204.48606873]
[-224.31230164 192.81250000]
[-221.90440369 176.95117188]
[-207.93087769 169.06954956]
[-193.11100769 175.21374512]
[-178.79266357 170.74325562]
[-173.26199341 165.66868591]
[-163.99691772 166.35668945]
[-149.55569458 162.30068970]
[-135.11447144 158.24468994]
[-120.67324829 154.18869019]
[-106.23202515 150.13269043]
[-91.79080963 146.07669067]
[-77.34958649 142.02069092]
[-67.18859863 131.13015747]
[-51.81034088 134.84767151]
[-37.36911774 130.79167175]
[-22.92789841 126.73566437]
[-8.48667812 122.67966461]
[5.95454311 118.62366486]
[20.39576340 114.56766510]
[34.83698654 110.51166534]
[34.05282211 97.22814178]
[35.94890213 84.05727386]
[40.44816589 71.53436279]
[47.36775208 60.16835022]
[56.42643356 50.42119217]
[67.25605011 42.68902969]
[79.41645050 37.28611755]
[92.41341400 34.43204117]
[105.71871185 34.24279404]
[118.79158783 36.72607422]
[131.10073853 41.78094864]
[142.14587402 49.20198059]
[151.47810364 58.68756104]
[158.71815491 69.85217285]
[163.57176208 82.24205780]
[178.38369751 79.87419128]
[193.19561768 77.50633240]
[208.00755310 75.13846588]
[222.81947327 72.77059937]
[237.63140869 70.40273285]
[252.44332886 68.03486633]
[264.84909058 58.21611786]
[278.63818359 63.84730911]
[293.45010376 61.47944641]
[308.26202393 59.11157990]
[323.07394409 56.74371338]
[337.76971436 53.73789978]
[352.32180786 50.09975052]
[366.87393188 46.46160126]
[381.42602539 42.82345200]
[395.97814941 39.18529892]
[401.65661621 24.74457359]
[414.75671387 16.42790604]
[430.24118042 17.43322563]
[442.15594482 27.37396622]
[445.91949463 42.42771149]
[440.08471680 56.80598831]
[426.89517212 64.98005676]
[411.42251587 63.80681610]
[399.61630249 53.73740768]
[385.06417847 57.37556076]
[370.51208496 61.01371002]
[355.95996094 64.65185547]
[341.40786743 68.29000854]
[339.25851440 71.26612854]
[335.48825073 73.27996826]
[330.59979248 73.54737091]
[325.44183350 71.55564117]
[310.62988281 73.92350769]
[295.81796265 76.29137421]
[281.00604248 78.65924072]
[269.65972900 88.30862427]
[254.81120300 82.84680176]
[239.99926758 85.21466064]
[225.18734741 87.58252716]
[210.37541199 89.95039368]
[195.56349182 92.31826019]
[180.75155640 94.68611908]
[165.93963623 97.05398560]
[164.55853271 113.74442291]
[159.02127075 129.55000305]
[149.68431091 143.45321655]
[137.14877319 154.55897522]
[122.22164154 162.15232849]
[105.86392975 165.74441528]
[89.12870026 165.10398865]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 42]
[4 41]
[5 40]
[6 39]
[7 38]
[8 37]
[9 36]
[11 34]
[12 33]
[13 32]
[14 31]
[15 30]
[16 29]
[17 28]
[18 26]
[19 25]
[57 101]
[58 100]
[59 99]
[60 98]
[61 97]
[62 96]
[63 95]
[65 93]
[66 92]
[67 91]
[68 90]
[69 86]
[70 85]
[71 84]
[72 83]
[73 82]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
