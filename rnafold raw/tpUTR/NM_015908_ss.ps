%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 02:34:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGUCCCCCGUUCCUCAGUCCUGUAUCAUCCAUACUUGUACUACCUUGUCCUAUGAAGCUCUGAGAAUUUUUUGUACGAUCAGCCUUACUGCUAAUAAAAGCACUUCCACAGGG\
) } def
/len { sequence length } bind def

/coor [
[99.55160522 241.42297363]
[89.70499420 253.57115173]
[74.34358978 256.49716187]
[60.72059250 248.81941223]
[55.26835251 234.16310120]
[60.56125259 219.44851685]
[74.10015106 211.62341309]
[76.52687836 196.82101440]
[78.95361328 182.01861572]
[73.37728119 168.20724487]
[83.24526978 155.84063721]
[85.67200470 141.03823853]
[66.02195740 127.10942078]
[56.80464172 104.85684967]
[60.85016251 81.11301422]
[48.66733170 72.36209106]
[36.48449707 63.61117172]
[24.30166435 54.86025620]
[12.11883068 46.10933685]
[-3.27919221 48.46276474]
[-15.50965691 39.41453934]
[-17.65839958 24.72037506]
[-29.84123421 15.96945763]
[-35.30569458 15.44175720]
[-39.53400421 13.03832722]
[-42.00517273 9.58149433]
[-42.61849213 5.98057652]
[-54.05092239 -3.73021793]
[-65.48335266 -13.44101238]
[-76.91578674 -23.15180588]
[-90.10630798 -18.89984894]
[-103.56158447 -21.73254013]
[-113.75571442 -30.79736519]
[-118.07221222 -43.62334824]
[-115.47502899 -56.79387283]
[-126.64030457 -66.81069183]
[-142.20251465 -66.13587189]
[-153.38299561 -76.45340729]
[-153.93043518 -91.29375458]
[-169.69598389 -90.18796539]
[-181.57086182 -100.61691284]
[-182.50990295 -116.39328003]
[-171.95599365 -128.15722656]
[-156.17057800 -128.92941284]
[-144.51885986 -118.25172424]
[-143.91360474 -102.45903015]
[-129.10107422 -103.51933289]
[-117.63520050 -93.51991272]
[-116.62348938 -77.97596741]
[-105.45821381 -67.95915222]
[-89.59220886 -71.92646790]
[-74.31663513 -65.63664246]
[-65.67285156 -51.36497116]
[-67.20498657 -34.58423615]
[-55.77256012 -24.87344360]
[-44.34012604 -15.16264915]
[-32.90769577 -5.45185471]
[-21.09031487 3.78662419]
[-8.90748215 12.53754330]
[5.70358753 9.88193703]
[18.18337250 18.58306313]
[20.86974907 33.92650223]
[33.05258179 42.67742157]
[45.23541641 51.42834091]
[57.41824722 60.17926025]
[69.60108185 68.93017578]
[77.12809753 62.39393616]
[86.05113220 57.67647171]
[95.93172455 55.07324982]
[106.26962280 54.77426529]
[116.52815247 56.85133362]
[126.16201019 61.25148010]
[134.64628601 67.79682159]
[141.50497437 76.19122314]
[146.33752441 86.03339386]
[160.89413452 82.41332245]
[175.45075989 78.79325867]
[186.97570801 67.95415497]
[201.19407654 72.39118195]
[209.12626648 58.72164917]
[224.42221069 54.74553680]
[238.00711060 62.82179642]
[241.82128906 78.15892792]
[233.60185242 91.65768433]
[218.22525024 95.30949402]
[204.81414795 86.94779968]
[194.33038330 97.52796173]
[179.07083130 93.34987640]
[164.51420593 96.96994019]
[149.95759583 100.59001160]
[147.53086853 115.39241028]
[160.16958618 123.47093201]
[172.80831909 131.54945374]
[185.44705200 139.62796021]
[200.82603455 135.98616028]
[214.23168945 144.35658264]
[217.71069336 159.77320862]
[209.19900513 173.08961487]
[193.74645996 176.40542603]
[180.52079773 167.75343323]
[177.36853027 152.26669312]
[164.72979736 144.18818665]
[152.09107971 136.10966492]
[139.45234680 128.03114319]
[133.99644470 133.28109741]
[127.88378906 137.52856445]
[121.29126740 140.69935608]
[114.40251923 142.74963379]
[107.40287781 143.66598511]
[100.47440338 143.46496582]
[98.04766846 158.26736450]
[103.45042419 173.13749695]
[93.75601196 184.44534302]
[91.32927704 199.24774170]
[88.90254974 214.05014038]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 115]
[8 114]
[9 113]
[11 111]
[12 110]
[15 66]
[16 65]
[17 64]
[18 63]
[19 62]
[22 59]
[23 58]
[27 57]
[28 56]
[29 55]
[30 54]
[35 50]
[36 49]
[39 46]
[75 90]
[76 89]
[77 88]
[79 86]
[91 104]
[92 103]
[93 102]
[94 101]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
