%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri Sep 11 22:48:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGACUUUAAGAGGGAAAAAAACAGCCAAGAUAUGUCUCCUAACAACAGAAUGAAACUCUACUGUUUAUAGAUCUUAGCAAUUCUGGGAUAUCAGUGAUAUUGUACUGUCAUUGGUGUUAUAUUCUGGUGAUAUGUGGAAAUGUAAUUUAUAUGACUGCAUGGAGAUAGAAAUAUAUAUACCUAGAAAACAUUGAGCCCACAA\
) } def
/len { sequence length } bind def

/coor [
[123.43481445 224.04748535]
[111.89220428 233.84783936]
[97.79192352 239.36697388]
[82.66347504 240.00622559]
[68.14786530 235.69624329]
[55.81965256 226.90455627]
[47.01610184 214.58479309]
[42.69216156 200.07334900]
[43.31685257 184.94429016]
[48.82242203 170.83869934]
[58.61166000 159.28666687]
[71.62271118 151.54125977]
[86.44422150 148.44264221]
[88.28754425 133.55633545]
[90.13086700 118.67002106]
[85.25123596 112.97448730]
[76.49668884 125.15471649]
[71.37796783 139.25431824]
[57.49623489 144.93740845]
[43.95963287 138.47517395]
[39.64985275 124.10764313]
[47.39464569 111.26170349]
[62.11300278 108.36600494]
[75.49195862 101.58341217]
[70.61231995 95.88787842]
[55.61943436 95.42594910]
[41.58753586 102.73460388]
[29.10457230 94.60903168]
[14.11168671 94.14710999]
[-0.88119936 93.68518066]
[-15.87408543 93.22325897]
[-19.63437843 95.41962433]
[-23.50826454 96.22104645]
[-27.04226303 95.76361084]
[-29.87395668 94.31696320]
[-31.76773453 92.24297333]
[-46.70374680 90.85894775]
[-61.63975906 89.47492218]
[-71.90412903 100.96182251]
[-86.79019165 104.16472626]
[-100.54515839 98.06022644]
[-107.97902679 85.18095398]
[-122.91503906 83.79692841]
[-137.85104370 82.41290283]
[-152.78706360 81.02887726]
[-164.87791443 90.84972382]
[-180.00544739 89.23335266]
[-189.29360962 77.64604950]
[-204.22961426 76.26202393]
[-219.16563416 74.87799835]
[-230.15165710 86.00638580]
[-245.72540283 87.41806793]
[-258.53338623 78.44647980]
[-262.52810669 63.32774353]
[-255.82334900 49.20045471]
[-241.58491516 42.73508835]
[-226.53575134 46.98439789]
[-217.78160095 59.94198608]
[-202.84559631 61.32601166]
[-187.90957642 62.71003723]
[-176.65040588 53.02672195]
[-161.48344421 54.21755219]
[-151.40304565 66.09286499]
[-136.46702576 67.47689056]
[-121.53101349 68.86091614]
[-106.59500122 70.24494171]
[-96.92115021 58.95093536]
[-82.27868652 55.47784805]
[-68.23461914 61.36151886]
[-60.25573349 74.53890991]
[-45.31972122 75.92293549]
[-30.38370895 77.30696106]
[-15.41215897 78.23036957]
[-0.41927347 78.69229889]
[14.57361221 79.15422058]
[29.56649780 79.61614990]
[42.52600479 72.27445221]
[56.08135986 80.43306732]
[71.07424927 80.89498901]
[88.29871368 74.70467377]
[102.53438568 79.07717133]
[108.91690826 88.84508514]
[121.54705811 80.75315094]
[134.17720032 72.66120911]
[146.80734253 64.56927490]
[159.43748474 56.47733688]
[172.06762695 48.38539886]
[184.69776917 40.29346085]
[192.19776917 27.30307770]
[192.89053345 12.31908417]
[193.58328247 -2.66491079]
[194.27603149 -17.64890480]
[194.96878052 -32.63290024]
[195.66152954 -47.61689377]
[196.35427856 -62.60088730]
[197.04704285 -77.58488464]
[197.73979187 -92.56887817]
[198.43254089 -107.55287170]
[199.12528992 -122.53686523]
[199.81803894 -137.52085876]
[188.98687744 -149.03005981]
[189.54981995 -164.82431030]
[201.17288208 -175.53318787]
[216.96031189 -174.80328369]
[227.54570007 -163.06765747]
[226.64892578 -147.28883362]
[214.80203247 -136.82810974]
[214.10928345 -121.84411621]
[213.41653442 -106.86012268]
[212.72378540 -91.87612915]
[212.03103638 -76.89213562]
[211.33828735 -61.90813828]
[210.64552307 -46.92414093]
[209.95277405 -31.94014740]
[209.26002502 -16.95615387]
[208.56727600 -1.97215879]
[207.87452698 13.01183605]
[207.18176270 27.99583054]
[218.42120361 37.92936325]
[233.20649719 35.40050507]
[247.99179077 32.87164688]
[262.77706909 30.34278679]
[277.56237793 27.81392860]
[292.34765625 25.28507042]
[307.11303711 22.64244080]
[321.85763550 19.88619804]
[336.60223389 17.12995529]
[341.78244019 2.73854351]
[353.39395142 -7.06299496]
[368.25369263 -9.71885586]
[382.35336304 -4.61434889]
[391.94030762 6.78548050]
[406.68487549 4.02923775]
[421.42947388 1.27299500]
[436.17407227 -1.48324776]
[450.91867065 -4.23949051]
[465.66326904 -6.99573326]
[480.40786743 -9.75197601]
[489.34957886 -22.50673485]
[504.34194946 -25.09191513]
[516.44653320 -16.48877335]
[531.19116211 -19.24501610]
[545.93572998 -22.00125885]
[560.68035889 -24.75750160]
[575.42492676 -27.51374435]
[589.88336182 -36.36756516]
[602.39367676 -24.92516136]
[594.86163330 -9.73619175]
[578.18121338 -12.76914787]
[563.43658447 -10.01290512]
[548.69201660 -7.25666237]
[533.94738770 -4.50041962]
[519.20281982 -1.74417698]
[511.02340698 10.65070248]
[496.10955811 13.65596676]
[483.16412354 4.99262047]
[468.41952515 7.74886322]
[453.67492676 10.50510597]
[438.93032837 13.26134872]
[424.18572998 16.01759148]
[409.44113159 18.77383423]
[394.69653320 21.53007698]
[389.87506104 35.62330627]
[378.57150269 45.47649384]
[363.75576782 48.36794662]
[349.38766479 43.42283630]
[339.35848999 31.87455177]
[324.61389160 34.63079453]
[309.86929321 37.38703537]
[303.86865234 41.70864105]
[294.87652588 40.07036209]
[280.09124756 42.59922028]
[265.30593872 45.12807846]
[250.52064514 47.65693665]
[235.73535156 50.18579483]
[220.95005798 52.71465683]
[215.54307556 56.09479141]
[209.53868103 57.79981995]
[203.43177795 57.76677704]
[197.70481873 56.07286072]
[192.78971863 52.92360306]
[180.15956116 61.01554108]
[167.52941895 69.10748291]
[154.89927673 77.19941711]
[142.26913452 85.29135895]
[129.63899231 93.38329315]
[117.00885010 101.47523499]
[131.24552917 96.75115967]
[145.86813354 100.09473419]
[156.63702393 110.53652191]
[160.42991638 125.04907227]
[156.14709473 139.42465210]
[145.03031921 149.49526978]
[130.30273438 152.34106445]
[116.23443604 147.13694763]
[106.90431976 135.39178467]
[105.01717377 120.51334381]
[103.17385101 135.39965820]
[101.33052826 150.28596497]
[114.94859314 156.90617371]
[125.67745209 167.59121704]
[132.35333252 181.18206787]
[134.25205994 196.20451355]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 199]
[14 198]
[15 197]
[25 79]
[26 78]
[28 76]
[29 75]
[30 74]
[31 73]
[36 72]
[37 71]
[38 70]
[42 66]
[43 65]
[44 64]
[45 63]
[48 60]
[49 59]
[50 58]
[82 187]
[83 186]
[84 185]
[85 184]
[86 183]
[87 182]
[88 181]
[89 118]
[90 117]
[91 116]
[92 115]
[93 114]
[94 113]
[95 112]
[96 111]
[97 110]
[98 109]
[99 108]
[100 107]
[119 176]
[120 175]
[121 174]
[122 173]
[123 172]
[124 171]
[125 169]
[126 168]
[127 167]
[132 162]
[133 161]
[134 160]
[135 159]
[136 158]
[137 157]
[138 156]
[141 153]
[142 152]
[143 151]
[144 150]
[145 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
