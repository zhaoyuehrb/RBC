%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 09:47:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGCUCCAGGGACCGUGGAGGCCUGAGGUCAUCGGCCUGAGAGAAGAACACCGGACCCAGGGGAGAUGUGGAUUUUCAGCAGGAACUUUAUUCCAAUGCUAAUGGCAGACAUCAGGAAGGAGGAGAGGAACCAUUUGUGCAGAUCAUCUAGAAGAACCUGGACCAUUCUUGAUGGAGCUGAAUACAGUGAUCACGUUGUCCUCCAAGGAGCAGGGGUGGGGUGGGGUACUUCUAGGAGUCCUUGGAGAA\
) } def
/len { sequence length } bind def

/coor [
[93.41526031 439.27493286]
[78.86868286 433.53637695]
[71.45950317 419.76547241]
[74.68611908 404.46438599]
[87.02501678 394.85784912]
[87.40046692 379.86254883]
[87.77591705 364.86724854]
[88.15136719 349.87194824]
[88.52681732 334.87664795]
[88.90226746 319.88134766]
[89.27771759 304.88604736]
[89.65316772 289.89074707]
[90.02861786 274.89544678]
[90.40406799 259.90014648]
[90.68566895 244.90278625]
[83.10826874 232.07968140]
[91.01768494 218.37742615]
[91.20542908 203.37860107]
[91.39316559 188.37977600]
[91.58090973 173.38095093]
[91.76864624 158.38212585]
[91.95638275 143.38330078]
[82.03687286 140.30058289]
[73.11295319 134.98423767]
[62.08378983 145.15072632]
[57.18091202 160.19308472]
[42.57875443 163.13014221]
[31.54958916 173.29663086]
[20.52042580 183.46311951]
[9.49126148 193.62960815]
[-1.53790200 203.79609680]
[-9.08605671 218.97706604]
[-25.76328087 215.92640686]
[-27.44855690 199.05642700]
[-11.70439339 192.76693726]
[-0.67522937 182.60044861]
[10.35393429 172.43395996]
[21.38309860 162.26745605]
[32.41226196 152.10096741]
[36.52626038 137.78579712]
[51.91729736 134.12156677]
[62.94646072 123.95507812]
[57.73474503 112.66722870]
[55.87890625 100.37359619]
[57.52630234 88.05030060]
[62.54612350 76.67581177]
[70.53980255 67.15327454]
[80.87262726 60.23878479]
[92.72418213 56.48134995]
[105.15343475 56.17931366]
[109.41216278 41.79657364]
[113.67089081 27.41383171]
[117.92961884 13.03109169]
[105.98880768 8.25789642]
[97.89763641 -1.03874838]
[95.07800293 -12.48641872]
[97.68311310 -23.43606377]
[104.66410828 -31.57275200]
[98.98896790 -45.45773315]
[93.31382751 -59.34271622]
[87.63867950 -73.22769928]
[81.96353912 -87.11268616]
[68.03839111 -88.27832794]
[56.02845383 -95.29164124]
[48.24459457 -106.73725128]
[46.15607452 -120.35351562]
[50.11348343 -133.47930908]
[59.29141235 -143.57409668]
[47.03227997 -153.57530212]
[49.56306458 -168.25332642]
[44.06214905 -182.20825195]
[38.56123734 -196.16317749]
[33.06032181 -210.11810303]
[27.55940628 -224.07302856]
[13.34107018 -230.43515015]
[7.96115303 -244.66580200]
[14.11409283 -258.18161011]
[8.61317730 -272.13653564]
[-3.64595699 -282.13772583]
[-1.11516988 -296.81576538]
[-6.61608458 -310.77069092]
[-12.11699963 -324.72561646]
[-24.37613487 -334.72680664]
[-21.84534645 -349.40484619]
[-27.34626198 -363.35977173]
[-32.84717560 -377.31469727]
[-38.86808395 -391.05328369]
[-45.40049362 -404.55615234]
[-51.93290329 -418.05902100]
[-58.46531296 -431.56188965]
[-71.44026184 -440.61514282]
[-70.01786041 -455.44168091]
[-76.55027008 -468.94454956]
[-83.08267975 -482.44741821]
[-89.61508942 -495.95031738]
[-101.50397491 -500.90811157]
[-106.67286682 -512.26818848]
[-102.85241699 -523.72845459]
[-115.71303558 -532.94342041]
[-114.10517883 -547.75097656]
[-120.46807098 -561.33453369]
[-133.32868958 -570.54949951]
[-131.72084045 -585.35705566]
[-138.08372498 -598.94061279]
[-144.44662476 -612.52423096]
[-158.98153687 -619.31506348]
[-162.59436035 -634.94604492]
[-152.51364136 -647.42639160]
[-136.47244263 -647.18225098]
[-126.77620697 -634.40087891]
[-130.86305237 -618.88708496]
[-124.50015259 -605.30352783]
[-118.13726044 -591.71997070]
[-105.73175812 -583.47662354]
[-106.88449860 -567.69744873]
[-100.52159882 -554.11389160]
[-88.11609650 -545.87054443]
[-89.26884460 -530.09136963]
[-74.35304260 -520.82464600]
[-76.11221313 -502.48272705]
[-69.57980347 -488.97982788]
[-63.04739380 -475.47695923]
[-56.51498413 -461.97409058]
[-44.00727844 -453.88665771]
[-44.96244049 -438.09429932]
[-38.43003082 -424.59143066]
[-31.89761925 -411.08856201]
[-25.36520767 -397.58569336]
[-19.58505249 -411.42727661]
[-5.75491476 -417.23480225]
[8.17450047 -411.66961670]
[14.19541836 -397.93103027]
[8.84652042 -383.91714478]
[-4.79720783 -377.68426514]
[-18.89225197 -382.81561279]
[-13.39133644 -368.86068726]
[-7.89042187 -354.90576172]
[3.97525072 -345.90270996]
[1.83792567 -330.22653198]
[7.33884048 -316.27160645]
[12.83975506 -302.31668091]
[24.70542717 -293.31359863]
[22.56810188 -277.63745117]
[28.06901741 -263.68252563]
[41.78951645 -258.00064087]
[47.56701660 -243.92674255]
[41.51433182 -229.57394409]
[47.01524734 -215.61901855]
[52.51615906 -201.66409302]
[58.01707458 -187.70916748]
[63.51799011 -173.75424194]
[75.38365936 -164.75119019]
[73.24633789 -149.07501221]
[89.29318237 -147.07606506]
[102.21217346 -137.19451904]
[108.41356659 -122.05666351]
[106.11409760 -105.76531219]
[95.84851837 -92.78782654]
[101.52366638 -78.90283966]
[107.19880676 -65.01786041]
[112.87394714 -51.13287735]
[118.54909515 -37.24789429]
[139.65332031 -30.12831306]
[146.14460754 -6.04586029]
[161.07856750 -4.63984299]
[176.01252747 -3.23382568]
[190.94647217 -1.82780838]
[205.88043213 -0.42179111]
[220.81439209 0.98422617]
[235.74835205 2.39024353]
[250.68231201 3.79626060]
[265.61627197 5.20227814]
[276.63717651 -11.42780876]
[302.77175903 -12.27011108]
[317.68695068 -13.86293125]
[332.60214233 -15.45575142]
[347.24188232 -26.64497757]
[362.99282837 -18.88217163]
[377.88690186 -20.66154480]
[392.78100586 -22.44091797]
[407.67507935 -24.22029305]
[420.47283936 -34.47453308]
[435.65179443 -28.26717567]
[437.59713745 -11.98382092]
[424.30767822 -2.37538552]
[409.45446777 -9.32620525]
[394.56036377 -7.54683161]
[379.66629028 -5.76745749]
[364.77218628 -3.98808408]
[357.06362915 5.31307840]
[344.68814087 6.93060827]
[334.19494629 -0.54056054]
[319.27975464 1.05225968]
[304.36456299 2.64507985]
[303.19595337 10.05347538]
[318.01272583 12.39072037]
[329.67602539 21.82298660]
[315.67547607 27.20750999]
[300.85870361 24.87026596]
[299.69006348 32.27865982]
[313.39071655 38.38542938]
[327.09133911 44.49219513]
[340.79199219 50.59896088]
[357.72064209 51.52477264]
[361.51733398 68.04813385]
[346.69073486 76.27056885]
[334.68521118 64.29959869]
[320.98458862 58.19282913]
[307.28393555 52.08606339]
[293.58331299 45.97929764]
[270.43344116 37.87830353]
[264.21026611 20.13623619]
[249.27629089 18.73021889]
[234.34233093 17.32420158]
[219.40838623 15.91818428]
[204.47442627 14.51216698]
[189.54046631 13.10614967]
[174.60650635 11.70013237]
[159.67254639 10.29411602]
[144.73858643 8.88809872]
[132.31236267 17.28982162]
[128.05363464 31.67256165]
[123.79489899 46.05530167]
[119.53617096 60.43804169]
[133.99171448 71.86862183]
[142.51739502 88.20671844]
[143.62593079 106.60214996]
[137.12393188 123.84583282]
[124.14567566 136.92961121]
[106.95520782 143.57104492]
[106.76747131 158.56987000]
[106.57973480 173.56869507]
[106.39199066 188.56752014]
[106.20425415 203.56634521]
[106.01651001 218.56517029]
[113.58048248 232.46109009]
[105.68449402 245.09053040]
[108.70004272 253.68475342]
[105.39936829 260.27560425]
[105.02391815 275.27090454]
[104.64846802 290.26620483]
[104.27301788 305.26150513]
[103.89756775 320.25680542]
[103.52211761 335.25210571]
[103.14666748 350.24740601]
[102.77121735 365.24270630]
[102.39576721 380.23800659]
[102.02031708 395.23330688]
[113.86300659 405.44528198]
[116.31984711 420.88867188]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 248]
[6 247]
[7 246]
[8 245]
[9 244]
[10 243]
[11 242]
[12 241]
[13 240]
[14 239]
[15 237]
[17 235]
[18 234]
[19 233]
[20 232]
[21 231]
[22 230]
[24 42]
[25 41]
[27 39]
[28 38]
[29 37]
[30 36]
[31 35]
[50 224]
[51 223]
[52 222]
[53 221]
[58 162]
[59 161]
[60 160]
[61 159]
[62 158]
[68 153]
[70 151]
[71 150]
[72 149]
[73 148]
[74 147]
[77 144]
[78 143]
[80 141]
[81 140]
[82 139]
[84 137]
[85 136]
[86 135]
[87 128]
[88 127]
[89 126]
[90 125]
[92 123]
[93 122]
[94 121]
[95 120]
[98 118]
[100 116]
[101 115]
[103 113]
[104 112]
[105 111]
[164 220]
[165 219]
[166 218]
[167 217]
[168 216]
[169 215]
[170 214]
[171 213]
[172 212]
[174 194]
[175 193]
[176 192]
[178 189]
[179 188]
[180 187]
[181 186]
[200 210]
[201 209]
[202 208]
[203 207]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
