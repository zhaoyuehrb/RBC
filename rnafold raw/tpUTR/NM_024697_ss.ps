%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu Sep 10 11:48:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCCAAAUAGGAGUAAUUGUACUGCAAUAAUUUUUCAAAAAACAAAAAACAAAACAAACAAAAGAGAACUAUGCAGUGUUUAUUUAUAGUUUAAAGUAUAUCUGAAGAGCCAGGACUUUUGAUAGUGAAUUGAAAAGGUUAUAAAAAAGUGGGGGAGGUUUGGGGGUGGGAGGGAGGGAGUGGUAUUUUCUCCAAAUUAAAGCAUUCCUCUUGAA\
) } def
/len { sequence length } bind def

/coor [
[88.31240845 131.08242798]
[84.86882782 145.68179321]
[81.42523956 160.28117371]
[77.98165894 174.88053894]
[74.53807831 189.47991943]
[81.71800232 203.82662964]
[74.84741211 218.32403564]
[59.19684601 221.85095215]
[46.77206421 211.70184326]
[47.10430527 195.66223145]
[59.93870163 186.03633118]
[63.38228607 171.43696594]
[66.82586670 156.83758545]
[70.26945496 142.23820496]
[73.71303558 127.63883972]
[68.70532227 122.05557251]
[61.18009949 135.03135681]
[46.51401138 131.88400269]
[44.97544479 116.96311951]
[58.68989944 110.88904572]
[53.68218994 105.30578613]
[38.79561996 107.14699554]
[23.90905190 108.98820496]
[9.02248192 110.82942200]
[-5.86408663 112.67063141]
[-20.75065613 114.51184082]
[-35.63722610 116.35305023]
[-40.19081497 127.98938751]
[-49.20612335 136.53721619]
[-60.93120956 140.41996765]
[-73.12313843 138.95950317]
[-83.47700500 132.49371338]
[-90.06167603 122.30083466]
[-104.99530792 123.71029663]
[-119.92894745 125.11975861]
[-134.86257935 126.52922058]
[-149.79621887 127.93869019]
[-151.63130188 142.88681030]
[-156.63732910 157.09082031]
[-164.58013916 169.88636780]
[-175.08822632 180.67495728]
[-187.67013550 188.95202637]
[-201.73736572 194.33041382]
[-216.63197327 196.55857849]
[-231.65731812 195.53228760]
[-246.11062622 191.29956055]
[-259.31588745 184.05834961]
[-270.65548706 174.14736938]
[-279.59902954 162.03015137]
[-285.72821045 148.27343750]
[-288.75637817 133.52066040]
[-288.54190063 118.46184540]
[-285.09475708 103.80130005]
[-278.57623291 90.22474670]
[-269.29119873 78.36716461]
[-257.67391968 68.78316498]
[-244.26777649 61.92101288]
[-229.69978333 58.10165405]
[-214.65130615 57.50373077]
[-199.82620239 60.15521240]
[-185.91786194 65.93207550]
[-173.57681274 74.56414032]
[-163.38024902 85.64765167]
[-155.80511475 98.66423035]
[-151.20567322 113.00505066]
[-136.27203369 111.59558868]
[-121.33840942 110.18612671]
[-106.40476990 108.77666473]
[-91.47113800 107.36720276]
[-83.19212341 91.76418304]
[-67.06069946 84.19080353]
[-49.45942688 87.85222626]
[-37.47843552 101.46648407]
[-22.59186745 99.62527466]
[-7.70529842 97.78406525]
[7.18127108 95.94284821]
[22.06784058 94.10163879]
[36.95441055 92.26042938]
[51.84097672 90.41921234]
[65.50624084 80.49637604]
[79.71644592 77.69441223]
[91.57594299 81.12221527]
[98.86572266 88.86240387]
[98.21443939 73.87654877]
[97.56316376 58.89069748]
[96.91188812 43.90484238]
[96.26061249 28.91898727]
[95.60932922 13.93313217]
[87.28014374 0.48191604]
[94.45755005 -12.56929588]
[93.80627441 -27.55515099]
[93.15499878 -42.54100418]
[84.82580566 -55.99222183]
[92.00321198 -69.04343414]
[91.35193634 -84.02928925]
[90.70066071 -99.01514435]
[90.04938507 -114.00099945]
[89.39810181 -128.98684692]
[86.59806824 -133.38156128]
[85.83678436 -137.95382690]
[86.84112549 -141.89837646]
[89.05824280 -144.63459778]
[89.05824280 -159.63459778]
[89.05824280 -174.63459778]
[89.05824280 -189.63459778]
[77.70710754 -200.63128662]
[77.54000854 -216.43469238]
[88.65609741 -227.66893005]
[104.46038818 -227.66893005]
[115.57647705 -216.43469238]
[115.40937805 -200.63128662]
[104.05824280 -189.63459778]
[104.05824280 -174.63459778]
[104.05824280 -159.63459778]
[104.05824280 -144.63459778]
[104.38395691 -129.63812256]
[105.03523254 -114.65227509]
[105.68651581 -99.66641998]
[106.33779144 -84.68056488]
[106.98906708 -69.69470978]
[115.27167511 -57.31538391]
[108.14085388 -43.19228363]
[108.79212952 -28.20642853]
[109.44340515 -13.22057343]
[117.72600555 -0.84124553]
[110.59518433 13.28185463]
[111.24646759 28.26770973]
[111.89774323 43.25356293]
[112.54901886 58.23941803]
[113.20029449 73.22527313]
[113.85157776 88.21112823]
[120.46463013 74.74756622]
[120.20520020 59.74980927]
[123.88603973 45.20843887]
[131.24975586 32.14031601]
[141.78138733 21.45927620]
[154.74449158 13.91223049]
[169.23257446 10.02693462]
[184.23249817 10.07508278]
[198.69532776 14.05330658]
[211.60972595 21.68341446]
[222.07257080 32.43184280]
[229.35223389 45.54697037]
[232.93965149 60.11167145]
[232.58395386 75.10745239]
[228.31001282 89.48567963]
[220.41671753 102.24090576]
[209.45600891 112.48117065]
[196.19438171 119.49038696]
[181.55918884 122.77841187]
[166.57385254 122.11531067]
[152.28627014 117.54745483]
[139.69471741 109.39353943]
[124.77086639 107.88392639]
[137.14402771 116.36360931]
[149.51718140 124.84328461]
[161.89033508 133.32296753]
[174.26350403 141.80264282]
[186.63665771 150.28233337]
[201.97894287 147.58935547]
[214.40628052 156.36521912]
[216.87907410 171.00833130]
[229.25222778 179.48800659]
[241.85707092 173.91677856]
[255.46095276 175.28927612]
[266.52243042 183.14071655]
[272.21502686 195.33380127]
[271.14920044 208.63941956]
[283.39831543 217.29733276]
[295.64739990 225.95526123]
[310.27664185 221.12910461]
[324.77310181 225.78805542]
[333.64163208 237.94590759]
[333.65048218 252.81660461]
[345.89956665 261.47451782]
[358.14868164 270.13244629]
[370.39776611 278.79037476]
[382.64688110 287.44827271]
[394.89596558 296.10620117]
[407.14508057 304.76409912]
[419.39419556 313.42202759]
[431.64328003 322.07995605]
[448.06753540 326.28472900]
[448.57376099 343.23110962]
[432.42980957 348.40878296]
[422.98535156 334.32904053]
[410.73626709 325.67114258]
[398.48715210 317.01321411]
[386.23806763 308.35528564]
[373.98895264 299.69738770]
[361.73986816 291.03945923]
[349.49075317 282.38153076]
[337.24166870 273.72363281]
[324.99255371 265.06570435]
[310.97125244 270.01962280]
[296.55093384 265.71643066]
[287.32165527 253.60551453]
[286.98947144 238.20436096]
[274.74038696 229.54644775]
[262.49127197 220.88851929]
[247.12106323 226.65927124]
[231.18061829 222.08404541]
[221.00863647 208.77604675]
[220.77255249 191.86117554]
[208.39939880 183.38148499]
[193.85055542 186.35919189]
[181.18161011 177.93585205]
[178.15696716 162.65548706]
[165.78381348 154.17581177]
[153.41065979 145.69612122]
[141.03750610 137.21644592]
[128.66435242 128.73677063]
[116.29119110 120.25708008]
[109.29649353 122.96341705]
[114.70894623 136.95289612]
[100.71939087 142.36512756]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 15]
[2 14]
[3 13]
[4 12]
[5 11]
[21 79]
[22 78]
[23 77]
[24 76]
[25 75]
[26 74]
[27 73]
[33 69]
[34 68]
[35 67]
[36 66]
[37 65]
[83 131]
[84 130]
[85 129]
[86 128]
[87 127]
[88 126]
[90 124]
[91 123]
[92 122]
[94 120]
[95 119]
[96 118]
[97 117]
[98 116]
[102 115]
[103 114]
[104 113]
[105 112]
[154 213]
[155 212]
[156 211]
[157 210]
[158 209]
[159 208]
[162 205]
[163 204]
[168 200]
[169 199]
[170 198]
[174 194]
[175 193]
[176 192]
[177 191]
[178 190]
[179 189]
[180 188]
[181 187]
[182 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
