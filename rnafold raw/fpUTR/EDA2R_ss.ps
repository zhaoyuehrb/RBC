%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:04:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGACGGGAGGGGGCUGGGUGAGAUGUGUGCUCUGCGCUGAGGUGGAUUUGUACCGGAGUCCCAUUUGGGAGCAAGAGCCAUCUACUCGUCCGUUACCGGCCUUCCCACC\
) } def
/len { sequence length } bind def

/coor [
[104.85662842 490.64114380]
[90.32762146 485.45349121]
[80.92781067 473.22045898]
[79.65662384 457.84558105]
[86.91970825 444.23486328]
[100.39942932 436.73150635]
[101.24805450 421.75552368]
[102.09667969 406.77954102]
[102.94530487 391.80355835]
[103.79393005 376.82760620]
[104.64256287 361.85162354]
[105.49118805 346.87564087]
[105.91566467 331.88165283]
[105.91566467 316.88165283]
[94.96920776 301.04782104]
[104.92714691 283.63327026]
[104.07852173 268.65728760]
[103.22989655 253.68130493]
[102.38127136 238.70533752]
[101.53264618 223.72935486]
[100.68402100 208.75338745]
[99.83539581 193.77740479]
[98.98677063 178.80143738]
[97.92630005 163.83897400]
[89.13752747 151.81372070]
[95.67662048 137.40708923]
[94.40453339 122.46112823]
[93.13243866 107.51515961]
[89.31678772 100.26985931]
[92.04196167 92.12923431]
[91.19333649 77.15325928]
[90.34471130 62.17728424]
[89.49608612 47.20130539]
[88.64746094 32.22533035]
[87.58699799 17.26286507]
[86.31491089 2.31690264]
[77.43515015 -10.77738571]
[84.06522369 -24.11497688]
[82.79313660 -39.06093979]
[73.91337585 -52.15522766]
[80.54344940 -65.49282074]
[79.27136230 -80.43878174]
[77.99927521 -95.38474274]
[76.72718811 -110.33070374]
[75.45509338 -125.27666473]
[74.18300629 -140.22262573]
[72.69954681 -155.14909363]
[71.00501251 -170.05307007]
[69.31047821 -184.95704651]
[67.61595154 -199.86102295]
[55.09519196 -209.50500488]
[53.14387512 -225.18835449]
[62.91968155 -237.60646057]
[78.62280273 -239.39184570]
[90.93685150 -229.48529053]
[92.55611420 -213.76417542]
[82.51992798 -201.55555725]
[84.21446228 -186.65158081]
[85.90899658 -171.74760437]
[87.60352325 -156.84362793]
[91.54359436 -150.46000671]
[89.12896729 -141.49472046]
[90.40106201 -126.54875183]
[91.67314911 -111.60279083]
[92.94523621 -96.65682983]
[94.21732330 -81.71086884]
[95.48941803 -66.76490784]
[104.27819061 -54.73965454]
[97.73909760 -40.33302689]
[99.01118469 -25.38706589]
[107.79996490 -13.36181259]
[101.26087189 1.04481375]
[102.53295898 15.99077606]
[106.29080200 22.48334122]
[103.62343597 31.37670708]
[104.47206116 46.35268021]
[105.32068634 61.32865524]
[106.16931152 76.30463409]
[107.01793671 91.28060913]
[108.07840729 106.24307251]
[109.35049438 121.18903351]
[110.62258148 136.13499451]
[119.50234222 149.22929382]
[112.87226868 162.56687927]
[116.76729584 170.99513245]
[113.96274567 177.95280457]
[114.81137085 192.92878723]
[115.65999603 207.90475464]
[116.50862122 222.88073730]
[117.35724640 237.85670471]
[118.20587158 252.83268738]
[119.05449677 267.80865479]
[119.90312195 282.78463745]
[128.55700684 289.67404175]
[131.84289551 300.00393677]
[128.88275146 310.20147705]
[120.91566467 316.88165283]
[120.91566467 331.88165283]
[123.99327087 338.00161743]
[123.48184204 343.84838867]
[120.46716309 347.72427368]
[119.61853790 362.70025635]
[118.76990509 377.67620850]
[117.92127991 392.65219116]
[117.07265472 407.62817383]
[116.22402954 422.60415649]
[115.37540436 437.58010864]
[127.92118835 446.55825806]
[133.60018921 460.90231323]
[130.60026550 476.03521729]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 107]
[7 106]
[8 105]
[9 104]
[10 103]
[11 102]
[12 101]
[13 98]
[14 97]
[16 93]
[17 92]
[18 91]
[19 90]
[20 89]
[21 88]
[22 87]
[23 86]
[24 84]
[26 82]
[27 81]
[28 80]
[30 79]
[31 78]
[32 77]
[33 76]
[34 75]
[35 73]
[36 72]
[38 70]
[39 69]
[41 67]
[42 66]
[43 65]
[44 64]
[45 63]
[46 62]
[47 60]
[48 59]
[49 58]
[50 57]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
