%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGCGCGCGGCCAGCCCAGCUCGGGCCCGCAGCACCGGGAGCAGCCCGCCGGCCAAGCGAGCGCGGGCCGGGGCCGGGGCCGGGGCCUGGGGGCGCCGCCCCCGGGAGUCUUUCUGCGGCCCCUGAGGAGCGAGGGCGACGGCGAGGCUGACCGGGGCCGAAACC\
) } def
/len { sequence length } bind def

/coor [
[83.34300995 599.28076172]
[88.75363159 584.83331299]
[101.12986755 575.62286377]
[100.00222015 560.66534424]
[98.87457275 545.70776367]
[95.22036743 539.24652100]
[97.86908722 530.45867920]
[89.42621613 518.18811035]
[96.37278748 503.97348022]
[95.52670288 488.99737549]
[94.68061066 474.02124023]
[86.23773956 461.75067139]
[93.18431091 447.53604126]
[92.33821869 432.55993652]
[91.49213409 417.58380127]
[90.64604950 402.60769653]
[89.79995728 387.63156128]
[78.55411530 377.93276978]
[77.48271942 362.75692749]
[87.73195648 351.02700806]
[86.88586426 336.05087280]
[83.35385132 329.52203369]
[86.16741180 320.78561401]
[85.60318756 305.79620361]
[75.47028351 291.49060059]
[84.14935303 275.27252197]
[83.30326843 260.29641724]
[82.45717621 245.32029724]
[81.61109161 230.34417725]
[70.87672424 223.17172241]
[66.17569733 210.93896484]
[69.43963623 198.04588318]
[79.69087219 189.26988220]
[79.12664795 174.28048706]
[70.91608429 161.85325623]
[78.12882233 147.77182007]
[77.56459045 132.78244019]
[67.00799561 122.12606812]
[52.02457809 121.42088318]
[37.04116440 120.71569061]
[24.25618362 130.40711975]
[8.74394417 126.31444550]
[2.40410876 111.57721710]
[10.10005569 97.50057220]
[25.92811394 94.88291168]
[37.74634933 105.73227692]
[52.72976303 106.43746948]
[67.71318054 107.14265442]
[69.69464111 96.42239380]
[74.85311127 87.76773834]
[63.61825943 77.82902527]
[52.38340378 67.89031219]
[41.14854813 57.95159531]
[29.91369438 48.01288223]
[18.67883873 38.07416916]
[5.75266075 38.07608032]
[-3.40435696 29.53096390]
[-4.23867941 17.43630981]
[-15.28459167 7.28801823]
[-31.39945030 4.24773026]
[-36.56782532 -11.31568623]
[-25.47293663 -23.39192200]
[-9.52825356 -19.55798149]
[-5.13629913 -3.75789356]
[5.90961266 6.39039850]
[23.20394325 9.25965118]
[28.61755180 26.83931541]
[39.85240936 36.77802658]
[51.08726120 46.71674347]
[62.32211685 56.65545654]
[73.55697632 66.59416962]
[84.79183197 76.53288269]
[89.46169281 74.09752655]
[94.50537109 72.58097076]
[99.74395752 72.03701782]
[104.99162292 72.48495483]
[110.06222534 73.90889740]
[119.01541138 61.87392807]
[127.96859741 49.83895874]
[136.92178345 37.80399323]
[145.87496948 25.76902580]
[154.82815552 13.73405743]
[163.78134155 1.69908977]
[165.81050110 -13.99145126]
[179.61502075 -19.58470535]
[188.56820679 -31.61967278]
[196.71015930 -44.21763229]
[204.00559998 -57.32398605]
[211.30104065 -70.43034363]
[218.59649658 -83.53669739]
[225.89193726 -96.64305115]
[233.18737793 -109.74940491]
[240.48281860 -122.85575867]
[247.77825928 -135.96211243]
[255.07369995 -149.06846619]
[257.49423218 -165.84873962]
[274.28878784 -168.16804504]
[281.16665649 -152.67185974]
[268.18005371 -141.77302551]
[260.88461304 -128.66667175]
[253.58917236 -115.56031799]
[246.29373169 -102.45396423]
[238.99829102 -89.34761047]
[231.70285034 -76.24125671]
[224.40740967 -63.13489914]
[217.11195374 -50.02854538]
[209.81651306 -36.92219162]
[224.30487061 -40.80649185]
[237.96658325 -34.61314392]
[244.59362793 -21.15646553]
[241.17462158 -6.55131674]
[229.26318359 2.56557155]
[214.27200317 2.05138898]
[203.01322937 -7.86021423]
[200.60317993 -22.66648674]
[191.64999390 -10.63151932]
[190.26123047 4.19820118]
[175.81631470 10.65227699]
[166.86312866 22.68724442]
[157.90994263 34.72221375]
[148.95675659 46.75717926]
[140.00357056 58.79214859]
[131.05038452 70.82711792]
[122.09719086 82.86208344]
[129.21002197 98.67678070]
[125.70564270 116.44487762]
[112.00655365 129.43722534]
[92.55397797 132.21821594]
[93.11820221 147.20759583]
[101.36911774 160.70695496]
[94.11603546 173.71626282]
[94.68025970 188.70564270]
[107.71490479 200.34181213]
[108.31090546 217.46713257]
[96.58721161 229.49809265]
[97.43329620 244.47421265]
[98.27938843 259.45031738]
[99.12547302 274.42645264]
[108.22393036 283.60818481]
[108.59774017 296.12738037]
[100.59257507 305.23199463]
[101.15679932 320.22137451]
[101.86198425 335.20480347]
[102.70807648 350.18090820]
[114.21325684 360.68179321]
[114.85797119 375.88177490]
[104.77607727 386.78549194]
[105.62216187 401.76159668]
[106.46825409 416.73773193]
[107.31433868 431.71383667]
[108.16043091 446.68994141]
[116.66381836 460.03173828]
[109.65673065 473.17517090]
[110.50281525 488.15127563]
[111.34890747 503.12741089]
[119.85230255 516.46917725]
[112.84520721 529.61260986]
[113.83212280 544.58013916]
[114.95977020 559.53765869]
[116.08742523 574.49523926]
[129.70468140 581.74603271]
[137.22021484 595.21893311]
[136.23587036 610.61486816]
[127.06572723 623.02099609]
[112.63594818 628.47857666]
[97.55103302 625.24609375]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 160]
[4 159]
[5 158]
[7 157]
[9 155]
[10 154]
[11 153]
[13 151]
[14 150]
[15 149]
[16 148]
[17 147]
[20 144]
[21 143]
[23 142]
[24 141]
[26 138]
[27 137]
[28 136]
[29 135]
[33 132]
[34 131]
[36 129]
[37 128]
[38 48]
[39 47]
[40 46]
[50 72]
[51 71]
[52 70]
[53 69]
[54 68]
[55 67]
[58 65]
[59 64]
[77 124]
[78 123]
[79 122]
[80 121]
[81 120]
[82 119]
[83 118]
[85 116]
[86 115]
[87 107]
[88 106]
[89 105]
[90 104]
[91 103]
[92 102]
[93 101]
[94 100]
[95 99]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
