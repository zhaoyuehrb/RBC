%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:30:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGAGCCGAGCCCGCCGCGGUCACAGCCACCCGCGGGAAGCUCGUGGCCGGGACCCCGAGGCGGGAGCGCGGGCUGGGCCGGGCUGGGCUACGCGCACGGGCUCGGCCGCCGCCCCUGCCGGUUGCAUACCCUGUCCUGAGGGCGCGGCACGGAGUGCAUGCGGGCCGCUGCC\
) } def
/len { sequence length } bind def

/coor [
[311.29049683 102.13575745]
[296.30560303 102.80872345]
[281.32070923 103.48169708]
[266.33581543 104.15467072]
[259.77279663 107.60751343]
[251.07638550 104.70278168]
[236.08181763 105.10665131]
[221.08726501 105.51052094]
[208.57292175 113.58769226]
[194.56942749 106.22476196]
[179.57487488 106.62863159]
[164.58030701 107.03250122]
[149.58573914 107.43637085]
[134.59118652 107.84024811]
[119.59661865 108.24411774]
[104.60205841 108.64798737]
[89.81967163 111.19375610]
[79.08588409 122.81685638]
[64.59056854 119.39118958]
[50.32472229 124.02644348]
[36.05887604 128.66169739]
[21.79302788 133.29695129]
[7.52717972 137.93220520]
[-6.73866796 142.56745911]
[-21.00451469 147.20271301]
[-35.22818375 151.96583557]
[-49.40852356 156.85643005]
[-63.58886719 161.74702454]
[-70.56157684 175.67608643]
[-85.01213074 180.43385315]
[-98.24839783 173.70059204]
[-112.42874146 178.59118652]
[-122.76698303 191.32118225]
[-138.91569519 188.46617126]
[-144.26246643 172.96313477]
[-133.30699158 160.76026917]
[-117.31933594 164.41084290]
[-103.13899231 159.52024841]
[-96.86750031 146.05905151]
[-82.55628204 140.89729309]
[-68.47946167 147.56668091]
[-54.29911804 142.67608643]
[-40.11877823 137.78549194]
[-34.80280304 132.61480713]
[-25.63977051 132.93687439]
[-11.37392235 128.30162048]
[2.89192486 123.66635895]
[17.15777206 119.03110504]
[31.42362022 114.39585114]
[45.68946838 109.76059723]
[59.95531464 105.12534332]
[69.66871643 93.83378601]
[85.18441772 96.92790985]
[86.32441711 89.51505280]
[88.60441589 74.68934631]
[89.74442291 67.27649689]
[77.53051758 58.56899643]
[65.31661224 49.86149597]
[53.10270691 41.15399551]
[36.69562912 36.88267517]
[36.25809479 19.93437386]
[52.42293167 14.82218266]
[61.81020737 28.94009209]
[74.02410889 37.64759064]
[86.23801422 46.35509109]
[98.45191956 55.06259155]
[104.27453613 64.63195801]
[107.13774872 74.70085907]
[107.06051636 84.59261322]
[104.19818878 93.65341949]
[119.19274902 93.24954987]
[134.18731689 92.84568024]
[149.18186951 92.44181061]
[164.17643738 92.03794098]
[179.17100525 91.63407135]
[194.16555786 91.23020172]
[207.75241089 83.12413788]
[220.68339539 90.51596069]
[235.67794800 90.11209106]
[250.67251587 89.70822144]
[265.66284180 89.16977692]
[280.64773560 88.49680328]
[295.63262939 87.82382965]
[310.61752319 87.15085602]
[319.72830200 72.91885376]
[335.36715698 66.96902466]
[351.31430054 71.45623016]
[361.35250854 84.42575836]
[376.32290649 83.48390198]
[391.29333496 82.54204559]
[401.72039795 70.96993256]
[416.91592407 70.22801971]
[427.88391113 80.23995972]
[441.17102051 71.65140533]
[454.35900879 78.57428741]
[469.32940674 77.63243103]
[484.29980469 76.69057465]
[499.27020264 75.74871826]
[512.55731201 67.16016388]
[525.74530029 74.08304596]
[539.03240967 65.49449158]
[552.22039795 72.41737366]
[567.19079590 71.47550964]
[582.16119385 70.53365326]
[597.13159180 69.59179688]
[610.41870117 61.00324631]
[623.60668945 67.92612457]
[632.72485352 58.77257919]
[645.23516846 58.31378555]
[654.39215088 66.25007629]
[669.37701416 65.57710266]
[684.36193848 64.90412903]
[699.34680176 64.23115540]
[714.33172607 63.55818558]
[729.30993652 62.75073624]
[744.28033447 61.80887985]
[759.25079346 60.86701965]
[774.22119141 59.92516327]
[782.62219238 56.25258255]
[789.46832275 59.10322189]
[802.90747070 50.75457001]
[815.96905518 57.91307068]
[830.95391846 57.24010086]
[836.76892090 53.98191071]
[842.49169922 54.14971542]
[846.48681641 56.82172775]
[861.48620605 56.68709183]
[876.48559570 56.55245209]
[888.70806885 46.16055679]
[904.42504883 49.37849808]
[911.57989502 63.73773956]
[904.68395996 78.22310638]
[889.02728271 81.72266388]
[876.62023926 71.55184937]
[861.62084961 71.68648529]
[846.62145996 71.82112122]
[831.62689209 72.22499847]
[816.64202881 72.89796448]
[804.27465820 81.19848633]
[790.14129639 74.08811951]
[775.16302490 74.89556122]
[760.19262695 75.83742523]
[745.22222900 76.77928162]
[730.25183105 77.72113800]
[723.75183105 81.29123688]
[715.00469971 78.54308319]
[700.01977539 79.21604919]
[685.03491211 79.88902283]
[670.04998779 80.56199646]
[655.06512451 81.23497009]
[640.82751465 91.47016144]
[624.54858398 82.89653015]
[612.33221436 91.41770935]
[598.07348633 84.56219482]
[583.10308838 85.50405884]
[568.13269043 86.44591522]
[553.16229248 87.38777161]
[540.94592285 95.90895844]
[526.68719482 89.05344391]
[514.47082520 97.57463074]
[500.21206665 90.71911621]
[485.24166870 91.66097260]
[470.27127075 92.60282898]
[455.30087280 93.54469299]
[443.08453369 102.06587219]
[428.82577515 95.21035767]
[419.19909668 106.51801300]
[404.03042603 107.68644714]
[392.23516846 97.51244354]
[377.26477051 98.45430756]
[362.29437256 99.39616394]
[356.20571899 111.29843903]
[344.93594360 118.69010925]
[331.37701416 119.54620361]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 84]
[2 83]
[3 82]
[4 81]
[6 80]
[7 79]
[8 78]
[10 76]
[11 75]
[12 74]
[13 73]
[14 72]
[15 71]
[16 70]
[17 53]
[19 51]
[20 50]
[21 49]
[22 48]
[23 47]
[24 46]
[25 45]
[26 43]
[27 42]
[28 41]
[31 38]
[32 37]
[56 66]
[57 65]
[58 64]
[59 63]
[88 171]
[89 170]
[90 169]
[93 166]
[95 164]
[96 163]
[97 162]
[98 161]
[100 159]
[102 157]
[103 156]
[104 155]
[105 154]
[107 152]
[110 150]
[111 149]
[112 148]
[113 147]
[114 146]
[115 144]
[116 143]
[117 142]
[118 141]
[120 140]
[122 138]
[123 137]
[126 136]
[127 135]
[128 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
