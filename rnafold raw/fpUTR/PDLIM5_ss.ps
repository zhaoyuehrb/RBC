%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGUCCUGGGUCGGGGGUGGGGCGAGGGAGAGCCAGGAGGCGGAAGUUCCCGCGGGCGGUGGGGACGGCGCCCUCACCGCGAGUCACUUGUCAGCCCUUGUCUGAGGCGGAGGCAGCCCCGCGCCGCGCCGGACCCGAGCAUAUUUCAUUUUCUGUCAUUGGACUUUGAGCCAUUAGAACC\
) } def
/len { sequence length } bind def

/coor [
[388.25961304 448.83886719]
[378.90725708 437.11138916]
[369.55493164 425.38391113]
[360.20257568 413.65643311]
[348.20578003 411.98419189]
[340.31976318 402.26773071]
[341.20565796 389.38302612]
[332.05712891 377.49588013]
[322.90859985 365.60873413]
[313.76007080 353.72155762]
[304.61154175 341.83441162]
[295.46301270 329.94726562]
[281.56900024 324.58020020]
[279.28387451 308.92486572]
[270.13534546 297.03771973]
[256.24130249 291.67065430]
[253.95619202 276.01535034]
[244.80766296 264.12817383]
[235.65913391 252.24102783]
[226.51060486 240.35388184]
[212.61657715 234.98680115]
[210.33146667 219.33149719]
[201.18293762 207.44433594]
[192.03440857 195.55718994]
[185.44609070 192.16526794]
[182.83267212 183.38497925]
[173.89068604 171.34169006]
[164.94869995 159.29840088]
[152.04869080 159.21292114]
[141.39907837 151.59283447]
[137.02613831 139.04310608]
[140.74140930 126.08048248]
[132.00863647 113.88464355]
[123.27584839 101.68879700]
[124.45940399 111.89793396]
[120.89329529 122.98564148]
[112.21949768 132.71757507]
[99.11309052 138.77752686]
[83.26647949 139.23059082]
[67.17333221 132.95249939]
[52.18227005 132.43475342]
[37.19120789 131.91700745]
[22.20014572 131.39926147]
[10.81820965 142.36407471]
[-4.98154688 141.98559570]
[-15.82540894 130.48837280]
[-15.27990627 114.69350433]
[-3.66867495 103.97180176]
[12.11954689 104.68426514]
[22.71788597 116.40820312]
[37.70895004 116.92594910]
[52.70001221 117.44368744]
[67.69107056 117.96143341]
[70.65065765 111.07007599]
[76.56983948 97.28735352]
[79.52942657 90.39599609]
[68.83167267 79.88132477]
[58.13392639 69.36666107]
[47.43618011 58.85199738]
[36.73843002 48.33733368]
[26.04068184 37.82266998]
[15.34293270 27.30800438]
[4.64518452 16.79333878]
[-6.05256367 6.27867413]
[-21.59993172 7.95597696]
[-34.55919647 -0.79567951]
[-38.81138611 -15.84403133]
[-32.34875107 -30.08370590]
[-18.22274590 -36.79116440]
[-3.10324144 -32.79935074]
[5.87079668 -19.99307823]
[4.46210098 -4.41907454]
[15.15984917 6.09559059]
[25.85759735 16.61025620]
[36.55534744 27.12491989]
[47.25309372 37.63958359]
[57.95084381 48.15425110]
[68.64859009 58.66891479]
[79.34634399 69.18357849]
[90.04409027 79.69824219]
[97.35604858 78.02933502]
[93.00888824 63.67307663]
[88.66172791 49.31681824]
[79.67577362 37.30629349]
[84.84814453 23.22628784]
[99.47218323 19.88902283]
[110.24063110 30.33127785]
[107.35537720 45.05011368]
[109.66767120 59.87081909]
[111.97996521 74.69152069]
[119.29192352 73.02261353]
[124.36812592 58.90765381]
[121.75749969 43.30331802]
[133.34535217 33.94538879]
[138.42155457 19.83042336]
[143.49774170 5.71545935]
[148.45193481 -8.44279099]
[141.24809265 -22.50977707]
[146.18049622 -37.52466583]
[160.32286072 -44.57938766]
[175.28475952 -39.48850250]
[182.18957520 -25.27234268]
[176.94078064 -10.36510277]
[162.65242004 -3.61098385]
[163.47651672 3.75325060]
[157.61271667 10.79165554]
[152.53651428 24.90662003]
[147.46032715 39.02158356]
[150.43402100 53.61632156]
[138.48309326 63.98384857]
[133.40689087 78.09881592]
[135.47169495 92.95601654]
[144.20446777 105.15186310]
[152.93725586 117.34770203]
[170.23417664 119.87799072]
[180.16471863 133.85247803]
[176.99198914 150.35641479]
[185.93397522 162.39970398]
[194.87596130 174.44299316]
[203.92155457 186.40866089]
[213.07008362 198.29580688]
[222.21861267 210.18296814]
[236.76699829 216.40028381]
[238.39775085 231.20535278]
[247.54627991 243.09249878]
[256.69482422 254.97966003]
[265.84335327 266.86682129]
[280.39172363 273.08413696]
[282.02249146 287.88919067]
[291.17102051 299.77633667]
[305.71939087 305.99368286]
[307.35015869 320.79873657]
[316.49868774 332.68588257]
[325.64721680 344.57302856]
[334.79574585 356.46017456]
[343.94427490 368.34735107]
[353.09280396 380.23449707]
[370.26660156 386.84521484]
[371.93005371 404.30410767]
[381.28240967 416.03158569]
[390.63473511 427.75903320]
[399.98709106 439.48651123]
[409.56756592 436.74359131]
[419.49954224 437.01855469]
[428.85769653 440.26791382]
[436.77545166 446.17193604]
[442.52539062 454.16586304]
[445.58596802 463.49411011]
[445.68881226 473.28146362]
[442.84222412 482.61538696]
[437.32858276 490.63092041]
[445.63522339 503.12091064]
[453.94183350 515.61090088]
[462.24847412 528.10089111]
[470.55508423 540.59088135]
[480.01019287 541.20721436]
[487.99536133 546.04693604]
[492.77319336 553.90844727]
[493.37332153 562.95019531]
[489.78704834 571.12170410]
[497.43603516 584.02496338]
[505.08502197 596.92816162]
[520.54669189 598.23828125]
[532.26330566 608.41180420]
[535.72961426 623.53680420]
[529.61267090 637.79730225]
[516.26470947 645.70996094]
[500.81814575 644.23217773]
[489.21258545 633.93218994]
[485.91055298 618.77050781]
[492.18179321 604.57714844]
[484.53280640 591.67395020]
[476.88381958 578.77069092]
[458.07388306 570.30999756]
[458.06509399 548.89752197]
[449.75845337 536.40753174]
[441.45184326 523.91754150]
[433.14523315 511.42752075]
[424.83859253 498.93753052]
[404.56951904 499.66531372]
[387.83920288 487.95642090]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 142]
[2 141]
[3 140]
[4 139]
[7 137]
[8 136]
[9 135]
[10 134]
[11 133]
[12 132]
[14 130]
[15 129]
[17 127]
[18 126]
[19 125]
[20 124]
[22 122]
[23 121]
[24 120]
[26 119]
[27 118]
[28 117]
[32 114]
[33 113]
[34 112]
[40 53]
[41 52]
[42 51]
[43 50]
[56 80]
[57 79]
[58 78]
[59 77]
[60 76]
[61 75]
[62 74]
[63 73]
[64 72]
[91 111]
[92 110]
[94 108]
[95 107]
[96 106]
[97 104]
[151 179]
[152 178]
[153 177]
[154 176]
[155 175]
[160 173]
[161 172]
[162 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
