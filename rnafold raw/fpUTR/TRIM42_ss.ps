%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:21:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACUGAUAUAUGUAAAUGCCAGCCUAUGAGCUUCCUGGUAGGGACACCAGCUGUGAAGUCCUCAUAACAGCCAACUUCUUGCAACUUUCAAGCUGACGGCCUCAGGAAUGGGAGGAAGGACUCCUCCACUGGAGAACUGAUAGCAGUAUUCUGGUAGAGGAGGCAUCAAGAGUCCUGGGAGGCCGGUGGUAAUCAUGUAGGCACC\
) } def
/len { sequence length } bind def

/coor [
[98.93355560 462.05117798]
[84.41770935 456.23532104]
[77.08191681 442.42517090]
[80.38990021 427.14147949]
[92.77973938 417.60073853]
[93.23497772 402.60763550]
[84.10434723 387.62258911]
[93.91699982 372.04248047]
[94.14464569 357.04421997]
[94.37229156 342.04595947]
[94.59992981 327.04766846]
[94.82757568 312.04940796]
[95.05522156 297.05111694]
[80.98783112 289.10290527]
[72.80038452 275.06457520]
[72.80886078 258.71926880]
[81.10562134 244.52734375]
[95.50837708 236.40927124]
[95.50837708 221.40927124]
[95.50837708 206.40927124]
[95.50837708 191.40927124]
[87.77107239 178.68199158]
[95.50837708 164.88182068]
[95.50837708 149.88182068]
[95.50837708 134.88182068]
[95.50837708 119.88182068]
[84.09120178 110.15309143]
[69.28125763 112.53333282]
[54.47131348 114.91356659]
[39.66136932 117.29380798]
[24.85142517 119.67404175]
[10.07930946 122.27877045]
[-4.65157604 125.10737610]
[-19.38246155 127.93598175]
[-34.11334610 130.76458740]
[-46.20687866 140.96542358]
[-60.16486359 135.76696777]
[-74.89574432 138.59558105]
[-89.62663269 141.42417908]
[-104.35752106 144.25279236]
[-116.45104980 154.45362854]
[-130.40902710 149.25517273]
[-145.13992310 152.08378601]
[-157.18017578 163.21771240]
[-172.76023865 158.09976196]
[-175.85269165 141.99482727]
[-163.27627563 131.47029114]
[-147.96852112 137.35289001]
[-133.23764038 134.52429199]
[-122.19776154 124.52577209]
[-107.18612671 129.52191162]
[-92.45523834 126.69329834]
[-77.72435760 123.86469269]
[-62.99346924 121.03608704]
[-51.95359039 111.03756714]
[-36.94195557 116.03370667]
[-22.21106911 113.20509338]
[-7.48018360 110.37648773]
[7.25070190 107.54788208]
[10.62576866 104.16480255]
[16.16293144 102.86796570]
[22.47118759 104.86409760]
[37.28113174 102.48386383]
[52.09107590 100.10362244]
[66.90102386 97.72338104]
[81.71096802 95.34314728]
[84.90637207 88.55791473]
[71.33601379 82.16687775]
[77.72727203 68.59662628]
[91.29718018 74.98744965]
[94.49258423 68.20221710]
[86.89422607 55.26911926]
[79.29586792 42.33602524]
[64.26294708 38.25568771]
[56.74136734 25.03145027]
[60.72398758 10.72500610]
[45.69107056 6.64467096]
[38.16949081 -6.57956791]
[42.15210724 -20.88601112]
[34.55374908 -33.81910706]
[26.95538902 -46.75220108]
[19.35703087 -59.68529510]
[3.90782189 -62.10520554]
[-6.33245707 -73.92343903]
[-6.52865982 -89.55979156]
[3.41185498 -101.63125610]
[18.79547882 -104.43804932]
[32.35853577 -96.65489960]
[37.69696808 -81.95676422]
[32.29012680 -67.28365326]
[39.88848495 -54.35055923]
[47.48684311 -41.41746521]
[55.08520126 -28.48437119]
[69.52081299 -24.99887466]
[77.41086578 -11.99111843]
[73.65708160 3.12664700]
[88.09269714 6.61214352]
[95.98274994 19.61989975]
[92.22895813 34.73766327]
[99.82731628 47.67076111]
[107.42568207 60.60385513]
[121.73996735 65.08729553]
[135.35853577 58.79964447]
[148.97711182 52.51199722]
[162.59567261 46.22434998]
[176.21424866 39.93670273]
[189.83282471 33.64905548]
[203.45138550 27.36140633]
[202.71948242 14.16462040]
[206.50755310 1.53536284]
[214.34371948 -9.02876186]
[225.27746582 -16.28275681]
[237.99482727 -19.38093567]
[250.97633362 -17.97547531]
[262.67852783 -12.25531960]
[271.71749878 -2.92110682]
[285.52062988 -8.79255009]
[295.19104004 -21.31427193]
[309.93139648 -19.17617416]
[315.47030640 -30.82676506]
[327.09033203 -35.43208313]
[338.35949707 -31.02978516]
[352.25015259 -36.69107056]
[366.14077759 -42.35235977]
[380.03143311 -48.01364899]
[393.92205811 -53.67493439]
[407.81268311 -59.33622360]
[417.67202759 -71.70973969]
[432.37823486 -69.34819031]
[446.26885986 -75.00947571]
[460.15951538 -80.67076874]
[474.05014038 -86.33205414]
[487.94079590 -91.99333954]
[501.83142090 -97.65463257]
[515.72204590 -103.31591797]
[525.58142090 -115.68943787]
[540.28759766 -113.32788849]
[554.17822266 -118.98917389]
[568.06890869 -124.65045929]
[581.95953369 -130.31175232]
[591.58367920 -143.58981323]
[607.86474609 -141.62516785]
[614.05407715 -126.43885803]
[603.78466797 -113.65326691]
[587.62078857 -116.42111206]
[573.73016357 -110.75982666]
[559.83953857 -105.09853363]
[545.94891357 -99.43724823]
[537.08312988 -87.46865845]
[521.38336182 -89.42527771]
[507.49270630 -83.76399231]
[493.60208130 -78.10270691]
[479.71142578 -72.44141388]
[465.82080078 -66.78012848]
[451.93017578 -61.11883926]
[438.03952026 -55.45755386]
[429.17373657 -43.48896790]
[413.47399902 -45.44558716]
[399.58334351 -39.78429794]
[385.69271851 -34.12300873]
[371.80206299 -28.46172142]
[357.91143799 -22.80043411]
[344.02078247 -17.13914680]
[334.02313232 -2.71808839]
[315.80282593 -5.37305355]
[307.11972046 6.72870255]
[291.39205933 5.01057148]
[277.58895874 10.88201427]
[277.29168701 27.77231789]
[269.61764526 42.88366699]
[256.06701660 53.15515518]
[239.33572388 56.48256302]
[222.77909851 52.14928818]
[209.73904419 40.97997665]
[196.12046814 47.26762772]
[182.50189209 53.55527496]
[168.88333130 59.84292221]
[155.26475525 66.13056946]
[141.64617920 72.41822052]
[128.02761841 78.70586395]
[110.50837708 119.88182068]
[110.50837708 134.88182068]
[110.50837708 149.88182068]
[110.50837708 164.88182068]
[118.24567413 178.68199158]
[110.50837708 191.40927124]
[110.50837708 206.40927124]
[110.50837708 221.40927124]
[110.50837708 236.40927124]
[122.97032166 242.76620483]
[131.43661499 253.81994629]
[134.29997253 267.37820435]
[131.05726624 280.78271484]
[122.39686584 291.43035889]
[110.05348969 297.27877808]
[109.82584381 312.27703857]
[109.59820557 327.27532959]
[109.37055969 342.27359009]
[109.14292145 357.27185059]
[108.91527557 372.27014160]
[117.32060242 382.05615234]
[116.82042694 394.54550171]
[108.22806549 403.06286621]
[107.77283478 418.05596924]
[119.56101227 428.33084106]
[121.93564606 443.78707886]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 204]
[6 203]
[8 200]
[9 199]
[10 198]
[11 197]
[12 196]
[13 195]
[18 189]
[19 188]
[20 187]
[21 186]
[23 184]
[24 183]
[25 182]
[26 181]
[27 66]
[28 65]
[29 64]
[30 63]
[31 62]
[32 59]
[33 58]
[34 57]
[35 56]
[37 54]
[38 53]
[39 52]
[40 51]
[42 49]
[43 48]
[71 101]
[72 100]
[73 99]
[76 96]
[79 93]
[80 92]
[81 91]
[82 90]
[102 180]
[103 179]
[104 178]
[105 177]
[106 176]
[107 175]
[108 174]
[116 168]
[117 167]
[119 165]
[122 163]
[123 162]
[124 161]
[125 160]
[126 159]
[127 158]
[129 156]
[130 155]
[131 154]
[132 153]
[133 152]
[134 151]
[135 150]
[137 148]
[138 147]
[139 146]
[140 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
