%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:39:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCGUGGGGAGCGCCGCAGGUGGGGACGAGCCGGGCGGCACCUGCCCCGGGACCAGAGCGGACGCUCCCUCCCCGCUGCGCCGAGGGAGGGGAAACCCGAGGGGUUCCUUGGAGAAGGUGGUGCGUCCUGGGGCGGCAGCUGAGGAAGAAAGACGCAGUGCCCCGAAGCCCCUGAGCUGAAAAGGGCCAGAAAGGGGGCGGC\
) } def
/len { sequence length } bind def

/coor [
[136.51445007 276.26931763]
[139.00158691 257.04785156]
[139.23257446 242.04965210]
[139.46356201 227.05142212]
[129.39230347 205.60940552]
[138.48085022 187.51354980]
[131.38444519 174.29835510]
[124.28804016 161.08317566]
[117.19163513 147.86799622]
[110.09523010 134.65281677]
[102.05764008 136.03466797]
[93.91500092 135.57673645]
[86.08303070 133.30238342]
[78.96160889 129.32775879]
[67.87647247 139.43318176]
[56.79134369 149.53862000]
[45.70620728 159.64405823]
[34.62107468 169.74949646]
[29.45051956 187.42015076]
[12.17785454 190.50863647]
[1.24965250 200.78356934]
[-9.67854977 211.05851746]
[-7.59074211 226.43449402]
[-14.96907806 240.08511353]
[-28.97643661 246.76145935]
[-44.22669983 243.89631653]
[-54.85583496 232.59141541]
[-56.77672195 217.19367981]
[-49.25073624 203.62390137]
[-35.17177582 197.09989929]
[-19.95348930 200.13031006]
[-9.02528763 189.85536194]
[1.90291440 179.58042908]
[2.58989477 167.49989319]
[11.61515713 158.85017395]
[24.51564026 158.66435242]
[35.60077286 148.55892944]
[46.68590546 138.45349121]
[57.77104187 128.34805298]
[68.85617828 118.24262238]
[63.91587448 100.81659698]
[68.06280518 83.18492889]
[80.25262451 69.78787994]
[74.83399963 55.80079269]
[69.41537476 41.81370926]
[63.99674988 27.82662773]
[58.57812500 13.83954430]
[53.15950012 -0.14753917]
[47.74087524 -14.13462257]
[42.32225037 -28.12170601]
[36.90362549 -42.10879135]
[31.48500252 -56.09587479]
[26.06637764 -70.08295441]
[20.64775085 -84.07003784]
[17.15939331 -86.67680359]
[14.91137409 -89.93190002]
[13.95513153 -93.36468506]
[14.18359852 -96.53628540]
[15.35538292 -99.08869171]
[10.80809307 -113.38282013]
[6.26080275 -127.67694855]
[-4.81843662 -134.28811646]
[-8.30968094 -146.29162598]
[-2.86435771 -157.09715271]
[-7.19098806 -171.45962524]
[-11.51761913 -185.82208252]
[-15.84424973 -200.18453979]
[-22.83868599 -213.45397949]
[-32.24254227 -225.14018250]
[-41.64640045 -236.82638550]
[-51.05025864 -248.51260376]
[-60.45411682 -260.19882202]
[-69.85797119 -271.88500977]
[-79.26182556 -283.57122803]
[-88.75538635 -295.18469238]
[-98.33808899 -306.72470093]
[-114.09610748 -307.93316650]
[-124.32061768 -319.98452759]
[-122.94558716 -335.72888184]
[-110.78681183 -345.82540894]
[-95.05786896 -344.28399658]
[-85.09046936 -332.01916504]
[-86.79808044 -316.30740356]
[-77.21537781 -304.76739502]
[-70.51998901 -301.62799072]
[-67.57562256 -292.97509766]
[-58.17176437 -281.28887939]
[-48.76790619 -269.60266113]
[-39.36404800 -257.91644287]
[-29.96019173 -246.23025513]
[-20.55633545 -234.54403687]
[-11.15247822 -222.85783386]
[-3.95480323 -224.96578979]
[-12.41262722 -237.35389709]
[-3.24430037 -249.22578430]
[10.87964439 -244.17462158]
[10.44054604 -229.18170166]
[17.63821983 -231.28965759]
[19.25208664 -246.20259094]
[20.86595345 -261.11550903]
[22.47982025 -276.02844238]
[24.09368515 -290.94137573]
[25.70755196 -305.85430908]
[18.59221649 -320.62942505]
[28.05248070 -334.02478027]
[44.35643387 -332.26037598]
[50.73196793 -317.15127563]
[40.62047958 -304.24041748]
[39.00661469 -289.32751465]
[37.39274597 -274.41458130]
[35.77888107 -259.50164795]
[34.16501617 -244.58871460]
[32.55114746 -229.67579651]
[28.13271141 -219.19583130]
[21.63333702 -211.22689819]
[13.92913055 -206.11032104]
[5.93162632 -203.92897034]
[-1.48178887 -204.51116943]
[2.84484172 -190.14871216]
[7.17147207 -175.78625488]
[11.49810314 -161.42379761]
[24.91242790 -150.11274719]
[20.55493355 -132.22424316]
[25.10222244 -117.93011475]
[29.64951324 -103.63597870]
[34.63483429 -89.48866272]
[40.05345917 -75.50157928]
[45.47208405 -61.51449966]
[50.89070892 -47.52741623]
[56.30933380 -33.54033279]
[61.72795868 -19.55324745]
[67.14658356 -5.56616402]
[72.56520844 8.42091942]
[77.98383331 22.40800285]
[83.40245819 36.39508438]
[88.82108307 50.38216782]
[94.23970795 64.36925507]
[111.22255707 65.69569397]
[125.70563507 74.66323853]
[134.46292114 89.27440643]
[149.39892578 87.89038086]
[164.33494568 86.50635529]
[179.27095032 85.12232971]
[192.29835510 76.14472198]
[205.68524170 82.67469025]
[212.70141602 68.93508148]
[226.04347229 61.18956757]
[241.45401001 61.90971375]
[254.01559448 70.86573029]
[259.71987915 85.19977570]
[256.74661255 100.33791351]
[246.04457092 111.44961548]
[231.02873230 114.98918915]
[216.49061584 109.82714844]
[207.06925964 97.61070251]
[195.11019897 106.48931885]
[180.65498352 100.05834961]
[165.71896362 101.44237518]
[150.78295898 102.82639313]
[135.84693909 104.21041870]
[131.79869080 117.07553864]
[123.31041718 127.55641174]
[130.40681458 140.77159119]
[137.50321960 153.98677063]
[144.59962463 167.20195007]
[151.69602966 180.41714478]
[167.85679626 181.48481750]
[180.45053101 194.48489380]
[181.19920349 214.47874451]
[189.67625427 226.85369873]
[198.15330505 239.22866821]
[206.63034058 251.60362244]
[215.10739136 263.97857666]
[223.58444214 276.35354614]
[238.97906494 276.91189575]
[250.95307922 286.31808472]
[255.04399109 300.80010986]
[249.88464355 314.74710083]
[258.36169434 327.12207031]
[266.83874512 339.49703979]
[282.35299683 339.79248047]
[294.71029663 349.17739868]
[299.15902710 364.04306030]
[293.98852539 378.67337036]
[281.18698120 387.44262695]
[265.67684937 386.97891235]
[253.42205811 377.46047974]
[249.13487244 362.54742432]
[254.46377563 347.97409058]
[245.98672485 335.59912109]
[237.50967407 323.22415161]
[222.64070129 322.99685669]
[210.61445618 313.95068359]
[206.16894531 299.38735962]
[211.20947266 284.83059692]
[202.73243713 272.45562744]
[194.25538635 260.08065796]
[185.77833557 247.70570374]
[177.30130005 235.33074951]
[168.82424927 222.95578003]
[154.46179199 227.28240967]
[154.23078918 242.28063965]
[153.99980164 257.27886963]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 203]
[3 202]
[4 201]
[6 166]
[7 165]
[8 164]
[9 163]
[10 162]
[14 40]
[15 39]
[16 38]
[17 37]
[18 36]
[20 33]
[21 32]
[22 31]
[43 137]
[44 136]
[45 135]
[46 134]
[47 133]
[48 132]
[49 131]
[50 130]
[51 129]
[52 128]
[53 127]
[54 126]
[59 125]
[60 124]
[61 123]
[64 121]
[65 120]
[66 119]
[67 118]
[68 92]
[69 91]
[70 90]
[71 89]
[72 88]
[73 87]
[74 86]
[75 84]
[76 83]
[98 113]
[99 112]
[100 111]
[101 110]
[102 109]
[103 108]
[140 160]
[141 159]
[142 158]
[143 157]
[145 155]
[169 200]
[170 199]
[171 198]
[172 197]
[173 196]
[174 195]
[178 191]
[179 190]
[180 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
