%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:54:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACACUCCCAUCAUUUGCUUAGGUCUGAUCAAUCUGCUCCACACAAUUUCUCAGUGAUCCUCUGCAUCUCUGCCUACAAGGGCCUCCCUGACACCCAAGUUCAUAUUGCUCAGAAACAGUGAACUUGAGUUUUUCGUUUUACCUUGAUCUCUCUCUGACAAAGAAAUCCAGAUGAUGCGAGACCUGAUGAAGACAAUACAUGGAAA\
) } def
/len { sequence length } bind def

/coor [
[103.72806549 431.48498535]
[88.67350006 434.24517822]
[74.06407166 429.68194580]
[63.25691223 418.84387207]
[58.73543167 404.22146606]
[61.53863144 389.17483521]
[71.02235413 377.16162109]
[85.00731659 370.94235229]
[85.91736603 355.96997070]
[86.82741547 340.99761963]
[87.73746490 326.02523804]
[76.14258575 316.71411133]
[72.20726013 302.18905640]
[77.64295959 287.96560669]
[90.56089783 279.57318115]
[91.47094727 264.60079956]
[92.38099670 249.62844849]
[93.17739868 234.64959717]
[93.86012268 219.66514587]
[94.08776093 204.66687012]
[93.86012268 189.66860962]
[93.63247681 174.67033386]
[93.40483856 159.67205811]
[93.17719269 144.67378235]
[92.94954681 129.67550659]
[92.72190857 114.67723846]
[80.73552704 105.65910339]
[66.26147461 109.59633636]
[51.78742218 113.53356934]
[37.31336975 117.47080231]
[22.83931541 121.40803528]
[17.91507721 125.82736969]
[12.33573818 126.92870331]
[7.86609173 125.23797607]
[-6.72078466 128.73411560]
[-21.30766106 132.23027039]
[-23.31172752 147.27513123]
[-30.61872673 160.57823181]
[-42.24044418 170.34040833]
[-56.60514450 175.24140930]
[-71.77011871 174.61842346]
[-85.68441772 168.55570984]
[-96.46626282 157.87318420]
[-102.65748596 144.01557922]
[-103.42078400 128.85702515]
[-98.65291595 114.44757843]
[-88.99871063 102.73602295]
[-75.76380920 95.30622864]
[-60.73812866 93.16301727]
[-45.95376587 96.59625244]
[-33.41018677 105.14160156]
[-24.80380630 117.64338684]
[-10.21693039 114.14723969]
[4.36994553 110.65109253]
[18.90208435 106.93398285]
[33.37613678 102.99674988]
[47.85018921 99.05951691]
[62.32424164 95.12228394]
[76.79829407 91.18505096]
[83.27017212 88.05066681]
[89.58258057 87.46562195]
[94.91333008 89.09005737]
[98.61437225 92.34772491]
[106.21273041 79.41462708]
[113.81108856 66.48153687]
[121.40944672 53.54843903]
[129.00781250 40.61534500]
[136.60617065 27.68225098]
[144.10617065 14.69186974]
[151.50737000 1.64495027]
[158.90858459 -11.40196896]
[166.30978394 -24.44888878]
[154.53196716 -40.00820541]
[152.50657654 -60.28580093]
[161.71893311 -79.42715454]
[180.27894592 -91.43815613]
[203.24288940 -92.05165863]
[206.84962463 -106.61158752]
[210.45635986 -121.17151642]
[214.06309509 -135.73144531]
[217.66983032 -150.29136658]
[204.86372375 -158.32014465]
[195.17935181 -169.89837646]
[189.55548096 -183.88409424]
[188.53118896 -198.90293884]
[192.19424438 -213.48323059]
[200.17369080 -226.20011902]
[211.67744446 -235.81489563]
[225.57081604 -241.39559937]
[240.48849487 -242.40739441]
[244.09523010 -256.96731567]
[239.90316772 -272.22305298]
[250.47372437 -282.71649170]
[254.08045959 -297.27642822]
[249.88839722 -312.53216553]
[260.45895386 -323.02560425]
[264.06570435 -337.58554077]
[267.67242432 -352.14544678]
[271.27917480 -366.70538330]
[274.88589478 -381.26531982]
[278.49264526 -395.82522583]
[282.09936523 -410.38516235]
[285.70611572 -424.94509888]
[289.31283569 -439.50500488]
[287.84960938 -445.95773315]
[289.60360718 -451.36749268]
[293.25628662 -454.44876099]
[297.30325317 -468.89251709]
[287.57067871 -480.97790527]
[286.83410645 -496.47747803]
[295.37677002 -509.43133545]
[309.91381836 -514.85845947]
[324.85546875 -510.67202759]
[334.45635986 -498.48175049]
[335.02474976 -482.97509766]
[326.34207153 -470.11465454]
[311.74700928 -464.84555054]
[307.70004272 -450.40179443]
[303.87277222 -435.89828491]
[300.26605225 -421.33834839]
[296.65930176 -406.77844238]
[293.05258179 -392.21850586]
[289.44583130 -377.65856934]
[285.83911133 -363.09866333]
[282.23236084 -348.53872681]
[278.62561035 -333.97879028]
[275.01889038 -319.41888428]
[279.46893311 -305.20455933]
[268.64038086 -293.66970825]
[265.03366089 -279.10977173]
[269.48370361 -264.89547729]
[258.65515137 -253.36059570]
[255.04841614 -238.80065918]
[267.76885986 -230.94244385]
[277.45071411 -219.52175903]
[283.13616943 -205.64892578]
[284.25683594 -190.67779541]
[280.69042969 -176.07357788]
[272.77392578 -163.26950073]
[261.27197266 -153.52613831]
[247.30281067 -147.80728149]
[232.22975159 -146.68463135]
[228.62301636 -132.12471008]
[225.01628113 -117.56478119]
[221.40954590 -103.00485229]
[217.80281067 -88.44492340]
[222.08129883 -82.28501129]
[226.37799072 -96.65645599]
[240.29290771 -102.25778198]
[253.34809875 -94.87117767]
[255.71296692 -80.05876923]
[245.60676575 -68.97433472]
[230.63825989 -69.96517181]
[234.91674805 -63.80525589]
[249.81967163 -62.10155106]
[264.72259521 -60.39785004]
[278.12594604 -69.21431732]
[293.33041382 -64.09538269]
[298.67245483 -48.96785355]
[290.05410767 -35.43627548]
[274.08663940 -33.88091660]
[263.01889038 -45.49491501]
[248.11596680 -47.19861984]
[233.21304321 -48.90232086]
[228.19422913 -34.15862274]
[218.55928040 -22.67300415]
[205.93191528 -15.73225021]
[192.22528076 -13.91235352]
[179.35670471 -17.04767990]
[171.95550537 -4.00076008]
[164.55429077 9.04615879]
[157.15307617 22.09307861]
[156.58682251 29.46438408]
[149.53926086 35.28060913]
[141.94090271 48.21370316]
[134.34254456 61.14680099]
[126.74417877 74.07989502]
[119.14582062 87.01298523]
[111.54746246 99.94608307]
[107.72017670 114.44960022]
[107.94782257 129.44787598]
[108.17546844 144.44613647]
[108.40310669 159.44441223]
[108.63075256 174.44268799]
[108.85839081 189.44096375]
[109.08603668 204.43922424]
[111.44953918 208.09020996]
[112.42793274 211.91838074]
[112.13584137 215.46598816]
[110.82495880 218.35966492]
[108.84457397 220.34786987]
[108.16185760 235.33232117]
[110.89807892 244.05067444]
[107.35336304 250.53849792]
[106.44331360 265.51086426]
[105.53327179 280.48321533]
[117.33965302 290.37844849]
[121.01264954 305.15554810]
[115.34706879 319.09704590]
[102.70983124 326.93530273]
[101.79978180 341.90765381]
[100.88973236 356.88003540]
[99.97969055 371.85238647]
[113.10844421 379.71969604]
[121.06735992 392.79312134]
[122.02753448 408.06848145]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 203]
[9 202]
[10 201]
[11 200]
[15 196]
[16 195]
[17 194]
[18 192]
[19 191]
[20 186]
[21 185]
[22 184]
[23 183]
[24 182]
[25 181]
[26 180]
[27 59]
[28 58]
[29 57]
[30 56]
[31 55]
[34 54]
[35 53]
[36 52]
[63 179]
[64 178]
[65 177]
[66 176]
[67 175]
[68 174]
[69 172]
[70 171]
[71 170]
[72 169]
[77 146]
[78 145]
[79 144]
[80 143]
[81 142]
[90 133]
[91 132]
[93 130]
[94 129]
[96 127]
[97 126]
[98 125]
[99 124]
[100 123]
[101 122]
[102 121]
[103 120]
[104 119]
[107 118]
[108 117]
[154 164]
[155 163]
[156 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
