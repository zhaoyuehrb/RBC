%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:29:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACAGACUGGCGGCGCGCGGAAAACGCGUCACGUGACGACUGGCCCCGCCUCUUCCUCUCGGUCCCAUAUUGAACUCGAGUUGGAAGAGGCGAGUCCGGUCUCAAA\
) } def
/len { sequence length } bind def

/coor [
[52.56652069 222.48455811]
[45.52626038 235.72973633]
[33.80567169 245.09069824]
[19.33174896 249.02841187]
[4.48417425 246.89546204]
[-8.29594231 239.04252625]
[-16.90740204 226.76071167]
[-19.93437958 212.06930542]
[-16.87920761 197.38374329]
[-8.24367905 185.11801147]
[-22.66395187 189.24786377]
[-37.08422470 193.37771606]
[-44.78754425 206.91642761]
[-59.47058487 210.89926147]
[-72.33020020 203.47189331]
[-86.75047302 207.60174561]
[-101.17074585 211.73161316]
[-115.59101868 215.86146545]
[-130.01129150 219.99131775]
[-139.01974487 233.26638794]
[-155.02571106 234.35646057]
[-165.75080872 222.42532349]
[-162.96763611 206.62553406]
[-148.81123352 199.07733154]
[-134.14114380 205.57104492]
[-119.72087860 201.44119263]
[-105.30060577 197.31134033]
[-90.88033295 193.18147278]
[-76.46006012 189.05162048]
[-69.48183441 175.94284058]
[-54.91645813 171.54916382]
[-41.21408081 178.95744324]
[-26.79380798 174.82759094]
[-12.37353516 170.69773865]
[1.00154543 163.90750122]
[12.84576797 154.70346069]
[16.24967003 148.00865173]
[25.17549896 145.40919495]
[37.28481674 136.55682373]
[49.39413071 127.70444489]
[61.50344849 118.85207367]
[73.61276245 109.99970245]
[85.72207642 101.14733887]
[91.54660797 88.43645477]
[105.42555237 86.74334717]
[112.00003052 72.35283661]
[126.84082794 71.08796692]
[138.95014954 62.23559189]
[151.05946350 53.38322449]
[163.16877747 44.53085327]
[175.27809143 35.67848206]
[187.38740540 26.82611084]
[199.49671936 17.97373962]
[211.60604858 9.12136936]
[223.71536255 0.26899877]
[235.82467651 -8.58337212]
[242.78157043 -25.55326462]
[260.20837402 -26.93041229]
[272.05261230 -36.13445282]
[283.89682007 -45.33849716]
[295.74105835 -54.54253769]
[307.44888306 -63.91946030]
[319.01779175 -73.46723938]
[324.73641968 -88.21878815]
[339.47738647 -90.35245514]
[340.73352051 -106.10674286]
[352.81570435 -116.29477692]
[368.55584717 -114.87217712]
[378.61557007 -102.68293762]
[377.02661133 -86.95872498]
[364.73171997 -77.02843475]
[349.02517700 -78.78353119]
[344.13406372 -64.71490479]
[328.56558228 -61.89831924]
[316.99667358 -52.35054016]
[313.79077148 -45.55869293]
[304.94509888 -42.69831467]
[293.10086060 -33.49427414]
[281.25665283 -24.29023170]
[269.41241455 -15.08618927]
[267.55374146 -3.03325248]
[257.62344360 4.71966219]
[244.67704773 3.52594399]
[232.56773376 12.37831497]
[220.45841980 21.23068619]
[208.34909058 30.08305550]
[196.23977661 38.93542862]
[184.13046265 47.78779602]
[172.02114868 56.64016724]
[159.91183472 65.49253845]
[147.80252075 74.34490967]
[135.69320679 83.19728088]
[129.98486328 96.95461273]
[114.27792358 98.85266113]
[108.45339203 111.56354523]
[94.57444763 113.25665283]
[82.46513367 122.10902405]
[70.35581970 130.96139526]
[58.24650192 139.81376648]
[46.13718796 148.66613770]
[34.02787018 157.51850891]
[22.04981041 166.54768372]
[10.20558739 175.75172424]
[25.20320702 176.01893616]
[38.86183929 182.21908569]
[48.93584442 193.33277893]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 34]
[11 33]
[12 32]
[15 29]
[16 28]
[17 27]
[18 26]
[19 25]
[35 103]
[36 102]
[38 101]
[39 100]
[40 99]
[41 98]
[42 97]
[43 96]
[45 94]
[47 92]
[48 91]
[49 90]
[50 89]
[51 88]
[52 87]
[53 86]
[54 85]
[55 84]
[56 83]
[58 80]
[59 79]
[60 78]
[61 77]
[62 75]
[63 74]
[65 72]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
