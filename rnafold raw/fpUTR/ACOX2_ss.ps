%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:28:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACAAGCCUGCCAGAGGCUGCGGCCUACAGCCGGGGAGAGGCCAGCCCGGCCUACAGUGCGGACACAGGACAGAGGGGAGCCAGGUUCUUUGCACUGACCAAUGCUGAGAGCAGACCCUCGGAGCAGCCGGGUUGGAAGUGUCUCUCCAUAGUCACCAGACAGAUCCAGGAUAGG\
) } def
/len { sequence length } bind def

/coor [
[110.34990692 220.44302368]
[101.19102478 233.11775208]
[86.01519775 236.88980103]
[71.98799133 229.97810364]
[65.73262024 215.64616394]
[70.20268250 200.66108704]
[83.28755188 192.09837341]
[84.89097595 177.18431091]
[86.49440765 162.27026367]
[88.09783173 147.35620117]
[89.56809235 132.42843628]
[90.90505981 117.48813629]
[84.22859955 114.07128143]
[71.63399506 122.21842957]
[70.87567902 107.23757935]
[64.19921875 103.82073212]
[52.86297607 113.64363861]
[41.52672958 123.46655273]
[30.19048691 133.28945923]
[18.85424423 143.11236572]
[19.28324127 158.74406433]
[9.52356529 170.96220398]
[-5.81656265 173.99774170]
[-19.49400330 166.41738892]
[-25.05068779 151.80036926]
[-19.86292076 137.04838562]
[-6.38020468 129.12687683]
[9.03133202 131.77612305]
[20.36757660 121.95321655]
[31.70381927 112.13031006]
[43.04006195 102.30739594]
[54.37630844 92.48448181]
[61.21001053 79.13156128]
[62.54698181 64.19126892]
[63.88394928 49.25096893]
[65.22092438 34.31066895]
[66.55789185 19.37037086]
[67.89485931 4.43007278]
[69.23183441 -10.51022530]
[55.54316711 -25.17620659]
[56.97882462 -44.88170624]
[72.17395782 -57.02905655]
[72.70934296 -72.01950073]
[73.24472809 -87.00994110]
[73.78011322 -102.00038147]
[74.31549835 -116.99082947]
[74.85088348 -131.98126221]
[75.38626862 -146.97171021]
[75.92165375 -161.96215820]
[76.45703888 -176.95259094]
[76.99242401 -191.94303894]
[68.16458893 -192.50656128]
[59.12131500 -197.15890503]
[51.68101501 -205.97282410]
[47.63519287 -218.25022888]
[41.40396500 -231.89471436]
[35.17274094 -245.53918457]
[28.94151497 -259.18365479]
[22.71029091 -272.82815552]
[16.47906494 -286.47262573]
[10.24783993 -300.11709595]
[4.01661491 -313.76159668]
[0.32747570 -316.18829346]
[-2.13136125 -319.35299683]
[-3.27902722 -322.77166748]
[-3.20244217 -325.98443604]
[-2.13340259 -328.60903931]
[-7.37536526 -342.66329956]
[-12.61732769 -356.71752930]
[-17.85929108 -370.77178955]
[-23.10125351 -384.82601929]
[-35.93301773 -388.98321533]
[-43.90289688 -399.62280273]
[-44.27383423 -412.71636963]
[-37.13452148 -423.46548462]
[-42.12479401 -437.61105347]
[-54.92723465 -447.85943604]
[-52.18593979 -464.02786255]
[-36.72092056 -469.48361206]
[-24.44126129 -458.61428833]
[-27.97922325 -442.60131836]
[-22.98894882 -428.45574951]
[-7.53141308 -421.86691284]
[-1.48830605 -405.82693481]
[-9.04700756 -390.06799316]
[-3.80504465 -376.01373291]
[1.43691802 -361.95950317]
[6.67888069 -347.90524292]
[11.92084312 -333.85101318]
[17.66109467 -319.99282837]
[23.89232063 -306.34832764]
[30.12354469 -292.70385742]
[36.35477066 -279.05938721]
[42.58599472 -265.41488647]
[48.81722260 -251.77041626]
[55.04844666 -238.12593079]
[61.27967072 -224.48146057]
[68.52986145 -222.56187439]
[67.70044708 -237.53892517]
[81.68823242 -242.95573425]
[91.16223907 -231.32632446]
[83.03022766 -218.72270203]
[90.28041840 -216.80313110]
[102.44706726 -225.57652283]
[114.61372375 -234.34992981]
[126.78038025 -243.12332153]
[129.43841553 -258.47171021]
[141.90211487 -267.19586182]
[156.51806641 -264.56723022]
[168.68472290 -273.34063721]
[180.85136414 -282.11404419]
[183.13169861 -297.75296021]
[195.85226440 -307.13177490]
[211.46620178 -304.68624878]
[220.71002197 -291.86721802]
[218.09953308 -276.28002930]
[205.18350220 -267.17224121]
[189.62477112 -269.94738770]
[177.45811462 -261.17398071]
[165.29145813 -252.40057373]
[163.16986084 -237.70246887]
[150.95611572 -228.63168335]
[135.55377197 -230.95666504]
[123.38712311 -222.18327332]
[111.22047424 -213.40986633]
[99.05381775 -204.63647461]
[91.98286438 -191.40765381]
[91.44747925 -176.41720581]
[90.91209412 -161.42677307]
[90.37670898 -146.43632507]
[89.84132385 -131.44587708]
[89.30593872 -116.45544434]
[88.77055359 -101.46499634]
[88.23516846 -86.47455597]
[87.69978333 -71.48411560]
[87.16439819 -56.49367142]
[95.96949768 -51.11001968]
[101.77656555 -42.48049927]
[103.47389221 -32.13641739]
[100.68634796 -21.94750214]
[93.85571289 -13.78396988]
[84.17212677 -9.17325497]
[82.83515930 5.76704311]
[81.49819183 20.70734215]
[80.16121674 35.64764023]
[78.82424927 50.58793640]
[77.48728180 65.52823639]
[76.15030670 80.46853638]
[90.78520966 66.63270569]
[113.01475525 63.86650085]
[134.58763123 75.83066559]
[145.98446655 100.24169159]
[155.60346985 111.75145721]
[165.22247314 123.26122284]
[180.79916382 128.38946533]
[183.88099670 144.49642944]
[171.29763794 155.01266479]
[155.99377441 149.11996460]
[153.71270752 132.88023376]
[144.09370422 121.37046051]
[134.47470093 109.86069489]
[127.31736755 112.10179901]
[131.79957581 126.41647339]
[140.48573303 138.64556885]
[131.53918457 150.68547058]
[117.32398224 145.89717102]
[117.48490143 130.89868164]
[113.00269318 116.58399963]
[105.84535980 118.82510376]
[104.50838470 133.76539612]
[106.86567688 142.62469482]
[103.01188660 148.95962524]
[101.40846252 163.87368774]
[99.80503082 178.78773499]
[98.20160675 193.70179749]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 175]
[8 174]
[9 173]
[10 172]
[11 170]
[12 169]
[16 32]
[17 31]
[18 30]
[19 29]
[20 28]
[33 148]
[34 147]
[35 146]
[36 145]
[37 144]
[38 143]
[39 142]
[42 136]
[43 135]
[44 134]
[45 133]
[46 132]
[47 131]
[48 130]
[49 129]
[50 128]
[51 127]
[55 97]
[56 96]
[57 95]
[58 94]
[59 93]
[60 92]
[61 91]
[62 90]
[67 89]
[68 88]
[69 87]
[70 86]
[71 85]
[75 82]
[76 81]
[103 126]
[104 125]
[105 124]
[106 123]
[109 120]
[110 119]
[111 118]
[152 161]
[153 160]
[154 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
