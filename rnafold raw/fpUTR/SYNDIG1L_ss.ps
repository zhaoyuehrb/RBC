%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:30:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGCGGCGGGCUGCGGGCGGGAGCUGUCCGCGGUGCUGAAGCGGCGGCUGCUCAGGGACGCGGGGACGAGAGCAGGGGAGCCCUCCUGGGAGUUCCACCGCGACCGCGAGGCGGGGGCGCCGUCGCUCACCGGCCCAUGCCGAGCCCCCGAGCCCCGCGGAGGAGGCGGGACCGUCCGCGGCGGGACAGGCUCUGAGGACUGCUCAGCUGGCCCAGGCCCCCCUCCCCAGCAGCUGCCCCAGAACC\
) } def
/len { sequence length } bind def

/coor [
[-266.83538818 865.11431885]
[-267.34951782 850.12280273]
[-275.57458496 862.66668701]
[-272.56863403 877.95068359]
[-281.08871460 890.55480957]
[-295.67822266 893.32629395]
[-303.90328979 905.87017822]
[-312.12835693 918.41406250]
[-320.35339355 930.95788574]
[-321.10467529 937.48626709]
[-324.51550293 941.99298096]
[-328.94760132 943.71087646]
[-337.48651123 956.04321289]
[-346.02545166 968.37554932]
[-354.56439209 980.70788574]
[-363.10333252 993.04022217]
[-371.64224243 1005.37255859]
[-380.18118286 1017.70489502]
[-388.72012329 1030.03723145]
[-397.25906372 1042.36962891]
[-405.79797363 1054.70190430]
[-414.33691406 1067.03430176]
[-418.38250732 1083.49841309]
[-435.32321167 1084.16870117]
[-440.65692139 1068.07556152]
[-426.66925049 1058.49536133]
[-418.13034058 1046.16296387]
[-409.59140015 1033.83068848]
[-401.05245972 1021.49829102]
[-392.51351929 1009.16595459]
[-383.97460938 996.83361816]
[-375.43566895 984.50128174]
[-366.89672852 972.16894531]
[-358.35778809 959.83660889]
[-349.81884766 947.50427246]
[-341.27993774 935.17193604]
[-332.89727783 922.73284912]
[-324.67221069 910.18896484]
[-316.44714355 897.64514160]
[-308.22207642 885.10125732]
[-311.49649048 870.61633301]
[-303.33380127 857.77789307]
[-288.11843872 854.44158936]
[-279.89337158 841.89776611]
[-272.47546387 828.86029053]
[-265.89422607 815.38116455]
[-259.31298828 801.90203857]
[-252.73176575 788.42291260]
[-246.15052795 774.94372559]
[-239.56929016 761.46459961]
[-232.98805237 747.98547363]
[-226.40681458 734.50628662]
[-219.82557678 721.02716064]
[-213.24435425 707.54803467]
[-216.87940979 696.02685547]
[-211.52700806 684.75134277]
[-199.55857849 679.98675537]
[-192.80781555 666.59173584]
[-186.05703735 653.19671631]
[-179.30625916 639.80163574]
[-180.48776245 624.95397949]
[-167.36755371 616.11260986]
[-167.16435242 608.74340820]
[-160.44616699 602.59191895]
[-153.52693176 589.28314209]
[-146.60771179 575.97430420]
[-139.68847656 562.66552734]
[-140.68255615 547.80413818]
[-127.45183563 539.12896729]
[-132.16911316 525.04766846]
[-125.34161377 511.45208740]
[-110.53987122 506.59963989]
[-115.25714874 492.51834106]
[-108.42964935 478.92276001]
[-93.62790680 474.07031250]
[-86.70867157 460.76153564]
[-79.78943634 447.45272827]
[-84.50671387 433.37142944]
[-77.67922211 419.77584839]
[-62.87747574 414.92340088]
[-55.95824051 401.61459351]
[-49.03900909 388.30578613]
[-42.11977386 374.99697876]
[-46.83705139 360.91571045]
[-40.00955582 347.32009888]
[-25.20781136 342.46768188]
[-18.28857803 329.15887451]
[-11.36934471 315.85006714]
[-4.45011091 302.54125977]
[-5.44419241 287.67987061]
[7.78652811 279.00469971]
[14.70576191 265.69589233]
[21.62499619 252.38710022]
[28.54422951 239.07829285]
[35.46346283 225.76950073]
[42.04470062 212.29034424]
[48.28374863 198.64944458]
[54.52279663 185.00854492]
[52.78028488 170.21621704]
[65.55653381 160.88465881]
[71.79558563 147.24374390]
[78.03462982 133.60284424]
[84.27368164 119.96194458]
[90.51273346 106.32103729]
[72.44290161 95.47689056]
[72.82683563 64.82109833]
[76.38829803 50.25003433]
[79.94975281 35.67896652]
[83.51121521 21.10789871]
[87.07266998 6.53683090]
[82.83320618 -8.70579052]
[93.37110138 -19.23204803]
[96.93255615 -33.80311584]
[100.49401855 -48.37418365]
[103.87135315 -62.98902512]
[107.06404114 -77.64530945]
[110.25672150 -92.30159760]
[113.44940186 -106.95788574]
[116.64208221 -121.61417389]
[119.83476257 -136.27046204]
[121.44033051 -151.18429565]
[121.44033051 -166.18429565]
[112.77662659 -180.10809326]
[120.74076080 -194.44352722]
[137.13990784 -194.44352722]
[145.10403442 -180.10809326]
[136.44033813 -166.18429565]
[136.44033813 -151.18429565]
[143.82363892 -149.86639404]
[146.45965576 -164.63296509]
[161.22618103 -161.99668884]
[158.59024048 -147.23062134]
[165.97354126 -145.91273499]
[171.16308594 -159.98641968]
[176.35261536 -174.06010437]
[181.54216003 -188.13378906]
[178.23068237 -204.19511414]
[190.66259766 -214.88993835]
[206.04904175 -209.21633911]
[208.56173706 -193.01083374]
[195.61584473 -182.94425964]
[190.42630005 -168.87057495]
[185.23677063 -154.79687500]
[180.04722595 -140.72319031]
[155.09594727 -126.30473328]
[134.49105835 -133.07778931]
[131.29837036 -118.42149353]
[128.10568237 -103.76520538]
[124.91300964 -89.10891724]
[121.72032928 -74.45262909]
[118.52764130 -59.79634094]
[120.29486847 -55.38368988]
[119.32622528 -49.81542206]
[115.06508636 -44.81272507]
[111.50362396 -30.24165726]
[107.94216919 -15.67058945]
[112.43637085 -1.47018886]
[101.64373779 10.09828949]
[98.08228302 24.66935730]
[94.52082062 39.24042511]
[90.95936584 53.81149292]
[87.39790344 68.38256073]
[93.00932312 73.35870361]
[102.96178436 62.13602448]
[114.18431091 72.08866119]
[104.23215485 83.31098938]
[109.84357452 88.28713226]
[123.88424683 83.00891876]
[137.92491150 77.73070526]
[151.96559143 72.45249176]
[161.95030212 59.44335175]
[178.17132568 61.85376740]
[183.94187927 77.20410156]
[173.32569885 89.70324707]
[157.24380493 86.49315643]
[143.20312500 91.77137756]
[129.16246033 97.04959106]
[115.12178802 102.32780457]
[104.15363312 112.56008911]
[97.91458130 126.20098877]
[91.67553711 139.84188843]
[85.43648529 153.48280334]
[79.19744110 167.12370300]
[80.49369049 182.89172363]
[68.16370392 191.24758911]
[61.92465210 204.88848877]
[55.68560410 218.52940369]
[56.23793411 222.77992249]
[55.49740601 226.60668945]
[53.75231552 229.65843201]
[51.37478638 231.71205139]
[48.77226639 232.68873596]
[41.85303116 245.99752808]
[34.93379593 259.30633545]
[28.01456451 272.61514282]
[21.09532928 285.92395020]
[21.59450150 301.73727417]
[8.85869122 309.46051025]
[1.93945730 322.76931763]
[-4.97977638 336.07809448]
[-11.89900970 349.38690186]
[-7.36829329 364.29028320]
[-14.57496929 377.68872070]
[-28.81097412 381.91622925]
[-35.73020554 395.22503662]
[-42.64944077 408.53384399]
[-49.56867599 421.84262085]
[-45.03795624 436.74600220]
[-52.24463272 450.14443970]
[-66.48063660 454.37194824]
[-73.39987183 467.68075562]
[-80.31910706 480.98956299]
[-75.78839111 495.89291382]
[-82.99506378 509.29138184]
[-97.23107147 513.51885986]
[-92.70034790 528.42224121]
[-99.90702820 541.82067871]
[-114.14302826 546.04821777]
[-113.64385986 561.86151123]
[-126.37966919 569.58477783]
[-133.29890442 582.89355469]
[-140.21813965 596.20239258]
[-147.13737488 609.51116943]
[-153.97250366 622.86334229]
[-153.27386475 638.66912842]
[-165.91122437 646.55242920]
[-172.66200256 659.94744873]
[-179.41276550 673.34252930]
[-186.16354370 686.73754883]
[-184.70196533 705.10510254]
[-199.76519775 714.12927246]
[-206.34643555 727.60839844]
[-212.92767334 741.08752441]
[-219.50891113 754.56671143]
[-226.09014893 768.04583740]
[-232.67138672 781.52496338]
[-239.25262451 795.00408936]
[-245.83386230 808.48327637]
[-252.41510010 821.96240234]
[-258.99633789 835.44152832]
[-245.84657288 828.22467041]
[-230.84851074 828.46557617]
[-217.93736267 836.10119629]
[-210.50077820 849.12799072]
[-210.48999023 864.12799072]
[-217.90782166 877.16546631]
[-230.80796814 884.81964111]
[-245.80567932 885.08215332]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 44]
[3 43]
[6 40]
[7 39]
[8 38]
[9 37]
[12 36]
[13 35]
[14 34]
[15 33]
[16 32]
[17 31]
[18 30]
[19 29]
[20 28]
[21 27]
[22 26]
[45 240]
[46 239]
[47 238]
[48 237]
[49 236]
[50 235]
[51 234]
[52 233]
[53 232]
[54 231]
[57 229]
[58 228]
[59 227]
[60 226]
[62 224]
[64 223]
[65 222]
[66 221]
[67 220]
[69 218]
[72 215]
[75 212]
[76 211]
[77 210]
[80 207]
[81 206]
[82 205]
[83 204]
[86 201]
[87 200]
[88 199]
[89 198]
[91 196]
[92 195]
[93 194]
[94 193]
[95 192]
[96 187]
[97 186]
[98 185]
[100 183]
[101 182]
[102 181]
[103 180]
[104 179]
[106 162]
[107 161]
[108 160]
[109 159]
[110 158]
[112 156]
[113 155]
[114 154]
[115 151]
[116 150]
[117 149]
[118 148]
[119 147]
[120 146]
[121 128]
[122 127]
[133 144]
[134 143]
[135 142]
[136 141]
[167 178]
[168 177]
[169 176]
[170 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
