%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:35:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCCGCCGGCAGGAGGCGCCGCGGCACGCGCGGGUCUGGGCGCCGGCCCCAGCCAACGGCGGGUGGGAGCAGCGCGGGAACGUGGCGGCGCGGCGGGUUGUGCCGGAGGUCACGGCCUCCCCACAUCCUUUGGCUGAAGCCCACAGUCCUCAUCCAUGAAGCCUCACCCACC\
) } def
/len { sequence length } bind def

/coor [
[97.39479828 142.59469604]
[91.84272766 156.52934265]
[86.29064941 170.46400452]
[80.73857880 184.39865112]
[75.18650818 198.33329773]
[77.26631165 214.01721191]
[65.36769104 222.97668457]
[59.81561661 236.91133118]
[62.71026230 253.05299377]
[50.00568008 263.42245483]
[34.77125549 257.35250854]
[32.67885590 241.08738708]
[45.88096619 231.35925293]
[51.43303680 217.42460632]
[48.95611572 202.73739624]
[61.25185776 192.78123474]
[66.80393219 178.84657288]
[72.35600281 164.91192627]
[77.90807343 150.97727966]
[83.46014404 137.04263306]
[71.76894379 127.64497375]
[59.35361099 136.06278992]
[46.93827438 144.48059082]
[34.52294159 152.89839172]
[30.09976006 168.31964111]
[15.23043156 174.34315491]
[1.32143331 166.34820557]
[-0.95744306 150.46781921]
[10.14196205 138.88409424]
[26.10513496 140.48306274]
[38.52046967 132.06524658]
[50.93580246 123.64744568]
[63.35113907 115.22964478]
[59.20790100 100.81320953]
[44.21768188 100.27166748]
[29.22745895 99.73013306]
[17.70827293 110.21565247]
[2.51377010 109.45291901]
[-7.41158009 98.40651703]
[-22.40180206 97.86497498]
[-37.39202118 97.32344055]
[-52.38224411 96.78190613]
[-66.60974884 104.93727875]
[-80.64831543 96.46080017]
[-80.05626678 80.07234192]
[-65.44264984 72.63094330]
[-51.84070969 81.79168701]
[-36.85048676 82.33322144]
[-21.86026573 82.87475586]
[-6.87004375 83.41629028]
[3.82651687 73.11487579]
[19.03644753 73.45053101]
[29.76899529 84.73991394]
[44.75921631 85.28144836]
[59.74943924 85.82298279]
[74.18963623 71.52275848]
[91.85642242 66.79137421]
[107.56543732 71.01953888]
[117.54780579 81.20851898]
[130.53819275 73.70851898]
[138.62083435 60.10773087]
[153.51162720 60.44479370]
[166.50201416 52.94479370]
[179.49238586 45.44479370]
[192.48277283 37.94479370]
[205.47314453 30.44479370]
[218.46353149 22.94479370]
[231.45391846 15.44479370]
[237.34667969 8.41902351]
[244.74722290 7.92908001]
[257.87088013 0.66483289]
[262.33532715 -14.25852013]
[275.74807739 -21.43854713]
[289.94772339 -17.09041023]
[303.07138062 -24.35465813]
[311.39825439 -37.80730057]
[326.28054810 -37.20145416]
[339.40420532 -44.46569824]
[352.52789307 -51.72994614]
[354.54486084 -67.00208282]
[365.04504395 -78.02928162]
[379.84994507 -80.72721863]
[393.24432373 -74.26741028]
[399.26296997 -81.18564606]
[406.67114258 -81.54190063]
[419.92382812 -88.56803131]
[433.17651367 -95.59415436]
[446.16690063 -103.09415436]
[458.87805176 -111.05825043]
[471.58920288 -119.02234650]
[479.81423950 -135.47959900]
[497.34851074 -135.46774292]
[509.91378784 -143.66003418]
[522.47906494 -151.85232544]
[535.04437256 -160.04460144]
[547.38317871 -168.57414246]
[559.48657227 -177.43469238]
[571.58990479 -186.29522705]
[578.15466309 -200.69017029]
[592.99456787 -201.96507263]
[605.09796143 -210.82560730]
[617.20129395 -219.68615723]
[629.30462646 -228.54669189]
[632.05328369 -241.17170715]
[642.34558105 -248.29957581]
[654.33648682 -246.54742432]
[666.59777832 -255.18800354]
[678.85913086 -263.82858276]
[691.12048340 -272.46917725]
[703.38183594 -281.10977173]
[715.64312744 -289.75033569]
[722.03411865 -304.85290527]
[738.33990479 -306.60061646]
[747.78643799 -293.19558716]
[740.65600586 -278.42776489]
[724.28375244 -277.48901367]
[712.02239990 -268.84841919]
[699.76104736 -260.20782471]
[687.49975586 -251.56726074]
[675.23840332 -242.92668152]
[662.97705078 -234.28608704]
[656.49798584 -217.99279785]
[638.16516113 -216.44335938]
[626.06182861 -207.58280945]
[613.95849609 -198.72227478]
[601.85516357 -189.86172485]
[596.15606689 -176.10055542]
[580.45043945 -174.19189453]
[568.34710693 -165.33134460]
[556.24377441 -156.47080994]
[555.35247803 -153.02561951]
[552.72784424 -149.84901428]
[548.51831055 -147.76026917]
[543.23663330 -147.47932434]
[530.67138672 -139.28703308]
[518.10607910 -131.09474182]
[505.54080200 -122.90246582]
[502.73022461 -111.11467743]
[492.29904175 -104.19168091]
[479.55328369 -106.31120300]
[466.84213257 -98.34710693]
[454.13098145 -90.38301086]
[453.38314819 -87.64726257]
[451.48770142 -85.04855347]
[448.49337769 -83.03257751]
[444.61169434 -82.01831055]
[440.20263672 -82.34147644]
[426.94995117 -75.31534576]
[413.69729614 -68.28922272]
[400.50857544 -61.14374542]
[398.87106323 -46.36346817]
[388.72430420 -35.25009155]
[373.80477905 -32.20689774]
[359.79214478 -38.60627747]
[346.66845703 -31.34202957]
[333.54479980 -24.07778358]
[326.15661621 -11.14472771]
[310.33563232 -11.23098850]
[297.21197510 -3.96674109]
[293.35748291 10.37475491]
[280.15167236 17.92868614]
[265.13513184 13.78850269]
[252.01147461 21.05274963]
[238.95391846 28.43517494]
[225.96353149 35.93517303]
[212.97314453 43.43517303]
[199.98277283 50.93517303]
[186.99238586 58.43517303]
[174.00201416 65.93517303]
[161.01162720 73.43517303]
[153.85813904 86.49951172]
[138.03819275 86.69889832]
[125.04780579 94.19889832]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 20]
[2 19]
[3 18]
[4 17]
[5 16]
[7 14]
[8 13]
[21 33]
[22 32]
[23 31]
[24 30]
[34 55]
[35 54]
[36 53]
[39 50]
[40 49]
[41 48]
[42 47]
[59 173]
[60 172]
[62 170]
[63 169]
[64 168]
[65 167]
[66 166]
[67 165]
[68 164]
[70 163]
[71 162]
[74 159]
[75 158]
[77 156]
[78 155]
[79 154]
[83 150]
[85 149]
[86 148]
[87 147]
[88 142]
[89 141]
[90 140]
[92 137]
[93 136]
[94 135]
[95 134]
[96 130]
[97 129]
[98 128]
[100 126]
[101 125]
[102 124]
[103 123]
[106 121]
[107 120]
[108 119]
[109 118]
[110 117]
[111 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
