%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:20:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCCCGGGUGUCCGGCGGAGGGGGCGGUGCCCUCGGCGUCUCCGUGACUGCGCCUCUGCGCCCGCGUCUUGCCGCGGCUCCCGGGAUGCGCGGAGGCGGUGGCG\
) } def
/len { sequence length } bind def

/coor [
[145.44071960 135.54759216]
[132.52507019 127.91961670]
[119.60941315 120.29165649]
[106.69376373 112.66368866]
[92.71582794 112.33354187]
[85.67826843 100.25196838]
[72.76261902 92.62400055]
[59.84696198 84.99603271]
[46.93130875 77.36806488]
[34.01565552 69.74009705]
[21.10000038 62.11213303]
[8.18434620 54.48416901]
[-8.58744526 59.17678833]
[-23.31580162 50.52738571]
[-27.23033524 34.24667740]
[-40.36635971 27.00479507]
[-53.50238419 19.76291084]
[-66.63840485 12.52102852]
[-82.45920563 12.63423634]
[-89.86941528 -0.28621516]
[-103.00543976 -7.52809811]
[-115.52330017 -2.30131459]
[-128.56445312 -5.24685717]
[-137.35939026 -15.05531883]
[-138.82635498 -27.95065880]
[-151.74200439 -35.57862473]
[-164.65766907 -43.20659256]
[-177.57331848 -50.83456039]
[-190.81521606 -57.88099289]
[-204.35717773 -64.33197021]
[-217.89913940 -70.78295135]
[-231.44111633 -77.23392487]
[-248.34097290 -78.58716583]
[-251.71896362 -95.20117950]
[-236.68934631 -103.04637909]
[-224.99012756 -90.77589417]
[-211.44816589 -84.32492065]
[-197.90620422 -77.87393951]
[-184.36422729 -71.42295837]
[-180.80526733 -72.35793304]
[-176.60379028 -71.50991821]
[-172.65408325 -68.59159851]
[-169.94534302 -63.75021362]
[-157.02969360 -56.12224579]
[-144.11404419 -48.49428177]
[-131.19837952 -40.86631393]
[-115.18932343 -45.77497864]
[-100.25198364 -37.49171066]
[-95.76355743 -20.66412163]
[-82.62753296 -13.42223930]
[-67.74630737 -14.05343628]
[-59.39652252 -0.61499608]
[-46.26049805 6.62688684]
[-33.12447739 13.86876965]
[-19.98845100 21.11065292]
[-8.13900089 15.81609535]
[4.77900600 18.40100288]
[13.94708252 28.13211060]
[15.81231308 41.56851196]
[28.72796822 49.19647980]
[41.64362335 56.82444763]
[54.55927658 64.45241547]
[67.47492981 72.08038330]
[80.39058685 79.70834351]
[93.30623627 87.33631134]
[107.28417206 87.66645813]
[114.32173157 99.74803162]
[127.23738098 107.37599945]
[140.15303040 115.00396729]
[153.06869507 122.63193512]
[171.40513611 122.31880188]
[179.55624390 137.78179932]
[192.69227600 145.02368164]
[205.82829285 152.26556396]
[218.96432495 159.50744629]
[232.10034180 166.74932861]
[247.92114258 166.63612366]
[255.33135986 179.55656433]
[268.46737671 186.79844666]
[281.60339355 194.04034424]
[297.42419434 193.92712402]
[304.83441162 206.84757996]
[317.97042847 214.08946228]
[331.10644531 221.33134460]
[346.92727661 221.21813965]
[354.33746338 234.13859558]
[371.12747192 236.49061584]
[373.51531982 253.27555847]
[358.04733276 260.21661377]
[347.09558105 247.27461243]
[332.21435547 247.90580750]
[323.86456299 234.46737671]
[310.72854614 227.22549438]
[297.59252930 219.98361206]
[282.71130371 220.61480713]
[274.36151123 207.17636108]
[261.22549438 199.93447876]
[248.08947754 192.69259644]
[233.20825195 193.32379150]
[224.85845947 179.88534546]
[211.72244263 172.64346313]
[198.58641052 165.40158081]
[185.45039368 158.15969849]
[172.31436157 150.91781616]
[160.50625610 153.97436523]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 70]
[2 69]
[3 68]
[4 67]
[6 65]
[7 64]
[8 63]
[9 62]
[10 61]
[11 60]
[12 59]
[15 55]
[16 54]
[17 53]
[18 52]
[20 50]
[21 49]
[25 46]
[26 45]
[27 44]
[28 43]
[29 39]
[30 38]
[31 37]
[32 36]
[72 104]
[73 103]
[74 102]
[75 101]
[76 100]
[78 98]
[79 97]
[80 96]
[82 94]
[83 93]
[84 92]
[86 90]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
