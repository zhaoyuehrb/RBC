%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:00:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGUGCUGCGGCGAACUGGCUGGAGGAGCUAGGGGACUAGAGGCGGGGUGGGAGGGGGGCGGGUGGAAGGGGGAGGAAGUCCCGUAACGGAGACGCUGGUCAGGACGUUCCCACCUCCUCUGACACUGCCGAGUCCGAUCGGAGAGGGGUCACCGCCUCCUUCAGCGAGGAGGAGGGGGGCGGAGCCCGACUCAGGAUC\
) } def
/len { sequence length } bind def

/coor [
[97.07185364 130.57710266]
[86.75926971 119.68438721]
[79.46444702 121.42667389]
[71.86315918 134.35804749]
[64.26186371 147.28942871]
[64.54873657 165.69761658]
[48.96397781 173.75749207]
[41.56572723 186.80609131]
[41.48997498 202.62712097]
[28.48194313 209.88247681]
[21.08368874 222.93107605]
[13.68543625 235.97967529]
[6.28718233 249.02827454]
[10.73785686 264.19293213]
[3.08870506 278.02282715]
[-12.12216663 282.31292725]
[-25.87041855 274.51797485]
[-29.99945641 259.26260376]
[-22.05959511 245.59753418]
[-6.76141310 241.63002014]
[0.63684022 228.58142090]
[8.03509331 215.53282166]
[15.43334675 202.48422241]
[14.97992611 187.59652710]
[28.51712990 179.40783691]
[35.91538239 166.35923767]
[32.99682236 154.61482239]
[39.06038284 143.68109131]
[51.33049393 139.68814087]
[58.93178177 126.75675964]
[66.53307343 113.82538605]
[71.57180786 105.60594177]
[78.25891113 99.94876862]
[85.78083801 97.12635040]
[93.29196930 97.19179535]
[86.72342682 83.70645905]
[80.15488434 70.22112274]
[73.58634186 56.73579025]
[67.01779938 43.25045395]
[56.53788757 40.30056000]
[49.55862808 32.23300934]
[48.20476151 21.87328148]
[52.68428802 12.67823315]
[46.54043198 -1.00581002]
[40.39657974 -14.68985367]
[34.25272369 -28.37389565]
[28.10886765 -42.05794144]
[15.39794636 -51.47829437]
[17.24348259 -66.25811768]
[11.09962654 -79.94216156]
[-1.61129475 -89.36251831]
[0.23424087 -104.14234161]
[-5.90961456 -117.82638550]
[-12.05346966 -131.51042175]
[-18.19732475 -145.19447327]
[-24.34118080 -158.87850952]
[-30.48503685 -172.56256104]
[-36.62889099 -186.24659729]
[-42.77274704 -199.93064880]
[-54.53350067 -205.23950195]
[-59.36694336 -216.76995850]
[-55.18345642 -228.12545776]
[-61.11268997 -241.90385437]
[-67.04192352 -255.68225098]
[-70.89640045 -253.53681946]
[-75.55215454 -252.30120850]
[-80.78854370 -252.19377136]
[-86.33285522 -253.37950134]
[-91.87302399 -255.95858765]
[-97.07268524 -259.95779419]
[-111.89934540 -265.47872925]
[-114.22983551 -280.18988037]
[-123.93138885 -291.63015747]
[-133.63293457 -303.07043457]
[-143.33448792 -314.51071167]
[-159.14135742 -317.25341797]
[-166.72578430 -331.39047241]
[-160.26965332 -346.07711792]
[-144.72554016 -350.04705811]
[-132.01757812 -340.25485229]
[-131.89421082 -324.21228027]
[-122.19265747 -312.77200317]
[-112.49111176 -301.33172607]
[-102.78955841 -289.89144897]
[-88.65682220 -285.18878174]
[-85.63240814 -269.65936279]
[-71.71880341 -275.26394653]
[-72.65598297 -290.23464966]
[-73.59316254 -305.20535278]
[-74.53033447 -320.17602539]
[-89.20361328 -332.14981079]
[-90.45226288 -350.72741699]
[-77.94932556 -364.09072876]
[-79.35394287 -379.02484131]
[-80.75856781 -393.95892334]
[-90.68804932 -407.01025391]
[-84.10130310 -422.02847290]
[-67.77421570 -423.56411743]
[-58.50268936 -410.03744507]
[-65.82447815 -395.36355591]
[-64.41985321 -380.42944336]
[-63.01523209 -365.49536133]
[-52.85176086 -360.29098511]
[-46.39894867 -350.72564697]
[-45.35789490 -339.11389160]
[-50.10288239 -328.33374023]
[-59.55964279 -321.11322021]
[-58.62246323 -306.14251709]
[-57.68528748 -291.17181396]
[-56.74810791 -276.20114136]
[-53.26352692 -261.61148071]
[-47.33429337 -247.83309937]
[-41.40505981 -234.05470276]
[-26.79355049 -224.34130859]
[-29.08870316 -206.07449341]
[-22.94484901 -192.39045715]
[-16.80099297 -178.70642090]
[-10.65713787 -165.02236938]
[-4.51328182 -151.33833313]
[1.63057339 -137.65428162]
[7.77442884 -123.97023773]
[13.91828442 -110.28620148]
[26.18975639 -101.84461975]
[24.78367043 -86.08602142]
[30.92752457 -72.40197754]
[43.19899750 -63.96039581]
[41.79291153 -48.20179367]
[47.93676758 -34.51775360]
[54.08061981 -20.83370781]
[60.22447586 -7.14966536]
[66.36833191 6.53437805]
[82.83340454 16.66393089]
[80.50313568 36.68191147]
[87.07167816 50.16724777]
[93.64022064 63.65258026]
[100.20876312 77.13791656]
[106.77730560 90.62325287]
[116.74437714 101.83295441]
[129.36894226 109.93360138]
[141.99349976 118.03424835]
[154.61805725 126.13488770]
[173.02340698 126.56735229]
[180.46832275 142.45506287]
[193.21794128 150.35740662]
[205.96757507 158.25975037]
[221.16995239 154.86483765]
[233.98731995 163.06056213]
[237.13015747 177.57463074]
[249.87977600 185.47697449]
[262.62939453 193.37931824]
[275.37902832 201.28166199]
[288.09667969 199.09976196]
[298.55511475 205.95065308]
[301.44287109 217.70266724]
[314.06744385 225.80331421]
[326.69201660 233.90396118]
[339.31655884 242.00460815]
[351.94113159 250.10525513]
[364.56567383 258.20590210]
[377.19024658 266.30654907]
[389.81481934 274.40719604]
[402.43936157 282.50784302]
[415.06393433 290.60848999]
[427.68847656 298.70913696]
[442.94207764 295.55221558]
[455.62979126 303.94726562]
[458.54537964 318.50869751]
[475.14147949 321.97366333]
[476.40615845 338.88040161]
[460.51028442 344.77587891]
[450.44476318 331.13323975]
[435.99285889 334.55068970]
[423.07437134 326.51531982]
[419.58786011 311.33367920]
[406.96328735 303.23303223]
[394.33871460 295.13238525]
[381.71417236 287.03173828]
[369.08959961 278.93109131]
[356.46502686 270.83047485]
[343.84048462 262.72982788]
[331.21591187 254.62916565]
[318.59136963 246.52851868]
[305.96679688 238.42788696]
[293.34222412 230.32723999]
[275.79714966 230.45425415]
[267.47668457 214.03129578]
[254.72706604 206.12895203]
[241.97743225 198.22660828]
[229.22781372 190.32426453]
[214.83111572 193.96714783]
[201.78860474 186.13465881]
[198.06523132 171.00938416]
[185.31559753 163.10704041]
[172.56597900 155.20469666]
[160.71652222 157.66223145]
[150.02799988 151.17617798]
[146.51741028 138.75944519]
[133.89285278 130.65881348]
[121.26829529 122.55815887]
[108.64373016 114.45751953]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 31]
[4 30]
[5 29]
[7 26]
[8 25]
[10 23]
[11 22]
[12 21]
[13 20]
[35 137]
[36 136]
[37 135]
[38 134]
[39 133]
[43 131]
[44 130]
[45 129]
[46 128]
[47 127]
[49 125]
[50 124]
[52 122]
[53 121]
[54 120]
[55 119]
[56 118]
[57 117]
[58 116]
[59 115]
[62 113]
[63 112]
[64 111]
[70 86]
[72 84]
[73 83]
[74 82]
[75 81]
[87 110]
[88 109]
[89 108]
[90 107]
[93 102]
[94 101]
[95 100]
[138 200]
[139 199]
[140 198]
[141 197]
[143 194]
[144 193]
[145 192]
[148 189]
[149 188]
[150 187]
[151 186]
[154 184]
[155 183]
[156 182]
[157 181]
[158 180]
[159 179]
[160 178]
[161 177]
[162 176]
[163 175]
[164 174]
[167 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
