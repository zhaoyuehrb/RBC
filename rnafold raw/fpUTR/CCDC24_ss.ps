%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAGAGGUGGGGCUAGGGCCCUGGUUCCCACUGCCUGGUUUCUGGGCCCCCGGCAUCCGAGUCGGCCAAAAGCCGGGCAGAAGAGAGCGCCAAGGACUGGCAGUUCCGGAACGGGCAAUCCCAGCCGAGGGGACCAGCGGCAGAGCACGGGUCCGAGCCGGGGACGGCGGCGUCGGUGGGUC\
) } def
/len { sequence length } bind def

/coor [
[245.92808533 441.59075928]
[239.02711487 428.27249146]
[232.12612915 414.95419312]
[218.78431702 414.18582153]
[207.47702026 406.86145020]
[201.22102356 394.80764771]
[201.74824524 381.12890625]
[209.02780151 369.40835571]
[202.35520935 355.97418213]
[199.12298584 354.50982666]
[196.44731140 351.39428711]
[195.10229492 346.91000366]
[195.70483398 341.67700195]
[189.72880554 327.91882324]
[183.75279236 314.16067505]
[171.20976257 311.15084839]
[162.56709290 301.31454468]
[161.15438843 288.10128784]
[167.71148682 276.31976318]
[161.97123718 262.46157837]
[156.23098755 248.60337830]
[150.37263489 234.79469299]
[144.39662170 221.03652954]
[138.42060852 207.27835083]
[132.44459534 193.52018738]
[126.46857452 179.76202393]
[120.49255371 166.00384521]
[114.51654053 152.24568176]
[108.54052734 138.48750305]
[102.56450653 124.72933960]
[71.85584259 118.48853302]
[62.95587540 79.19738770]
[48.90978241 73.93361664]
[34.86368942 68.66984558]
[20.81759834 63.40607452]
[6.77150536 58.14230347]
[-7.27458715 52.87853241]
[-21.32067871 47.61476135]
[-35.36677170 42.35099030]
[-49.41286469 37.08721924]
[-63.45895767 31.82344818]
[-77.50505066 26.55967712]
[-93.14277649 28.96220207]
[-102.34551239 17.25071716]
[-116.39160156 11.98694706]
[-130.43769836 6.72317553]
[-134.74494934 7.60371494]
[-138.70474243 7.10383797]
[-141.92233276 5.50577736]
[-144.13681030 3.19173145]
[-145.24215698 0.59096712]
[-158.89630127 -5.61907196]
[-172.55043030 -11.82911110]
[-186.20455933 -18.03915024]
[-199.85870361 -24.24918938]
[-214.56811523 -18.46918297]
[-229.02275085 -24.85973358]
[-234.64692688 -39.62944031]
[-228.10389709 -54.01570129]
[-213.27555847 -59.48340225]
[-198.95927429 -52.78865051]
[-193.64866638 -37.90332413]
[-179.99452209 -31.69328499]
[-166.34039307 -25.48324585]
[-152.68624878 -19.27320671]
[-139.03211975 -13.06316853]
[-125.17392731 -7.32291698]
[-111.12783051 -2.05914593]
[-97.08174133 3.20462513]
[-82.44868469 0.42559895]
[-72.24127960 12.51358414]
[-58.19518661 17.77735519]
[-44.14909363 23.04112625]
[-30.10300064 28.30489731]
[-16.05690765 33.56866837]
[-2.01081610 38.83243942]
[12.03527641 44.09621048]
[26.08136940 49.35998154]
[40.12746048 54.62375259]
[54.17355347 59.88752365]
[68.21965027 65.15129089]
[74.69338989 61.36438751]
[67.11979675 48.41677856]
[80.06753540 40.84339523]
[87.64087677 53.79057693]
[94.11461639 50.00367355]
[96.41053009 35.18042374]
[98.70644379 20.35717010]
[101.00235748 5.53391886]
[103.17163849 -9.30839252]
[105.21414185 -24.16868210]
[107.25663757 -39.02896881]
[109.29914093 -53.88925934]
[100.79006195 -67.48981476]
[106.25376892 -82.57382965]
[121.49898529 -87.57012939]
[134.83087158 -78.64599609]
[136.02235413 -62.64724731]
[124.15943146 -51.84675980]
[122.11692810 -36.98646927]
[120.07443237 -22.12618256]
[118.03192902 -7.26589251]
[120.24124146 -0.19432136]
[115.82560730 7.82983160]
[113.52969360 22.65308380]
[111.23377991 37.47633362]
[108.93787384 52.29958725]
[121.94953918 59.76258850]
[133.58520508 50.29627228]
[145.22088623 40.82995224]
[145.04934692 27.34773064]
[152.57075500 16.39261436]
[164.84924316 11.84427929]
[177.31600952 15.15584087]
[189.11160278 5.88955736]
[200.90719604 -3.37672567]
[206.50447083 -18.79108620]
[222.69732666 -21.38405800]
[232.82792664 -8.48821449]
[226.47479248 6.63030672]
[210.17347717 8.41886711]
[198.37788391 17.68515015]
[186.58229065 26.95143318]
[185.30027771 43.70952225]
[172.04107666 54.57820511]
[154.68719482 52.46562195]
[143.05152893 61.93193817]
[131.41586304 71.39826202]
[133.61705017 101.95265198]
[116.32267761 118.75331879]
[122.29869080 132.51148987]
[128.27470398 146.26966858]
[134.25073242 160.02783203]
[140.22674561 173.78599548]
[146.20275879 187.54417419]
[152.17877197 201.30233765]
[158.15478516 215.06051636]
[164.13081360 228.81867981]
[170.43507385 235.46255493]
[170.08917236 242.86312866]
[175.82943726 256.72131348]
[181.56968689 270.57952881]
[197.84318542 276.96646118]
[204.34564209 292.83004761]
[197.51097107 308.18466187]
[203.48698425 321.94281006]
[209.46299744 335.70098877]
[215.78936768 349.30160522]
[222.46195984 362.73577881]
[239.16638184 365.31900024]
[250.92913818 377.22543335]
[253.26260376 393.63119507]
[245.44441223 408.05322266]
[252.34538269 421.37152100]
[259.24636841 434.68978882]
[266.26077271 447.94866943]
[273.38812256 461.14718628]
[286.75344849 469.61355591]
[285.99282837 484.48870850]
[293.12017822 497.68722534]
[300.24752808 510.88574219]
[315.12365723 515.50518799]
[322.16378784 528.99188232]
[317.66818237 543.14550781]
[324.79553223 556.34399414]
[331.92288208 569.54254150]
[339.05026245 582.74102783]
[353.28942871 590.87603760]
[353.09338379 607.27398682]
[338.66375732 615.06616211]
[324.84451294 606.23657227]
[325.85174561 589.86840820]
[318.72436523 576.66992188]
[311.59701538 563.47137451]
[304.46966553 550.27288818]
[290.16903687 546.26940918]
[282.75286865 532.98577881]
[287.04901123 518.01312256]
[279.92166138 504.81457520]
[272.79431152 491.61605835]
[259.93881226 484.09375000]
[260.18963623 468.27453613]
[253.06227112 455.07601929]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 155]
[2 154]
[3 153]
[8 149]
[9 148]
[13 147]
[14 146]
[15 145]
[19 142]
[20 141]
[21 140]
[22 138]
[23 137]
[24 136]
[25 135]
[26 134]
[27 133]
[28 132]
[29 131]
[30 130]
[32 81]
[33 80]
[34 79]
[35 78]
[36 77]
[37 76]
[38 75]
[39 74]
[40 73]
[41 72]
[42 71]
[44 69]
[45 68]
[46 67]
[51 66]
[52 65]
[53 64]
[54 63]
[55 62]
[86 107]
[87 106]
[88 105]
[89 104]
[90 102]
[91 101]
[92 100]
[93 99]
[108 128]
[109 127]
[110 126]
[114 123]
[115 122]
[116 121]
[156 183]
[157 182]
[159 180]
[160 179]
[161 178]
[164 175]
[165 174]
[166 173]
[167 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
