%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:13:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUACAGCAGUAGUGCGCUUGCGCAGCUGGUCCCACACCAAGUCGCCCGCCUCUCCUCGUCCGGCUAGCAGAGGGCGCUGUGAGCCGCCUUCGCCCCCGGACCGCUCACCGCAACC\
) } def
/len { sequence length } bind def

/coor [
[42.91260910 169.50160217]
[36.18885040 156.09298706]
[36.74386597 141.10325623]
[44.44079971 128.22857666]
[57.38174057 120.64359283]
[72.37452698 120.21832275]
[57.48389435 118.41027832]
[42.85171127 124.42773438]
[31.14986610 115.21274567]
[16.25923157 113.40469360]
[7.22927141 115.49374390]
[0.99508280 111.34298706]
[-13.84164047 109.13580322]
[-22.92443275 110.98166656]
[-29.04493523 106.66503143]
[-43.81705093 104.06031036]
[-58.58916855 101.45558167]
[-67.26112366 108.29006958]
[-78.04856873 109.13122559]
[-87.28920746 103.94001770]
[-91.98232269 94.68408203]
[-106.59333038 91.29019928]
[-121.20433807 87.89631653]
[-130.40620422 89.00532532]
[-136.15951538 84.21018982]
[-149.68141174 91.94300079]
[-164.34738159 87.89777374]
[-171.63609314 74.95906067]
[-186.15072632 71.17412567]
[-200.66534424 67.38919067]
[-215.17996216 63.60424805]
[-229.69107056 70.44582367]
[-244.02340698 63.23721695]
[-247.18240356 47.50825500]
[-236.74476624 35.32485199]
[-220.71736145 36.03306961]
[-211.39501953 49.08962631]
[-196.88040161 52.87456512]
[-182.36578369 56.65950394]
[-167.85116577 60.44444275]
[-155.17224121 52.71263885]
[-140.39843750 56.34433746]
[-132.37458801 69.69557190]
[-117.81045532 73.28530884]
[-103.19944763 76.67919159]
[-88.58843994 80.07307434]
[-70.67337036 73.00511169]
[-55.98444366 86.68347168]
[-41.21232986 89.28819275]
[-26.44021225 91.89291382]
[-11.63445854 94.29907990]
[3.20226479 96.50626373]
[18.06728172 98.51406097]
[32.95791626 100.32211304]
[46.52502060 94.17533112]
[59.29194641 103.51964569]
[74.18257904 105.32769012]
[89.13920593 80.05995941]
[113.35463715 86.41405487]
[127.23201752 80.72034454]
[141.10940552 75.02664185]
[154.98678589 69.33293915]
[168.86416626 63.63922882]
[182.74154663 57.94552612]
[186.50892639 44.93279648]
[196.95735168 36.62022781]
[210.09371948 35.89587784]
[221.06196594 42.80118942]
[235.08720398 37.48211670]
[242.11201477 31.43592453]
[249.56106567 32.21406174]
[263.72406006 27.27345657]
[277.88705444 22.33284950]
[292.05004883 17.39224434]
[306.21304321 12.45163727]
[320.37603760 7.51103115]
[334.53903198 2.57042480]
[348.63442993 -2.55987740]
[362.65966797 -7.87895060]
[375.32543945 -19.14900970]
[389.66131592 -10.09807205]
[384.93264771 6.18308496]
[367.97872925 6.14629316]
[353.95349121 11.46536636]
[348.74737549 16.84961319]
[339.47964478 16.73341942]
[325.31665039 21.67402458]
[311.15365601 26.61463165]
[296.99066162 31.55523872]
[282.82766724 36.49584579]
[268.66467285 41.43645096]
[254.50167847 46.37705612]
[240.40628052 51.50735855]
[226.38104248 56.82643127]
[220.19842529 72.40289307]
[204.37599182 78.87411499]
[188.43525696 71.82290649]
[174.55786133 77.51660919]
[160.68048096 83.21031952]
[146.80310059 88.90402222]
[132.92572021 94.59773254]
[119.04833984 100.29143524]
[117.16664886 114.86162567]
[104.17350769 126.02893829]
[111.14435577 139.31077576]
[125.97158051 145.43719482]
[130.28778076 160.88873291]
[120.78192902 173.81228638]
[104.74611664 174.29402161]
[94.48162842 161.96438599]
[97.86251068 146.28161621]
[90.89166260 132.99978638]
[95.81064606 147.17030334]
[93.30688477 161.95986938]
[83.99774933 173.72166443]
[70.17868805 179.55548096]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 57]
[7 56]
[9 54]
[10 53]
[12 52]
[13 51]
[15 50]
[16 49]
[17 48]
[21 46]
[22 45]
[23 44]
[25 43]
[28 40]
[29 39]
[30 38]
[31 37]
[59 102]
[60 101]
[61 100]
[62 99]
[63 98]
[64 97]
[68 94]
[69 93]
[71 92]
[72 91]
[73 90]
[74 89]
[75 88]
[76 87]
[77 86]
[78 84]
[79 83]
[104 112]
[105 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
