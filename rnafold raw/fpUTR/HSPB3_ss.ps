%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:23:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAAAGACAAGAGAGCAUUCCGUGCUAUGAUUCAGGCCUAAUUAAGUGAUUGCGUCUGGGCACGGCUAUAAACCACUAGCUGCUUCAACUGGUAAUCCAGUCAGUAGGCAACUGCAGGGGCUCGCCACUGACUGAAGGCAGUGGAAGGUUGGCAGAAGGAGGCUGUUCAAGGCUGUUUUUGCCUUCACU\
) } def
/len { sequence length } bind def

/coor [
[101.36205292 181.53814697]
[100.61829376 166.55659485]
[99.87453461 151.57504272]
[92.72269440 149.31646729]
[88.20554352 163.62014771]
[83.68838501 177.92382812]
[79.17122650 192.22750854]
[74.65384674 206.53112793]
[60.35030746 202.01351929]
[64.86754608 187.71035767]
[69.38470459 173.40667725]
[73.90186310 159.10299683]
[78.41901398 144.79931641]
[71.26717377 142.54074097]
[62.05398560 154.37783813]
[52.84079361 166.21495056]
[43.62760544 178.05206299]
[34.41441345 189.88916016]
[29.45722771 206.10220337]
[12.50551510 205.82696533]
[8.07729816 189.46153259]
[22.57730484 180.67597961]
[31.79049683 168.83886719]
[41.00368881 157.00175476]
[50.21687698 145.16465759]
[59.43006897 133.32754517]
[53.30572510 109.39376068]
[59.03745651 87.74714661]
[44.08868790 88.98583221]
[35.77727509 92.81921387]
[28.88286018 90.11933136]
[13.91565514 91.11069489]
[-1.05154896 92.10205078]
[-16.01875305 93.09341431]
[-30.98595810 94.08477020]
[-45.95316315 95.07612610]
[-60.92036819 96.06748962]
[-74.17900085 104.69993591]
[-87.38980865 97.82070160]
[-102.35701752 98.81205750]
[-117.32421875 99.80342102]
[-132.29142761 100.79477692]
[-147.25863647 101.78613281]
[-160.57940674 111.35112762]
[-175.40985107 104.35185242]
[-176.49368286 87.98855591]
[-162.71594238 79.09440613]
[-148.24998474 86.81893158]
[-133.28279114 85.82757568]
[-118.31558228 84.83621216]
[-103.34837341 83.84485626]
[-88.38117218 82.85350037]
[-76.19308472 74.29196167]
[-61.91172409 81.10028076]
[-46.94452286 80.10892487]
[-31.97731590 79.11756134]
[-17.01011276 78.12620544]
[-2.04290771 77.13484955]
[12.92429638 76.14348602]
[27.89150047 75.15213013]
[42.84999847 74.03707123]
[57.79876709 72.79837799]
[63.25138474 58.82451248]
[53.09216309 47.78865051]
[42.93293762 36.75279236]
[32.77371597 25.71693420]
[22.61449051 14.68107605]
[12.45526695 3.64521766]
[-2.94185519 5.57089853]
[-16.51398849 -1.95085931]
[-23.04236984 -16.02778625]
[-20.01670265 -31.24701691]
[-8.60041904 -41.75644684]
[6.81668711 -43.51498413]
[20.30642509 -35.84643555]
[26.68171310 -21.69951820]
[23.49112511 -6.51400614]
[33.65034866 4.52185249]
[43.80957413 15.55771160]
[53.96879578 26.59357071]
[64.12802124 37.62942886]
[74.28724670 48.66528702]
[89.27442932 48.04541397]
[98.48761749 36.20830536]
[107.70081329 24.37119675]
[116.91400146 12.53409004]
[119.28442383 -3.10853338]
[133.20748901 -8.39979076]
[142.42068481 -20.23689842]
[151.63388062 -32.07400513]
[160.84706116 -43.91111374]
[163.21749878 -59.55373764]
[177.14056396 -64.84499359]
[173.39720154 -76.15135956]
[175.56268311 -87.74073792]
[182.98358154 -96.74731445]
[193.72172546 -101.00109100]
[205.05926514 -99.55012512]
[214.65879822 -111.07614136]
[224.25831604 -122.60215759]
[233.85784912 -134.12817383]
[243.45738220 -145.65419006]
[253.05690002 -157.18020630]
[262.65643311 -168.70622253]
[272.25595093 -180.23223877]
[275.35131836 -188.84579468]
[282.11074829 -191.86776733]
[291.89953613 -203.23348999]
[301.68832397 -214.59921265]
[298.51016235 -226.07727051]
[301.24765015 -237.54502869]
[309.10598755 -246.17257690]
[320.04183960 -249.88867188]
[331.29348755 -247.87733459]
[341.45272827 -258.91320801]
[344.50894165 -275.02502441]
[360.07748413 -280.17800903]
[372.14273071 -269.07116699]
[368.29299927 -253.13027954]
[352.48858643 -248.75396729]
[342.32934570 -237.71810913]
[344.19622803 -219.52044678]
[331.97308350 -205.48461914]
[313.05404663 -204.81042480]
[303.26525879 -193.44470215]
[293.47647095 -182.07897949]
[283.78198242 -170.63272095]
[274.18246460 -159.10670471]
[264.58291626 -147.58068848]
[254.98339844 -136.05467224]
[245.38386536 -124.52864838]
[235.78433228 -113.00263214]
[226.18481445 -101.47661591]
[216.58528137 -89.95059967]
[219.35218811 -71.86788177]
[207.83999634 -57.24324799]
[188.97767639 -55.63180542]
[187.26623535 -40.83584976]
[172.68417358 -34.69792175]
[163.47097778 -22.86081505]
[154.25779724 -11.02370834]
[145.04460144 0.81339967]
[143.33317566 15.60935402]
[128.75111389 21.74728012]
[119.53791809 33.58438873]
[110.32472992 45.42149734]
[101.11153412 57.25860214]
[125.21635437 62.49631119]
[143.62675476 80.88705444]
[149.48171997 107.63161469]
[139.50840759 134.57933044]
[149.84870911 145.44570923]
[160.18901062 156.31208801]
[170.52931213 167.17846680]
[180.86961365 178.04484558]
[191.20991516 188.91122437]
[201.55021667 199.77760315]
[211.89051819 210.64398193]
[227.00880432 215.30743408]
[230.17730713 229.86112976]
[240.51760864 240.72750854]
[255.63589478 245.39096069]
[258.80438232 259.94464111]
[269.14468384 270.81103516]
[285.08261108 272.64471436]
[293.46356201 286.32458496]
[287.85842896 301.35662842]
[272.56695557 306.20953369]
[259.31948853 297.16055298]
[258.27832031 281.15133667]
[247.93800354 270.28494263]
[233.55932617 266.39874268]
[229.65122986 251.06781006]
[219.31092834 240.20143127]
[204.93223572 236.31520081]
[201.02413940 220.98428345]
[190.68383789 210.11790466]
[180.34353638 199.25152588]
[170.00323486 188.38514709]
[159.66293335 177.51876831]
[149.32263184 166.65238953]
[138.98233032 155.78601074]
[128.64202881 144.91963196]
[114.85608673 150.83129883]
[115.59984589 165.81283569]
[116.34359741 180.79438782]
[125.68704224 194.27148438]
[118.44351196 208.98417664]
[102.06453705 209.79731750]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 186]
[2 185]
[3 184]
[14 26]
[15 25]
[16 24]
[17 23]
[18 22]
[28 62]
[29 61]
[31 60]
[32 59]
[33 58]
[34 57]
[35 56]
[36 55]
[37 54]
[39 52]
[40 51]
[41 50]
[42 49]
[43 48]
[63 82]
[64 81]
[65 80]
[66 79]
[67 78]
[68 77]
[83 147]
[84 146]
[85 145]
[86 144]
[88 142]
[89 141]
[90 140]
[91 139]
[93 137]
[98 134]
[99 133]
[100 132]
[101 131]
[102 130]
[103 129]
[104 128]
[105 127]
[107 126]
[108 125]
[109 124]
[114 121]
[115 120]
[151 183]
[152 182]
[153 181]
[154 180]
[155 179]
[156 178]
[157 177]
[158 176]
[160 174]
[161 173]
[163 171]
[164 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
