%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:02:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCCCGCGAGGCGCACCAUGGCAACCAGACUUCUGCGUCGCGGAAGCGGGUCCCGCAGGUCGCCACGGUUGGGGGAAACGCGGCGGACGCCGCCCCCGUCCCGAAGGGGACUCGAAA\
) } def
/len { sequence length } bind def

/coor [
[69.32311249 123.30627441]
[65.59181976 116.32283783]
[63.40399170 108.80826569]
[62.81746292 101.09511566]
[63.82005692 93.51689148]
[49.90571594 87.91411591]
[35.99137497 82.31134033]
[26.09947777 87.20281219]
[15.37687206 85.79941559]
[7.40990496 78.81823730]
[4.72532654 68.79996490]
[-8.87393570 62.47066116]
[-22.47319794 56.14135742]
[-36.07246017 49.81205368]
[-45.30052185 49.00378418]
[-49.94376373 43.13198471]
[-63.37121582 36.44591141]
[-76.79866028 29.75983429]
[-95.08378601 31.36817169]
[-104.29247284 16.49269676]
[-117.89173126 10.16339397]
[-131.49099731 3.83409119]
[-143.93685913 7.52019691]
[-155.17453003 1.87094021]
[-159.36254883 -9.56132030]
[-172.78999329 -16.24739456]
[-186.21743774 -22.93347168]
[-202.01965332 -22.15859032]
[-209.96383667 -34.75777054]
[-219.16734314 -35.80935287]
[-223.65397644 -41.80167007]
[-236.90025330 -48.83985901]
[-250.14653015 -55.87804794]
[-263.39282227 -62.91623306]
[-276.63909912 -69.95442200]
[-289.88537598 -76.99261475]
[-303.13165283 -84.03079987]
[-319.95596313 -86.12328339]
[-322.60269165 -102.86936188]
[-307.24374390 -110.04843140]
[-296.09347534 -97.27707672]
[-282.84716797 -90.23889160]
[-269.60089111 -83.20069885]
[-256.35461426 -76.16251373]
[-243.10833740 -69.12432861]
[-229.86206055 -62.08613586]
[-216.61578369 -55.04795074]
[-203.27775574 -48.18521881]
[-188.43595886 -49.43833160]
[-179.53137207 -36.36091995]
[-166.10391235 -29.67484474]
[-152.67646790 -22.98876953]
[-135.30482483 -25.06383324]
[-125.16168976 -9.76517105]
[-111.56243134 -3.43586802]
[-97.96316528 2.89343500]
[-86.41388702 -0.96014190]
[-74.99054718 4.30356503]
[-70.11258698 16.33238602]
[-56.68513870 23.01846123]
[-43.25769043 29.70453644]
[-29.74315643 36.21279144]
[-16.14389420 42.54209518]
[-2.54463267 48.87139893]
[11.05462933 55.20070267]
[30.04487801 51.97716904]
[41.59415054 68.39700317]
[55.50849152 73.99977875]
[69.42283630 79.60255432]
[85.56867218 64.75663757]
[108.03083801 61.41598129]
[129.19737244 71.59011841]
[141.40196228 92.55712891]
[156.10888672 89.60650635]
[170.81581116 86.65588379]
[185.52275085 83.70525360]
[188.87319946 80.50437164]
[192.69989014 78.79207611]
[196.44871521 78.52831268]
[199.64134216 79.48822784]
[201.93150330 81.30582428]
[216.86750793 79.92179871]
[231.80352783 78.53777313]
[246.73954773 77.15374756]
[261.67556763 75.76972198]
[274.74057007 65.85825348]
[289.74969482 72.46569824]
[291.26281738 88.79489136]
[277.72335815 98.04775238]
[263.05957031 90.70573425]
[248.12356567 92.08975983]
[233.18754578 93.47378540]
[218.25154114 94.85781097]
[203.31552124 96.24183655]
[188.47337341 98.41218567]
[173.76643372 101.36280823]
[159.05950928 104.31343842]
[144.35258484 107.26406097]
[139.49194336 121.45470428]
[149.30123901 132.80271912]
[159.11054993 144.15074158]
[168.91984558 155.49876404]
[178.72914124 166.84678650]
[194.38905334 171.71498108]
[197.73861694 187.76840210]
[185.33209229 198.49267578]
[169.93225098 192.85559082]
[167.38111877 176.65609741]
[157.57182312 165.30807495]
[147.76252747 153.96005249]
[137.95321655 142.61203003]
[128.14392090 131.26400757]
[120.90435791 135.99302673]
[112.93146515 139.09770203]
[104.58023071 140.47998047]
[96.21440125 140.11761475]
[88.19067383 138.06352234]
[80.84346008 134.44195557]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 69]
[6 68]
[7 67]
[11 65]
[12 64]
[13 63]
[14 62]
[16 61]
[17 60]
[18 59]
[20 56]
[21 55]
[22 54]
[25 52]
[26 51]
[27 50]
[29 48]
[31 47]
[32 46]
[33 45]
[34 44]
[35 43]
[36 42]
[37 41]
[73 98]
[74 97]
[75 96]
[76 95]
[81 94]
[82 93]
[83 92]
[84 91]
[85 90]
[99 112]
[100 111]
[101 110]
[102 109]
[103 108]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
