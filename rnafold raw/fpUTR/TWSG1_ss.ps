%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:40:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUUUAAGGUGCCCGAGGCUCGCGGGCGCUGCGCUGAGGGGACGGCGGGAGGCGCGGCCUGGCCUCGCACUCAAAGCCGCCGCAGCGCGCCCCGGGCUCGGCCGACCCGGCGGGGAUCUAGGGGUGGGCGACUUCGCGGGACCGUGGCGCAUGUUUCCUGGGAGUUACUGAUCAUCUUCUUUGAAGAAAC\
) } def
/len { sequence length } bind def

/coor [
[301.38415527 493.49063110]
[294.74981689 480.03753662]
[288.11547852 466.58444214]
[271.86288452 464.32852173]
[260.03494263 452.71759033]
[257.42666626 436.18142700]
[265.26031494 421.19909668]
[258.40673828 407.85635376]
[245.70915222 400.07043457]
[246.28625488 384.25976562]
[239.43269348 370.91702271]
[232.57913208 357.57427979]
[225.72557068 344.23153687]
[218.76309204 330.94531250]
[211.69213867 317.71649170]
[204.62118530 304.48767090]
[191.79789734 296.91055298]
[192.11624146 281.09255981]
[185.04528809 267.86373901]
[177.86634827 254.69320679]
[170.57989502 241.58186340]
[163.29344177 228.47050476]
[156.00698853 215.35914612]
[148.72053528 202.24778748]
[141.43408203 189.13642883]
[134.14764404 176.02508545]
[126.75416565 162.97377014]
[119.14813995 150.04518127]
[111.43659973 137.17926025]
[103.72505951 124.31333160]
[96.01351929 111.44740295]
[84.73591614 101.55721283]
[70.97350311 95.59098816]
[57.21108627 89.62476349]
[43.44866562 83.65853119]
[29.68625069 77.69230652]
[15.92383194 71.72608185]
[6.03691864 76.30854797]
[-4.52125454 74.71689606]
[-12.29107285 67.71737671]
[-14.86173534 57.80744171]
[-28.42157364 51.39411545]
[-37.53353500 50.55073547]
[-42.14949417 44.76332092]
[-55.60258865 38.12899017]
[-69.05567932 31.49465752]
[-82.50876617 24.86032867]
[-98.95928955 30.78744316]
[-114.30823517 23.14097786]
[-119.28547668 7.08414316]
[-132.84532166 0.67081672]
[-146.40515137 -5.74250984]
[-160.01701355 -12.04468632]
[-173.67997742 -18.23529243]
[-187.34292603 -24.42589760]
[-203.10624695 -23.07369804]
[-211.50581360 -35.37395859]
[-225.16877747 -41.56456375]
[-238.83172607 -47.75517273]
[-255.75439453 -48.78469849]
[-259.44976807 -65.33101654]
[-244.57305908 -73.46244049]
[-232.64112854 -61.41812897]
[-218.97816467 -55.22752380]
[-205.31521606 -49.03691864]
[-190.52915955 -50.83190918]
[-181.15232849 -38.08885574]
[-167.48936462 -31.89824867]
[-153.82640076 -25.70764351]
[-146.42433167 -25.81095695]
[-139.99183655 -19.30234909]
[-126.43199158 -12.88902283]
[-112.87215424 -6.47569609]
[-101.45751190 -12.47371674]
[-88.47935486 -10.77178097]
[-78.71079254 -1.76961434]
[-75.87443542 11.40723705]
[-62.42134857 18.04156685]
[-48.96825790 24.67589760]
[-35.51516724 31.31022835]
[-22.00824738 37.83427429]
[-8.44840908 44.24760056]
[10.64400578 41.24645615]
[21.89005852 57.96366119]
[35.65247726 63.92988968]
[49.41489410 69.89611816]
[63.17731094 75.86234283]
[76.93972778 81.82856750]
[90.70214844 87.79479980]
[104.60683441 82.16811371]
[110.34709167 68.30992126]
[116.08734131 54.45172882]
[121.82759094 40.59353256]
[127.56784058 26.73534012]
[133.19453430 12.83065033]
[138.70726013 -1.11960828]
[144.22000122 -15.06986713]
[149.61842346 -29.06475830]
[154.90217590 -43.10334778]
[160.18592834 -57.14193726]
[157.80566406 -72.78306580]
[169.53022766 -81.96913147]
[174.81398010 -96.00772095]
[180.09773254 -110.04630280]
[185.38148499 -124.08489227]
[185.30200195 -141.03865051]
[201.57121277 -145.80828857]
[210.65820312 -131.49525452]
[199.42005920 -118.80114746]
[194.13632202 -104.76255798]
[188.85256958 -90.72396851]
[183.56881714 -76.68537903]
[186.32701111 -62.04838562]
[174.22451782 -51.85818481]
[168.94076538 -37.81959534]
[163.65701294 -23.78100777]
[164.24423218 -16.40154457]
[158.17025757 -9.55712795]
[152.65753174 4.39313078]
[147.14479065 18.34338951]
[147.61117554 25.73147392]
[141.42604065 32.47559357]
[135.68579102 46.33378601]
[129.94552612 60.19197845]
[124.20528412 74.05017090]
[118.46502686 87.90836334]
[115.78733063 98.56318665]
[108.87944794 103.73586273]
[116.59098816 116.60179138]
[124.30252838 129.46771240]
[132.01406860 142.33364868]
[139.12182617 148.09722900]
[139.74455261 155.47377014]
[146.75704956 161.35287476]
[147.25898743 168.73863220]
[154.54544067 181.84999084]
[161.83189392 194.96133423]
[169.11834717 208.07269287]
[176.40480042 221.18405151]
[183.69125366 234.29541016]
[190.97769165 247.40675354]
[197.89308167 253.39981079]
[198.27410889 260.79278564]
[205.34506226 274.02160645]
[218.67410278 282.54492188]
[217.85000610 297.41671753]
[224.92095947 310.64553833]
[231.99191284 323.87435913]
[238.80830383 329.97976685]
[239.06831360 337.37799072]
[245.92187500 350.72073364]
[252.77543640 364.06347656]
[259.62899780 377.40618896]
[272.81680298 386.14648438]
[271.74948120 401.00277710]
[278.60302734 414.34552002]
[292.35235596 415.44021606]
[303.67318726 423.12820435]
[309.66525269 435.31051636]
[308.85769653 448.75421143]
[301.56857300 459.95010376]
[308.20291138 473.40319824]
[314.83721924 486.85629272]
[323.92132568 485.40811157]
[333.08880615 486.00762939]
[341.88433838 488.61990356]
[349.87231445 493.11007690]
[356.65829468 499.25045776]
[361.90853882 506.73196411]
[365.36636353 515.17987061]
[366.86474609 524.17224121]
[366.33441162 533.26135254]
[363.80688477 541.99584961]
[359.41281128 549.94299316]
[353.37515259 556.71038818]
[345.99783325 561.96520996]
[350.81942749 576.16918945]
[355.64102173 590.37310791]
[360.46261597 604.57708740]
[365.28417969 618.78100586]
[376.10098267 631.83605957]
[366.55053711 645.84411621]
[350.44610596 640.54467773]
[351.08023071 623.60260010]
[346.25863647 609.39868164]
[341.43707275 595.19470215]
[336.61547852 580.99078369]
[331.79388428 566.78680420]
[310.69366455 564.31707764]
[293.65988159 551.50213623]
[285.38360596 531.78057861]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 163]
[2 162]
[3 161]
[7 156]
[8 155]
[10 153]
[11 152]
[12 151]
[13 150]
[14 148]
[15 147]
[16 146]
[18 144]
[19 143]
[20 141]
[21 140]
[22 139]
[23 138]
[24 137]
[25 136]
[26 135]
[27 133]
[28 131]
[29 130]
[30 129]
[31 128]
[32 89]
[33 88]
[34 87]
[35 86]
[36 85]
[37 84]
[41 82]
[42 81]
[44 80]
[45 79]
[46 78]
[47 77]
[50 73]
[51 72]
[52 71]
[53 69]
[54 68]
[55 67]
[57 65]
[58 64]
[59 63]
[90 126]
[91 125]
[92 124]
[93 123]
[94 122]
[95 120]
[96 119]
[97 118]
[98 116]
[99 115]
[100 114]
[102 112]
[103 111]
[104 110]
[105 109]
[176 188]
[177 187]
[178 186]
[179 185]
[180 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
