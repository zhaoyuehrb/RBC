%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:50:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUUUUUUUAAAGCGCCCGCUGCUGUCUCGGCUGCCGCGGGCGAGAGCGGCCGAGUCCCCGCCCCGCCACUUCCGGUCCCGCCGCCGGGAGCCGGUGCGGCUGUGAGGGGCCGCGUCUCGCAGCAGCCGCCCGGACCGGGCAUGGUGUUGGGCGCCGGGCCCGCCUCGCCUGUCUCGGGGAGCCCAGGGUAAAGGCAGCAGUA\
) } def
/len { sequence length } bind def

/coor [
[2.03297162 929.34246826]
[5.07349968 944.12957764]
[4.01062012 959.18853760]
[-1.07679486 973.40197754]
[-9.81122494 985.71502686]
[-21.54451752 995.21411133]
[-35.40598297 1001.19427490]
[-50.36701202 1003.21179199]
[-65.31739044 1001.11682129]
[-79.14771271 995.06500244]
[-90.83166504 985.50531006]
[-99.50222778 973.14715576]
[-104.51597595 958.90759277]
[-105.50087738 943.84332275]
[-102.38382721 929.07220459]
[-95.39614105 915.69030762]
[-85.05634308 904.69067383]
[-72.13172150 896.88958740]
[-57.58137131 892.86596680]
[-42.48501968 892.91827393]
[-38.39958572 878.48535156]
[-34.31415558 864.05242920]
[-30.22872162 849.61950684]
[-26.14328957 835.18658447]
[-22.05785751 820.75366211]
[-17.97242355 806.32073975]
[-13.88699150 791.88781738]
[-9.80155945 777.45489502]
[-5.71612644 763.02197266]
[-14.34813118 740.94989014]
[3.06111956 723.84094238]
[5.57775974 709.05352783]
[8.09439945 694.26617432]
[10.61104012 679.47875977]
[5.11874580 665.63378906]
[15.06170845 653.32739258]
[17.57834816 638.53997803]
[19.64064980 623.68243408]
[21.24667358 608.76867676]
[22.85269737 593.85485840]
[24.45872116 578.94110107]
[26.06474495 564.02734375]
[27.67076874 549.11358643]
[29.27679443 534.19976807]
[30.88281822 519.28601074]
[32.48884201 504.37222290]
[30.07830048 497.38195801]
[34.23545456 489.24285889]
[36.06983185 474.35543823]
[37.90420914 459.46801758]
[39.73859024 444.58062744]
[38.11720276 442.28833008]
[37.30834198 439.21417236]
[37.61493301 435.66522217]
[39.22294998 432.05258179]
[42.16866684 428.84783936]
[44.91161728 414.10076904]
[47.65456390 399.35369873]
[50.39751434 384.60659790]
[43.66570663 368.40234375]
[55.74374771 354.50552368]
[58.26038742 339.71813965]
[60.77703094 324.93075562]
[63.29367065 310.14337158]
[65.81031036 295.35601807]
[68.10005188 280.53179932]
[70.16234589 265.67425537]
[72.22464752 250.81669617]
[74.28694916 235.95913696]
[76.34925079 221.10157776]
[67.18835449 209.41340637]
[69.06816864 194.31636047]
[81.38991547 184.78680420]
[83.45221710 169.92926025]
[85.51451874 155.07170105]
[87.57682037 140.21414185]
[89.63912201 125.35659027]
[91.70142365 110.49903870]
[88.62023163 95.81890869]
[80.75827026 83.04434204]
[72.89630127 70.26977539]
[65.03433990 57.49521255]
[50.35810852 50.17808914]
[49.62701416 33.79524612]
[63.59314728 25.19994545]
[77.88934326 33.23429489]
[77.80890656 49.63324738]
[85.67086792 62.40781403]
[93.53282928 75.18238068]
[101.39479828 87.95693970]
[108.85762024 87.21109009]
[123.78326416 85.71939087]
[131.24607849 84.97354126]
[136.42436218 70.89569855]
[141.60263062 56.81786728]
[146.78089905 42.74002838]
[146.80694580 33.60076523]
[152.14790344 28.48715973]
[157.54130554 14.49033070]
[162.93470764 0.49350029]
[168.32809448 -13.50333023]
[173.72149658 -27.50016022]
[179.11489868 -41.49699020]
[184.50830078 -55.49382019]
[189.90168762 -69.49064636]
[182.51502991 -85.34552002]
[188.75541687 -101.32352448]
[204.30773926 -107.71820831]
[209.48600769 -121.79605103]
[214.66429138 -135.87388611]
[219.84255981 -149.95172119]
[225.02084351 -164.02955627]
[224.81416321 -180.98223877]
[241.04713440 -185.87380981]
[250.24125671 -171.62934875]
[239.09867859 -158.85128784]
[233.92039490 -144.77345276]
[228.74212646 -130.69560242]
[223.56384277 -116.61777496]
[218.38557434 -102.53993988]
[225.37557983 -91.71216583]
[224.84346008 -78.64036560]
[216.75961304 -68.10771179]
[203.89852905 -64.09725189]
[198.50512695 -50.10042191]
[193.11172485 -36.10359192]
[187.71832275 -22.10676193]
[182.32493591 -8.10993099]
[176.93153381 5.88689899]
[171.53813171 19.88372803]
[166.14472961 33.88055801]
[160.85874939 47.91830444]
[155.68046570 61.99613953]
[150.50219727 76.07397461]
[145.32391357 90.15180969]
[106.55897522 112.56134033]
[104.49667358 127.41889191]
[102.43437195 142.27644348]
[100.37207031 157.13400269]
[98.30977631 171.99156189]
[96.24747467 186.84910583]
[105.50791168 199.37437439]
[103.20479584 214.41265869]
[91.20680237 223.16387939]
[89.14450836 238.02143860]
[87.08220673 252.87899780]
[85.01990509 267.73654175]
[82.95760345 282.59411621]
[85.08931732 288.86059570]
[83.90998840 294.42605591]
[80.59768677 297.87265015]
[78.08104706 312.66003418]
[75.56440735 327.44738770]
[73.04776764 342.23477173]
[70.53112793 357.02215576]
[77.34286499 367.97857666]
[74.93918610 380.24569702]
[65.14459229 387.34954834]
[62.40164185 402.09661865]
[59.65869141 416.84371948]
[56.91574097 431.59078979]
[54.62599945 446.41497803]
[52.79162216 461.30239868]
[50.95724487 476.18981934]
[49.12286758 491.07723999]
[47.40261841 505.97827148]
[45.79659271 520.89202881]
[44.19056702 535.80578613]
[42.58454514 550.71960449]
[40.97851944 565.63336182]
[39.37249756 580.54711914]
[37.76647186 595.46093750]
[36.16044998 610.37469482]
[34.55442429 625.28845215]
[36.45614624 629.20397949]
[36.95938110 633.12615967]
[36.23424911 636.61370850]
[34.57692337 639.32629395]
[32.36572647 641.05664062]
[29.84908676 655.84399414]
[35.16137314 670.74670410]
[25.39841652 681.99542236]
[22.88177681 696.78283691]
[20.36513710 711.57019043]
[17.84849739 726.35754395]
[22.79387283 730.29663086]
[26.41855431 735.42755127]
[28.45228958 741.32867432]
[28.75441742 747.52270508]
[27.32338715 753.51519775]
[24.29508781 758.83422852]
[19.93028450 763.06726074]
[14.59229183 765.89337158]
[8.71679592 767.10742188]
[4.63136292 781.54034424]
[0.54593050 795.97326660]
[-3.53950191 810.40618896]
[-7.62493467 824.83911133]
[-11.71036720 839.27203369]
[-15.79579926 853.70495605]
[-19.88123131 868.13787842]
[-23.96666527 882.57080078]
[-28.05209732 897.00372314]
[-15.16804123 904.87164307]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 203]
[21 202]
[22 201]
[23 200]
[24 199]
[25 198]
[26 197]
[27 196]
[28 195]
[29 194]
[31 185]
[32 184]
[33 183]
[34 182]
[36 180]
[37 179]
[38 174]
[39 173]
[40 172]
[41 171]
[42 170]
[43 169]
[44 168]
[45 167]
[46 166]
[48 165]
[49 164]
[50 163]
[51 162]
[56 161]
[57 160]
[58 159]
[59 158]
[61 155]
[62 154]
[63 153]
[64 152]
[65 151]
[66 148]
[67 147]
[68 146]
[69 145]
[70 144]
[73 141]
[74 140]
[75 139]
[76 138]
[77 137]
[78 136]
[79 90]
[80 89]
[81 88]
[82 87]
[93 135]
[94 134]
[95 133]
[96 132]
[98 131]
[99 130]
[100 129]
[101 128]
[102 127]
[103 126]
[104 125]
[105 124]
[108 120]
[109 119]
[110 118]
[111 117]
[112 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
