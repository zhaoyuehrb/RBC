%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:22:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUUCCCAGGCCGACUCUCCUUGUGGUUGGCUGAGGCUGGAGGUGGACGGGACUUUUGGAGGGUCGCUCGCGUCUGUUCGCAGAGCUGUGGGCGGAGUUGAGGCCUUGGAGGCUGAGAUGUGGUUCUGCGCGUGUGCGGACGGCUGUCUGUUAACUCCGCGGUCAGUUCCCGGACUGGUGGCUGGUCUGCAGGGUUGACCUGCGCA\
) } def
/len { sequence length } bind def

/coor [
[73.37152100 102.74504852]
[58.61721802 100.04122162]
[43.64840698 105.16423035]
[32.52429581 95.25951385]
[17.76999855 92.55568695]
[3.01569963 89.85186768]
[-11.73859882 87.14804077]
[-26.70741081 92.27104950]
[-37.83152008 82.36633301]
[-52.58581924 79.66250610]
[-67.34011841 76.95867920]
[-82.09441376 74.25485992]
[-103.98414612 87.26740265]
[-118.00939178 92.58647156]
[-132.03463745 97.90554810]
[-146.05987549 103.22462463]
[-160.08512878 108.54369354]
[-174.11036682 113.86277008]
[-188.13560486 119.18183899]
[-202.16085815 124.50091553]
[-216.18609619 129.81999207]
[-220.40840149 149.35974121]
[-235.46382141 162.29096985]
[-255.12901306 163.49807739]
[-271.41271973 152.66508484]
[-280.82159424 165.38449097]
[-295.60308838 163.55227661]
[-309.28158569 169.70848083]
[-322.96008301 175.86466980]
[-332.36898804 188.58407593]
[-347.15045166 186.75187683]
[-360.82894897 192.90806580]
[-374.50744629 199.06425476]
[-376.68508911 214.33715820]
[-386.79144287 225.99327087]
[-401.60165405 230.31315613]
[-416.38980103 225.91838074]
[-426.43707275 214.21128845]
[-428.53738403 198.92756653]
[-422.02056885 184.94419861]
[-408.96609497 176.72322083]
[-393.53961182 176.88792419]
[-380.66363525 185.38575745]
[-366.98513794 179.22956848]
[-353.30664062 173.07336426]
[-344.87612915 160.79429626]
[-329.11627197 162.18617249]
[-315.43777466 156.02998352]
[-301.75927734 149.87377930]
[-293.32876587 137.59471130]
[-277.56890869 138.98658752]
[-277.73831177 128.64089966]
[-274.44287109 118.79232025]
[-268.03414917 110.57171631]
[-259.22271729 104.93192291]
[-248.99940491 102.53734589]
[-238.52394104 103.68575287]
[-228.99333191 108.27150726]
[-221.50517273 115.79474640]
[-207.47991943 110.47566986]
[-193.45468140 105.15659332]
[-179.42944336 99.83752441]
[-165.40419006 94.51844788]
[-151.37895203 89.19937897]
[-137.35371399 83.88030243]
[-123.32846069 78.56123352]
[-109.30322266 73.24215698]
[-104.51740265 59.02611160]
[-112.47045898 46.30805969]
[-120.42351532 33.59000778]
[-128.37657166 20.87195396]
[-143.51657104 17.20884514]
[-151.40092468 4.19763565]
[-147.81539917 -10.21345901]
[-155.76846313 -22.93151093]
[-163.72152710 -35.64956284]
[-171.67457581 -48.36761856]
[-179.62763977 -61.08567047]
[-187.58070374 -73.80372620]
[-195.53375244 -86.52177429]
[-203.48681641 -99.23983002]
[-211.43986511 -111.95787811]
[-219.39292908 -124.67593384]
[-234.12107849 -131.88798523]
[-234.96923828 -148.26518250]
[-221.06488037 -156.96006775]
[-206.71163940 -149.02809143]
[-206.67488098 -132.62899780]
[-198.72181702 -119.91094208]
[-190.76875305 -107.19288635]
[-182.81570435 -94.47483063]
[-174.86264038 -81.75678253]
[-166.90959167 -69.03872681]
[-158.95652771 -56.32067490]
[-151.00346375 -43.60262299]
[-143.05041504 -30.88456917]
[-135.09735107 -18.16651726]
[-120.57088470 -15.08150196]
[-112.32418060 -2.29688239]
[-115.65852356 12.91889668]
[-107.70545959 25.63694954]
[-99.75240326 38.35500336]
[-91.79934692 51.07305527]
[-79.39059448 59.50055695]
[-64.63629150 62.20438385]
[-49.88199234 64.90821075]
[-35.12769699 67.61203766]
[-21.21421051 62.29562759]
[-9.03477383 72.39373779]
[5.71952534 75.09756470]
[20.47382355 77.80139160]
[35.22812271 80.50521851]
[49.14160919 75.18881226]
[61.32104492 85.28691864]
[76.07534027 87.99074554]
[96.83456421 70.19929504]
[125.85514832 79.22577667]
[137.52183533 69.79771423]
[149.18852234 60.36965179]
[160.85520935 50.94158936]
[172.45036316 41.42568970]
[183.97332764 31.82249641]
[189.62107849 17.04367256]
[204.35165405 14.83928585]
[215.87461853 5.23609304]
[220.46495056 -2.66394186]
[227.64489746 -4.42353106]
[239.31158447 -13.85159397]
[250.97827148 -23.27965736]
[262.64495850 -32.70772171]
[264.06335449 -48.44823456]
[276.24987793 -58.51122665]
[291.97451782 -56.92650986]
[301.90811157 -44.63426208]
[300.15722656 -28.92725754]
[287.76065063 -19.12418556]
[272.07302856 -21.04103279]
[260.40634155 -11.61296844]
[248.73965454 -2.18490577]
[237.07296753 7.24315739]
[225.47781372 16.75905609]
[213.95484924 26.36224937]
[209.13130188 40.45418930]
[193.57652283 43.34545898]
[182.05355835 52.94865417]
[178.92704773 59.64736938]
[170.28327942 62.60827637]
[158.61659241 72.03633881]
[146.94990540 81.46440125]
[135.28320312 90.89246368]
[135.96264648 105.87706757]
[148.43469238 114.21062469]
[160.90673828 122.54417419]
[173.37878418 130.87773132]
[185.85083008 139.21128845]
[198.32287598 147.54484558]
[210.79492188 155.87838745]
[223.26695251 164.21194458]
[239.03999329 165.44558716]
[245.32371521 178.94979858]
[257.79577637 187.28335571]
[270.26782227 195.61691284]
[282.73986816 203.95046997]
[295.27447510 212.18959045]
[307.87097168 220.33383179]
[320.46743774 228.47805786]
[333.06393433 236.62229919]
[345.66043091 244.76652527]
[358.25689697 252.91076660]
[374.04678345 253.90603638]
[380.53375244 267.31381226]
[393.13021851 275.45803833]
[409.05459595 273.51031494]
[420.40472412 284.84848022]
[418.47372437 300.77490234]
[404.74295044 309.07217407]
[389.74542236 303.37536621]
[384.98599243 288.05453491]
[372.38949585 279.91030884]
[357.50061035 279.49755859]
[350.11267090 265.50726318]
[337.51617432 257.36300659]
[324.91970825 249.21878052]
[312.32321167 241.07455444]
[299.72671509 232.93031311]
[287.13024902 224.78607178]
[279.80468750 223.79400635]
[274.40631104 216.42250061]
[261.93426514 208.08895874]
[249.46221924 199.75540161]
[236.99017334 191.42184448]
[222.10922241 190.78428650]
[214.93341064 176.68399048]
[202.46136475 168.35043335]
[189.98931885 160.01687622]
[177.51727295 151.68333435]
[165.04522705 143.34977722]
[152.57318115 135.01622009]
[140.10113525 126.68267059]
[127.62909698 118.34911346]
[121.20632172 124.57033539]
[113.50807953 128.72811890]
[105.15914154 130.60276794]
[96.80675507 130.15516663]
[89.07057190 127.52223206]
[82.49666595 122.99922943]
[77.51910400 117.01049042]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 115]
[2 114]
[4 112]
[5 111]
[6 110]
[7 109]
[9 107]
[10 106]
[11 105]
[12 104]
[13 67]
[14 66]
[15 65]
[16 64]
[17 63]
[18 62]
[19 61]
[20 60]
[21 59]
[25 51]
[27 49]
[28 48]
[29 47]
[31 45]
[32 44]
[33 43]
[68 103]
[69 102]
[70 101]
[71 100]
[74 97]
[75 96]
[76 95]
[77 94]
[78 93]
[79 92]
[80 91]
[81 90]
[82 89]
[83 88]
[117 150]
[118 149]
[119 148]
[120 147]
[121 145]
[122 144]
[124 142]
[125 141]
[127 140]
[128 139]
[129 138]
[130 137]
[151 200]
[152 199]
[153 198]
[154 197]
[155 196]
[156 195]
[157 194]
[158 193]
[160 191]
[161 190]
[162 189]
[163 188]
[164 186]
[165 185]
[166 184]
[167 183]
[168 182]
[169 181]
[171 179]
[172 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
