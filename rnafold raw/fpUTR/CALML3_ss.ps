%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:25:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGCAGGGGCGUCUGCCAAUGAUGGGGGAGGACUCUGCUGCUUCUUAAGCUCCAGCGUCUCAAGCCAGGGCGAGACAGCCCGCCGGCCGCCCGGAUCUCCACCUGCCACCCCAGAGCUGGGACAGCAGCCGGGCUGCGGCACUGGGAGGGAGACCCCACAGUGGCCUCUUCUGCCACCCACGCCCCCACCCCUGGC\
) } def
/len { sequence length } bind def

/coor [
[97.49072266 302.29113770]
[108.93227386 291.63162231]
[107.98091888 276.66183472]
[107.02955627 261.69201660]
[95.71580505 252.07254028]
[94.53774261 236.90458679]
[104.70425415 225.10290527]
[103.75289154 210.13310242]
[102.80153656 195.16329956]
[101.85017395 180.19349670]
[100.89881897 165.22369385]
[99.94745636 150.25389099]
[98.99610138 135.28410339]
[84.70835114 130.71679688]
[75.25006104 142.35899353]
[72.55360413 157.94873047]
[58.52310944 162.94818115]
[49.06481934 174.59037781]
[39.60652924 186.23257446]
[37.55113983 202.50241089]
[22.33056259 208.60699463]
[9.60242271 198.26647949]
[12.46033859 182.11827087]
[27.96433258 176.77427673]
[37.42262268 165.13208008]
[46.88091278 153.48988342]
[48.90084839 138.73287964]
[63.60786057 132.90071106]
[73.06615448 121.25851440]
[65.87709045 108.09274292]
[58.68868256 94.92813873]
[43.78110504 96.59071350]
[28.87352943 98.25328827]
[13.96595192 99.91586304]
[1.10839832 109.13507080]
[-12.39804268 102.85611725]
[-27.30562019 104.51868439]
[-42.21319580 106.18125916]
[-52.07019043 118.24266052]
[-67.21228027 119.71638489]
[-78.65023804 110.24491119]
[-93.55781555 111.90748596]
[-108.46539307 113.57006073]
[-123.37297058 115.23263550]
[-138.44433594 122.99729919]
[-150.07772827 110.66439056]
[-141.44725037 96.07155609]
[-125.03553772 100.32505798]
[-110.12796021 98.66248322]
[-95.22038269 96.99990845]
[-80.31280518 95.33733368]
[-71.24254608 83.57868195]
[-56.14783096 81.68022919]
[-43.87577057 91.27368164]
[-28.96819305 89.61110687]
[-14.06061554 87.94853973]
[-2.26935148 78.84824371]
[12.30337906 85.00828552]
[27.21095657 83.34571075]
[42.11853409 81.68313599]
[57.02611160 80.02056122]
[59.64709091 72.99343872]
[45.59284592 67.75148010]
[30.60661507 67.10888672]
[26.58693504 52.65751648]
[39.08895874 44.36901093]
[50.83480835 53.69723129]
[64.88905334 58.93919373]
[67.51003265 51.91207123]
[57.33239365 40.89319611]
[47.15475464 29.87432098]
[36.97711182 18.85544586]
[21.17730141 18.47922134]
[10.33179760 6.98354530]
[10.87504482 -8.81140423]
[22.48474312 -19.53476334]
[38.27306747 -18.82455254]
[48.87308121 -7.10212755]
[47.99598694 8.67780399]
[58.17362976 19.69668007]
[68.35127258 30.71555519]
[78.52890778 41.73443222]
[93.32122803 39.24698257]
[99.33518219 25.50535393]
[105.34914398 11.76372719]
[111.36309814 -1.97789955]
[111.93867493 -11.10513020]
[117.58303070 -15.88865089]
[116.27773285 -31.65592003]
[128.60293579 -40.01886368]
[134.83415222 -53.66334152]
[141.06538391 -67.30782318]
[147.29660034 -80.95230103]
[153.52783203 -94.59678650]
[159.75904846 -108.24126434]
[146.04975891 -102.15398407]
[131.35552979 -105.16723633]
[121.14849091 -116.15888977]
[119.22974396 -131.03565979]
[126.31382751 -144.25746155]
[139.76261902 -150.90048218]
[154.56782532 -148.49089050]
[165.21597290 -137.92599487]
[167.74171448 -123.14022064]
[175.65010071 -135.88610840]
[183.55848694 -148.63198853]
[191.46687317 -161.37786865]
[185.77279663 -175.69161987]
[189.55473328 -190.44120789]
[201.15931702 -200.02232361]
[216.00277710 -200.92221069]
[223.91114807 -213.66809082]
[231.81953430 -226.41397095]
[239.72792053 -239.15985107]
[239.70713806 -255.55899048]
[254.03247070 -263.54129028]
[267.96722412 -254.89523315]
[267.17654419 -238.51515198]
[252.47380066 -231.25146484]
[244.56541443 -218.50558472]
[236.65704346 -205.75970459]
[228.74865723 -193.01382446]
[234.53384399 -179.31457520]
[231.10244751 -164.66227722]
[219.56632996 -154.72389221]
[204.21275330 -153.46948242]
[196.30436707 -140.72360229]
[188.39598083 -127.97772217]
[180.48759460 -115.23183441]
[173.40353394 -102.01004028]
[167.17231750 -88.36555481]
[160.94108582 -74.72107697]
[154.70985413 -61.07659912]
[148.47863770 -47.43211746]
[142.24740601 -33.78763962]
[143.99841309 -18.99631310]
[131.22750854 -9.65742588]
[125.10472870 4.03605843]
[119.09076691 17.77768517]
[113.07681274 31.51931190]
[107.06285095 45.26094055]
[157.89289856 80.27552032]
[172.77221680 82.17440796]
[187.65153503 84.07329559]
[202.53085327 85.97218323]
[217.42477417 87.75296783]
[232.33235168 89.41554260]
[241.21887207 87.25509644]
[247.46258545 91.22457886]
[262.34191895 93.12346649]
[277.25045776 86.29211426]
[290.46237183 96.00692749]
[288.38635254 112.27413940]
[273.15805054 118.35943604]
[260.44302368 108.00279236]
[245.56370544 106.10390472]
[230.66978455 104.32311249]
[215.76220703 102.66054535]
[208.75865173 105.04611969]
[200.63197327 100.85150146]
[185.75265503 98.95261383]
[170.87332153 97.05372620]
[155.99400330 95.15483856]
[150.08924866 108.94374847]
[161.73144531 118.40203857]
[173.37364197 127.86032867]
[188.69337463 124.72343445]
[202.42062378 132.21318054]
[208.07383728 146.79313660]
[202.98371887 161.57910156]
[189.55366516 169.58958435]
[174.12495422 167.04228210]
[163.98254395 155.13996887]
[163.91535950 139.50251770]
[152.27316284 130.04423523]
[140.63096619 120.58594513]
[133.96469116 124.02264404]
[140.83789062 137.35528564]
[127.50514221 144.22827148]
[120.63216400 130.89604187]
[113.96589661 134.33273315]
[114.91725922 149.30253601]
[115.86861420 164.27233887]
[116.81997681 179.24214172]
[117.77133179 194.21194458]
[118.72269440 209.18174744]
[119.67404938 224.15153503]
[131.25277710 234.57127380]
[132.00433350 249.76632690]
[121.99935913 260.74066162]
[122.95072174 275.71047974]
[123.90207672 290.68026733]
[136.60099792 299.80560303]
[140.41316223 314.97140503]
[133.53858948 329.01681519]
[119.22325134 335.31008911]
[104.22640991 330.87966919]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 192]
[3 191]
[4 190]
[7 187]
[8 186]
[9 185]
[10 184]
[11 183]
[12 182]
[13 181]
[14 29]
[15 28]
[17 26]
[18 25]
[19 24]
[31 61]
[32 60]
[33 59]
[34 58]
[36 56]
[37 55]
[38 54]
[41 51]
[42 50]
[43 49]
[44 48]
[69 82]
[70 81]
[71 80]
[72 79]
[83 141]
[84 140]
[85 139]
[86 138]
[88 137]
[90 135]
[91 134]
[92 133]
[93 132]
[94 131]
[95 130]
[104 129]
[105 128]
[106 127]
[107 126]
[111 122]
[112 121]
[113 120]
[114 119]
[142 163]
[143 162]
[144 161]
[145 160]
[146 158]
[147 157]
[149 156]
[150 155]
[164 176]
[165 175]
[166 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
