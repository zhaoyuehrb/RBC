%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:01:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGAGCGCCAGCCCCCGCCGCAGGCCAGUCCCAGCUGGAUCUCCGGCCAGAGCCCGAGGCUGCUGCGCCGGGCGGCUGCAGCCUCCGCUCCAGCGCCCGCGCCGUGCCCUGCAUCCCGGGAGCCCGGCUGGACCCGCGGCGGCUCGGCCGGUGUUCCCCCUCCCCUCCCUGGGGCAGCAGCCACC\
) } def
/len { sequence length } bind def

/coor [
[301.16900635 569.79376221]
[305.47161865 562.59100342]
[311.35754395 556.58990479]
[304.75161743 543.12280273]
[298.14569092 529.65576172]
[291.53979492 516.18872070]
[284.93386841 502.72161865]
[278.32797241 489.25454712]
[271.72204590 475.78747559]
[259.17047119 467.76834106]
[260.03952026 451.97103882]
[253.43360901 438.50396729]
[246.82769775 425.03689575]
[230.02717590 415.49014282]
[231.63739014 395.41046143]
[224.58041382 382.17419434]
[217.52343750 368.93792725]
[210.46644592 355.70166016]
[203.40946960 342.46536255]
[196.35247803 329.22909546]
[189.29550171 315.99282837]
[183.36126709 311.55993652]
[182.23324585 302.47286987]
[175.40083313 289.11929321]
[172.15344238 287.69357300]
[169.44232178 284.61224365]
[168.04342651 280.14791870]
[168.57997131 274.91180420]
[162.43266296 261.22930908]
[156.28535461 247.54679871]
[150.13804626 233.86430359]
[144.51661682 229.04090881]
[144.00463867 219.89842224]
[138.08930969 206.11405945]
[132.17396545 192.32968140]
[126.25862885 178.54531860]
[120.34329224 164.76095581]
[114.42794800 150.97657776]
[99.82752991 141.25711060]
[102.12313843 122.99678040]
[95.97583008 109.31428528]
[90.04971313 103.82239532]
[89.84242249 95.34839630]
[83.92708588 81.56403351]
[78.01174927 67.77966309]
[72.09640503 53.99529648]
[67.87786865 50.84744644]
[65.53721619 46.79673004]
[65.10277557 42.71555710]
[66.25025177 39.35974503]
[61.04066849 25.29346085]
[55.71248627 11.27167606]
[50.26607895 -2.70461249]
[38.78066254 -8.60519886]
[34.53855896 -20.37542915]
[39.30421829 -31.50856400]
[33.37641907 -38.48770523]
[34.12763214 -45.85665512]
[29.15637016 -60.00891495]
[24.18510628 -74.16117859]
[18.37602806 -81.23944092]
[19.25159264 -88.59465027]
[14.52006340 -102.82885742]
[2.82471251 -113.48387146]
[6.15236950 -128.00199890]
[1.42083967 -142.23620605]
[-3.31069040 -156.47041321]
[-8.04222012 -170.70462036]
[-13.73092175 -177.87998962]
[-12.73125648 -185.21936035]
[-17.22170258 -199.53144836]
[-21.71215057 -213.84353638]
[-26.20259666 -228.15562439]
[-30.69304276 -242.46771240]
[-36.25974655 -249.73812866]
[-35.13626480 -257.05957031]
[-39.38434601 -271.44546509]
[-43.63243103 -285.83135986]
[-54.96124268 -296.87530518]
[-51.14514923 -311.27273560]
[-55.39323044 -325.65863037]
[-59.64131165 -340.04452515]
[-71.89361572 -350.94467163]
[-68.31541443 -366.94866943]
[-52.58766174 -371.59301758]
[-40.88971710 -360.09997559]
[-45.25542450 -344.29260254]
[-41.00733948 -329.90670776]
[-36.75925827 -315.52084351]
[-25.73429489 -305.50585938]
[-29.24654007 -290.07943726]
[-24.99845695 -275.69354248]
[-20.75037575 -261.30764771]
[-16.38095474 -246.95816040]
[-11.89050770 -232.64607239]
[-7.40006113 -218.33398438]
[-2.90961409 -204.02189636]
[1.58083272 -189.70980835]
[6.19198561 -175.43614197]
[10.92351532 -161.20193481]
[15.65504551 -146.96774292]
[20.38657570 -132.73353577]
[31.74349594 -123.09664154]
[28.75426865 -107.56038666]
[33.48579788 -93.32618713]
[38.33736801 -79.13244629]
[43.30863190 -64.98017883]
[48.27989578 -50.82791901]
[53.37049866 -36.71814346]
[67.45989990 -26.27164650]
[64.24237061 -8.15102005]
[69.68877411 5.82526827]
[75.05869293 10.92719841]
[75.10694885 20.08388329]
[80.31652832 34.15016556]
[85.88077545 48.07995987]
[91.79611206 61.86432648]
[97.71144867 75.64869690]
[103.62678528 89.43305969]
[109.65832520 103.16698456]
[115.80563354 116.84947205]
[127.57516479 122.16075897]
[132.40797424 133.70101929]
[128.21232605 145.06124878]
[134.12765503 158.84561157]
[140.04299927 172.62997437]
[145.95832825 186.41435242]
[151.87367249 200.19871521]
[157.78900146 213.98307800]
[163.82054138 227.71701050]
[169.96784973 241.39949036]
[176.11515808 255.08198547]
[182.26246643 268.76449585]
[188.75440979 282.28686523]
[195.58682251 295.64044189]
[202.53178406 308.93585205]
[209.58876038 322.17211914]
[216.64573669 335.40838623]
[223.70272827 348.64465332]
[230.75970459 361.88095093]
[237.81668091 375.11721802]
[244.87367249 388.35348511]
[255.47091675 390.92388916]
[262.74539185 398.74972534]
[264.46353149 409.07254028]
[260.29476929 418.43096924]
[266.90066528 431.89804077]
[273.50659180 445.36511230]
[286.53070068 454.34750366]
[285.18911743 469.18157959]
[291.79504395 482.64865112]
[298.40093994 496.11572266]
[305.00686646 509.58279419]
[311.61276245 523.04986572]
[318.21868896 536.51690674]
[324.82458496 549.98400879]
[347.18109131 551.93457031]
[363.79208374 566.83508301]
[368.10202026 588.60064697]
[358.53274536 608.47882080]
[366.89260864 620.93322754]
[375.35736084 633.31658936]
[383.92639160 645.62805176]
[392.49542236 657.93951416]
[401.06442261 670.25097656]
[416.53863525 674.48516846]
[422.74356079 689.27972412]
[414.91931152 703.28546143]
[399.06799316 705.75842285]
[387.34939575 694.80151367]
[388.75299072 678.82000732]
[380.18395996 666.50854492]
[371.61492920 654.19708252]
[363.04592896 641.88562012]
[356.63021851 638.18365479]
[354.43820190 629.29309082]
[346.07833862 616.83868408]
[338.12930298 618.97930908]
[329.88409424 619.19226074]
[321.80429077 617.45825195]
[314.34414673 613.86700439]
[307.92468262 608.61315918]
[302.91021729 601.98522949]
[299.58758545 594.34997559]
[298.14965820 586.13220215]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 156]
[4 155]
[5 154]
[6 153]
[7 152]
[8 151]
[9 150]
[11 148]
[12 147]
[13 146]
[15 142]
[16 141]
[17 140]
[18 139]
[19 138]
[20 137]
[21 136]
[23 135]
[24 134]
[28 133]
[29 132]
[30 131]
[31 130]
[33 129]
[34 128]
[35 127]
[36 126]
[37 125]
[38 124]
[40 121]
[41 120]
[43 119]
[44 118]
[45 117]
[46 116]
[50 115]
[51 114]
[52 112]
[53 111]
[56 109]
[58 108]
[59 107]
[60 106]
[62 105]
[63 104]
[65 102]
[66 101]
[67 100]
[68 99]
[70 98]
[71 97]
[72 96]
[73 95]
[74 94]
[76 93]
[77 92]
[78 91]
[80 89]
[81 88]
[82 87]
[160 177]
[161 176]
[162 174]
[163 173]
[164 172]
[165 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
