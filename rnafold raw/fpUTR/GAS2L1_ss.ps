%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:19:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUCCGAAUUCCAGGGAGGCGGGGCGGAGACGGCGGCGAGGAGGAGGCCGCGGCGCGGGACGCAUAGAGCUGCGGCUCGGGCGGCGCCUCCCUGCGGCGGCCCGGCCCGGCUCCGGCCCCCGCUGGGGCAAUGCUCCCCGGGGCCGCGGGAUGAGCCAGUGACUCGGCCGGUCCGGGC\
) } def
/len { sequence length } bind def

/coor [
[93.01172638 169.96984863]
[80.84251404 178.73970032]
[66.52304840 183.20657349]
[51.52595901 182.91110229]
[37.39355087 177.88366699]
[25.57921410 168.64129639]
[17.29793739 156.13449097]
[13.40137577 141.64942932]
[14.29025269 126.67578888]
[19.87315559 112.75346375]
[29.57593536 101.31423187]
[42.40075302 93.53450775]
[57.02869415 90.21437073]
[71.95541382 91.69525909]
[85.64529419 97.82452393]
[74.10775757 88.23884583]
[62.57022476 78.65316772]
[51.03268814 69.06748199]
[35.47353745 66.19984436]
[30.62859917 52.11524582]
[19.09106255 42.52956390]
[7.55352688 32.94388580]
[-3.98400903 23.35820580]
[-19.54315948 20.49056053]
[-24.38809776 6.40596485]
[-35.92563248 -3.17971516]
[-47.46316910 -12.76539516]
[-56.09073639 -15.85532665]
[-59.11714935 -22.62195587]
[-67.68916321 -25.86282539]
[-70.59635162 -32.68152618]
[-86.04528046 -36.09344101]
[-90.39294434 -50.33939362]
[-101.58697510 -60.32406998]
[-117.03590393 -63.73598480]
[-121.38356781 -77.98193359]
[-132.57759094 -87.96661377]
[-139.00794983 -89.69458771]
[-142.98448181 -93.80577850]
[-143.98135376 -98.50350952]
[-154.81808472 -108.87488556]
[-163.20765686 -112.56239319]
[-165.75196838 -119.52464294]
[-176.40499878 -130.08460999]
[-187.05804443 -140.64456177]
[-197.71107483 -151.20452881]
[-208.36412048 -161.76448059]
[-219.01715088 -172.32444763]
[-227.34071350 -176.15861511]
[-229.76245117 -183.16445923]
[-240.22851562 -193.90974426]
[-255.40005493 -198.39692688]
[-258.73773193 -212.91276550]
[-269.20379639 -223.65805054]
[-284.37533569 -228.14524841]
[-287.71301270 -242.66107178]
[-298.17907715 -253.40635681]
[-308.64514160 -264.15167236]
[-319.11120605 -274.89694214]
[-334.28277588 -279.38412476]
[-337.62042236 -293.89996338]
[-348.08648682 -304.64526367]
[-358.55258179 -315.39056396]
[-369.01864624 -326.13586426]
[-384.82287598 -326.09323120]
[-395.96920776 -337.29745483]
[-395.84472656 -353.10125732]
[-384.52328491 -364.12850952]
[-368.72167969 -363.83694458]
[-357.81472778 -352.39956665]
[-358.27334595 -336.60192871]
[-347.80728149 -325.85662842]
[-337.34121704 -315.11132812]
[-326.87512207 -304.36602783]
[-312.45217896 -300.64743042]
[-308.36593628 -285.36303711]
[-297.89984131 -274.61773682]
[-287.43377686 -263.87243652]
[-276.96771240 -253.12713623]
[-262.54476929 -249.40852356]
[-258.45849609 -234.12413025]
[-247.99243164 -223.37882996]
[-233.56948853 -219.66021729]
[-229.48323059 -204.37582397]
[-219.01715088 -193.63052368]
[-208.45718384 -182.97749329]
[-197.80415344 -172.41752625]
[-187.15110779 -161.85755920]
[-176.49807739 -151.29760742]
[-165.84503174 -140.73764038]
[-155.19200134 -130.17767334]
[-144.44670105 -119.71160889]
[-133.60998535 -109.34023285]
[-122.59291077 -99.16063690]
[-111.39888763 -89.17596436]
[-96.75062561 -86.47821808]
[-91.60229492 -71.51809692]
[-80.40827179 -61.53341675]
[-65.76000977 -58.83567047]
[-60.61167526 -43.87554932]
[-49.33046341 -33.98948669]
[-37.87749100 -24.30293083]
[-26.33995438 -14.71725082]
[-14.80241776 -5.13157082]
[-0.06850859 -2.94955897]
[5.60167122 11.82066917]
[17.13920784 21.40634918]
[28.67674255 30.99202919]
[40.21427917 40.57770920]
[54.94818878 42.75971985]
[60.61837006 57.52994919]
[72.15590668 67.11563110]
[83.69344330 76.70130920]
[95.23097229 86.28698730]
[109.67935944 90.31740570]
[124.51275635 88.08797455]
[139.34614563 85.85853577]
[154.17955017 83.62909698]
[169.01293945 81.39966583]
[183.84632874 79.17022705]
[188.93148804 68.38584137]
[198.50132751 61.47703171]
[210.09979248 60.07373428]
[220.81857300 64.41087341]
[228.02630615 73.29847717]
[242.92881775 71.59098816]
[257.83129883 69.88349152]
[272.73379517 68.17600250]
[287.63629150 66.46850586]
[302.68420410 58.65845490]
[314.35470581 70.95624542]
[305.76824951 85.57502747]
[289.34381104 81.37100220]
[274.44131470 83.07849884]
[259.53878784 84.78599548]
[244.63630676 86.49348450]
[229.73381042 88.20098114]
[219.25868225 103.18823242]
[200.84402466 105.83386993]
[186.07577515 94.00362396]
[171.24237061 96.23306274]
[156.40898132 98.46249390]
[141.57557678 100.69193268]
[126.74218750 102.92136383]
[111.90879059 105.15080261]
[112.54072571 105.42755890]
[113.17253876 105.70460510]
[127.44936371 112.52243042]
[128.46212769 127.38256073]
[137.10765076 139.64041138]
[145.75317383 151.89825439]
[154.39871216 164.15611267]
[169.71841431 166.97470093]
[178.31158447 179.52906799]
[175.53007507 194.11668396]
[184.17559814 206.37454224]
[192.82113647 218.63238525]
[208.33798218 218.71559143]
[220.82250977 227.93058777]
[225.47415161 242.73402405]
[220.50427246 257.43368530]
[207.82388306 266.37722778]
[192.30883789 266.12570190]
[179.92501831 256.77581787]
[175.43421936 241.92279053]
[180.56327820 227.27790833]
[171.91775513 215.02006531]
[163.27223206 202.76222229]
[148.59713745 200.48683167]
[139.65472412 188.17878723]
[142.14085388 172.80163574]
[133.49533081 160.54379272]
[124.84980011 148.28593445]
[116.20426941 136.02809143]
[102.54582977 130.08703613]
[100.91468811 114.35013580]
[105.94487762 128.48155212]
[106.24327850 143.47859192]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 114]
[16 113]
[17 112]
[18 111]
[20 109]
[21 108]
[22 107]
[23 106]
[25 104]
[26 103]
[27 102]
[29 101]
[31 100]
[33 98]
[34 97]
[36 95]
[37 94]
[40 93]
[41 92]
[43 91]
[44 90]
[45 89]
[46 88]
[47 87]
[48 86]
[50 85]
[51 84]
[53 82]
[54 81]
[56 79]
[57 78]
[58 77]
[59 76]
[61 74]
[62 73]
[63 72]
[64 71]
[115 145]
[116 144]
[117 143]
[118 142]
[119 141]
[120 140]
[125 137]
[126 136]
[127 135]
[128 134]
[129 133]
[147 176]
[149 174]
[150 173]
[151 172]
[152 171]
[155 168]
[156 167]
[157 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
