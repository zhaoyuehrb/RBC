%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:44:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGAGGAGGCGGUGGCUUCCGGGAUGUGGCGCGGGUCUUUGCGUCUGGCUACUACCAGACCGCGGGUUAGGGGCUUCAUCUCUCUGCGUUCUCAGUUGUGGGAGGCCUUGGUGAUUCGGCCACAGCUCAGCCUCCGUCGCUCUGUGACCUGCGGGUAUUGGAUGAUUGGUAGCUAAGACUCCCGAAUACUUCAGAAGUGGGGAA\
) } def
/len { sequence length } bind def

/coor [
[49.60001373 714.83740234]
[34.62794113 713.92248535]
[35.54260635 698.95086670]
[36.45706558 683.97875977]
[37.37152481 669.00665283]
[29.88547516 668.54943848]
[23.88210297 682.29571533]
[17.87873077 696.04193115]
[11.87535858 709.78820801]
[5.87198687 723.53448486]
[-0.13138546 737.28070068]
[2.23552752 753.50811768]
[-10.80033207 763.45794678]
[-25.82878876 756.89459229]
[-27.38985634 740.56994629]
[-13.87764072 731.27734375]
[-7.87426805 717.53106689]
[-1.87089610 703.78485107]
[4.13247585 690.03857422]
[10.13584805 676.29229736]
[16.13921928 662.54608154]
[19.20566559 647.86285400]
[19.20566559 632.86285400]
[19.20566559 617.86285400]
[19.20566559 602.86285400]
[16.06081963 596.17138672]
[19.32178688 587.63452148]
[19.55053520 572.63629150]
[6.99962711 564.42199707]
[-6.65347862 570.63427734]
[-20.30658531 576.84655762]
[-33.95969009 583.05889893]
[-47.61279678 589.27117920]
[-61.26590347 595.48345947]
[-74.91900635 601.69580078]
[-84.00444794 615.34814453]
[-100.35103607 614.03619385]
[-107.14279938 599.10961914]
[-97.39295959 585.92352295]
[-81.13130951 588.04266357]
[-67.47820282 581.83038330]
[-53.82509995 575.61810303]
[-40.17199326 569.40576172]
[-26.51888657 563.19348145]
[-12.86578083 556.98120117]
[0.78732479 550.76885986]
[10.46802521 539.31097412]
[14.31347179 524.81225586]
[18.15891838 510.31353760]
[22.00436401 495.81481934]
[25.84980965 481.31610107]
[29.69525528 466.81741333]
[33.54070282 452.31869507]
[37.38614655 437.81997681]
[41.23159409 423.32128906]
[44.52159882 408.68652344]
[47.25138474 393.93701172]
[49.98116684 379.18750000]
[52.71095276 364.43798828]
[44.93297195 346.73764038]
[58.24538803 331.60363770]
[60.52409744 316.77770996]
[62.80280685 301.95181274]
[65.08152008 287.12591553]
[67.36022949 272.30001831]
[69.63893890 257.47409058]
[71.91764832 242.64819336]
[74.19635773 227.82228088]
[76.47507477 212.99638367]
[78.75378418 198.17047119]
[80.91938019 183.32762146]
[82.97173309 168.46868896]
[85.02408600 153.60975647]
[87.07643127 138.75083923]
[89.12878418 123.89189911]
[74.16661072 112.51686096]
[69.74047852 92.55007935]
[80.00836182 72.96941376]
[74.00498962 59.22315598]
[68.00161743 45.47690201]
[56.29585266 43.37363052]
[47.15360260 35.95538330]
[42.77449799 25.15603828]
[44.13985062 13.70360088]
[50.79533005 4.43128204]
[45.21395874 -9.49165916]
[39.63258743 -23.41460037]
[25.00473022 -29.39802361]
[18.96932411 -44.00450897]
[25.10706711 -58.56828690]
[39.77654648 -64.44892883]
[54.27462006 -58.15755081]
[59.99983597 -43.42671967]
[53.55552673 -28.99597168]
[59.13689804 -15.07303143]
[64.71826935 -1.15008986]
[81.95072174 5.01870632]
[89.33190918 22.11609840]
[81.74787140 39.47352982]
[87.75124359 53.21978378]
[93.75461578 66.96604156]
[108.74371338 67.53778839]
[115.77680969 54.28880692]
[122.80990601 41.03982544]
[129.84300232 27.79084015]
[136.87609863 14.54185581]
[143.90917969 1.29287171]
[150.53497314 -12.16443253]
[156.74726868 -25.81753731]
[162.85528564 -39.51761627]
[168.85865784 -53.26387024]
[174.86203003 -67.01012421]
[180.86540222 -80.75637817]
[174.86416626 -95.37694550]
[181.03596497 -109.92632294]
[195.71914673 -115.77264404]
[210.20246887 -109.44737244]
[215.89321899 -94.70319366]
[209.41517639 -80.28755951]
[194.61164856 -74.75300598]
[188.60829163 -61.00675583]
[182.60491943 -47.26049805]
[176.60154724 -33.51424408]
[176.80543518 -26.12342644]
[170.40037537 -19.60523605]
[164.18807983 -5.95212984]
[165.04716492 -3.27984548]
[164.89736938 -0.10561492]
[163.54194641 3.18721962]
[160.92671204 6.15116549]
[157.15817261 8.32596684]
[150.12507629 21.57495117]
[143.09197998 34.82393646]
[136.05888367 48.07291794]
[129.02578735 61.32190323]
[121.99269867 74.57088470]
[130.46199036 90.95183563]
[128.76651001 108.28049469]
[118.55525208 121.09143829]
[103.98771667 125.94425201]
[101.93536377 140.80319214]
[99.88301086 155.66210938]
[97.83065796 170.52104187]
[95.77830505 185.37997437]
[97.70455933 194.31312561]
[93.57968903 200.44918823]
[91.30097961 215.27510071]
[89.02227020 230.10099792]
[86.74355316 244.92691040]
[84.46484375 259.75280762]
[82.18613434 274.57870483]
[79.90742493 289.40463257]
[77.62871552 304.23052979]
[75.35000610 319.05642700]
[73.07129669 333.88232422]
[80.00379944 342.27026367]
[81.14974213 352.87081909]
[76.37067413 362.15579224]
[67.46047211 367.16775513]
[64.73069000 381.91726685]
[62.00090408 396.66680908]
[59.27111816 411.41632080]
[72.93068695 405.21823120]
[86.36364746 411.89321899]
[89.67334747 426.52352905]
[80.42137909 438.33035278]
[65.42407990 438.61508179]
[55.73030472 427.16671753]
[51.88485718 441.66543579]
[48.03940964 456.16415405]
[44.19396591 470.66284180]
[40.34851837 485.16156006]
[36.50307083 499.66027832]
[32.65762711 514.15899658]
[28.81217957 528.65771484]
[24.96673393 543.15637207]
[32.85106659 549.75830078]
[36.73740768 560.49645996]
[34.54878998 572.86505127]
[34.32004166 587.86328125]
[34.20566559 602.86285400]
[34.20566559 617.86285400]
[34.20566559 632.86285400]
[34.20566559 647.86285400]
[40.14427948 645.65136719]
[47.12475967 645.28631592]
[54.62651062 647.06475830]
[62.05836105 651.14666748]
[68.79301453 657.53967285]
[74.20436859 666.09252930]
[78.49018097 680.46722412]
[82.77599335 694.84191895]
[87.06180573 709.21661377]
[91.34761810 723.59130859]
[103.62847900 734.45928955]
[100.09228516 750.47259521]
[84.37677002 755.15820312]
[72.64870453 743.69586182]
[76.97292328 727.87713623]
[72.68711090 713.50244141]
[68.40129852 699.12774658]
[64.11548615 684.75305176]
[59.82967377 670.37835693]
[52.34362411 669.92114258]
[51.42916489 684.89324951]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 21]
[7 20]
[8 19]
[9 18]
[10 17]
[11 16]
[22 184]
[23 183]
[24 182]
[25 181]
[27 180]
[28 179]
[29 46]
[30 45]
[31 44]
[32 43]
[33 42]
[34 41]
[35 40]
[47 176]
[48 175]
[49 174]
[50 173]
[51 172]
[52 171]
[53 170]
[54 169]
[55 168]
[56 162]
[57 161]
[58 160]
[59 159]
[61 155]
[62 154]
[63 153]
[64 152]
[65 151]
[66 150]
[67 149]
[68 148]
[69 147]
[70 146]
[71 144]
[72 143]
[73 142]
[74 141]
[75 140]
[78 101]
[79 100]
[80 99]
[85 96]
[86 95]
[87 94]
[102 136]
[103 135]
[104 134]
[105 133]
[106 132]
[107 131]
[108 126]
[109 125]
[110 123]
[111 122]
[112 121]
[113 120]
[190 203]
[191 202]
[192 201]
[193 200]
[194 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
