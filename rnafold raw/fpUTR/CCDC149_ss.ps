%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCAAGCUGGUGAAUCCGCGAUUGCGUACUAGAGAAGGGGGCCUUAGGGAAGUCUCAAAAUGCUACGCUUAAAUUUUCCUGGAGUCCAGAUGUCCUUCUGAAUCCACUAAACCUUGUGAAGCGAUGUGAACGUCAGUCAGCACUACUUAUUCAUAAGUAGUGGAUAGUUGCCACGUCAUUAACUCAUCAUCAUCACCAUC\
) } def
/len { sequence length } bind def

/coor [
[108.83833313 255.77450562]
[94.98513031 262.40655518]
[79.67311859 261.20751953]
[67.02114105 252.49986267]
[60.43253326 238.62593079]
[61.67958450 223.31774902]
[70.42684937 210.69313049]
[84.32135773 204.14804077]
[85.49240112 189.19381714]
[86.66344452 174.23960876]
[87.83448792 159.28538513]
[89.00553131 144.33116150]
[90.17657471 129.37695312]
[83.19808197 126.62909698]
[71.46037292 135.96858215]
[69.24110413 121.13339996]
[62.26261520 118.38554382]
[52.92336655 130.12345886]
[43.58411789 141.86135864]
[41.69450760 158.15127563]
[26.53688240 164.41053772]
[13.70410633 154.20016479]
[16.39743805 138.02369690]
[31.84621048 132.52210999]
[41.18545914 120.78420258]
[50.52470779 109.04629517]
[49.01126480 101.70058441]
[37.80148697 111.66757965]
[23.56496811 106.94301605]
[20.53840256 92.25152588]
[31.74839592 82.28478241]
[45.98437881 87.00916290]
[44.47093582 79.66345215]
[31.25249290 72.57312012]
[18.03404999 65.48279572]
[4.81560612 58.39246750]
[-8.40283775 51.30213928]
[-21.62128067 44.21181107]
[-35.15753555 37.74885559]
[-48.98184586 31.92747688]
[-62.80615616 26.10610008]
[-76.63047028 20.28472137]
[-92.35177612 22.05984306]
[-101.07871246 9.98963642]
[-114.90302277 4.16825867]
[-128.72732544 -1.65311909]
[-142.55163574 -7.47449684]
[-156.37594604 -13.29587460]
[-170.20025635 -19.11725235]
[-184.02456665 -24.93863106]
[-197.84887695 -30.76000786]
[-211.67318726 -36.58138657]
[-225.49749756 -42.40276337]
[-235.19740295 -30.80951881]
[-247.88444519 -22.59182167]
[-262.43048096 -18.48038483]
[-277.54211426 -18.84079552]
[-291.87564087 -23.64100456]
[-304.15649414 -32.45418167]
[-313.29266357 -44.49666214]
[-318.47183228 -58.69764328]
[-319.23339844 -73.79438019]
[-315.50970459 -88.44448090]
[-307.63180542 -101.34526062]
[-296.30023193 -111.34960938]
[-282.52258301 -117.56793213]
[-267.52392578 -119.44730377]
[-252.63796997 -116.82061005]
[-239.18832397 -109.92141724]
[-228.37097168 -99.36319733]
[-221.14773560 -86.08478546]
[-218.16093445 -71.26687622]
[-219.67613220 -56.22707367]
[-205.85182190 -50.40569687]
[-192.02751160 -44.58432007]
[-178.20320129 -38.76293945]
[-164.37889099 -32.94156265]
[-150.55458069 -27.12018585]
[-136.73027039 -21.29880714]
[-122.90595245 -15.47742939]
[-109.08164215 -9.65605164]
[-95.25733185 -3.83467412]
[-80.52483368 -6.02617979]
[-70.80908966 6.46041107]
[-56.98477936 12.28178883]
[-43.16046906 18.10316658]
[-29.33615875 23.92454338]
[-33.92606735 9.64404202]
[-27.20285416 -3.76485109]
[-13.01358604 -8.62948322]
[0.52255201 -2.16628098]
[5.66009569 11.92647076]
[-0.54068851 25.58481026]
[-14.53095436 30.99336815]
[-1.31251013 38.08369446]
[11.90593338 45.17402267]
[25.12437820 52.26435089]
[38.34281921 59.35467911]
[51.56126404 66.44500732]
[85.50247955 48.76630402]
[119.11010742 56.44281006]
[137.37809753 81.10047150]
[150.24967957 73.39835358]
[163.12124634 65.69624329]
[175.99282837 57.99412918]
[188.86439514 50.29201889]
[201.73597717 42.58990479]
[214.60754395 34.88779068]
[227.47912598 27.18567848]
[230.02366638 22.60952759]
[233.70349121 19.75730324]
[237.66963196 18.77265167]
[241.13951111 19.44055748]
[254.35795593 12.35022926]
[267.57638550 5.25990200]
[280.79483032 -1.83042574]
[294.01327515 -8.92075348]
[307.23171997 -16.01108170]
[320.45016479 -23.10140800]
[333.66860962 -30.19173622]
[332.82894897 -46.43689346]
[339.13336182 -61.36924362]
[351.27368164 -72.02061462]
[366.78717041 -76.29782867]
[382.55615234 -73.39392090]
[395.43450928 -63.93985748]
[408.54052734 -71.23590851]
[421.64654541 -78.53196716]
[431.19644165 -96.27877808]
[450.49539185 -95.15757751]
[463.36697388 -102.85969543]
[470.86645508 -117.44357300]
[487.25714111 -117.97039032]
[495.67767334 -103.89820099]
[487.46575928 -89.70326233]
[471.06906128 -89.98811340]
[458.19750977 -82.28600311]
[456.60601807 -72.18242645]
[449.56494141 -64.46360779]
[439.22390747 -61.84472275]
[428.94259644 -65.42594910]
[415.83657837 -58.12989807]
[402.73056030 -50.83384323]
[404.23092651 -37.03768539]
[400.34600830 -23.66993713]
[391.63092041 -12.75916862]
[379.37640381 -5.97418976]
[365.41760254 -4.36884785]
[351.85940552 -8.21846485]
[340.75894165 -16.97329330]
[327.54049683 -9.88296509]
[314.32205200 -2.79263711]
[301.10360718 4.29769039]
[287.88516235 11.38801765]
[274.66671753 18.47834587]
[261.44827271 25.56867218]
[248.22982788 32.65900040]
[235.18124390 40.05725479]
[222.30966187 47.75936508]
[209.43807983 55.46147919]
[196.56651306 63.16359329]
[183.69493103 70.86570740]
[170.82336426 78.56781769]
[157.95178223 86.26992798]
[145.08021545 93.97204590]
[143.44235229 108.88235474]
[154.33506775 119.19491577]
[165.22776794 129.50747681]
[176.12048340 139.82002258]
[187.01319885 150.13258362]
[201.96774292 146.34245300]
[216.59013367 151.26069641]
[226.21443176 163.31790161]
[227.76954651 178.66668701]
[220.75924683 192.40930176]
[207.42050171 200.16052246]
[192.00964355 199.44696045]
[179.44424438 190.49630737]
[173.73384094 176.16470337]
[176.70063782 161.02529907]
[165.80792236 150.71273804]
[154.91522217 140.40017700]
[144.02250671 130.08763123]
[133.12979126 119.77507019]
[126.13004303 122.46829987]
[131.51651001 136.46780396]
[136.90296936 150.46730042]
[142.28921509 164.46688843]
[128.28955078 169.85292053]
[122.90346527 155.85375977]
[117.51700592 141.85426331]
[112.13053894 127.85475922]
[105.13079071 130.54798889]
[103.95974731 145.50221252]
[102.78870392 160.45643616]
[101.61766052 175.41064453]
[100.44661713 190.36486816]
[99.27557373 205.31909180]
[111.98188782 213.94725037]
[118.65734863 227.77960205]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 198]
[9 197]
[10 196]
[11 195]
[12 194]
[13 193]
[17 26]
[18 25]
[19 24]
[33 99]
[34 98]
[35 97]
[36 96]
[37 95]
[38 94]
[39 87]
[40 86]
[41 85]
[42 84]
[44 82]
[45 81]
[46 80]
[47 79]
[48 78]
[49 77]
[50 76]
[51 75]
[52 74]
[53 73]
[102 165]
[103 164]
[104 163]
[105 162]
[106 161]
[107 160]
[108 159]
[109 158]
[113 157]
[114 156]
[115 155]
[116 154]
[117 153]
[118 152]
[119 151]
[120 150]
[126 143]
[127 142]
[128 141]
[130 137]
[131 136]
[166 184]
[167 183]
[168 182]
[169 181]
[170 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
