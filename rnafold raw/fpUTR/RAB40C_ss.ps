%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:10:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCCCGGGGCCACCCCGCCGCUCCCUCCGAGGGUUCUGCGGAAGCAGGCGGCACAGCCUGCGAGGGGCUUUCGUUUCCCGGACUCAGCCGCAUCGCCUCGGCUCGGGCGCGCCUGCAUCCUGCCGCCCGUCCGCGCGUUGAAGGGGCGGAUACAAACAACGUGGACUUCCGAGCCCCUGAUUGGCGAGCGUGCGGCCGGCGCGGGGCGCAGGCGGCGCGGCC\
) } def
/len { sequence length } bind def

/coor [
[218.42492676 78.22866821]
[214.53887939 76.33617401]
[199.62252808 77.91811371]
[184.70619202 79.50005341]
[178.39173889 83.32785034]
[169.56877136 80.99768829]
[154.63162231 82.36933136]
[139.69447327 83.74098206]
[124.75730896 85.11262512]
[109.82015991 86.48427582]
[120.40982819 89.77136230]
[128.94984436 100.38516998]
[130.92852783 116.54401398]
[123.32108307 133.96206665]
[105.84573364 146.95867920]
[95.20184326 157.52786255]
[84.55795288 168.09704590]
[73.91405487 178.66622925]
[69.57334900 193.88032532]
[55.09037399 197.35777283]
[54.86682129 212.93301392]
[43.92184067 223.50003052]
[29.07461548 223.19091797]
[18.43072510 233.76010132]
[7.78683233 244.32928467]
[-2.85705948 254.89846802]
[-9.83607006 270.34933472]
[-26.61510849 267.92031860]
[-28.92589760 251.12457275]
[-13.42623901 244.25457764]
[-2.78234744 233.68539429]
[7.86154461 223.11621094]
[18.50543594 212.54702759]
[18.30091858 197.69799805]
[28.94477654 186.82772827]
[44.52119446 186.71388245]
[48.10057831 172.25576782]
[63.34487915 168.02232361]
[73.98876953 157.45315552]
[84.63265991 146.88397217]
[95.27655029 136.31478882]
[92.10425568 129.51872253]
[85.75966644 115.92658997]
[82.58736420 109.13052368]
[67.65021515 110.50216675]
[52.71305847 111.87381744]
[37.77590179 113.24546051]
[22.83874893 114.61711121]
[7.90159416 115.98875427]
[-2.01103926 128.29791260]
[-17.73295403 129.90942383]
[-29.93661690 119.86719513]
[-31.38181114 104.12912750]
[-21.21112823 92.03231812]
[-5.45865488 90.75359344]
[6.52994680 101.05160522]
[21.46710205 99.67995453]
[36.40425491 98.30831146]
[51.34141159 96.93666077]
[66.27856445 95.56501007]
[81.21572113 94.19336700]
[85.18298340 79.72751617]
[73.03532410 70.92784119]
[60.82597733 62.21395493]
[45.08671951 60.60572433]
[39.12577820 46.95594788]
[26.85535622 38.32827759]
[14.58493328 29.70060349]
[2.31451035 21.07293129]
[-10.13547707 12.70646286]
[-22.75946999 4.60493326]
[-35.38346481 -3.49659705]
[-48.00745773 -11.59812737]
[-63.92515182 -9.59647274]
[-75.31359863 -20.89615250]
[-73.43656158 -36.82902145]
[-59.73394012 -45.17274475]
[-44.71721268 -39.52672958]
[-39.90592957 -24.22212029]
[-27.28193474 -16.12059021]
[-14.65794086 -8.01906013]
[-2.03394747 0.08246972]
[1.46254218 -0.30338722]
[5.31969023 0.97967529]
[8.75354385 4.08282804]
[10.94218254 8.80250931]
[23.21260452 17.43018150]
[35.48302841 26.05785370]
[47.75345230 34.68552399]
[62.61504364 35.67664337]
[69.45365143 49.94353104]
[76.72682953 51.21837234]
[81.83499908 58.78017807]
[93.98265839 67.57985687]
[108.44850922 71.54711914]
[123.38566589 70.17547607]
[138.32281494 68.80382538]
[153.25997925 67.43217468]
[168.19712830 66.06053162]
[183.12425232 64.58370209]
[198.04060364 63.00176620]
[212.95695496 61.41982651]
[227.82281494 59.41829681]
[242.62638855 56.99875641]
[257.42996216 54.57921600]
[269.80136108 44.71723557]
[283.61001587 50.30027390]
[298.41360474 47.88073349]
[306.36984253 43.41164780]
[313.44262695 45.53291321]
[328.27883911 43.32215881]
[343.11502075 41.11140442]
[357.95120239 38.90065002]
[372.78741455 36.68989182]
[387.62359619 34.47913742]
[402.45977783 32.26838303]
[414.96890259 22.58165932]
[428.69754028 28.35867119]
[443.53372192 26.14791679]
[458.36990356 23.93716240]
[473.20611572 21.72640610]
[488.04229736 19.51565170]
[502.87847900 17.30489731]
[510.89688110 12.94833565]
[517.93908691 15.16902924]
[532.80499268 13.16749668]
[547.67083740 11.16596508]
[560.31518555 1.65642250]
[573.96105957 7.62626219]
[582.04003906 3.38309145]
[589.05029297 5.70277166]
[603.94287109 3.91085911]
[618.83544922 2.11894679]
[633.72802734 0.32703426]
[648.62060547 -1.46487820]
[663.51318359 -3.25679064]
[678.40576172 -5.04870319]
[693.29833984 -6.84061527]
[708.19091797 -8.63252831]
[720.57562256 -27.40598869]
[742.52868652 -30.79709053]
[759.57031250 -16.98445892]
[774.25848389 -20.02730179]
[788.94659424 -23.07014656]
[803.63470459 -26.11298943]
[818.32281494 -29.15583420]
[833.01098633 -32.19867706]
[847.65478516 -35.44813919]
[862.25134277 -38.90356827]
[876.84790039 -42.35899734]
[878.31201172 -57.43000031]
[884.59265137 -71.20797729]
[895.00848389 -82.19841003]
[908.42968750 -89.20912170]
[923.40039062 -91.47965240]
[938.29681396 -88.76371765]
[951.50299072 -81.35590363]
[961.58642578 -70.05977631]
[967.45336914 -56.10063934]
[968.46746826 -40.99267960]
[964.51861572 -26.37469864]
[956.03521729 -13.83234215]
[943.93750000 -4.72611332]
[929.53765869 -0.04378713]
[914.39776611 -0.29326710]
[900.16003418 -5.44749165]
[888.36889648 -14.94736862]
[880.30334473 -27.76242256]
[865.70678711 -24.30699348]
[851.11022949 -20.85156250]
[847.88787842 -17.33732986]
[842.42681885 -15.80470085]
[836.05383301 -17.51055145]
[821.36566162 -14.46770668]
[806.67755127 -11.42486286]
[791.98944092 -8.38201809]
[777.30126953 -5.33917427]
[762.61315918 -2.29633021]
[760.93096924 5.49809694]
[757.02551270 12.48874569]
[751.22137451 18.05423737]
[744.01281738 21.69329834]
[736.02178955 23.06986809]
[727.94421387 22.04404640]
[720.48944092 18.68603706]
[714.31799316 13.27171326]
[709.98284912 6.26005602]
[695.09027100 8.05196857]
[680.19769287 9.84388065]
[665.30511475 11.63579273]
[650.41253662 13.42770576]
[635.51989746 15.21961784]
[620.62731934 17.01152992]
[605.73474121 18.80344200]
[590.84216309 20.59535599]
[575.96258545 22.49212456]
[564.38153076 31.85850334]
[549.67236328 26.03182793]
[534.80651855 28.03335953]
[519.94061279 30.03489113]
[505.08923340 32.14108658]
[490.25305176 34.35184097]
[475.41687012 36.56259918]
[460.58065796 38.77335358]
[445.74447632 40.98410797]
[430.90829468 43.19486237]
[419.46035767 52.72345734]
[404.67053223 47.10457611]
[389.83435059 49.31533051]
[374.99816895 51.52608490]
[360.16195679 53.73683929]
[345.32577515 55.94759369]
[330.48959351 58.15834808]
[315.65338135 60.36910248]
[300.83312988 62.68430710]
[286.02957153 65.10384369]
[274.71701050 74.79277039]
[259.84948730 69.38278961]
[245.04592896 71.80233002]
[230.24235535 74.22187042]
[228.49958801 76.40693665]
[225.79005432 78.03645325]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 102]
[3 101]
[4 100]
[6 99]
[7 98]
[8 97]
[9 96]
[10 95]
[15 41]
[16 40]
[17 39]
[18 38]
[20 36]
[23 33]
[24 32]
[25 31]
[26 30]
[44 61]
[45 60]
[46 59]
[47 58]
[48 57]
[49 56]
[62 94]
[63 93]
[64 91]
[66 89]
[67 88]
[68 87]
[69 86]
[70 82]
[71 81]
[72 80]
[73 79]
[103 220]
[104 219]
[105 218]
[107 216]
[108 215]
[110 214]
[111 213]
[112 212]
[113 211]
[114 210]
[115 209]
[116 208]
[118 206]
[119 205]
[120 204]
[121 203]
[122 202]
[123 201]
[125 200]
[126 199]
[127 198]
[129 196]
[131 195]
[132 194]
[133 193]
[134 192]
[135 191]
[136 190]
[137 189]
[138 188]
[139 187]
[142 178]
[143 177]
[144 176]
[145 175]
[146 174]
[147 173]
[148 170]
[149 169]
[150 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
