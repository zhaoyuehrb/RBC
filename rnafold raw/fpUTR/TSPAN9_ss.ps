%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:48:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCCCGGGCAGGCCCCGCCCCCUGUUUCCGCUGGCGGCGGCGGCGGCGGCGGUGCCGGAGCGCGAGCAGAGCGGAGACCCCCAGGUCCUGCGGGCGCGGAAUAUCCUGGAACCUUCUUUUGUUUGUCAGCAGCCAAGGUGUUUCCAGGAAGUUCAGAGAGAACAGAAUUUAAGAAGUGCAAC\
) } def
/len { sequence length } bind def

/coor [
[169.23564148 122.04755402]
[154.54937744 118.99571228]
[139.86312866 115.94387054]
[125.17686462 112.89202881]
[110.49060059 109.84019470]
[95.61341858 111.75576019]
[86.69568634 124.82421875]
[71.85515594 123.55619812]
[58.42100143 130.22879028]
[44.98684311 136.90136719]
[31.55268478 143.57395935]
[21.73920059 159.14222717]
[4.28813744 157.38981628]
[-9.03014088 164.29078674]
[-22.34841919 171.19175720]
[-35.60729980 178.20617676]
[-48.80581665 185.33354187]
[-62.00433350 192.46089172]
[-75.20285034 199.58824158]
[-88.40136719 206.71559143]
[-101.53855896 213.95536804]
[-114.61346436 221.30702209]
[-127.62512970 228.77001953]
[-140.57261658 236.34382629]
[-153.52011108 243.91763306]
[-166.46759033 251.49145508]
[-179.41508484 259.06524658]
[-183.17561340 274.41561890]
[-196.73220825 282.53933716]
[-212.04196167 278.61669922]
[-220.02188110 264.97497559]
[-215.93760681 249.70755005]
[-202.21228027 241.87231445]
[-186.98889160 246.11776733]
[-174.04139709 238.54396057]
[-161.09391785 230.97015381]
[-148.14642334 223.39634705]
[-135.19894409 215.82254028]
[-131.00285339 209.71672058]
[-121.96511841 208.23211670]
[-108.89020538 200.88046265]
[-104.59049225 194.84716797]
[-95.52871704 193.51707458]
[-82.33020020 186.38972473]
[-69.13168335 179.26237488]
[-55.93317032 172.13502502]
[-42.73465347 165.00765991]
[-38.33255386 159.04866028]
[-29.24939537 157.87348938]
[-15.93111610 150.97250366]
[-2.61283803 144.07153320]
[1.35304356 132.62774658]
[12.41242504 126.77487946]
[24.88009834 130.13980103]
[38.31425476 123.46721649]
[51.74841309 116.79463196]
[65.18257141 110.12204742]
[73.13939667 97.53084564]
[88.94082642 98.32160187]
[88.14105988 95.36303711]
[88.17224884 91.99732971]
[81.96220398 78.34319305]
[75.75216675 64.68905640]
[69.54212952 51.03491974]
[55.01593781 45.41108322]
[48.91258621 31.47538185]
[54.36357498 17.66153908]
[48.15353775 4.00740337]
[41.94349670 -9.64673233]
[35.73345947 -23.30086708]
[29.32551956 -9.73848152]
[15.25848579 -4.53093433]
[1.56401169 -10.65150452]
[-3.93896246 -24.60561752]
[1.89151812 -38.42609024]
[15.72650719 -44.22204590]
[29.66716576 -38.68392944]
[24.88601303 -52.90154648]
[20.10486031 -67.11916351]
[15.32370758 -81.33677673]
[2.67377234 -91.77282715]
[5.65317297 -107.89905548]
[21.19695663 -113.12617493]
[33.31501389 -102.07698059]
[29.54132271 -86.11792755]
[34.32247543 -71.90031433]
[39.10363007 -57.68269730]
[43.88478088 -43.46508408]
[49.38759613 -29.51090622]
[55.59763336 -15.85677147]
[61.80767441 -2.20263600]
[68.01771545 11.45149994]
[82.01179504 16.42152596]
[88.50416565 30.18029594]
[83.19626617 44.82488251]
[89.40630341 58.47901917]
[95.61634064 72.13315582]
[101.82638550 85.78728485]
[113.54244232 95.15393066]
[128.22869873 98.20577240]
[142.91496277 101.25761414]
[157.60122681 104.30944824]
[172.28749084 107.36128998]
[181.56391907 81.83554840]
[204.93637085 85.70202637]
[218.98245239 80.43825531]
[233.02854919 75.17448425]
[247.07464600 69.91071320]
[261.12072754 64.64694214]
[275.16683960 59.38317108]
[289.21292114 54.11940002]
[303.11959839 48.49766159]
[316.87777710 42.52164841]
[330.63595581 36.54563141]
[344.39410400 30.56961441]
[358.15228271 24.59359741]
[361.62457275 11.56505680]
[371.82272339 3.04543757]
[384.87301636 1.97846186]
[395.98403931 8.53071404]
[409.84222412 2.79046297]
[423.70040894 -2.94978857]
[437.55862427 -8.69003963]
[451.41680908 -14.43029118]
[460.96527100 -27.76291847]
[477.25723267 -25.89095497]
[483.53289795 -10.74011898]
[473.33642578 2.10371017]
[457.15704346 -0.57209855]
[443.29885864 5.16815281]
[429.44067383 10.90840435]
[415.58248901 16.64865685]
[401.72427368 22.38890648]
[395.96853638 38.17967987]
[380.26867676 45.06803513]
[364.12829590 38.35176849]
[350.37014771 44.32778549]
[336.61196899 50.30379868]
[322.85379028 56.27981567]
[309.09561157 62.25583267]
[307.46768188 65.40884399]
[304.21923828 67.92150116]
[299.67196655 69.03515625]
[294.47668457 68.16549683]
[280.43060303 73.42926788]
[266.38449097 78.69303894]
[252.33840942 83.95680237]
[238.29231262 89.22057343]
[224.24623108 94.48434448]
[210.20013428 99.74811554]
[208.34188843 111.00298309]
[199.02114868 120.07526398]
[210.65681458 129.54158020]
[222.29248047 139.00790405]
[233.92814636 148.47421265]
[249.96990967 148.27052307]
[260.01913452 160.77622986]
[256.36691284 176.39804077]
[241.81491089 183.15222168]
[227.52619934 175.85755920]
[224.46183777 160.10989380]
[212.82617188 150.64356995]
[201.19049072 141.17724609]
[189.55482483 131.71093750]
[200.07235718 142.40586853]
[207.23547363 155.58500671]
[210.48953247 170.22778320]
[209.58251953 185.20033264]
[204.58468628 199.34324646]
[195.88302612 211.56130981]
[184.15139771 220.90843201]
[170.29821777 226.66079712]
[155.39625549 228.37295532]
[140.59945679 225.91233826]
[127.05362701 219.46946716]
[115.80770874 209.54327393]
[107.73254395 196.90240479]
[103.45345306 182.52571106]
[103.30178070 167.52647400]
[107.28927612 153.06619263]
[115.10717010 140.26460266]
[126.15006256 130.11302185]
[139.56283569 123.39755249]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 103]
[2 102]
[3 101]
[4 100]
[5 99]
[6 59]
[8 57]
[9 56]
[10 55]
[11 54]
[13 51]
[14 50]
[15 49]
[16 47]
[17 46]
[18 45]
[19 44]
[20 43]
[21 41]
[22 40]
[23 38]
[24 37]
[25 36]
[26 35]
[27 34]
[61 98]
[62 97]
[63 96]
[64 95]
[67 92]
[68 91]
[69 90]
[70 89]
[77 88]
[78 87]
[79 86]
[80 85]
[105 150]
[106 149]
[107 148]
[108 147]
[109 146]
[110 145]
[111 144]
[112 140]
[113 139]
[114 138]
[115 137]
[116 136]
[120 133]
[121 132]
[122 131]
[123 130]
[124 129]
[152 164]
[153 163]
[154 162]
[155 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
