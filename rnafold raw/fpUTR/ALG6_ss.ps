%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:24:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAAGGCCGGAGGGGCAGUCCGCCGCGGGGGCGAGCGCGCAUGCGCCUUCCUGGGACCCACGGCAGGCGCGAAUCCCAGCGGCCGGCGGGCGGCGGGGAUACUUCUACAUAGACAUAAUCAAGUUUUGACUAUUUGGAAACCAAGCAUCAUUAAAAUUCUCUCAAACUCCUAAUUGCGAAGAAUCGAUAACAUUUCAAGAAGUGAUAACAUUUCUCUGAACAAGAAAAGAAGUGAUUGACCACGUUUUAAAAGU\
ACUCUGGCACUGGUGCUGUGUUUUCUUCCCCUCCCUAAAUUUGAAGAACU\
) } def
/len { sequence length } bind def

/coor [
[121.36273956 263.88989258]
[116.64934540 249.65319824]
[114.95894623 264.55764771]
[121.99834442 279.36911011]
[112.46944427 292.71569824]
[96.17475891 290.86764526]
[89.87686920 275.72601318]
[100.05449677 262.86724854]
[101.74489594 247.96279907]
[102.05287170 232.96597290]
[100.97580719 218.00468445]
[99.89873505 203.04341125]
[98.82166290 188.08212280]
[97.74459839 173.12084961]
[96.66752625 158.15956116]
[95.59045410 143.19828796]
[90.72375488 142.42036438]
[85.97655487 141.09596252]
[81.41000366 139.24217224]
[72.74339294 151.48512268]
[71.08517456 167.21919250]
[57.41653442 173.13673401]
[48.74992371 185.37969971]
[40.08331680 197.62265015]
[31.47967148 209.90992737]
[22.93921280 222.24121094]
[14.39875317 234.57249451]
[13.59334755 250.95185852]
[-1.11592782 258.20233154]
[-14.59743023 248.86523438]
[-12.98254681 232.54579163]
[2.06746936 226.03204346]
[10.60792828 213.70075989]
[19.14838791 201.36947632]
[20.36735916 194.11854553]
[27.84036446 188.95603943]
[36.50697327 176.71308899]
[45.17358017 164.47013855]
[46.21190262 149.61177063]
[60.50044250 142.81851196]
[69.16705322 130.57556152]
[67.03341675 128.26199341]
[65.07295990 125.79995728]
[63.29598618 123.20239258]
[49.42310333 128.90705872]
[35.55022430 134.61172485]
[21.67734337 140.31639099]
[7.80446339 146.02104187]
[-6.06841755 151.72570801]
[-15.88904762 164.12997437]
[-30.60255432 161.81439209]
[-44.47543716 167.51904297]
[-58.31885147 173.29484558]
[-72.13243103 179.14164734]
[-85.94601440 184.98843384]
[-98.17558289 196.73040771]
[-112.84416199 188.22927856]
[-108.73592377 171.78060913]
[-91.79280090 171.17485046]
[-77.97921753 165.32806396]
[-64.16563416 159.48126221]
[-59.25567627 154.00822449]
[-50.18009949 153.64616394]
[-36.30721664 147.94151306]
[-27.47887039 135.94528198]
[-11.77308083 137.85282898]
[2.09979987 132.14816284]
[15.97268009 126.44350433]
[29.84556198 120.73883820]
[43.71844101 115.03417969]
[57.59132385 109.32951355]
[54.13778305 106.82099152]
[50.84222412 103.87918091]
[47.74801636 100.51490021]
[33.12900925 97.15563965]
[18.51000214 93.79637909]
[3.89099431 90.43712616]
[-10.72801304 87.07786560]
[-25.91044044 91.52808380]
[-36.58167267 81.13703156]
[-51.20067978 77.77777100]
[-66.38311005 82.22798920]
[-77.05434418 71.83692932]
[-91.67334747 68.47767639]
[-106.29235840 65.11841583]
[-121.80274200 70.44381714]
[-133.99049377 59.47154617]
[-130.31790161 43.48892975]
[-114.56300354 38.93751526]
[-102.93309784 50.49940872]
[-88.31408691 53.85866547]
[-73.69508362 57.21792603]
[-59.55830383 52.52742767]
[-47.84142303 63.15876389]
[-33.22241592 66.51802063]
[-19.08563614 61.82752228]
[-7.36875439 72.45885468]
[7.25025320 75.81811523]
[21.86926079 79.17737579]
[36.48826981 82.53663635]
[51.10727692 85.89588928]
[55.21786499 79.62268829]
[42.67146301 71.40151215]
[30.12505913 63.18033600]
[17.57878304 54.95896149]
[25.80035019 42.41281128]
[38.34623718 50.63393021]
[50.89263916 58.85511017]
[63.43904495 67.07628632]
[67.54962921 60.80308533]
[58.63348007 48.74065399]
[49.71733093 36.67822266]
[40.80117798 24.61579323]
[26.37617493 18.11734581]
[25.03299904 3.28342748]
[16.11684990 -8.77900410]
[1.69184411 -15.27745056]
[0.34866917 -30.11137009]
[-8.56748199 -42.17380142]
[-17.48363304 -54.23623276]
[-31.76080894 -63.37945557]
[-26.92722130 -79.62977600]
[-9.97390366 -79.48361969]
[-5.42120123 -63.15238190]
[3.49494958 -51.08995056]
[12.41110039 -39.02751923]
[26.19836235 -33.39186096]
[28.17928123 -17.69515419]
[37.09543228 -5.63272381]
[50.88269424 0.00293694]
[52.86360931 15.69964123]
[61.77976227 27.76207352]
[70.69591522 39.82450485]
[79.61206055 51.88693619]
[102.70058441 50.76340866]
[122.65135193 59.54280090]
[135.72048950 75.31027985]
[149.34747314 69.04087830]
[162.97445679 62.77147293]
[176.60142517 56.50206757]
[190.22840881 50.23266220]
[203.85539246 43.96325684]
[209.41595459 29.41272926]
[223.32496643 23.24878311]
[237.16239929 28.63960266]
[250.78938293 22.37019730]
[264.41635132 16.10079193]
[278.04333496 9.83138752]
[291.67031860 3.56198215]
[305.29730225 -2.70742297]
[290.35504150 -4.02234459]
[277.24676514 -11.31435966]
[268.24981689 -23.31662941]
[264.92715454 -37.94400024]
[267.85607910 -52.65526962]
[276.52774048 -64.89464569]
[289.43807983 -72.53662872]
[294.85671997 -86.52371216]
[300.27532959 -100.51079559]
[305.69396973 -114.49787903]
[311.11257935 -128.48495483]
[316.45935059 -142.49967957]
[314.06903076 -158.13926697]
[325.78768921 -167.33285522]
[331.06243896 -181.37483215]
[336.33718872 -195.41680908]
[327.68057251 -208.29481506]
[328.28039551 -223.80029297]
[337.90597534 -235.97106934]
[352.85607910 -240.12724304]
[367.38211060 -234.67066956]
[375.89849854 -221.69952393]
[375.13052368 -206.20146179]
[365.37347412 -194.13581848]
[350.37915039 -190.14207458]
[345.10443115 -176.10009766]
[339.82968140 -162.05812073]
[342.59725952 -147.42289734]
[330.50131226 -137.22492981]
[331.08776855 -129.89567566]
[325.09967041 -123.06633759]
[319.68103027 -109.07925415]
[314.26242065 -95.09217072]
[308.84378052 -81.10508728]
[303.42517090 -67.11800385]
[308.91555786 -62.00865173]
[319.13427734 -72.98945618]
[329.35299683 -83.97025299]
[335.67831421 -97.57136536]
[350.56838989 -95.75856018]
[353.44555664 -81.03708649]
[340.33380127 -73.75154877]
[330.11508179 -62.77074432]
[319.89636230 -51.78994370]
[325.38677979 -46.68058777]
[338.94866943 -53.08956528]
[352.51055908 -59.49853897]
[366.07247925 -65.90751648]
[379.60128784 -72.38602448]
[393.09667969 -78.93389893]
[406.59204102 -85.48176575]
[420.08743286 -92.02963257]
[433.58282471 -98.57750702]
[447.07821655 -105.12537384]
[460.57357788 -111.67324829]
[469.31881714 -125.54599762]
[485.69281006 -124.63850403]
[492.85147095 -109.88431549]
[483.43051147 -96.46128082]
[467.12145996 -98.17786407]
[453.62606812 -91.62998962]
[440.13067627 -85.08212280]
[426.63531494 -78.53425598]
[413.13992310 -71.98638153]
[399.64453125 -65.43851471]
[386.14913940 -58.89064026]
[381.52648926 -53.17287827]
[372.48144531 -52.34561920]
[358.91955566 -45.93664551]
[345.35763550 -39.52766800]
[331.79574585 -33.11869431]
[331.94973755 -25.62027359]
[346.94656372 -25.92825127]
[361.94342041 -26.23622894]
[376.94024658 -26.54420662]
[391.93710327 -26.85193634]
[392.24456787 -11.85508728]
[377.24822998 -11.54736900]
[362.25140381 -11.23939133]
[347.25454712 -10.93141365]
[332.25772095 -10.62343597]
[332.41171265 -3.12501693]
[346.22528076 2.72177124]
[360.03887939 8.56855965]
[373.85244751 14.41534710]
[387.11608887 6.58066702]
[402.27261353 8.04123688]
[413.52969360 18.02832603]
[416.70935059 32.55511856]
[430.52294922 38.40190887]
[445.02203369 32.70858765]
[458.94769287 38.83484268]
[464.28604126 52.69260406]
[478.09963989 58.53939056]
[490.78109741 49.75393295]
[506.19995117 49.24208450]
[519.43615723 57.16717148]
[526.26599121 71.00033569]
[524.51019287 86.32745361]
[514.72894287 98.25770569]
[500.04345703 102.98419189]
[485.13977051 98.99870300]
[474.77365112 87.57299805]
[472.25283813 72.35297394]
[458.43927002 66.50618744]
[444.77438354 72.32057190]
[430.68215942 66.58788300]
[424.67614746 52.21549225]
[410.86257935 46.36870193]
[398.22015381 54.19858170]
[383.21383667 53.06933212]
[371.61431885 43.20503616]
[368.00567627 28.22892952]
[354.19207764 22.38214111]
[340.37850952 16.53535461]
[326.56491089 10.68856621]
[311.56671143 10.91955662]
[297.93972778 17.18896103]
[284.31274414 23.45836639]
[270.68576050 29.72777176]
[257.05877686 35.99717712]
[243.43180847 42.26658249]
[238.52272034 56.28216553]
[224.79234314 62.83435440]
[210.12480164 57.59023666]
[196.49781799 63.85964203]
[182.87083435 70.12904358]
[169.24385071 76.39845276]
[155.61688232 82.66785431]
[141.98989868 88.93726349]
[141.84912109 111.58393097]
[130.32479858 131.07960510]
[110.55173492 142.12121582]
[111.62880707 157.08248901]
[112.70587921 172.04377747]
[113.78294373 187.00505066]
[114.86001587 201.96633911]
[115.93708801 216.92761230]
[117.01415253 231.88890076]
[122.30974579 217.85476685]
[131.64894104 206.11682129]
[144.13423157 197.80311584]
[158.56571960 193.71263123]
[173.55650330 194.23846436]
[187.66590881 199.33009338]
[199.53797913 208.49818420]
[208.03176880 220.86164856]
[212.33099365 235.23234558]
[212.02249146 250.22917175]
[207.13589478 264.41088867]
[198.14083862 276.41458130]
[185.90176392 285.08670044]
[171.59490967 289.59375000]
[156.59518433 289.50262451]
[142.34413147 284.82211304]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 9]
[3 8]
[10 289]
[11 288]
[12 287]
[13 286]
[14 285]
[15 284]
[16 283]
[19 41]
[20 40]
[22 38]
[23 37]
[24 36]
[25 34]
[26 33]
[27 32]
[44 71]
[45 70]
[46 69]
[47 68]
[48 67]
[49 66]
[51 64]
[52 63]
[53 61]
[54 60]
[55 59]
[74 101]
[75 100]
[76 99]
[77 98]
[78 97]
[80 95]
[81 94]
[83 92]
[84 91]
[85 90]
[110 134]
[111 133]
[112 132]
[113 131]
[115 129]
[116 128]
[118 126]
[119 125]
[120 124]
[137 280]
[138 279]
[139 278]
[140 277]
[141 276]
[142 275]
[145 272]
[146 271]
[147 270]
[148 269]
[149 268]
[150 267]
[157 185]
[158 184]
[159 183]
[160 182]
[161 181]
[162 179]
[164 177]
[165 176]
[166 175]
[195 221]
[196 220]
[197 219]
[198 218]
[199 216]
[200 215]
[201 214]
[202 213]
[203 212]
[204 211]
[205 210]
[232 266]
[233 265]
[234 264]
[235 263]
[239 259]
[240 258]
[243 255]
[244 254]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
