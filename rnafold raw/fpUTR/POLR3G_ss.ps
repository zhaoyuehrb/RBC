%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:54:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCCGCGGUCCUGGUGCCGCGUGCAGGUCGGUGCGCGCUUCUCCCGAGGUGGAACGGGCGGCAGUCAAGCGCCGGCGUUCUCUGCCGUCACCCUUUCCUUGCCGGCCGGCACUUCGGCUGCAGAGUUUUGCCCACGCUUCGAGACUUAGGGAGCAGUGCCUUUCAGAAUUUGCCCACUCAUCUGGUAUAACUGGUUCUG\
) } def
/len { sequence length } bind def

/coor [
[74.25806427 96.45027161]
[60.62245178 90.19966888]
[46.98683929 83.94905853]
[33.35122681 77.69845581]
[17.58211899 78.98134613]
[9.23669815 66.64427948]
[-4.39891434 60.39367294]
[-18.03452682 54.14306641]
[-31.67013931 47.89245987]
[-45.30575180 41.64185333]
[-58.94136429 35.39125061]
[-73.60166931 40.65559006]
[-87.34107208 34.12234116]
[-92.26947021 20.11354256]
[-105.90508270 13.86293602]
[-119.54069519 7.61232996]
[-133.17631531 1.36172378]
[-146.81192017 -4.88888264]
[-160.44754028 -11.13948917]
[-175.35784912 -9.50163078]
[-187.31146240 -0.44011524]
[-199.26507568 8.62139988]
[-211.21868896 17.68291473]
[-223.17231750 26.74443054]
[-235.12593079 35.80594635]
[-247.07954407 44.86746216]
[-248.98565674 60.55638123]
[-261.47857666 70.23639679]
[-277.14645386 68.16451263]
[-286.69384766 55.56995392]
[-284.45645142 39.92484283]
[-271.76162720 30.51114655]
[-256.14105225 32.91384506]
[-244.18743896 23.85232925]
[-232.23382568 14.79081440]
[-220.28021240 5.72929907]
[-208.32659912 -3.33221626]
[-196.37297058 -12.39373112]
[-184.41935730 -21.45524597]
[-183.89228821 -28.93670273]
[-198.44862366 -25.31548119]
[-206.39073181 -38.04036713]
[-196.74288940 -49.52596283]
[-182.83815002 -43.89961624]
[-182.31108093 -51.38107300]
[-192.87614441 -62.02903748]
[-203.44122314 -72.67700195]
[-219.01637268 -72.90656281]
[-229.57917786 -83.85561371]
[-229.26434326 -98.70272064]
[-244.47677612 -103.04929352]
[-247.94863892 -117.53360748]
[-258.51370239 -128.18156433]
[-269.07879639 -138.82954407]
[-279.64385986 -149.47750854]
[-294.85629272 -153.82408142]
[-298.32815552 -168.30839539]
[-308.89324951 -178.95635986]
[-319.45831299 -189.60432434]
[-330.27011108 -200.00169373]
[-341.32266235 -210.14274597]
[-352.37521362 -220.28379822]
[-363.42779541 -230.42485046]
[-374.48034668 -240.56590271]
[-385.53289795 -250.70695496]
[-401.24938965 -245.58282471]
[-417.31393433 -249.06152344]
[-429.36428833 -260.10159302]
[-434.17712402 -275.62158203]
[-430.52996826 -291.35977173]
[-441.73968506 -301.32684326]
[-457.90191650 -304.10430908]
[-463.32302856 -319.58151245]
[-452.42626953 -331.83682251]
[-436.42126465 -328.26303101]
[-431.77261353 -312.53656006]
[-420.56289673 -302.56948853]
[-407.90829468 -307.71688843]
[-394.20474243 -306.90414429]
[-382.13140869 -300.23300171]
[-374.07336426 -288.95614624]
[-371.65042114 -275.24237061]
[-375.39184570 -261.75952148]
[-364.33929443 -251.61845398]
[-353.28674316 -241.47740173]
[-342.23416138 -231.33634949]
[-331.18161011 -221.19529724]
[-320.12905884 -211.05424500]
[-316.60180664 -210.84265137]
[-313.00274658 -208.90710449]
[-310.14324951 -205.23292542]
[-308.81036377 -200.16940308]
[-298.24526978 -189.52143860]
[-287.68020630 -178.87345886]
[-273.22344971 -175.28851318]
[-268.99591064 -160.04257202]
[-258.43081665 -149.39460754]
[-247.86575317 -138.74664307]
[-237.30067444 -128.09867859]
[-222.84393311 -124.51372528]
[-218.61637878 -109.26779175]
[-203.76727295 -109.46659088]
[-192.90109253 -98.81854248]
[-192.79325867 -83.24208069]
[-182.22817993 -72.59411621]
[-171.66311646 -61.94615173]
[-157.25074768 -51.48730087]
[-151.59974670 -37.29870605]
[-154.19692993 -24.77510071]
[-140.56130981 -18.52449417]
[-126.92570496 -12.27388859]
[-113.29009247 -6.02328253]
[-99.65447998 0.22732393]
[-86.01886749 6.47793007]
[-72.18887329 1.06803215]
[-58.27138519 7.21279144]
[-52.69075775 21.75563622]
[-39.05514526 28.00624275]
[-25.41953278 34.25684738]
[-11.78392029 40.50745392]
[1.85169172 46.75806046]
[15.48730373 53.00866699]
[30.28110123 51.27869034]
[39.60183334 64.06284332]
[53.23744583 70.31344604]
[66.87305450 76.56405640]
[80.50866699 82.81465912]
[85.33554840 76.50268555]
[92.22058105 71.63741302]
[100.70153809 68.88547516]
[110.10363007 68.75842285]
[119.59305573 71.54636383]
[128.25068665 77.27034760]
[135.15948486 85.65930176]
[150.02729797 83.67236328]
[164.89511108 81.68541718]
[179.74694824 79.58234406]
[194.58190918 77.36326599]
[209.41685486 75.14419556]
[224.25180054 72.92512512]
[239.08674622 70.70604706]
[245.32173157 56.59475708]
[258.20864868 48.11354446]
[273.63531494 47.96873856]
[286.67916870 56.20654297]
[293.17794800 70.19830322]
[291.05792236 85.47930908]
[280.99557495 97.17343140]
[266.20175171 101.54913330]
[251.39714050 97.21013641]
[241.30581665 85.54100037]
[226.47087097 87.76007080]
[211.63592529 89.97914886]
[196.80097961 92.19821930]
[181.96603394 94.41728973]
[175.81088257 98.51926422]
[166.88206482 96.55323792]
[152.01423645 98.54017639]
[137.14642334 100.52712250]
[134.02111816 107.34493256]
[148.92088318 109.07615662]
[151.87847900 123.78169250]
[138.80654907 131.13862610]
[127.77051544 120.98054504]
[124.64521027 127.79834747]
[132.84426880 140.35922241]
[141.04331970 152.92008972]
[149.24238586 165.48095703]
[157.44143677 178.04182434]
[165.64048767 190.60270691]
[173.83955383 203.16357422]
[182.52302551 215.39456177]
[191.67768860 227.27699280]
[200.83233643 239.15943909]
[209.98699951 251.04187012]
[225.34922791 249.62580872]
[239.02780151 256.76025391]
[246.65791321 270.16864014]
[245.80484009 285.57238770]
[236.74078369 298.05624390]
[222.35806274 303.63662720]
[207.24613953 300.53286743]
[196.22717285 289.73538208]
[192.81729126 274.68957520]
[198.10455322 260.19653320]
[188.94990540 248.31408691]
[179.79524231 236.43165588]
[170.64059448 224.54920959]
[166.10784912 238.84796143]
[152.16073608 244.36866760]
[139.06956482 237.04603577]
[136.47430420 222.27224731]
[146.28605652 210.92634583]
[161.27867126 211.36262512]
[153.07962036 198.80175781]
[144.88056946 186.24089050]
[136.68150330 173.68002319]
[128.48245239 161.11914062]
[120.28339386 148.55827332]
[112.08433533 135.99740601]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 127]
[2 126]
[3 125]
[4 124]
[6 122]
[7 121]
[8 120]
[9 119]
[10 118]
[11 117]
[14 114]
[15 113]
[16 112]
[17 111]
[18 110]
[19 109]
[20 39]
[21 38]
[22 37]
[23 36]
[24 35]
[25 34]
[26 33]
[45 106]
[46 105]
[47 104]
[50 101]
[52 99]
[53 98]
[54 97]
[55 96]
[57 94]
[58 93]
[59 92]
[60 88]
[61 87]
[62 86]
[63 85]
[64 84]
[65 83]
[70 77]
[71 76]
[134 159]
[135 158]
[136 157]
[137 155]
[138 154]
[139 153]
[140 152]
[141 151]
[165 200]
[166 199]
[167 198]
[168 197]
[169 196]
[170 195]
[171 194]
[172 188]
[173 187]
[174 186]
[175 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
