%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:26:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGACGUCAGAGCAGGAAGUGUUUGAGGAAGUCGCGCCGCGCUGCCCGCGUUAAGAUUCCCGCAUUUUAAUGUUUUCAGGGGGGUGUCAUAGCCCCGGGUUUGGCCGCCCCAGCCCCGCCUUCCCCGCCCCGGGGAGCCCGCCCCCUGCCCCGCGUCCCUGCCGACAGAGUUAGCACGACAUCAGU\
) } def
/len { sequence length } bind def

/coor [
[183.68000793 345.44091797]
[198.67454529 345.84539795]
[211.81358337 353.08053589]
[205.24053955 339.59741211]
[198.66748047 326.11425781]
[192.09443665 312.63113403]
[185.52137756 299.14801025]
[171.39936829 294.55407715]
[164.54127502 280.97387695]
[169.45556641 266.19256592]
[163.68632507 261.54812622]
[162.88748169 252.42726135]
[156.54185486 238.83560181]
[150.19624329 225.24394226]
[143.85063171 211.65228271]
[137.50500488 198.06062317]
[123.46215820 193.23011780]
[116.83317566 179.53663635]
[121.99507904 164.83995056]
[115.64945984 151.24829102]
[109.30384064 137.65664673]
[95.95316315 138.57728577]
[83.08417511 134.90614319]
[72.22865295 127.08018494]
[64.67870331 116.03091431]
[61.33298874 103.07350922]
[62.58974457 89.75026703]
[49.16229630 83.06419373]
[34.34020996 87.85413361]
[20.81811523 80.88222504]
[16.34297943 66.72211456]
[2.91552973 60.03603745]
[-12.88668919 60.81091690]
[-20.83086395 48.21173859]
[-34.25831223 41.52566147]
[-47.68576431 34.83958817]
[-61.11321259 28.15351295]
[-74.54066467 21.46743584]
[-90.34288025 22.24231720]
[-98.28705597 9.64313698]
[-114.08927917 10.41801834]
[-122.03344727 -2.18116188]
[-135.46090698 -8.86723709]
[-148.88835144 -15.55331230]
[-162.60913086 -8.55001354]
[-177.64700317 -10.94086266]
[-188.26791382 -21.60200500]
[-190.54727173 -36.29698944]
[-203.97471619 -42.98306656]
[-217.40216064 -49.66913986]
[-230.82962036 -56.35521698]
[-244.25706482 -63.04129028]
[-257.68450928 -69.72736359]
[-271.11196899 -76.41344452]
[-284.53942871 -83.09951782]
[-297.96685791 -89.78559113]
[-311.39431763 -96.47166443]
[-326.29779053 -91.21218872]
[-340.51889038 -98.10680389]
[-345.62051392 -113.06504822]
[-338.57592773 -127.21246338]
[-323.56457520 -132.15563965]
[-309.49243164 -124.96188354]
[-304.70825195 -109.89911652]
[-291.28079224 -103.21304321]
[-277.85333252 -96.52696991]
[-264.42590332 -89.84088898]
[-250.99844360 -83.15481567]
[-237.57098389 -76.46874237]
[-224.14353943 -69.78266144]
[-210.71609497 -63.09658813]
[-197.28863525 -56.41051483]
[-183.86119080 -49.72443771]
[-170.76072693 -56.76118469]
[-155.85241699 -54.71028137]
[-144.88214111 -44.15061569]
[-142.20227051 -28.98076248]
[-128.77482605 -22.29468727]
[-115.34737396 -15.60861111]
[-100.50557709 -16.86172485]
[-91.60098267 -3.78431201]
[-76.75918579 -5.03742599]
[-67.85458374 8.03998756]
[-54.42713928 14.72606277]
[-40.99968719 21.41213799]
[-27.57223892 28.09821320]
[-14.14478970 34.78429031]
[0.69700879 33.53117371]
[9.60160542 46.60858917]
[23.02905464 53.29466248]
[37.02593994 48.33252335]
[50.73852921 54.92187881]
[55.84837341 69.63674164]
[69.27581787 76.32281494]
[87.51883698 63.27392197]
[109.93512726 62.50497055]
[116.50817871 49.02183151]
[123.08123016 35.53869247]
[129.65428162 22.05555534]
[128.74668884 6.26040268]
[141.27870178 -1.78932369]
[147.85174561 -15.27246189]
[154.42480469 -28.75559998]
[160.99784851 -42.23873901]
[157.15238953 -57.81410217]
[167.04591370 -70.44333649]
[183.08897400 -70.43837738]
[192.97468567 -57.80302429]
[189.11959839 -42.23004150]
[174.48098755 -35.66568756]
[167.90792847 -22.18254852]
[161.33488464 -8.69941139]
[154.76184082 4.78372669]
[156.13957214 19.61447525]
[143.13742065 28.62860680]
[136.56436157 42.11174393]
[129.99131775 55.59488297]
[123.41826630 69.07801819]
[126.85882568 72.01451111]
[129.93414307 75.33157349]
[132.60238647 78.98409271]
[146.54345703 73.44816589]
[160.48454285 67.91224670]
[174.42561340 62.37631989]
[188.36668396 56.84039688]
[202.30775452 51.30447388]
[216.24884033 45.76855087]
[228.73832703 34.30343628]
[243.21281433 43.13097763]
[238.73719788 59.48350525]
[221.78475952 59.70962524]
[207.84368896 65.24554443]
[193.90260315 70.78147125]
[179.96153259 76.31739807]
[166.02046204 81.85331726]
[152.07939148 87.38924408]
[138.13830566 92.92516327]
[138.08462524 107.35837555]
[132.75784302 120.77277374]
[122.89550018 131.31101990]
[129.24111938 144.90267944]
[135.58673096 158.49433899]
[150.16816711 163.97332764]
[156.40991211 177.84761047]
[151.09666443 191.71501160]
[157.44229126 205.30667114]
[163.78790283 218.89833069]
[170.13351440 232.48997498]
[176.47914124 246.08163452]
[182.93870544 259.61950684]
[197.61012268 264.85278320]
[204.08406067 278.62023926]
[199.00451660 292.57495117]
[205.57757568 306.05807495]
[212.15061951 319.54122925]
[218.72367859 333.02435303]
[225.29672241 346.50750732]
[233.08580017 359.32662964]
[247.52291870 365.79815674]
[248.89376831 380.62951660]
[257.83242798 392.67529297]
[266.77108765 404.72106934]
[281.20819092 411.19256592]
[282.57904053 426.02395630]
[291.51770020 438.06973267]
[300.45635986 450.11547852]
[314.75057983 459.23205566]
[309.94732666 475.49136353]
[292.99377441 475.37686157]
[288.41058350 459.05413818]
[279.47192383 447.00836182]
[270.53329468 434.96261597]
[256.73553467 429.35269165]
[254.72531128 413.65972900]
[245.78665161 401.61395264]
[236.84800720 389.56817627]
[223.05024719 383.95825195]
[221.04003906 368.26528931]
[221.40811157 383.26077271]
[214.85865784 396.75540161]
[202.85017395 405.74404907]
[188.05677795 408.22509766]
[173.77279663 403.64605713]
[163.17907715 393.02658081]
[158.63473511 378.73150635]
[161.15170288 363.94418335]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 157]
[4 156]
[5 155]
[6 154]
[7 153]
[10 150]
[12 149]
[13 148]
[14 147]
[15 146]
[16 145]
[19 142]
[20 141]
[21 140]
[27 94]
[28 93]
[31 90]
[32 89]
[34 87]
[35 86]
[36 85]
[37 84]
[38 83]
[40 81]
[42 79]
[43 78]
[44 77]
[48 73]
[49 72]
[50 71]
[51 70]
[52 69]
[53 68]
[54 67]
[55 66]
[56 65]
[57 64]
[96 118]
[97 117]
[98 116]
[99 115]
[101 113]
[102 112]
[103 111]
[104 110]
[121 137]
[122 136]
[123 135]
[124 134]
[125 133]
[126 132]
[127 131]
[158 178]
[160 176]
[161 175]
[162 174]
[164 172]
[165 171]
[166 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
