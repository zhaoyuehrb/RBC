%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:31:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUAAUGCGUGCCAGGAAUUGCUGAUGGAUCAGUGAGCCUGUGUUCAUGCCAGUGAGCUGCUGUGGCUCAGAUACUGAUACUUUCUUUCCAAACAGCAUAAGAAGUGAUUGAGCCACAAGUAUACUGAAGGAAGGGCUCCCUCGAGUUCUGGUGUGAAGAGAUAAAUCACCAGUCACAGACUAUGCACCCGACUGCUGCUGUUCAGUCCAGGGAAA\
) } def
/len { sequence length } bind def

/coor [
[113.57067108 165.69421387]
[117.94245148 158.59452820]
[111.82817841 144.89723206]
[105.71390533 131.19995117]
[90.79121399 131.85380554]
[76.56986237 125.45624542]
[66.32762146 112.83863831]
[55.30725861 123.01466370]
[44.28689194 133.19068909]
[33.26652908 143.36672974]
[22.24616623 153.54275513]
[11.37427330 163.87725830]
[0.72935241 174.44540405]
[-9.83879089 185.09031677]
[-20.40693474 195.73524475]
[-30.97507858 206.38017273]
[-31.70813751 219.25454712]
[-40.72573853 227.90293884]
[-52.81810760 228.08435059]
[-63.53924942 238.57516479]
[-74.26039124 249.06597900]
[-84.98152924 259.55679321]
[-95.70267487 270.04760742]
[-106.42381287 280.53842163]
[-117.14495850 291.02920532]
[-121.03760529 306.95968628]
[-136.85375977 311.29339600]
[-148.32312012 299.57223511]
[-143.64698792 283.85388184]
[-127.63576508 280.30807495]
[-116.91462708 269.81726074]
[-106.19348145 259.32644653]
[-95.47234344 248.83564758]
[-84.75120544 238.34483337]
[-74.03005981 227.85401917]
[-63.30892181 217.36320496]
[-59.49821472 200.23100281]
[-41.61999893 195.81202698]
[-31.05185509 185.16709900]
[-20.48371124 174.52218628]
[-9.91556835 163.87725830]
[-7.43487740 156.91896057]
[0.88346171 153.15611267]
[1.83044839 148.47923279]
[5.72270203 144.34605408]
[12.07013607 142.52238464]
[23.09049988 132.34635925]
[34.11086273 122.17033386]
[45.13122559 111.99430084]
[56.15159225 101.81827545]
[58.10051346 86.94541931]
[50.07411575 74.27352142]
[42.04771805 61.60163116]
[34.02132034 48.92973328]
[25.99492264 36.25783920]
[12.07412624 28.73972511]
[11.80026817 13.84763718]
[3.77387023 1.17574155]
[-4.25252724 -11.49615383]
[-9.91578197 -14.89368153]
[-12.61169529 -19.89016533]
[-12.32169247 -24.65314484]
[-19.97786522 -37.55209732]
[-27.63403893 -50.45105362]
[-35.29021072 -63.35000610]
[-42.94638443 -76.24896240]
[-50.60255432 -89.14791870]
[-58.25872803 -102.04686737]
[-65.91490173 -114.94582367]
[-73.57107544 -127.84477997]
[-81.22724915 -140.74372864]
[-94.92455292 -148.66171265]
[-94.76715851 -163.55548096]
[-102.42333221 -176.45443726]
[-110.07950592 -189.35339355]
[-117.73567963 -202.25234985]
[-132.03430176 -197.52333069]
[-147.01527405 -195.97912598]
[-161.97790527 -197.69192505]
[-176.22236633 -202.58163452]
[-189.08242798 -210.41954041]
[-199.95658875 -220.83906555]
[-208.33625793 -233.35287476]
[-213.82949829 -247.37565613]
[-216.17936707 -262.25155640]
[-215.27598572 -277.28479004]
[-211.16157532 -291.77221680]
[-204.02859497 -305.03625488]
[-194.21066284 -316.45651245]
[-182.16697693 -325.49884033]
[-168.46084595 -331.74029541]
[-153.73332214 -334.88900757]
[-138.67324829 -334.79763794]
[-123.98501587 -331.47052002]
[-110.35560608 -325.06323242]
[-98.42250061 -315.87545776]
[-88.74383545 -304.33694458]
[-81.77228546 -290.98736572]
[-77.83393860 -276.45108032]
[-77.11298370 -261.40798950]
[-79.64315033 -246.56170654]
[-85.30609894 -232.60658264]
[-93.83695221 -220.19535828]
[-104.83672333 -209.90852356]
[-97.18054962 -197.00956726]
[-89.52437592 -184.11061096]
[-81.86820221 -171.21165466]
[-68.71852112 -164.21629333]
[-68.32829285 -148.39990234]
[-60.67211914 -135.50094604]
[-53.01594543 -122.60199738]
[-45.35977554 -109.70304108]
[-37.70360184 -96.80408478]
[-30.04743004 -83.90513611]
[-22.39125633 -71.00617981]
[-14.73508358 -58.10722351]
[-7.07891130 -45.20827103]
[0.57726151 -32.30931854]
[8.41936874 -19.52255249]
[16.44576645 -6.85065603]
[24.47216415 5.82123995]
[37.81885910 12.43297386]
[38.66681671 28.23143959]
[46.69321442 40.90333557]
[54.71961212 53.57523346]
[62.74600983 66.24712372]
[70.77240753 78.91902161]
[76.18959808 70.49903107]
[84.06180573 63.54696655]
[93.96815491 58.77988434]
[105.27962494 56.78816986]
[117.19845581 57.97584152]
[128.81440735 62.51332474]
[141.06350708 53.85540771]
[153.31260681 45.19749069]
[165.56170654 36.53957367]
[177.81080627 27.88165665]
[190.05990601 19.22373962]
[202.30900574 10.56582355]
[208.67863464 -4.54575634]
[224.98190308 -6.31652832]
[234.44740295 7.07512617]
[227.33784485 21.85302162]
[210.96691895 22.81492424]
[198.71781921 31.47284126]
[186.46871948 40.13075638]
[174.21961975 48.78867340]
[161.97052002 57.44659042]
[149.72142029 66.10450745]
[137.47232056 74.76242828]
[142.37522888 88.93851471]
[157.35597229 88.17877197]
[172.33673096 87.41903687]
[187.31747437 86.65930176]
[192.75964355 72.43598938]
[203.52104187 61.66045761]
[217.73721313 56.19964218]
[232.94509888 56.99965668]
[246.50985718 63.92189407]
[256.08129883 75.76703644]
[260.00109863 90.48284149]
[257.59017944 105.51970673]
[249.26620483 118.27239990]
[236.47135925 126.53144836]
[221.42242432 128.86592102]
[206.72674561 124.87134552]
[194.93040466 115.23981476]
[188.07720947 101.64004517]
[173.09646606 102.39978790]
[158.11570740 103.15952301]
[143.13496399 103.91925812]
[140.43524170 118.67430878]
[154.17643738 124.68927765]
[167.91761780 130.70423889]
[181.65881348 136.71919250]
[198.59327698 137.53172302]
[202.50042725 154.02931213]
[187.72917175 162.35076904]
[175.64384460 150.46038818]
[161.90266418 144.44541931]
[148.16146851 138.43046570]
[134.42028809 132.41549683]
[126.54594421 129.25010681]
[119.41119385 125.08567810]
[125.52546692 138.78295898]
[131.63973999 152.48025513]
[150.69136047 164.28158569]
[147.59059143 185.70314026]
[154.48736572 199.02359009]
[161.38415527 212.34403992]
[168.47305298 225.56324768]
[175.75257874 238.67845154]
[183.03210449 251.79365540]
[190.31164551 264.90884399]
[197.59117126 278.02404785]
[213.00939941 279.77270508]
[224.43243408 290.27478027]
[227.46786499 305.49206543]
[220.94851685 319.57318115]
[207.38121033 327.10366821]
[191.98286438 325.18786621]
[180.67443848 314.56246948]
[177.80426025 299.31314087]
[184.47596741 285.30358887]
[177.19644165 272.18838501]
[169.91691589 259.07318115]
[162.63739014 245.95797729]
[155.35784912 232.84278870]
[151.09832764 230.69186401]
[148.14254761 225.84457397]
[148.06370544 219.24082947]
[141.16691589 205.92037964]
[134.27014160 192.59992981]
[126.43574524 191.87034607]
[119.44387817 188.06111145]
[114.46668243 181.72645569]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 186]
[3 185]
[4 184]
[7 50]
[8 49]
[9 48]
[10 47]
[11 46]
[12 43]
[13 41]
[14 40]
[15 39]
[16 38]
[19 36]
[20 35]
[21 34]
[22 33]
[23 32]
[24 31]
[25 30]
[51 127]
[52 126]
[53 125]
[54 124]
[55 123]
[57 121]
[58 120]
[59 119]
[62 118]
[63 117]
[64 116]
[65 115]
[66 114]
[67 113]
[68 112]
[69 111]
[70 110]
[71 109]
[73 107]
[74 106]
[75 105]
[76 104]
[133 150]
[134 149]
[135 148]
[136 147]
[137 146]
[138 145]
[139 144]
[151 171]
[152 170]
[153 169]
[154 168]
[172 182]
[173 181]
[174 180]
[175 179]
[188 213]
[189 212]
[190 211]
[191 208]
[192 207]
[193 206]
[194 205]
[195 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
