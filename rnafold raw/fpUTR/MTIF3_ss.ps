%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:53:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGCCCCGCCCACUACGGAGAGCGAAGGGGACUCGCCGCAGAUCCGCUGUACUUGCGUCCGCUACAGUAUGUCAAUCGCUUGCCCCAGCACAGCUGUCAUUCUUCUCUACAGAAGAGCUUCUCCUCAUCAACUGGGGAUGAUUACAGUUCUUCCUAAAAAAGCCUACUUGAUGUGAAGACAAUGAGGAUGAAGACCUUUAUGGUGAUCCACUUCCACUUAAUAG\
) } def
/len { sequence length } bind def

/coor [
[77.38504791 381.12393188]
[65.54134369 371.91921997]
[58.05931854 358.91848755]
[56.05076599 344.05377197]
[50.35870743 357.93182373]
[44.76324463 371.84912109]
[39.36178207 385.84283447]
[34.05770874 399.87374878]
[28.75363541 413.90466309]
[36.56178284 427.45336914]
[33.78335571 442.84213257]
[21.73024368 452.80490112]
[6.09355640 452.63751221]
[-5.74354029 442.41903687]
[-8.19193172 426.97433472]
[-0.09556139 413.59588623]
[14.72271156 408.60058594]
[20.02678490 394.56967163]
[25.33085823 380.53875732]
[24.75651550 373.17861938]
[30.80740738 366.35052490]
[30.33543015 358.98309326]
[36.48065186 352.23977661]
[42.17270660 338.36169434]
[46.48954773 323.99630737]
[49.39033508 309.27944946]
[52.29112244 294.56262207]
[55.19190979 279.84576416]
[50.06194305 265.86248779]
[60.32194138 253.81909180]
[63.22272873 239.10224915]
[66.12351990 224.38542175]
[64.33508301 217.22279358]
[69.16826630 209.48480225]
[72.27333832 194.80970764]
[75.37841797 180.13459778]
[78.48349762 165.45950317]
[81.58856964 150.78440857]
[84.69364929 136.10931396]
[64.47572327 130.42153931]
[47.32096863 113.25392914]
[39.55585098 86.78715515]
[24.56889153 86.16179657]
[9.58193302 85.53644562]
[-1.99571180 95.95737457]
[-17.18571091 95.10968018]
[-27.04913139 84.00794983]
[-42.03609085 83.38259125]
[-57.02304840 82.75723267]
[-72.01000977 82.13187408]
[-86.99696350 81.50651550]
[-101.98392487 80.88116455]
[-106.59001160 83.29099274]
[-111.19995117 83.66315460]
[-115.03928375 82.33570099]
[-117.57885742 79.90436554]
[-132.52671814 78.65473938]
[-147.12387085 86.12834930]
[-160.74600220 76.99764252]
[-159.37980652 60.65550613]
[-144.43072510 53.91332245]
[-131.27708435 63.70687866]
[-116.32923126 64.95650482]
[-101.35856628 65.89420319]
[-86.37160492 66.51956177]
[-71.38465118 67.14492035]
[-56.39768982 67.77027130]
[-41.41073227 68.39562988]
[-26.42377472 69.02098846]
[-15.66977215 58.77955246]
[-0.46195659 59.20025635]
[10.20728970 70.54948425]
[25.19424820 71.17484283]
[40.18120575 71.80019379]
[43.40847015 65.03005981]
[29.86829567 58.57532120]
[36.32324600 45.03524399]
[49.86300278 51.48978424]
[53.09026718 44.71964645]
[43.16746140 33.47074127]
[33.24465561 22.22183228]
[23.24390411 11.04216290]
[13.16569328 -0.06772700]
[3.08748174 -11.17761707]
[-12.68450642 -15.66943645]
[-16.41750145 -31.63805580]
[-4.27132082 -42.65632629]
[11.25908852 -37.38959885]
[14.19737148 -21.25582886]
[24.27558327 -10.14593887]
[34.35379410 0.96395153]
[41.16854095 3.80312228]
[44.49356079 12.29902649]
[54.41636658 23.54793358]
[64.33917236 34.79684067]
[71.21735382 31.80675507]
[65.23718262 18.05039215]
[66.93634796 3.14694166]
[78.99354553 12.07021809]
[84.97371674 25.82658195]
[91.85189819 22.83649445]
[90.39461517 7.90745163]
[88.93732452 -7.02159119]
[87.48004150 -21.95063400]
[86.02275085 -36.87967682]
[84.56546021 -51.80871964]
[83.10817719 -66.73776245]
[73.13272858 -79.75399780]
[79.66645813 -94.79535675]
[95.98802948 -96.38857269]
[105.30720520 -82.89468384]
[98.03721619 -68.19504547]
[99.49450684 -53.26600647]
[100.95178986 -38.33696365]
[102.40908051 -23.40792084]
[103.86637115 -8.47887802]
[105.32365417 6.45016432]
[106.78094482 21.37920761]
[119.52127075 29.29653549]
[133.55218506 23.99246216]
[147.58311462 18.68838882]
[161.61404419 13.38431644]
[175.60775757 7.98285103]
[189.56359863 2.48425484]
[203.51943970 -3.01434135]
[217.47528076 -8.51293755]
[231.43110657 -14.01153374]
[245.38694763 -19.51012993]
[259.34280396 -25.00872612]
[261.54153442 -41.71953964]
[274.83850098 -54.48475647]
[294.76654053 -56.32116318]
[305.14968872 -67.14660645]
[315.53286743 -77.97204590]
[325.91601562 -88.79748535]
[321.55538940 -103.52435303]
[325.15802002 -118.45474243]
[335.75479126 -129.57246399]
[350.49523926 -133.88690186]
[365.41427612 -130.23750305]
[376.49871826 -119.60591888]
[380.76693726 -104.85201263]
[377.07080078 -89.94449615]
[366.40451050 -78.89341736]
[351.63729858 -74.67147064]
[336.74145508 -78.41433716]
[326.35830688 -67.58889008]
[315.97515869 -56.76345062]
[305.59197998 -45.93801117]
[312.32742310 -32.53525543]
[327.21020508 -34.40697861]
[342.09295654 -36.27870178]
[356.97570801 -38.15042496]
[371.85848999 -40.02214813]
[375.83648682 -53.57800293]
[384.65237427 -64.56179810]
[396.95043945 -71.33706665]
[410.85928345 -72.91053772]
[424.27682495 -69.07759094]
[435.18780518 -60.44824600]
[441.96655273 -48.35027695]
[456.87390137 -50.01494217]
[471.78125000 -51.67961121]
[484.65756226 -61.83502960]
[499.78829956 -55.51100922]
[501.60824585 -39.21316147]
[488.24517822 -29.70731163]
[473.44592285 -36.77226639]
[458.53857422 -35.10760117]
[443.63122559 -33.44293213]
[438.62527466 -18.26237106]
[427.45782471 -6.74450111]
[412.32971191 -1.23220789]
[396.25442505 -2.87756324]
[382.45764160 -11.40145397]
[373.73019409 -25.13938522]
[358.84744263 -23.26766205]
[343.96469116 -21.39593697]
[329.08190918 -19.52421379]
[314.19915771 -17.65249062]
[299.37017822 -1.77013421]
[279.43679810 -0.02720195]
[264.84140015 -11.05288696]
[250.88554382 -5.55429125]
[236.92970276 -0.05569486]
[222.97387695 5.44290113]
[209.01803589 10.94149780]
[195.06219482 16.44009399]
[181.10635376 21.93869019]
[176.04087830 27.30922508]
[166.91810608 27.41523933]
[152.88719177 32.71931076]
[138.85626221 38.02338409]
[124.82534027 43.32745743]
[140.50123596 57.04228973]
[150.06977844 74.45776367]
[152.93605042 93.15364075]
[149.38726807 110.75823975]
[140.48696899 125.24732208]
[127.87519073 135.17681885]
[113.50715637 139.82261658]
[99.36874390 139.21438599]
[96.26367188 153.88948059]
[93.15859222 168.56459045]
[90.05352020 183.23968506]
[86.94844055 197.91477966]
[83.84336090 212.58987427]
[80.84035492 227.28619385]
[77.93956757 242.00303650]
[75.03878784 256.71987915]
[79.96126556 271.75582886]
[69.90875244 282.74655151]
[67.00796509 297.46340942]
[64.10717773 312.18023682]
[61.20639038 326.89709473]
[71.07624817 315.60168457]
[84.48532104 308.87884521]
[99.44107056 307.72750854]
[113.72113037 312.31881714]
[125.20352936 321.97045898]
[132.18203735 335.24829102]
[133.61965942 350.17922974]
[129.30278015 364.54461670]
[119.87286377 376.20983887]
[106.73117065 383.44140625]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 24]
[5 23]
[6 21]
[7 19]
[8 18]
[9 17]
[25 215]
[26 214]
[27 213]
[28 212]
[30 210]
[31 209]
[32 208]
[34 207]
[35 206]
[36 205]
[37 204]
[38 203]
[39 202]
[42 74]
[43 73]
[44 72]
[47 69]
[48 68]
[49 67]
[50 66]
[51 65]
[52 64]
[56 63]
[57 62]
[79 95]
[80 94]
[81 93]
[82 91]
[83 90]
[84 89]
[101 118]
[102 117]
[103 116]
[104 115]
[105 114]
[106 113]
[107 112]
[119 194]
[120 193]
[121 192]
[122 191]
[123 189]
[124 188]
[125 187]
[126 186]
[127 185]
[128 184]
[129 183]
[132 149]
[133 148]
[134 147]
[135 146]
[150 180]
[151 179]
[152 178]
[153 177]
[154 176]
[161 170]
[162 169]
[163 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
