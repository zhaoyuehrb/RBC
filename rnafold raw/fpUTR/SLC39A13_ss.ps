%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:13:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGCCUCGGGUUCCGGACAGGCCCCUUGUGACGUGGCCGCGCGCCGGGGGCGGCCCCGGGCCGGGGGCCGGGCGGCCGGGCGGCCGGGCGGGGCAGAGCCUGGGCGGGGCGCGGCACCGCAGCUGGAUGGCUGGGGCCGCCCGGAUCGCCGCCGCCGCCGCCGCACGGUGGCCUUUUGUGUUUUUCAGUACGUGGC\
) } def
/len { sequence length } bind def

/coor [
[-268.61724854 497.14578247]
[-282.16113281 503.59271240]
[-295.70504761 510.03964233]
[-302.11709595 516.56060791]
[-309.51535034 516.47949219]
[-323.15985107 522.71069336]
[-336.80432129 528.94195557]
[-350.44879150 535.17315674]
[-364.09329224 541.40435791]
[-377.73776245 547.63562012]
[-381.88815308 552.80419922]
[-387.22583008 554.79400635]
[-391.91543579 553.84039307]
[-405.75076294 559.63555908]
[-419.58605957 565.43072510]
[-433.42138672 571.22595215]
[-447.25668335 577.02111816]
[-449.29476929 592.18005371]
[-458.58551025 604.20416260]
[-472.55453491 609.92541504]
[-487.41232300 607.89996338]
[-499.18209839 598.77105713]
[-513.01739502 604.56622314]
[-526.85272217 610.36138916]
[-540.68804932 616.15655518]
[-554.52337646 621.95172119]
[-568.35870361 627.74688721]
[-578.09808350 640.21508789]
[-592.82635498 637.99566650]
[-606.66168213 643.79083252]
[-620.49700928 649.58599854]
[-627.21209717 655.79449463]
[-634.59808350 655.36145020]
[-648.52362061 660.93640137]
[-662.44915771 666.51135254]
[-672.15557861 679.72937012]
[-688.42413330 677.66369629]
[-694.51904297 662.43927002]
[-684.17047119 649.71765137]
[-668.02410889 652.58581543]
[-654.09857178 647.01086426]
[-640.17303467 641.43591309]
[-626.29217529 635.75067139]
[-612.45684814 629.95550537]
[-598.62158203 624.16033936]
[-589.87176514 612.10668945]
[-574.15386963 613.91162109]
[-560.31854248 608.11639404]
[-546.48321533 602.32122803]
[-532.64788818 596.52606201]
[-518.81262207 590.73089600]
[-504.97729492 584.93572998]
[-503.22720337 570.14373779]
[-494.24838257 558.13391113]
[-480.37194824 552.19158936]
[-465.28521729 554.00469971]
[-453.05187988 563.18579102]
[-439.21655273 557.39062500]
[-425.38122559 551.59545898]
[-411.54592896 545.80029297]
[-397.71060181 540.00506592]
[-383.96899414 533.99114990]
[-370.32449341 527.75988770]
[-356.68002319 521.52868652]
[-343.03555298 515.29742432]
[-329.39105225 509.06622314]
[-315.74658203 502.83499146]
[-302.15197754 496.49572754]
[-288.60806274 490.04879761]
[-275.06417847 483.60186768]
[-262.91494751 474.80438232]
[-252.56375122 463.94836426]
[-242.21257019 453.09234619]
[-231.86138916 442.23632812]
[-228.67831421 427.68582153]
[-213.55535889 423.03753662]
[-203.20416260 412.18151855]
[-192.85298157 401.32550049]
[-182.50180054 390.46948242]
[-179.31872559 375.91897583]
[-164.19577026 371.27069092]
[-153.84457397 360.41467285]
[-143.49339294 349.55865479]
[-133.14221191 338.70263672]
[-122.79102325 327.84664917]
[-119.60794830 313.29611206]
[-104.48499298 308.64782715]
[-94.22025299 297.71002197]
[-84.04261780 286.69116211]
[-73.86497498 275.67227173]
[-63.68733215 264.65341187]
[-53.50969315 253.63453674]
[-43.41978455 242.53526306]
[-33.41825104 231.35629272]
[-23.41671562 220.17732239]
[-21.29748726 213.08862305]
[-13.16671944 208.90194702]
[-2.98907828 197.88307190]
[-3.15351939 185.78094482]
[5.24478340 176.51686096]
[18.10393906 175.42825317]
[28.45512581 164.57223511]
[38.80630875 153.71623230]
[49.15749359 142.86021423]
[59.50868225 132.00421143]
[69.85986328 121.14820099]
[80.21105194 110.29219055]
[90.56223297 99.43618011]
[73.07746124 87.08000183]
[66.26750183 62.72846985]
[72.71442413 49.18457413]
[74.06260681 32.28431320]
[90.67560577 28.90134811]
[98.52530670 43.92861176]
[86.25832367 55.63149643]
[79.81140137 69.17539215]
[85.66983032 73.85820770]
[103.24513245 87.90666199]
[115.03592682 78.63427734]
[121.10071564 64.02164459]
[135.88790894 62.23609543]
[147.67871094 52.96371078]
[159.46949768 43.69132614]
[171.26029968 34.41894150]
[183.05108643 25.14655685]
[188.64039612 9.72930336]
[204.83190918 7.12795353]
[214.96919250 20.01855469]
[208.62387085 35.14036179]
[192.32348633 36.93735504]
[180.53268433 46.20973969]
[168.74188232 55.48212433]
[156.95109558 64.75450897]
[145.16029358 74.02689362]
[139.93885803 87.97630310]
[124.30831146 90.42507172]
[112.51751709 99.69745636]
[101.41824341 109.78736115]
[91.06706238 120.64337158]
[80.71587372 131.49938965]
[70.36469269 142.35539246]
[60.01350403 153.21141052]
[49.66231918 164.06741333]
[39.31113434 174.92343140]
[28.95994949 185.77943420]
[25.04062653 203.76661682]
[8.02979755 208.06071472]
[-2.14784384 219.07958984]
[-12.23774910 230.17886353]
[-22.23928452 241.35783386]
[-32.24081802 252.53678894]
[-35.63565826 261.02871704]
[-42.49081802 263.81216431]
[-52.66845703 274.83105469]
[-62.84609985 285.84991455]
[-73.02374268 296.86880493]
[-83.20137787 307.88766479]
[-86.73052216 316.32467651]
[-93.62898254 318.99899292]
[-97.55244446 334.32601929]
[-111.93501282 338.19781494]
[-122.28620148 349.05383301]
[-132.63739014 359.90985107]
[-142.98857117 370.76583862]
[-153.33975220 381.62185669]
[-157.26321411 396.94885254]
[-171.64578247 400.82067871]
[-181.99697876 411.67669678]
[-192.34815979 422.53268433]
[-202.69934082 433.38870239]
[-206.62280273 448.71569824]
[-221.00537109 452.58752441]
[-231.35656738 463.44354248]
[-241.70774841 474.29953003]
[-252.05892944 485.15554810]
[-237.88642883 480.24230957]
[-222.94187927 478.95376587]
[-208.13752747 481.36859131]
[-194.37709045 487.33935547]
[-182.50051880 496.50164795]
[-173.23281860 508.29611206]
[-167.13969421 522.00280762]
[-164.59307861 536.78503418]
[-165.74844360 551.74047852]
[-170.53524780 565.95623779]
[-178.66130066 578.56445312]
[-189.63056946 588.79553223]
[-202.77345276 596.02496338]
[-217.28768921 599.81140137]
[-232.28726196 599.92376709]
[-246.85658264 596.35516357]
[-260.10629272 589.32342529]
[-271.22760010 579.25781250]
[-279.54162598 566.77276611]
[-284.54086304 552.63037109]
[-285.92013550 537.69390869]
[-283.59524536 522.87518311]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 70]
[2 69]
[3 68]
[5 67]
[6 66]
[7 65]
[8 64]
[9 63]
[10 62]
[13 61]
[14 60]
[15 59]
[16 58]
[17 57]
[22 52]
[23 51]
[24 50]
[25 49]
[26 48]
[27 47]
[29 45]
[30 44]
[31 43]
[33 42]
[34 41]
[35 40]
[71 175]
[72 174]
[73 173]
[74 172]
[76 170]
[77 169]
[78 168]
[79 167]
[81 165]
[82 164]
[83 163]
[84 162]
[85 161]
[87 159]
[88 157]
[89 156]
[90 155]
[91 154]
[92 153]
[93 151]
[94 150]
[95 149]
[97 148]
[98 147]
[101 145]
[102 144]
[103 143]
[104 142]
[105 141]
[106 140]
[107 139]
[108 138]
[110 116]
[111 115]
[118 137]
[119 136]
[121 134]
[122 133]
[123 132]
[124 131]
[125 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
