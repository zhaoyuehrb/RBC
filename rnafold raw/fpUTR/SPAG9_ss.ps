%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:01:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGUGCAGCGGCGGUUGGGGUGAGAGCGCCUACGCCACCCCUCCCCUCCUCCGGCCCCGGCCCCCACCCCGCCGGGCCCAGCCCCAGCCCCGGCCCGGGCUCCAGCCCUAGUACCCGUCCCAGCCCGAGUCGGGUCCGUCCCGUGCGGGCAGGUGCCGCCCCUCUGCCGGCGACGCCCCGGGCCGCCCGCCCGUCCGCUUGCCACC\
) } def
/len { sequence length } bind def

/coor [
[105.60393524 326.66046143]
[90.78669739 332.81100464]
[76.80979156 324.93536377]
[74.39509583 309.07507324]
[85.39496613 297.39678955]
[86.29203033 282.42364502]
[87.18909454 267.45050049]
[88.08615112 252.47734070]
[88.87119293 237.49789429]
[89.54416656 222.51300049]
[90.10503387 207.52348328]
[90.55376434 192.53019714]
[91.00249481 177.53691101]
[91.45123291 162.54362488]
[91.78780365 147.54740906]
[92.01219177 132.54908752]
[92.23657990 117.55075836]
[85.60572052 114.04624176]
[72.34398651 107.03721619]
[65.71311951 103.53269958]
[53.44733047 112.16695404]
[41.18153763 120.80120850]
[28.91574860 129.43547058]
[16.64995766 138.06971741]
[4.38416672 146.70397949]
[2.19097900 151.44245911]
[-1.25606000 154.55419922]
[-5.12713385 155.83401489]
[-8.63126850 155.43586731]
[-21.27208328 163.51112366]
[-33.91289902 171.58638000]
[-40.98266983 186.38336182]
[-57.35093307 187.38931274]
[-66.17942810 173.56939697]
[-58.38614655 159.14036560]
[-41.98815536 158.94557190]
[-29.34734154 150.87031555]
[-16.70652771 142.79504395]
[-4.25008917 134.43818665]
[8.01570129 125.80393219]
[20.28149223 117.16967773]
[32.54728317 108.53542328]
[44.81307220 99.90116119]
[57.07886505 91.26690674]
[56.63033295 83.78033447]
[41.72660828 85.47707367]
[26.82287979 87.17381287]
[11.91915226 88.87055206]
[-2.66664052 92.37121582]
[-11.64893150 80.35794830]
[-4.16589212 67.35779572]
[10.73416996 69.09162903]
[25.73386955 68.99681091]
[40.73357010 68.90200043]
[55.73327255 68.80718231]
[55.28474045 61.32060623]
[42.07580566 54.21257401]
[26.25697327 54.48653793]
[18.71585846 41.64205170]
[5.50692511 34.53401947]
[-7.70200777 27.42599106]
[-20.91094017 20.31796074]
[-34.11987305 13.20993042]
[-47.32880783 6.10190058]
[-60.77344513 13.66795731]
[-76.17295837 12.74139690]
[-88.61341858 3.61788273]
[-94.12512207 -10.79130554]
[-90.94929504 -25.88824844]
[-80.09934235 -36.85556793]
[-65.03743744 -40.19362640]
[-50.56978607 -34.83726883]
[-41.31296158 -22.49568558]
[-40.22077560 -7.10703230]
[-27.01184464 0.00099772]
[-13.80291080 7.10902786]
[-0.59397793 14.21705723]
[12.61495495 21.32508659]
[25.82388878 28.43311691]
[40.69792938 27.65074158]
[49.18383789 41.00364304]
[62.39276886 48.11167145]
[72.26182556 36.81557465]
[86.12506104 31.08752441]
[101.08928680 32.12294006]
[114.03150940 39.70574188]
[122.25074005 52.25341797]
[124.03166199 67.14732361]
[119.00259399 81.27914429]
[108.21052551 91.70116425]
[121.52430725 84.79152679]
[126.49888611 68.02071381]
[141.76281738 60.19033432]
[157.64830017 65.71105194]
[170.85723877 58.60302353]
[184.06617737 51.49499512]
[197.27510071 44.38696289]
[210.48403931 37.27893448]
[223.69296265 30.17090416]
[231.48255920 17.35207939]
[231.70695496 2.35375738]
[231.93133545 -12.64456463]
[232.15573120 -27.64288521]
[223.70129395 -41.69473648]
[231.87898254 -55.90942764]
[248.27629089 -55.66410446]
[256.02508545 -41.21113586]
[247.15405273 -27.41849518]
[246.92965698 -12.42017269]
[246.70527649 2.57814837]
[246.48088074 17.57646942]
[252.97607422 21.32646942]
[260.36358643 8.27178383]
[267.75106812 -4.78290319]
[275.13858032 -17.83758926]
[282.52606201 -30.89227676]
[282.92346191 -45.88701248]
[296.01202393 -53.21435547]
[309.00250244 -45.71454239]
[309.20153809 -30.71586227]
[296.41421509 -22.87395477]
[288.80227661 -9.94884777]
[281.19033813 2.97625780]
[273.57839966 15.90136433]
[265.96646118 28.82646942]
[272.46163940 32.57646942]
[285.33837891 24.88298035]
[298.21511841 17.18949127]
[311.09182739 9.49600220]
[323.96856689 1.80251336]
[331.84686279 -11.91766167]
[346.74102783 -11.80339336]
[352.50341797 -18.89191437]
[359.86843872 -19.51399994]
[372.85882568 -27.01399994]
[385.84918213 -34.51399994]
[398.83956909 -42.01399994]
[404.36398315 -57.07588577]
[419.62921143 -62.01075363]
[432.92504883 -53.03299713]
[434.05209351 -37.02958298]
[422.14575195 -26.27695847]
[406.33956909 -29.02361870]
[393.34918213 -21.52361870]
[380.35882568 -14.02361870]
[367.36843872 -6.52361870]
[354.43450928 1.07333827]
[347.47726440 14.24322319]
[331.66204834 14.67924500]
[318.78533936 22.37273407]
[305.90859985 30.06622314]
[293.03186035 37.75971222]
[280.15512085 45.45320129]
[279.89733887 56.19141006]
[276.03005981 64.65582275]
[290.36364746 69.07714844]
[304.69726562 73.49847412]
[319.03085327 77.91980743]
[334.49853516 74.59392548]
[344.37976074 85.73890686]
[358.71334839 90.16023254]
[373.04693604 94.58155823]
[387.38052368 99.00289154]
[399.71502686 89.58800507]
[415.22851562 89.25489807]
[427.95578003 98.13164520]
[433.00289917 112.80496216]
[428.42913818 127.63265991]
[415.99325562 136.91317749]
[400.47705078 137.07797241]
[387.84683228 128.06369019]
[382.95919800 113.33647919]
[368.62561035 108.91515350]
[354.29202271 104.49382782]
[339.95843506 100.07249451]
[325.51599121 103.71462250]
[314.60952759 92.25339508]
[300.27593994 87.83206940]
[285.94232178 83.41074371]
[271.60873413 78.98941040]
[250.40031433 90.77806854]
[227.08897400 75.09621429]
[230.80099487 43.37983704]
[217.59207153 50.48786545]
[204.38313293 57.59589767]
[191.17419434 64.70392609]
[177.96527100 71.81195831]
[164.75633240 78.91998291]
[162.81347656 91.65837097]
[153.75306702 101.09251404]
[140.72154236 103.62274170]
[128.43394470 98.10530853]
[115.12016296 105.01494598]
[107.23490143 117.77514648]
[107.01051331 132.77346802]
[106.78612518 147.77178955]
[109.78698730 156.40007019]
[106.44451904 162.99235535]
[105.99578094 177.98564148]
[105.54705048 192.97892761]
[105.09832001 207.97221375]
[107.96977234 216.64440918]
[104.52906036 223.18597412]
[103.85608673 238.17086792]
[106.59749603 246.88504028]
[103.05930328 253.37438965]
[102.16224670 268.34753418]
[101.26518250 283.32070923]
[100.36811829 298.29385376]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 209]
[6 208]
[7 207]
[8 206]
[9 204]
[10 203]
[11 201]
[12 200]
[13 199]
[14 198]
[15 196]
[16 195]
[17 194]
[20 44]
[21 43]
[22 42]
[23 41]
[24 40]
[25 39]
[29 38]
[30 37]
[31 36]
[56 82]
[57 81]
[59 79]
[60 78]
[61 77]
[62 76]
[63 75]
[64 74]
[90 193]
[91 192]
[94 188]
[95 187]
[96 186]
[97 185]
[98 184]
[99 183]
[100 111]
[101 110]
[102 109]
[103 108]
[126 153]
[127 152]
[128 151]
[129 150]
[130 149]
[132 147]
[134 146]
[135 145]
[136 144]
[137 143]
[155 180]
[156 179]
[157 178]
[158 177]
[160 175]
[161 174]
[162 173]
[163 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
