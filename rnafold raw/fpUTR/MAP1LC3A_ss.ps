%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:21:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUUGUGACCUGACGUCACCGGGCGAGUUACCUCCCGCAGCCGCAGCCGCCGUGCUCAGCGCGAGCCCCGGAGCCCUUGAGCGCGAGGCGCGGAGCCCCCGGAGCCCCCAAACCGCAGACACAUCCCCGCGCCCCAGAGCCCCGGCCUGCGCGCCCAGCCGGGCCCGCGCG\
) } def
/len { sequence length } bind def

/coor [
[90.32839966 165.83903503]
[78.11357117 174.54522705]
[66.05890656 165.61856079]
[70.82350922 151.39547729]
[70.95970154 136.39610291]
[63.46001434 136.32800293]
[56.63802338 149.68690491]
[49.81603241 163.04582214]
[42.99404526 176.40472412]
[36.17205429 189.76364136]
[39.72797775 205.40763855]
[29.60191727 217.85121155]
[13.56171608 217.54870605]
[3.91204572 204.73217773]
[8.05530739 189.23336792]
[22.81314468 182.94165039]
[29.63513374 169.58273315]
[36.45712280 156.22383118]
[43.27911377 142.86491394]
[50.10110474 129.50601196]
[67.25455475 103.69268799]
[92.44074249 97.58339691]
[80.28949738 88.78867340]
[68.13825226 79.99394226]
[55.98700333 71.19921875]
[41.03705978 69.97481537]
[27.61676025 76.67523193]
[14.19646072 83.37564850]
[5.60904646 97.34662628]
[-10.77420616 96.62478638]
[-18.09961319 81.95269012]
[-8.83142185 68.42372894]
[7.49604559 69.95534515]
[20.91634560 63.25493240]
[34.33664322 56.55451584]
[35.95809555 49.23188782]
[21.65350723 53.74617004]
[10.59166622 43.61524200]
[13.83429623 28.96992493]
[28.13880157 24.45537758]
[39.20099640 34.58662796]
[40.82244492 27.26399994]
[31.48531914 15.52440548]
[22.14819145 3.78481245]
[12.81106377 -7.95478106]
[4.99076843 -12.74544907]
[3.41329980 -19.99338150]
[-5.70911455 -31.90058708]
[-14.83152962 -43.80779266]
[-27.51419830 -46.28077698]
[-34.86477280 -56.41610336]
[-33.37342072 -68.44292450]
[-42.27811432 -80.51381683]
[-51.18280792 -92.58470917]
[-60.08750153 -104.65560150]
[-68.99219513 -116.72649384]
[-77.89688873 -128.79737854]
[-86.80158234 -140.86827087]
[-95.70627594 -152.93916321]
[-104.72019958 -164.92871094]
[-119.25489807 -171.17794800]
[-120.85315704 -185.98655701]
[-129.97557068 -197.89376831]
[-145.19395447 -195.82101440]
[-159.40376282 -201.65000916]
[-168.78260803 -213.81277466]
[-170.80764771 -229.03758240]
[-164.93414307 -243.22904968]
[-152.74203491 -252.56971741]
[-137.51095581 -254.54702759]
[-123.33797455 -248.62905884]
[-114.03556061 -236.40774536]
[-112.10601044 -221.17054749]
[-118.06836700 -207.01618958]
[-108.94595337 -195.10897827]
[-95.06374359 -189.71141052]
[-92.81299591 -174.05113220]
[-86.22545624 -170.64154053]
[-83.63538361 -161.84385681]
[-74.73069000 -149.77296448]
[-65.82599640 -137.70207214]
[-56.92130280 -125.63118744]
[-48.01660919 -113.56029510]
[-39.11191559 -101.48940277]
[-30.20722198 -89.41851044]
[-21.30252838 -77.34761810]
[-4.87269974 -71.22438812]
[-2.92432332 -52.93020630]
[6.19809103 -41.02300262]
[15.32050610 -29.11579514]
[24.55065727 -17.29190826]
[33.88778305 -5.55231524]
[43.22491074 6.18727827]
[52.56203842 17.92687225]
[69.84407806 39.26259995]
[64.78173065 59.04797363]
[76.93297577 67.84269714]
[89.08422089 76.63742828]
[101.23546600 85.43215179]
[115.96361542 88.27497864]
[130.51512146 84.63439941]
[145.06661987 80.99382782]
[159.61811829 77.35325623]
[171.12779236 66.49792480]
[185.35240173 70.91490936]
[199.90390015 67.27433777]
[211.41357422 56.41901016]
[225.63818359 60.83599472]
[227.97177124 46.87769699]
[235.43228149 34.90291977]
[246.86253357 26.70645332]
[260.51336670 23.50186920]
[274.31130981 25.74193954]
[286.17343140 33.05498886]
[294.32183838 44.30607605]
[308.93707275 40.93033600]
[323.55227661 37.55459213]
[335.25717163 26.91005516]
[349.39920044 31.58460999]
[355.33657837 17.24838829]
[368.58419800 9.16876221]
[384.04806519 10.45251465]
[395.78204346 20.60601616]
[399.27416992 35.72503662]
[393.18161011 49.99600601]
[379.84713745 57.93144608]
[364.39810181 56.48001480]
[352.77496338 46.19982147]
[342.11544800 56.60290146]
[326.92800903 52.16980362]
[312.31280518 55.54554367]
[297.69760132 58.92128372]
[294.48947144 74.55885315]
[284.75442505 87.28337097]
[270.39669800 94.52252960]
[254.26121521 94.78520966]
[239.57002258 87.96831512]
[229.27876282 75.38749695]
[218.80990601 85.98242950]
[203.54447937 81.82583618]
[188.99298096 85.46641541]
[178.52412415 96.06134033]
[163.25869751 91.90475464]
[148.70719910 95.54532623]
[134.15570068 99.18590546]
[119.60419464 102.82647705]
[116.43798065 109.62538147]
[125.04808044 121.90814209]
[110.10556793 123.22319794]
[106.93936157 130.02210999]
[113.51764679 143.50268555]
[120.09593201 156.98327637]
[126.67422485 170.46385193]
[133.49621582 183.82276917]
[140.55966187 197.05558777]
[147.62309265 210.28842163]
[154.68653870 223.52125549]
[168.88623047 231.72496033]
[168.61087036 248.12179565]
[154.14372253 255.84410095]
[140.36735535 246.94781494]
[141.45370483 230.58470154]
[134.39027405 217.35186768]
[127.32682800 204.11903381]
[120.26338196 190.88619995]
[116.00259399 188.65765381]
[113.11456299 183.71093750]
[113.19364166 177.04214478]
[106.61534882 163.56155396]
[100.03706360 150.08097839]
[93.45877838 136.60038757]
[85.95908356 136.53228760]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 20]
[7 19]
[8 18]
[9 17]
[10 16]
[22 99]
[23 98]
[24 97]
[25 96]
[26 35]
[27 34]
[28 33]
[42 94]
[43 93]
[44 92]
[45 91]
[47 90]
[48 89]
[49 88]
[52 86]
[53 85]
[54 84]
[55 83]
[56 82]
[57 81]
[58 80]
[59 79]
[60 77]
[62 75]
[63 74]
[100 146]
[101 145]
[102 144]
[103 143]
[105 141]
[106 140]
[108 138]
[115 132]
[116 131]
[117 130]
[119 128]
[150 171]
[151 170]
[152 169]
[153 168]
[154 165]
[155 164]
[156 163]
[157 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
