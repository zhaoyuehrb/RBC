%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:54:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGCCCCGAGUGUCGGUUCACUGUGGAGACAGCGGUGGCGGAGUGGGUCUCCAGGGCUCUGGGCUGGCAAGGCCCCCGGAGGGGGUGGGGCGCGGAGGAGGCUACGGAUCCGCUUCCGCGCGGCGGGGCCGGGUGCUUGGGACGCGGCUCUGGGCUCCCGGGAUAAGGGGCUCCCGGGACAAGGGGCUCCCGGAGAGCCCAGUGGUUAGCG\
) } def
/len { sequence length } bind def

/coor [
[293.06826782 254.02183533]
[285.98861694 252.52792358]
[279.80755615 248.63726807]
[275.31597900 242.79197693]
[273.10769653 235.68753052]
[273.50131226 228.19006348]
[261.22460938 219.57131958]
[248.94792175 210.95257568]
[236.67123413 202.33383179]
[224.39453125 193.71508789]
[212.11784363 185.09634399]
[199.84114075 176.47760010]
[182.30201721 175.87007141]
[174.68103027 159.10618591]
[162.27854919 150.66944885]
[149.87608337 142.23271179]
[137.47360229 133.79595947]
[125.07112122 125.35922241]
[112.66864777 116.92248535]
[100.26617432 108.48574829]
[99.09286499 115.81258392]
[96.62744141 122.94065857]
[85.75063324 133.26998901]
[74.87382507 143.59931946]
[63.99701691 153.92864990]
[59.86659622 169.79911804]
[43.98740387 173.89585876]
[32.69459152 162.00450134]
[37.60523605 146.35784912]
[53.66768646 143.05184937]
[64.54449463 132.72251892]
[75.42130280 122.39318085]
[86.29811096 112.06385040]
[86.51934052 97.06548309]
[75.95191956 86.41984558]
[60.73853683 82.07662201]
[57.26347733 67.59307098]
[46.69605637 56.94743347]
[36.05041885 46.38001251]
[25.32713890 35.89138794]
[14.60385799 25.40276146]
[3.88057804 14.91413689]
[-6.84270191 4.42551136]
[-17.64303970 -5.98374987]
[-28.51984787 -16.31307983]
[-39.39665604 -26.64241028]
[-50.27346039 -36.97174072]
[-61.15026855 -47.30107117]
[-72.02707672 -57.63039780]
[-82.90388489 -67.95973206]
[-93.78069305 -78.28906250]
[-109.35578156 -78.05570984]
[-120.23926544 -88.68606567]
[-120.36573792 -103.53596497]
[-131.24255371 -113.86529541]
[-150.15007019 -112.65507507]
[-163.70437622 -125.43148041]
[-163.61537170 -143.73852539]
[-174.79209900 -153.74255371]
[-185.96884155 -163.74659729]
[-197.14556885 -173.75062561]
[-208.32229614 -183.75465393]
[-223.76530457 -187.19329834]
[-228.08830261 -201.44674683]
[-239.26504517 -211.45079041]
[-250.44177246 -221.45481873]
[-259.55612183 -218.13937378]
[-269.19415283 -218.36898804]
[-278.03350830 -222.06997681]
[-284.87677002 -228.69529724]
[-288.81362915 -237.30499268]
[-289.34188843 -246.69935608]
[-286.43106079 -255.58609009]
[-296.99850464 -266.23175049]
[-307.56591797 -276.87738037]
[-318.13333130 -287.52301025]
[-328.70074463 -298.16864014]
[-339.26815796 -308.81430054]
[-354.71789551 -315.79586792]
[-352.28607178 -332.57449341]
[-335.48995972 -334.88250732]
[-328.62252808 -319.38171387]
[-318.05511475 -308.73608398]
[-307.48770142 -298.09042358]
[-296.92025757 -287.44479370]
[-286.35284424 -276.79916382]
[-275.78543091 -266.15350342]
[-255.41012573 -267.79364014]
[-240.23815918 -253.65991211]
[-240.43774414 -232.63154602]
[-229.26100159 -222.62751770]
[-218.08427429 -212.62348938]
[-203.44070435 -209.90039062]
[-198.31826782 -194.93139648]
[-187.14154053 -184.92735291]
[-175.96479797 -174.92332458]
[-164.78807068 -164.91929626]
[-153.61134338 -154.91525269]
[-142.62902832 -157.99977112]
[-131.40512085 -155.37326050]
[-122.75373840 -147.57546997]
[-118.90105438 -136.45724487]
[-120.91321564 -124.74210358]
[-110.03641510 -114.41277313]
[-95.19976807 -115.05271149]
[-84.02198792 -104.73224640]
[-83.45136261 -89.16587067]
[-72.57455444 -78.83654022]
[-61.69774628 -68.50720978]
[-50.82093811 -58.17787552]
[-39.94413376 -47.84854889]
[-29.06732368 -37.51921844]
[-18.19051743 -27.18988800]
[-7.31370926 -16.86055756]
[-0.29993472 -14.53424072]
[3.64592361 -6.29776907]
[14.36920357 4.19085646]
[25.09248352 14.67948246]
[35.81576538 25.16810799]
[46.53904343 35.65673447]
[53.51774597 38.08624268]
[57.34169769 46.38001251]
[67.90911865 57.02565384]
[82.36664581 60.60742950]
[86.59755707 75.85242462]
[97.16497803 86.49806213]
[108.70291138 96.08326721]
[121.10538483 104.52001190]
[133.50785828 112.95674896]
[145.91033936 121.39348602]
[158.31282043 129.83023071]
[170.71530151 138.26696777]
[183.11776733 146.70370483]
[195.91021729 145.06344604]
[206.06626892 152.34451294]
[208.45988464 164.20091248]
[220.73657227 172.81964111]
[233.01327515 181.43838501]
[245.28997803 190.05712891]
[257.56668091 198.67587280]
[269.84335327 207.29461670]
[282.12005615 215.91336060]
[305.31546021 216.03083801]
[314.08175659 236.69987488]
[326.96011353 244.39065552]
[339.83843994 252.08142090]
[352.77316284 259.67703247]
[365.76354980 267.17703247]
[378.75393677 274.67703247]
[391.74432373 282.17703247]
[404.78964233 289.58102417]
[417.88922119 296.88861084]
[430.98883057 304.19619751]
[444.08840942 311.50378418]
[457.18798828 318.81140137]
[470.28756714 326.11898804]
[483.38714600 333.42657471]
[496.48672485 340.73416138]
[509.63986206 347.94494629]
[522.84576416 355.05856323]
[536.05175781 362.17214966]
[549.25769043 369.28573608]
[562.46362305 376.39935303]
[575.66955566 383.51293945]
[572.40039062 368.87350464]
[580.32476807 356.13757324]
[594.90222168 352.60235596]
[607.78039551 360.29342651]
[611.58050537 374.80410767]
[604.12524414 387.82019043]
[589.68719482 391.88409424]
[602.21276855 400.13699341]
[614.73834229 408.38989258]
[627.26385498 416.64279175]
[639.78942871 424.89569092]
[654.26446533 419.30529785]
[669.25231934 423.32333374]
[678.98980713 435.40478516]
[679.73266602 450.90405273]
[671.19525146 463.86138916]
[656.66040039 469.29443359]
[641.71704102 465.11404419]
[632.11120605 452.92767334]
[631.53656006 437.42126465]
[619.01098633 429.16836548]
[606.48541260 420.91543579]
[593.95983887 412.66253662]
[581.43426514 404.40963745]
[568.55596924 396.71887207]
[555.34997559 389.60528564]
[542.14404297 382.49166870]
[528.93811035 375.37808228]
[515.73217773 368.26449585]
[502.52624512 361.15090942]
[495.14782715 360.74633789]
[489.17913818 353.83374023]
[476.07955933 346.52615356]
[462.97998047 339.21856689]
[449.88040161 331.91098022]
[436.78082275 324.60339355]
[423.68121338 317.29577637]
[410.58163452 309.98818970]
[397.48205566 302.68060303]
[390.11041260 302.16726685]
[384.24432373 295.16738892]
[371.25393677 287.66738892]
[358.26354980 280.16738892]
[345.27316284 272.66738892]
[337.90988159 272.04541016]
[332.14767456 264.95977783]
[319.26931763 257.26901245]
[306.39096069 249.57823181]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 142]
[7 141]
[8 140]
[9 139]
[10 138]
[11 137]
[12 136]
[14 133]
[15 132]
[16 131]
[17 130]
[18 129]
[19 128]
[20 127]
[22 33]
[23 32]
[24 31]
[25 30]
[34 126]
[35 125]
[37 123]
[38 122]
[39 120]
[40 119]
[41 118]
[42 117]
[43 116]
[44 114]
[45 113]
[46 112]
[47 111]
[48 110]
[49 109]
[50 108]
[51 107]
[54 104]
[55 103]
[58 98]
[59 97]
[60 96]
[61 95]
[62 94]
[64 92]
[65 91]
[66 90]
[73 87]
[74 86]
[75 85]
[76 84]
[77 83]
[78 82]
[144 212]
[145 211]
[146 210]
[147 208]
[148 207]
[149 206]
[150 205]
[151 203]
[152 202]
[153 201]
[154 200]
[155 199]
[156 198]
[157 197]
[158 196]
[159 194]
[160 193]
[161 192]
[162 191]
[163 190]
[164 189]
[171 188]
[172 187]
[173 186]
[174 185]
[175 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
