%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:17:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCGUGGCAACGGACGGCAACAGCUCGGGCGGCGCAUGGAGAGUGCGGGCGGCUUCAAGCUGGGUAUGGAGCCCCUCAGCGGCGGCGGGGUCUGUGAGUUGGACGCGGGGUCUUGGCGGGGAAUGGAGGUAGAAUAAACGUGGGACCCGGAGUGCACCAAGGUGAGAAAAAAAAAUUACUAAAA\
) } def
/len { sequence length } bind def

/coor [
[124.65562439 208.05847168]
[119.41908264 194.00221252]
[114.18254852 179.94593811]
[102.48892212 170.72052002]
[104.92175293 155.08747864]
[99.68521118 141.03121948]
[94.44866943 126.97494507]
[88.65860748 119.74078369]
[86.60167694 112.01013947]
[87.88803864 105.29752350]
[91.59079742 100.79111481]
[77.76943970 94.96273041]
[63.27793884 100.67535400]
[49.34414291 94.56764984]
[43.98733521 80.71701813]
[30.16597748 74.88863373]
[16.34461975 69.06024170]
[2.52326202 63.23186111]
[-15.67841148 65.95062256]
[-25.73450470 51.58049393]
[-39.65283966 45.98764801]
[-53.57117462 40.39480209]
[-67.48950958 34.80195236]
[-81.45483398 29.32748413]
[-95.46613312 23.97178841]
[-109.47743225 18.61609077]
[-125.13056183 20.91609764]
[-134.25636292 9.14456081]
[-149.90950012 11.44456768]
[-159.03529358 -0.32696882]
[-173.04660034 -5.68266582]
[-188.69972229 -3.38265944]
[-197.82553101 -15.15419579]
[-211.83682251 -20.50989151]
[-225.84812927 -25.86558914]
[-235.00482178 -26.00926590]
[-240.05059814 -31.43302155]
[-253.96893311 -37.02587128]
[-247.34396362 -23.56816864]
[-249.76490784 -8.76482391]
[-260.33184814 1.88129592]
[-275.11669922 4.41269684]
[-288.62347412 -2.11162281]
[-295.83129883 -15.26636887]
[-294.06079102 -30.16151047]
[-283.97009277 -41.26005936]
[-269.30905151 -44.43622208]
[-282.34167480 -51.86257172]
[-295.37429810 -59.28891754]
[-304.40240479 -60.82493591]
[-308.56365967 -66.95363617]
[-321.46829224 -74.60021973]
[-334.37292480 -82.24680328]
[-347.27758789 -89.89337921]
[-360.18222046 -97.53996277]
[-373.08685303 -105.18654633]
[-385.99151611 -112.83312225]
[-401.80816650 -113.21159363]
[-408.81332397 -126.35607147]
[-421.71795654 -134.00265503]
[-438.42675781 -136.87527466]
[-440.29187012 -153.72631836]
[-424.61569214 -160.18336487]
[-414.07138062 -146.90730286]
[-401.16674805 -139.26071167]
[-386.27307129 -139.42918396]
[-378.34490967 -125.73777008]
[-365.44027710 -118.09118652]
[-352.53564453 -110.44460297]
[-339.63098145 -102.79802704]
[-326.72634888 -95.15144348]
[-313.82171631 -87.50485992]
[-300.91705322 -79.85828400]
[-287.94796753 -72.32154083]
[-274.91534424 -64.89519501]
[-261.88272095 -57.46884918]
[-248.37608337 -50.94420624]
[-234.45774841 -45.35135651]
[-220.49243164 -39.87688828]
[-206.48112488 -34.52119064]
[-192.46983337 -29.16549492]
[-177.81887817 -31.84857559]
[-167.69090271 -19.69396591]
[-153.67959595 -14.33826828]
[-139.02864075 -17.02134895]
[-128.90066528 -4.86673832]
[-114.24971771 -7.54981995]
[-104.12173462 4.60479164]
[-90.11043549 9.96048832]
[-76.09913635 15.31618500]
[-68.71167755 14.76630783]
[-61.89666367 20.88361740]
[-47.97832870 26.47646523]
[-34.05999374 32.06931305]
[-20.14165878 37.66215897]
[-8.88154125 33.20311737]
[2.76847553 37.76676178]
[8.35164642 49.41050339]
[22.17300415 55.23888779]
[35.99436188 61.06727219]
[49.81571960 66.89566040]
[63.47282791 61.06307602]
[77.57267761 66.77699280]
[83.59782410 81.14137268]
[97.41918182 86.96975708]
[112.41702271 87.22446442]
[122.54500580 75.06985474]
[137.19595337 77.75293732]
[151.20726013 72.39723969]
[165.21855164 67.04154205]
[179.22985840 61.68584824]
[193.24114990 56.33015060]
[207.25245667 50.97445297]
[213.22778320 39.52701187]
[225.02604675 35.36159515]
[236.12826538 40.20042419]
[250.22848511 35.08341980]
[264.32870483 29.96641922]
[263.37109375 14.89128399]
[266.70080566 0.15731636]
[274.04785156 -13.04106808]
[284.81671143 -23.63393593]
[298.13433838 -30.76256943]
[312.92114258 -33.84908295]
[327.97845459 -32.64326477]
[342.08563232 -27.24286842]
[354.09906006 -18.08567810]
[363.04489136 -5.91402674]
[368.19787598 8.28538513]
[369.14035034 23.36147308]
[365.79583740 38.09209061]
[358.43551636 51.28308487]
[347.65603638 61.86513138]
[334.33126831 68.98037720]
[319.54135132 72.05204010]
[304.48526001 70.83109283]
[290.38351440 65.41652679]
[278.37927246 56.24727631]
[269.44570923 44.06664276]
[255.34548950 49.18364334]
[241.24525452 54.30064774]
[230.70700073 68.32101440]
[212.60815430 64.98575592]
[198.59684753 70.34145355]
[184.58554077 75.69714355]
[170.57424927 81.05284119]
[156.56294250 86.40853882]
[142.55165100 91.76423645]
[133.42585754 103.53577423]
[117.77272034 101.23577118]
[132.44433594 98.11426544]
[145.42163086 105.63688660]
[150.00439453 119.91967773]
[143.82655334 133.58840942]
[130.07772827 139.58587646]
[115.85646057 134.81558228]
[108.50494385 121.73841095]
[113.74147797 135.79467773]
[118.97801971 149.85093689]
[131.04620361 160.08175659]
[128.23881531 174.70939636]
[133.47535706 188.76567078]
[138.71189880 202.82194519]
[153.73159790 201.38284302]
[168.61181641 203.88113403]
[182.33799744 210.14646912]
[193.97425842 219.75166321]
[202.72723389 232.04182434]
[208.00012207 246.17897034]
[209.43341064 261.19921875]
[206.92936707 276.07849121]
[200.65873718 289.80224609]
[191.04905701 301.43478394]
[178.75552368 310.18301392]
[164.61634827 315.45046997]
[149.59553528 316.87792969]
[134.71723938 314.36816406]
[120.99591064 308.09222412]
[109.36705780 298.47805786]
[100.62358093 286.18115234]
[95.36161041 272.03991699]
[93.93992615 257.01858521]
[96.45545197 242.14125061]
[102.73667908 228.42234802]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 163]
[2 162]
[3 161]
[5 159]
[6 158]
[7 157]
[11 105]
[12 104]
[15 101]
[16 100]
[17 99]
[18 98]
[20 95]
[21 94]
[22 93]
[23 92]
[24 90]
[25 89]
[26 88]
[28 86]
[30 84]
[31 83]
[33 81]
[34 80]
[35 79]
[37 78]
[38 77]
[47 76]
[48 75]
[49 74]
[51 73]
[52 72]
[53 71]
[54 70]
[55 69]
[56 68]
[57 67]
[59 65]
[60 64]
[106 150]
[108 148]
[109 147]
[110 146]
[111 145]
[112 144]
[113 143]
[116 141]
[117 140]
[118 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
