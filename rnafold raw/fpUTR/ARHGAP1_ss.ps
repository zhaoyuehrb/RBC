%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:26:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGAAAUGGUUGGGGAUAGAAGAGAGCGGGAGGGGGCGGUUCCCGUUCCACCGCGGAGCCGGAUGUUUGCCGAGCCUUGACAGGCGUGGCAGAGGGAGCAGUGCCCGAGCGCGGUUUCUCUUAAGGUUCUGCAGGGCAAGGCUGUCUGGGACAGGCUUGGCC\
) } def
/len { sequence length } bind def

/coor [
[344.62045288 610.99243164]
[346.83590698 598.25592041]
[338.96801758 585.48498535]
[331.10012817 572.71405029]
[323.23223877 559.94317627]
[315.36431885 547.17224121]
[307.49642944 534.40130615]
[296.03588867 534.22491455]
[285.99017334 528.46057129]
[279.93038940 518.44952393]
[279.47210693 506.63604736]
[284.84619141 495.97097778]
[277.47021484 482.90979004]
[270.09420776 469.84860229]
[262.71820068 456.78741455]
[255.34222412 443.72622681]
[252.01451111 442.43673706]
[249.15972900 439.44598389]
[247.58221436 435.00057983]
[247.94242859 429.70205688]
[241.32411194 416.24108887]
[234.70579529 402.78009033]
[228.08747864 389.31912231]
[221.46916199 375.85815430]
[208.78643799 373.43804932]
[199.68772888 364.00451660]
[197.66802979 350.85748291]
[203.68934631 338.77899170]
[197.32852173 325.19442749]
[190.96768188 311.60989380]
[176.33183289 308.97738647]
[165.92950439 298.10284424]
[163.90142822 283.01177979]
[171.23306274 269.46359253]
[164.87222290 255.87905884]
[158.51139832 242.29450989]
[146.10714722 234.04928589]
[147.26228333 218.27030945]
[140.90144348 204.68576050]
[128.49719238 196.44053650]
[129.65232849 180.66154480]
[123.29148865 167.07701111]
[116.93065643 153.49246216]
[110.56981659 139.90792847]
[104.20898438 126.32338715]
[97.84814453 112.73884583]
[87.49696350 101.88283539]
[74.23046875 94.88282013]
[60.96397400 87.88281250]
[47.69747925 80.88280487]
[34.43098450 73.88279724]
[18.74082756 77.22921753]
[6.43377209 66.93766785]
[6.95073748 50.90294647]
[19.89515305 41.42551804]
[35.33716965 45.77565002]
[41.43099594 60.61629868]
[54.69748688 67.61631012]
[67.96398163 74.61631775]
[81.23047638 81.61633301]
[94.49697113 88.61634064]
[100.84468842 84.62178040]
[92.55822754 72.11840057]
[84.87107086 59.23788452]
[97.56670380 51.24908829]
[105.85279846 63.75225067]
[113.54012299 76.63266754]
[119.88784027 72.63810730]
[119.31677246 57.64898300]
[118.74571228 42.65985489]
[118.17465210 27.67073059]
[117.60359192 12.68160439]
[117.03253174 -2.30752087]
[116.46147156 -17.29664612]
[108.20439911 -30.79224968]
[115.45155334 -43.80485916]
[114.88049316 -58.79398727]
[114.30943298 -73.78311157]
[113.73837280 -88.77223969]
[104.55086517 -102.35610962]
[111.96345520 -116.98435211]
[128.35070801 -117.60868073]
[136.85482788 -103.58683777]
[128.72749329 -89.34329987]
[129.29855347 -74.35417175]
[129.86961365 -59.36504745]
[130.44067383 -44.37591934]
[138.65690613 -31.95244026]
[131.45059204 -17.86770630]
[132.02165222 -2.87858152]
[132.59271240 12.11054420]
[133.16378784 27.09967041]
[133.73484802 42.08879471]
[134.30590820 57.07792282]
[134.87696838 72.06704712]
[111.43268585 106.37800598]
[117.79352570 119.96254730]
[124.15435791 133.54708862]
[130.51519775 147.13163757]
[136.87603760 160.71617126]
[143.23686218 174.30072021]
[156.09608459 183.51760864]
[154.48597717 198.32492065]
[160.84681702 211.90946960]
[173.70603943 221.12635803]
[172.09593201 235.93368530]
[178.45677185 249.51821899]
[184.81761169 263.10275269]
[199.91853333 266.14709473]
[210.21099854 277.36843872]
[211.90235901 292.32180786]
[204.55221558 305.24905396]
[210.91305542 318.83361816]
[217.27389526 332.41815186]
[233.81169128 338.05389404]
[241.03540039 353.59127808]
[234.93013000 369.23983765]
[241.54844666 382.70080566]
[248.16676331 396.16177368]
[254.78507996 409.62277222]
[261.40341187 423.08374023]
[268.40341187 436.35021973]
[275.77941895 449.41140747]
[283.15539551 462.47262573]
[290.53140259 475.53381348]
[297.90737915 488.59500122]
[316.31219482 492.93515015]
[325.58273315 509.05032349]
[320.26736450 526.53344727]
[328.13525391 539.30438232]
[336.00314331 552.07525635]
[343.87103271 564.84619141]
[351.73892212 577.61706543]
[359.60684204 590.38800049]
[375.99914551 598.73071289]
[375.86715698 616.25988770]
[383.97677612 628.87872314]
[397.94674683 636.30505371]
[398.31857300 651.19500732]
[406.42819214 663.81378174]
[414.53781128 676.43261719]
[422.64743042 689.05139160]
[436.61740112 696.47778320]
[436.98922729 711.36773682]
[445.09884644 723.98651123]
[453.20846558 736.60534668]
[461.31808472 749.22412109]
[469.42770386 761.84295654]
[483.07748413 771.89874268]
[477.19326782 787.79882812]
[460.28567505 786.54614258]
[456.80889893 769.95251465]
[448.69927979 757.33374023]
[440.58966064 744.71496582]
[432.48004150 732.09613037]
[424.37045288 719.47735596]
[410.98052979 712.95355225]
[410.02862549 697.16101074]
[401.91900635 684.54223633]
[393.80938721 671.92340088]
[385.69976807 659.30462646]
[372.30987549 652.78082275]
[371.35797119 636.98828125]
[363.24835205 624.36950684]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 134]
[3 133]
[4 132]
[5 131]
[6 130]
[7 129]
[12 126]
[13 125]
[14 124]
[15 123]
[16 122]
[20 121]
[21 120]
[22 119]
[23 118]
[24 117]
[28 114]
[29 113]
[30 112]
[34 108]
[35 107]
[36 106]
[38 104]
[39 103]
[41 101]
[42 100]
[43 99]
[44 98]
[45 97]
[46 96]
[47 61]
[48 60]
[49 59]
[50 58]
[51 57]
[68 95]
[69 94]
[70 93]
[71 92]
[72 91]
[73 90]
[74 89]
[76 87]
[77 86]
[78 85]
[79 84]
[136 164]
[137 163]
[139 161]
[140 160]
[141 159]
[142 158]
[144 156]
[145 155]
[146 154]
[147 153]
[148 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
