%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:21:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUCCGGGGUCGAGGCGAGGCCAACGAUACGCCUGCUGCAGCAGGAGGAGUUACGAGCCGGGCCGCGCGCUGCCUAAAUACCUAAACCAGGUUUAGCGCCUGCUCAUAUAAAGCUCUCCUAACUCGUCUUCCGGUGGGAAUUUCUUCACGUGGGCCGGAGUCGGAGACUGAGUUUAGCUUUACUGAGGAGCUCUAAAUUUAGGCGGGU\
) } def
/len { sequence length } bind def

/coor [
[-32.46675491 222.27447510]
[-39.60844803 226.17698669]
[-47.54745483 227.80718994]
[-55.58193207 227.04116821]
[-63.00750351 223.96594238]
[-69.17900085 218.87010193]
[-82.59466553 225.57980347]
[-91.47622681 238.67286682]
[-106.32021332 237.44587708]
[-119.73587036 244.15557861]
[-133.15153503 250.86526489]
[-146.56719971 257.57498169]
[-151.37782288 269.54299927]
[-162.69052124 274.85516357]
[-174.20848083 271.15722656]
[-187.72300720 277.66546631]
[-201.23754883 284.17373657]
[-206.54116821 298.81985474]
[-220.33953857 305.22763062]
[-234.26971436 300.08117676]
[-237.26312256 310.53915405]
[-245.35169983 317.48004150]
[-255.70732117 318.79513550]
[-264.87976074 314.28973389]
[-278.58291626 320.39077759]
[-292.28610229 326.49182129]
[-294.30502319 338.20858765]
[-301.65420532 347.40164185]
[-312.41738892 351.85910034]
[-323.87606812 350.58041382]
[-333.19604492 343.99822998]
[-343.03121948 356.39096069]
[-357.74200439 354.05810547]
[-371.62155151 359.74649048]
[-385.50112915 365.43487549]
[-399.38067627 371.12326050]
[-413.26025391 376.81164551]
[-422.85852051 390.10845947]
[-439.14334106 388.17559814]
[-445.36233521 373.00137329]
[-435.11788940 360.19577026]
[-418.94863892 362.93206787]
[-405.06906128 357.24371338]
[-391.18951416 351.55532837]
[-377.30993652 345.86694336]
[-363.43038940 340.17855835]
[-354.58795166 328.19268799]
[-338.88442993 330.11868286]
[-332.84567261 312.83779907]
[-315.80120850 305.32928467]
[-298.38717651 312.78863525]
[-284.68399048 306.68759155]
[-270.98080444 300.58654785]
[-260.79095459 284.15374756]
[-240.77796936 286.56665039]
[-236.11631775 272.46682739]
[-222.50337219 265.67401123]
[-207.74580383 270.65917969]
[-194.23126221 264.15093994]
[-180.71673584 257.64266968]
[-171.62721252 242.63148499]
[-153.27688599 244.15930176]
[-139.86123657 237.44961548]
[-126.44557190 230.73991394]
[-113.02990723 224.03021240]
[-105.10791779 211.41706848]
[-89.30435944 212.16413879]
[-75.88870239 205.45443726]
[-71.09214783 184.05383301]
[-51.79121399 173.06935120]
[-30.41703415 180.04595947]
[-17.65683365 172.16070557]
[-4.89663219 164.27545166]
[7.86356878 156.39019775]
[20.62376976 148.50494385]
[33.38397217 140.61967468]
[46.14417267 132.73442078]
[58.90437317 124.84916687]
[71.66457367 116.96391296]
[84.42477417 109.07865143]
[87.98097992 94.50630188]
[80.28749084 81.62957001]
[72.59400177 68.75283813]
[64.90051270 55.87610626]
[49.75767136 50.57762909]
[44.59499359 35.38795090]
[53.37284851 21.95929337]
[69.35761261 20.59297371]
[80.28714752 32.33711624]
[77.77724457 48.18261719]
[85.47073364 61.05934906]
[93.16422272 73.93608093]
[100.85771179 86.81281281]
[115.01596069 91.76699829]
[129.05947876 86.49637604]
[143.10301208 81.22575378]
[157.14653015 75.95513153]
[167.34803772 63.86217117]
[181.98245239 66.63405609]
[196.02597046 61.36343384]
[202.96147156 55.41774368]
[210.31919861 56.12073135]
[220.70046997 44.18172836]
[235.29177856 47.17222977]
[249.41256714 42.11227798]
[263.53335571 37.05233002]
[277.65417480 31.99237823]
[283.85928345 20.68431664]
[295.72531128 16.76082420]
[306.71936035 21.80749702]
[320.91427612 16.95935249]
[335.10919189 12.11120701]
[349.30410767 7.26306248]
[363.49902344 2.41491771]
[377.69393921 -2.43322706]
[391.88882446 -7.28137207]
[394.11480713 -15.32864666]
[399.28143311 -21.76754951]
[406.48947144 -25.59587669]
[414.53009033 -26.25565529]
[422.08767700 -23.71338081]
[427.95489502 -18.45346260]
[442.41436768 -22.44401550]
[456.87380981 -26.43456650]
[471.33325195 -30.42511940]
[485.79269409 -34.41567230]
[500.22186279 -38.51427078]
[514.61999512 -42.72068024]
[529.01812744 -46.92708969]
[543.41625977 -51.13350296]
[557.64703369 -55.87533569]
[571.69055176 -61.14595795]
[585.73406982 -66.41658020]
[599.77758789 -71.68720245]
[613.82110596 -76.95782471]
[627.86462402 -82.22844696]
[635.29919434 -101.89739990]
[654.55841064 -109.57534790]
[672.95660400 -100.67189789]
[686.65979004 -106.77294159]
[700.36297607 -112.87399292]
[709.55914307 -126.45200348]
[725.89453125 -125.00715637]
[732.56463623 -110.02578735]
[722.70788574 -96.91944885]
[706.46398926 -99.17081451]
[692.76080322 -93.06976318]
[679.05761719 -86.96871185]
[678.55548096 -77.62577820]
[674.66058350 -69.05493927]
[667.86975098 -62.45133591]
[659.08666992 -58.75257492]
[649.50183105 -58.50574875]
[640.43115234 -61.78692627]
[633.13525391 -68.18492126]
[619.09173584 -62.91429901]
[605.04821777 -57.64367676]
[591.00469971 -52.37305450]
[576.96118164 -47.10243225]
[562.91766357 -41.83181000]
[575.28430176 -33.34263611]
[576.51074219 -18.39286041]
[565.69305420 -8.00167465]
[550.80462646 -9.82822227]
[542.81958008 -22.52618980]
[547.62268066 -36.73537445]
[533.22454834 -32.52896118]
[518.82641602 -28.32255173]
[504.42828369 -24.11614037]
[498.88894653 -19.22264671]
[489.78323364 -19.95623016]
[475.32379150 -15.96567726]
[460.86434937 -11.97512436]
[446.40490723 -7.98457193]
[431.94546509 -3.99401903]
[418.34631348 12.84307194]
[396.73696899 6.91353893]
[382.54208374 11.76168346]
[368.34716797 16.60982895]
[354.15225220 21.45797348]
[339.95733643 26.30611801]
[325.76242065 31.15426254]
[311.56750488 36.00240707]
[300.75076294 49.82098770]
[282.71411133 46.11317444]
[268.59332275 51.17312622]
[254.47251892 56.23307419]
[240.35173035 61.29302597]
[230.98046875 72.87010193]
[215.37915039 70.24152374]
[201.29660034 75.40695953]
[187.25306702 80.67758179]
[178.05604553 92.39355469]
[162.41716003 89.99865723]
[148.37362671 95.26927948]
[134.33010864 100.53990173]
[120.28658295 105.81052399]
[92.31002808 121.83885193]
[79.54982758 129.72410583]
[66.78962708 137.60937500]
[54.02942657 145.49462891]
[41.26922607 153.37988281]
[28.50902557 161.26513672]
[15.74882507 169.15039062]
[2.98862433 177.03564453]
[-9.77157688 184.92091370]
[-22.53177834 192.80616760]
[-21.54440117 201.02038574]
[-23.00291252 209.12988281]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 68]
[7 67]
[9 65]
[10 64]
[11 63]
[12 62]
[15 60]
[16 59]
[17 58]
[20 55]
[24 53]
[25 52]
[26 51]
[31 48]
[33 46]
[34 45]
[35 44]
[36 43]
[37 42]
[71 207]
[72 206]
[73 205]
[74 204]
[75 203]
[76 202]
[77 201]
[78 200]
[79 199]
[80 198]
[81 93]
[82 92]
[83 91]
[84 90]
[94 197]
[95 196]
[96 195]
[97 194]
[99 192]
[100 191]
[102 190]
[104 188]
[105 187]
[106 186]
[107 185]
[110 183]
[111 182]
[112 181]
[113 180]
[114 179]
[115 178]
[116 177]
[122 175]
[123 174]
[124 173]
[125 172]
[126 171]
[127 169]
[128 168]
[129 167]
[130 166]
[131 160]
[132 159]
[133 158]
[134 157]
[135 156]
[136 155]
[139 148]
[140 147]
[141 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
