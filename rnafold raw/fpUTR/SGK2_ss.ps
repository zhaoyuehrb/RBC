%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:51:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGGUUCAGACUUUAUGCCCUGAAAAGAUCCUUCCAGCCCUGGCCAUCUUGGACUUCUGGAGCUACCCUGGCUCACAGGGGUCUUGUUGCCCUGGGUGUCCCCAGUUCUUGAAAAGAAUCAGCCUGGGAGGGGCCACACCCUGACCAUCCCCCUUUAUCCCUUCUGAGAUGUUUGUUAGGAAGUCUGGGUCCAGGGGAUAUCAUUUCUUGUUCCAUCC\
) } def
/len { sequence length } bind def

/coor [
[242.62631226 456.79275513]
[247.27052307 450.91073608]
[242.22978210 436.78308105]
[237.18904114 422.65539551]
[232.14830017 408.52774048]
[227.10755920 394.40008545]
[222.06681824 380.27239990]
[217.02607727 366.14474487]
[211.98533630 352.01708984]
[206.94459534 337.88940430]
[201.90385437 323.76174927]
[196.86311340 309.63409424]
[191.82237244 295.50640869]
[186.78163147 281.37875366]
[178.12677002 293.63000488]
[163.16137695 294.64822388]
[152.92686462 283.68215942]
[154.97424316 268.82254028]
[167.79296875 261.03277588]
[181.92474365 266.05947876]
[177.90469360 251.60820007]
[173.88465881 237.15692139]
[169.86460876 222.70565796]
[165.84457397 208.25437927]
[161.72145081 193.83218384]
[157.49546814 179.43978882]
[153.26947021 165.04739380]
[142.25990295 155.01551819]
[145.79583740 139.59449768]
[141.56983948 125.20210266]
[137.34385681 110.80970764]
[128.59014893 124.43924713]
[115.41584778 132.91632080]
[100.43771362 135.07991028]
[86.42559052 130.97393799]
[75.79083252 121.76287079]
[70.17185211 109.44690704]
[70.18800354 96.44151306]
[56.21004105 90.99940491]
[42.23208237 85.55728912]
[28.25412178 80.11517334]
[10.11937904 83.32853699]
[-0.31265542 69.21334076]
[-14.36690140 63.97137833]
[-28.42114639 58.72941589]
[-44.05512238 61.15621185]
[-53.27602768 49.45902252]
[-67.33027649 44.21706009]
[-76.93891144 49.29647446]
[-87.53882599 48.27407074]
[-95.65758514 41.72710419]
[-98.76895905 32.00258255]
[-112.66778564 26.36142540]
[-126.56660461 20.72026634]
[-140.46543884 15.07910728]
[-154.36425781 9.43794823]
[-168.26307678 3.79678965]
[-182.16191101 -1.84436917]
[-196.06072998 -7.48552799]
[-209.95954895 -13.12668705]
[-223.89830017 -18.66846466]
[-237.87626648 -24.11058044]
[-251.85421753 -29.55269623]
[-265.83218384 -34.99481201]
[-279.81015015 -40.43692780]
[-293.78811646 -45.87904358]
[-310.74166870 -45.99123764]
[-315.32708740 -62.31331635]
[-300.91226196 -71.23793030]
[-288.34597778 -59.85700226]
[-274.36804199 -54.41488647]
[-260.39007568 -48.97277069]
[-246.41210938 -43.53065491]
[-232.43414307 -38.08854294]
[-218.45619202 -32.64642715]
[-211.08763123 -33.14849854]
[-204.31840515 -27.02551079]
[-190.41957092 -21.38435173]
[-176.52075195 -15.74319363]
[-162.62191772 -10.10203552]
[-148.72309875 -4.46087646]
[-134.82427979 1.18028235]
[-120.92544556 6.82144117]
[-107.02662659 12.46259975]
[-93.12779999 18.10375786]
[-74.21627808 14.05537701]
[-62.08831024 30.16281509]
[-48.03406525 35.40477753]
[-33.40534210 32.60304260]
[-23.17918396 44.67517090]
[-9.12493896 49.91713333]
[4.92930746 55.15909576]
[16.05498314 50.42148209]
[27.80405235 54.66843796]
[33.69623566 66.13720703]
[47.67419815 71.57932281]
[61.65215683 77.02143860]
[75.63011932 82.46355438]
[82.02896118 73.23692322]
[91.95761108 66.50163269]
[104.39215851 63.60045242]
[117.80731201 65.44116974]
[120.15382385 50.62584305]
[122.50034332 35.81051636]
[124.84686279 20.99519157]
[127.19337463 6.17986631]
[120.30694580 -2.22866964]
[119.20394897 -12.82049942]
[124.00820923 -22.07771492]
[132.92115784 -27.05831909]
[135.68977356 -41.80059433]
[138.45840454 -56.54286957]
[141.22703552 -71.28514862]
[132.10064697 -84.18803406]
[134.85333252 -99.75075531]
[147.85198975 -108.74021912]
[163.38473511 -105.82314301]
[172.23626709 -92.73017120]
[169.15513611 -77.22913361]
[155.96931458 -68.51651764]
[153.20068359 -53.77424240]
[150.43205261 -39.03196716]
[147.66342163 -24.28969193]
[155.38682556 -6.55880594]
[142.00869751 8.52638340]
[139.66218567 23.34170914]
[137.31567383 38.15703201]
[134.96914673 52.97235870]
[132.62263489 67.78768158]
[146.08361816 74.40599823]
[156.38301086 63.50084305]
[166.68240356 52.59568405]
[176.98179626 41.69052505]
[176.28001404 25.90182304]
[187.00956726 14.29784966]
[202.80480957 13.76303482]
[214.29469299 24.61467361]
[214.66247559 40.41468430]
[203.68997192 51.78919601]
[187.88694763 51.98991776]
[177.58755493 62.89507675]
[167.28816223 73.80023193]
[156.98876953 84.70539093]
[171.25555420 80.07300568]
[185.52232361 75.44062042]
[196.39421082 65.10611725]
[209.44392395 57.70981216]
[223.89564514 53.69142151]
[238.89027405 53.28982544]
[253.53637695 56.52889633]
[266.96328735 63.21608353]
[278.37274170 72.95383453]
[287.08651733 85.16326141]
[292.58657837 99.11852264]
[294.54595947 113.99000549]
[292.84814453 128.89361572]
[287.59411621 142.94334412]
[279.09616089 155.30397034]
[267.85952759 165.24066162]
[254.55216980 172.16268921]
[239.96522522 175.65856934]
[224.96586609 175.52044678]
[210.44577026 171.75656128]
[197.26814270 164.59065247]
[186.21638489 154.44874573]
[177.94749451 141.93373108]
[172.95372009 127.79265594]
[162.34498596 117.18818665]
[151.73625183 106.58371735]
[155.96223450 120.97611237]
[160.18823242 135.36849976]
[171.50007629 146.42982483]
[167.66186523 160.82139587]
[171.88786316 175.21379089]
[176.11384583 189.60618591]
[181.53074646 196.95266724]
[180.29585266 204.23434448]
[184.31588745 218.68560791]
[188.33592224 233.13688660]
[192.35597229 247.58815002]
[196.37600708 262.03942871]
[200.90928650 276.33801270]
[205.95002747 290.46566772]
[210.99076843 304.59335327]
[216.03150940 318.72100830]
[221.07225037 332.84866333]
[226.11299133 346.97634888]
[231.15373230 361.10400391]
[236.19447327 375.23165894]
[241.23521423 389.35934448]
[246.27595520 403.48699951]
[251.31669617 417.61465454]
[256.35745239 431.74234009]
[261.39819336 445.86999512]
[280.25393677 459.38104248]
[275.43194580 481.30834961]
[281.46768188 495.04043579]
[287.50344849 508.77249146]
[293.53918457 522.50457764]
[299.57495117 536.23663330]
[305.61068726 549.96868896]
[320.80120850 553.13537598]
[331.20431519 564.64862061]
[332.81979370 580.08135986]
[325.02648926 593.49945068]
[310.82104492 599.74322510]
[295.66577148 596.41192627]
[285.38818359 584.78649902]
[283.94021606 569.33715820]
[291.87863159 556.00445557]
[285.84286499 542.27239990]
[279.80712891 528.54028320]
[273.77136230 514.80822754]
[267.73562622 501.07617188]
[261.69985962 487.34411621]
[254.66339111 486.50537109]
[248.29154968 483.25210571]
[243.39338684 477.94454956]
[240.60896301 471.20687866]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 194]
[3 193]
[4 192]
[5 191]
[6 190]
[7 189]
[8 188]
[9 187]
[10 186]
[11 185]
[12 184]
[13 183]
[14 182]
[20 181]
[21 180]
[22 179]
[23 178]
[24 177]
[25 175]
[26 174]
[27 173]
[29 171]
[30 170]
[31 169]
[38 98]
[39 97]
[40 96]
[41 95]
[43 92]
[44 91]
[45 90]
[47 88]
[48 87]
[52 85]
[53 84]
[54 83]
[55 82]
[56 81]
[57 80]
[58 79]
[59 78]
[60 77]
[61 75]
[62 74]
[63 73]
[64 72]
[65 71]
[66 70]
[102 129]
[103 128]
[104 127]
[105 126]
[106 125]
[110 123]
[111 122]
[112 121]
[113 120]
[130 143]
[131 142]
[132 141]
[133 140]
[196 215]
[197 214]
[198 213]
[199 212]
[200 211]
[201 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
