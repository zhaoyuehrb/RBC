%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:30:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGGCCAAGAGUGCGUGGGCGGCGGCGCGCGGGUGCGAUCGCGGAGCUGUGAGGCGCAGGCAGGGCUCUGGGGCACCUAGAGACCGGGGCCGGAGACGUGGCAGCCGCCCUGCCCGCCAGAAAGUUUCCUAGAAGUUUGCUGGGCGCGGGCGCACGACUGACUGGCUGGACC\
) } def
/len { sequence length } bind def

/coor [
[121.97419739 942.05786133]
[121.15742493 927.08013916]
[120.34064484 912.10235596]
[119.52387238 897.12463379]
[118.70709991 882.14691162]
[117.89032745 867.16912842]
[117.07355499 852.19140625]
[104.08908844 841.52832031]
[102.79129791 824.43853760]
[114.46715546 811.43487549]
[113.37854767 796.47442627]
[112.28993225 781.51397705]
[108.65538025 775.04779053]
[111.31990051 766.27239990]
[110.50312805 751.29467773]
[109.68635559 736.31689453]
[108.86958313 721.33917236]
[100.45074463 709.05206299]
[107.42512512 694.85107422]
[106.60835266 679.87335205]
[96.63128662 674.25402832]
[90.55683899 664.40594482]
[90.00135040 652.72827148]
[95.21965790 642.13256836]
[105.01245880 635.31701660]
[104.74008179 620.31951904]
[104.46770477 605.32196045]
[104.19532776 590.32446289]
[96.22819519 577.73974609]
[103.71363068 563.80139160]
[103.44125366 548.80383301]
[103.16887665 533.80633545]
[90.58015442 522.67883301]
[89.90377045 505.55316162]
[102.04410553 492.98202515]
[101.49944305 477.99191284]
[92.84585571 469.50756836]
[92.28971100 456.99969482]
[100.67630005 447.16961670]
[100.40392303 432.17208862]
[87.81520081 421.04458618]
[87.13882446 403.91891479]
[99.27915955 391.34777832]
[98.73448944 376.35766602]
[98.18982697 361.36755371]
[97.64516449 346.37744141]
[97.10049438 331.38732910]
[96.55583191 316.39721680]
[83.33094025 309.54391479]
[75.25836182 296.90710449]
[74.59049988 281.82662964]
[81.60675049 268.34817505]
[94.51164246 260.13775635]
[93.96697998 245.14764404]
[93.42231750 230.15753174]
[92.87764740 215.16741943]
[90.02578735 211.29603577]
[89.59970093 205.58383179]
[92.59538269 199.62522888]
[92.59538269 184.62522888]
[92.59538269 169.62522888]
[92.59538269 154.62522888]
[92.59538269 139.62522888]
[92.59538269 124.62522888]
[92.59538269 109.62522888]
[89.21964264 95.01001740]
[82.64134979 81.52943420]
[76.06306458 68.04885101]
[69.48477936 54.56826782]
[62.90649033 41.08768463]
[56.32820511 27.60709953]
[49.74991608 14.12651634]
[37.36974716 2.54343700]
[45.07298279 -12.55942631]
[61.71809006 -9.33812523]
[63.23049927 7.54822874]
[69.80878448 21.02881241]
[76.38707733 34.50939560]
[82.96536255 47.98997879]
[89.54364777 61.47056198]
[96.12194061 74.95114899]
[102.70022583 88.43173218]
[110.18909454 88.02334595]
[125.16684723 87.20657349]
[132.65571594 86.79818726]
[137.72909546 72.68220520]
[142.80247498 58.56623077]
[139.10040283 40.54491043]
[152.89309692 29.71925735]
[157.70932007 15.51348305]
[162.52552795 1.30770779]
[167.34175110 -12.89806747]
[160.12246704 -26.95713806]
[165.03839111 -41.97742844]
[179.17300415 -49.04766846]
[194.14048767 -43.97320938]
[201.06089783 -29.76463699]
[195.82847595 -14.85164547]
[181.54753113 -8.08184910]
[176.73130798 6.12392569]
[171.91508484 20.32970047]
[167.09887695 34.53547668]
[172.17384338 45.54061890]
[168.25018311 57.43014145]
[156.91845703 63.63961029]
[151.84507751 77.75558472]
[146.77169800 91.87156677]
[107.59538269 109.62522888]
[107.59538269 124.62522888]
[107.59538269 139.62522888]
[107.59538269 154.62522888]
[107.59538269 169.62522888]
[107.59538269 184.62522888]
[107.59538269 199.62522888]
[107.86775970 214.62275696]
[108.41242218 229.61286926]
[108.95709229 244.60296631]
[109.50175476 259.59307861]
[122.96848297 266.84527588]
[130.94441223 279.77902222]
[131.37277222 294.86816406]
[124.23858643 308.05755615]
[111.54593658 315.85256958]
[112.09060669 330.84268188]
[112.63526917 345.83276367]
[113.17993927 360.82287598]
[113.72460175 375.81298828]
[114.26926422 390.80310059]
[125.13787842 398.79461670]
[129.34698486 411.40637207]
[125.56878662 423.95053101]
[115.40145111 431.89968872]
[115.67382812 446.89721680]
[125.53662872 462.42779541]
[116.48954773 477.44723511]
[117.03421783 492.43734741]
[127.90283203 500.42886353]
[132.11192322 513.04058838]
[128.33374023 525.58477783]
[118.16640472 533.53393555]
[118.43878174 548.53149414]
[118.71115875 563.52899170]
[126.69776917 577.18640137]
[119.19285583 590.05206299]
[119.46523285 605.04962158]
[119.73760986 620.04711914]
[120.00998688 635.04467773]
[134.13380432 647.62939453]
[134.60334778 666.22222900]
[121.58609772 679.05657959]
[122.40287018 694.03430176]
[130.88012695 707.39270020]
[123.84732819 720.52239990]
[124.66410065 735.50012207]
[125.48087311 750.47790527]
[126.29764557 765.45562744]
[127.25038147 780.42535400]
[128.33898926 795.38580322]
[129.42759705 810.34625244]
[140.57923889 817.93780518]
[145.24349976 830.38842773]
[141.92329407 843.06152344]
[132.05130005 851.37463379]
[132.86807251 866.35235596]
[133.68484497 881.33013916]
[134.50161743 896.30786133]
[135.31838989 911.28558350]
[136.13516235 926.26336670]
[136.95193481 941.24108887]
[146.36096191 954.67248535]
[139.18923950 969.42034912]
[122.81441498 970.31329346]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 169]
[2 168]
[3 167]
[4 166]
[5 165]
[6 164]
[7 163]
[10 159]
[11 158]
[12 157]
[14 156]
[15 155]
[16 154]
[17 153]
[19 151]
[20 150]
[25 147]
[26 146]
[27 145]
[28 144]
[30 142]
[31 141]
[32 140]
[35 136]
[36 135]
[39 133]
[40 132]
[43 128]
[44 127]
[45 126]
[46 125]
[47 124]
[48 123]
[53 118]
[54 117]
[55 116]
[56 115]
[59 114]
[60 113]
[61 112]
[62 111]
[63 110]
[64 109]
[65 108]
[66 82]
[67 81]
[68 80]
[69 79]
[70 78]
[71 77]
[72 76]
[85 107]
[86 106]
[87 105]
[89 102]
[90 101]
[91 100]
[92 99]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
