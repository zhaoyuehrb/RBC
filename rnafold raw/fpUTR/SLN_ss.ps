%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:23:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCCAGACAGCCUGGGAGGGGAGAAGGAGUUGGAGCUCAAGUUGGAGACAGCGAGGAGAAACCUGCCAUAGCCAGGGUGUGUCUUUGAUCCUCUUCAGGAGGUGAGGAGAAGCCAGAGGUCCUUGGUGUGCCCUCAGAAAUCUGCCUGCAGUUCUCACCAAGCCGCUGUGAAA\
) } def
/len { sequence length } bind def

/coor [
[367.77334595 260.33239746]
[365.00787354 248.18444824]
[366.11788940 235.75062561]
[352.54547119 229.36393738]
[338.97308350 222.97724915]
[325.08966064 228.24853516]
[311.23434448 221.96485901]
[305.79946899 207.36692810]
[292.22705078 200.98023987]
[278.34362793 206.25152588]
[264.48831177 199.96784973]
[259.05343628 185.36991882]
[245.48103333 178.98323059]
[231.90861511 172.59652710]
[218.33621216 166.20983887]
[204.76380920 159.82315063]
[197.34791565 159.82026672]
[191.00666809 153.19805908]
[177.55110168 146.56877136]
[164.09552002 139.93946838]
[150.63995361 133.31016541]
[137.18438721 126.68087006]
[123.72881317 120.05157471]
[117.78876495 130.22734070]
[107.55883026 138.34210205]
[93.87540436 142.64939880]
[78.25716400 141.77403259]
[62.73660278 134.96723938]
[48.74095535 140.36369324]
[34.74530411 145.76016235]
[20.74965668 151.15663147]
[10.87503529 164.24952698]
[-5.36575365 161.97601318]
[-11.26557922 146.67491150]
[-0.75520700 134.08665466]
[15.35319328 137.16098022]
[29.34884262 131.76451111]
[43.34449005 126.36804962]
[57.34014130 120.97158813]
[56.46696854 113.52259064]
[54.72061920 98.62459564]
[53.84744644 91.17559814]
[38.98320007 89.16209412]
[24.11895370 87.14859772]
[9.25470829 85.13510132]
[-5.70603848 91.85135651]
[-18.84268379 82.03501129]
[-16.64137268 65.78427887]
[-1.36662519 59.81652069]
[11.26820755 70.27085114]
[26.13245392 72.28435516]
[40.99670029 74.29785156]
[55.86094666 76.31134796]
[63.66970444 63.50419235]
[55.07218552 51.21262360]
[46.47467041 38.92105484]
[37.87715149 26.62948418]
[29.27963257 14.33791447]
[15.02957916 7.46430111]
[14.07495308 -7.39968061]
[-0.17509980 -14.27329350]
[-1.12972569 -29.13727570]
[-9.72724438 -41.42884445]
[-18.32476234 -53.72041321]
[-26.92228127 -66.01198578]
[-35.73905945 -78.14723969]
[-44.77225876 -90.12226868]
[-60.07389450 -96.02073669]
[-62.34883881 -112.26132202]
[-49.25682068 -122.13710785]
[-34.26578522 -115.48872375]
[-32.79722595 -99.15546417]
[-23.76403046 -87.18043518]
[-19.21093559 -85.64089966]
[-15.59069824 -81.20559692]
[-14.63071060 -74.60950470]
[-6.03319263 -62.31793213]
[2.56432557 -50.02636337]
[11.16184425 -37.73479462]
[24.79694557 -31.74035645]
[26.36652374 -15.99719906]
[40.00162506 -10.00276089]
[41.57120132 5.74039602]
[50.16872025 18.03196526]
[58.76623917 30.32353592]
[67.36375427 42.61510468]
[75.96127319 54.90667343]
[111.78052521 57.16801071]
[132.29153442 80.45768738]
[130.35810852 106.59600067]
[143.81367493 113.22529602]
[157.26925659 119.85459900]
[170.72482300 126.48389435]
[184.18038940 133.11318970]
[197.63597107 139.74249268]
[211.15049744 146.25074768]
[224.72290039 152.63743591]
[238.29530334 159.02412415]
[251.86772156 165.41081238]
[265.44012451 171.79750061]
[280.15234375 166.68006897]
[293.82571411 173.35043335]
[298.61373901 187.40782166]
[312.18615723 193.79450989]
[326.89837646 188.67707825]
[340.57174683 195.34744263]
[345.35977173 209.40483093]
[358.93215942 215.79151917]
[372.50457764 222.17822266]
[386.08590698 210.48680115]
[403.35577393 205.90380859]
[420.84338379 209.30268860]
[435.05493164 219.95747375]
[443.17150879 235.69725037]
[443.60839844 253.34838867]
[457.50494385 258.99520874]
[471.40145874 264.64202881]
[487.09915161 262.66909790]
[495.97738647 274.62844849]
[509.87393188 280.27526855]
[516.51824951 279.74340820]
[521.64794922 282.28594971]
[524.16204834 286.38229370]
[537.84692383 292.52432251]
[551.53173828 298.66635132]
[565.21661377 304.80834961]
[578.90148926 310.95037842]
[592.58636475 317.09240723]
[606.27124023 323.23443604]
[622.02966309 321.82623291]
[630.47283936 334.09655762]
[645.09088135 328.71585083]
[658.88177490 335.13970947]
[663.92138672 349.10888672]
[677.60620117 355.25088501]
[691.34564209 361.26983643]
[705.13861084 367.16522217]
[718.93151855 373.06057739]
[732.18255615 364.98660278]
[747.64587402 366.27691650]
[759.37554932 376.43539429]
[762.86120605 391.55590820]
[756.76263428 405.82427979]
[743.42480469 413.75405884]
[727.97637939 412.29605103]
[716.35760498 402.01092529]
[713.03613281 386.85351562]
[699.24322510 380.95812988]
[685.45031738 375.06274414]
[678.03906250 375.32608032]
[671.46423340 368.93576050]
[657.77935791 362.79373169]
[643.99279785 368.31341553]
[630.02691650 362.27944946]
[624.33087158 347.78143311]
[609.55126953 349.62896729]
[600.12921143 336.91928101]
[586.44433594 330.77728271]
[572.75946045 324.63525391]
[559.07458496 318.49322510]
[545.38977051 312.35119629]
[531.70489502 306.20919800]
[518.02001953 300.06716919]
[504.22708130 294.17178345]
[490.33056641 288.52496338]
[475.62683105 290.90182495]
[465.75463867 278.53857422]
[451.85809326 272.89172363]
[437.96157837 267.24490356]
[429.78927612 276.42047119]
[419.16839600 282.64758301]
[407.12249756 285.30859375]
[394.81799316 284.13043213]
[383.45098877 279.21246338]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 109]
[4 108]
[5 107]
[8 104]
[9 103]
[12 100]
[13 99]
[14 98]
[15 97]
[16 96]
[18 95]
[19 94]
[20 93]
[21 92]
[22 91]
[23 90]
[28 39]
[29 38]
[30 37]
[31 36]
[42 53]
[43 52]
[44 51]
[45 50]
[54 87]
[55 86]
[56 85]
[57 84]
[58 83]
[60 81]
[62 79]
[63 78]
[64 77]
[65 76]
[66 73]
[67 72]
[115 169]
[116 168]
[117 167]
[119 165]
[120 164]
[123 163]
[124 162]
[125 161]
[126 160]
[127 159]
[128 158]
[129 157]
[131 155]
[134 152]
[135 151]
[136 149]
[137 148]
[138 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
