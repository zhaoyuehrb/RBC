%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:05:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGGCGGCGUUGCGGCCCCGGCCCCGGCUCCCUGCGCCGCCGCCGCCGCCGCCGCCAGCGCUAGCGCCAGCAGCCGGGCCCGAUCACCCGCCGCCCGGUGCCCGCCGCCGCCCGCGCCAGCAACCGGGCCCGAUCACCCGCCGCCCGGUGCCCGCCGCCGCCCGCGCCACCGGC\
) } def
/len { sequence length } bind def

/coor [
[116.53022766 224.88346863]
[115.40026093 221.45892334]
[115.47211456 217.45190430]
[116.97115326 213.29841614]
[113.78267670 198.64120483]
[110.59419250 183.98400879]
[107.40571594 169.32679749]
[104.21723938 154.66960144]
[101.02875519 140.01239014]
[97.84027863 125.35519409]
[85.37727356 122.76010132]
[75.03970337 114.08129120]
[69.74750519 100.83362579]
[55.88931656 106.57388306]
[42.03112411 112.31413269]
[28.17292976 118.05438232]
[14.31473732 123.79463196]
[8.19823551 138.12034607]
[-5.93771458 143.74436951]
[-19.55740166 137.82493591]
[-33.41559601 143.56518555]
[-47.27378845 149.30543518]
[-61.13198090 155.04568481]
[-67.24848175 169.37139893]
[-81.38442993 174.99542236]
[-95.00411987 169.07598877]
[-108.86231232 174.81623840]
[-122.72050476 180.55648804]
[-136.57870483 186.29673767]
[-141.10813904 201.26397705]
[-154.22685242 209.77476501]
[-169.74058533 207.81054688]
[-180.32423401 196.29879761]
[-180.98049927 180.67498779]
[-171.39955139 168.31620789]
[-156.10517883 165.05790710]
[-142.31895447 172.43855286]
[-128.46075439 166.69830322]
[-114.60256195 160.95805359]
[-100.74436951 155.21778870]
[-95.29946899 141.40155029]
[-81.32706451 135.38270569]
[-66.87223053 141.18750000]
[-53.01403809 135.44725037]
[-39.15584564 129.70700073]
[-25.29765320 123.96674347]
[-19.85275269 110.15049744]
[-5.88034582 104.13165283]
[8.57448578 109.93643951]
[22.43267822 104.19618988]
[36.29087067 98.45594025]
[50.14906311 92.71569061]
[64.00725555 86.97543335]
[71.77613831 74.14405060]
[70.43916321 59.20375061]
[69.10219574 44.26345062]
[57.25869370 34.14568329]
[56.11564636 18.97505188]
[65.83438110 7.74643469]
[64.49740601 -7.19386339]
[63.16043854 -22.13416100]
[50.00824738 -30.15451622]
[44.16884232 -44.21704483]
[47.68803787 -58.84849548]
[59.01246262 -68.48672485]
[57.67549133 -83.42702484]
[56.33852005 -98.36731720]
[47.57250595 -104.87526703]
[43.92756271 -114.93288422]
[46.38591385 -125.11814880]
[53.89550400 -132.10585022]
[53.09263992 -147.08433533]
[52.28977585 -162.06283569]
[48.69566727 -170.49649048]
[51.60868073 -177.31538391]
[51.07329559 -192.30583191]
[50.53791046 -207.29626465]
[50.00252533 -222.28671265]
[49.46714020 -237.27716064]
[48.93175507 -252.26759338]
[38.79841995 -267.62490845]
[47.58471298 -282.80001831]
[46.78184891 -297.77853394]
[34.85839081 -308.15188599]
[33.84567261 -323.92370605]
[44.34452057 -335.73681641]
[60.12615585 -336.58273315]
[71.82761383 -325.95956421]
[72.50662231 -310.16989136]
[61.76034927 -298.58139038]
[62.56321335 -283.60290527]
[71.36057281 -275.27081299]
[72.13402557 -262.77667236]
[63.92219925 -252.80297852]
[64.45758057 -237.81254578]
[64.99296570 -222.82209778]
[65.52835083 -207.83164978]
[66.06373596 -192.84121704]
[66.59912109 -177.85076904]
[67.26827240 -162.86570740]
[68.07113647 -147.88720703]
[68.87400055 -132.90870667]
[80.59762573 -117.55558014]
[71.27881622 -99.70429230]
[72.61579132 -84.76399231]
[73.95275879 -69.82369232]
[86.80854797 -62.34929276]
[92.86968994 -48.57516479]
[89.61991119 -33.69926453]
[78.10073853 -23.47113228]
[79.43770599 -8.53083324]
[80.77467346 6.40946484]
[92.33266449 15.73408031]
[93.90137482 30.86662102]
[84.04249573 42.92647934]
[85.37946320 57.86677933]
[86.71643066 72.80707550]
[100.50178528 70.94460297]
[113.08336639 75.40825653]
[121.84171295 84.72817993]
[125.20324707 96.48625183]
[140.01010132 98.88565063]
[154.81695557 101.28504181]
[163.82185364 99.56577301]
[169.86570740 103.86167145]
[184.62738037 106.52497101]
[199.38905334 109.18827057]
[214.15071106 111.85156250]
[228.91238403 114.51486206]
[243.67405701 117.17816162]
[260.83438110 110.54083252]
[273.79504395 122.35203552]
[288.60189819 124.75143433]
[301.27273560 115.30548096]
[316.89935303 117.66844177]
[326.21081543 130.43841553]
[323.68276978 146.03919983]
[310.81506348 155.21513367]
[295.24188232 152.52229309]
[286.20251465 139.55828857]
[271.39566040 137.15888977]
[261.38397217 143.98410034]
[249.01097107 142.08406067]
[241.01075745 131.93983459]
[226.24908447 129.27653503]
[211.48741150 126.61323547]
[196.72575378 123.94993591]
[181.96408081 121.28663635]
[167.20240784 118.62333679]
[152.41755676 116.09189606]
[137.61070251 113.69249725]
[122.80385590 111.29310608]
[118.46902466 117.50557709]
[112.49748230 122.16670990]
[115.68595886 136.82391357]
[118.87443542 151.48112488]
[122.06291962 166.13832092]
[125.25139618 180.79551697]
[128.43988037 195.45272827]
[131.62835693 210.10992432]
[135.33795166 224.64399719]
[139.56394958 239.03637695]
[143.78993225 253.42877197]
[155.10177612 264.49011230]
[151.26358032 278.88168335]
[164.59846497 287.80133057]
[165.79531860 303.79968262]
[153.93601990 314.60415649]
[138.11799622 311.92648315]
[130.47549438 297.82073975]
[136.87118530 283.10766602]
[125.86161041 273.07577515]
[129.39753723 257.65475464]
[125.17154694 243.26237488]
[120.94555664 228.86997986]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 160]
[5 159]
[6 158]
[7 157]
[8 156]
[9 155]
[10 154]
[13 53]
[14 52]
[15 51]
[16 50]
[17 49]
[20 46]
[21 45]
[22 44]
[23 43]
[26 40]
[27 39]
[28 38]
[29 37]
[54 117]
[55 116]
[56 115]
[59 112]
[60 111]
[61 110]
[65 106]
[66 105]
[67 104]
[71 102]
[72 101]
[73 100]
[75 99]
[76 98]
[77 97]
[78 96]
[79 95]
[80 94]
[82 91]
[83 90]
[121 152]
[122 151]
[123 150]
[125 149]
[126 148]
[127 147]
[128 146]
[129 145]
[130 144]
[132 141]
[133 140]
[161 175]
[162 174]
[163 173]
[165 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
