%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:01:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCGCAACUGGGGAAGCUGGGAGGUAGGCGCGGGGCGGUCGGCUGCGGUGGCGGCGUUUGGAUGAUUGUCUCUCGGCGGCGGAGUCGCUCAAUGUACUUCUCCAGUUCCUACCCUUCCUCAAGUGGGGAACUCAGGAGACCAAGCAGGGGCAACUGUACUUCGG\
) } def
/len { sequence length } bind def

/coor [
[115.24769592 256.32565308]
[113.83042145 241.39274597]
[112.41313934 226.45985413]
[110.99586487 211.52696228]
[109.01451874 196.65840149]
[106.47194672 181.87545776]
[94.19673920 173.51754761]
[91.40761566 158.56175232]
[100.25740051 145.74305725]
[97.71482086 130.96011353]
[95.17224884 116.17717743]
[88.08565521 102.95672607]
[77.18226624 92.65545654]
[66.27888489 82.35418701]
[55.37549591 72.05291748]
[44.47211075 61.75165176]
[36.04543304 58.11077499]
[33.46219254 51.15077209]
[22.75570297 40.64501190]
[12.04921055 30.13924980]
[1.34271920 19.63348770]
[-9.46270370 9.22950649]
[-20.36609077 -1.07176352]
[-31.26947784 -11.37303352]
[-42.17286301 -21.67430305]
[-53.07625198 -31.97557259]
[-63.97963715 -42.27684402]
[-79.32447815 -46.12994385]
[-83.26223755 -60.49459839]
[-94.90537262 -57.84395981]
[-106.26052856 -61.12939835]
[-114.51983643 -69.41741180]
[-117.69982910 -80.55284119]
[-115.11693573 -91.71843719]
[-125.62270355 -102.42492676]
[-136.12846375 -113.13141632]
[-146.63423157 -123.83790588]
[-157.13998413 -134.54440308]
[-167.64575195 -145.25088501]
[-178.25234985 -155.85749817]
[-188.95884705 -166.36325073]
[-204.22802734 -170.50605774]
[-207.89323425 -184.94265747]
[-218.59973145 -195.44842529]
[-229.30621338 -205.95417786]
[-240.01271057 -216.45994568]
[-250.71919250 -226.96569824]
[-265.98837280 -231.10850525]
[-269.65359497 -245.54510498]
[-284.92276001 -249.68791199]
[-288.58798218 -264.12451172]
[-299.29446411 -274.63027954]
[-307.65072632 -278.42996216]
[-310.10180664 -285.43759155]
[-320.60757446 -296.14410400]
[-331.11334229 -306.85058594]
[-341.61907959 -317.55706787]
[-356.80712891 -321.98809814]
[-360.19848633 -336.49145508]
[-370.70425415 -347.19796753]
[-386.64013672 -351.06838989]
[-390.99591064 -366.87847900]
[-379.29074097 -378.36416626]
[-363.56591797 -373.70999146]
[-359.99777222 -357.70373535]
[-349.49200439 -346.99722290]
[-335.05538940 -343.33200073]
[-330.91259766 -328.06283569]
[-320.40682983 -317.35635376]
[-309.90106201 -306.64984131]
[-299.39532471 -295.94335938]
[-288.78869629 -285.33676147]
[-278.08221436 -274.83099365]
[-263.57882690 -271.43963623]
[-259.14782715 -256.25158691]
[-244.64445496 -252.86024475]
[-240.21343994 -237.67219543]
[-229.50694275 -227.16642761]
[-218.80046082 -216.66067505]
[-208.09396362 -206.15490723]
[-197.38746643 -195.64915466]
[-182.88409424 -192.25779724]
[-178.45307922 -177.06974792]
[-167.74658203 -166.56398010]
[-160.73895264 -164.11291504]
[-156.93925476 -155.75665283]
[-146.43350220 -145.05015564]
[-135.92773438 -134.34367371]
[-125.42197418 -123.63717651]
[-114.91620636 -112.93068695]
[-104.41044617 -102.22419739]
[-86.16133118 -103.18134308]
[-72.74723816 -90.30737305]
[-72.96096802 -71.39798737]
[-58.39600754 -68.28170013]
[-53.67836761 -53.18022919]
[-42.77498245 -42.87895966]
[-31.87159538 -32.57769012]
[-20.96820831 -22.27642059]
[-10.06482124 -11.97515011]
[0.83856589 -1.67388070]
[7.89133549 0.64413273]
[11.84848118 8.92699623]
[22.55497360 19.43275833]
[33.26146317 29.93852043]
[43.96795654 40.44428253]
[54.77338028 50.84826279]
[65.67676544 61.14953232]
[76.58015442 71.45080566]
[87.48354340 81.75207520]
[98.38692474 92.05334473]
[103.04100800 81.98377991]
[114.48917389 75.53528595]
[130.28540039 76.07456207]
[145.27465820 76.64218140]
[160.26390076 77.20980072]
[175.26390076 77.20980072]
[190.25315857 76.64218140]
[205.24241638 76.07456207]
[220.23167419 75.50693512]
[235.22093201 74.93931580]
[248.80691528 65.75492096]
[263.43347168 73.17086792]
[264.05401611 89.55827332]
[250.03022766 98.05917358]
[235.78855896 89.92857361]
[220.79930115 90.49619293]
[205.81004333 91.06381989]
[190.82078552 91.63143921]
[175.83152771 92.19905853]
[173.81694031 94.20818329]
[170.86776733 95.52204132]
[167.25152588 95.77400970]
[163.36575317 94.70358276]
[159.69628906 92.19905853]
[144.70703125 91.63143921]
[129.71777344 91.06381989]
[124.77713013 96.70651245]
[137.65930176 104.39087677]
[151.84025574 109.27970123]
[155.69427490 123.77613068]
[145.81352234 135.06199646]
[130.93486023 133.15798950]
[124.21446991 119.74617767]
[114.89583588 107.99190521]
[109.95519257 113.63459778]
[112.49776459 128.41754150]
[115.04033661 143.20048523]
[127.66436005 152.32582092]
[130.03230286 167.35404968]
[121.25489044 179.33288574]
[123.79746246 194.11582947]
[126.76473236 197.42231750]
[128.33906555 201.13265991]
[128.56697083 204.75048828]
[127.65417480 207.84736633]
[125.92875671 210.10968018]
[127.34603882 225.04258728]
[128.76332092 239.97547913]
[130.18058777 254.90837097]
[142.51997375 264.78335571]
[144.17950439 280.50027466]
[134.17462158 292.73455811]
[118.44103241 294.22781372]
[106.31320953 284.09414673]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 160]
[2 159]
[3 158]
[4 157]
[5 152]
[6 151]
[9 148]
[10 147]
[11 146]
[12 111]
[13 110]
[14 109]
[15 108]
[16 107]
[18 106]
[19 105]
[20 104]
[21 103]
[22 101]
[23 100]
[24 99]
[25 98]
[26 97]
[27 96]
[29 94]
[34 91]
[35 90]
[36 89]
[37 88]
[38 87]
[39 86]
[40 84]
[41 83]
[43 81]
[44 80]
[45 79]
[46 78]
[47 77]
[49 75]
[51 73]
[52 72]
[54 71]
[55 70]
[56 69]
[57 68]
[59 66]
[60 65]
[114 137]
[115 136]
[116 135]
[117 130]
[118 129]
[119 128]
[120 127]
[121 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
