%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:58:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAGUCUCUGAUCCGUGCAGGGUAUUAAUGUGUCAGGGCUGAGUGUUCUGAGAUUUAUCUAGAGGCUGGGAAGGGCUCCUGAACCAGUUGUUUCCGUCUUGUCGGUCUGUCAGGGUUGGAAAGUCCAAGCCAUAGGACCCAGUUUCCUUUCUUAGCUUACGUUAUCUACCAGAGCACCGUGGGCUGUUACUUGCCUUGAGUUGGAAGCGGUUCGCAUUUAUACCGGAAUAUAAAUAGUUUCUGGAAAGGACACU\
GACAACUUCAAAGCAAA\
) } def
/len { sequence length } bind def

/coor [
[571.68609619 575.82427979]
[559.44018555 567.16186523]
[547.19427490 558.49938965]
[534.94842529 549.83691406]
[522.70251465 541.17443848]
[510.45663452 532.51196289]
[498.21075439 523.84954834]
[485.96487427 515.18707275]
[471.10614014 514.15374756]
[464.30807495 499.86752319]
[452.06216431 491.20507812]
[449.31192017 491.52078247]
[446.27285767 490.78640747]
[443.33709717 488.88735962]
[440.93066406 485.85043335]
[439.46456909 481.85150146]
[427.63024902 472.63473511]
[415.79592896 463.41796875]
[403.96160889 454.20117188]
[387.35806274 456.97946167]
[373.62258911 446.67224121]
[371.56982422 429.28195190]
[359.63024902 420.20196533]
[347.69064331 411.12197876]
[335.75103760 402.04199219]
[318.23403931 400.74926758]
[311.29199219 383.67541504]
[299.24871826 374.73342896]
[287.20541382 365.79144287]
[275.16213989 356.84945679]
[263.11883545 347.90747070]
[251.07554626 338.96548462]
[247.58837891 349.45080566]
[240.77435303 358.70425415]
[228.23677063 366.93887329]
[215.69918823 375.17349243]
[203.16160583 383.40811157]
[190.62402344 391.64273071]
[178.08644104 399.87738037]
[165.54885864 408.11199951]
[160.89973450 423.46664429]
[145.94357300 429.27117920]
[132.15345764 421.07287598]
[130.10798645 405.16076660]
[141.37625122 393.74124146]
[157.31423950 395.57440186]
[169.85182190 387.33978271]
[182.38940430 379.10516357]
[194.92698669 370.87054443]
[207.46456909 362.63592529]
[220.00215149 354.40130615]
[232.53973389 346.16668701]
[217.58908081 347.38238525]
[204.78665161 355.19891357]
[189.79397583 355.66738892]
[176.52850342 348.66546631]
[168.45639038 336.02264404]
[167.68679810 321.04238892]
[174.42085266 307.63894653]
[186.89895630 299.31448364]
[201.86071777 298.24411011]
[215.39675903 304.70755005]
[223.97050476 317.01672363]
[237.16708374 324.14764404]
[229.00474548 311.56289673]
[220.84239197 298.97811890]
[212.68005371 286.39337158]
[204.51770020 273.80862427]
[196.35536194 261.22387695]
[188.19300842 248.63909912]
[180.03067017 236.05435181]
[171.86831665 223.46958923]
[163.70597839 210.88484192]
[155.54362488 198.30007935]
[147.38128662 185.71531677]
[139.21893311 173.13056946]
[124.36042023 172.52845764]
[112.56606293 163.18196106]
[108.48916626 148.51115417]
[113.89510345 134.08610535]
[105.73275757 121.50135803]
[97.57041168 108.91659546]
[82.07262421 122.51574707]
[57.40993881 122.82438660]
[44.87235260 114.58975983]
[29.09004974 113.48095703]
[22.69968224 100.02686310]
[10.16209793 91.79224396]
[-5.62020540 90.68343353]
[-12.01057243 77.22934723]
[-24.54815674 68.99472809]
[-40.94236755 68.59236908]
[-48.55237579 54.06585312]
[-39.54965973 40.35880661]
[-23.19544029 41.57186890]
[-16.31353569 56.45714569]
[-3.77595210 64.69176483]
[11.10958004 65.21157837]
[18.39671898 79.25466156]
[30.93430328 87.48928070]
[45.81983566 88.00909424]
[53.10697556 102.05217743]
[65.64456177 110.28679657]
[71.58813477 105.71253204]
[89.41886139 91.98973846]
[84.66884613 77.76169586]
[79.91882324 63.53364563]
[75.16880798 49.30559921]
[70.41878510 35.07755280]
[57.02269745 31.92170334]
[47.00820541 22.63945580]
[42.91164398 9.72716904]
[45.69850922 -3.41911197]
[54.53840637 -13.39674473]
[49.95243073 -27.67851067]
[38.36645508 -38.45235825]
[41.84214401 -52.93575668]
[37.25616837 -67.21752167]
[32.67018890 -81.49929047]
[28.08421326 -95.78105164]
[23.49823570 -110.06282043]
[12.89888191 -123.29497528]
[22.67972946 -137.14312744]
[38.69430161 -131.57807922]
[37.77999878 -114.64879608]
[42.36597824 -100.36702728]
[46.95195389 -86.08526611]
[51.53793335 -71.80349731]
[56.12390900 -57.52173615]
[67.38185883 -47.76941299]
[64.23419189 -32.26448822]
[68.82017517 -17.98272324]
[84.58502960 -13.34582806]
[94.56896973 -0.08497629]
[94.66893005 16.68023872]
[84.64682770 30.32753372]
[89.39685059 44.55558014]
[94.14687347 58.78362656]
[98.89688873 73.01167297]
[103.64691162 87.23972321]
[110.15516663 100.75424957]
[118.31751251 113.33901215]
[126.47985840 125.92376709]
[141.85551453 126.87008667]
[153.58856201 136.57518005]
[157.31304932 151.15571594]
[151.80369568 164.96821594]
[159.96603394 177.55297852]
[168.12838745 190.13772583]
[176.29072571 202.72248840]
[184.45307922 215.30725098]
[192.61541748 227.89199829]
[200.77777100 240.47676086]
[208.94010925 253.06152344]
[217.10246277 265.64627075]
[225.26480103 278.23101807]
[233.42715454 290.81579590]
[241.58949280 303.40054321]
[249.75184631 315.98529053]
[260.01754761 326.92218018]
[272.06082153 335.86419678]
[284.10412598 344.80618286]
[296.14739990 353.74816895]
[308.19070435 362.69015503]
[320.23397827 371.63214111]
[333.05978394 370.51910400]
[342.90032959 378.18438721]
[344.83102417 390.10241699]
[356.77062988 399.18240356]
[368.71023560 408.26239014]
[380.64981079 417.34234619]
[393.67565918 414.00381470]
[406.06924438 418.69723511]
[413.39785767 429.50494385]
[413.17840576 442.36688232]
[425.01272583 451.58364868]
[436.84704590 460.80041504]
[448.68133545 470.01718140]
[460.72463989 478.95916748]
[472.97052002 487.62164307]
[488.70516968 489.27453613]
[494.62731934 502.94119263]
[506.87322998 511.60363770]
[519.11907959 520.26611328]
[531.36499023 528.92858887]
[543.61090088 537.59100342]
[555.85675049 546.25347900]
[568.10266113 554.91595459]
[580.34851074 563.57843018]
[595.72912598 561.11352539]
[608.02478027 570.07293701]
[610.27990723 584.75115967]
[622.52575684 593.41363525]
[634.77166748 602.07611084]
[647.01751709 610.73858643]
[662.75219727 612.39147949]
[668.67431641 626.05810547]
[680.92022705 634.72058105]
[693.16613770 643.38305664]
[705.41198730 652.04547119]
[717.70751953 660.63732910]
[730.05230713 669.15832520]
[742.39703369 677.67932129]
[754.74182129 686.20025635]
[770.09301758 683.55853271]
[782.49096680 692.37591553]
[784.91479492 707.02716064]
[797.25958252 715.54815674]
[810.03930664 713.99310303]
[820.13854980 721.31414795]
[822.47949219 733.15844727]
[834.72534180 741.82092285]
[846.97125244 750.48333740]
[859.21716309 759.14581299]
[866.87652588 754.10278320]
[875.59606934 751.33856201]
[884.71533203 751.04925537]
[893.54724121 753.24395752]
[901.42974854 757.74511719]
[907.77563477 764.20269775]
[912.11614990 772.12152100]
[914.13549805 780.89929199]
[913.69403076 789.87213135]
[910.83770752 798.36505127]
[922.45678711 807.85168457]
[934.07586670 817.33837891]
[945.69494629 826.82507324]
[957.31402588 836.31176758]
[968.93310547 845.79846191]
[983.26525879 840.27716064]
[998.43542480 842.67749023]
[1010.36285400 852.35382080]
[1015.83923340 866.70324707]
[1013.39129639 881.86578369]
[1003.67767334 893.76287842]
[989.31115723 899.19421387]
[974.15637207 896.69879150]
[962.28979492 886.94787598]
[956.90350342 872.56445312]
[959.44641113 857.41748047]
[947.82733154 847.93084717]
[936.20825195 838.44415283]
[924.58917236 828.95745850]
[912.97009277 819.47076416]
[901.35101318 809.98413086]
[881.52404785 816.92694092]
[861.43243408 810.33898926]
[849.41162109 792.77856445]
[850.55468750 771.39172363]
[838.30877686 762.72924805]
[826.06292725 754.06677246]
[813.81701660 745.40429688]
[796.26580811 744.71697998]
[788.73858643 727.89294434]
[776.39385986 719.37194824]
[761.83514404 722.30102539]
[749.19439697 713.83538818]
[746.22082520 698.54504395]
[733.87609863 690.02404785]
[721.53131104 681.50305176]
[709.18658447 672.98211670]
[701.92364502 671.77319336]
[696.74951172 664.29138184]
[684.50366211 655.62890625]
[672.25775146 646.96643066]
[660.01190186 638.30401611]
[645.15313721 637.27069092]
[638.35510254 622.98443604]
[626.10919189 614.32202148]
[613.86328125 605.65954590]
[601.61743164 596.99707031]
[587.02593994 599.75842285]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 189]
[2 188]
[3 187]
[4 186]
[5 185]
[6 184]
[7 183]
[8 182]
[10 180]
[11 179]
[16 178]
[17 177]
[18 176]
[19 175]
[22 171]
[23 170]
[24 169]
[25 168]
[27 165]
[28 164]
[29 163]
[30 162]
[31 161]
[32 160]
[34 52]
[35 51]
[36 50]
[37 49]
[38 48]
[39 47]
[40 46]
[64 159]
[65 158]
[66 157]
[67 156]
[68 155]
[69 154]
[70 153]
[71 152]
[72 151]
[73 150]
[74 149]
[75 148]
[76 147]
[80 143]
[81 142]
[82 141]
[84 103]
[85 102]
[87 100]
[88 99]
[90 97]
[91 96]
[105 140]
[106 139]
[107 138]
[108 137]
[109 136]
[114 132]
[115 131]
[117 129]
[118 128]
[119 127]
[120 126]
[121 125]
[192 271]
[193 270]
[194 269]
[195 268]
[197 266]
[198 265]
[199 264]
[200 263]
[201 261]
[202 260]
[203 259]
[204 258]
[207 255]
[208 254]
[211 252]
[212 251]
[213 250]
[214 249]
[224 245]
[225 244]
[226 243]
[227 242]
[228 241]
[229 240]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
