%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:12:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAGGACUGAGGGCGAUGGCUGCUGUGGCCGUGGCUGUUCGCGAGGGUGAGUGAAGAGCCGGGCCUGCCUACUGGUACGCGGAGCCGACGAGCUCCGGACAGCUAGUGCCGGGCCUUGAGCGCCUUUGGGCCCCGCCGCUCCGUUCCAGCGCCACGCUGGGCUCCGGUCUACACAGUCUCGAGCGCAGUCCCGCGCCGCGCACCGGCUGGUUGCUGUGAGGAGGACUCGGGAUCCGGG\
) } def
/len { sequence length } bind def

/coor [
[399.19729614 205.66654968]
[395.61688232 199.23393250]
[393.86721802 192.51205444]
[393.87072754 185.98048401]
[395.43218994 180.06361389]
[381.62161255 174.20970154]
[367.81106567 168.35578918]
[353.07342529 170.51261902]
[343.38711548 158.00318909]
[329.57653809 152.14927673]
[315.76599121 146.29536438]
[301.91723633 140.53234863]
[288.03091431 134.86047363]
[274.14459229 129.18861389]
[260.25827026 123.51673889]
[251.97834778 130.80632019]
[239.54701233 130.33468628]
[229.83468628 120.45720673]
[214.92820740 118.78473663]
[200.02174377 117.11226654]
[181.87585449 126.96623993]
[164.87533569 113.90046692]
[149.91452026 112.81697083]
[134.95370483 111.73346710]
[119.99288940 110.64997101]
[105.03207397 109.56647491]
[90.18859863 111.72781372]
[76.15798950 117.03269958]
[62.12737274 122.33758545]
[48.09675598 127.64247894]
[41.19252777 133.59341431]
[33.84669876 132.92355347]
[19.74756622 138.04356384]
[5.64843321 143.16357422]
[-8.45069885 148.28358459]
[-22.54983139 153.40357971]
[-32.88019180 165.38667297]
[-47.48409271 162.45829773]
[-61.58322525 167.57830811]
[-75.68235779 172.69831848]
[-89.78148651 177.81832886]
[-103.88062286 182.93832397]
[-108.03901672 197.88781738]
[-120.21122742 207.51159668]
[-135.71679688 208.10908508]
[-148.59350586 199.45057678]
[-153.89001465 184.86543274]
[-149.56968689 169.96192932]
[-137.29379272 160.47076416]
[-121.78266144 160.04150391]
[-109.00062561 168.83920288]
[-94.90149689 163.71919250]
[-80.80236816 158.59918213]
[-66.70323181 153.47917175]
[-52.60409927 148.35916138]
[-43.28220367 136.74230957]
[-27.66983795 139.30445862]
[-13.57070637 134.18444824]
[0.52842587 129.06443787]
[14.62755775 123.94443512]
[28.72669029 118.82442474]
[42.79186630 113.61186218]
[56.82248306 108.30697632]
[70.85309601 103.00208282]
[84.88371277 97.69719696]
[84.48941803 82.70237732]
[70.19939423 78.14219666]
[55.90937042 73.58201599]
[41.61934662 69.02182770]
[25.72071266 73.04245758]
[14.48499393 61.09713745]
[19.47053528 45.47419357]
[35.54863739 42.24516678]
[46.17953110 54.73180771]
[60.46955490 59.29199219]
[74.75957489 63.85217285]
[89.04959869 68.41235352]
[92.85636902 61.95027542]
[100.46991730 49.02611923]
[104.27669525 42.56403732]
[93.36107635 32.27572632]
[82.44546509 21.98741531]
[71.52984619 11.69910240]
[60.61423492 1.41079128]
[49.69861984 -8.87752056]
[33.91064072 -8.15970135]
[22.29577446 -18.87746429]
[21.74491501 -34.67214966]
[32.58487701 -46.17305374]
[48.38450623 -46.55688858]
[59.77015686 -35.59593582]
[59.98693085 -19.79313469]
[70.90254211 -9.50482368]
[81.81816101 0.78348815]
[92.73377228 11.07180023]
[103.64939117 21.36011124]
[114.56500244 31.64842224]
[119.69123077 66.31246948]
[106.11557007 94.60565948]
[121.07638550 95.68915558]
[136.03720093 96.77265167]
[150.99801636 97.85614777]
[165.95883179 98.93964386]
[172.18312073 91.90207672]
[180.81523132 88.55638123]
[189.88336182 89.53165436]
[197.37734985 94.48498535]
[201.69421387 102.20579529]
[216.60067749 103.87826538]
[231.50715637 105.55073547]
[243.01188660 95.92571259]
[243.99703979 80.95809937]
[244.98217773 65.99048615]
[245.96733093 51.02286911]
[246.95246887 36.05525589]
[247.93762207 21.08763885]
[241.12336731 6.80910444]
[249.67984009 -5.38253117]
[250.66499329 -20.35014534]
[251.65013123 -35.31776047]
[246.65710449 -51.51979828]
[260.84375000 -60.80286789]
[273.69128418 -49.74044800]
[266.61773682 -34.33261490]
[265.63259888 -19.36499977]
[264.64746094 -4.39738512]
[271.53216553 8.81056595]
[262.90524292 22.07278633]
[261.92007446 37.04040146]
[260.93493652 52.00801468]
[259.94979858 66.97563171]
[258.96466064 81.94324493]
[257.97949219 96.91085815]
[265.93014526 109.63041687]
[279.81646729 115.30229187]
[293.70278931 120.97415924]
[307.58911133 126.64603424]
[316.69750977 126.99115753]
[321.61990356 132.48480225]
[335.43045044 138.33871460]
[349.24102783 144.19261169]
[364.96646118 142.45451355]
[373.66494751 154.54522705]
[387.47552490 160.39913940]
[401.28610229 166.25305176]
[416.12957764 164.09172058]
[427.69732666 154.54251099]
[439.26504517 144.99331665]
[450.83279419 135.44410706]
[462.40054321 125.89491272]
[473.96829224 116.34571075]
[482.33398438 101.59947205]
[498.81979370 105.55606079]
[499.58154297 122.49288940]
[483.51748657 127.91345978]
[471.94973755 137.46266174]
[460.38201904 147.01185608]
[448.81427002 156.56106567]
[437.24652100 166.11026001]
[425.67877197 175.65945435]
[426.17132568 183.14326477]
[439.62625122 189.77388000]
[427.15649414 198.11088562]
[427.64904785 205.59469604]
[440.36862183 213.54533386]
[453.08816528 221.49598694]
[465.80773926 229.44662476]
[478.57928467 237.31350708]
[491.40225220 245.09628296]
[504.22521973 252.87904358]
[514.98107910 247.86819458]
[526.70074463 248.65455627]
[536.48907471 254.92819214]
[541.98388672 265.03799438]
[541.92535400 276.42465210]
[554.53930664 284.54180908]
[567.15325928 292.65896606]
[579.76721191 300.77609253]
[592.38116455 308.89324951]
[606.02709961 301.98410034]
[621.19897461 302.82736206]
[633.82775879 311.09655762]
[640.57672119 324.48715210]
[639.72271729 339.35778809]
[652.33666992 347.47494507]
[664.95062256 355.59210205]
[677.56457520 363.70925903]
[690.17852783 371.82638550]
[702.79248047 379.94354248]
[721.20947266 380.41201782]
[728.61053467 396.33291626]
[741.33007812 404.28356934]
[754.04962158 412.23422241]
[762.96667480 414.12322998]
[766.88317871 420.37390137]
[779.49713135 428.49105835]
[792.11108398 436.60821533]
[804.72503662 444.72534180]
[820.64520264 442.74340820]
[832.01965332 454.05715942]
[830.12292480 469.98770142]
[816.40997314 478.31445312]
[801.40020752 472.64987183]
[796.60791016 457.33929443]
[783.99395752 449.22216797]
[771.38000488 441.10501099]
[758.76605225 432.98785400]
[746.09899902 424.95379639]
[733.37945557 417.00314331]
[720.65985107 409.05249023]
[708.81878662 411.46633911]
[698.16131592 404.96270752]
[694.67529297 392.55749512]
[682.06134033 384.44033813]
[669.44738770 376.32321167]
[656.83343506 368.20605469]
[644.21948242 360.08889771]
[631.60552979 351.97174072]
[618.42517090 358.91033936]
[603.44177246 358.31600952]
[590.68328857 350.24835205]
[583.62969971 336.78939819]
[584.26403809 321.50720215]
[571.65008545 313.39007568]
[559.03613281 305.27291870]
[546.42211914 297.15576172]
[533.80816650 289.03860474]
[516.16735840 293.98019409]
[500.25360107 284.27481079]
[496.44244385 265.70202637]
[483.61947632 257.91925049]
[470.79650879 250.13647461]
[463.46179199 249.35433960]
[457.85708618 242.16618347]
[445.13754272 234.21554565]
[432.41796875 226.26489258]
[419.69842529 218.31425476]
[411.49597168 215.66957092]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 145]
[6 144]
[7 143]
[9 141]
[10 140]
[11 139]
[12 137]
[13 136]
[14 135]
[15 134]
[18 110]
[19 109]
[20 108]
[22 103]
[23 102]
[24 101]
[25 100]
[26 99]
[27 65]
[28 64]
[29 63]
[30 62]
[32 61]
[33 60]
[34 59]
[35 58]
[36 57]
[38 55]
[39 54]
[40 53]
[41 52]
[42 51]
[66 77]
[67 76]
[68 75]
[69 74]
[80 97]
[81 96]
[82 95]
[83 94]
[84 93]
[85 92]
[111 133]
[112 132]
[113 131]
[114 130]
[115 129]
[116 128]
[118 126]
[119 125]
[120 124]
[146 160]
[147 159]
[148 158]
[149 157]
[150 156]
[151 155]
[164 237]
[165 236]
[166 235]
[167 234]
[168 232]
[169 231]
[170 230]
[175 227]
[176 226]
[177 225]
[178 224]
[179 223]
[184 218]
[185 217]
[186 216]
[187 215]
[188 214]
[189 213]
[191 210]
[192 209]
[193 208]
[195 207]
[196 206]
[197 205]
[198 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
