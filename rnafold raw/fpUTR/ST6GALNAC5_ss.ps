%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:03:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCUUUAGGACCCAGCAGGCGGCGGCAGGCGGCAGUUGUGUAGAUCGCUGAGAGACUACGAGGGUCCGGUUCAGUUUUAAUUCUGUCUCUAAUCUCUGCAACAGCCGCGCUUCCCGGGUCCCGCGGCUCCCGCGCGCGAUCUGCCGCGGCCGGCUGCUGGGCAAAAAUCAGAGCCGCCUCCGCCCCAUUACCCAUCAUGGAAACCCUCCAGGAAAAAGUGGCCCCGGACGCGCGAGCCUGAGGAUUCUGCACAAA\
AGAGGUGCCCAAA\
) } def
/len { sequence length } bind def

/coor [
[364.29190063 358.85385132]
[360.31100464 344.39175415]
[356.33010864 329.92962646]
[352.34921265 315.46752930]
[348.36831665 301.00543213]
[344.38739014 286.54333496]
[340.40649414 272.08123779]
[336.42559814 257.61911011]
[332.44470215 243.15701294]
[305.52862549 231.65380859]
[298.06930542 202.96601868]
[284.48498535 196.60470581]
[270.90066528 190.24339294]
[257.31634521 183.88208008]
[243.73204041 177.52075195]
[230.14772034 171.15943909]
[216.56341553 164.79812622]
[202.97909546 158.43681335]
[188.17170715 160.04638672]
[178.95527649 147.18684387]
[165.37097168 140.82553101]
[151.78665161 134.46420288]
[138.20233154 128.10289001]
[123.39495087 129.71247864]
[114.17852020 116.85292816]
[100.59420013 110.49160767]
[86.02204895 106.93459320]
[71.03458405 106.32162476]
[56.04378510 105.79618835]
[41.05017853 105.35829926]
[26.05657196 104.92040253]
[11.06296539 104.48251343]
[-3.93064189 104.04462433]
[-17.95080566 111.37575531]
[-30.44677925 103.27021027]
[-45.44038773 102.83232117]
[-60.43399429 102.39442444]
[-75.42760468 101.95653534]
[-90.42121124 101.51863861]
[-105.41481781 101.08074951]
[-119.43498230 108.41188812]
[-131.93095398 100.30633545]
[-146.92456055 99.86844635]
[-161.91816711 99.43055725]
[-176.91177368 98.99266052]
[-183.77922058 108.64572906]
[-194.33822632 113.74773407]
[-205.92977905 113.14178467]
[-215.69583130 107.09259796]
[-221.28393555 97.19277191]
[-236.26322937 96.40481567]
[-251.24252319 95.61685944]
[-266.22180176 94.82890320]
[-281.19625854 95.70431519]
[-295.98168945 98.23233032]
[-310.76712036 100.76033783]
[-325.55255127 103.28835297]
[-335.95880127 115.49858093]
[-351.98797607 114.83162689]
[-361.34390259 101.79911041]
[-356.84948730 86.39846802]
[-341.95245361 80.44375610]
[-328.08056641 88.50291443]
[-313.29513550 85.97489929]
[-298.50970459 83.44689178]
[-283.72424316 80.91887665]
[-283.37402344 73.42706299]
[-298.35766602 72.72658539]
[-310.98379517 64.62840271]
[-297.65719604 57.74295044]
[-282.67355347 58.44342422]
[-282.32330322 50.95160675]
[-296.80841064 47.05522156]
[-311.29351807 43.15883636]
[-323.27694702 53.01667786]
[-338.76803589 53.91454697]
[-351.81011963 45.50719452]
[-357.38827515 31.02742004]
[-353.35757446 16.04299164]
[-341.26791382 6.31572866]
[-325.76800537 5.58596087]
[-312.81787109 14.13430023]
[-307.39712524 28.67373466]
[-292.91201782 32.57011795]
[-278.42694092 36.46650314]
[-265.43386841 79.84961700]
[-250.45455933 80.63756561]
[-235.47528076 81.42552185]
[-220.49598694 82.21347809]
[-207.61663818 69.16896057]
[-188.97323608 69.72639465]
[-176.47387695 83.99905396]
[-161.48027039 84.43695068]
[-146.48666382 84.87483978]
[-131.49305725 85.31272888]
[-118.54534149 77.95027161]
[-104.97692108 86.08714294]
[-89.98331451 86.52503204]
[-74.98970795 86.96292877]
[-59.99610138 87.40081787]
[-45.00249481 87.83871460]
[-30.00888824 88.27660370]
[-17.06116676 80.91414642]
[-3.49274969 89.05101013]
[11.50085735 89.48890686]
[26.49446487 89.92679596]
[41.48807144 90.36469269]
[56.48167801 90.80258179]
[63.23551941 87.86693573]
[71.64754486 91.33415985]
[86.63501740 91.94712067]
[91.70104218 86.41671753]
[87.18784332 72.11179352]
[101.83310699 75.35591888]
[106.89913177 69.82551575]
[104.97743225 54.94912338]
[103.05572510 40.07273102]
[101.13402557 25.19633675]
[99.21231842 10.31994438]
[97.29061890 -4.55644846]
[95.28208160 -19.42136574]
[93.10007477 -34.26181412]
[90.83145142 -49.08926392]
[88.56282806 -63.91671753]
[86.29420471 -78.74417114]
[84.02558136 -93.57162476]
[75.65325928 -108.31409454]
[87.50189972 -120.44034576]
[102.43428802 -112.41163635]
[98.85303497 -95.84024811]
[101.12165833 -81.01279449]
[103.39028168 -66.18534088]
[105.65890503 -51.35788727]
[107.92752838 -36.53043747]
[112.03113556 -30.41546822]
[110.13501740 -21.51667213]
[114.16692352 -15.35419655]
[112.16701508 -6.47815180]
[114.08871460 8.39824104]
[116.01041412 23.27463341]
[117.93212128 38.15102768]
[119.85382080 53.02742004]
[121.77552795 67.90380859]
[120.00048065 79.84478760]
[114.81985474 89.77787018]
[106.95552063 96.90729523]
[120.53983307 103.26860809]
[136.31886292 102.11402893]
[144.56364441 114.51857758]
[158.14796448 120.87989044]
[171.73228455 127.24121094]
[185.31660461 133.60252380]
[201.09562683 132.44795227]
[209.34040833 144.85249329]
[222.92472839 151.21380615]
[236.50904846 157.57511902]
[250.09335327 163.93644714]
[263.67767334 170.29776001]
[277.26199341 176.65907288]
[290.84631348 183.02038574]
[304.43063354 189.38171387]
[308.88461304 184.76307678]
[314.11999512 181.07661438]
[319.94534302 178.45094299]
[326.14889526 176.97602844]
[332.50607300 176.70007324]
[338.78775024 177.62802124]
[344.76849365 179.72146606]
[350.23464966 182.90029907]
[354.99185181 187.04570007]
[358.87216187 192.00463867]
[361.73980713 197.59545898]
[363.49597168 203.61453247]
[378.48959351 204.05242920]
[387.12371826 201.18269348]
[393.65545654 204.58399963]
[408.64291382 205.19697571]
[422.74774170 198.03005981]
[435.14819336 206.28099060]
[450.13568115 206.89396667]
[465.12313843 207.50692749]
[480.11062622 208.11988831]
[492.77514648 196.02799988]
[509.92785645 196.83840942]
[520.95257568 209.55946350]
[535.94616699 209.99734497]
[550.93975830 210.43524170]
[565.93341064 210.87313843]
[580.92700195 211.31101990]
[587.17211914 200.52836609]
[597.34185791 193.45359802]
[609.48126221 191.37232971]
[621.28790283 194.61730957]
[630.54882812 202.51693726]
[635.55499268 213.53317261]
[650.53430176 214.32112122]
[664.72186279 207.31942749]
[677.02514648 215.71461487]
[692.00439453 216.50257874]
[706.98370361 217.29052734]
[721.96301270 218.07847595]
[734.80133057 208.45782471]
[750.29071045 212.63613892]
[756.54901123 227.40817261]
[748.77545166 241.44209290]
[732.93316650 243.97227478]
[721.17504883 233.05776978]
[706.19573975 232.26982117]
[691.21643066 231.48185730]
[676.23718262 230.69390869]
[663.12103271 237.75195312]
[649.74633789 229.30041504]
[634.76708984 228.51245117]
[624.27056885 242.74851990]
[607.17126465 247.85331726]
[590.29248047 241.59182739]
[580.48913574 226.30462646]
[565.49548340 225.86674500]
[550.50189209 225.42884827]
[535.50830078 224.99095154]
[520.51470947 224.55307007]
[512.48706055 234.60601807]
[499.95083618 238.26487732]
[487.40798950 233.98280334]
[479.49765015 223.10736084]
[464.51019287 222.49440002]
[449.52270508 221.88143921]
[434.53524780 221.26846313]
[421.50241089 228.47921753]
[408.02996826 220.18443298]
[393.04248047 219.57147217]
[378.05169678 219.04603577]
[363.05807495 218.60813904]
[360.69268799 224.88804626]
[357.10614014 230.55979919]
[352.44665527 235.38902283]
[346.90679932 239.17611694]
[350.88769531 253.63821411]
[354.86859131 268.10031128]
[358.84951782 282.56243896]
[362.83041382 297.02453613]
[366.81130981 311.48663330]
[370.79220581 325.94873047]
[374.77310181 340.41082764]
[378.75402832 354.87295532]
[396.96520996 360.88101196]
[407.75521851 376.55126953]
[406.88522339 395.40612793]
[394.89129639 409.78442383]
[399.37634277 424.09820557]
[403.86138916 438.41198730]
[408.34646606 452.72576904]
[422.85156250 458.56835938]
[430.16192627 472.39196777]
[426.82583618 487.66955566]
[414.41845703 497.18746948]
[398.79818726 496.45169067]
[387.34045410 485.80957031]
[385.45523071 470.28604126]
[394.03268433 457.21081543]
[389.54760742 442.89703369]
[385.06256104 428.58325195]
[380.57751465 414.26950073]
[369.58047485 412.78463745]
[359.87924194 407.29244995]
[352.88342285 398.54714966]
[349.62567139 387.77874756]
[350.60946655 376.52008057]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 245]
[2 244]
[3 243]
[4 242]
[5 241]
[6 240]
[7 239]
[8 238]
[9 237]
[11 161]
[12 160]
[13 159]
[14 158]
[15 157]
[16 156]
[17 155]
[18 154]
[20 152]
[21 151]
[22 150]
[23 149]
[25 147]
[26 146]
[27 111]
[28 110]
[29 108]
[30 107]
[31 106]
[32 105]
[33 104]
[35 102]
[36 101]
[37 100]
[38 99]
[39 98]
[40 97]
[42 95]
[43 94]
[44 93]
[45 92]
[50 89]
[51 88]
[52 87]
[53 86]
[54 66]
[55 65]
[56 64]
[57 63]
[72 85]
[73 84]
[74 83]
[115 143]
[116 142]
[117 141]
[118 140]
[119 139]
[120 138]
[121 136]
[122 134]
[123 133]
[124 132]
[125 131]
[126 130]
[173 233]
[174 232]
[176 231]
[177 230]
[179 228]
[180 227]
[181 226]
[182 225]
[185 221]
[186 220]
[187 219]
[188 218]
[189 217]
[195 213]
[196 212]
[198 210]
[199 209]
[200 208]
[201 207]
[249 263]
[250 262]
[251 261]
[252 260]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
