%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:17:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCCGCUGCCCGCCGGCUGGGAGGAGGCGCGAGACUACGACGGUCGCGUCUUUUACAUUGACCACAACACGCGCCAGACGUCGUGGAUCGACCCCCGCGACCGGAUAACAAAGCCAUUGACCUUUGCCGAUUGUGUUGGGGACGAACUUCCUUUAGGAUGGGAAACCGUAUAUGAUAAACAAAUUGGAGUUUAUUAC\
) } def
/len { sequence length } bind def

/coor [
[184.46449280 420.12673950]
[190.80879211 408.23880005]
[184.82333374 394.48474121]
[178.83787537 380.73068237]
[166.66468811 372.14797974]
[168.25262451 356.40667725]
[153.69458008 353.37332153]
[143.59474182 342.21725464]
[141.98176575 327.07620239]
[149.68261719 313.73443604]
[143.69715881 299.98034668]
[137.71170044 286.22628784]
[131.72624207 272.47222900]
[125.63240814 258.76583862]
[119.43057251 245.10797119]
[104.59329224 243.79615784]
[92.32314301 235.17645264]
[85.97301483 221.48184204]
[87.33915710 206.34809875]
[96.15441132 193.84855652]
[89.95256805 180.19068909]
[83.75073242 166.53282166]
[77.54889679 152.87496948]
[71.34706116 139.21710205]
[57.54617691 133.34039307]
[43.40195084 138.33447266]
[29.25772285 143.32855225]
[15.11349583 148.32263184]
[0.96926820 153.31671143]
[-13.17495918 158.31079102]
[-27.31918716 163.30487061]
[-41.46341324 168.29895020]
[-55.60764313 173.29302979]
[-57.73942566 188.44935608]
[-66.67993164 200.87214661]
[-80.37470245 207.70675659]
[-95.67678070 207.38262939]
[-109.06985474 199.97424316]
[-117.47630310 187.18400574]
[-118.96437073 171.95100403]
[-113.19212341 157.77568054]
[-101.48598480 147.91542053]
[-86.53592682 144.63603210]
[-71.77736664 148.69110107]
[-60.60172272 159.14880371]
[-46.45749283 154.15472412]
[-32.31326675 149.16064453]
[-18.16903877 144.16656494]
[-4.02481127 139.17248535]
[10.11941624 134.17840576]
[24.26364326 129.18432617]
[38.40787125 124.19024658]
[52.55209732 119.19616699]
[54.25396729 111.89181519]
[39.44695282 109.49342346]
[24.63993645 107.09503937]
[9.64795876 106.60451508]
[4.36258602 92.56653595]
[15.30836010 82.31031799]
[28.97324181 88.49667358]
[43.31547546 92.88988495]
[57.65771103 97.28309631]
[59.35958099 89.97873688]
[48.87930298 79.24729919]
[38.39902878 68.51586151]
[27.91875076 57.78442001]
[17.04088402 58.28402328]
[7.87528372 52.82208252]
[3.32948065 43.41267776]
[4.68935490 33.27321625]
[-5.44692278 22.21627808]
[-15.58320045 11.15934086]
[-25.80643845 0.18275714]
[-41.66937637 -3.97647357]
[-45.73727798 -19.86307907]
[-33.82543564 -31.13428116]
[-18.18772888 -26.19523239]
[-14.91089249 -10.12680531]
[-8.02333832 -7.42630243]
[-4.52626276 1.02306342]
[5.61001492 12.08000088]
[15.74629307 23.13693810]
[34.56129837 27.57129097]
[38.65018845 47.30414581]
[49.13046646 58.03558350]
[59.61074448 68.76702118]
[70.09101868 79.49845886]
[89.37996674 72.17343140]
[105.55645752 77.36445618]
[113.62981415 64.72242737]
[121.70317078 52.08040237]
[122.60974121 36.28519058]
[135.98088074 29.72302055]
[144.05422974 17.08099365]
[152.12759399 4.43896437]
[160.20095825 -8.20306396]
[168.07373047 -20.97096443]
[175.74397278 -33.86155701]
[183.41421509 -46.75214767]
[191.08447266 -59.64273834]
[198.75471497 -72.53333282]
[199.16220093 -88.34928894]
[212.31950378 -95.33029175]
[219.98974609 -108.22088623]
[227.66000366 -121.11148071]
[227.56022644 -125.47467804]
[228.74067688 -129.25888062]
[230.86048889 -132.13162231]
[233.50567627 -133.90594482]
[236.24308777 -134.55168152]
[244.71151733 -146.93255615]
[253.17993164 -159.31341553]
[261.64834595 -171.69427490]
[270.11679077 -184.07513428]
[264.77774048 -198.64477539]
[269.05453491 -213.56082153]
[281.30267334 -223.08776855]
[296.81250000 -223.56230164]
[309.62014771 -214.80195618]
[314.80084229 -200.17526245]
[310.36245728 -185.30648804]
[298.01168823 -175.91296387]
[282.49765015 -175.60671997]
[274.02923584 -163.22584534]
[265.56079102 -150.84498596]
[257.09237671 -138.46412659]
[248.62394714 -126.08325958]
[240.55058289 -113.44123077]
[232.88034058 -100.55064392]
[225.21009827 -87.66004944]
[225.35124207 -72.76611328]
[211.64530945 -64.86309052]
[203.97505188 -51.97249603]
[196.30480957 -39.08190536]
[188.63456726 -26.19131279]
[180.96432495 -13.30072021]
[181.25347900 -8.52467155]
[178.53868103 -3.51794505]
[172.84298706 -0.12970518]
[164.76962280 12.51232338]
[156.69625854 25.15435219]
[148.62290955 37.79637909]
[148.29379272 52.68734741]
[134.34519958 60.15375900]
[126.27184296 72.79579163]
[118.19847870 85.43782043]
[123.50859070 118.28794861]
[85.00492096 133.01525879]
[91.20675659 146.67312622]
[97.40859985 160.33099365]
[103.61043549 173.98884583]
[109.81227112 187.64671326]
[125.02485657 189.23556519]
[137.31848145 198.16661072]
[143.45039368 211.96031189]
[141.86528015 226.87149048]
[133.08843994 238.90614319]
[139.29026794 252.56399536]
[145.69409180 259.09179688]
[145.48031616 266.48675537]
[151.46577454 280.24084473]
[157.45123291 293.99490356]
[163.43669128 307.74896240]
[178.44833374 311.20678711]
[188.42883301 322.70648193]
[189.70898438 337.70065308]
[182.00668335 350.42120361]
[194.60800171 359.98770142]
[192.59194946 374.74520874]
[198.57740784 388.49929810]
[204.56286621 402.25335693]
[220.95216370 408.35632324]
[227.72795105 424.11221313]
[221.14849854 439.58480835]
[227.35034180 453.24264526]
[233.55216980 466.90051270]
[239.75401306 480.55838013]
[245.95584106 494.21624756]
[252.15768433 507.87411499]
[258.35952759 521.53198242]
[264.56137085 535.18981934]
[279.78915405 538.17205811]
[290.33111572 549.55828857]
[292.13363647 564.97033691]
[284.50360107 578.48193359]
[270.37493896 584.89752197]
[255.18037415 581.75030518]
[244.76255798 570.25036621]
[243.12734985 554.81964111]
[250.90350342 541.39166260]
[244.70166016 527.73382568]
[238.49981689 514.07592773]
[232.29798889 500.41809082]
[226.09614563 486.76022339]
[219.89430237 473.10235596]
[213.69247437 459.44448853]
[207.49063110 445.78662109]
[194.90727234 442.98748779]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 171]
[3 170]
[4 169]
[6 167]
[10 163]
[11 162]
[12 161]
[13 160]
[14 158]
[15 157]
[20 152]
[21 151]
[22 150]
[23 149]
[24 148]
[25 53]
[26 52]
[27 51]
[28 50]
[29 49]
[30 48]
[31 47]
[32 46]
[33 45]
[63 87]
[64 86]
[65 85]
[66 84]
[70 82]
[71 81]
[72 80]
[73 78]
[89 146]
[90 145]
[91 144]
[93 142]
[94 141]
[95 140]
[96 139]
[97 136]
[98 135]
[99 134]
[100 133]
[101 132]
[103 130]
[104 129]
[105 128]
[110 127]
[111 126]
[112 125]
[113 124]
[114 123]
[174 197]
[175 196]
[176 195]
[177 194]
[178 193]
[179 192]
[180 191]
[181 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
