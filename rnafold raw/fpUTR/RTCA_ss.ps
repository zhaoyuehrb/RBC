%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:01:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCAUGCGCACUGACUGCGGAACUGGGCGAACCCGGGGGUUCGUUUCUGCUGACUCCAGUGUCCCGAGAGGCGCCGCUUCUUCCGCUUUCUCGUCAGGCUCCUGCGCCCCAGGCAUGAACCAAGGUUUCUGAACUACUGGGCGGGAGCCAACGUCUCUUCUUUCUCCCGCUCUGGCGGAGGCUUUGUCGCUGCGGGCUGGGCCCCAGGGUGUCCCCC\
) } def
/len { sequence length } bind def

/coor [
[325.22036743 72.14589691]
[310.22073364 72.25347900]
[295.22113037 72.36106873]
[280.22149658 72.46865845]
[265.22189331 72.57624817]
[252.55044556 80.40463257]
[238.69512939 72.76651764]
[226.02368164 80.59490204]
[212.16838074 72.95677948]
[197.16876221 73.06436920]
[190.50665283 76.25371552]
[181.95358276 73.06436920]
[166.95396423 72.95677948]
[151.95436096 72.84919739]
[136.95474243 72.74160767]
[121.95512390 72.63401794]
[138.93251038 113.84932709]
[99.64775848 147.55903625]
[87.10887909 155.79167175]
[74.56999207 164.02432251]
[62.03111267 172.25697327]
[49.49222946 180.48960876]
[36.95335007 188.72225952]
[35.14549637 192.65536499]
[32.45294952 195.52326965]
[29.31803322 197.17884827]
[26.18550682 197.63330078]
[23.45081711 197.04331970]
[10.46043587 204.54331970]
[-2.52994490 212.04331970]
[-15.52032566 219.54331970]
[-28.51070786 227.04331970]
[-41.50108719 234.54331970]
[-54.49147034 242.04331970]
[-62.21798325 256.50820923]
[-78.61489868 256.77877808]
[-86.81447601 242.57670593]
[-78.38169098 228.51185608]
[-61.99147034 229.05293274]
[-49.00108719 221.55293274]
[-36.01070786 214.05293274]
[-23.02032661 206.55293274]
[-10.02994537 199.05293274]
[2.96043611 191.55293274]
[15.95081711 184.05293274]
[28.72070312 176.18338013]
[41.25958633 167.95072937]
[53.79846954 159.71807861]
[66.33734894 151.48544312]
[78.87623596 143.25279236]
[91.41511536 135.02015686]
[89.65643311 127.72926331]
[84.38037109 105.85660553]
[69.46710205 104.24588776]
[54.55383682 102.63516998]
[42.40182877 112.73983002]
[26.67185783 111.20896912]
[16.69623566 98.95080566]
[18.39332008 83.23789978]
[30.75626373 73.39243317]
[46.45035172 75.25555420]
[56.16455460 87.72190094]
[71.07782745 89.33261871]
[85.99109650 90.94333649]
[89.02194977 84.08302307]
[95.08365631 70.36239624]
[98.11450958 63.50207901]
[86.88136292 53.56143570]
[75.64821625 43.62079239]
[64.41506958 33.68014908]
[53.18192291 23.73950386]
[41.87776566 13.87968636]
[30.50317764 4.10120153]
[19.12858963 -5.67728329]
[4.66092587 -0.52148414]
[-10.44343662 -3.30604649]
[-22.12150192 -13.28193665]
[-27.23192596 -27.76569176]
[-24.40003204 -42.86125183]
[-14.38758564 -54.50798798]
[0.11211573 -59.57299042]
[15.19872570 -56.69379044]
[26.81402206 -46.64488602]
[31.83354759 -32.12938309]
[28.90707588 -17.05187035]
[40.28166199 -7.27338552]
[51.65625000 2.50509953]
[58.77331161 4.48072624]
[63.12256622 12.50635719]
[74.35571289 22.44700050]
[85.58885956 32.38764572]
[96.82200623 42.32828903]
[108.05515289 52.26893234]
[122.06271362 57.63440704]
[137.06233215 57.74199295]
[152.06195068 57.84958267]
[167.06155396 57.95716858]
[182.06117249 58.06475830]
[197.06117249 58.06475830]
[212.06079102 57.95716858]
[225.80509949 50.12108612]
[238.58755493 57.76689911]
[252.33186340 49.93081665]
[265.11431885 57.57662964]
[280.11392212 57.46904373]
[295.11352539 57.36145401]
[310.11315918 57.25386810]
[325.11276245 57.14627838]
[339.98791504 55.21505737]
[354.51773071 51.48887634]
[369.04754639 47.76269913]
[383.57736206 44.03651810]
[398.10720825 40.31033707]
[412.55346680 36.27239609]
[426.90951538 31.92456055]
[441.26559448 27.57672501]
[455.59008789 23.12603378]
[469.88229370 18.57271385]
[484.17449951 14.01939201]
[488.89456177 9.40355968]
[494.40914917 8.06127834]
[498.94244385 9.54682064]
[513.35937500 5.40536594]
[527.77630615 1.26391149]
[542.19329834 -2.87754297]
[556.61022949 -7.01899767]
[571.02716064 -11.16045189]
[585.44409180 -15.30190659]
[599.86108398 -19.44336128]
[614.27801514 -23.58481598]
[628.69494629 -27.72627068]
[643.11187744 -31.86772537]
[647.96240234 -36.34625626]
[653.51324463 -37.52979279]
[658.00201416 -35.91481781]
[672.53186035 -39.64099884]
[687.06170654 -43.36717606]
[692.03869629 -47.70471954]
[697.62115479 -48.72853851]
[702.06176758 -46.98545837]
[716.69250488 -50.29329681]
[731.32324219 -53.60113525]
[745.95397949 -56.90897369]
[760.58471680 -60.21681213]
[775.21545410 -63.52465057]
[789.84613037 -66.83248901]
[804.47686768 -70.14032745]
[819.10760498 -73.44816589]
[820.99865723 -88.48810577]
[827.92236328 -101.97283936]
[839.04266357 -112.27401733]
[853.01678467 -118.14772034]
[868.15722656 -118.88467407]
[882.63568115 -114.39588928]
[894.70391846 -105.22340393]
[902.90447998 -92.47484589]
[906.24725342 -77.68965912]
[904.32849121 -62.65322876]
[897.37994385 -49.18127823]
[886.24066162 -38.90061188]
[872.25579834 -33.05266571]
[857.11401367 -32.34361267]
[842.64379883 -36.85907364]
[830.59252930 -46.05378342]
[822.41546631 -58.81743622]
[807.78472900 -55.50959778]
[793.15399170 -52.20175934]
[778.52325439 -48.89392090]
[763.89251709 -45.58608246]
[749.26184082 -42.27824402]
[734.63110352 -38.97040558]
[720.00036621 -35.66256714]
[705.36962891 -32.35473251]
[690.78784180 -28.83736038]
[676.25805664 -25.11117935]
[661.72821045 -21.38500023]
[647.25335693 -17.45077896]
[632.83642578 -13.30932426]
[618.41943359 -9.16786957]
[604.00250244 -5.02641487]
[589.58557129 -0.88496011]
[575.16864014 3.25649452]
[560.75164795 7.39794922]
[546.33471680 11.53940392]
[531.91778564 15.68085861]
[517.50085449 19.82231331]
[503.08389282 23.96376801]
[488.72781372 28.31160164]
[474.43560791 32.86492157]
[460.14340210 37.41824341]
[454.72763062 42.44069290]
[445.61343384 41.93278122]
[431.25735474 46.28061676]
[416.90130615 50.62845230]
[414.92544556 53.54203033]
[411.44302368 55.64577484]
[406.84884644 56.24325180]
[401.83337402 54.84015656]
[387.30355835 58.56633377]
[372.77374268 62.29251480]
[358.24392700 66.01869202]
[343.71411133 69.74487305]
[358.68612671 70.66046906]
[368.10836792 82.33185577]
[365.84643555 97.16033173]
[353.37295532 105.49174500]
[338.80886841 101.90188599]
[331.63619995 88.72840118]
[334.41732788 103.46833038]
[337.19845581 118.20825195]
[348.29351807 130.28431702]
[343.12539673 145.84780884]
[327.01058960 148.88835144]
[316.52664185 136.27807617]
[322.45852661 120.98937225]
[319.67739868 106.24945068]
[316.89627075 91.50952911]
[318.29580688 84.10275269]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 108]
[2 107]
[3 106]
[4 105]
[5 104]
[7 102]
[9 100]
[10 99]
[12 98]
[13 97]
[14 96]
[15 95]
[16 94]
[18 51]
[19 50]
[20 49]
[21 48]
[22 47]
[23 46]
[28 45]
[29 44]
[30 43]
[31 42]
[32 41]
[33 40]
[34 39]
[53 64]
[54 63]
[55 62]
[67 93]
[68 92]
[69 91]
[70 90]
[71 89]
[72 87]
[73 86]
[74 85]
[109 202]
[110 201]
[111 200]
[112 199]
[113 198]
[114 194]
[115 193]
[116 192]
[117 190]
[118 189]
[119 188]
[122 187]
[123 186]
[124 185]
[125 184]
[126 183]
[127 182]
[128 181]
[129 180]
[130 179]
[131 178]
[132 177]
[135 176]
[136 175]
[137 174]
[140 173]
[141 172]
[142 171]
[143 170]
[144 169]
[145 168]
[146 167]
[147 166]
[148 165]
[208 217]
[209 216]
[210 215]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
