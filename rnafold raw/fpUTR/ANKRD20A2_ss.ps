%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:41:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUUUGGGGCUGGGUCGGCCGGGGUCGGGGAGGGGGGUGGUGAAAAGGUGACAGGGAGCUGCCCUCGCUCAAGAGCCGGUGGUUGGGGGUCUGAGAAGAAGUCACCAAU\
) } def
/len { sequence length } bind def

/coor [
[138.53149414 358.02511597]
[137.28186035 343.07723999]
[128.51116943 331.03878784]
[135.07189941 316.64202881]
[133.82228088 301.69415283]
[132.57264709 286.74630737]
[131.32302856 271.79843140]
[129.03831482 256.97344971]
[118.68415833 246.26641846]
[123.18676758 231.09944153]
[119.87799835 216.46893311]
[116.56923676 201.83840942]
[113.26046753 187.20788574]
[109.95169830 172.57737732]
[94.46381378 168.20285034]
[83.20142365 156.57594299]
[79.27725220 140.77532959]
[83.84342194 125.05085754]
[95.75529480 113.68056488]
[86.12211609 103.54679108]
[89.71181488 90.03362274]
[85.99762726 75.50073242]
[82.28343964 60.96784973]
[78.56925201 46.43496323]
[74.85505676 31.90207481]
[64.11328125 24.59725952]
[61.37451172 12.31132698]
[67.58692169 1.82920623]
[64.27816010 -12.80131149]
[52.06723022 -18.68223000]
[45.60726929 -30.37414551]
[47.08404160 -43.45342636]
[55.72790527 -53.11908722]
[52.82711792 -67.83592987]
[49.92633057 -82.55277252]
[46.82125473 -97.22786713]
[43.51248550 -111.85839081]
[40.20372009 -126.48890686]
[36.89495468 -141.11943054]
[33.58618546 -155.74993896]
[30.27742004 -170.38046265]
[26.96865273 -185.01098633]
[23.65988731 -199.64149475]
[20.35112000 -214.27201843]
[5.53437901 -217.76852417]
[-6.24692583 -227.31251526]
[-12.68976021 -240.96939087]
[-12.56466579 -256.00750732]
[-5.95001602 -269.44461060]
[5.79415417 -278.63919067]
[-5.72751760 -290.30892944]
[-1.12173581 -306.04803467]
[14.87346554 -309.66540527]
[25.80359459 -297.43984985]
[20.42467308 -281.94793701]
[34.98239517 -278.70169067]
[46.73535538 -269.41851807]
[53.31921387 -255.89765930]
[53.37994003 -240.79743958]
[46.85193253 -227.11270142]
[34.98163605 -217.58078003]
[38.29040527 -202.95025635]
[41.59917068 -188.31974792]
[44.90793991 -173.68922424]
[48.21670532 -159.05871582]
[51.52547073 -144.42819214]
[54.83423996 -129.79766846]
[58.14300537 -115.16715240]
[61.45177078 -100.53663635]
[66.06143951 -94.62366486]
[64.64317322 -85.45355988]
[67.54396057 -70.73671722]
[70.44474792 -56.01987457]
[84.76670837 -47.32657242]
[88.51015472 -30.65186691]
[78.90867615 -16.11007881]
[82.21744537 -1.47956049]
[94.80806732 10.65816307]
[89.38794708 28.18788719]
[93.10213470 42.72077179]
[96.81632233 57.25365829]
[100.53051758 71.78654480]
[104.24470520 86.31943512]
[113.87788391 96.45320892]
[110.28818512 109.96637726]
[124.00636292 113.06798553]
[134.97836304 121.76044464]
[141.07781982 134.28579712]
[141.15454102 148.15068054]
[135.25088501 160.62263489]
[124.58221436 169.26860046]
[127.89098358 183.89912415]
[131.19975281 198.52964783]
[134.50851440 213.16015625]
[137.81729126 227.79067993]
[148.40809631 239.54418945]
[143.66882324 253.66468811]
[154.34605408 243.12919617]
[169.27124023 244.62542725]
[177.64466858 257.07073975]
[173.40740967 271.45980835]
[159.62548828 277.38085938]
[146.27087402 270.54882812]
[147.52050781 285.49667358]
[148.77012634 300.44451904]
[150.01976013 315.39239502]
[158.87983704 328.50000000]
[152.22972107 341.82760620]
[153.47933960 356.77548218]
[163.27290344 369.92910767]
[156.53071594 384.87820435]
[140.18858337 386.24438477]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 109]
[2 108]
[4 106]
[5 105]
[6 104]
[7 103]
[8 97]
[10 95]
[11 94]
[12 93]
[13 92]
[14 91]
[19 85]
[21 83]
[22 82]
[23 81]
[24 80]
[25 79]
[28 77]
[29 76]
[33 73]
[34 72]
[35 71]
[36 69]
[37 68]
[38 67]
[39 66]
[40 65]
[41 64]
[42 63]
[43 62]
[44 61]
[50 55]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
