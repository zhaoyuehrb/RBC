%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:59:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCGGAGCCCGAGCAGCCGCGGUGAAGCGCCUGUGCUCUGCCGAGACUGCCGUGCCCAUUGCUCGCCUCGGUCGCCGCCGCUUUAGCCGCCUCCGGGGGAGCGGCCGCCUAUUGUCUUUCUCCGCGGCGAAGGUGAAGAGUUGUCCCAGCUCGGCCCGCGGGGGAGCCCCGGGAGCCGCACGUGUCCUGGGUC\
) } def
/len { sequence length } bind def

/coor [
[-36.15678787 331.63012695]
[-48.07545471 340.73757935]
[-59.99412155 349.84500122]
[-71.91278839 358.95245361]
[-83.83145142 368.05987549]
[-95.75011444 377.16732788]
[-107.59503174 386.37045288]
[-119.36542511 395.66873169]
[-131.06054688 405.06152344]
[-136.85681152 419.78271484]
[-151.60884094 421.83868408]
[-163.22790527 431.32534790]
[-167.90429688 439.18786621]
[-175.11143494 440.86944580]
[-186.88183594 450.16772461]
[-198.65223694 459.46597290]
[-210.42262268 468.76425171]
[-216.82249451 486.02392578]
[-234.26577759 487.89462280]
[-245.88485718 497.38131714]
[-257.50393677 506.86798096]
[-269.04620361 516.44793701]
[-280.51095581 526.12060547]
[-291.97567749 535.79321289]
[-303.44042969 545.46588135]
[-311.64758301 560.30090332]
[-328.17483521 556.52124023]
[-329.11807251 539.59356689]
[-313.11306763 534.00109863]
[-301.64831543 524.32849121]
[-290.18359375 514.65588379]
[-278.71884155 504.98321533]
[-275.62960815 498.25808716]
[-266.99060059 495.24890137]
[-255.37153625 485.76223755]
[-243.75247192 476.27554321]
[-242.22154236 464.26785278]
[-232.60746765 456.26989746]
[-219.72090149 456.99386597]
[-207.95050049 447.69558716]
[-196.18009949 438.39730835]
[-184.40969849 429.09906006]
[-172.71458435 419.70626831]
[-161.09552002 410.21960449]
[-156.13032532 396.17694092]
[-140.54722595 393.44244385]
[-137.35005188 386.76794434]
[-128.66369629 383.89834595]
[-116.89329529 374.60006714]
[-113.58901978 367.97796631]
[-104.85755157 365.24865723]
[-92.93888855 356.14120483]
[-81.02022552 347.03378296]
[-69.10155487 337.92633057]
[-57.18289185 328.81890869]
[-45.26422882 319.71145630]
[-46.70143127 308.97128296]
[-42.82559967 298.46551514]
[-34.21942902 290.74749756]
[-22.65288925 287.85745239]
[-10.72429848 290.79217529]
[-1.27695942 299.19943237]
[6.74002790 286.52157593]
[14.75701523 273.84371948]
[22.77400208 261.16586304]
[23.03680420 246.27357483]
[36.95201492 238.74513245]
[44.96900177 226.06727600]
[52.98598862 213.38943481]
[60.90059280 200.64741516]
[68.71230316 187.84205627]
[76.52400970 175.03669739]
[76.28640747 170.25457764]
[79.05953217 165.27482605]
[84.79930115 161.95036316]
[93.01948547 149.40330505]
[101.23967743 136.85624695]
[75.23699188 83.05551147]
[72.59261322 68.29043579]
[69.94823456 53.52537155]
[67.30385590 38.76029968]
[64.65947723 23.99523163]
[62.01510239 9.23016357]
[59.37072372 -5.53490543]
[56.72634506 -20.29997444]
[46.60053635 -28.30347252]
[44.70791245 -40.66532516]
[51.52459335 -50.66841507]
[49.11842346 -65.47416687]
[46.71225357 -80.27992249]
[35.92720795 -92.63365936]
[41.48863983 -108.06098938]
[57.67542267 -110.69159698]
[67.83598328 -97.81934357]
[61.51800919 -82.68608856]
[63.92417908 -67.88034058]
[66.33034515 -53.07458496]
[78.14632416 -40.10729980]
[71.49141693 -22.94435310]
[74.13579559 -8.17928410]
[76.78017426 6.58578539]
[79.42455292 21.35085487]
[82.06893158 36.11592484]
[84.71330261 50.88099289]
[87.35768127 65.64606476]
[90.00205994 80.41113281]
[104.34073639 84.81596375]
[114.81840515 74.08197784]
[125.29607391 63.34799194]
[135.77374268 52.61400604]
[146.25141907 41.88002396]
[150.01329041 33.54120255]
[156.98539734 31.05922127]
[167.63462830 20.49542618]
[178.28387451 9.93163109]
[188.93310547 -0.63216513]
[199.58233643 -11.19596100]
[196.26327515 -26.26205826]
[201.63786316 -40.72294617]
[213.99110413 -49.96421051]
[229.38111877 -51.03699493]
[242.89701843 -43.59897995]
[250.22592163 -30.02360725]
[249.02919006 -14.64272881]
[239.68872070 -2.36432815]
[225.18501282 2.89360166]
[210.14613342 -0.54672527]
[199.49690247 10.01707077]
[188.84767151 20.58086586]
[178.19842529 31.14466286]
[167.54919434 41.70845795]
[156.98539734 52.35769272]
[146.50773621 63.09167862]
[136.03005981 73.82566071]
[125.55239105 84.55964661]
[115.07471466 95.29363251]
[118.01446533 102.19347382]
[123.89396667 115.99317169]
[126.83371735 122.89301300]
[141.83323669 122.77218628]
[156.83274841 122.65135956]
[171.83226013 122.53052521]
[186.83177185 122.40969849]
[201.83128357 122.28887177]
[217.62120056 116.11513519]
[227.92474365 129.57891846]
[217.83943176 143.20693970]
[201.95211792 137.28837585]
[186.95259094 137.40921021]
[171.95307922 137.53004456]
[156.95356750 137.65086365]
[141.95405579 137.77169800]
[126.95454407 137.89253235]
[113.78672791 145.07644653]
[105.56654358 157.62348938]
[97.34635162 170.17054749]
[89.32936859 182.84840393]
[81.51766205 195.65376282]
[73.70595551 208.45912170]
[71.90428162 217.42803955]
[65.66384125 221.40641785]
[57.64685440 234.08427429]
[49.62986755 246.76211548]
[48.79363632 262.56121826]
[35.45185471 269.18286133]
[27.43486595 281.86071777]
[19.41787910 294.53854370]
[11.40089226 307.21640015]
[10.67619133 322.19888306]
[17.43216324 335.59130859]
[24.18813515 348.98373413]
[30.94410706 362.37612915]
[37.70008087 375.76855469]
[44.45605087 389.16098022]
[51.21202469 402.55340576]
[65.95332336 407.58645630]
[72.61405945 421.26452637]
[67.72494507 435.28707886]
[81.73139191 443.81652832]
[81.07744598 460.20263672]
[66.43583679 467.58877563]
[52.86858749 458.37673950]
[54.33252716 442.04306030]
[40.14928055 437.64178467]
[33.10698318 424.15621948]
[37.81960678 409.30935669]
[31.06363487 395.91696167]
[24.30766106 382.52453613]
[17.55168915 369.13211060]
[10.79571819 355.73968506]
[4.03974581 342.34729004]
[-2.71622610 328.95486450]
[-10.66651630 334.74145508]
[-19.79022980 337.05242920]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 56]
[2 55]
[3 54]
[4 53]
[5 52]
[6 51]
[7 49]
[8 48]
[9 46]
[11 44]
[12 43]
[14 42]
[15 41]
[16 40]
[17 39]
[19 36]
[20 35]
[21 34]
[22 32]
[23 31]
[24 30]
[25 29]
[62 168]
[63 167]
[64 166]
[65 165]
[67 163]
[68 162]
[69 161]
[70 159]
[71 158]
[72 157]
[75 156]
[76 155]
[77 154]
[78 106]
[79 105]
[80 104]
[81 103]
[82 102]
[83 101]
[84 100]
[85 99]
[88 97]
[89 96]
[90 95]
[107 136]
[108 135]
[109 134]
[110 133]
[111 132]
[113 131]
[114 130]
[115 129]
[116 128]
[117 127]
[139 153]
[140 152]
[141 151]
[142 150]
[143 149]
[144 148]
[169 192]
[170 191]
[171 190]
[172 189]
[173 188]
[174 187]
[175 186]
[178 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
