%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:18:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGGCCUCCUCCUGGCGCGCCUCCGCACCGCAUUGGUGGACCGGCCCCCAGCCCGUCCAUGGGCGUUGUGGCCGCCACCGCAGGUUCCGCCUCCCGUUCCCUCCGCCCUCAACGUACGUCGCACCGCCUCUCUGUAGCCGCCCGCGGAGCAUCGCAGCCGGCCCGGGCCCCCGCCAGCCUCCCUCCUCGCGUCCCUCGGUGUCCUCCGCGGGCCGGCGCG\
) } def
/len { sequence length } bind def

/coor [
[94.94446564 169.42832947]
[88.54187012 177.65921021]
[78.87524414 180.94070435]
[73.47991180 194.93679810]
[68.08457947 208.93287659]
[62.68925095 222.92897034]
[57.39308548 236.96287537]
[59.87015152 252.58897400]
[48.20268250 261.84744263]
[43.00594711 275.91848755]
[46.30920792 291.98150635]
[33.87181091 302.66995239]
[18.48828316 296.98849487]
[15.98387814 280.78170776]
[28.93491554 270.72174072]
[34.13164902 256.65072632]
[31.28287888 242.03108215]
[43.32205582 231.76614380]
[42.69126511 224.40855408]
[48.69316483 217.53363037]
[54.08849716 203.53755188]
[59.48382950 189.54147339]
[64.87915802 175.54537964]
[60.49938965 156.70701599]
[76.39362335 144.29946899]
[81.39072418 130.15631104]
[86.38781738 116.01314545]
[82.14414978 109.82920074]
[67.18955994 110.99553680]
[73.65680695 97.46129608]
[69.41313171 91.27734375]
[54.41913986 90.85285950]
[49.84110641 93.32702637]
[45.23199081 93.75993347]
[41.37276077 92.48032379]
[38.80155182 90.07869720]
[23.83908653 89.01823425]
[8.87661934 87.95777130]
[-6.08584738 86.89730835]
[-21.04831505 85.83684540]
[-27.13854027 88.37632751]
[-32.75582123 87.58374786]
[-36.41727448 84.52875519]
[-51.34373856 83.04529572]
[-66.27020264 81.56183624]
[-81.19667053 80.07837677]
[-96.12313080 78.59491730]
[-111.05971527 77.21710205]
[-121.23773956 88.78058624]
[-136.09939575 92.09491730]
[-149.89970398 86.09364319]
[-157.42985535 73.27042389]
[-172.37580872 71.99833679]
[-187.32177734 70.72624969]
[-202.26774597 69.45415497]
[-214.18745422 79.83181763]
[-229.94810486 78.65808868]
[-240.19915771 66.62931824]
[-238.85887146 50.88196182]
[-226.72238159 40.75865173]
[-210.99008179 42.26536560]
[-200.99565125 54.50819778]
[-186.04968262 55.78028488]
[-171.10372925 57.05237579]
[-156.15776062 58.32446289]
[-146.56880188 46.95830154]
[-131.95275879 43.37561035]
[-117.86501312 49.15390015]
[-109.78762817 62.27114105]
[-102.86196136 59.70849609]
[-94.63967133 63.66844940]
[-79.71321106 65.15190887]
[-64.78674316 66.63536835]
[-49.86027908 68.11882782]
[-34.93381500 69.60228729]
[-19.98785019 70.87437439]
[-5.02538395 71.93483734]
[9.93708324 72.99530029]
[24.89954948 74.05576324]
[39.86201859 75.11623383]
[54.84362030 75.85887146]
[69.83761597 76.28335571]
[79.90608215 65.16463470]
[78.00081635 50.28612518]
[76.09555054 35.40761948]
[74.19027710 20.52911377]
[60.74204254 13.01571846]
[54.37105560 -0.81410176]
[57.33019638 -15.56901550]
[68.27915192 -25.63173866]
[66.37388611 -40.51024628]
[54.15346909 -50.16939545]
[52.43320465 -65.28545380]
[61.71703720 -76.87622833]
[48.79355621 -92.35387421]
[57.04387665 -109.84669495]
[54.71832657 -124.66532135]
[52.39277649 -139.48394775]
[50.06723022 -154.30258179]
[35.44038773 -158.66358948]
[24.16000938 -168.94540405]
[18.46582031 -183.10658264]
[19.48840332 -198.33540344]
[27.02472687 -211.60818481]
[39.57844543 -220.28959656]
[54.65701294 -222.65592957]
[69.26656342 -218.23736572]
[80.50637054 -207.91120911]
[86.14475250 -193.72770691]
[85.06220245 -178.50303650]
[77.47367096 -165.26004028]
[64.88585663 -156.62812805]
[67.21141052 -141.80950928]
[69.53695679 -126.99087524]
[71.86250305 -112.17224121]
[80.62081909 -106.92783356]
[85.14563751 -97.53279114]
[83.72772217 -86.98027039]
[76.59554291 -78.78150177]
[88.50043488 -69.90404510]
[90.64459991 -54.84226608]
[81.25238800 -42.41551208]
[83.15766144 -27.53700638]
[96.28890991 -20.55787277]
[102.87048340 -7.02469587]
[100.18988037 7.96422529]
[89.06878662 18.62384605]
[90.97405243 33.50235367]
[92.87931824 48.38085938]
[94.78459167 63.25936508]
[103.63248444 51.14677811]
[117.52192688 45.48256302]
[132.31703186 47.95336533]
[143.61222839 57.82344818]
[148.04412842 72.15377808]
[144.29302979 86.67717743]
[133.47590637 97.06899261]
[118.81555176 100.23493958]
[133.02801514 105.03140259]
[147.24046326 109.82785797]
[161.45292664 114.62432098]
[175.69895935 119.32009888]
[189.97787476 123.91495514]
[204.25679016 128.50981140]
[218.53569031 133.10467529]
[232.81460571 137.69953918]
[247.09352112 142.29440308]
[261.37243652 146.88925171]
[275.65133667 151.48411560]
[289.93023682 156.07897949]
[281.04748535 143.99192810]
[279.30496216 129.09349060]
[285.15875244 115.28286743]
[297.07678223 106.17459106]
[311.93984985 104.15248108]
[325.85800171 109.74575806]
[335.18859863 121.49056244]
[337.48959351 136.31301880]
[332.15878296 150.33381653]
[320.59136963 159.88340759]
[305.81655884 162.46263123]
[319.30465698 169.02546692]
[332.79278564 175.58831787]
[346.32699585 182.05555725]
[359.90661621 188.42687988]
[373.48623657 194.79820251]
[387.06585693 201.16952515]
[400.64550781 207.54084778]
[412.18389893 200.00891113]
[425.82885742 199.16642761]
[438.01177979 205.12663269]
[445.59924316 216.23760986]
[446.69885254 229.53851318]
[460.18695068 236.10136414]
[473.67504883 242.66419983]
[489.46951294 241.74465942]
[497.52871704 254.27056885]
[511.01684570 260.83340454]
[524.64685059 253.41709900]
[540.02862549 255.46208191]
[551.24743652 266.18203735]
[553.98950195 281.45489502]
[547.20043945 295.40798950]
[533.49072266 302.67599487]
[518.13208008 300.46426392]
[507.03021240 289.62322998]
[504.45397949 274.32153320]
[490.96588135 267.75866699]
[476.13616943 269.14764404]
[467.11221313 256.15231323]
[453.62411499 249.58946228]
[440.13598633 243.02662659]
[425.89965820 251.20741272]
[409.42770386 249.26826477]
[397.23843384 237.77697754]
[394.27416992 221.12046814]
[380.69454956 214.74914551]
[367.11492920 208.37782288]
[353.53530884 202.00651550]
[339.95565796 195.63519287]
[332.57107544 195.63973999]
[326.22991943 189.07643127]
[312.74182129 182.51358032]
[299.25372314 175.95072937]
[285.33538818 170.35789490]
[271.05648804 165.76303101]
[256.77755737 161.16816711]
[242.49865723 156.57330322]
[228.21974182 151.97843933]
[213.94084167 147.38359070]
[199.66192627 142.78872681]
[185.38301086 138.19386292]
[171.10411072 133.59899902]
[163.77990723 134.54148865]
[156.65646362 128.83677673]
[142.44400024 124.04032135]
[128.23155212 119.24385834]
[114.01908875 114.44740295]
[100.53098297 121.01024628]
[95.53388214 135.15341187]
[90.53678894 149.29656982]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 23]
[4 22]
[5 21]
[6 20]
[7 18]
[9 16]
[10 15]
[25 221]
[26 220]
[27 219]
[31 82]
[32 81]
[36 80]
[37 79]
[38 78]
[39 77]
[40 76]
[43 75]
[44 74]
[45 73]
[46 72]
[47 71]
[48 69]
[52 65]
[53 64]
[54 63]
[55 62]
[83 130]
[84 129]
[85 128]
[86 127]
[90 123]
[91 122]
[94 119]
[96 115]
[97 114]
[98 113]
[99 112]
[138 218]
[139 217]
[140 216]
[141 215]
[142 213]
[143 212]
[144 211]
[145 210]
[146 209]
[147 208]
[148 207]
[149 206]
[150 205]
[161 204]
[162 203]
[163 202]
[164 200]
[165 199]
[166 198]
[167 197]
[168 196]
[173 192]
[174 191]
[175 190]
[177 188]
[178 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
