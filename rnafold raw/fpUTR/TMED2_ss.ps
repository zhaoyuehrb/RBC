%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:52:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGCUUAGGCGGCGGUGGCUGAGAAGGCAGCGGGGCGGCGGCGGCGGCGGCGGCGGCGGCUGUGGAGGCCGCAGUCCGGGUCCUGGCUUCGGCCUCAGCCCCACC\
) } def
/len { sequence length } bind def

/coor [
[31.66165924 168.51977539]
[28.65356255 183.80340576]
[15.99375057 192.24044800]
[1.44169033 189.27850342]
[-10.92228127 197.77157593]
[-23.28625298 206.26463318]
[-35.65022278 214.75770569]
[-36.18864059 230.15304565]
[-45.57931137 242.13923645]
[-60.05599976 246.24890137]
[-74.00968170 241.10762024]
[-86.37364960 249.60069275]
[-98.73762512 258.09375000]
[-111.10159302 266.58682251]
[-117.67306519 281.61172485]
[-133.99858093 283.16397095]
[-143.28385925 269.64672852]
[-135.97698975 254.96539307]
[-119.59466553 254.22285461]
[-107.23069000 245.72978210]
[-94.86672211 237.23670959]
[-82.50274658 228.74365234]
[-82.29472351 213.87438965]
[-73.26414490 201.83642578]
[-58.70656967 197.37207031]
[-44.14329147 202.39373779]
[-31.77932167 193.90066528]
[-19.41534996 185.40759277]
[-7.05137825 176.91453552]
[-4.59443617 162.26875305]
[7.82340193 153.47943115]
[23.16859055 156.15580750]
[35.01281357 146.95176697]
[46.29645920 137.06848145]
[57.58010101 127.18518829]
[68.86374664 117.30190277]
[80.14739227 107.41861725]
[80.21793365 92.39527130]
[90.22905731 81.19333649]
[88.47146606 66.29666138]
[86.71387482 51.39999008]
[84.95627594 36.50331497]
[83.19868469 21.60664177]
[73.89767456 8.80813408]
[80.09038544 -4.73806810]
[78.33279419 -19.63474083]
[69.03178406 -32.43325043]
[75.22449493 -45.97945023]
[73.46690369 -60.87612534]
[63.23138428 -73.68886566]
[69.46092987 -88.85872650]
[85.74710846 -90.78026581]
[95.33610535 -77.47676086]
[88.36357117 -62.63372040]
[90.12117004 -47.73704529]
[99.29646301 -36.00404739]
[93.22946930 -21.39233589]
[94.98706055 -6.49566221]
[104.16235352 5.23733616]
[98.09535980 19.84904861]
[99.85295105 34.74571991]
[101.61054993 49.64239502]
[103.36814117 64.53907013]
[105.12573242 79.43573761]
[114.65242004 84.68763733]
[120.31864929 93.97386169]
[135.27825928 95.07389832]
[150.23786926 96.17393494]
[165.19747925 97.27397156]
[180.15708923 98.37400818]
[195.11669922 99.47404480]
[210.07630920 100.57408142]
[224.40673828 93.86965942]
[236.53231812 102.51949310]
[251.49192810 103.61952972]
[260.44061279 101.09986877]
[266.87246704 104.97779083]
[281.79333496 106.51651764]
[296.71420288 108.05523682]
[311.63507080 109.59396362]
[328.01089478 105.20432281]
[336.76226807 119.72499847]
[325.23168945 132.15408325]
[310.09634399 124.51483154]
[295.17547607 122.97611237]
[280.25460815 121.43738556]
[265.33374023 119.89865875]
[250.39189148 118.57913971]
[235.43228149 117.47910309]
[222.17185974 124.26219940]
[208.97627258 115.53369141]
[194.01666260 114.43365479]
[179.05705261 113.33361816]
[164.09744263 112.23358154]
[149.13783264 111.13354492]
[134.17822266 110.03350830]
[119.21861267 108.93346405]
[106.72641754 120.09769440]
[90.03067780 118.70226288]
[78.74703217 128.58554077]
[67.46338654 138.46884155]
[56.17974472 148.35212708]
[44.89609909 158.23541260]
[43.56947327 162.75585938]
[41.05414581 166.19125366]
[37.87287903 168.29119873]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 32]
[4 29]
[5 28]
[6 27]
[7 26]
[11 22]
[12 21]
[13 20]
[14 19]
[33 103]
[34 102]
[35 101]
[36 100]
[37 99]
[39 64]
[40 63]
[41 62]
[42 61]
[43 60]
[45 58]
[46 57]
[48 55]
[49 54]
[66 97]
[67 96]
[68 95]
[69 94]
[70 93]
[71 92]
[72 91]
[74 89]
[75 88]
[77 87]
[78 86]
[79 85]
[80 84]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
