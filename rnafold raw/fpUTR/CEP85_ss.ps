%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:52:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUGGGGCCAAACGACGCGCGUUCUGUGGCGCGCGGCCUGGCGGGCGUGCAACGGCCGUUAGAGGAGCUGAGGGAGGGAACCACCGCUCACCGCAGACGUGGUGGCUGCAGUCAGUCUUCCCGAGUGAGGGAUUUCGCCGCCCGCUUUCAGGCCCGUUUGGCUUAAAUAACUGUGAUUG\
) } def
/len { sequence length } bind def

/coor [
[70.80339050 576.75067139]
[71.28358459 561.66186523]
[75.81799316 547.26251221]
[84.07011414 534.62109375]
[95.42759705 524.67578125]
[109.04763794 518.16442871]
[106.45716095 503.38983154]
[103.86668396 488.61520386]
[101.27620697 473.84060669]
[98.68572998 459.06597900]
[96.09525299 444.29135132]
[93.50477600 429.51672363]
[90.91429901 414.74209595]
[88.32382202 399.96749878]
[85.73333740 385.19287109]
[78.74952698 382.45858765]
[64.78189850 376.99002075]
[57.79808044 374.25570679]
[45.86483765 383.34405518]
[33.93159485 392.43237305]
[21.99835396 401.52072144]
[10.06511307 410.60903931]
[-1.86812842 419.69735718]
[-13.80136967 428.78570557]
[-19.62920380 444.11437988]
[-35.85912704 446.46420288]
[-45.79518509 433.41787720]
[-39.21601486 418.39633179]
[-22.88969994 416.85244751]
[-10.95645905 407.76412964]
[0.97678292 398.67581177]
[12.91002464 389.58746338]
[24.84326553 380.49914551]
[36.77650833 371.41079712]
[48.70975113 362.32247925]
[56.50834274 349.50912476]
[59.09881973 334.73449707]
[61.68929672 319.95989990]
[64.27977753 305.18527222]
[66.87025452 290.41064453]
[69.46073151 275.63601685]
[71.66571045 260.79898071]
[73.48370361 245.90954590]
[75.30168915 231.02012634]
[77.11968231 216.13070679]
[78.93767548 201.24128723]
[80.75566101 186.35186768]
[82.57365417 171.46243286]
[80.25707245 164.42282104]
[84.55458832 156.33120728]
[86.63072205 141.47558594]
[66.59661865 127.98526764]
[56.82390594 105.89797974]
[60.31473923 81.99885559]
[47.92465210 73.54393005]
[35.53456116 65.08901215]
[23.14447212 56.63409042]
[10.68147659 48.28701019]
[-4.24477196 52.94974899]
[-18.65610313 46.87952805]
[-25.74792671 32.94252777]
[-22.17170143 17.71936607]
[-9.61600971 8.39795876]
[5.99073315 9.37958813]
[17.27950096 20.20075798]
[18.92008209 35.75204468]
[26.25643539 36.80117798]
[31.59939575 44.24399948]
[43.98948288 52.69892120]
[56.37957382 61.15384293]
[68.76966095 69.60876465]
[70.84261322 59.70729828]
[75.49582672 49.76300812]
[70.88533783 35.48913574]
[66.27484894 21.21526527]
[54.67040253 10.46132183]
[58.12122345 -4.02802277]
[53.51073456 -18.30189514]
[39.32908249 -25.27729988]
[34.31265259 -40.26432800]
[41.43760681 -54.37143707]
[56.47682953 -59.22913742]
[70.50782776 -51.95543289]
[75.20624542 -36.86568832]
[67.78460693 -22.91238213]
[72.39509583 -8.63850975]
[83.66976929 1.09447169]
[80.54872131 16.60477829]
[85.15921021 30.87865067]
[89.76969910 45.15252304]
[104.76065826 44.63191986]
[108.36983490 30.07259941]
[111.97901154 15.51327801]
[115.58818817 0.95395637]
[119.19736481 -13.60536480]
[114.13842773 -29.20469666]
[125.31785583 -41.20271301]
[141.23521423 -37.25688553]
[145.51609802 -21.42634010]
[133.75668335 -9.99618816]
[130.14750671 4.56313324]
[126.53833771 19.12245560]
[122.92916107 33.68177795]
[119.31998444 48.24109650]
[132.58316040 55.24738693]
[142.57489014 44.05965805]
[152.56661987 32.87192535]
[162.55834961 21.68419647]
[172.55009460 10.49646759]
[175.36314392 -5.65960884]
[190.85221863 -11.04664421]
[203.08351135 -0.12291894]
[199.47448730 15.87417507]
[183.73782349 20.48819923]
[173.74607849 31.67592812]
[163.75434875 42.86365891]
[153.76261902 54.05138779]
[143.77088928 65.23912048]
[141.53063965 72.63468170]
[138.36564636 79.33510590]
[152.59896851 74.60091400]
[166.83229065 69.86672974]
[181.06561279 65.13254547]
[187.91769409 50.89088821]
[202.86061096 45.74458694]
[217.02903748 52.74684525]
[222.01705933 67.74334717]
[214.86540222 81.83693695]
[199.81700134 86.66613770]
[185.79980469 79.36586761]
[171.56648254 84.10005188]
[157.33316040 88.83423615]
[143.09983826 93.56842804]
[142.80245972 108.17987061]
[137.69094849 121.87129974]
[128.34019470 133.10278320]
[115.80191803 140.61108398]
[101.48635101 143.55171204]
[99.41020966 158.40734863]
[97.46307373 173.28042603]
[95.64508820 188.16984558]
[93.82709503 203.05928040]
[92.00910187 217.94869995]
[90.19111633 232.83811951]
[88.37312317 247.72753906]
[86.55513000 262.61697388]
[88.62326050 267.46832275]
[88.60698700 272.15499878]
[86.92293549 275.90502930]
[84.23535156 278.22650146]
[81.64487457 293.00112915]
[79.05439758 307.77575684]
[76.46392059 322.55035400]
[73.87344360 337.32498169]
[71.28296661 352.09960938]
[100.50796509 382.60238647]
[103.09844208 397.37701416]
[105.68891907 412.15164185]
[108.27939606 426.92623901]
[110.86987305 441.70086670]
[113.46035004 456.47549438]
[116.05082703 471.25012207]
[118.64130402 486.02474976]
[121.23178101 500.79934692]
[123.82225800 515.57397461]
[138.84506226 517.06323242]
[152.90855408 522.55145264]
[164.96914673 531.63140869]
[174.13183594 543.62921143]
[179.71672058 557.65460205]
[181.30934143 572.66680908]
[178.79151917 587.55181885]
[172.35011292 601.20501709]
[162.46308899 612.61334229]
[149.86415100 620.93011475]
[135.48820496 625.53826904]
[120.40206909 626.09582520]
[105.72520447 622.56134033]
[92.54675293 615.19720459]
[81.84463501 604.54980469]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 165]
[7 164]
[8 163]
[9 162]
[10 161]
[11 160]
[12 159]
[13 158]
[14 157]
[15 156]
[18 35]
[19 34]
[20 33]
[21 32]
[22 31]
[23 30]
[24 29]
[36 155]
[37 154]
[38 153]
[39 152]
[40 151]
[41 150]
[42 146]
[43 145]
[44 144]
[45 143]
[46 142]
[47 141]
[48 140]
[50 139]
[51 138]
[54 71]
[55 70]
[56 69]
[57 68]
[58 66]
[73 90]
[74 89]
[75 88]
[77 86]
[78 85]
[91 104]
[92 103]
[93 102]
[94 101]
[95 100]
[105 118]
[106 117]
[107 116]
[108 115]
[109 114]
[120 133]
[121 132]
[122 131]
[123 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
