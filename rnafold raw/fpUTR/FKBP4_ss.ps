%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:02:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCGCUCCCCGAGCCGCUCCUGACCCACCUACCCCAGCUCUCGCGCCGCGUGCAGAGGUGCUCAAGCCUCCUCGCGGUCCGCAGUCAGUGCCGCCGCGCCCGGCCUCCCGCACGCCCCGCAGGUAGCGCCCCCGCCCGCGGCCCAGAGUGCGCUCGCGCCGGCACCAGCUCCCGGAUAAACGGCGCGCCGCGCGGAG\
) } def
/len { sequence length } bind def

/coor [
[88.67106628 179.00860596]
[87.74490356 189.49206543]
[82.58605194 198.57241821]
[74.18590546 204.64059448]
[64.10299683 206.65351868]
[59.44522858 220.91203308]
[54.78746033 235.17054749]
[50.12968826 249.42906189]
[50.95880508 266.36273193]
[34.91643906 271.84713745]
[25.20538521 257.94995117]
[35.87117386 244.77128601]
[40.52894592 230.51277161]
[45.18671799 216.25425720]
[49.84448624 201.99574280]
[39.77143097 185.33061218]
[45.27202225 166.33311462]
[63.23625183 157.35530090]
[67.21376038 142.89227295]
[71.19126892 128.42922974]
[75.16877747 113.96619415]
[64.74423218 124.75178528]
[51.17816162 131.15191650]
[36.25098419 132.62818909]
[21.69405174 129.00938416]
[9.19577122 120.71523285]
[0.20577030 108.70774078]
[-4.23323298 94.37960815]
[-3.60637426 79.39271545]
[2.01363850 65.48532867]
[11.97496128 54.27051163]
[25.12221527 47.04903793]
[39.93050003 44.65849686]
[54.68225861 47.37615967]
[67.66648102 54.88681030]
[77.37718201 66.31932068]
[82.68735504 80.34403229]
[92.04505920 92.06723022]
[89.45329285 77.29283142]
[86.86153412 62.51843643]
[84.26976776 47.74404144]
[81.67800140 32.96964645]
[71.67261505 20.71391869]
[77.09446716 6.84118509]
[72.52523041 -1.07988691]
[74.58032990 -8.18676281]
[72.22212219 -23.00023079]
[69.86391449 -37.81369781]
[67.50569916 -52.62716675]
[65.14749146 -67.44063568]
[62.78927994 -82.25410461]
[52.97861481 -94.66625214]
[58.61879349 -108.45166779]
[56.26058197 -123.26513672]
[46.44991684 -135.67729187]
[52.09009552 -149.46269226]
[42.27943039 -161.87484741]
[47.91960907 -175.66026306]
[45.56139755 -190.47372437]
[43.20318604 -205.28720093]
[40.84497452 -220.10066223]
[38.48676682 -234.91413879]
[36.12855530 -249.72760010]
[32.82589340 -253.79505920]
[31.54823303 -258.27502441]
[32.11248016 -262.32464600]
[34.02672577 -265.29672241]
[32.37247467 -280.20523071]
[30.71822166 -295.11370850]
[29.06396866 -310.02221680]
[26.35334396 -313.44274902]
[25.01313591 -317.17337036]
[24.97191811 -320.74331665]
[26.01214981 -323.75381470]
[27.80650330 -325.91961670]
[27.09635925 -340.90280151]
[26.38621330 -355.88598633]
[25.67606926 -370.86917114]
[17.21088409 -377.71884155]
[13.98461914 -387.88900757]
[16.83383560 -397.94302368]
[24.58353996 -404.62136841]
[24.34674454 -419.61947632]
[12.16039181 -410.87347412]
[-2.31878495 -414.79180908]
[-8.43133545 -428.48986816]
[-1.67725062 -441.88323975]
[12.97116756 -445.11184692]
[24.72994614 -435.79864502]
[25.67653084 -450.76876831]
[26.62311363 -465.73886108]
[27.56969833 -480.70895386]
[16.15233803 -499.98510742]
[28.78110504 -517.55810547]
[28.78110504 -532.55810547]
[28.78110504 -547.55810547]
[28.78110504 -562.55810547]
[20.11740303 -576.48193359]
[28.08153152 -590.81738281]
[44.48067856 -590.81738281]
[52.44480896 -576.48193359]
[43.78110504 -562.55810547]
[43.78110504 -547.55810547]
[43.78110504 -532.55810547]
[43.78110504 -517.55810547]
[50.42873001 -513.29064941]
[54.89630508 -506.66217041]
[56.39214325 -498.71417236]
[54.59873962 -490.73162842]
[49.73654938 -484.03509521]
[42.53980255 -479.76239014]
[41.59321594 -464.79226685]
[40.64663315 -449.82217407]
[39.70004654 -434.85208130]
[39.34487534 -419.85629272]
[39.58166885 -404.85815430]
[50.70519638 -389.04879761]
[40.65924835 -371.57931519]
[41.36939240 -356.59613037]
[42.07954025 -341.61294556]
[42.78968430 -326.62976074]
[43.97247314 -311.67648315]
[45.62672424 -296.76797485]
[47.28097534 -281.85946655]
[48.93523026 -266.95095825]
[50.94202423 -252.08581543]
[53.30023575 -237.27235413]
[55.65844345 -222.45887756]
[58.01665497 -207.64541626]
[60.37486649 -192.83193970]
[62.73307800 -178.01847839]
[72.37506866 -166.66587830]
[66.90356445 -151.82090759]
[76.54555511 -140.46832275]
[71.07405090 -125.62334442]
[73.43225861 -110.80987549]
[83.07424927 -99.45729065]
[77.60274506 -84.61231232]
[79.96096039 -69.79884338]
[82.31916809 -54.98537827]
[84.67737579 -40.17190933]
[87.03559113 -25.35844231]
[89.39379883 -10.54497337]
[91.86886597 4.24941921]
[101.68886566 15.44838428]
[96.45239258 30.37788200]
[99.04415894 45.15227890]
[101.63592529 59.92667389]
[104.22769165 74.70106506]
[106.81945801 89.47546387]
[114.07894135 102.60176849]
[125.21554565 112.65045166]
[136.35214233 122.69914246]
[147.48875427 132.74781799]
[165.57725525 136.17138672]
[170.33673096 153.05830383]
[181.63058472 162.92993164]
[192.92442322 172.80155945]
[204.21827698 182.67318726]
[215.51211548 192.54481506]
[226.80596924 202.41644287]
[238.09980774 212.28807068]
[255.64074707 207.72959900]
[272.26379395 214.54626465]
[281.39303589 229.83772278]
[279.53958130 247.39231873]
[291.13943481 256.90249634]
[306.47302246 253.83403015]
[320.16668701 261.38500977]
[325.75476074 275.99005127]
[320.59866333 290.75314331]
[307.13299561 298.70358276]
[291.71578979 296.08743286]
[281.62661743 284.13992310]
[281.62927246 268.50234985]
[270.02941895 258.99215698]
[258.85882568 263.77349854]
[246.64328003 263.34536743]
[235.70639038 257.72772217]
[228.15470886 247.93348694]
[225.47204590 235.78649902]
[228.22817993 223.58190918]
[216.93434143 213.71028137]
[205.64048767 203.83865356]
[194.34664917 193.96702576]
[183.05279541 184.09539795]
[171.75895691 174.22377014]
[160.46510315 164.35214233]
[148.37258911 164.84855652]
[138.88175964 156.70822144]
[137.44006348 143.88442993]
[126.30345917 133.83573914]
[115.16685486 123.78705597]
[104.03025818 113.73837280]
[89.63181305 117.94370270]
[85.65430450 132.40673828]
[81.67679596 146.86976624]
[77.69928741 161.33280945]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 15]
[6 14]
[7 13]
[8 12]
[18 198]
[19 197]
[20 196]
[21 195]
[38 150]
[39 149]
[40 148]
[41 147]
[42 146]
[44 144]
[46 143]
[47 142]
[48 141]
[49 140]
[50 139]
[51 138]
[53 136]
[54 135]
[56 133]
[58 131]
[59 130]
[60 129]
[61 128]
[62 127]
[63 126]
[67 125]
[68 124]
[69 123]
[70 122]
[75 121]
[76 120]
[77 119]
[78 118]
[82 116]
[83 115]
[89 114]
[90 113]
[91 112]
[92 111]
[94 105]
[95 104]
[96 103]
[97 102]
[151 194]
[152 193]
[153 192]
[154 191]
[156 188]
[157 187]
[158 186]
[159 185]
[160 184]
[161 183]
[162 182]
[166 176]
[167 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
