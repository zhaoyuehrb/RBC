%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:28:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUUUUGCUUUUUCUGGCGGGAAAAGCUCACGCGCACCUCCCCCAACUCAACUGCCGUUCGUCGUUCGUGGAUGUCCGUUGUGUCCCGAGACUAGGACGUGGCUCCAGGAGUGCUCGGGCCAGCUGGUCCUUUUCCCAUCCCUCCCCAUGAAGGAGGGAGGCUGGUAGCUUUGCCAGCAGCUGCGCCGCGGCAGGGGUGGCCC\
) } def
/len { sequence length } bind def

/coor [
[9.44659424 310.28433228]
[7.81795597 319.66497803]
[4.01944590 328.38003540]
[-1.72667050 335.93627930]
[-9.08809566 341.90768433]
[-17.64171219 345.95959473]
[-26.89789391 347.86743164]
[-36.32854462 347.52914429]
[-45.39721298 344.97061157]
[-53.61151505 357.52151489]
[-61.82581329 370.07244873]
[-70.04011536 382.62335205]
[-78.25440979 395.17425537]
[-86.46871185 407.72515869]
[-94.68300629 420.27606201]
[-102.89730835 432.82696533]
[-111.11161041 445.37786865]
[-114.72629547 461.94201660]
[-131.64373779 463.05398560]
[-137.39547729 447.10552979]
[-123.66251373 437.16357422]
[-115.44821930 424.61267090]
[-107.23391724 412.06176758]
[-99.01961517 399.51086426]
[-90.80532074 386.95996094]
[-82.59101868 374.40905762]
[-74.37672424 361.85812378]
[-66.16242218 349.30722046]
[-57.94812393 336.75631714]
[-68.63951111 318.96389771]
[-68.84529114 298.13320923]
[-58.43362045 280.00445557]
[-40.20882797 269.61132812]
[-19.15644073 269.88342285]
[-12.32621002 256.52871704]
[-12.07915688 249.13923645]
[-5.28863144 243.02363586]
[1.74446332 229.77465820]
[8.77755833 216.52568054]
[15.81065273 203.27668762]
[22.84374809 190.02770996]
[9.73090553 197.31147766]
[-5.23825598 198.27282715]
[-19.17509079 192.72624207]
[-29.39016342 181.74205017]
[-33.91223526 167.43992615]
[-31.86867523 152.57978821]
[-23.65382957 140.02923584]
[-10.85294342 132.21020508]
[4.06375265 130.63154602]
[18.21773911 135.59790039]
[28.87767220 146.15089417]
[33.98647690 160.25408936]
[32.55921173 175.18312073]
[41.88598633 163.43530273]
[51.21276093 151.68748474]
[60.53953552 139.93965149]
[69.86631012 128.19183350]
[79.19308472 116.44401550]
[88.51985931 104.69619751]
[85.82465363 97.86343384]
[87.42799377 89.67662811]
[81.84661865 75.75368500]
[67.10718536 64.71903229]
[70.26775360 47.45870972]
[64.47470856 33.62250137]
[58.68165970 19.78629494]
[52.88861465 5.95008802]
[47.09556961 -7.88611889]
[34.62890625 -17.62741852]
[36.85058975 -32.35540009]
[31.05754280 -46.19160461]
[25.26449776 -60.02781296]
[19.47145271 -73.86402130]
[13.26814747 -80.57450867]
[13.69734383 -87.95567322]
[8.11597252 -101.87861633]
[2.53460073 -115.80155182]
[-3.15277314 -129.68153381]
[-8.94581890 -143.51774597]
[-14.73886395 -157.35394287]
[-20.53190994 -171.19015503]
[-32.99856949 -180.93145752]
[-30.77688980 -195.65943909]
[-36.67527008 -209.45106506]
[-42.67864227 -223.19732666]
[-48.68201447 -236.94357300]
[-62.19422913 -246.23616028]
[-60.63316345 -262.56082153]
[-45.60470581 -269.12417603]
[-32.56884766 -259.17437744]
[-34.93576050 -242.94694519]
[-28.93238640 -229.20069885]
[-22.92901421 -215.45443726]
[-17.36893272 -210.58090210]
[-16.94068146 -201.45248413]
[-4.88837862 -192.70083618]
[-6.69570303 -176.98320007]
[-0.90265727 -163.14698792]
[4.89038849 -149.31079102]
[10.68343353 -135.47457886]
[16.16854858 -130.51683044]
[16.45754242 -121.38292694]
[22.03891373 -107.45998383]
[27.62028503 -93.53704071]
[33.30765915 -79.65706635]
[39.10070419 -65.82086182]
[44.89374924 -51.98465347]
[50.68679428 -38.14844513]
[62.73910141 -29.39680290]
[60.93177414 -13.67916489]
[66.72482300 0.15704252]
[72.51786804 13.99324989]
[78.31091309 27.82945633]
[84.10395813 41.66566467]
[95.17661285 46.54241180]
[100.11496735 58.02542877]
[95.76956177 70.17231750]
[101.35093689 84.09525299]
[113.77511597 92.50000000]
[128.77511597 92.50000000]
[143.77511597 92.50000000]
[158.77467346 92.38562012]
[173.77293396 92.15687561]
[188.77119446 91.92812347]
[203.76945496 91.69937897]
[218.76770020 91.47063446]
[233.76596069 91.24188232]
[218.78648376 90.45758057]
[206.09042358 82.46944427]
[198.90028381 69.30502319]
[199.04106140 54.30568695]
[206.47700500 41.27853394]
[219.32075500 33.53010178]
[234.31231689 33.02707672]
[247.64656067 39.89714050]
[255.93902588 52.39654541]
[257.08505249 67.35190582]
[271.97357178 65.52639008]
[280.11434937 61.37437820]
[287.10281372 63.78834152]
[302.01742554 62.19008255]
[316.93203735 60.59182739]
[331.84664917 58.99356842]
[346.76126099 57.39531326]
[361.67584229 55.79705429]
[376.59045410 54.19879532]
[385.15771484 41.11689758]
[400.14434814 36.65202713]
[414.47412109 42.91236496]
[421.38095093 56.94196320]
[417.60363770 72.11648560]
[404.92575073 81.27097321]
[389.33334351 80.08296967]
[378.18872070 69.11340332]
[363.27410889 70.71166229]
[348.35949707 72.30992126]
[333.44488525 73.90818024]
[318.53027344 75.50643921]
[303.61569214 77.10469055]
[288.70108032 78.70294952]
[273.79907227 80.41488647]
[258.91058350 82.24040222]
[255.95617676 96.94657898]
[268.98452759 104.38044739]
[282.01284790 111.81431580]
[295.04119873 119.24818420]
[308.06954956 126.68204498]
[321.09786987 134.11592102]
[337.48513794 133.49151611]
[345.98931885 147.51332092]
[337.86203003 161.75689697]
[321.46395874 161.56967163]
[313.66400146 147.14425659]
[300.63568115 139.71038818]
[287.60733032 132.27651978]
[274.57897949 124.84265137]
[261.55065918 117.40878296]
[248.52230835 109.97492218]
[233.99470520 106.24014282]
[218.99644470 106.46888733]
[203.99819946 106.69763184]
[188.99993896 106.92638397]
[174.00167847 107.15512848]
[159.00343323 107.38388062]
[152.36070251 110.63040161]
[143.77511597 107.50000000]
[128.77511597 107.50000000]
[113.77511597 107.50000000]
[100.26767731 114.02297211]
[90.94090271 125.77079010]
[81.61412811 137.51861572]
[72.28735352 149.26643372]
[62.96058273 161.01425171]
[53.63380432 172.76206970]
[44.30702972 184.50988770]
[36.09273148 197.06080627]
[29.05963707 210.30978394]
[22.02654266 223.55876160]
[14.99344730 236.80775452]
[7.96035242 250.05673218]
[1.02848744 263.35897827]
[-5.80174446 276.71365356]
[0.96485138 283.49111938]
[5.92636442 291.66644287]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 29]
[10 28]
[11 27]
[12 26]
[13 25]
[14 24]
[15 23]
[16 22]
[17 21]
[34 203]
[35 202]
[37 201]
[38 200]
[39 199]
[40 198]
[41 197]
[54 196]
[55 195]
[56 194]
[57 193]
[58 192]
[59 191]
[60 190]
[62 119]
[63 118]
[65 115]
[66 114]
[67 113]
[68 112]
[69 111]
[71 109]
[72 108]
[73 107]
[74 106]
[76 105]
[77 104]
[78 103]
[79 101]
[80 100]
[81 99]
[82 98]
[84 96]
[85 94]
[86 93]
[87 92]
[120 189]
[121 188]
[122 187]
[123 185]
[124 184]
[125 183]
[126 182]
[127 181]
[128 180]
[138 163]
[139 162]
[141 161]
[142 160]
[143 159]
[144 158]
[145 157]
[146 156]
[147 155]
[164 179]
[165 178]
[166 177]
[167 176]
[168 175]
[169 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
