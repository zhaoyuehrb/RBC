%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:53:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAGAGCUUGGCGAUACAGAAAUUUCUGCUGGUGUUGGGGCGGGUGCGGGAACUGAAGACGGGCGAGUGCGAGCCGGGGGCGGGUGCUGGGGAAGGGUAAGCGGGAAGCGAGGGCGAGGGGUAGGGGCUGGGGAAGGGCGAGCGGGAGGCGCGGGCUCUCUCUAGCAGGGGGCUGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[224.21273804 180.14120483]
[206.20999146 181.17948914]
[189.14678955 175.24275208]
[175.62590027 163.20921326]
[167.72023010 146.88909912]
[166.65501404 128.75245667]
[152.34167480 124.26601410]
[138.02833557 119.77957153]
[123.71498871 115.29312897]
[109.40164185 110.80669403]
[95.71576691 113.66823578]
[86.11192322 103.50665283]
[73.48091888 115.69210815]
[56.50844574 119.79706573]
[39.87509537 114.78193665]
[28.12131310 102.10958862]
[24.40800285 85.32010651]
[9.94757175 81.33313751]
[-4.51286077 77.34616852]
[-12.21943855 84.79182434]
[-22.24991989 88.32609558]
[-32.76061249 87.37076569]
[-41.84908676 82.16637421]
[-47.89851379 73.71638489]
[-49.86518478 63.59437561]
[-64.09851074 58.86019135]
[-78.33183289 54.12600327]
[-92.56515503 49.39181900]
[-106.79847717 44.65763092]
[-121.03179932 39.92344284]
[-134.63563538 49.95323563]
[-151.37106323 49.90867996]
[-164.65505981 40.00502777]
[-169.37997437 24.29682541]
[-183.69331360 19.81038666]
[-198.00666809 15.32394600]
[-213.48930359 18.57947922]
[-223.31976318 7.38969326]
[-238.80239868 10.64522743]
[-248.63285828 -0.54455906]
[-262.94619751 -5.03099918]
[-276.82821655 2.03496122]
[-291.28005981 -2.71882582]
[-297.93081665 -15.99673748]
[-312.24417114 -20.48317719]
[-327.72680664 -17.22764397]
[-337.55728149 -28.41743088]
[-351.87060547 -32.90386963]
[-362.66616821 -22.05423737]
[-377.27072144 -17.47537422]
[-392.32821655 -20.21946907]
[-404.37860107 -29.65595055]
[-410.65274048 -43.61638260]
[-409.70889282 -58.89276123]
[-401.76397705 -71.97468567]
[-388.64364624 -79.85602570]
[-373.36285400 -80.72570801]
[-359.43304443 -74.38388824]
[-350.05514526 -62.28786469]
[-347.38418579 -47.21721649]
[-333.07083130 -42.73077393]
[-318.61196899 -46.30720901]
[-307.75772095 -34.79652405]
[-293.44439697 -30.31008339]
[-280.40441895 -37.41603851]
[-265.82473755 -33.07004929]
[-258.45977783 -19.34434509]
[-244.14642334 -14.85790443]
[-229.68756104 -18.43433762]
[-218.83331299 -6.92365217]
[-204.37446594 -10.50008583]
[-193.52021790 1.01060057]
[-179.20687866 5.49704075]
[-164.89352417 9.98348045]
[-154.94653320 1.05615079]
[-141.78021240 -1.80666530]
[-128.81755066 2.24893904]
[-119.48291779 12.26383209]
[-116.29761505 25.69012070]
[-102.06429291 30.42430878]
[-87.83097076 35.15849304]
[-73.59764099 39.89268112]
[-59.36432266 44.62686920]
[-45.13100052 49.36105347]
[-28.43434143 39.36854935]
[-9.46799278 44.92155457]
[-0.52589333 62.88573837]
[13.93453884 66.87270355]
[28.39496994 70.85967255]
[36.40763474 61.05364609]
[47.57939529 54.99230957]
[60.26129150 53.61064911]
[72.56612396 57.14992523]
[82.64926910 65.11645508]
[88.98523712 76.35014343]
[90.59835815 89.19330597]
[104.28423309 86.33176422]
[113.88807678 96.49334717]
[128.20143127 100.97978210]
[142.51477051 105.46622467]
[156.82810974 109.95266724]
[171.14146423 114.43910217]
[178.03552246 104.38199615]
[187.29107666 96.46640778]
[198.26985168 91.22837067]
[210.21725464 89.01959229]
[222.31433105 89.98387146]
[233.73376465 94.04775238]
[243.69657898 100.92605591]
[251.52522278 110.14191437]
[256.68963623 121.05976868]
[258.84317017 132.92924500]
[257.84576416 144.93672180]
[271.81338501 150.40528870]
[285.78103638 155.87387085]
[297.90756226 151.42808533]
[309.43884277 156.29071045]
[314.39132690 167.34548950]
[330.09786987 165.44418335]
[338.92144775 177.44390869]
[352.79205322 183.15408325]
[366.66268921 188.86425781]
[379.64111328 178.64027405]
[395.91030884 176.36161804]
[411.02456665 182.55549622]
[420.90188599 195.44692993]
[422.92614746 211.46611023]
[436.89379883 216.93467712]
[450.86141968 222.40325928]
[464.82904053 227.87182617]
[478.79669189 233.34040833]
[492.76431274 238.80897522]
[506.73193359 244.27754211]
[520.69958496 249.74612427]
[529.85900879 249.96420288]
[534.86083984 255.43272400]
[548.73144531 261.14288330]
[562.60205078 266.85305786]
[576.47265625 272.56323242]
[590.91485596 266.72708130]
[604.90026855 272.71560669]
[610.37518311 286.52001953]
[624.24578857 292.23019409]
[638.11639404 297.94033813]
[653.41839600 293.12084961]
[666.64611816 302.19873047]
[667.65228271 318.21020508]
[655.66516113 328.87261963]
[639.88012695 326.00674438]
[632.40618896 311.81097412]
[618.53558350 306.10079956]
[604.66497803 300.39062500]
[591.05816650 306.33959961]
[576.91003418 300.74624634]
[570.76251221 286.43383789]
[556.89184570 280.72366333]
[543.02124023 275.01351929]
[529.15063477 269.30334473]
[515.23101807 263.71374512]
[501.26336670 258.24517822]
[487.29574585 252.77661133]
[473.32809448 247.30802917]
[459.36047363 241.83946228]
[445.39285278 236.37088013]
[431.42520142 230.90231323]
[417.45758057 225.43374634]
[407.35977173 234.65025330]
[394.21127319 238.63047791]
[380.56628418 236.54156494]
[369.10128784 228.73545837]
[362.08996582 216.69119263]
[360.95251465 202.73486328]
[347.08187866 197.02470398]
[333.21127319 191.31452942]
[318.49685669 193.62426758]
[308.68115234 181.21611023]
[291.45169067 184.48869324]
[280.31246948 169.84149170]
[266.34481812 164.37292480]
[252.37719727 158.90435791]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 102]
[7 101]
[8 100]
[9 99]
[10 98]
[12 96]
[17 89]
[18 88]
[19 87]
[25 84]
[26 83]
[27 82]
[28 81]
[29 80]
[30 79]
[34 74]
[35 73]
[36 72]
[38 70]
[40 68]
[41 67]
[44 64]
[45 63]
[47 61]
[48 60]
[113 180]
[114 179]
[115 178]
[118 176]
[120 174]
[121 173]
[122 172]
[127 166]
[128 165]
[129 164]
[130 163]
[131 162]
[132 161]
[133 160]
[134 159]
[136 158]
[137 157]
[138 156]
[139 155]
[142 152]
[143 151]
[144 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
