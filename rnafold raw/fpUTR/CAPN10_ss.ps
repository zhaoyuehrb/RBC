%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:20:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCCUGGUUACCAAUGGGAGACUAGCGGGCCGGCGUACUGGCCUGGUCCAGCACCUGCGGGGCCCUCGGGCUUGGAGGGCUGGGCCGGGCGGGGAACGGGCGGGGCGGGCCGGAGGCGGCGGCGGCUGACUCGCCUUCUCUCCGGGGCUGCGACCCCGAGGCAACCGGCUGCAGAUGGGAGCCCGCGGAGCCGAGG\
) } def
/len { sequence length } bind def

/coor [
[59.97717285 251.11557007]
[53.49972153 264.64489746]
[47.02227020 278.17422485]
[46.13668823 287.27752686]
[40.33213806 291.86639404]
[33.63976288 305.29071045]
[26.94739151 318.71502686]
[20.25502014 332.13934326]
[13.56264687 345.56362915]
[14.33011627 361.36621094]
[1.72721076 369.30447388]
[-4.96516180 382.72879028]
[-3.42376399 399.05535889]
[-16.94716454 408.33163452]
[-31.62364960 401.01501465]
[-32.35530853 384.63220215]
[-18.38947296 376.03643799]
[-11.69710159 362.61212158]
[-12.94325352 347.76974487]
[0.13833478 338.87127686]
[6.83070755 325.44696045]
[13.52307987 312.02264404]
[20.21545219 298.59832764]
[26.90782547 285.17401123]
[33.49294662 271.69677734]
[39.97039795 258.16744995]
[46.44784927 244.63812256]
[52.38090897 230.86137390]
[57.76015091 216.85910034]
[63.13938904 202.85682678]
[68.40681458 188.81210327]
[65.51499939 174.20091248]
[77.52388763 163.90057373]
[82.67916107 149.81430054]
[87.83442688 135.72801208]
[73.41286469 124.01100922]
[66.95885468 107.61280823]
[69.27119446 91.10972595]
[56.24113464 83.67888641]
[40.42034531 83.56359100]
[33.19750977 70.53746796]
[20.16744614 63.10662842]
[7.13738012 55.67578888]
[-5.89268494 48.24494553]
[-18.92275047 40.81410599]
[-31.95281601 33.38326645]
[-44.98287964 25.95242310]
[-58.01294708 18.52158356]
[-71.04301453 11.09074211]
[-84.07307434 3.65990067]
[-97.10314178 -3.77094030]
[-110.13320923 -11.20178127]
[-119.14956665 -12.73779488]
[-123.31044769 -18.85643387]
[-136.22036743 -26.49411392]
[-149.13027954 -34.13179398]
[-158.12098694 -35.81139374]
[-162.18377686 -41.99560547]
[-177.99284363 -42.61534500]
[-184.79661560 -55.86517334]
[-197.58308411 -63.70774841]
[-210.36956787 -71.55032349]
[-223.15603638 -79.39290619]
[-235.94252014 -87.23548126]
[-252.34132385 -87.13016510]
[-260.39733887 -101.41415405]
[-251.82324219 -115.39331055]
[-235.43931580 -114.68707275]
[-228.09994507 -100.02195740]
[-215.31346130 -92.17938232]
[-202.52699280 -84.33679962]
[-189.74050903 -76.49422455]
[-176.95402527 -68.65164948]
[-162.05953979 -68.59286499]
[-154.34120178 -54.78208160]
[-141.49259949 -47.04170609]
[-128.58268738 -39.40402603]
[-115.67276764 -31.76634598]
[-102.70236969 -24.23184586]
[-89.67230225 -16.80100632]
[-76.64223480 -9.37016487]
[-63.61217117 -1.93932343]
[-50.58210373 5.49151754]
[-37.55204010 12.92235851]
[-24.52197456 20.35319901]
[-11.49190903 27.78404045]
[1.53815615 35.21488190]
[14.56822109 42.64572144]
[27.59828568 50.07656479]
[40.62835312 57.50740433]
[55.51713943 57.09119415]
[63.67197418 70.64881897]
[76.70204163 78.07965851]
[86.37978363 71.05546570]
[97.96084595 68.07605743]
[109.82686615 69.55777740]
[120.31965637 75.29357147]
[132.29838562 66.26528168]
[144.27713013 57.23699570]
[156.25585938 48.20870972]
[161.23292542 40.53518677]
[168.49836731 39.13377762]
[171.07710266 23.77187920]
[183.49557495 14.98346901]
[198.12490845 17.53656960]
[210.24607849 8.70044899]
[222.36726379 -0.13567105]
[234.48843384 -8.97179127]
[241.55201721 -25.97151947]
[259.05551147 -27.16428566]
[271.03424072 -36.19256973]
[283.01296997 -45.22085953]
[294.99169922 -54.24914551]
[306.97042847 -63.27743149]
[318.94915771 -72.30571747]
[330.92788696 -81.33400726]
[335.90496826 -89.00753021]
[343.17041016 -90.40893555]
[355.29156494 -99.24505615]
[361.88534546 -113.62673950]
[376.72784424 -114.87170410]
[388.84902954 -123.70782471]
[400.97018433 -132.54394531]
[413.09136963 -141.38006592]
[425.21255493 -150.21618652]
[429.10748291 -165.77925110]
[443.76284790 -172.30610657]
[457.93630981 -164.78991699]
[460.75515747 -148.99645996]
[450.05706787 -137.04110718]
[434.04867554 -138.09500122]
[421.92749023 -129.25888062]
[409.80630493 -120.42276764]
[397.68515015 -111.58664703]
[385.56396484 -102.75052643]
[379.83715820 -89.00086212]
[364.12768555 -87.12387848]
[352.00653076 -78.28775787]
[339.95617676 -69.35527039]
[327.97744751 -60.32698441]
[315.99871826 -51.29869843]
[304.01998901 -42.27041245]
[292.04125977 -33.24212646]
[280.06253052 -24.21383858]
[268.08377075 -15.18555164]
[266.08819580 -3.24740124]
[256.17230225 4.37128115]
[243.32455444 3.14938831]
[231.20338440 11.98550797]
[219.08219910 20.82162857]
[206.96102905 29.65774727]
[204.91535950 44.36661911]
[192.74862671 53.50037003]
[177.33448792 51.25495529]
[165.28414917 60.18744278]
[153.30541992 69.21572876]
[141.32667542 78.24401855]
[129.34794617 87.27230072]
[134.26777649 106.42945862]
[126.82797241 126.54716492]
[137.72640991 136.85366821]
[148.62484741 147.16018677]
[164.19941711 146.89418030]
[175.10516357 157.50169373]
[175.26277161 172.35130310]
[186.16120911 182.65780640]
[197.05964661 192.96430969]
[212.28663635 189.97793579]
[226.34666443 196.54261780]
[233.83335876 210.13412476]
[231.86795044 225.52622986]
[221.20616150 236.80035400]
[205.94767761 239.62136841]
[191.95968628 232.90454102]
[184.62086487 219.23262024]
[186.75314331 203.86274719]
[175.85470581 193.55624390]
[164.95626831 183.24974060]
[150.12098694 183.92077637]
[138.92160034 173.62376404]
[138.31834412 158.05862427]
[127.41990662 147.75210571]
[116.52146912 137.44560242]
[101.92070770 140.88328552]
[96.76543427 154.96955872]
[91.61016846 169.05584717]
[94.13323975 184.67457581]
[82.49308777 193.96737671]
[82.48126221 203.11361694]
[77.14167023 208.23606873]
[71.76242828 222.23834229]
[66.38318634 236.24061584]
[80.95587158 232.68577576]
[92.92066193 241.73254395]
[93.47139740 256.72241211]
[82.20274353 266.62280273]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 27]
[2 26]
[3 25]
[5 24]
[6 23]
[7 22]
[8 21]
[9 20]
[11 18]
[12 17]
[28 192]
[29 191]
[30 190]
[31 188]
[33 186]
[34 185]
[35 184]
[38 93]
[39 92]
[41 90]
[42 89]
[43 88]
[44 87]
[45 86]
[46 85]
[47 84]
[48 83]
[49 82]
[50 81]
[51 80]
[52 79]
[54 78]
[55 77]
[56 76]
[58 75]
[60 73]
[61 72]
[62 71]
[63 70]
[64 69]
[97 158]
[98 157]
[99 156]
[100 155]
[102 154]
[105 151]
[106 150]
[107 149]
[108 148]
[110 145]
[111 144]
[112 143]
[113 142]
[114 141]
[115 140]
[116 139]
[118 138]
[119 137]
[121 135]
[122 134]
[123 133]
[124 132]
[125 131]
[160 183]
[161 182]
[162 181]
[165 178]
[166 177]
[167 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
