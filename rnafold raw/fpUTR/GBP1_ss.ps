%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:04:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGUCAGUGAUUUGAACGAAGUACUUUCAGUUUCAUAUUACUCUAAAUCCAUUACAAAUCUGCUUAGCUUCUAAAUAUUUCAUCAAUGAGGAAAUCCCAGCCCUACAACUUCGGAACAGUGAAAUAUUAGUCCAGGGAUCCAGUGAGAGACACAGAAGUGCUAGAAGCCAGUGCUCGUGAACUAAGGAGAAAAAGAACAGACAAGGGAACAGCCUGGAC\
) } def
/len { sequence length } bind def

/coor [
[80.13500977 132.92347717]
[70.02957916 144.00860596]
[59.92414093 155.09375000]
[64.11047363 172.74176025]
[56.92282104 189.22302246]
[41.41508102 198.00767517]
[23.89564514 195.73939514]
[14.10941029 207.10731506]
[4.32317495 218.47523499]
[-5.46306038 229.84315491]
[-15.24929523 241.21107483]
[-25.03553009 252.57899475]
[-28.17517853 268.08554077]
[-42.34244919 272.68313599]
[-52.12868500 284.05105591]
[-61.91492081 295.41897583]
[-71.70115662 306.78689575]
[-81.40634155 318.22406006]
[-90.94797516 329.79806519]
[-100.40710449 341.43957520]
[-109.86622620 353.08111572]
[-109.65261841 369.12274170]
[-122.15211487 379.17968750]
[-137.77616882 375.53710938]
[-144.53935242 360.98928833]
[-137.25352478 346.69607544]
[-121.50774384 343.62197876]
[-112.04862213 331.98046875]
[-102.58949280 320.33892822]
[-100.81231689 313.17083740]
[-92.91222382 308.60043335]
[-91.03334045 301.45831299]
[-83.06907654 297.00064087]
[-73.28284454 285.63272095]
[-63.49660492 274.26480103]
[-53.71036911 262.89688110]
[-51.27069855 248.20344543]
[-36.40345001 242.79277039]
[-26.61721420 231.42485046]
[-16.83098030 220.05693054]
[-7.04474497 208.68901062]
[2.74149013 197.32109070]
[12.52772522 185.95317078]
[8.02109432 174.68974304]
[8.73230362 162.50677490]
[14.58773518 151.71740723]
[24.53125381 144.39624023]
[36.71421051 141.98049927]
[48.83900833 144.98831177]
[58.94444275 133.90318298]
[69.04988098 122.81804657]
[64.64463806 115.11857605]
[62.12096405 106.61452484]
[61.61317062 97.75844574]
[63.14827728 89.02166748]
[66.64459229 80.86914062]
[71.91603851 73.73473358]
[78.68207550 67.99813080]
[86.58263397 63.96463394]
[95.19725037 61.84889603]
[96.26250458 46.88676834]
[97.32775879 31.92464256]
[98.28663635 16.95532227]
[99.13909912 1.97956514]
[96.79598236 -2.66846037]
[96.49514771 -7.28922081]
[97.88541412 -11.11093426]
[100.36063385 -13.61230087]
[101.85077667 -28.53809929]
[103.34092712 -43.46389771]
[104.83107758 -58.38969421]
[106.32122803 -73.31549072]
[107.81137848 -88.24129486]
[97.46970367 -95.24896240]
[91.12306976 -105.92511749]
[89.92189789 -118.21456146]
[94.03287506 -129.78160095]
[102.61891174 -138.45399475]
[114.00875854 -142.63082886]
[115.92259979 -157.50822449]
[117.83644104 -172.38563538]
[119.75028229 -187.26304626]
[117.74227905 -196.16630554]
[121.79852295 -202.33775330]
[123.92365265 -217.18644714]
[126.04878235 -232.03515625]
[117.20887756 -239.97140503]
[113.33397675 -251.07458496]
[115.27648926 -262.55145264]
[122.44045258 -271.57333374]
[132.95761108 -275.97329712]
[135.50398254 -290.75558472]
[138.05035400 -305.53787231]
[136.13014221 -311.85195923]
[137.47926331 -317.36300659]
[140.88494873 -320.70166016]
[143.85050964 -335.40557861]
[146.81607056 -350.10952759]
[149.78161621 -364.81344604]
[144.92538452 -379.87091064]
[155.02619934 -390.81729126]
[146.54774475 -403.88455200]
[149.76470947 -418.75418091]
[162.27459717 -426.75656128]
[165.24015808 -441.46047974]
[168.20571899 -456.16442871]
[156.80116272 -466.35671997]
[152.06079102 -480.79370117]
[155.16255188 -495.56683350]
[165.17543030 -506.72918701]
[179.33576965 -511.34982300]
[182.30133057 -526.05377197]
[185.26687622 -540.75769043]
[188.23243713 -555.46160889]
[179.27943420 -568.48541260]
[182.24003601 -584.00994873]
[195.35775757 -592.82470703]
[210.85009766 -589.70013428]
[219.52572632 -576.48999023]
[216.23753357 -561.03155518]
[202.93637085 -552.49603271]
[199.97080994 -537.79211426]
[197.00524902 -523.08819580]
[194.03968811 -508.38427734]
[205.30209351 -498.63626099]
[210.20565796 -484.46548462]
[207.33883667 -469.64495850]
[197.37322998 -458.17398071]
[182.90963745 -453.19885254]
[179.94409180 -438.49493408]
[176.97853088 -423.79101562]
[185.40873718 -411.56533813]
[182.61070251 -396.61120605]
[169.73013306 -387.85171509]
[174.79847717 -373.84597778]
[164.48554993 -361.84786987]
[161.51998901 -347.14395142]
[158.55444336 -332.44003296]
[155.58888245 -317.73611450]
[152.83264160 -302.99151611]
[150.28627014 -288.20922852]
[147.73989868 -273.42694092]
[159.17936707 -259.12838745]
[156.48086548 -240.69375610]
[140.89747620 -229.91001892]
[138.77235413 -215.06132507]
[136.64721680 -200.21263123]
[134.62768555 -185.34919739]
[132.71385193 -170.47178650]
[130.80000305 -155.59439087]
[128.88616943 -140.71697998]
[142.28370667 -129.20257568]
[146.11564636 -111.79635620]
[138.66165161 -95.43383026]
[122.73717499 -86.75114441]
[121.24702454 -71.82534027]
[119.75688171 -56.89954376]
[118.26673126 -41.97374725]
[116.77658081 -27.04794884]
[115.28643036 -12.12215042]
[114.11485291 2.83202672]
[113.26239777 17.80778313]
[116.01846313 24.65935135]
[112.28987885 32.98989487]
[111.22462463 47.95202255]
[110.15937805 62.91415024]
[130.10636902 76.07972717]
[138.42242432 98.48638153]
[131.89479065 121.47779846]
[142.46362305 132.12202454]
[153.03247070 142.76625061]
[163.60130310 153.41047668]
[171.86203003 157.29129028]
[174.24339294 164.28193665]
[184.65985107 175.07531738]
[195.07632446 185.86871338]
[203.28105164 189.86656189]
[205.56278992 196.89035034]
[215.82476807 207.83070374]
[229.24253845 206.70841980]
[240.69087219 213.41886902]
[246.10588074 225.32041931]
[243.71556091 237.97766113]
[253.82098389 249.06278992]
[269.37249756 249.95065308]
[279.46292114 261.33651733]
[278.52066040 276.15704346]
[292.66287231 270.64685059]
[307.84060669 270.62142944]
[322.00122070 276.08419800]
[333.22955322 286.29638672]
[340.00711060 299.87683105]
[341.41729736 314.98895264]
[337.26934814 329.58892822]
[328.12426758 341.70220947]
[315.21884155 349.69061279]
[300.29843140 352.47375488]
[285.38088989 349.67523193]
[272.48370361 341.67352295]
[263.35110474 329.55081177]
[259.21823120 314.94659424]
[260.64395142 299.83593750]
[267.43551636 286.26245117]
[252.59127808 285.83325195]
[242.18502808 274.73532104]
[242.73585510 259.16821289]
[232.63041687 248.08309937]
[215.80940247 248.02272034]
[204.00679016 235.56759644]
[204.88441467 218.09269714]
[194.62242126 207.15232849]
[184.28292847 196.28517151]
[173.86647034 185.49179077]
[163.44999695 174.69841003]
[152.95707703 163.97932434]
[142.38824463 153.33509827]
[131.81939697 142.69087219]
[121.25055695 132.04663086]
[111.48937225 136.69560242]
[100.81985474 138.44348145]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 51]
[2 50]
[3 49]
[7 43]
[8 42]
[9 41]
[10 40]
[11 39]
[12 38]
[14 36]
[15 35]
[16 34]
[17 33]
[18 31]
[19 29]
[20 28]
[21 27]
[60 166]
[61 165]
[62 164]
[63 162]
[64 161]
[68 160]
[69 159]
[70 158]
[71 157]
[72 156]
[73 155]
[79 151]
[80 150]
[81 149]
[82 148]
[84 147]
[85 146]
[86 145]
[91 142]
[92 141]
[93 140]
[96 139]
[97 138]
[98 137]
[99 136]
[101 134]
[104 131]
[105 130]
[106 129]
[111 124]
[112 123]
[113 122]
[114 121]
[169 218]
[170 217]
[171 216]
[172 215]
[174 214]
[175 213]
[176 212]
[178 211]
[179 210]
[183 207]
[184 206]
[187 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
