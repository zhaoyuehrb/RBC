%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:58:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCGCUUGCGCGCUGGGGACAACCGUUGCUGGGUGUCCCAGGGCCUGAGGCAGGACGGUACUCCGCUGACACCUUCCCUUUCGGCCUUGAGGUUCCCAGCCUGGUGGCCCCAGGACGUUCCGGUCGCAUGGCAGAGUGCUACGGACGACGCCUAUGAAGCCCUUAGUCCUUCUAGUUGCGCUUUUGCU\
) } def
/len { sequence length } bind def

/coor [
[316.75476074 255.44551086]
[313.54977417 242.93974304]
[301.12966919 234.52902222]
[288.70953369 226.11828613]
[276.28939819 217.70756531]
[263.80014038 209.39981079]
[251.24264526 201.19558716]
[231.92041016 201.56449890]
[223.05754089 183.47200012]
[210.23564148 175.68745422]
[197.41375732 167.90292358]
[183.05122375 171.67828369]
[169.93711853 163.96630859]
[166.07453918 148.87596130]
[153.25265503 141.09141541]
[140.43075562 133.30688477]
[127.60887146 125.52233887]
[114.78697968 117.73779297]
[101.96508789 109.95324707]
[93.97299957 108.79067993]
[88.99706268 101.93251038]
[73.19657135 101.12306976]
[66.55231476 87.79253387]
[53.86088943 79.79705811]
[41.16946030 71.80158234]
[28.47803116 63.80611038]
[15.73815632 65.89458466]
[5.32790375 58.95929718]
[2.53377914 47.17829132]
[-10.02371788 38.97407150]
[-22.58121490 30.76984787]
[-35.13871384 22.56562614]
[-47.69620895 14.36140251]
[-60.25370789 6.15718079]
[-76.03865051 5.08661032]
[-82.46159363 -8.35195637]
[-91.37497711 -10.43185711]
[-95.15734100 -16.79707909]
[-107.57746887 -25.20780563]
[-120.06671143 -33.51556396]
[-132.62420654 -41.71978378]
[-145.18170166 -49.92400742]
[-157.73921204 -58.12823105]
[-170.29670715 -66.33245087]
[-182.85420227 -74.53667450]
[-195.41169739 -82.74089813]
[-213.80842590 -83.32036591]
[-221.13084412 -99.26028442]
[-233.82226562 -107.25576019]
[-246.51370239 -115.25123596]
[-259.20510864 -123.24671173]
[-277.60891724 -123.52193451]
[-285.19387817 -139.33860779]
[-298.01577759 -147.12315369]
[-310.83764648 -154.90769958]
[-330.97854614 -154.42422485]
[-339.56536865 -171.73754883]
[-352.63763428 -179.09390259]
[-365.70989990 -186.45025635]
[-378.78216553 -193.80661011]
[-394.55712891 -190.88589478]
[-406.58123779 -201.50662231]
[-405.63067627 -217.52148438]
[-392.43460083 -226.64524841]
[-377.11593628 -221.87895203]
[-371.42581177 -206.87887573]
[-358.35354614 -199.52252197]
[-345.28128052 -192.16616821]
[-332.20901489 -184.80981445]
[-322.63461304 -188.44204712]
[-312.42947388 -186.14709473]
[-305.02691650 -178.44900513]
[-303.05313110 -167.72958374]
[-290.23123169 -159.94503784]
[-277.40933228 -152.16049194]
[-265.57659912 -154.72673035]
[-254.82635498 -148.33110046]
[-251.20964050 -135.93814087]
[-238.51821899 -127.94266510]
[-225.82679749 -119.94718933]
[-213.13536072 -111.95171356]
[-201.26181030 -114.32194519]
[-190.61878967 -107.74946594]
[-187.20747375 -95.29839325]
[-174.64997864 -87.09416962]
[-162.09248352 -78.88994598]
[-149.53498840 -70.68572998]
[-136.97747803 -62.48150635]
[-124.41999054 -54.27728271]
[-111.86248779 -46.07305908]
[-104.53002930 -45.04477692]
[-99.16674805 -37.62793732]
[-86.74661255 -29.21721077]
[-74.25737000 -20.90945244]
[-59.37062454 -20.42570305]
[-52.04948425 -6.40031672]
[-39.49198532 1.80390573]
[-26.93449020 10.00812817]
[-14.37699318 18.21235085]
[-1.81949568 26.41657257]
[10.73800182 34.62079620]
[28.27933693 34.63343811]
[36.47350693 51.11468124]
[49.16493607 59.11015701]
[61.85636520 67.10562897]
[74.54779053 75.10110474]
[89.44050598 75.33865356]
[96.99253845 89.24108124]
[109.74963379 97.13135529]
[122.57152557 104.91590118]
[135.39341736 112.70044708]
[148.21530151 120.48498535]
[161.03720093 128.26953125]
[173.85908508 136.05407715]
[189.02954102 132.51924133]
[201.92187500 140.59652710]
[205.19830322 155.08102417]
[218.02018738 162.86557007]
[230.84208679 170.65011597]
[241.26318359 167.45600891]
[251.50820923 170.47227478]
[258.25241089 178.46777344]
[259.44686890 188.63809204]
[272.00436401 196.84231567]
[280.91775513 198.92221069]
[284.70010376 205.28742981]
[297.12023926 213.69815063]
[309.54037476 222.10888672]
[321.96051025 230.51960754]
[340.34515381 231.40316772]
[347.40301514 247.46197510]
[359.96051025 255.66619873]
[372.51800537 263.87042236]
[385.07550049 272.07464600]
[397.63299561 280.27886963]
[410.19049072 288.48309326]
[422.81539917 296.58322144]
[435.50680542 304.57870483]
[448.19824219 312.57415771]
[460.88967896 320.56964111]
[476.69015503 321.37908936]
[483.33441162 334.70962524]
[496.02584839 342.70507812]
[509.03683472 350.16925049]
[522.34521484 357.08938599]
[535.65356445 364.00949097]
[548.96185303 370.92962646]
[564.91900635 362.35125732]
[582.67767334 365.03152466]
[595.17187500 377.71353149]
[597.54461670 395.19900513]
[611.07452393 401.67532349]
[625.23724365 395.04583740]
[640.33453369 399.12091064]
[649.23785400 411.97644043]
[647.74334717 427.54244995]
[636.55664062 438.46911621]
[620.95983887 439.59722900]
[608.31719971 430.39410400]
[604.59820557 415.20520020]
[591.06829834 408.72888184]
[581.34857178 416.03585815]
[569.37219238 418.52468872]
[557.40539551 415.66165161]
[547.73944092 407.93167114]
[542.25177002 396.75744629]
[542.04174805 384.23794556]
[528.73339844 377.31784058]
[515.42504883 370.39773560]
[502.11672974 363.47760010]
[503.97302246 378.36230469]
[493.61526489 389.21206665]
[478.66052246 388.04803467]
[470.10635376 375.72625732]
[474.24343872 361.30807495]
[488.03036499 355.39651489]
[475.33895874 347.40103149]
[460.44622803 347.16348267]
[452.89419556 333.26107788]
[440.20275879 325.26559448]
[427.51135254 317.27011108]
[414.81991577 309.27465820]
[407.47146606 308.36773682]
[401.98626709 301.04058838]
[389.42877197 292.83636475]
[376.87127686 284.63214111]
[364.31378174 276.42791748]
[351.75628662 268.22369385]
[339.19879150 260.01947021]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 129]
[3 128]
[4 127]
[5 126]
[6 124]
[7 123]
[9 119]
[10 118]
[11 117]
[14 114]
[15 113]
[16 112]
[17 111]
[18 110]
[19 109]
[21 108]
[23 106]
[24 105]
[25 104]
[26 103]
[29 101]
[30 100]
[31 99]
[32 98]
[33 97]
[34 96]
[36 94]
[38 93]
[39 92]
[40 90]
[41 89]
[42 88]
[43 87]
[44 86]
[45 85]
[46 84]
[48 81]
[49 80]
[50 79]
[51 78]
[53 75]
[54 74]
[55 73]
[57 69]
[58 68]
[59 67]
[60 66]
[131 189]
[132 188]
[133 187]
[134 186]
[135 185]
[136 184]
[137 182]
[138 181]
[139 180]
[140 179]
[142 177]
[143 176]
[144 170]
[145 169]
[146 168]
[147 167]
[151 161]
[152 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
