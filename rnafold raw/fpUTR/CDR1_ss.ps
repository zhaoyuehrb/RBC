%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:05:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUUGGAAGACAUGAAGAUGCUGGAAGACACAGAGAUGCUGGAAGACGUGGAGAUGUUGGAAGACGAGCAGAUGCUGGAAGCCCUGGAGAUGCUGGAAGACCUGGAGAUAUAGGAAGACAUGGAUUUGUUGGAAGACGUAGCUUAGUUGGAAGACAUAUAUUUUCUGGAAGACGUGGAUUUUCUGGAAGAC\
) } def
/len { sequence length } bind def

/coor [
[93.88678741 136.41688538]
[87.94227600 134.90231323]
[80.26676178 147.78977966]
[72.59124756 160.67723083]
[64.91573334 173.56468201]
[71.79595184 189.00857544]
[68.15682220 205.34928894]
[55.62421417 216.19650269]
[39.26175690 217.42926025]
[31.79702759 230.43994141]
[30.23654556 239.45584106]
[24.10342598 243.60021973]
[16.42791176 256.48767090]
[8.75239563 269.37512207]
[9.07110882 285.77117920]
[-5.10683775 294.01242065]
[-19.19638824 285.62094116]
[-18.70342064 269.22921753]
[-4.13505793 261.69961548]
[3.54045773 248.81216431]
[11.21597290 235.92469788]
[18.78634644 222.97520447]
[26.25107765 209.96452332]
[19.67837906 198.33415222]
[19.71493721 184.86679077]
[26.45823860 173.08427429]
[38.23792648 166.12072754]
[52.02827835 165.88916016]
[59.70379639 153.00170898]
[67.37931061 140.11425781]
[75.05482483 127.22680664]
[66.87571716 116.31999969]
[63.21151733 103.18873596]
[64.56166840 89.62284088]
[70.74214935 77.47138214]
[80.91053772 68.39061737]
[93.68086243 63.61828613]
[94.16910553 48.62623596]
[94.65734863 33.63418198]
[95.02355957 18.63865280]
[95.26771545 3.64064050]
[83.65769196 -3.80481243]
[77.29663086 -15.92045593]
[77.75305939 -29.48848724]
[84.80064392 -40.96466827]
[96.50531006 -47.40414429]
[96.99355316 -62.39619446]
[97.48179626 -77.38824463]
[86.95539856 -88.87008667]
[87.66411591 -104.06720734]
[98.67516327 -114.03176117]
[99.16340637 -129.02381897]
[88.63700867 -140.50564575]
[89.34572601 -155.70277405]
[100.35677338 -165.66732788]
[100.84501648 -180.65937805]
[101.33325958 -195.65142822]
[101.82150269 -210.64347839]
[102.30974579 -225.63552856]
[93.88198853 -230.51057434]
[87.85157013 -238.08038330]
[85.01776123 -247.27378845]
[85.73123932 -256.80941772]
[89.85134888 -265.37426758]
[96.77127075 -271.80453491]
[105.50708771 -275.24362183]
[99.15232849 -289.73251343]
[108.09380341 -301.64465332]
[109.55646515 -316.57318115]
[111.01912689 -331.50170898]
[112.48178864 -346.43020630]
[113.94445801 -361.35873413]
[115.40711975 -376.28726196]
[116.86978149 -391.21575928]
[110.51502228 -405.70465088]
[119.45649719 -417.61679077]
[120.79761505 -432.55673218]
[122.01708984 -447.50704956]
[110.10820007 -454.86044312]
[102.56813812 -466.57333374]
[100.82191467 -480.32675171]
[105.15406036 -493.42660522]
[114.66407776 -503.33172607]
[127.45296478 -508.14657593]
[128.91563416 -523.07507324]
[130.37829590 -538.00360107]
[131.84095764 -552.93212891]
[119.46370697 -561.91827393]
[113.28700256 -575.80157471]
[114.87816620 -590.81268311]
[123.71030426 -602.93084717]
[137.33049011 -608.96044922]
[130.97572327 -623.44934082]
[139.91720581 -635.36145020]
[133.56243896 -649.85034180]
[142.50392151 -661.76251221]
[143.96658325 -676.69104004]
[136.70188904 -691.39324951]
[146.02592468 -704.88378906]
[162.34692383 -703.28472900]
[168.87524414 -688.24096680]
[158.89509583 -675.22833252]
[157.43243408 -660.29986572]
[163.89181519 -646.87872314]
[154.84571838 -633.89880371]
[161.30509949 -620.47772217]
[152.25900269 -607.49780273]
[164.44987488 -598.93927002]
[170.76200867 -585.33734131]
[169.40937805 -570.30279541]
[160.65548706 -557.88238525]
[146.76947021 -551.46948242]
[145.30680847 -536.54095459]
[143.84414673 -521.61242676]
[142.38148499 -506.68389893]
[155.74269104 -497.60836792]
[162.74818420 -482.95059204]
[161.40243530 -466.66641235]
[151.97813416 -453.20373535]
[136.96743774 -446.28759766]
[135.74795532 -431.33724976]
[138.34158325 -424.40441895]
[134.38500977 -416.15411377]
[140.84439087 -402.73303223]
[131.79829407 -389.75311279]
[130.33563232 -374.82458496]
[128.87297058 -359.89605713]
[127.41030884 -344.96755981]
[125.94764709 -330.03903198]
[124.48497772 -315.11050415]
[123.02231598 -300.18200684]
[129.48170471 -286.76089478]
[120.43560028 -273.78097534]
[134.70039368 -259.15939331]
[133.55128479 -238.47091675]
[117.30180359 -225.14729309]
[116.81356049 -210.15524292]
[116.32530975 -195.16317749]
[115.83706665 -180.17112732]
[115.34882355 -165.17907715]
[125.68820190 -154.51921082]
[125.40661621 -139.30818176]
[114.15545654 -128.53556824]
[113.66721344 -113.54351807]
[124.00659180 -102.88364410]
[123.72501373 -87.67261505]
[112.47385406 -76.90000153]
[111.98560333 -61.90795135]
[111.49736023 -46.91590118]
[124.76928711 -37.26677322]
[129.72955322 -21.45145988]
[124.23646545 -5.63728094]
[110.26573181 3.88479495]
[110.02157593 18.88280869]
[113.06079102 25.63218689]
[109.64939880 34.12242508]
[109.16115570 49.11447906]
[108.67291260 64.10652924]
[125.91147614 73.69113922]
[135.75732422 90.78184509]
[135.40136719 110.50254822]
[124.94517517 127.22680664]
[132.62069702 140.11425781]
[140.29620361 153.00170898]
[147.97172546 165.88916016]
[155.64723206 178.77662659]
[163.32275391 191.66407776]
[170.99826050 204.55152893]
[178.67378235 217.43898010]
[186.34930420 230.32643127]
[194.02481079 243.21388245]
[201.70033264 256.10134888]
[209.37583923 268.98880005]
[224.75535583 272.62835693]
[232.98553467 286.12057495]
[229.18356323 301.46072388]
[215.60508728 309.54779053]
[200.30598450 305.58386230]
[192.36293030 291.92065430]
[196.48838806 276.66430664]
[188.81288147 263.77685547]
[181.13735962 250.88940430]
[173.46185303 238.00195312]
[165.78633118 225.11450195]
[158.11080933 212.22703552]
[150.43530273 199.33958435]
[142.75978088 186.45213318]
[135.08427429 173.56468201]
[127.40875244 160.67723083]
[119.73323822 147.78977966]
[112.05772400 134.90231323]
[106.11321259 136.41688538]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 31]
[3 30]
[4 29]
[5 28]
[9 23]
[10 22]
[12 21]
[13 20]
[14 19]
[37 158]
[38 157]
[39 156]
[40 154]
[41 153]
[46 149]
[47 148]
[48 147]
[51 144]
[52 143]
[55 140]
[56 139]
[57 138]
[58 137]
[59 136]
[66 133]
[68 131]
[69 130]
[70 129]
[71 128]
[72 127]
[73 126]
[74 125]
[76 123]
[77 121]
[78 120]
[84 115]
[85 114]
[86 113]
[87 112]
[92 107]
[94 105]
[96 103]
[97 102]
[162 191]
[163 190]
[164 189]
[165 188]
[166 187]
[167 186]
[168 185]
[169 184]
[170 183]
[171 182]
[172 181]
[173 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
