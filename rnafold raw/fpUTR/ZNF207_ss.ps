%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:14:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGCGGGGAACGAGGCCGUCGGCCAUUUUGUGUCUGCUUCCUGUGGGACGUGGUGGUAGCCGUUGGGUUGGGAAAGUGAGGGAUUUUUGGCCUCGUUUCUCCUGCUUCUUUUCUCCUCCCUUUUACUUUGCCGGUAGAACACAGUU\
) } def
/len { sequence length } bind def

/coor [
[311.23107910 298.33294678]
[319.55374146 283.80529785]
[309.00317383 273.14294434]
[298.45263672 262.48059082]
[287.90209961 251.81822205]
[277.35156250 241.15585327]
[266.80099487 230.49348450]
[256.25045776 219.83113098]
[245.69990540 209.16876221]
[235.03755188 198.61822510]
[224.26455688 188.18066406]
[213.49156189 177.74310303]
[202.60913086 167.41970825]
[191.61846924 157.21159363]
[180.62782288 147.00347900]
[169.63716125 136.79536438]
[158.64651489 126.58726501]
[147.65585327 116.37915039]
[136.66519165 106.17104340]
[127.15933228 122.81581879]
[111.26322174 131.82688904]
[93.88953400 131.46331787]
[79.90737152 122.73498535]
[72.77791595 108.87210846]
[58.01816940 106.19819641]
[43.25841904 103.52429199]
[28.49866867 100.85037994]
[13.73891926 98.17647552]
[-1.02083099 95.50256348]
[-15.97922516 100.65591431]
[-27.12339401 90.77377319]
[-41.88314438 88.09986115]
[-56.64289474 85.42595673]
[-65.71448517 86.98017883]
[-71.68421936 82.53694153]
[-86.38431549 79.55245209]
[-101.08441162 76.56795502]
[-115.78450775 73.58346558]
[-130.48460388 70.59897614]
[-144.59931946 78.22486115]
[-159.30487061 71.81185150]
[-163.32038879 56.27946091]
[-153.56553650 43.54281235]
[-137.52337646 43.37236404]
[-127.50010681 55.89887619]
[-112.80001068 58.88336945]
[-98.09991455 61.86786270]
[-83.39982605 64.85235596]
[-68.69972992 67.83684540]
[-53.96898651 70.66620636]
[-39.20923615 73.34011078]
[-24.44948578 76.01402283]
[-10.54680729 70.66941833]
[1.65307677 80.74281311]
[16.41282654 83.41672516]
[31.17257690 86.09062958]
[45.93232727 88.76454163]
[60.69207764 91.43844604]
[75.45182800 94.11235809]
[84.94478607 82.49841309]
[79.38764954 68.56578064]
[73.83051300 54.63314819]
[68.27337646 40.70051575]
[55.06772995 30.97719574]
[57.15421677 14.71132278]
[72.38643646 8.63583469]
[85.09478760 19.00067329]
[82.20600891 35.14337921]
[87.76314545 49.07601166]
[93.32028198 63.00864410]
[98.87741852 76.94127655]
[106.37366486 76.70410919]
[121.36616516 76.22978973]
[128.86241150 75.99263000]
[133.52774048 61.73658752]
[138.19306946 47.48054504]
[142.85838318 33.22450256]
[147.52371216 18.96845818]
[152.18902588 4.71241522]
[146.24751282 -10.18986225]
[154.31895447 -24.05461693]
[170.21163940 -26.24599457]
[181.73405457 -15.08295918]
[180.04719543 0.87116498]
[166.44508362 9.37773895]
[161.77975464 23.63378143]
[157.11442566 37.88982391]
[152.44911194 52.14586639]
[147.78378296 66.40190887]
[143.11845398 80.65795135]
[146.87330627 95.18038940]
[157.86396790 105.38849640]
[168.85461426 115.59660339]
[179.84527588 125.80471802]
[190.83592224 136.01283264]
[201.82658386 146.22093201]
[212.81723022 156.42904663]
[221.29589844 160.00978088]
[223.92910767 166.97010803]
[234.70210266 177.40766907]
[245.47509766 187.84523010]
[253.87638855 191.60391235]
[256.36227417 198.61822510]
[266.91281128 209.28057861]
[277.46337891 219.94294739]
[288.01391602 230.60531616]
[298.56445312 241.26766968]
[309.11499023 251.93003845]
[319.66555786 262.59240723]
[330.21609497 273.25476074]
[341.78897095 266.35626221]
[354.60961914 262.24188232]
[368.01910400 261.11917114]
[381.32907104 263.04199219]
[393.85711670 267.90805054]
[404.96176147 275.46417236]
[414.07528687 285.31958008]
[420.73287964 296.96606445]
[424.59609985 309.80419922]
[425.47033691 323.17416382]
[423.31442261 336.38973999]
[418.24267578 348.77337646]
[410.51873779 359.69113159]
[420.37420654 370.99908447]
[430.22967529 382.30703735]
[440.08514404 393.61499023]
[449.94061279 404.92294312]
[459.79608154 416.23089600]
[469.65151978 427.53884888]
[485.49407959 430.06741333]
[493.26910400 444.10052490]
[487.01226807 458.87319946]
[471.52331543 463.05310059]
[458.68402100 453.43374634]
[458.34356689 437.39431763]
[448.48809814 426.08636475]
[438.63265991 414.77841187]
[428.77719116 403.47042847]
[418.92172241 392.16247559]
[409.06625366 380.85452271]
[399.21078491 369.54656982]
[384.25079346 376.79263306]
[367.85086060 379.58422852]
[351.30947876 377.69277954]
[335.93838501 371.26077271]
[322.95867920 360.79113770]
[313.40371704 347.10778809]
[308.03683472 331.29086304]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 110]
[3 109]
[4 108]
[5 107]
[6 106]
[7 105]
[8 104]
[9 103]
[10 101]
[11 100]
[12 99]
[13 97]
[14 96]
[15 95]
[16 94]
[17 93]
[18 92]
[19 91]
[24 59]
[25 58]
[26 57]
[27 56]
[28 55]
[29 54]
[31 52]
[32 51]
[33 50]
[35 49]
[36 48]
[37 47]
[38 46]
[39 45]
[60 71]
[61 70]
[62 69]
[63 68]
[74 90]
[75 89]
[76 88]
[77 87]
[78 86]
[79 85]
[123 141]
[124 140]
[125 139]
[126 138]
[127 137]
[128 136]
[129 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
