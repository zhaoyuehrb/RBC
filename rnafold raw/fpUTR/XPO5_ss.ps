%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:52:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUCCGCGGGCGCGUGCGCAGUGGCGGGCCGGGCGCGUGCGCAGCGCCGGCUUCUUCCCAGCGCGAGUUGCUGCUAACGCUCCUCCUCCAGCUUCCCACCCCCGCCGCCCGCCGCGGCCCGGUACCAACGGGUGGUCUCGCCGAGGGAGCUGUCGUGCCUCGUGGUCCCGGGACUGCAGUGGUGUGCGCUCUCGGCGCGUGGCGCUAGGC\
) } def
/len { sequence length } bind def

/coor [
[215.70832825 222.53184509]
[213.24174500 207.15155029]
[201.18536377 198.22721863]
[189.12898254 189.30288696]
[177.07260132 180.37857056]
[162.23959351 179.02532959]
[155.75093079 164.59593201]
[143.69454956 155.67160034]
[131.63816833 146.74726868]
[119.58177948 137.82295227]
[107.52539062 128.89862061]
[80.93360901 105.12423706]
[66.79646301 100.11015320]
[52.65931320 95.09606934]
[38.52216721 90.08197784]
[29.38887978 90.16284180]
[24.21362114 84.88742828]
[10.15232563 79.66440582]
[-3.90896916 74.44138336]
[-15.93750000 79.09587860]
[-27.54135704 74.45669556]
[-32.70275116 63.51709366]
[-46.68510437 58.08628082]
[-60.66746140 52.65546417]
[-74.64981842 47.22464752]
[-88.63217163 41.79383469]
[-102.61452484 36.36301804]
[-116.59687805 30.93220329]
[-130.57923889 25.50138664]
[-138.32467651 27.44220734]
[-145.16557312 25.26001167]
[-149.28701782 20.38947678]
[-164.08816528 17.95518303]
[-178.88932800 15.52088928]
[-193.76222229 20.91604424]
[-205.06510925 11.21585083]
[-219.86627197 8.78155708]
[-234.66741943 6.34726334]
[-249.46858215 3.91296983]
[-262.22216797 12.85634899]
[-277.19796753 10.17678070]
[-285.64550781 -2.03692055]
[-300.44665527 -4.47121429]
[-315.24783325 -6.90550756]
[-330.04898071 -9.33980179]
[-344.85012817 -11.77409458]
[-359.65127563 -14.20838833]
[-374.47006226 -16.53294754]
[-389.32168579 -18.63766289]
[-404.18847656 -20.63228035]
[-419.06964111 -22.51668930]
[-433.96435547 -24.29078674]
[-448.85906982 -26.06488419]
[-460.13232422 -15.22756100]
[-475.73764038 -14.22358513]
[-488.30667114 -23.52700424]
[-491.90469360 -38.74502945]
[-484.83282471 -52.69217300]
[-470.43020630 -58.78302002]
[-455.49731445 -54.14165878]
[-447.08496094 -40.95960236]
[-432.19024658 -39.18550491]
[-417.29553223 -37.41140747]
[-410.28240967 -39.74153900]
[-402.19384766 -35.49907303]
[-387.32705688 -33.50445557]
[-380.28018188 -35.73040771]
[-372.25537109 -31.36855125]
[-365.17630005 -33.48983765]
[-357.21697998 -29.00954437]
[-342.41583252 -26.57525063]
[-327.61468506 -24.14095688]
[-312.81353760 -21.70666313]
[-298.01235962 -19.27236938]
[-283.21121216 -16.83807564]
[-271.29693604 -25.70294189]
[-256.25180054 -23.44507027]
[-247.03428650 -10.88818550]
[-232.23313904 -8.45389271]
[-217.43197632 -6.01959896]
[-202.63081360 -3.58530521]
[-188.81660461 -9.15457630]
[-176.45503235 0.71973389]
[-161.65386963 3.15402746]
[-146.85272217 5.58832121]
[-158.39622498 -3.99017692]
[-166.09156799 -16.86579514]
[-169.06051636 -31.56903839]
[-166.96418762 -46.42183304]
[-160.04187012 -59.72902298]
[-149.08357239 -69.97187042]
[-135.33998108 -75.98135376]
[-120.37966156 -77.07160950]
[-105.91001892 -73.11821747]
[-93.58246613 -64.57236481]
[-84.80396271 -52.40939713]
[-80.57637787 -38.01747131]
[-81.38222504 -23.03913116]
[-87.12951660 -9.18385887]
[-97.16233063 1.96704936]
[-110.33560944 9.14094067]
[-125.14842224 11.51903248]
[-111.16606140 16.94984818]
[-97.18370819 22.38066292]
[-83.20135498 27.81147766]
[-69.21900177 33.24229431]
[-55.23664474 38.67311096]
[-41.25429153 44.10392380]
[-27.27193642 49.53474045]
[-10.09733677 45.92758942]
[1.31405544 60.38008881]
[15.37535000 65.60311127]
[29.43664551 70.82613373]
[43.53625488 75.94483185]
[57.67340088 80.95892334]
[71.81054688 85.97300720]
[85.94769287 90.98709106]
[100.19279480 86.28845978]
[108.57249451 73.84738159]
[116.95220184 61.40629196]
[125.33190155 48.96520615]
[133.71160889 36.52412033]
[129.21780396 21.54614639]
[135.45045471 7.20431709]
[149.46669006 0.27040756]
[164.64846802 4.01839781]
[173.82743835 16.67860222]
[172.66954041 32.27325821]
[161.72151184 43.43904495]
[146.15267944 44.90382385]
[137.77297974 57.34490967]
[129.39328003 69.78599548]
[121.01358032 82.22708130]
[112.63388062 94.66816711]
[127.09194946 90.67263031]
[137.06266785 101.87908173]
[131.41265869 115.77431488]
[116.44972229 116.84223175]
[128.50610352 125.76656342]
[140.56248474 134.69088745]
[152.61886597 143.61521912]
[164.67526245 152.53953552]
[180.37062073 154.53109741]
[185.99693298 168.32218933]
[198.05331421 177.24650574]
[210.10969543 186.17083740]
[222.16607666 195.09516907]
[237.59619141 192.96228027]
[249.69595337 202.18457031]
[251.63424683 216.90797424]
[263.69061279 225.83229065]
[275.74700928 234.75662231]
[288.75045776 231.24774170]
[301.21868896 235.80206299]
[308.67697144 246.54655457]
[308.58663940 259.43103027]
[320.50946045 268.53305054]
[332.43228149 277.63504028]
[344.35507202 286.73703003]
[356.27789307 295.83905029]
[371.94201660 298.06295776]
[377.36337280 311.93591309]
[389.28616333 321.03790283]
[401.20898438 330.13989258]
[413.13180542 339.24191284]
[418.30740356 339.90859985]
[422.30984497 342.25848389]
[424.69451904 345.56307983]
[425.37023926 349.02294922]
[436.87677002 358.64584351]
[448.38330078 368.26870728]
[459.88983154 377.89160156]
[471.39636230 387.51446533]
[482.90289307 397.13735962]
[498.45269775 400.05523682]
[503.25213623 414.15539551]
[514.75866699 423.77825928]
[526.26519775 433.40115356]
[537.77172852 443.02404785]
[553.48931885 441.37121582]
[565.71936035 451.38131714]
[567.20593262 467.11553955]
[557.06707764 479.23904419]
[541.31799316 480.55914307]
[529.30236816 470.29269409]
[528.14886475 454.53054810]
[516.64233398 444.90768433]
[505.13577271 435.28479004]
[493.62924194 425.66192627]
[478.90246582 423.43234253]
[473.27999878 408.64389038]
[461.77346802 399.02099609]
[450.26693726 389.39813232]
[438.76043701 379.77523804]
[427.25390625 370.15237427]
[415.74737549 360.52947998]
[404.02981567 351.16473389]
[392.10699463 342.06271362]
[380.18417358 332.96072388]
[368.26135254 323.85870361]
[353.45004272 322.28582764]
[347.17590332 307.76187134]
[335.25308228 298.65985107]
[323.33026123 289.55786133]
[311.40744019 280.45584106]
[299.48461914 271.35385132]
[282.92657471 274.30020142]
[269.08853149 264.15942383]
[266.82269287 246.81300354]
[254.76629639 237.88867188]
[242.70991516 228.96435547]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 147]
[3 146]
[4 145]
[5 144]
[7 142]
[8 141]
[9 140]
[10 139]
[11 138]
[12 117]
[13 116]
[14 115]
[15 114]
[17 113]
[18 112]
[19 111]
[22 109]
[23 108]
[24 107]
[25 106]
[26 105]
[27 104]
[28 103]
[29 102]
[32 85]
[33 84]
[34 83]
[36 81]
[37 80]
[38 79]
[39 78]
[42 75]
[43 74]
[44 73]
[45 72]
[46 71]
[47 70]
[48 68]
[49 66]
[50 65]
[51 63]
[52 62]
[53 61]
[118 134]
[119 133]
[120 132]
[121 131]
[122 130]
[150 211]
[151 210]
[152 209]
[156 206]
[157 205]
[158 204]
[159 203]
[160 202]
[162 200]
[163 199]
[164 198]
[165 197]
[169 196]
[170 195]
[171 194]
[172 193]
[173 192]
[174 191]
[176 189]
[177 188]
[178 187]
[179 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
