%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:59:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGUGUGUGUAUUUCCUCCCGUUCUUUAUCAGAGCCCCCAAAAUAAGUAGGAAUGGGCAGUGGCUAUUCACAUUCACUACACCUUUUCCAUUUGCUAAUAAGGCCCUGCCAGGCUGGGAGGGAAUUGUCCCUGCCUGCUUCUGGAGAAAGAAGAUAUUGACACCAUCUACGGGCACC\
) } def
/len { sequence length } bind def

/coor [
[309.83325195 350.12896729]
[299.04315186 339.70910645]
[288.25305176 329.28921509]
[277.46298218 318.86935425]
[269.97021484 321.91497803]
[261.87872314 322.61727905]
[253.90716553 320.89389038]
[246.76945496 316.87869263]
[241.11082458 310.91180420]
[237.44955444 303.51071167]
[236.12947083 295.32550049]
[237.28779602 287.08163452]
[240.84117126 279.51589966]
[231.19935608 268.02523804]
[221.55754089 256.53457642]
[211.91572571 245.04389954]
[202.27391052 233.55323792]
[192.63209534 222.06256104]
[182.99028015 210.57189941]
[173.34846497 199.08123779]
[163.70664978 187.59056091]
[154.06484985 176.09989929]
[144.42303467 164.60923767]
[130.31498718 159.83302307]
[127.37151337 144.28802490]
[117.72970581 132.79736328]
[108.08789062 121.30670166]
[96.85653687 122.57228088]
[86.39833069 118.28617096]
[79.28548431 109.50253296]
[77.26741028 98.38172913]
[80.84046936 87.65894318]
[71.60554504 75.83877563]
[62.37062454 64.01861572]
[47.77731705 57.90748978]
[46.03870010 43.11470795]
[36.80377960 31.29454422]
[27.56885719 19.47438431]
[13.15295982 24.10118294]
[-1.94775617 23.51777077]
[-15.91147804 17.81385040]
[-27.06017303 7.69571638]
[-34.06123734 -5.60114765]
[-36.08676529 -20.46290207]
[-32.91141129 -35.09321976]
[-24.93728447 -47.73041153]
[-34.17220688 -59.55057144]
[-43.40712738 -71.37073517]
[-52.64205170 -83.19089508]
[-61.87697220 -95.01105499]
[-69.64913940 -99.86451721]
[-71.16776276 -107.11905670]
[-80.19499207 -119.09858704]
[-89.22221375 -131.07812500]
[-98.24944305 -143.05764771]
[-112.73387146 -149.42253113]
[-114.21405792 -164.24340820]
[-123.24127960 -176.22294617]
[-132.26850891 -188.20246887]
[-151.15364075 -195.20069885]
[-152.74226379 -214.45520020]
[-162.18206787 -226.11239624]
[-171.62187195 -237.76957703]
[-181.06167603 -249.42677307]
[-190.50148010 -261.08395386]
[-205.65852356 -258.60208130]
[-220.02017212 -264.04623413]
[-229.72319031 -275.95199585]
[-232.15754700 -291.11672974]
[-226.66839600 -305.46124268]
[-214.73229980 -315.12689209]
[-199.55999756 -317.51370239]
[-185.23277283 -311.97961426]
[-175.60456848 -300.01327515]
[-173.26533508 -284.83358765]
[-178.84429932 -270.52377319]
[-169.40449524 -258.86657715]
[-159.96469116 -247.20938110]
[-150.52487183 -235.55220032]
[-141.08506775 -223.89500427]
[-130.83377075 -223.74006653]
[-122.18718719 -217.83178711]
[-118.15108490 -207.93048096]
[-120.28897095 -197.22970581]
[-111.26174927 -185.25016785]
[-102.23451996 -173.27062988]
[-88.39577484 -167.76260376]
[-86.26990509 -152.08486938]
[-77.24268341 -140.10534668]
[-68.21545410 -128.12580872]
[-59.18823242 -116.14627838]
[-50.05681229 -104.24597931]
[-40.82188797 -92.42581940]
[-31.58696747 -80.60565948]
[-22.35204506 -68.78549194]
[-13.11712265 -56.96533203]
[1.07380569 -61.64538193]
[16.03772926 -61.18701935]
[29.96800613 -55.62627411]
[41.17618561 -45.61637115]
[48.29665756 -32.35103989]
[50.45301437 -17.42219734]
[47.36590195 -2.62889767]
[39.38901901 10.23946095]
[48.62393951 22.05962181]
[57.85886383 33.87978363]
[71.79162598 39.14545441]
[74.19078827 54.78369522]
[83.42571259 66.60385895]
[92.66062927 78.42401886]
[110.60713196 79.82878113]
[121.93577576 93.81848907]
[119.57855225 111.66488647]
[129.22036743 123.15554810]
[138.86218262 134.64622498]
[153.65988159 140.24432373]
[155.91369629 154.96742249]
[165.55551147 166.45808411]
[175.19732666 177.94874573]
[184.83914185 189.43942261]
[194.48095703 200.93008423]
[204.12277222 212.42074585]
[213.76458740 223.91142273]
[223.40638733 235.40208435]
[233.04820251 246.89274597]
[242.69001770 258.38342285]
[252.33183289 269.87408447]
[274.79620361 269.88363647]
[289.78683472 286.24530029]
[287.88284302 308.07925415]
[298.67294312 318.49911499]
[309.46304321 328.91900635]
[320.25314331 339.33886719]
[331.31228638 349.47271729]
[342.63293457 359.31359863]
[353.95358276 369.15451050]
[365.27423096 378.99539185]
[376.59487915 388.83627319]
[387.91552734 398.67715454]
[400.49557495 406.84674072]
[414.09017944 413.18600464]
[427.68481445 419.52529907]
[441.27941895 425.86456299]
[454.87402344 432.20382690]
[469.63763428 426.56359863]
[484.03097534 433.09097290]
[489.51480103 447.91336060]
[482.83563232 462.23693848]
[467.95608521 467.56372070]
[453.70394897 460.73348999]
[448.53475952 445.79846191]
[434.94015503 439.45916748]
[421.34552002 433.11990356]
[407.75091553 426.78063965]
[394.15631104 420.44134521]
[402.65844727 432.79910278]
[406.49942017 447.29898071]
[405.23001099 462.24517822]
[398.99865723 475.88958740]
[388.53417969 486.63644409]
[375.06045532 493.22879028]
[360.15335083 494.89562988]
[345.55636597 491.44198608]
[332.97668457 483.27178955]
[323.88562012 471.34063721]
[319.34640503 457.04394531]
[319.88998413 442.05380249]
[325.45272827 428.12341309]
[335.38406372 416.88201904]
[348.52246094 409.64443970]
[363.33126831 407.25708008]
[378.07461548 409.99780273]
[366.75399780 400.15692139]
[355.43334961 390.31604004]
[344.11270142 380.47512817]
[332.79205322 370.63424683]
[321.47140503 360.79336548]
[317.92068481 360.68444824]
[314.24902344 358.83276367]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 133]
[2 132]
[3 131]
[4 130]
[13 127]
[14 126]
[15 125]
[16 124]
[17 123]
[18 122]
[19 121]
[20 120]
[21 119]
[22 118]
[23 117]
[25 115]
[26 114]
[27 113]
[32 110]
[33 109]
[34 108]
[36 106]
[37 105]
[38 104]
[46 96]
[47 95]
[48 94]
[49 93]
[50 92]
[52 91]
[53 90]
[54 89]
[55 88]
[57 86]
[58 85]
[59 84]
[61 80]
[62 79]
[63 78]
[64 77]
[65 76]
[134 177]
[135 176]
[136 175]
[137 174]
[138 173]
[139 172]
[140 155]
[141 154]
[142 153]
[143 152]
[144 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
