%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGUUUCAGAUGUCUUGGUAGUCGCGGCUCUGGCGCUCCGCACCCUCCGUCUGCGGCAGCGGGGGCUGGCGGCCCCGGCCCCUGCCCGGCCCCGUCCUCCAACCUCAUGCCUCAGCCCUAAUACCGCCGCCCUCCCCUGCGGGGGGCCUUUCUCCGUGUCCCCCGCCCGCCCCGUCCACUUCGGGCGCC\
) } def
/len { sequence length } bind def

/coor [
[98.81167603 148.17318726]
[94.85881805 147.91281128]
[90.95668030 162.39636230]
[87.05453491 176.87991333]
[83.15239716 191.36346436]
[79.25025177 205.84701538]
[80.96797943 222.71371460]
[65.23594666 229.03349304]
[54.80809784 215.66575623]
[64.76670074 201.94487000]
[68.66883850 187.46131897]
[72.57098389 172.97776794]
[76.47312164 158.49421692]
[80.37526703 144.01066589]
[59.01335144 125.34094238]
[51.85848236 97.88738251]
[61.39073181 71.16611481]
[50.91577530 60.42947769]
[40.44082260 49.69284058]
[29.96586800 38.95620728]
[19.49091530 28.21957016]
[4.22885132 30.31136322]
[-9.18172169 23.09957314]
[-15.69720364 9.53445339]
[-13.00783062 -5.09104729]
[-21.25554466 -9.05738831]
[-23.56496620 -16.09147263]
[-33.86191177 -26.99894142]
[-44.15885925 -37.90641022]
[-54.45580673 -48.81387711]
[-70.02042389 -49.43078232]
[-80.30760956 -60.63919067]
[-79.62356567 -75.47386932]
[-89.92050934 -86.38134003]
[-100.21746063 -97.28880310]
[-113.91729736 -103.39736938]
[-128.91273499 -103.76741028]
[-143.90815735 -104.13745880]
[-158.90614319 -104.38417053]
[-173.90562439 -104.50753021]
[-188.90512085 -104.63088989]
[-203.90461731 -104.75424957]
[-218.90411377 -104.87760925]
[-227.26498413 -91.91230011]
[-241.31762695 -85.54623413]
[-256.57788086 -87.81079102]
[-268.17626953 -97.98336029]
[-272.41174316 -112.81792450]
[-267.93283081 -127.58081055]
[-256.16873169 -137.56124878]
[-240.87329102 -139.57450867]
[-226.92724609 -132.97816467]
[-218.78074646 -119.87709808]
[-203.78125000 -119.75373840]
[-188.78176880 -119.63037872]
[-173.78227234 -119.50701904]
[-158.78277588 -119.38365936]
[-152.05683899 -122.47776031]
[-143.53811646 -119.13289642]
[-128.54267883 -118.76284790]
[-113.54724884 -118.39280701]
[-105.48486328 -131.04183960]
[-112.15144348 -144.47897339]
[-118.81803131 -157.91610718]
[-125.48461151 -171.35325623]
[-132.15118408 -184.79039001]
[-145.21566772 -193.71395874]
[-143.94100952 -208.55392456]
[-150.60758972 -221.99105835]
[-157.27416992 -235.42819214]
[-163.90293884 -241.73820496]
[-163.93785095 -249.14161682]
[-170.38252258 -262.68658447]
[-176.82719421 -276.23153687]
[-183.27188110 -289.77651978]
[-195.15194702 -294.82766724]
[-200.23681641 -306.25570679]
[-196.29551697 -317.70346069]
[-202.51654053 -331.35260010]
[-208.73756409 -345.00173950]
[-222.39572144 -354.07846069]
[-221.09422302 -370.42587280]
[-206.17195129 -377.22717285]
[-192.97964478 -367.48574829]
[-195.08842468 -351.22274780]
[-188.86740112 -337.57363892]
[-182.64637756 -323.92449951]
[-167.83248901 -314.52975464]
[-169.72689819 -296.22119141]
[-163.28222656 -282.67623901]
[-156.83755493 -269.13125610]
[-150.39288330 -255.58628845]
[-143.83703613 -242.09477234]
[-137.17045593 -228.65763855]
[-130.50387573 -215.22050476]
[-117.91623688 -207.25804138]
[-118.71405029 -191.45697021]
[-112.04747009 -178.01983643]
[-105.38088989 -164.58268738]
[-98.71430969 -151.14555359]
[-92.04772949 -137.70841980]
[-81.39852142 -148.27223206]
[-66.74705505 -151.48699951]
[-52.65332031 -146.35215759]
[-43.50371170 -134.46583557]
[-42.14586258 -119.52741241]
[-49.00238037 -106.18619537]
[-61.93930817 -98.59436035]
[-76.93027496 -99.11473083]
[-89.30998993 -107.58575439]
[-79.01304626 -96.67828369]
[-68.71609497 -85.77081299]
[-53.86663818 -85.60018921]
[-43.26868820 -74.68515015]
[-43.54833984 -59.11082458]
[-33.25139236 -48.20335770]
[-22.95444489 -37.29588699]
[-12.65749741 -26.38842010]
[-2.27119541 -15.56600094]
[12.41619968 -17.89374924]
[25.81645775 -11.04560280]
[32.69521713 2.53880143]
[30.22755051 17.74461555]
[40.70250320 28.48125076]
[51.17745972 39.21788788]
[61.65241241 49.95452118]
[72.12736511 60.69115829]
[79.71087646 56.29164505]
[87.96600342 53.33897018]
[96.61947632 51.93087387]
[105.38485718 52.11396790]
[113.97198486 53.88219070]
[122.09661102 57.17700958]
[129.48979187 61.88935852]
[135.90679932 67.86325073]
[141.13522339 74.90093994]
[145.00196838 82.76946259]
[147.37905884 91.20834351]
[148.18780518 99.93825531]
[147.40144348 108.67021179]
[161.55677795 113.63271332]
[175.71211243 118.59521484]
[189.86744690 123.55771637]
[204.02278137 128.52021790]
[218.17813110 133.48272705]
[232.33346558 138.44522095]
[246.48880005 143.40773010]
[260.64413452 148.37022400]
[274.83981323 153.21614075]
[288.05969238 144.86340332]
[303.54873657 147.01362610]
[313.99349976 158.65156555]
[314.46224976 174.28211975]
[304.73367310 186.52502441]
[289.40130615 189.59956360]
[275.70462036 182.05403137]
[270.11077881 167.45118713]
[262.75933838 168.32751465]
[255.68164062 162.52555847]
[241.52629089 157.56306458]
[227.37095642 152.60055542]
[213.21562195 147.63806152]
[199.06028748 142.67555237]
[184.90495300 137.71305847]
[170.74960327 132.75054932]
[156.59426880 127.78804779]
[142.43893433 122.82554626]
[137.63926697 130.08911133]
[131.61097717 136.37051392]
[124.55086517 141.46473694]
[130.09107971 155.40409851]
[135.74574280 169.29743958]
[141.51448059 183.14379883]
[147.28320312 196.99015808]
[153.05194092 210.83651733]
[168.02845764 215.33517456]
[176.56619263 228.43637085]
[174.63388062 243.95410156]
[163.14390564 254.56138611]
[147.52148438 255.24978638]
[135.14303589 245.69425964]
[131.85330200 230.40663147]
[139.20558167 216.60525513]
[133.43684387 202.75889587]
[127.66811371 188.91253662]
[121.89938354 175.06616211]
[116.41548157 170.09237671]
[116.15171051 160.94432068]
[110.61149597 147.00494385]
[106.71472168 147.71772766]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 14]
[3 13]
[4 12]
[5 11]
[6 10]
[17 127]
[18 126]
[19 125]
[20 124]
[21 123]
[25 119]
[27 118]
[28 117]
[29 116]
[30 115]
[33 112]
[34 111]
[35 110]
[36 61]
[37 60]
[38 59]
[39 57]
[40 56]
[41 55]
[42 54]
[43 53]
[62 101]
[63 100]
[64 99]
[65 98]
[66 97]
[68 95]
[69 94]
[70 93]
[72 92]
[73 91]
[74 90]
[75 89]
[78 87]
[79 86]
[80 85]
[140 167]
[141 166]
[142 165]
[143 164]
[144 163]
[145 162]
[146 161]
[147 160]
[148 159]
[149 157]
[170 189]
[171 188]
[172 186]
[173 185]
[174 184]
[175 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
