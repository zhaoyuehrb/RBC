%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:57:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGAGGCGGACAGUGACCCUGAGGCAUUGCCGUCGCGCGGUGCACAGCUAAGACGUCGCGCUUGCGCAGGCGCUCGGCGCAGAGGCCUGCGGGAAGCCAAGAUGGCGCAUAGGGGUUCUCCAGGCUGCAGUUGGCGCCUUAUCAGUAUCUAAGCGGAGUGUUUUGGAAGGAGUUAAGGGGCUGUGGCAAACGCCCUCUCCGCCGUC\
) } def
/len { sequence length } bind def

/coor [
[154.80758667 115.92834473]
[143.19239807 105.54925537]
[128.20779419 106.22869110]
[120.82599640 125.95729065]
[99.95614624 137.67100525]
[73.60087585 132.74710083]
[64.89442444 144.96174622]
[56.18798065 157.17640686]
[47.48153687 169.39106750]
[38.77509308 181.60571289]
[36.34148407 190.41249084]
[29.84376335 193.93775940]
[20.95383072 206.01953125]
[12.06389713 218.10130310]
[3.17396450 230.18305969]
[-5.71596813 242.26483154]
[-8.28230953 251.03384399]
[-14.83253193 254.46058655]
[-23.90392494 266.40670776]
[-25.42463303 282.73519897]
[-40.43682098 289.33566284]
[-53.49723434 279.41812134]
[-51.17044067 263.18487549]
[-35.85004807 257.33529663]
[-26.77865410 245.38919067]
[-17.79773521 233.37489319]
[-8.90780258 221.29313660]
[-0.01786951 209.21136475]
[8.87206364 197.12959290]
[17.76199532 185.04783630]
[26.56043625 172.89927673]
[35.26688004 160.68461609]
[43.97332764 148.46995544]
[52.67977142 136.25531006]
[61.38621521 124.04064941]
[53.91894150 111.03143311]
[38.98049164 112.38891602]
[24.04204369 113.74639893]
[9.10359573 115.10388184]
[-5.83485270 116.46136475]
[-20.77330017 117.81884766]
[-35.71175003 119.17633057]
[-50.65019608 120.53381348]
[-65.57796478 122.00406647]
[-73.20598602 135.51676941]
[-87.33370972 141.93449402]
[-102.52872467 138.78950500]
[-112.94825745 127.29110718]
[-114.58576965 111.86067963]
[-106.81161499 98.43152618]
[-92.61510468 92.16743469]
[-77.45509338 95.47708130]
[-67.16091919 107.08782959]
[-60.83970261 103.25505066]
[-52.00767899 105.59536743]
[-37.06923294 104.23788452]
[-22.13078308 102.88040161]
[-7.19233561 101.52291870]
[7.74611282 100.16543579]
[22.68456078 98.80794525]
[37.62300873 97.45046234]
[52.56145859 96.09297943]
[57.88053131 82.06774139]
[47.59912109 71.14562225]
[32.50625610 66.40051270]
[29.41648293 51.82990646]
[19.13507080 40.90779114]
[8.85365963 29.98567772]
[-1.42775202 19.06356239]
[-11.70916367 8.14144897]
[-21.99057388 -2.78066540]
[-32.27198410 -13.70277977]
[-40.43476486 -17.80774307]
[-42.62466049 -24.86835861]
[-52.73993683 -35.94450760]
[-62.85521698 -47.02066040]
[-78.65264893 -47.48606491]
[-89.43309021 -59.04277802]
[-88.80069733 -74.83441162]
[-77.13064575 -85.49206543]
[-61.34658432 -84.69274139]
[-50.81291199 -72.91066742]
[-51.77906799 -57.13594055]
[-41.66378784 -46.05978775]
[-31.54850769 -34.98363876]
[-21.34987259 -23.98419189]
[-11.06846046 -13.06207657]
[-0.78704900 -2.13996243]
[9.49436188 8.78215218]
[19.77577400 19.70426559]
[30.05718422 30.62638092]
[40.33859634 41.54849625]
[54.69606400 45.51238632]
[58.52123260 60.86421204]
[68.80264282 71.78633118]
[94.88868713 62.67734146]
[117.77240753 71.86382294]
[127.52835846 91.24408722]
[142.51296997 90.56465149]
[153.14118958 79.17699432]
[168.34738159 78.70140839]
[179.13827515 88.90396881]
[194.12287903 88.22453308]
[209.10748291 87.54508972]
[224.09208679 86.86565399]
[239.07669067 86.18621063]
[254.06129456 85.50677490]
[269.04589844 84.82733917]
[277.63619995 72.04013062]
[291.94165039 66.82404327]
[306.40441895 70.98252106]
[315.53591919 82.71936035]
[330.52053833 82.03992462]
[345.50512695 81.36048889]
[360.48974609 80.68104553]
[375.46878052 79.88846588]
[390.44140625 78.98278809]
[405.41406250 78.07711029]
[415.86904907 66.53023529]
[431.06634521 65.82503510]
[442.01010132 75.86345673]
[456.98272705 74.95777893]
[471.95535278 74.05210114]
[486.92074585 73.03337860]
[501.87799072 71.90167236]
[516.83520508 70.76995850]
[531.79248047 69.63825226]
[544.96954346 60.88182068]
[558.24432373 67.63682556]
[563.91369629 64.22809601]
[569.59967041 64.20019531]
[573.66918945 66.70379639]
[588.65380859 66.02435303]
[603.63842773 65.34491730]
[618.62304688 64.66547394]
[633.60760498 63.98603821]
[647.04315186 55.63158798]
[660.10784912 62.78445435]
[675.09246826 62.10501480]
[690.07702637 61.42557526]
[705.06164551 60.74613571]
[713.49505615 57.23052979]
[720.27734375 60.17132568]
[735.27050781 59.71828079]
[750.26367188 59.26523590]
[765.25683594 58.81218719]
[778.23010254 43.47315979]
[797.99652100 42.62957764]
[811.79693604 56.37680435]
[826.75421143 55.24509430]
[841.71142578 54.11338425]
[854.94189453 44.42386246]
[869.83734131 51.28372192]
[871.07458496 67.63613129]
[857.38092041 76.65912628]
[842.84313965 69.07063293]
[827.88586426 70.20233917]
[812.92864990 71.33405304]
[808.58093262 80.63734436]
[800.70147705 87.34800720]
[790.66931152 90.20343781]
[780.27734375 88.62362671]
[771.41180420 82.82749939]
[765.70989990 73.80534363]
[750.71673584 74.25839233]
[735.72357178 74.71143341]
[720.73040771 75.16448212]
[705.74108887 75.73074341]
[690.75646973 76.41017914]
[675.77191162 77.08961487]
[660.78729248 77.76905823]
[648.42352295 86.07491302]
[634.28704834 78.97064209]
[619.30249023 79.65007782]
[604.31787109 80.32952118]
[589.33325195 81.00895691]
[574.34863281 81.68840027]
[559.37603760 82.59407806]
[547.26879883 91.26956177]
[532.92419434 84.59549713]
[517.96691895 85.72721100]
[503.00967407 86.85891724]
[488.05242920 87.99062347]
[481.61834717 91.63073730]
[472.86105347 89.02473450]
[457.88839722 89.93041229]
[442.91577148 90.83609009]
[433.26181030 102.12044525]
[418.09033203 103.25222015]
[406.31973267 93.04974365]
[391.34710693 93.95542145]
[376.37445068 94.86109924]
[369.88613892 98.40361786]
[361.16915894 95.66564941]
[346.18457031 96.34509277]
[331.19995117 97.02452850]
[316.21536255 97.70396423]
[308.18350220 110.21903992]
[294.15643311 115.66931152]
[279.43762207 111.76926422]
[269.72534180 99.81194305]
[254.74073792 100.49137878]
[239.75613403 101.17081451]
[224.77153015 101.85025787]
[209.78692627 102.52969360]
[194.80232239 103.20913696]
[179.81771851 103.88857269]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 99]
[3 98]
[6 35]
[7 34]
[8 33]
[9 32]
[10 31]
[12 30]
[13 29]
[14 28]
[15 27]
[16 26]
[18 25]
[19 24]
[36 62]
[37 61]
[38 60]
[39 59]
[40 58]
[41 57]
[42 56]
[43 55]
[44 53]
[63 95]
[64 94]
[66 92]
[67 91]
[68 90]
[69 89]
[70 88]
[71 87]
[72 86]
[74 85]
[75 84]
[76 83]
[102 207]
[103 206]
[104 205]
[105 204]
[106 203]
[107 202]
[108 201]
[112 197]
[113 196]
[114 195]
[115 194]
[116 192]
[117 191]
[118 190]
[121 187]
[122 186]
[123 185]
[124 183]
[125 182]
[126 181]
[127 180]
[129 178]
[132 177]
[133 176]
[134 175]
[135 174]
[136 173]
[138 171]
[139 170]
[140 169]
[141 168]
[143 167]
[144 166]
[145 165]
[146 164]
[149 158]
[150 157]
[151 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
