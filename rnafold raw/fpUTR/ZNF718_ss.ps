%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:38:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUUCCGGGAUCUGGCGCGGCGUUUUCCUCUGGCUCCUGCGAGGGCUUGGUUUAGGGCUUCAGCUCUCUGCGUUCUCGGCUCCGGGAGGCCUCGGUGAUUCAGCCACAGCCUCUGCCUCCCGUUGCUCUGUGACCUGAGGGUAUUGGACAAUUUGUAGCUAAGACUCCCGGAUACCCUGAAGUCGGGAA\
) } def
/len { sequence length } bind def

/coor [
[113.32479095 333.90753174]
[112.09256744 318.95825195]
[110.86035156 304.00894165]
[109.62812805 289.05963135]
[108.39591217 274.11032104]
[107.16368866 259.16104126]
[98.40702057 247.11238098]
[104.98451233 232.72325134]
[103.75229645 217.77394104]
[102.52007294 202.82464600]
[101.16495514 187.88597107]
[99.68702698 172.95896912]
[98.20909882 158.03195190]
[96.73116302 143.10493469]
[95.25323486 128.17793274]
[93.77530670 113.25091553]
[80.17779541 106.91784668]
[67.80078125 115.39190674]
[55.42377090 123.86595917]
[43.11686707 132.44151306]
[30.88090515 141.11798096]
[24.09918022 155.41200256]
[9.24165154 156.46229553]
[-2.99431014 165.13877869]
[-15.23027229 173.81524658]
[-16.32020760 189.41481018]
[-27.21947670 200.62818909]
[-42.78177643 202.16078186]
[-55.65906525 193.28895569]
[-59.77108002 178.20169067]
[-53.17625427 164.02275085]
[-38.98846436 157.44699097]
[-23.90674782 161.57928467]
[-11.67078590 152.90281677]
[0.56517589 144.22633362]
[6.47170353 130.55293274]
[22.20442963 128.88201904]
[34.44039154 120.20555115]
[38.08434677 113.76091003]
[46.94971848 111.48894501]
[59.32672882 103.01489258]
[71.70374298 94.54084015]
[85.26800537 88.19837189]
[96.43399811 91.80822754]
[101.51274872 77.69417572]
[106.59149170 63.58013153]
[111.55399323 49.42479324]
[116.39991760 35.22912216]
[121.24583435 21.03345299]
[126.09175873 6.83778334]
[130.93768311 -7.35788679]
[135.78359985 -21.55355644]
[140.62951660 -35.74922562]
[145.35853577 -49.98426819]
[149.97032166 -64.25772095]
[154.58210754 -78.53117371]
[159.19389343 -92.80462646]
[150.94218445 -108.22033691]
[156.27944946 -124.51627350]
[171.44313049 -131.77186584]
[175.81951904 -146.11923218]
[180.19592285 -160.46661377]
[184.57232666 -174.81398010]
[188.71215820 -189.23139954]
[192.61428833 -203.71495056]
[196.51643372 -218.19850159]
[200.41857910 -232.68205261]
[204.32072449 -247.16560364]
[208.22285461 -261.64916992]
[204.34196472 -276.98699951]
[215.12377930 -287.26327515]
[214.33485413 -296.38107300]
[219.21104431 -301.95193481]
[223.35087585 -316.36935425]
[227.49070740 -330.78674316]
[231.51182556 -345.23773193]
[223.88858032 -358.82168579]
[228.05223083 -373.45446777]
[241.04942322 -380.63836670]
[244.95156860 -395.12191772]
[248.85371399 -409.60546875]
[241.23045349 -423.18942261]
[245.39410400 -437.82220459]
[258.39129639 -445.00610352]
[262.29345703 -459.48965454]
[266.19558716 -473.97320557]
[270.09774780 -488.45675659]
[273.99987793 -502.94030762]
[277.90200806 -517.42388916]
[281.80416870 -531.90740967]
[285.70629883 -546.39099121]
[276.13082886 -558.45812988]
[275.50427246 -573.67199707]
[283.85751343 -586.18945312]
[297.81277466 -591.32647705]
[301.71490479 -605.81005859]
[305.61706543 -620.29357910]
[294.02810669 -630.22631836]
[287.90432739 -644.20709229]
[288.46163940 -659.46002197]
[295.58932495 -672.95666504]
[307.87222290 -682.01715088]
[322.87155151 -684.84265137]
[337.60916138 -680.87207031]
[349.15890503 -670.89379883]
[355.22756958 -656.88897705]
[354.61019897 -641.63836670]
[347.42941284 -628.16992188]
[335.11093140 -619.15783691]
[320.10061646 -616.39141846]
[316.19845581 -601.90789795]
[312.29632568 -587.42431641]
[321.78204346 -575.97186279]
[322.71627808 -560.95220947]
[314.53149414 -548.11230469]
[300.18984985 -542.48883057]
[296.28771973 -528.00531006]
[292.38555908 -513.52172852]
[288.48342896 -499.03817749]
[284.58129883 -484.55462646]
[280.67913818 -470.07107544]
[276.77700806 -455.58752441]
[272.87484741 -441.10397339]
[280.50393677 -428.36297607]
[276.75292969 -413.61901855]
[263.33724976 -405.70333862]
[259.43511963 -391.21978760]
[255.53297424 -376.73623657]
[263.16204834 -363.99523926]
[259.41104126 -349.25125122]
[245.99537659 -341.33557129]
[247.29322815 -334.04672241]
[241.90812683 -326.64691162]
[237.76829529 -312.22952271]
[233.62846375 -297.81210327]
[229.60733032 -283.36111450]
[233.76733398 -269.05923462]
[222.70642090 -257.74700928]
[218.80427551 -243.26345825]
[214.90213013 -228.77990723]
[210.99998474 -214.29635620]
[207.09785461 -199.81280518]
[203.19570923 -185.32925415]
[204.76838684 -180.80334473]
[203.50254822 -175.24107361]
[198.91969299 -170.43759155]
[194.54330444 -156.09020996]
[190.16690063 -141.74284363]
[185.79049683 -127.39546204]
[193.38262939 -116.97222137]
[193.58280945 -103.88392639]
[186.09358215 -92.91169739]
[173.46734619 -88.19284058]
[168.85556030 -73.91938782]
[164.24377441 -59.64593887]
[159.63198853 -45.37248611]
[160.56874084 -38.02849197]
[154.82519531 -30.90330505]
[149.97926331 -16.70763588]
[145.13334656 -2.51196551]
[140.28742981 11.68370438]
[135.44151306 25.87937546]
[130.59558105 40.07504272]
[125.74966431 54.27071381]
[126.56550598 61.62912369]
[120.70553589 68.65887451]
[115.62679291 82.77292633]
[110.54804230 96.88697052]
[108.70231628 111.77297974]
[110.18025208 126.69999695]
[111.65818024 141.62701416]
[113.13610840 156.55401611]
[114.61403656 171.48103333]
[116.09197235 186.40805054]
[120.05763245 194.65608215]
[117.46937561 201.59242249]
[118.70159912 216.54171753]
[119.93381500 231.49102783]
[128.77862549 244.60894775]
[122.11299133 257.92880249]
[123.34521484 272.87811279]
[124.57743073 287.82742310]
[125.80965424 302.77670288]
[127.04187012 317.72601318]
[128.27409363 332.67532349]
[140.49021912 342.70236206]
[141.95497131 358.43862915]
[131.79931641 370.54806519]
[116.04844666 371.84637451]
[104.04705811 361.56326294]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 185]
[2 184]
[3 183]
[4 182]
[5 181]
[6 180]
[8 178]
[9 177]
[10 176]
[11 174]
[12 173]
[13 172]
[14 171]
[15 170]
[16 169]
[17 42]
[18 41]
[19 40]
[20 38]
[21 37]
[23 35]
[24 34]
[25 33]
[44 168]
[45 167]
[46 166]
[47 164]
[48 163]
[49 162]
[50 161]
[51 160]
[52 159]
[53 158]
[54 156]
[55 155]
[56 154]
[57 153]
[60 149]
[61 148]
[62 147]
[63 146]
[64 143]
[65 142]
[66 141]
[67 140]
[68 139]
[69 138]
[71 136]
[73 135]
[74 134]
[75 133]
[76 131]
[79 128]
[80 127]
[81 126]
[84 123]
[85 122]
[86 121]
[87 120]
[88 119]
[89 118]
[90 117]
[91 116]
[95 112]
[96 111]
[97 110]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
