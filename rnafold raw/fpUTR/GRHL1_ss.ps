%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:02:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGUGCGCGCAGCCCGCGCGGAGCCGGCUCAGAGCGAGAAAAGCAAACCCAACCCGUCGGGGCCGCCGCUCCGGACCCGCAGCCGCCGCCGCCGCCUCCUCCCCCCGGAUCGGGUGUACUGUCCCAACCCGAAAGUCCAGUUCUGCGGCCCGGCAGCGGCGAGCGGGCGCG\
) } def
/len { sequence length } bind def

/coor [
[140.03196716 130.06352234]
[128.59083557 139.76406860]
[113.59838104 139.28837585]
[102.79523468 128.88203430]
[101.75968170 113.91590118]
[95.39282990 127.49762726]
[89.02597809 141.07934570]
[82.65913391 154.66107178]
[76.29228210 168.24279785]
[80.37461090 183.75776672]
[70.67465210 196.53627014]
[54.63338852 196.77575684]
[44.55630112 184.29249573]
[48.17366791 168.66258240]
[62.71055603 161.87594604]
[69.07740784 148.29421997]
[75.44425964 134.71249390]
[81.81111145 121.13077545]
[88.17795563 107.54905701]
[80.83669281 94.46831512]
[65.92667389 92.82774353]
[51.01666260 91.18717957]
[36.10664749 89.54660797]
[21.19663239 87.90604401]
[6.25914145 86.53806305]
[-8.70084286 85.44313049]
[-23.66082764 84.34820557]
[-38.62081146 83.25327301]
[-53.58079529 82.15834808]
[-68.54077911 81.06341553]
[-82.86892700 87.77272797]
[-94.99745941 79.12703705]
[-109.95744324 78.03210449]
[-118.78201294 80.53331757]
[-125.17984772 76.77810669]
[-140.11734009 75.41013336]
[-146.06800842 89.31857300]
[-156.02690125 100.70609283]
[-169.01834106 108.45706177]
[-183.76957703 111.81211853]
[-198.83541870 110.44256592]
[-212.73986816 104.48258209]
[-224.12071228 94.51605988]
[-231.86297607 81.51942444]
[-235.20814514 66.76595306]
[-233.82849121 51.70103455]
[-227.85919189 37.80057907]
[-217.88505554 26.42641449]
[-204.88323975 18.69286156]
[-190.12751770 15.35757732]
[-175.06352234 16.74731827]
[-161.16708374 22.72593117]
[-149.79959106 32.70769501]
[-142.07475281 45.71469498]
[-138.74935913 60.47264099]
[-123.81187439 61.84061813]
[-108.86251068 63.07212067]
[-93.90252686 64.16705322]
[-80.64442444 57.37942123]
[-67.44584656 66.10343170]
[-52.48586655 67.19835663]
[-37.52588272 68.29328918]
[-22.56589699 69.38822174]
[-7.60591316 70.48314667]
[7.35407114 71.57807922]
[11.51439667 69.16508484]
[17.24041939 69.36559296]
[22.83720016 72.99602509]
[37.74721527 74.63659668]
[52.65723038 76.27716064]
[67.56724548 77.91773224]
[82.47725677 79.55829620]
[114.86366272 84.92537689]
[122.63390350 71.42497253]
[137.33648682 67.51486206]
[150.15917969 75.00580597]
[164.59971619 70.94738770]
[179.04025269 66.88896179]
[193.48078918 62.83054352]
[207.92134094 58.77212143]
[220.45013428 45.30056000]
[237.26992798 50.25136948]
[251.63392639 45.92988586]
[265.99792480 41.60839844]
[280.36193848 37.28691101]
[294.72595215 32.96542358]
[305.71191406 21.58036423]
[320.12866211 25.32289124]
[334.49267578 21.00140572]
[348.85665894 16.67991829]
[363.13934326 12.09680843]
[377.33596802 7.25360203]
[391.53256226 2.41039586]
[405.72915649 -2.43281007]
[419.92575073 -7.27601624]
[424.68441772 -23.48884773]
[438.02828979 -33.58144760]
[454.59234619 -33.74372101]
[467.86276245 -24.10944557]
[481.96853638 -29.21113205]
[469.00354004 -36.75492477]
[465.00708008 -51.21273422]
[472.25692749 -64.34436798]
[486.62103271 -68.66547394]
[499.91262817 -61.71325302]
[504.55618286 -47.45010376]
[497.90591431 -34.00597382]
[512.48504639 -37.53429031]
[527.06414795 -41.06260681]
[541.54119873 -44.98897934]
[555.90515137 -49.31046677]
[570.26916504 -53.63195419]
[584.63317871 -57.95343781]
[598.99719238 -62.27492523]
[613.36120605 -66.59641266]
[616.20538330 -81.63533783]
[625.72180176 -93.62268066]
[639.72363281 -99.80384064]
[654.99340820 -98.75843048]
[668.02221680 -90.72667694]
[675.81610107 -77.55422211]
[676.58416748 -62.26799393]
[670.14984131 -48.38066101]
[657.99169922 -39.08342743]
[642.90362549 -36.51273346]
[628.35272217 -41.25930023]
[617.68267822 -52.23240280]
[603.31866455 -47.91091537]
[588.95471191 -43.58943176]
[574.59069824 -39.26794434]
[560.22668457 -34.94645691]
[545.86267090 -30.62497139]
[543.87402344 -27.67124748]
[540.33825684 -25.54934502]
[535.66931152 -24.98382950]
[530.59246826 -26.48347664]
[516.01336670 -22.95516205]
[501.43423462 -19.42684746]
[487.07022095 -15.10536003]
[472.96444702 -10.00367451]
[470.45660400 3.13014555]
[461.70928955 13.38590622]
[448.93179321 18.00812340]
[435.43399048 15.68547058]
[424.76895142 6.92058039]
[410.57235718 11.76378632]
[396.37576294 16.60699272]
[382.17916870 21.45019913]
[367.98257446 26.29340553]
[365.09735107 30.14131546]
[359.74902344 32.19625473]
[353.17816162 31.04392815]
[338.81414795 35.36541367]
[324.45013428 39.68690109]
[314.49160767 50.76285934]
[299.04745483 47.32943344]
[284.68344116 51.65092087]
[270.31942749 55.97240829]
[255.95541382 60.29389191]
[241.59140015 64.61537933]
[235.57342529 75.13535309]
[223.61280823 78.83914948]
[211.97975159 73.21266174]
[197.53921509 77.27108002]
[183.09867859 81.32950592]
[168.65814209 85.38792419]
[154.21759033 89.44634247]
[147.17456055 102.52041626]
[132.58761597 106.84194183]
[118.92208099 99.36592102]
[133.51530457 102.83550262]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 19]
[6 18]
[7 17]
[8 16]
[9 15]
[20 72]
[21 71]
[22 70]
[23 69]
[24 68]
[25 65]
[26 64]
[27 63]
[28 62]
[29 61]
[30 60]
[32 58]
[33 57]
[35 56]
[36 55]
[73 170]
[76 167]
[77 166]
[78 165]
[79 164]
[80 163]
[82 160]
[83 159]
[84 158]
[85 157]
[86 156]
[88 154]
[89 153]
[90 152]
[91 149]
[92 148]
[93 147]
[94 146]
[95 145]
[99 140]
[100 139]
[107 138]
[108 137]
[109 136]
[110 132]
[111 131]
[112 130]
[113 129]
[114 128]
[115 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
