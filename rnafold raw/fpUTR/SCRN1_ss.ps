%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:54:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACGUCGGGAAGAGGCGCCAAAAGGAUGCUGGGCCUGGCUCCUUGAAGCCCGGGUUUUCCCUUUUGAGAGCCACAACCAAGAAAUAAAAAUCUAGCAAAGAGGGGGCCACUUUCUGCGGCGAGAUACGCCCUCUCGGCCGCUCCUCCAGCUCCCAGGCCCCCUCCCUACUCGACGG\
) } def
/len { sequence length } bind def

/coor [
[92.74922180 305.32626343]
[78.58325958 297.79598999]
[75.78010559 281.99972534]
[86.49009705 270.05502319]
[87.01946259 255.06437683]
[87.54883575 240.07371521]
[88.07820892 225.08305359]
[88.60758209 210.09240723]
[89.13695526 195.10174561]
[89.66632843 180.11108398]
[82.38301086 167.11868286]
[90.60251617 153.60017395]
[91.13188934 138.60951233]
[71.74195099 127.76365662]
[61.23999023 108.18533325]
[46.24232483 108.45005798]
[31.24466133 108.71478271]
[17.58318901 116.69443512]
[4.72134829 109.18295288]
[-10.27339554 109.58001709]
[-25.26405144 110.10939026]
[-40.25470734 110.63876343]
[-55.24536133 111.16813660]
[-70.23601532 111.69750977]
[-85.22667694 112.22687531]
[-100.21733093 112.75624847]
[-105.34154510 122.17384338]
[-113.85767365 128.55313110]
[-124.17784119 130.78883362]
[-134.41242981 128.54058838]
[-142.71614075 122.28273010]
[-147.62055969 113.20624542]
[-162.61822510 112.94152069]
[-177.61589050 112.67678833]
[-192.61355591 112.41206360]
[-207.61122131 112.14733887]
[-222.60888672 111.88260651]
[-237.60653687 111.61788177]
[-252.60420227 111.35315704]
[-267.60363770 111.22078705]
[-282.60363770 111.22078705]
[-293.60031128 122.57192230]
[-309.40371704 122.73902130]
[-320.63796997 111.62293243]
[-320.63796997 95.81864166]
[-309.40371704 84.70255280]
[-293.60031128 84.86964417]
[-282.60363770 96.22078705]
[-267.60363770 96.22078705]
[-260.89450073 93.06699371]
[-252.33947754 96.35549164]
[-237.34181213 96.62021637]
[-222.34414673 96.88494873]
[-207.34648132 97.14967346]
[-192.34883118 97.41439819]
[-177.35116577 97.67913055]
[-162.35350037 97.94385529]
[-147.35583496 98.20858002]
[-134.41242981 83.68304443]
[-114.65634155 83.30616760]
[-100.74670410 97.76559448]
[-85.75605011 97.23622131]
[-70.76538849 96.70684814]
[-55.77473450 96.17747498]
[-40.78408051 95.64810944]
[-25.79342270 95.11873627]
[-10.80276775 94.58936310]
[-4.20914125 91.20076752]
[4.45662117 94.18528748]
[17.04535866 86.22457886]
[30.97993469 93.71711731]
[45.97759628 93.45239258]
[60.97526169 93.18766785]
[62.36069870 87.64600372]
[64.52873230 82.36120605]
[67.43427277 77.44314575]
[71.01692200 72.99408722]
[75.20217896 69.10652924]
[79.90303040 65.86131287]
[85.02173615 63.32589722]
[90.45187378 61.55300522]
[89.65802002 46.57402802]
[88.86416626 31.59504890]
[75.77269745 23.26480293]
[70.10919952 8.81819630]
[74.05140686 -6.18975544]
[86.08346558 -15.98818874]
[101.57879639 -16.80940628]
[114.57912445 -8.33763218]
[120.08557129 6.16956186]
[115.98078918 21.13386536]
[103.84314728 30.80119705]
[104.63700104 45.78017426]
[105.43084717 60.75915527]
[112.18086243 62.30431366]
[118.55869293 65.00124359]
[124.36947632 68.76753998]
[129.43566895 73.48812103]
[133.60246277 79.01876068]
[136.74256897 85.19046783]
[138.76000977 91.81466675]
[153.75767517 91.54994202]
[168.75534058 91.28521729]
[183.75300598 91.02048492]
[198.75067139 90.75576019]
[213.74833679 90.49103546]
[228.74598694 90.22630310]
[243.74365234 89.96157837]
[258.74133301 89.69685364]
[264.26266479 71.26477051]
[275.65948486 55.78852463]
[291.58703613 45.06981277]
[310.17416382 40.35041809]
[329.24316406 42.16836548]
[346.56488037 50.29660797]
[360.11929321 63.77128601]
[368.33114624 81.00598907]
[383.18188477 78.89509583]
[398.03259277 76.78419495]
[412.88333130 74.67330170]
[427.73406982 72.56240082]
[442.56558228 70.32053375]
[457.37673950 67.94787598]
[472.18789673 65.57521057]
[486.99905396 63.20255280]
[494.87356567 49.69231796]
[509.60739136 44.45318222]
[524.24365234 49.95890808]
[531.87164307 63.60985184]
[528.88952637 78.96046448]
[516.70550537 88.76264954]
[501.07238770 88.38812256]
[489.37173462 78.01371002]
[474.56057739 80.38637543]
[459.74942017 82.75903320]
[444.93823242 85.13169861]
[438.81246948 89.30701447]
[429.84497070 87.41313171]
[414.99423218 89.52402496]
[400.14349365 91.63492584]
[385.29278564 93.74581909]
[370.44204712 95.85671997]
[369.43563843 106.94139099]
[366.24752808 117.61225128]
[361.00204468 127.44407654]
[353.90548706 136.04452515]
[345.23809814 143.06976318]
[335.34298706 148.23831177]
[324.61260986 151.34219360]
[313.47299194 152.25540161]
[302.36709595 150.93898010]
[291.73699951 147.44265747]
[282.00637817 141.90299988]
[273.56362915 134.53807068]
[266.74633789 125.63883972]
[261.82781982 115.55770111]
[259.00604248 104.69451904]
[244.00839233 104.95924377]
[229.01072693 105.22396851]
[214.01306152 105.48870087]
[199.01539612 105.75342560]
[184.01773071 106.01815033]
[169.02006531 106.28288269]
[154.02239990 106.54760742]
[139.02473450 106.81233215]
[127.76365662 128.25804138]
[106.12254333 139.13888550]
[105.59317017 154.12954712]
[112.83862305 168.19418335]
[104.65698242 180.64045715]
[104.12760925 195.63111877]
[103.59823608 210.62178040]
[103.06886292 225.61242676]
[102.53948975 240.60308838]
[102.01012421 255.59375000]
[101.48075104 270.58441162]
[111.32148743 283.25482178]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 176]
[5 175]
[6 174]
[7 173]
[8 172]
[9 171]
[10 170]
[12 168]
[13 167]
[15 73]
[16 72]
[17 71]
[19 69]
[20 67]
[21 66]
[22 65]
[23 64]
[24 63]
[25 62]
[26 61]
[32 58]
[33 57]
[34 56]
[35 55]
[36 54]
[37 53]
[38 52]
[39 51]
[40 49]
[41 48]
[81 94]
[82 93]
[83 92]
[101 165]
[102 164]
[103 163]
[104 162]
[105 161]
[106 160]
[107 159]
[108 158]
[109 157]
[117 142]
[118 141]
[119 140]
[120 139]
[121 138]
[122 136]
[123 135]
[124 134]
[125 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
