%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:48:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCAGAGGGAAUAAGAGGCUGCCUCUGCCCACCAGUCCUGCCGCCCAGGACCCGCAGCAGAGACGACGCCUGCAGCAAGGAGACCAGGAAGGGGUGAGACAAGGAAGAGG\
) } def
/len { sequence length } bind def

/coor [
[-43.83528137 273.53799438]
[-55.56275558 282.89035034]
[-67.29022980 292.24270630]
[-79.01770020 301.59503174]
[-90.74517059 310.94738770]
[-102.47264099 320.29974365]
[-114.20011902 329.65206909]
[-125.92758942 339.00442505]
[-137.65505981 348.35678101]
[-143.62034607 363.01031494]
[-158.39505005 364.89636230]
[-156.72193909 380.23272705]
[-163.62632751 394.02883911]
[-176.90505981 401.88244629]
[-192.32095337 401.28741455]
[-204.95483398 392.43368530]
[-210.77528381 378.14642334]
[-207.92501831 362.98464966]
[-197.31353760 351.78640747]
[-182.32695007 348.12506104]
[-167.74740601 353.16888428]
[-162.62094116 339.18429565]
[-147.00740051 336.62930298]
[-135.27993774 327.27694702]
[-123.55245972 317.92462158]
[-111.82498932 308.57226562]
[-100.09751892 299.21990967]
[-88.37004852 289.86755371]
[-76.64257812 280.51522827]
[-64.91510010 271.16287231]
[-53.18762970 261.81051636]
[-47.84272003 239.27415466]
[-24.47096443 234.50274658]
[-14.47576618 223.31811523]
[-11.89832592 206.02175903]
[5.52102613 200.26081848]
[15.19860649 188.80024719]
[24.87618637 177.33969116]
[27.17587852 162.62368774]
[41.99094772 157.07173157]
[51.66852951 145.61117554]
[61.34610748 134.15060425]
[71.02368927 122.69004822]
[73.32337952 107.97405243]
[88.13845062 102.42208862]
[97.49079895 90.69461823]
[106.51055908 78.70946503]
[108.62664795 63.03040695]
[122.46195984 57.51375580]
[131.48171997 45.52859879]
[133.59780884 29.84954453]
[147.43312073 24.33289146]
[156.28390503 12.22241592]
[164.96397400 -0.01099689]
[173.29753113 -12.48304081]
[181.27801514 -25.18390465]
[182.06878662 -40.98533630]
[195.39146423 -47.64533234]
[203.37194824 -60.34619522]
[211.35243225 -73.04705811]
[219.33290100 -85.74792480]
[221.29478455 -94.82013702]
[227.71954346 -98.68868256]
[224.39085388 -114.13845825]
[233.03181458 -127.37133789]
[248.51591492 -130.53649902]
[261.65670776 -121.75611115]
[264.65798950 -106.23941040]
[255.73915100 -93.19219208]
[240.19158936 -90.35513306]
[232.03376770 -77.76744080]
[224.05328369 -65.06657410]
[216.07279968 -52.36571503]
[208.09233093 -39.66485214]
[207.87237549 -24.77187157]
[193.97886658 -17.20342255]
[185.99839783 -4.50256014]
[186.21087646 0.40055254]
[183.24478149 5.46090555]
[177.19738770 8.66907215]
[168.51731873 20.90248489]
[167.19433594 28.28442192]
[159.41827393 33.35264969]
[157.94734192 48.17444229]
[143.46687317 54.54835510]
[134.44711304 66.53350830]
[132.97618103 81.35530853]
[118.49571228 87.72921753]
[109.47595978 99.71437836]
[109.01469421 105.09646606]
[105.49796295 109.79321289]
[99.59901428 112.09967041]
[96.60711670 127.63540649]
[82.48425293 132.36763000]
[72.80667114 143.82818604]
[63.12908936 155.28875732]
[53.45151138 166.74931335]
[50.45961380 182.28504944]
[36.33674622 187.01727295]
[26.65916634 198.47782898]
[16.98158646 209.93838501]
[17.26870728 222.92721558]
[8.85225582 232.28947449]
[-3.29113412 233.31330872]
[-13.28633308 244.49794006]
[-11.02077866 251.41194153]
[-11.08975124 258.63513184]
[-13.45252228 265.40597534]
[-17.82830811 271.02142334]
[-23.72921181 274.90979004]
[-30.51445198 276.68890381]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 31]
[2 30]
[3 29]
[4 28]
[5 27]
[6 26]
[7 25]
[8 24]
[9 23]
[11 21]
[33 105]
[34 104]
[36 101]
[37 100]
[38 99]
[40 97]
[41 96]
[42 95]
[43 94]
[45 92]
[46 89]
[47 88]
[49 86]
[50 85]
[52 83]
[53 81]
[54 80]
[55 77]
[56 76]
[58 74]
[59 73]
[60 72]
[61 71]
[63 70]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
