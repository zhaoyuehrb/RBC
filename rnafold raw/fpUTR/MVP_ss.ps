%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:03:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACUCCCAAGCCCCACCCCUGGGCUUGGCCUGCCUUGCCCUGCCGGGAAGUGAUCCCCAAGGCAGGGUGAGAGUUCCCCAUCUGAGGCGUUUGUUGCAGCUACCUGCACUUCUAGAUGCUCCCCAGGUUCAUCCUGUGUCGUCUCCCCCACCUACCAGUCAUCUUCUUGUGAGCCCUGGGCUUAGGAGUCACC\
) } def
/len { sequence length } bind def

/coor [
[86.11725616 400.58599854]
[96.92098236 389.05102539]
[96.19254303 374.06872559]
[95.46411133 359.08642578]
[94.73567963 344.10412598]
[94.00724792 329.12182617]
[85.66101074 316.78530884]
[92.71901703 302.62567139]
[91.99057770 287.64337158]
[91.26214600 272.66107178]
[90.53371429 257.67877197]
[89.80528259 242.69647217]
[89.07685089 227.71417236]
[83.21180725 224.84783936]
[78.48770905 220.26811218]
[75.39259338 214.40356445]
[74.25990295 207.81747437]
[75.23283386 201.15371704]
[78.24711609 195.07391357]
[83.03424072 190.19166565]
[89.14510345 187.01068115]
[89.87353516 172.02838135]
[90.60196686 157.04608154]
[91.33039856 142.06378174]
[92.05883026 127.08147430]
[82.53120422 115.49594879]
[67.69023132 113.31752014]
[52.84925842 111.13909149]
[41.98702240 122.06237030]
[26.95136070 124.46701050]
[13.54144573 117.63779449]
[6.80485916 104.38047791]
[-8.03611279 102.20204926]
[-22.89423561 100.14385986]
[-37.76853943 98.20603180]
[-52.64284134 96.26821136]
[-67.51714325 94.33039093]
[-82.39144135 92.39257050]
[-97.26574707 90.45475006]
[-112.14004517 88.51692200]
[-127.01435089 86.57910156]
[-141.88864136 84.64128113]
[-156.76295471 82.70346069]
[-171.63725281 80.76564026]
[-186.55422974 79.18965912]
[-201.50508118 77.97644806]
[-216.45594788 76.76324463]
[-231.40679932 75.55004120]
[-244.51327515 84.80206299]
[-259.87771606 80.18537140]
[-265.71380615 65.24150085]
[-257.54464722 51.43410110]
[-241.63688660 49.35503387]
[-230.19360352 60.59918213]
[-215.24273682 61.81238556]
[-200.29188538 63.02559280]
[-185.34101868 64.23880005]
[-182.42439270 62.23366547]
[-178.38751221 61.54955673]
[-173.86553955 62.69939804]
[-169.69943237 65.89133453]
[-154.82513428 67.82915497]
[-139.95082092 69.76698303]
[-125.07652283 71.70480347]
[-110.20222473 73.64262390]
[-95.32791901 75.58044434]
[-80.45362091 77.51826477]
[-65.57932281 79.45609283]
[-50.70501709 81.39391327]
[-35.83071518 83.33173370]
[-20.95641518 85.26955414]
[-13.90741634 83.01293182]
[-5.85768414 87.36107635]
[8.98328781 89.53950500]
[19.24556541 78.77736664]
[34.05237961 76.08993530]
[47.76275635 82.71405029]
[55.02768707 96.29812622]
[69.86865997 98.47655487]
[84.70963287 100.65498352]
[77.80363464 96.07849884]
[72.48898315 88.60945129]
[69.66834259 78.79042053]
[70.07022858 67.41117859]
[74.18656158 55.45601273]
[82.22528839 44.03617859]
[85.12185669 29.31850624]
[88.01842499 14.60083294]
[90.91499329 -0.11683989]
[93.81156158 -14.83451271]
[96.70812988 -29.55218506]
[99.60469818 -44.26985931]
[102.50126648 -58.98752975]
[94.33293915 -78.78900146]
[108.51288605 -93.77509308]
[110.69131470 -108.61606598]
[112.86974335 -123.45703888]
[115.04817200 -138.29801941]
[117.22660065 -153.13899231]
[110.67687988 -168.17338562]
[120.63848877 -181.20022583]
[136.86376953 -178.81858826]
[142.66156006 -163.47853088]
[132.06756592 -150.96055603]
[129.88914490 -136.11958313]
[127.71071625 -121.27861023]
[125.53228760 -106.43763733]
[123.35385895 -91.59667206]
[129.75993347 -85.41316986]
[132.63825989 -76.84229279]
[131.22050476 -67.77346039]
[125.70055389 -60.26805878]
[117.21894073 -56.09096146]
[114.32237244 -41.37328720]
[111.42580414 -26.65561676]
[108.52923584 -11.93794346]
[105.63266754 2.77972913]
[102.73609161 17.49740219]
[99.83952332 32.21507263]
[96.94295502 46.93274689]
[102.99627686 51.36076355]
[116.71901703 45.30384445]
[115.10291290 60.21680069]
[121.15622711 64.64482117]
[134.30551147 57.42702866]
[147.45478821 50.20923996]
[160.60406494 42.99145126]
[166.45237732 28.05234718]
[181.82057190 23.44820404]
[194.91947937 32.71092606]
[195.70075989 48.73494339]
[183.56504822 59.22800446]
[167.82185364 56.14072800]
[154.67257690 63.35851669]
[141.52330017 70.57630920]
[128.37402344 77.79409790]
[128.25256348 85.29311371]
[143.25253296 85.26300812]
[158.25250244 85.23290253]
[173.25248718 85.20279694]
[188.25245667 85.17269135]
[203.25242615 85.14258575]
[216.83650208 78.78075409]
[229.42829895 86.93222809]
[229.18478394 101.93025208]
[216.33499146 109.66864777]
[202.96531677 102.87023163]
[187.97418213 102.35441589]
[172.98306274 101.83860016]
[157.99192810 101.32278442]
[143.00080872 100.80696106]
[128.00967407 100.29114532]
[127.88822937 107.79016113]
[140.79689026 115.42996216]
[153.70553589 123.06977081]
[169.52241516 123.43993378]
[176.53445435 136.58073425]
[189.44311523 144.22053528]
[204.13348389 138.86077881]
[218.81442261 144.24632263]
[226.55403137 157.83427429]
[223.69790649 173.20881653]
[211.59461975 183.11056519]
[195.95898438 182.86421204]
[184.17364502 172.58607483]
[181.80329895 157.12919617]
[168.89465332 149.48937988]
[154.00108337 149.66567993]
[146.06573486 135.97842407]
[133.15707397 128.33862305]
[120.24842072 120.69882202]
[107.04113770 127.80990601]
[106.31270599 142.79220581]
[105.58426666 157.77450562]
[104.85583496 172.75680542]
[104.12740326 187.73912048]
[117.00077820 207.81747437]
[104.05915070 226.98573303]
[104.78758240 241.96803284]
[105.51601410 256.95034790]
[106.24445343 271.93264771]
[106.97288513 286.91494751]
[107.70131683 301.89724731]
[116.09965515 315.30538940]
[108.98954773 328.39340210]
[109.71797943 343.37570190]
[110.44641113 358.35800171]
[111.17485046 373.34030151]
[111.90328217 388.32260132]
[123.77505493 398.75506592]
[124.70939636 414.53173828]
[114.15198517 426.29254150]
[98.36634064 427.06002808]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 189]
[3 188]
[4 187]
[5 186]
[6 185]
[8 183]
[9 182]
[10 181]
[11 180]
[12 179]
[13 178]
[21 176]
[22 175]
[23 174]
[24 173]
[25 172]
[26 80]
[27 79]
[28 78]
[32 74]
[33 73]
[34 71]
[35 70]
[36 69]
[37 68]
[38 67]
[39 66]
[40 65]
[41 64]
[42 63]
[43 62]
[44 61]
[45 57]
[46 56]
[47 55]
[48 54]
[86 120]
[87 119]
[88 118]
[89 117]
[90 116]
[91 115]
[92 114]
[93 113]
[95 108]
[96 107]
[97 106]
[98 105]
[99 104]
[124 136]
[125 135]
[126 134]
[127 133]
[153 171]
[154 170]
[155 169]
[157 167]
[158 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
