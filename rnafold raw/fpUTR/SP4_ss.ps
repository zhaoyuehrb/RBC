%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:11:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCAAGGGCGAGUCAGCCGGGCUCGGGCGGAGAGAGGAGCUGCUACGCCACAGCCCAGCGGCGGCCAUUCGCGGAAAAAGAGGCAGAGCCUGUGCCAGCUACAGCCUCCUCCGAGCCACCGCGGGCGGGCGGGACCGGCCUCUCCUCCCGCCUCGCCCCCACCCCCACCCACCUCUAUCCCAGUGUCUCCGUCUGAGGGUUUGUCCUGUUAAUGCGGG\
) } def
/len { sequence length } bind def

/coor [
[106.22817993 397.19613647]
[105.15321350 412.15756226]
[96.74156952 424.57708740]
[90.19178009 411.08258057]
[91.26674652 396.12115479]
[92.34171295 381.15972900]
[84.86099243 380.62225342]
[79.59613037 394.66793823]
[74.33126068 408.71362305]
[81.10048676 422.99481201]
[75.71009827 437.85144043]
[61.35810852 444.46929932]
[46.55930710 438.92214966]
[40.09355927 424.50097656]
[45.79687500 409.76165771]
[60.28557968 403.44873047]
[65.55044556 389.40307617]
[70.81531525 375.35739136]
[60.18970490 353.24447632]
[62.57458496 330.13110352]
[75.92544556 312.72134399]
[95.21346283 305.36297607]
[95.21346283 290.36297607]
[95.21346283 275.36297607]
[95.21346283 260.36297607]
[95.21346283 245.36297607]
[95.21346283 230.36297607]
[95.21346283 215.36297607]
[95.21346283 200.36297607]
[95.21346283 185.36297607]
[95.21346283 170.36297607]
[95.21346283 155.36297607]
[95.21346283 140.36297607]
[87.47616577 127.63571167]
[95.21346283 113.83553314]
[83.36245728 104.64022827]
[68.83264160 108.36640930]
[61.30274582 113.52658844]
[54.06766129 112.04023743]
[39.48588943 115.55760193]
[24.90411758 119.07497406]
[10.32234383 122.59234619]
[4.52433681 136.98548889]
[-8.64426899 145.19326782]
[-24.11987686 144.05960083]
[-35.95179749 134.02040100]
[-39.59041977 118.93597412]
[-33.63661575 104.60656738]
[-20.37974358 96.54214478]
[-4.91734600 97.84362793]
[6.80497313 108.01057434]
[21.38674545 104.49320221]
[35.96852112 100.97583008]
[50.55029297 97.45845795]
[65.10646057 93.83659363]
[79.63627625 90.11041260]
[81.23915863 88.63653564]
[82.93505096 87.37109375]
[74.97409821 74.65798187]
[67.01315308 61.94487000]
[59.05220032 49.23175430]
[45.17035294 41.64196014]
[44.97328949 26.74865913]
[37.01233673 14.03554630]
[29.05138588 1.32243228]
[21.55507469 1.32048082]
[14.58668709 -1.25261700]
[8.99149799 -6.03456259]
[5.43074274 -12.39831066]
[4.30362415 -19.53401375]
[5.70301771 -26.55199051]
[9.40972233 -32.59364319]
[2.38031769 -45.84458542]
[-4.64908648 -59.09552765]
[-11.67849064 -72.34647369]
[-20.97036743 -73.88562012]
[-28.40412331 -79.44222260]
[-32.39076614 -87.67082214]
[-32.15121078 -96.67361450]
[-27.86539650 -104.43773651]
[-34.31820679 -117.97882843]
[-40.77101517 -131.51992798]
[-47.22382736 -145.06101990]
[-53.67663956 -158.60211182]
[-66.59806824 -167.73158264]
[-65.08840942 -182.54948425]
[-71.63817596 -196.04394531]
[-78.28456879 -209.49108887]
[-84.93095398 -222.93821716]
[-100.24836731 -225.41947937]
[-111.15804291 -236.45390320]
[-113.46500397 -251.79852295]
[-106.28217316 -265.55303955]
[-92.37149048 -272.42852783]
[-77.08190155 -269.78125000]
[-66.29256439 -258.62915039]
[-64.15219879 -243.26039124]
[-71.48381805 -229.58460999]
[-64.83743286 -216.13748169]
[-58.19104004 -202.69033813]
[-52.41279221 -198.08952332]
[-51.54731369 -189.00230408]
[-39.08743668 -180.84136963]
[-40.13554382 -165.05491638]
[-33.68273163 -151.51382446]
[-27.22992325 -137.97273254]
[-20.77711105 -124.43164062]
[-14.32430172 -110.89054108]
[3.63241482 -100.70970154]
[1.57245183 -79.37587738]
[8.60185623 -66.12493134]
[15.63125992 -52.87398911]
[22.66066360 -39.62304688]
[42.85356522 -29.80952835]
[41.76449966 -6.63851833]
[49.72545242 6.07459545]
[57.68640137 18.78771019]
[70.99882507 25.46817589]
[71.76531219 41.27080536]
[79.72626495 53.98391724]
[87.68721771 66.69702911]
[95.64816284 79.41014862]
[110.44451904 81.87348175]
[122.09493256 72.42531586]
[133.74534607 62.97714996]
[145.39576721 53.52898407]
[157.04617310 44.08082199]
[168.62852478 34.54933548]
[180.14221191 24.93502235]
[191.65589905 15.32070732]
[203.16958618 5.70639372]
[214.68327332 -3.90792060]
[226.19696045 -13.52223492]
[237.71064758 -23.13654900]
[240.33763123 -29.19326591]
[244.93672180 -32.51901627]
[249.69529724 -32.85577393]
[261.48004150 -42.13584518]
[264.79446411 -57.83279419]
[279.19738770 -64.89929199]
[293.64013672 -57.91452789]
[297.04345703 -42.23661423]
[286.79660034 -29.89230537]
[270.76013184 -30.35109901]
[258.97537231 -21.07102776]
[247.32495117 -11.62286282]
[235.81126404 -2.00854850]
[224.29759216 7.60576534]
[212.78390503 17.22007942]
[201.27021790 26.83439445]
[189.75653076 36.44870758]
[178.24284363 46.06302261]
[175.12525940 52.75901413]
[166.49433899 55.73123550]
[154.84393311 65.17939758]
[143.19351196 74.62756348]
[131.54309082 84.07572937]
[119.89267731 93.52389526]
[134.64657593 90.81785583]
[149.40046692 88.11181641]
[162.39392090 80.61714172]
[176.80389404 76.45151520]
[191.79212952 75.85727692]
[206.48666382 78.86900330]
[220.03268433 85.31147766]
[231.64213562 94.80992126]
[240.63967896 106.81176758]
[246.50186157 120.61882019]
[248.88768005 135.42787170]
[247.65832520 150.37741089]
[242.88533020 164.59776306]
[234.84632874 177.26167297]
[224.00901794 187.63241577]
[211.00382996 195.10671997]
[196.58732605 199.24972534]
[181.59819031 199.82046509]
[166.90838623 196.78569031]
[153.37249756 190.32197571]
[141.77795410 180.80534363]
[132.79924011 168.78939819]
[126.95871735 154.97315979]
[124.59622955 140.16300964]
[117.40484619 126.99927521]
[110.21346283 113.83553314]
[117.95076752 127.63571167]
[110.21346283 140.36297607]
[110.21346283 155.36297607]
[110.21346283 170.36297607]
[110.21346283 185.36297607]
[110.21346283 200.36297607]
[110.21346283 215.36297607]
[110.21346283 230.36297607]
[110.21346283 245.36297607]
[110.21346283 260.36297607]
[110.21346283 275.36297607]
[110.21346283 290.36297607]
[110.21346283 305.36297607]
[120.81840515 307.96185303]
[130.51467896 313.70031738]
[138.36886597 322.25793457]
[143.56098938 333.03674316]
[145.46678162 345.20120239]
[143.72587585 357.74258423]
[138.28889465 369.56259155]
[129.43794250 379.56936646]
[132.64074707 394.22344971]
[135.84356689 408.87753296]
[139.04637146 423.53158569]
[142.24919128 438.18566895]
[153.68611145 449.93847656]
[148.96656799 465.64382935]
[132.94561768 469.14538574]
[122.10423279 456.84106445]
[127.59511566 441.38848877]
[124.39230347 426.73440552]
[121.18948364 412.08032227]
[117.98667145 397.42623901]
[114.78385925 382.77218628]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 18]
[8 17]
[9 16]
[22 197]
[23 196]
[24 195]
[25 194]
[26 193]
[27 192]
[28 191]
[29 190]
[30 189]
[31 188]
[32 187]
[33 186]
[35 184]
[36 56]
[37 55]
[39 54]
[40 53]
[41 52]
[42 51]
[58 122]
[59 121]
[60 120]
[61 119]
[63 117]
[64 116]
[65 115]
[72 113]
[73 112]
[74 111]
[75 110]
[80 108]
[81 107]
[82 106]
[83 105]
[84 104]
[86 102]
[87 100]
[88 99]
[89 98]
[123 158]
[124 157]
[125 156]
[126 155]
[127 154]
[128 152]
[129 151]
[130 150]
[131 149]
[132 148]
[133 147]
[134 146]
[137 145]
[138 144]
[205 218]
[206 217]
[207 216]
[208 215]
[209 214]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
