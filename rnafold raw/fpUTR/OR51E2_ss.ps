%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:58:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUCUCCACACCCUGAAGACACAGUGAGUUAGCACCACCACCAGGAAUUGGCCUUUCAGCUCUGUGCCUGUCUCCAGUCAGGCUGGAAUAAGUCUCCUCAUAUUUGCAAGCUCGGCCCUCCCCUGGAAUCUAAAGCCUCCUCAGCCUUCUGAGUCAGCCUGAAAGGAACAGGCCGAACUGCUGUAUGGGCUCUACUGCCAGUGUGACCUCACCCUCUCCAGUCACCCCUCCUCAGUUCCAGCU\
) } def
/len { sequence length } bind def

/coor [
[98.85788727 1165.25964355]
[89.24059296 1153.70300293]
[81.65676880 1140.72082520]
[76.31330109 1126.66748047]
[73.35597992 1111.92626953]
[72.86546326 1096.89929199]
[74.85514832 1081.99658203]
[79.27075195 1067.62463379]
[85.99180603 1054.17553711]
[94.83496094 1042.01623535]
[105.55896759 1031.47839355]
[117.87126923 1022.84960938]
[131.43597412 1016.36511230]
[145.88302612 1012.20184326]
[144.15577698 997.30163574]
[142.42854309 982.40142822]
[133.27717590 970.64978027]
[139.37391663 956.05041504]
[137.64668274 941.15020752]
[135.91943359 926.25000000]
[125.67588806 921.28656006]
[119.02304840 911.90332031]
[117.70203400 900.35650635]
[122.15447235 889.49157715]
[131.38487244 882.04193115]
[130.04028320 867.10235596]
[128.69569397 852.16271973]
[127.35110474 837.22308350]
[126.00651550 822.28350830]
[113.14691162 814.81567383]
[107.07875061 801.04461670]
[110.32093811 786.16705322]
[121.83489990 775.93304443]
[120.49031067 760.99340820]
[119.14572144 746.05383301]
[117.80113220 731.11419678]
[107.35070038 727.32019043]
[99.02570343 719.87420654]
[94.04835510 709.81835938]
[93.16838837 698.58123779]
[96.55032349 687.77532959]
[103.74437714 678.96551514]
[113.74588013 673.44232178]
[112.97685242 658.46203613]
[112.20781708 643.48181152]
[101.18588257 638.45416260]
[93.29396057 629.16821289]
[90.07147980 617.34069824]
[92.18703461 605.19281006]
[99.30075073 595.03283691]
[110.11717224 588.81768799]
[109.73253632 573.82263184]
[109.34789276 558.82757568]
[108.96324921 543.83251953]
[108.57860565 528.83740234]
[95.89856720 517.77410889]
[95.13932800 500.62484741]
[107.26009369 487.99618530]
[106.68321228 473.00729370]
[106.10632324 458.01837158]
[105.52944183 443.02947998]
[91.36972809 431.40139771]
[90.20921326 412.79510498]
[103.25450134 399.03292847]
[102.29344940 384.06375122]
[98.73649597 377.60473633]
[101.41728973 368.89669800]
[100.64826202 353.91641235]
[99.87922668 338.93615723]
[99.11019897 323.95587158]
[98.34116364 308.97558594]
[97.57212830 293.99533081]
[94.09828949 287.49121094]
[96.89053345 278.81826782]
[96.31364441 263.82937622]
[95.73676300 248.84048462]
[84.66698456 238.94120789]
[83.86841583 223.74855042]
[94.32674408 212.20466614]
[93.74985504 197.21575928]
[93.17297363 182.22685242]
[92.59608459 167.23796082]
[92.01920319 152.24905396]
[91.44231415 137.26014709]
[90.86543274 122.27124786]
[90.28854370 107.28234100]
[85.10807037 93.20531464]
[75.83110809 81.41812134]
[66.55413818 69.63092804]
[57.27717209 57.84373856]
[48.00020599 46.05654526]
[33.38522339 39.99743652]
[31.59392738 25.21093941]
[15.87299633 23.58987427]
[5.96784973 11.27469635]
[7.75503588 -4.42821789]
[20.17424965 -14.20260715]
[35.85739136 -12.24950027]
[45.49993134 0.27235907]
[43.38112259 15.93397427]
[57.33255386 21.14998436]
[59.78739929 36.77957916]
[69.06436920 48.56677246]
[78.34133148 60.35396576]
[87.61829376 72.14115906]
[96.89526367 83.92835236]
[104.09880829 81.84053802]
[99.92317200 67.43344879]
[95.74754333 53.02636337]
[91.57213593 38.61921310]
[105.97934723 34.44403076]
[110.15463257 48.85073471]
[114.33026123 63.25782013]
[118.50588989 77.66490173]
[125.70943451 75.57708740]
[127.24547577 60.65594482]
[128.78152466 45.73479843]
[129.55055237 30.75452614]
[129.55055237 15.75452614]
[118.19940948 4.75783587]
[118.03231812 -11.04556942]
[129.14840698 -22.27980995]
[144.95269775 -22.27980995]
[156.06878662 -11.04556942]
[155.90168762 4.75783587]
[144.55055237 15.75452614]
[144.55055237 30.75452614]
[154.28373718 19.34115410]
[168.84307861 15.73205662]
[182.78024292 21.27781677]
[190.87973022 33.90312195]
[190.11058044 48.88338852]
[180.76062012 60.61277008]
[166.32876587 64.70195007]
[152.21562195 59.62068939]
[143.70266724 47.27083969]
[142.16662598 62.19198608]
[140.63058472 77.11312866]
[147.61796570 79.83826447]
[161.59275818 85.28852081]
[168.58015442 88.01365662]
[177.55180359 75.99245453]
[186.52346802 63.97124863]
[195.49511719 51.95004272]
[204.46678162 39.92883682]
[205.85154724 23.58826065]
[220.80828857 16.86307716]
[233.95077515 26.67158127]
[231.75917053 42.92362213]
[216.48799133 48.90049744]
[207.51632690 60.92169952]
[198.54467773 72.94290161]
[189.57301331 84.96411133]
[180.60134888 96.98531342]
[140.47392273 118.72469330]
[105.27745056 106.70545959]
[105.85433197 121.69435883]
[106.43122101 136.68325806]
[107.00810242 151.67216492]
[107.58499146 166.66107178]
[108.16187286 181.64997864]
[108.73875427 196.63887024]
[109.31564331 211.62777710]
[120.63030243 222.33366394]
[121.00182343 237.54277039]
[110.72566223 248.26359558]
[111.30255127 263.25250244]
[111.87943268 278.24139404]
[112.55240631 293.22628784]
[113.32143402 308.20657349]
[114.09046936 323.18682861]
[114.85950470 338.16711426]
[115.62853241 353.14739990]
[116.39756775 368.12765503]
[117.26262665 383.10269165]
[118.22367859 398.07186890]
[128.48680115 404.01876831]
[134.55187988 414.07290649]
[135.01622009 425.68579102]
[129.88014221 435.97781372]
[120.51834106 442.45257568]
[121.09523010 457.44149780]
[121.67211151 472.43038940]
[122.24900055 487.41931152]
[133.11056519 495.36138916]
[137.35968018 507.92324829]
[133.65969849 520.45501709]
[123.57366943 528.45275879]
[123.95831299 543.44787598]
[124.34295654 558.44293213]
[124.72760010 573.43798828]
[125.11224365 588.43304443]
[140.35914612 598.28009033]
[146.57182312 615.16613770]
[141.43316650 632.24499512]
[127.18809509 642.71276855]
[127.95712280 657.69305420]
[128.72615051 672.67327881]
[145.20744324 682.45147705]
[152.38317871 700.05834961]
[147.50981140 718.28033447]
[132.74073792 729.76959229]
[134.08532715 744.70922852]
[135.42991638 759.64886475]
[136.77452087 774.58843994]
[149.93078613 782.60211182]
[155.77737427 796.66168213]
[152.26564026 811.29492188]
[140.94612122 820.93890381]
[142.29072571 835.87854004]
[143.63531494 850.81811523]
[144.97990417 865.75775146]
[146.32449341 880.69738770]
[161.32493591 892.29754639]
[163.02987671 910.86181641]
[150.81965637 924.52276611]
[152.54690552 939.42297363]
[154.27413940 954.32318115]
[163.54905701 967.14062500]
[157.32876587 980.67419434]
[159.05599976 995.57440186]
[160.78324890 1010.47460938]
[175.79959106 1011.22241211]
[190.48802185 1014.43182373]
[204.44779968 1020.01519775]
[217.29812622 1027.82031250]
[228.68841553 1037.63403320]
[238.30793762 1049.18896484]
[245.89427185 1062.16955566]
[251.24043274 1076.22192383]
[254.20060730 1090.96264648]
[254.69401550 1105.98950195]
[252.70719910 1120.89257812]
[248.29437256 1135.26538086]
[241.57589722 1148.71569824]
[232.73509216 1160.87670898]
[222.01312256 1171.41662598]
[209.70248413 1180.04785156]
[196.13902283 1186.53491211]
[181.69276428 1190.70092773]
[166.75782776 1192.43225098]
[151.74162292 1191.68151855]
[137.05381775 1188.46923828]
[123.09510803 1182.88317871]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 222]
[15 221]
[16 220]
[18 218]
[19 217]
[20 216]
[25 213]
[26 212]
[27 211]
[28 210]
[29 209]
[33 205]
[34 204]
[35 203]
[36 202]
[43 198]
[44 197]
[45 196]
[51 192]
[52 191]
[53 190]
[54 189]
[55 188]
[58 184]
[59 183]
[60 182]
[61 181]
[64 176]
[65 175]
[67 174]
[68 173]
[69 172]
[70 171]
[71 170]
[72 169]
[74 168]
[75 167]
[76 166]
[79 163]
[80 162]
[81 161]
[82 160]
[83 159]
[84 158]
[85 157]
[86 156]
[87 106]
[88 105]
[89 104]
[90 103]
[91 102]
[93 100]
[115 138]
[116 137]
[117 136]
[118 127]
[119 126]
[141 154]
[142 153]
[143 152]
[144 151]
[145 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
