%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGUGAUGGCGUCAGGGGCCGGGGCGCCGCUUCCUGUUGUCAGUGGCCGAGAGACCGCAUCGUCGGCUCGGAGGCUGAGGGGCUGCCGCGGCCGGGAGCGCCCCUCGCCUCGCUCCUCGCUCCGCUUGGUGUCAUGUGAUUCUCUGAGGGAGCAGCUGCGUGAGUGGAG\
) } def
/len { sequence length } bind def

/coor [
[282.72509766 417.37402344]
[287.10867310 404.61422729]
[279.02014160 391.98190308]
[270.93161011 379.34954834]
[262.84307861 366.71722412]
[254.75456238 354.08489990]
[246.66604614 341.45257568]
[238.57751465 328.82025146]
[230.48899841 316.18792725]
[217.10998535 309.64178467]
[216.18446350 293.84768677]
[208.09593201 281.21536255]
[193.24121094 280.52627563]
[181.50177002 271.11087036]
[177.51083374 256.41647339]
[183.00112915 242.02331543]
[174.91261292 229.39097595]
[166.82408142 216.75865173]
[158.73554993 204.12631226]
[150.64703369 191.49398804]
[134.65765381 184.30105591]
[133.91818237 165.91935730]
[125.59895325 153.43774414]
[117.27973175 140.95614624]
[108.96050262 128.47453308]
[100.64127350 115.99293518]
[86.79630280 110.22087097]
[72.07453156 113.09653473]
[57.35275650 115.97219086]
[42.63098526 118.84784698]
[27.90921021 121.72351074]
[13.18743896 124.59916687]
[4.34941864 137.42597961]
[-10.62151718 140.13259888]
[-22.79545784 131.62783813]
[-34.80007172 142.80018616]
[-50.39641190 137.73204041]
[-53.54030609 121.63706970]
[-40.99757767 111.07241058]
[-25.67111778 116.90607452]
[-17.59245110 104.44530487]
[-2.70344448 101.31925964]
[10.31177902 109.87739563]
[25.03355217 107.00173950]
[39.75532532 104.12607574]
[54.47709656 101.25041962]
[69.19886780 98.37475586]
[83.92063904 95.49909973]
[87.20085907 80.86215210]
[75.11437988 71.97862244]
[63.02790451 63.09509659]
[50.94142914 54.21156693]
[32.61306381 52.62890244]
[26.16184235 36.32613754]
[13.91420841 27.66614532]
[1.66657305 19.00615501]
[-13.86570740 21.92571259]
[-26.86579704 12.93832302]
[-29.62097549 -2.62395668]
[-20.49664307 -15.52830029]
[-4.90610361 -18.11879158]
[7.90105104 -8.85853481]
[10.32656384 6.75852060]
[22.57419777 15.41851139]
[34.82183456 24.07850266]
[46.81770325 22.34563446]
[57.09931946 29.49275780]
[59.82495499 42.12509155]
[71.91143036 51.00861740]
[83.99790955 59.89214706]
[96.08438873 68.77567291]
[110.17977905 63.64537430]
[113.72833252 49.07115936]
[117.27688599 34.49694443]
[120.82544708 19.92272949]
[124.37400055 5.34851360]
[123.36326599 -3.76902699]
[128.12393188 -9.45963192]
[131.93963623 -23.96619797]
[135.75532532 -38.47276306]
[139.57102966 -52.97932816]
[143.38671875 -67.48589325]
[147.20242310 -81.99246216]
[151.01811218 -96.49902344]
[150.17504883 -105.63359833]
[155.03945923 -111.23578644]
[159.12100220 -125.66980743]
[163.06979370 -140.14070129]
[159.09750366 -155.45512390]
[169.81784058 -165.79551697]
[164.98107910 -181.46516418]
[176.32986450 -193.30310059]
[192.18955994 -189.13148499]
[196.24505615 -173.24171448]
[184.32441711 -161.97981262]
[188.56962585 -147.70300293]
[177.57637024 -136.32501221]
[178.92100525 -129.02851868]
[173.55502319 -121.58824921]
[169.47348022 -107.15423584]
[165.52468872 -92.68332672]
[161.70898438 -78.17676544]
[157.89329529 -63.67019653]
[154.07759094 -49.16363144]
[150.26188660 -34.65706635]
[146.44619751 -20.15049934]
[142.63049316 -5.64393425]
[138.94821167 8.89706993]
[135.39965820 23.47128487]
[131.85110474 38.04550171]
[128.30255127 52.61971664]
[124.75399017 67.19393158]
[113.12287903 107.67370605]
[121.44210815 120.15531158]
[129.76133728 132.63691711]
[138.08056641 145.11851501]
[146.39979553 157.60012817]
[158.89366150 160.90287781]
[165.56117249 171.50180054]
[163.27935791 183.40545654]
[171.36788940 196.03779602]
[179.45640564 208.67012024]
[187.54493713 221.30245972]
[195.63346863 233.93478394]
[211.00331116 234.97109985]
[222.67933655 244.74473572]
[226.31840515 259.34683228]
[220.72827148 273.12683105]
[228.81678772 285.75915527]
[242.77433777 293.20883179]
[243.12132263 308.09939575]
[251.20985413 320.73171997]
[259.29837036 333.36404419]
[267.38690186 345.99636841]
[275.47543335 358.62869263]
[283.56393433 371.26104736]
[291.65246582 383.89337158]
[299.74099731 396.52569580]
[316.87838745 399.94515991]
[326.07568359 414.40609741]
[322.06719971 430.72152710]
[330.38641357 443.20315552]
[338.70565796 455.68475342]
[352.79769897 462.87673950]
[353.41818237 477.75842285]
[361.73739624 490.24002075]
[375.82943726 497.43203735]
[376.44992065 512.31372070]
[390.54196167 519.50567627]
[391.16244507 534.38739014]
[405.25448608 541.57934570]
[405.87496948 556.46105957]
[414.19418335 568.94262695]
[428.01000977 578.76910400]
[422.39218140 594.76525879]
[405.46600342 593.79510498]
[401.71258545 577.26190186]
[393.39337158 564.78027344]
[379.89636230 558.48101807]
[378.68084717 542.70660400]
[365.18383789 536.40734863]
[363.96832275 520.63293457]
[350.47131348 514.33367920]
[349.25579834 498.55926514]
[340.93655396 486.07763672]
[327.43957520 479.77841187]
[326.22406006 464.00396729]
[317.90481567 451.52236938]
[309.58560181 439.04077148]
[296.69961548 438.29861450]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 138]
[3 137]
[4 136]
[5 135]
[6 134]
[7 133]
[8 132]
[9 131]
[11 129]
[12 128]
[16 124]
[17 123]
[18 122]
[19 121]
[20 120]
[22 117]
[23 116]
[24 115]
[25 114]
[26 113]
[27 48]
[28 47]
[29 46]
[30 45]
[31 44]
[32 43]
[35 40]
[49 71]
[50 70]
[51 69]
[52 68]
[54 65]
[55 64]
[56 63]
[72 112]
[73 111]
[74 110]
[75 109]
[76 108]
[78 107]
[79 106]
[80 105]
[81 104]
[82 103]
[83 102]
[84 101]
[86 100]
[87 99]
[88 97]
[90 95]
[141 169]
[142 168]
[143 167]
[145 165]
[146 164]
[148 162]
[150 160]
[152 158]
[153 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
