%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:45:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGAUGCUGCCGCAUUGGCCGCUGCGGCACGGACGGCGCAGCCUCGGGCGCGGCCCGGCACAGGCGCCGGCGGUCCCCGCCAGCUAGCAGCCCGGCGAGGCGCUGGCCCACCCAUGGUCCUCGGGCGGCGGCCCCUGCGCCCAGCCCUGCGCGUAGCCUCCGUCUCUCGCCCGGGGCCGCCGAGCCCCCGACACGGGCGAG\
) } def
/len { sequence length } bind def

/coor [
[259.97494507 351.57211304]
[251.65345764 339.09201050]
[243.33197021 326.61190796]
[235.01049805 314.13180542]
[226.68901062 301.65170288]
[213.19087219 295.35491943]
[211.97248840 279.58071899]
[203.65100098 267.10061646]
[195.32951355 254.62051392]
[187.00802612 242.14041138]
[178.68653870 229.66030884]
[170.26873779 217.24497986]
[161.75511169 204.89514160]
[153.24150085 192.54531860]
[144.72787476 180.19549561]
[132.88777161 177.69836426]
[125.69462585 167.47363281]
[127.45296478 154.69163513]
[119.13147736 142.21154785]
[110.80999756 129.73144531]
[93.43853760 130.94772339]
[78.05520630 122.78685760]
[65.38531494 130.81642151]
[52.71542740 138.84597778]
[40.04553223 146.87553406]
[27.37564278 154.90510559]
[14.70575047 162.93466187]
[7.19111204 176.85733032]
[-7.70090628 177.13490295]
[-10.91305447 192.60932922]
[-24.17210579 201.21008301]
[-39.61169815 197.83451843]
[-48.07180023 184.48527527]
[-44.53317642 169.08222961]
[-31.09523582 160.76374817]
[-15.73046684 164.46501160]
[-9.12206459 151.11666870]
[6.67618990 150.26477051]
[19.34608078 142.23521423]
[32.01597214 134.20564270]
[44.68586731 126.17608643]
[57.35575867 118.14652252]
[70.02565002 110.11696625]
[69.45288849 108.22731018]
[68.99913025 106.30561066]
[54.01035309 105.72541046]
[39.02157974 105.14521027]
[24.03280449 104.56501007]
[9.04403019 103.98480988]
[-5.94474506 103.40461731]
[-22.00589561 108.83377075]
[-31.66905022 94.90323639]
[-20.95795441 81.76136780]
[-5.36454630 88.41584015]
[9.62422848 88.99604034]
[24.61300278 89.57624054]
[39.60177612 90.15643311]
[54.59055328 90.73663330]
[69.57933044 91.31683350]
[72.20694733 84.88838196]
[76.17391968 79.18816376]
[81.28907013 74.49086761]
[87.30590057 71.02286530]
[93.93446350 68.95126343]
[94.63062286 53.96743011]
[95.32678223 38.98359299]
[96.02294922 23.99975586]
[96.71910858 9.01591873]
[89.63062286 -5.12847710]
[97.95027161 -17.48294067]
[98.64643097 -32.46677780]
[95.91735840 -41.19087601]
[99.47108459 -47.67657089]
[100.39904022 -62.64784241]
[101.32699585 -77.61911011]
[102.25495148 -92.59037781]
[95.38619995 -106.84278107]
[103.89604187 -119.06701660]
[104.82399750 -134.03828430]
[105.75195312 -149.00955200]
[106.67990875 -163.98081970]
[107.60786438 -178.95208740]
[88.83099365 -197.44380188]
[96.97850800 -226.46705627]
[94.43731689 -241.25022888]
[91.89611816 -256.03341675]
[89.35491943 -270.81658936]
[86.81372833 -285.59976196]
[84.27252960 -300.38293457]
[79.73184204 -308.31640625]
[81.80824280 -315.41439819]
[79.49612427 -330.23513794]
[77.18400574 -345.05587769]
[64.27348328 -354.17147827]
[61.67243195 -369.76025391]
[70.92401123 -382.57366943]
[86.53942108 -385.00976562]
[99.25431824 -375.62322998]
[101.52517700 -359.98294067]
[92.00473785 -347.36798096]
[94.31685638 -332.54727173]
[96.62897491 -317.72653198]
[99.05570984 -302.92413330]
[101.59690094 -288.14096069]
[104.13809967 -273.35778809]
[106.67929840 -258.57461548]
[109.22048950 -243.79142761]
[111.76168823 -229.00823975]
[126.68585968 -227.50189209]
[132.12994385 -241.47909546]
[137.57402039 -255.45628357]
[134.55456543 -271.57507324]
[147.17852783 -282.04251099]
[162.45945740 -276.09063721]
[164.67765808 -259.84219360]
[151.55122375 -250.01220703]
[146.10713196 -236.03500366]
[140.66305542 -222.05781555]
[144.55477905 -213.87187195]
[145.86567688 -205.21768188]
[144.65893555 -196.86236572]
[141.21350098 -189.49708557]
[135.98602295 -183.67996216]
[129.55882263 -179.79409790]
[122.57913208 -178.02413940]
[121.65117645 -163.05285645]
[120.72322083 -148.08158875]
[119.79526520 -133.11032104]
[118.86730957 -118.13905334]
[125.80242920 -104.95750427]
[117.22621918 -91.66242218]
[116.29826355 -76.69115448]
[115.37030792 -61.71988678]
[114.44235229 -46.74861526]
[113.63026428 -31.77061462]
[112.93410492 -16.78677750]
[120.07238770 -3.71412659]
[111.70294189 9.71208096]
[111.00678253 24.69591713]
[110.31062317 39.67975235]
[109.61445618 54.66358948]
[108.91829681 69.64743042]
[125.95020294 81.90576172]
[131.56417847 102.12545013]
[123.29009247 121.40995789]
[131.61157227 133.89006042]
[139.93305969 146.37014771]
[156.62374878 154.14147949]
[157.07769775 171.68186951]
[165.59132385 184.03169250]
[174.10494995 196.38153076]
[182.61856079 208.73135376]
[190.07075500 214.02497864]
[191.16664124 221.33882141]
[199.48812866 233.81892395]
[207.80961609 246.29902649]
[216.13110352 258.77911377]
[224.45259094 271.25921631]
[238.54592896 278.44866943]
[239.16909790 293.33023071]
[247.49058533 305.81033325]
[255.81207275 318.29043579]
[264.13357544 330.77053833]
[272.45504761 343.25061035]
[284.93060303 346.54171753]
[291.60388184 357.11309814]
[289.35693359 369.00320435]
[297.48428345 381.61059570]
[305.61163330 394.21795654]
[313.73901367 406.82534790]
[321.86636353 419.43273926]
[329.99371338 432.04010010]
[338.12106323 444.64749146]
[346.82479858 456.86407471]
[356.08612061 468.66357422]
[365.34744263 480.46307373]
[374.60876465 492.26254272]
[383.87008667 504.06204224]
[399.58883667 505.70394897]
[409.47766113 518.03228760]
[407.66964722 533.73278809]
[395.23745728 543.49072266]
[379.55694580 541.51678467]
[369.93099976 528.98217773]
[372.07058716 513.32336426]
[362.80926514 501.52386475]
[353.54794312 489.72439575]
[344.28662109 477.92489624]
[335.02529907 466.12539673]
[332.11810303 480.84097290]
[319.73724365 489.30944824]
[304.96881104 486.68392944]
[296.26535034 474.46716309]
[298.60815430 459.65124512]
[310.65640259 450.71594238]
[325.51370239 452.77484131]
[317.38632202 440.16748047]
[309.25897217 427.56008911]
[301.13162231 414.95269775]
[293.00427246 402.34533691]
[284.87689209 389.73794556]
[276.74954224 377.13055420]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 164]
[2 163]
[3 162]
[4 161]
[5 160]
[7 158]
[8 157]
[9 156]
[10 155]
[11 154]
[12 152]
[13 151]
[14 150]
[15 149]
[18 147]
[19 146]
[20 145]
[22 43]
[23 42]
[24 41]
[25 40]
[26 39]
[27 38]
[29 36]
[45 59]
[46 58]
[47 57]
[48 56]
[49 55]
[50 54]
[64 142]
[65 141]
[66 140]
[67 139]
[68 138]
[70 136]
[71 135]
[73 134]
[74 133]
[75 132]
[76 131]
[78 129]
[79 128]
[80 127]
[81 126]
[82 125]
[84 108]
[85 107]
[86 106]
[87 105]
[88 104]
[89 103]
[91 102]
[92 101]
[93 100]
[109 118]
[110 117]
[111 116]
[167 202]
[168 201]
[169 200]
[170 199]
[171 198]
[172 197]
[173 196]
[174 189]
[175 188]
[176 187]
[177 186]
[178 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
