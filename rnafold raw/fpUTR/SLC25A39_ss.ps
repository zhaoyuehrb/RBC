%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:24:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCCUCGUGGCGCGGUGUAGGGGCGGGGCCCCCUUGGCUGCUUUCGGCGUCGGCCUAGGUGCGCUGCGAGCGCGCGCGGACCGCGCACAGGCGGCGGAGCCGGUAUGGGCCCGCCUGACCCUGGGCGCCGCGCCGCACGAGCACCAGCCUAGAGCCAGGACUGAAGCUUCAAG\
) } def
/len { sequence length } bind def

/coor [
[-117.63785553 414.38330078]
[-126.41125488 426.54995728]
[-135.18466187 438.71661377]
[-143.95805359 450.88323975]
[-152.73146057 463.04989624]
[-161.50485229 475.21655273]
[-170.27825928 487.38320923]
[-179.05165100 499.54986572]
[-187.82505798 511.71652222]
[-196.59844971 523.88317871]
[-197.65292358 530.46301270]
[-201.33511353 534.84515381]
[-205.90852356 536.31994629]
[-208.26423645 551.96478271]
[-222.18234253 557.26916504]
[-219.96429443 572.91699219]
[-229.52726746 585.49975586]
[-245.19772339 587.55218506]
[-257.67864990 577.85675049]
[-259.56530762 562.16546631]
[-249.73843384 549.78778076]
[-234.02809143 548.06707764]
[-232.33056641 533.26953125]
[-217.75427246 527.11791992]
[-208.76510620 515.10980225]
[-199.99171448 502.94311523]
[-191.21830750 490.77645874]
[-182.44491577 478.60980225]
[-173.67150879 466.44317627]
[-164.89811707 454.27651978]
[-156.12471008 442.10986328]
[-147.35130310 429.94320679]
[-138.57791138 417.77655029]
[-129.80450439 405.60989380]
[-121.14004517 393.36541748]
[-112.58520508 381.04409790]
[-104.03036499 368.72280884]
[-95.47552490 356.40148926]
[-86.92068481 344.08016968]
[-88.75662231 332.10327148]
[-81.70263672 321.76193237]
[-69.09904480 318.92324829]
[-60.32564545 306.75659180]
[-51.55224609 294.58996582]
[-42.77884674 282.42330933]
[-41.41254807 275.13519287]
[-33.73867416 270.11965942]
[-24.74950981 258.11154175]
[-15.76034546 246.10342407]
[-6.87870932 234.01556396]
[-5.71041632 219.16683960]
[8.63701630 212.49888611]
[10.00331402 205.21078491]
[17.67718697 200.19525146]
[26.66635132 188.18713379]
[35.65551758 176.17901611]
[44.53715134 164.09114075]
[53.31055450 151.92448425]
[62.08395386 139.75784302]
[70.85735321 127.59118652]
[79.63075256 115.42453003]
[88.40415192 103.25787354]
[96.95899200 90.93656158]
[98.19262695 75.16352844]
[111.69685364 68.87979889]
[120.03040314 56.40775681]
[128.36395264 43.93571472]
[130.54081726 35.03036499]
[136.95922852 31.31725502]
[145.51406860 18.99594307]
[147.02903748 3.24743772]
[160.64326477 -2.79425025]
[169.19810486 -15.11556149]
[177.75294495 -27.43687439]
[180.08840942 -36.30194855]
[186.57206726 -39.89990234]
[195.34547424 -52.06655884]
[204.11886597 -64.23320770]
[212.89227295 -76.39986420]
[221.66566467 -88.56652069]
[230.43907166 -100.73316956]
[231.49353027 -107.31299591]
[235.17572021 -111.69516754]
[239.74913025 -113.16995239]
[248.95118713 -125.01571655]
[258.15325928 -136.86146545]
[260.50897217 -152.50631714]
[274.42709351 -157.81065369]
[283.62915039 -169.65640259]
[282.80200195 -182.54920959]
[290.73709106 -192.23094177]
[302.74609375 -193.84367371]
[312.15814209 -205.52330017]
[321.46554565 -217.28645325]
[330.56152344 -229.21386719]
[339.55068970 -241.22198486]
[348.53985596 -253.23010254]
[357.52902222 -265.23822021]
[366.51818848 -277.24633789]
[369.16857910 -286.02239990]
[375.77651978 -289.38665771]
[384.97860718 -301.23242188]
[394.18066406 -313.07815552]
[391.96261597 -328.72604370]
[401.52560425 -341.30877686]
[417.19604492 -343.36123657]
[429.67697144 -333.66577148]
[431.56365967 -317.97448730]
[421.73675537 -305.59677124]
[406.02642822 -303.87609863]
[396.82434082 -292.03033447]
[387.62228394 -280.18460083]
[378.52630615 -268.25717163]
[369.53713989 -256.24905396]
[360.54797363 -244.24093628]
[351.55880737 -232.23281860]
[342.56964111 -220.22470093]
[341.07348633 -212.96215820]
[333.31130981 -208.08438110]
[331.68576050 -200.84970093]
[323.83773804 -196.11125183]
[314.42572021 -184.43164062]
[312.67654419 -166.98388672]
[295.47491455 -160.45434570]
[286.27282715 -148.60858154]
[284.57531738 -133.81103516]
[269.99902344 -127.65940857]
[260.79693604 -115.81364441]
[251.59487915 -103.96788788]
[242.60571289 -91.95977020]
[233.83232117 -79.79311371]
[225.05891418 -67.62646484]
[216.28552246 -55.45981216]
[207.51211548 -43.29315567]
[198.73872375 -31.12650490]
[190.07424927 -18.88203430]
[181.51940918 -6.56072235]
[172.96456909 5.76058912]
[172.06150818 20.62779236]
[157.83537292 27.55078316]
[149.28053284 39.87209320]
[140.83599854 52.26926804]
[132.50244141 64.74131012]
[124.16889191 77.21335602]
[123.53133392 92.09430695]
[109.43103790 99.27011871]
[109.26511383 104.54782104]
[106.13740540 109.34829712]
[100.57080841 112.03127289]
[91.79740906 124.19792938]
[83.02400970 136.36457825]
[74.25060272 148.53123474]
[65.47720337 160.69789124]
[56.70380783 172.86454773]
[54.21047592 181.68652344]
[47.66363525 185.16818237]
[38.67446899 197.17630005]
[29.68530464 209.18441772]
[20.80366898 221.27227783]
[19.00784302 236.99124146]
[5.28794384 242.78895569]
[2.79461384 251.61094666]
[-3.75222683 255.09259033]
[-12.74139214 267.10070801]
[-21.73055649 279.10882568]
[-30.61219215 291.19668579]
[-39.38559341 303.36334229]
[-48.15899277 315.52999878]
[-56.93239212 327.69665527]
[-58.35118103 346.04107666]
[-74.59937286 352.63500977]
[-83.15421295 364.95632935]
[-91.70905304 377.27764893]
[-100.26389313 389.59893799]
[-108.81873322 401.92025757]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 34]
[2 33]
[3 32]
[4 31]
[5 30]
[6 29]
[7 28]
[8 27]
[9 26]
[10 25]
[13 24]
[15 22]
[35 175]
[36 174]
[37 173]
[38 172]
[39 171]
[42 169]
[43 168]
[44 167]
[45 166]
[47 165]
[48 164]
[49 163]
[50 161]
[52 159]
[54 158]
[55 157]
[56 156]
[57 154]
[58 153]
[59 152]
[60 151]
[61 150]
[62 149]
[63 146]
[65 144]
[66 143]
[67 142]
[69 141]
[70 140]
[72 138]
[73 137]
[74 136]
[76 135]
[77 134]
[78 133]
[79 132]
[80 131]
[81 130]
[84 129]
[85 128]
[86 127]
[88 125]
[89 124]
[92 122]
[93 121]
[94 119]
[95 117]
[96 116]
[97 115]
[98 114]
[99 113]
[101 112]
[102 111]
[103 110]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
