%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:14:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUCGCGUGGGGAGCCGGUCUUGGAGCAGCGGGAUUAGCUUCUAAAGUCUCUUUCAUCUCUCCUAAGGAAGAAGCCUAGAAGAGGAGGAAGAGGAAAGAAAAGGAGUCAGGAAUGCCUCUUAGAUAUCUCUUCCAAAUGCAUGAUGAAAAAGGUGGGAAGAUUACUUGAGCCAGGGAGUUGAAGGCUGCAGUGAGCCCUGUUUUUGCCACCACACUCCAGCUUGGGAUUGAUUUCUAAAGACUC\
) } def
/len { sequence length } bind def

/coor [
[131.09123230 128.62583923]
[117.64089203 139.26551819]
[100.78176880 143.82325745]
[83.17967987 141.32192993]
[67.71982574 131.92149353]
[58.29248428 143.58876038]
[62.16833496 158.49795532]
[56.58723450 172.66497803]
[43.88449097 180.73370361]
[29.04396820 179.78669739]
[19.61662483 191.45396423]
[10.18928051 203.12123108]
[0.76193672 214.78849792]
[-8.66540718 226.45576477]
[-18.09275055 238.12303162]
[-20.74780464 253.71987915]
[-34.76497269 258.75656128]
[-44.19231796 270.42382812]
[-53.61966324 282.09109497]
[-63.04700470 293.75836182]
[-72.47434998 305.42562866]
[-81.90169525 317.09292603]
[-91.32904053 328.76019287]
[-89.41122437 344.44769287]
[-99.21353149 356.84487915]
[-114.92042542 358.59671021]
[-127.21328735 348.66387939]
[-128.79898071 332.93933105]
[-118.73673248 320.75219727]
[-102.99630737 319.33282471]
[-93.56896210 307.66555786]
[-84.14161682 295.99829102]
[-74.71427917 284.33102417]
[-65.28693390 272.66375732]
[-55.85958862 260.99649048]
[-46.43224335 249.32922363]
[-44.45149612 234.56690979]
[-29.76002121 228.69569397]
[-20.33267784 217.02842712]
[-10.90533352 205.36116028]
[-1.47798920 193.69387817]
[7.94935465 182.02661133]
[17.37669945 170.35934448]
[13.33426380 156.04862976]
[18.55546951 141.93469238]
[31.23454857 133.50294495]
[46.62521362 134.16142273]
[56.05255890 122.49414825]
[51.32593536 108.25830841]
[36.79241562 104.54659271]
[22.25889778 100.83487701]
[7.72537851 97.12316895]
[-6.80814028 93.41145325]
[-21.34165955 89.69973755]
[-35.87517929 85.98802185]
[-51.16075897 90.06987762]
[-61.57765198 79.42386627]
[-76.11116791 75.71215057]
[-90.64469147 72.00043488]
[-105.17820740 68.28871918]
[-119.71173096 64.57700348]
[-134.99731445 68.65886688]
[-145.41419983 58.01284790]
[-159.94772339 54.30113220]
[-174.48123169 50.58942032]
[-183.54716492 51.49805832]
[-189.17671204 46.73581314]
[-203.66143799 42.83804703]
[-217.22999573 50.94175720]
[-232.53395081 46.99657822]
[-240.49374390 33.34311295]
[-236.38699341 18.08172226]
[-222.65013123 10.26671696]
[-207.43301392 14.53460121]
[-199.76367188 28.35331535]
[-185.27894592 32.25107956]
[-170.76953125 36.05590057]
[-156.23600769 39.76761627]
[-141.70248413 43.47933197]
[-127.45643616 39.13198471]
[-116.00001526 50.04348373]
[-101.46649170 53.75519943]
[-86.93297577 57.46691513]
[-72.39945221 61.17863083]
[-57.86593628 64.89034271]
[-43.61988831 60.54299927]
[-32.16346359 71.45449829]
[-17.62994385 75.16621399]
[-3.09642506 78.87792969]
[11.43709373 82.58964539]
[25.97061348 86.30136108]
[40.50413132 90.01307678]
[55.03765106 93.72479248]
[58.10667419 83.65075684]
[63.37581253 74.64767456]
[70.51862335 67.18218994]
[79.11316681 61.62872696]
[88.66674042 58.25084686]
[98.64405060 57.18899918]
[108.49719238 58.45521164]
[117.69570160 61.93490982]
[125.75513458 67.39562988]
[132.26254272 74.50198364]
[136.89758301 82.83599854]
[151.43110657 79.12428284]
[165.96463013 75.41256714]
[180.49813843 71.70085144]
[195.03166199 67.98913574]
[202.80755615 55.16199493]
[199.37603760 40.55977631]
[195.94453430 25.95755959]
[184.32528687 14.38496876]
[188.79873657 -1.39223754]
[204.76300049 -5.14382124]
[215.79541016 6.98952532]
[210.54675293 22.52605438]
[213.97825623 37.12827301]
[217.40977478 51.73049164]
[231.81065369 56.33310318]
[238.95358276 67.05529022]
[253.84242249 65.23255157]
[268.73126221 63.40981293]
[283.62011719 61.58707809]
[298.50894165 59.76433945]
[311.26663208 50.40744019]
[324.83981323 56.54083633]
[339.72863770 54.71810150]
[354.61749268 52.89536285]
[364.34426880 40.72869492]
[379.46963501 39.09227753]
[391.00872803 48.44023514]
[405.89758301 46.61750031]
[420.78643799 44.79476166]
[435.67526245 42.97202682]
[450.56411743 41.14928818]
[465.45294189 39.32654953]
[470.92517090 35.68144226]
[476.57162476 35.37583542]
[480.74633789 37.65303040]
[495.67703247 36.21268463]
[503.89666748 32.28152084]
[510.80819702 34.85085678]
[525.75610352 33.60207748]
[531.36450195 30.17012215]
[537.01849365 30.08189392]
[541.10253906 32.51796341]
[556.07757568 31.65290260]
[563.04022217 18.03418732]
[575.80041504 9.78352165]
[590.87695312 9.03263187]
[604.21588135 15.88316631]
[612.28051758 28.40623665]
[627.25555420 27.54117775]
[642.23059082 26.67611694]
[657.20562744 25.81105614]
[672.18066406 24.94599533]
[685.51165771 16.42570686]
[698.66394043 23.41613960]
[713.63897705 22.55107880]
[728.61401367 21.68601799]
[743.58905029 20.82095718]
[758.51019287 19.28491592]
[773.34741211 17.08098602]
[788.18463135 14.87705517]
[803.02178955 12.67312527]
[817.85900879 10.46919537]
[827.27056885 -1.94289517]
[842.34899902 -3.96663189]
[854.12408447 5.08235884]
[868.96124268 2.87842894]
[883.79846191 0.67449909]
[898.63568115 -1.52943075]
[903.61981201 -16.00067711]
[914.76611328 -26.48964119]
[929.51324463 -30.58603668]
[944.47247314 -27.34854317]
[956.20617676 -17.52111244]
[962.01812744 -3.36201406]
[960.57269287 11.87509251]
[952.20214844 24.68883324]
[938.82983398 32.13470078]
[923.52874756 32.50169373]
[909.81488037 25.70547867]
[900.83959961 13.30777550]
[886.00238037 15.51170540]
[871.16516113 17.71563530]
[856.32800293 19.91956520]
[847.69158936 32.00048065]
[832.67596436 34.44694138]
[820.06292725 25.30640221]
[805.22576904 27.51033211]
[790.38854980 29.71426201]
[775.55133057 31.91819191]
[760.71411133 34.12211990]
[772.91516113 42.84767532]
[776.75769043 57.34714508]
[770.47930908 70.97000122]
[756.95977783 77.46778107]
[742.40008545 73.86012268]
[733.47839355 61.80176926]
[734.28692627 46.82357407]
[744.45410156 35.79598999]
[729.47906494 36.66105270]
[714.50402832 37.52611160]
[699.52899170 38.39117432]
[687.26910400 46.84958649]
[673.04571533 39.92103195]
[658.07067871 40.78609085]
[643.09564209 41.65114975]
[628.12060547 42.51621246]
[613.14556885 43.38127136]
[606.57659912 56.74967957]
[594.11529541 65.09061432]
[579.05255127 66.08077240]
[565.42712402 59.35432434]
[556.94262695 46.62793732]
[541.96765137 47.49300003]
[527.00488281 48.55000305]
[512.05700684 49.79878235]
[497.11737061 51.14337158]
[482.18667603 52.58371735]
[467.27569580 54.21539307]
[452.38684082 56.03813171]
[437.49801636 57.86086655]
[422.60916138 59.68360519]
[407.72030640 61.50634003]
[392.83148193 63.32907867]
[383.88815308 75.18456268]
[368.81472778 77.24517059]
[356.44021606 67.78420258]
[341.55139160 69.60694122]
[326.66253662 71.42967987]
[314.96978760 80.65620422]
[300.33169556 74.65318298]
[285.44284058 76.47592163]
[270.55398560 78.29866028]
[255.66516113 80.12139130]
[240.77630615 81.94412994]
[222.80015564 98.28312683]
[198.74337769 82.52265930]
[184.20985413 86.23437500]
[169.67634583 89.94609070]
[155.14282227 93.65779877]
[140.60929871 97.36951447]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 48]
[6 47]
[10 43]
[11 42]
[12 41]
[13 40]
[14 39]
[15 38]
[17 36]
[18 35]
[19 34]
[20 33]
[21 32]
[22 31]
[23 30]
[49 93]
[50 92]
[51 91]
[52 90]
[53 89]
[54 88]
[55 87]
[57 85]
[58 84]
[59 83]
[60 82]
[61 81]
[63 79]
[64 78]
[65 77]
[67 76]
[68 75]
[104 244]
[105 243]
[106 242]
[107 241]
[108 240]
[109 118]
[110 117]
[111 116]
[120 238]
[121 237]
[122 236]
[123 235]
[124 234]
[126 232]
[127 231]
[128 230]
[131 227]
[132 226]
[133 225]
[134 224]
[135 223]
[136 222]
[139 221]
[140 220]
[142 219]
[143 218]
[146 217]
[147 216]
[152 211]
[153 210]
[154 209]
[155 208]
[156 207]
[158 205]
[159 204]
[160 203]
[161 202]
[162 194]
[163 193]
[164 192]
[165 191]
[166 190]
[169 187]
[170 186]
[171 185]
[172 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
