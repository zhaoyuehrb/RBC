%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:28:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGGGCGCCGCGGCGGGGAGAAGACGCAGAGCGCUGCUGGGCUGCCGGGUCUCCCGCUUCCCCCUCCUGCUCCAAGGGCCUCCUGCAUGAGGGCGCGGUAGAGACCCGGACCCGCGCCGUGCUCCUGCCGUUUCGCUGCGCUCCGCCCGGGCCCGGCUCAGCCAGGCCCCGCGGUGAGCC\
) } def
/len { sequence length } bind def

/coor [
[59.43655014 112.05612946]
[60.35733414 97.08441925]
[72.03199005 87.66622162]
[86.85930634 89.93305969]
[79.66024017 76.77352142]
[72.46118164 63.61397934]
[65.26211548 50.45444107]
[58.06305313 37.29489899]
[40.38890839 27.63551712]
[41.60796738 8.35286903]
[33.95898056 -4.55034637]
[26.30998993 -17.45356178]
[18.66100121 -30.35677719]
[11.01201248 -43.25999069]
[3.36302304 -56.16320801]
[-4.28596592 -69.06642151]
[-11.93495464 -81.96963501]
[-19.58394432 -94.87285614]
[-27.23293304 -107.77606964]
[-40.92582703 -115.70167542]
[-40.76014328 -130.59535217]
[-47.08379364 -116.99346924]
[-61.61815262 -113.28504181]
[-73.68554688 -122.19448090]
[-74.42065430 -137.17645264]
[-63.28343201 -147.22445679]
[-48.45667648 -144.95727539]
[-54.96493530 -158.47180176]
[-61.47319031 -171.98634338]
[-67.98144531 -185.50086975]
[-74.60610199 -198.95872498]
[-81.34665680 -212.35891724]
[-88.08721161 -225.75909424]
[-94.82776642 -239.15928650]
[-101.56832123 -252.55946350]
[-114.68179321 -261.41085815]
[-113.48896790 -276.25762939]
[-120.22953033 -289.65780640]
[-127.08548737 -302.99932861]
[-134.05633545 -316.28115845]
[-141.02717590 -329.56301880]
[-147.99803162 -342.84484863]
[-158.58320618 -345.48565674]
[-165.80812073 -353.36413574]
[-167.45520020 -363.70358276]
[-163.21736145 -373.03640747]
[-169.72561646 -386.55093384]
[-176.23387146 -400.06546021]
[-182.74212646 -413.58001709]
[-189.25038147 -427.09454346]
[-195.75865173 -440.60906982]
[-202.26690674 -454.12359619]
[-208.77516174 -467.63815308]
[-215.28341675 -481.15267944]
[-222.02397156 -494.55285645]
[-228.99481201 -507.83468628]
[-235.96566772 -521.11651611]
[-242.93650818 -534.39837646]
[-252.27723694 -535.98889160]
[-259.71926880 -541.62823486]
[-263.65875244 -549.94152832]
[-263.32089233 -558.99688721]
[-258.90902710 -566.75390625]
[-265.18304443 -580.37872314]
[-271.45706177 -594.00360107]
[-277.73107910 -607.62841797]
[-284.00509644 -621.25329590]
[-296.80523682 -630.55206299]
[-295.10064697 -645.34881592]
[-301.37466431 -658.97369385]
[-307.64868164 -672.59851074]
[-311.33245850 -675.00659180]
[-313.79556274 -678.15216064]
[-314.95605469 -681.55560303]
[-314.89797974 -684.76062012]
[-313.84909058 -687.38677979]
[-319.16815186 -701.41198730]
[-324.48724365 -715.43725586]
[-337.52539062 -725.38403320]
[-335.16220093 -741.61199951]
[-319.82873535 -747.42724609]
[-307.29873657 -736.84747314]
[-310.46197510 -720.75634766]
[-305.14291382 -706.73107910]
[-299.82385254 -692.70581055]
[-294.02383423 -678.87255859]
[-287.74981689 -665.24768066]
[-281.47579956 -651.62280273]
[-269.12442017 -643.29858398]
[-270.38021851 -627.52734375]
[-264.10620117 -613.90246582]
[-257.83218384 -600.27758789]
[-251.55818176 -586.65277100]
[-245.28416443 -573.02789307]
[-227.44972229 -562.66790771]
[-229.65467834 -541.36920166]
[-222.68382263 -528.08740234]
[-215.71298218 -514.80554199]
[-208.74212646 -501.52371216]
[-204.50607300 -499.26748657]
[-201.65553284 -494.31332397]
[-201.76887512 -487.66091919]
[-195.26062012 -474.14639282]
[-188.75236511 -460.63186646]
[-182.24411011 -447.11734009]
[-175.73585510 -433.60278320]
[-169.22760010 -420.08825684]
[-162.71934509 -406.57373047]
[-156.21109009 -393.05920410]
[-149.70283508 -379.54467773]
[-132.97174072 -369.88150024]
[-134.71618652 -349.81570435]
[-127.74533844 -336.53384399]
[-120.77449036 -323.25201416]
[-113.80364227 -309.97018433]
[-107.89583588 -305.49703979]
[-106.82934570 -296.39837646]
[-100.08879089 -282.99819946]
[-87.45744324 -275.10525513]
[-88.16813660 -259.30001831]
[-81.42758179 -245.89984131]
[-74.68702698 -232.49964905]
[-67.94647217 -219.09947205]
[-61.20591736 -205.69929504]
[-55.37619400 -201.12486267]
[-54.46691513 -192.00912476]
[-47.95865631 -178.49459839]
[-41.45040131 -164.98005676]
[-34.94214630 -151.46553040]
[-27.85692596 -138.24433899]
[-14.71113873 -131.24166870]
[-14.32971764 -115.42505646]
[-6.68072891 -102.52184296]
[0.96826035 -89.61862946]
[8.61724949 -76.71541595]
[16.26623917 -63.81219864]
[23.91522789 -50.90898132]
[31.56421661 -38.00576782]
[39.21320724 -25.10255051]
[46.86219406 -12.19933510]
[54.51118469 0.70387995]
[64.62911987 2.34346604]
[72.32632446 9.44064999]
[74.88548279 19.81950569]
[71.22259521 30.09583855]
[78.42165375 43.25537872]
[85.62071991 56.41491699]
[92.81977844 69.57446289]
[100.01884460 82.73400116]
[146.77671814 83.68395996]
[157.10517883 94.56160736]
[167.43362427 105.43925476]
[177.76206970 116.31689453]
[188.09051514 127.19454193]
[203.20372009 131.87448120]
[206.35633850 146.43161011]
[216.68478394 157.30926514]
[227.01324463 168.18690491]
[242.30413818 175.50978088]
[239.50039673 192.23028564]
[222.65718079 194.16481018]
[216.13558960 178.51535034]
[205.80714417 167.63771057]
[195.47869873 156.76005554]
[181.10426331 152.85816956]
[177.21287537 137.52299500]
[166.88442993 126.64534760]
[156.55596924 115.76770020]
[146.22752380 104.89005280]
[135.89907837 94.01241302]
[129.25816345 97.49783325]
[109.33539581 107.95410919]
[112.42029572 122.63346100]
[125.01502991 132.57087708]
[124.95423126 148.61381531]
[112.28455353 158.45550537]
[96.72508240 154.54623413]
[90.21170807 139.88487244]
[97.74094391 125.71836090]
[94.65604401 111.03900146]
[84.86286163 122.40093994]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[10 141]
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[21 130]
[27 129]
[28 128]
[29 127]
[30 126]
[31 124]
[32 123]
[33 122]
[34 121]
[35 120]
[37 118]
[38 117]
[39 115]
[40 114]
[41 113]
[42 112]
[46 110]
[47 109]
[48 108]
[49 107]
[50 106]
[51 105]
[52 104]
[53 103]
[54 102]
[55 99]
[56 98]
[57 97]
[58 96]
[63 94]
[64 93]
[65 92]
[66 91]
[67 90]
[69 88]
[70 87]
[71 86]
[76 85]
[77 84]
[78 83]
[150 170]
[151 169]
[152 168]
[153 167]
[154 166]
[156 164]
[157 163]
[158 162]
[172 180]
[173 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
