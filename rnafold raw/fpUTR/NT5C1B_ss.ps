%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:18:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUUUGACAUUCUAAAUGCAAAGCUAGACUGAGCAAGGGAAGUGACAGGAAAUGGAGCUGGGGAGACAAAAAUGUGGAUAACAACAAAAGAAUUUCAACAGGUAAAAAA\
) } def
/len { sequence length } bind def

/coor [
[90.46833038 153.91540527]
[79.09983826 150.60539246]
[68.70880127 144.92864990]
[59.78121567 137.15066528]
[52.73459625 127.63520813]
[47.89850616 116.82728577]
[45.49912643 105.23238373]
[30.51216698 104.60702515]
[15.52520847 103.98166656]
[1.41446257 111.13690186]
[-10.97917175 102.87572479]
[-25.96613121 102.25036621]
[-40.95309067 101.62501526]
[-55.94004822 100.99965668]
[-70.93424988 100.58267975]
[-85.93280029 100.37417603]
[-94.50910950 110.86888123]
[-107.38848877 114.41197968]
[-119.75852203 109.91411591]
[-127.13183594 99.24755096]
[-142.11878967 98.62219238]
[-157.10575867 97.99684143]
[-168.68339539 108.41777039]
[-183.87339783 107.57007599]
[-193.73681641 96.46834564]
[-208.72378540 95.84298706]
[-221.45695496 105.60238647]
[-236.99076843 101.59240723]
[-243.40902710 86.88916016]
[-235.78817749 72.77171326]
[-219.97428894 70.06977081]
[-208.09841919 80.85602570]
[-193.11146545 81.48138428]
[-182.35746765 71.23994446]
[-167.14964294 71.66065216]
[-156.48039246 83.00988007]
[-141.49343872 83.63523865]
[-126.50648499 84.26058960]
[-114.70171356 72.37196350]
[-97.61402130 72.63645935]
[-85.72429657 85.37562561]
[-70.72574615 85.58412933]
[-63.89788818 82.48693085]
[-55.31468964 86.01269531]
[-40.32773209 86.63805389]
[-25.34077454 87.26341248]
[-10.35381508 87.88877106]
[2.68496299 80.68879700]
[16.15056610 88.99471283]
[31.13752365 89.62006378]
[46.12448120 90.24542236]
[52.39371109 72.95624542]
[64.03413391 58.71828842]
[79.73241425 49.13795090]
[97.71738434 45.29613495]
[115.95989227 47.62629700]
[132.40173340 55.86553192]
[145.18782043 69.08425140]
[152.87559509 85.79104614]
[165.60243225 76.39221191]
[179.19570923 82.48091125]
[194.07847595 80.60918427]
[208.96124268 78.73746490]
[218.64790344 66.53884888]
[233.76780701 64.85266876]
[245.33763123 74.16260529]
[260.22039795 72.29087830]
[275.10314941 70.41915894]
[289.98593140 68.54743195]
[294.06195068 53.93025970]
[303.39859009 42.01934052]
[316.54858398 34.61049271]
[331.49282837 32.80558395]
[345.95025635 36.84873581]
[357.72622681 46.09384537]
[365.04547119 59.10760498]
[379.92822266 57.23588181]
[394.81100464 55.36415863]
[402.17572021 41.70617294]
[416.17639160 35.01585770]
[431.42953491 37.86578369]
[442.06991577 49.16008759]
[444.00616455 64.55588531]
[436.49374390 78.13317871]
[422.42129517 84.67121887]
[407.19998169 81.65599060]
[396.68273926 70.24692535]
[381.79995728 72.11864471]
[366.91720581 73.99037170]
[363.04824829 88.41120911]
[353.92822266 100.28429413]
[340.92211914 107.78137970]
[325.99633789 109.73305511]
[311.42132568 105.81103516]
[299.42611694 96.58290100]
[291.85763550 83.43019867]
[276.97488403 85.30191803]
[262.09210205 87.17364502]
[247.20935059 89.04536438]
[238.30508423 100.93022156]
[223.23851013 103.04042053]
[210.83296204 93.62022400]
[195.95019531 95.49195099]
[181.06742859 97.36367035]
[169.40510559 106.62863159]
[154.74731445 100.67381287]
[153.32223511 112.42829895]
[149.40335083 123.60153961]
[143.17393494 133.67095947]
[134.92535400 142.16564941]
[125.04336548 148.68832397]
[113.99014282 152.93391418]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 51]
[8 50]
[9 49]
[11 47]
[12 46]
[13 45]
[14 44]
[15 42]
[16 41]
[20 38]
[21 37]
[22 36]
[25 33]
[26 32]
[59 106]
[61 104]
[62 103]
[63 102]
[66 99]
[67 98]
[68 97]
[69 96]
[76 89]
[77 88]
[78 87]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
