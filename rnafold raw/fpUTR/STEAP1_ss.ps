%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:02:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGACGCGGGGCGCCAGCAGGUGGCGCUGGACGCGCAACGGACAAGGAGGCGGGGCCUGCAGCUGGCUUGGAGGCUCCGCGCUCUGGAGGCUCAGGCGCCGCGUGGGGCCCGCACCUCUGGGCAGCAGCGGCAGCCGAGACUCACGGUCAAGCUAAGGCGAAGAGUGGGUGGCUGAAGCCAUACUAUUUUAUAGAAUUA\
) } def
/len { sequence length } bind def

/coor [
[113.20387268 135.85502625]
[104.42507172 123.69227600]
[89.44750977 122.87211609]
[90.06990051 138.43650818]
[79.71476746 149.58218384]
[64.87266541 150.07962036]
[54.81829453 161.21109009]
[55.44068146 176.77548218]
[45.08554840 187.92114258]
[30.24344254 188.41857910]
[26.73514366 203.84590149]
[12.46232796 208.10455322]
[2.40795803 219.23602295]
[-7.64641142 230.36749268]
[-17.61348343 241.57719421]
[-27.49264908 252.86444092]
[-37.37181473 264.15170288]
[-47.25098038 275.43896484]
[-57.13014603 286.72619629]
[-54.55757141 302.15072632]
[-62.54603577 315.59387207]
[-77.32363892 320.70822144]
[-91.91284180 315.07891846]
[-99.42507935 301.36395264]
[-96.31328583 286.03909302]
[-84.04676819 276.34030151]
[-68.41739655 276.84704590]
[-58.53823471 265.55978394]
[-48.65906906 254.27253723]
[-38.77990341 242.98527527]
[-28.90073586 231.69802856]
[-26.85933495 224.58854675]
[-18.77788353 220.31312561]
[-8.72351360 209.18165588]
[1.33085656 198.05017090]
[4.12000036 183.41905212]
[19.11197281 178.36421204]
[18.10157013 163.54818726]
[28.13955879 152.11605835]
[43.68682098 151.15670776]
[53.74119186 140.02523804]
[52.73078918 125.20921326]
[62.76877594 113.77709198]
[78.31604004 112.81774902]
[77.03292084 105.42832184]
[65.51724243 115.04023743]
[51.43519974 109.87341309]
[48.86869431 95.09460449]
[60.38420105 85.48247528]
[74.46669006 90.64946747]
[73.18357849 83.26004028]
[59.96512985 76.16971588]
[46.74668884 69.07939148]
[33.52824402 61.98906326]
[20.30979919 54.89873505]
[7.09135628 47.80840683]
[-6.12708759 40.71807861]
[-19.34553146 33.62775040]
[-32.56397629 26.53742409]
[-48.38242722 26.83257866]
[-55.94074249 13.99820518]
[-69.15918732 6.90787792]
[-82.37763214 -0.18244965]
[-98.09024811 3.05688405]
[-110.32682800 -7.31836081]
[-109.70050812 -23.34918404]
[-96.69175720 -32.73810959]
[-81.27976990 -28.28275871]
[-75.28730011 -13.40089321]
[-62.06885910 -6.31056595]
[-48.85041428 0.77976179]
[-33.97743607 -0.02254101]
[-25.47364807 13.31897926]
[-12.25520325 20.40930748]
[0.96324021 27.49963570]
[14.18168354 34.58996201]
[27.40012741 41.68029022]
[40.61857224 48.77061844]
[53.83701706 55.86094666]
[67.05545807 62.95127106]
[80.27390289 70.04160309]
[94.74751282 66.10272980]
[102.54998016 53.29173660]
[110.35243988 40.48074722]
[117.85243988 27.49036598]
[125.04585266 14.32773495]
[132.23925781 1.16510427]
[139.32958984 -12.05333900]
[146.31640625 -25.32678986]
[153.30322266 -38.60023880]
[152.88444519 -54.41590118]
[165.65936279 -62.07428741]
[172.64617920 -75.34773254]
[179.63298035 -88.62118530]
[180.86296082 -97.68078613]
[186.83413696 -102.04622650]
[194.02754211 -115.20886230]
[201.22096252 -128.37149048]
[208.31127930 -141.58993530]
[215.29809570 -154.86338806]
[222.28491211 -168.13682556]
[229.27171326 -181.41027832]
[236.25852966 -194.68373108]
[237.48851013 -203.74333191]
[243.45967102 -208.10877991]
[250.65309143 -221.27140808]
[246.43203735 -236.26542664]
[253.91467285 -249.51171875]
[268.23519897 -253.44345093]
[275.42858887 -266.60607910]
[282.62200928 -279.76870728]
[289.81542969 -292.93133545]
[297.00885010 -306.09396362]
[292.32168579 -321.18722534]
[299.75375366 -335.13497925]
[314.89572144 -339.66229248]
[328.76412964 -332.08316040]
[333.13107300 -316.89419556]
[325.40576172 -303.10668945]
[310.17147827 -298.90057373]
[302.97805786 -285.73794556]
[295.78463745 -272.57531738]
[288.59124756 -259.41265869]
[281.39782715 -246.25004578]
[285.82241821 -232.07406616]
[278.71478271 -218.62280273]
[263.81570435 -214.07798767]
[256.62231445 -200.91535950]
[249.53198242 -187.69691467]
[242.54516602 -174.42347717]
[235.55834961 -161.15002441]
[228.57154846 -147.87657166]
[221.58473206 -134.60311890]
[221.25074768 -127.21391296]
[214.38359070 -121.17807770]
[207.19017029 -108.01544952]
[199.99676514 -94.85282135]
[192.90643311 -81.63437653]
[185.91963196 -68.36092377]
[178.93281555 -55.08747482]
[179.85131836 -40.22121811]
[166.57666016 -31.61342812]
[159.58985901 -18.33997726]
[152.60304260 -5.06652832]
[152.26905823 2.32268238]
[145.40190125 8.35851479]
[138.20848083 21.52114487]
[131.01507568 34.68377686]
[131.65583801 38.15877151]
[130.64022827 42.11708832]
[127.75933075 45.77450943]
[123.16343689 48.28321457]
[115.36096954 61.09420395]
[107.55850220 73.90519714]
[116.59671783 79.73334503]
[122.36801910 88.34371185]
[124.18040466 98.15473175]
[122.03696442 107.50061035]
[116.58782959 114.91346741]
[125.36663055 127.07622528]
[148.91224670 128.50561523]
[163.57147217 146.65145874]
[160.09854126 169.45419312]
[170.32565308 180.42716980]
[180.55276489 191.40014648]
[190.77989197 202.37310791]
[201.00700378 213.34608459]
[211.23411560 224.31904602]
[221.46124268 235.29202271]
[231.77380371 246.18473816]
[242.17115784 256.99652100]
[252.56852722 267.80831909]
[262.96588135 278.62008667]
[273.36325073 289.43188477]
[289.25933838 293.46264648]
[293.45562744 309.31582642]
[281.63534546 320.68301392]
[265.95819092 315.87063599]
[262.55148315 299.82925415]
[252.15411377 289.01745605]
[241.75674438 278.20568848]
[231.35937500 267.39389038]
[220.96200562 256.58209229]
[214.05406189 253.93783569]
[210.48826599 245.51913452]
[200.26115417 234.54617310]
[190.03402710 223.57319641]
[179.80691528 212.60023499]
[169.57980347 201.62725830]
[159.35267639 190.65428162]
[149.12556458 179.68132019]
[142.52973938 182.24702454]
[135.48300171 183.10890198]
[128.41963196 182.20289612]
[121.77764893 179.57426453]
[115.97163391 175.37541199]
[111.36685181 169.85710144]
[108.25627899 163.35353088]
[106.84197998 156.26202393]
[107.22202301 149.01884460]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 160]
[2 159]
[3 44]
[6 41]
[7 40]
[10 37]
[12 35]
[13 34]
[14 33]
[15 31]
[16 30]
[17 29]
[18 28]
[19 27]
[51 81]
[52 80]
[53 79]
[54 78]
[55 77]
[56 76]
[57 75]
[58 74]
[59 73]
[61 71]
[62 70]
[63 69]
[82 154]
[83 153]
[84 152]
[85 148]
[86 147]
[87 146]
[88 144]
[89 143]
[90 142]
[92 140]
[93 139]
[94 138]
[96 137]
[97 136]
[98 135]
[99 133]
[100 132]
[101 131]
[102 130]
[103 129]
[105 128]
[106 127]
[109 124]
[110 123]
[111 122]
[112 121]
[113 120]
[163 191]
[164 190]
[165 189]
[166 188]
[167 187]
[168 186]
[169 185]
[170 183]
[171 182]
[172 181]
[173 180]
[174 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
