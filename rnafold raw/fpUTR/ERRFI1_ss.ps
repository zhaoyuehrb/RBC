%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGGCGGCGGCGGCAGCCGCGGCGACGGCGGUCCGGUGCGAGGCAGAGUGCUAGCGGGAGCGCGAGCCAGCAAGAGGCGCCUGCGCGAUGUCCGGGCCCCUGAGCCCGCGGCGCUGAGCCAGCCGGGACGGACAUGCGCGGGAGGGCGCCGCGGGGCAGCCGCCGCUCCUCCGGGGGAAUGAAAGCUACUGGUUGAUUUUAAAGUGCCUGGGCCUCACAGGUUUGGAGAUGUCCCAGAAUAAGGCACA\
) } def
/len { sequence length } bind def

/coor [
[365.54394531 312.63244629]
[366.96209717 305.47106934]
[369.96673584 299.56231689]
[374.08377075 295.21707153]
[361.62481689 286.86395264]
[349.16589355 278.51080322]
[336.70693970 270.15768433]
[324.24801636 261.80453491]
[311.78906250 253.45140076]
[299.33013916 245.09826660]
[286.87118530 236.74513245]
[274.41226196 228.39199829]
[259.53231812 227.73106384]
[252.37867737 213.61952209]
[239.91973877 205.26638794]
[228.01165771 207.30094910]
[217.56883240 200.46537781]
[214.47566223 187.96067810]
[202.12268066 179.45164490]
[189.76968384 170.94261169]
[177.41670227 162.43357849]
[165.06370544 153.92454529]
[152.71072388 145.41551208]
[140.35772705 136.90647888]
[128.00474548 128.39744568]
[113.26117706 137.61410522]
[95.99723816 139.68196106]
[79.49404907 134.20799255]
[66.88816071 122.23255157]
[53.08468246 128.10316467]
[39.28120422 133.97375488]
[29.61002159 146.49490356]
[14.86980438 144.35591125]
[1.06632710 150.22651672]
[-12.73715019 156.09712219]
[-16.98445892 161.11039734]
[-22.32206535 162.96673584]
[-26.96204567 161.93696594]
[-40.90869141 167.45884705]
[-54.85533905 172.98071289]
[-60.67414856 184.47315979]
[-72.38397980 188.79260254]
[-83.53243256 184.13922119]
[-97.54736328 189.48539734]
[-111.56230164 194.83157349]
[-125.57723236 200.17774963]
[-138.22120667 211.47227478]
[-152.57453918 202.44906616]
[-147.87736511 186.15879822]
[-130.92341614 186.16281128]
[-116.90847778 180.81663513]
[-102.89354706 175.47045898]
[-88.87860870 170.12428284]
[-78.53986359 155.93078613]
[-60.37720871 159.03405762]
[-46.43056107 153.51219177]
[-32.48391342 147.99032593]
[-18.60775566 142.29364014]
[-4.80427790 136.42303467]
[8.99919987 130.55242920]
[17.68306541 118.45119476]
[33.41059875 120.17028809]
[47.21407700 114.29968262]
[61.01755524 108.42907715]
[60.38961411 104.65807343]
[60.12560272 100.84428406]
[60.22794724 97.02272797]
[45.74722290 93.11010742]
[31.26649666 89.19748688]
[18.54250717 98.28781128]
[2.95631719 97.02105713]
[-8.13275146 85.99533081]
[-9.48878002 70.41665649]
[-0.47149169 57.64079666]
[14.66142464 53.70013046]
[28.76466942 60.45531464]
[35.17911911 74.71675873]
[49.65984344 78.62937927]
[64.14057159 82.54200745]
[70.92630005 72.69797516]
[80.32482147 65.30752563]
[75.51066589 51.10105133]
[70.69651031 36.89457703]
[65.88236237 22.68810272]
[61.06820679 8.48162746]
[56.25405121 -5.72484684]
[51.43989563 -19.93132210]
[45.73598862 -27.03270912]
[46.65572739 -34.34666443]
[42.02046967 -48.61251068]
[37.38521576 -62.87835693]
[32.74996185 -77.14420319]
[28.11470604 -91.41005707]
[23.47945213 -105.67590332]
[18.84419632 -119.94174957]
[12.28746033 -133.43283081]
[3.93432593 -145.89176941]
[-4.41880846 -158.35070801]
[-19.97080612 -161.16334534]
[-28.91012383 -174.19653320]
[-25.93322182 -189.71792603]
[-12.80624485 -198.51895142]
[2.68280578 -195.37811279]
[11.34455109 -182.15881348]
[8.04012966 -166.70384216]
[16.39326477 -154.24490356]
[24.74639893 -141.78596497]
[38.65807724 -147.39535522]
[28.62485695 -159.62829590]
[34.01515961 -173.51332092]
[31.38981628 -188.28178406]
[28.76446915 -203.05026245]
[26.13912392 -217.81872559]
[11.86204243 -223.66410828]
[3.03037500 -236.31341553]
[2.46227503 -251.73031616]
[10.33902073 -264.99533081]
[24.14717293 -271.87561035]
[39.48059845 -270.17575073]
[51.44645691 -260.43807983]
[56.22648621 -245.76992798]
[52.29539871 -230.85182190]
[40.90758896 -220.44406128]
[43.53293610 -205.67559814]
[46.15827942 -190.90713501]
[48.78362656 -176.13867188]
[58.62906265 -164.96206665]
[53.42654037 -150.02069092]
[46.74529266 -131.13589478]
[33.11004257 -124.57700348]
[37.74530029 -110.31115723]
[42.38055420 -96.04531097]
[47.01580811 -81.77945709]
[51.65106583 -67.51361084]
[56.28631973 -53.24776459]
[60.92157364 -38.98191833]
[65.64636993 -24.74547577]
[70.46052551 -10.53900051]
[75.27468109 3.66747379]
[80.08883667 17.87394905]
[84.90298462 32.08042145]
[89.71714020 46.28689575]
[94.53129578 60.49337387]
[111.28699493 61.74710083]
[126.03939056 69.79022980]
[136.17013550 83.19519806]
[139.88114929 99.58280182]
[136.51377869 116.04445648]
[148.86676025 124.55348969]
[161.21975708 133.06253052]
[173.57273865 141.57156372]
[185.92573547 150.08059692]
[198.27871704 158.58963013]
[210.63171387 167.09866333]
[222.98469543 175.60769653]
[241.38066101 176.65682983]
[248.27287292 192.80744934]
[260.73181152 201.16058350]
[276.50289917 202.41899109]
[282.76538086 215.93305969]
[295.22433472 224.28619385]
[307.68325806 232.63932800]
[320.14221191 240.99246216]
[332.60113525 249.34559631]
[345.06008911 257.69873047]
[357.51901245 266.05187988]
[369.97796631 274.40499878]
[382.43688965 282.75814819]
[397.03338623 286.21398926]
[406.71325684 274.00997925]
[421.83221436 272.31539917]
[433.40722656 281.61889648]
[448.28894043 279.73889160]
[463.17065430 277.85888672]
[478.05236816 275.97891235]
[490.77398682 266.57299805]
[504.37063599 272.65414429]
[519.25238037 270.77413940]
[526.60949707 257.11206055]
[540.60644531 250.41395569]
[555.86114502 253.25540161]
[566.50781250 264.54379272]
[568.45263672 279.93850708]
[560.94775391 293.51995850]
[546.87896729 300.06582642]
[531.65594482 297.05908203]
[521.13238525 285.65585327]
[506.25064087 287.53585815]
[494.59347534 296.80728149]
[479.93237305 290.86062622]
[465.05065918 292.74063110]
[450.16894531 294.62060547]
[435.28723145 296.50061035]
[426.38955688 308.39041138]
[411.32415771 310.50900269]
[398.91339111 301.09570312]
[395.80557251 307.92150879]
[409.76681519 313.40631104]
[424.74340820 312.56878662]
[433.20962524 324.95117188]
[426.99450684 338.60299683]
[412.09643555 340.34863281]
[402.89361572 328.50213623]
[389.58993530 321.57308960]
[386.48211670 328.39889526]
[394.83523560 340.85781860]
[403.18838501 353.31677246]
[411.54150391 365.77569580]
[419.89465332 378.23464966]
[428.24777222 390.69357300]
[437.14062500 402.77319336]
[446.55599976 414.45013428]
[455.97137451 426.12707520]
[465.38674927 437.80398560]
[474.94808960 449.36169434]
[484.65393066 460.79833984]
[494.35977173 472.23495483]
[502.27734375 476.73791504]
[504.11462402 483.87683105]
[513.67596436 495.43453979]
[529.22686768 500.64056396]
[532.22814941 516.76275635]
[519.59240723 527.21594238]
[504.31817627 521.24682617]
[502.11828613 504.99591064]
[492.55694580 493.43820190]
[482.92315674 481.94079590]
[473.21731567 470.50418091]
[463.51147461 459.06753540]
[458.93292236 457.79202271]
[455.09741211 453.64175415]
[453.70980835 447.21936035]
[444.29443359 435.54241943]
[434.87905884 423.86550903]
[425.46368408 412.18856812]
[424.14111328 427.13012695]
[413.59906006 437.80087280]
[398.67462158 439.30459595]
[386.21575928 430.95135498]
[381.93911743 416.57391357]
[387.80700684 402.76928711]
[401.12695312 395.87155151]
[415.78884888 399.04672241]
[407.43569946 386.58776855]
[399.08258057 374.12884521]
[390.72943115 361.66989136]
[382.37631226 349.21096802]
[374.02316284 336.75201416]
[368.88494873 328.85101318]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 168]
[5 167]
[6 166]
[7 165]
[8 164]
[9 163]
[10 162]
[11 161]
[12 160]
[14 158]
[15 157]
[18 155]
[19 154]
[20 153]
[21 152]
[22 151]
[23 150]
[24 149]
[25 148]
[29 64]
[30 63]
[31 62]
[33 60]
[34 59]
[35 58]
[38 57]
[39 56]
[40 55]
[43 53]
[44 52]
[45 51]
[46 50]
[67 79]
[68 78]
[69 77]
[81 143]
[82 142]
[83 141]
[84 140]
[85 139]
[86 138]
[87 137]
[89 136]
[90 135]
[91 134]
[92 133]
[93 132]
[94 131]
[95 130]
[96 107]
[97 106]
[98 105]
[108 128]
[110 126]
[111 125]
[112 124]
[113 123]
[169 196]
[172 193]
[173 192]
[174 191]
[175 190]
[177 188]
[178 187]
[205 248]
[206 247]
[207 246]
[208 245]
[209 244]
[210 243]
[211 235]
[212 234]
[213 233]
[214 232]
[215 229]
[216 228]
[217 227]
[219 226]
[220 225]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
