%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:43:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUUUGUAAAGAUAUUGAUUCCAGAUAAUGUUUGCCUUUCUAACUCUCUCUUCCUUAGACUUGAUGGAUAGGUUCAGGGCUACAUCUCGGCAGCCAACUCACCGCAGCUACCCAGGGAAAGAGGAAUGGAAAACGAGCUCGGAAGAUAUAAGUUACAACCCCCAGAAGUCUAGCCUAGCGCUAUUGG\
) } def
/len { sequence length } bind def

/coor [
[247.76016235 473.81820679]
[241.47743225 460.19735718]
[230.23017883 455.71261597]
[224.88951111 444.40048218]
[228.81695557 432.10180664]
[222.76148987 418.37841797]
[216.70602417 404.65502930]
[210.65057373 390.93164062]
[204.59510803 377.20825195]
[198.53964233 363.48486328]
[182.61982727 358.08938599]
[175.37707520 342.54733276]
[181.72964478 326.25784302]
[175.44692993 312.63699341]
[169.16419983 299.01614380]
[162.88146973 285.39529419]
[156.59873962 271.77447510]
[152.48992920 269.30639648]
[149.89796448 264.22207642]
[150.34197998 257.59487915]
[144.51545715 243.77272034]
[138.68893433 229.95057678]
[132.86241150 216.12843323]
[127.35668945 211.17668152]
[127.05603790 202.02780151]
[121.46006012 188.11071777]
[118.91654205 186.89016724]
[116.70809174 184.57899475]
[115.25611877 181.30149841]
[114.92858887 177.33332825]
[115.98871613 173.07832336]
[111.32975769 158.82019043]
[106.67079163 144.56207275]
[102.01183319 130.30395508]
[97.35286713 116.04582977]
[87.29450226 110.15116882]
[83.76566315 99.03968048]
[88.57987976 88.42171478]
[84.15854645 74.08811951]
[79.73722076 59.75453186]
[75.31589508 45.42094040]
[70.89456940 31.08734703]
[66.47323608 16.75375557]
[52.78115463 9.32646942]
[48.50148773 -5.27281475]
[55.66664886 -18.28035355]
[51.24531937 -32.61394501]
[46.82399368 -46.94753647]
[42.40266418 -61.28112793]
[37.98133850 -75.61472321]
[26.52011108 -86.52117920]
[30.16223526 -100.96362305]
[25.74090767 -115.29721832]
[21.31958008 -129.63081360]
[16.89825249 -143.96440125]
[12.47692490 -158.29798889]
[7.69962549 -172.51690674]
[2.56932306 -186.61228943]
[-2.56097889 -200.70768738]
[-8.44769669 -207.71759033]
[-7.65728283 -215.08021545]
[-12.55259132 -229.25892639]
[-18.32198143 -236.36572266]
[-17.40929985 -243.71418762]
[-23.05976677 -250.91589355]
[-22.02506828 -258.24816895]
[-26.44639587 -272.58175659]
[-30.86772346 -286.91534424]
[-43.43099213 -291.80252075]
[-50.77340317 -302.87490845]
[-50.39752960 -315.96044922]
[-42.66504288 -326.28137207]
[-46.84751511 -340.68646240]
[-51.02998734 -355.09155273]
[-55.21245956 -369.49667358]
[-59.00923538 -373.13366699]
[-60.83567047 -377.43554688]
[-60.77002716 -381.53549194]
[-59.22507477 -384.72479248]
[-62.68431473 -399.32046509]
[-66.14355469 -413.91613770]
[-69.60279083 -428.51181030]
[-80.31407166 -440.15567017]
[-75.72043610 -454.32421875]
[-89.30162048 -462.40673828]
[-93.10871887 -477.74560547]
[-84.88306427 -491.24057007]
[-69.50478363 -494.88531494]
[-56.09753799 -486.51742554]
[-52.61560822 -471.10147095]
[-61.12476730 -457.78344727]
[-50.66091537 -447.18359375]
[-55.00711823 -431.97103882]
[-51.54787827 -417.37536621]
[-48.08864212 -402.77969360]
[-44.62940216 -388.18402100]
[-40.80735779 -373.67913818]
[-36.62488556 -359.27404785]
[-32.44241333 -344.86892700]
[-28.25994301 -330.46383667]
[-13.19602966 -323.00524902]
[-8.07788563 -306.64010620]
[-16.53413200 -291.33670044]
[-12.11280441 -277.00308228]
[-7.69147730 -262.66949463]
[-3.15117574 -248.37315369]
[1.62612402 -234.15423584]
[6.52143192 -219.97552490]
[11.53441048 -205.83798218]
[16.66471291 -191.74259949]
[21.79501534 -177.64720154]
[24.83835793 -175.83154297]
[27.14615250 -172.44216919]
[27.98410988 -167.84436035]
[26.81051636 -162.71931458]
[31.23184395 -148.38572693]
[35.65317154 -134.05213928]
[40.07450104 -119.71854401]
[44.49582672 -105.38495636]
[55.64081192 -95.50373077]
[52.31492996 -80.03604889]
[56.73625565 -65.70245361]
[61.15758514 -51.36886597]
[65.57891083 -37.03527451]
[70.00023651 -22.70168114]
[83.24777985 -15.99062729]
[87.93582153 -1.51730990]
[80.80683136 12.33242702]
[85.22815704 26.66601944]
[89.64948273 40.99961090]
[94.07081604 55.33320236]
[98.49214172 69.66679382]
[102.91346741 84.00038910]
[115.49983215 95.07749176]
[111.61099243 111.38686371]
[116.26995850 125.64498901]
[120.92891693 139.90310669]
[125.58787537 154.16123962]
[130.24684143 168.41935730]
[135.37713623 182.51475525]
[140.97311401 196.43182373]
[146.68455505 210.30191040]
[152.51107788 224.12405396]
[158.33760071 237.94619751]
[164.16412354 251.76834106]
[170.21958923 265.49172974]
[176.50231934 279.11257935]
[182.78503418 292.73342896]
[189.06776428 306.35424805]
[195.35049438 319.97509766]
[208.45082092 323.15341187]
[217.19644165 333.15454102]
[218.55885315 346.17437744]
[212.26303101 357.42941284]
[218.31849670 371.15280151]
[224.37396240 384.87619019]
[230.42941284 398.59957886]
[236.48487854 412.32296753]
[242.54034424 426.04635620]
[257.64743042 436.55993652]
[255.09828186 453.91464233]
[261.38101196 467.53549194]
[267.77670288 481.10363770]
[274.28497314 494.61816406]
[280.79324341 508.13269043]
[287.30148315 521.64721680]
[300.26022339 530.72369385]
[298.81130981 545.54766846]
[305.31958008 559.06219482]
[311.82781982 572.57672119]
[318.44818115 586.03668213]
[325.18017578 599.44116211]
[331.91213989 612.84564209]
[344.42395020 624.28643799]
[336.89389038 639.47637939]
[320.21304321 636.44561768]
[318.50765991 619.57763672]
[311.77566528 606.17315674]
[305.04367065 592.76867676]
[299.22113037 588.19366455]
[298.31329346 579.08496094]
[291.80502319 565.57043457]
[285.29678345 552.05590820]
[272.80355835 543.94610596]
[273.78695679 528.15551758]
[267.27868652 514.64099121]
[260.77044678 501.12643433]
[254.26217651 487.61190796]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 162]
[2 161]
[5 159]
[6 158]
[7 157]
[8 156]
[9 155]
[10 154]
[13 150]
[14 149]
[15 148]
[16 147]
[17 146]
[20 145]
[21 144]
[22 143]
[23 142]
[25 141]
[26 140]
[31 139]
[32 138]
[33 137]
[34 136]
[35 135]
[38 133]
[39 132]
[40 131]
[41 130]
[42 129]
[43 128]
[46 125]
[47 124]
[48 123]
[49 122]
[50 121]
[52 119]
[53 118]
[54 117]
[55 116]
[56 115]
[57 111]
[58 110]
[59 109]
[61 108]
[62 107]
[64 106]
[66 105]
[67 104]
[68 103]
[72 100]
[73 99]
[74 98]
[75 97]
[79 96]
[80 95]
[81 94]
[82 93]
[84 91]
[163 188]
[164 187]
[165 186]
[166 185]
[168 183]
[169 182]
[170 181]
[171 179]
[172 178]
[173 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
