%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:53:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCUAUAGUAGGUGCGGAGAAGAAAUGUUUGGCAGAUGAAGAAAAUGAGGUGCAGAGAGGAUUUAAGAGAUUCUCUCUUACUGCCUGUUCAGGGUCAGUCCAGAAUUGAGGGUCUCCGGGGGAGGGCAGAGGCUUUGCCCUGCAGGGGAUCUGUGGGAGGGGGUUAGGAGGGAGCAGAUGAGCCCAGG\
) } def
/len { sequence length } bind def

/coor [
[174.48007202 304.18399048]
[176.64608765 294.74481201]
[182.14241028 286.70077515]
[175.22229004 273.39242554]
[168.30216980 260.08410645]
[161.38204956 246.77575684]
[154.46194458 233.46740723]
[147.54182434 220.15907288]
[140.62170410 206.85072327]
[123.41955566 206.72366333]
[108.56932831 197.86541748]
[100.19873047 182.63339233]
[100.68727875 165.17079163]
[109.99064636 150.27973938]
[102.63429260 137.20747375]
[95.27793884 124.13521576]
[83.34105682 98.61598206]
[71.50395203 89.40279388]
[59.66684341 80.18960571]
[47.82973480 70.97640991]
[35.99263000 61.76322174]
[22.54955673 70.29887390]
[7.02326775 73.71273041]
[-8.70722771 71.61044312]
[-22.74463081 64.26409149]
[-33.40218735 52.57713318]
[-39.40637589 37.97335052]
[-40.04906464 22.22338104]
[-35.27097702 7.23006058]
[-47.25879669 -1.78615642]
[-59.24662018 -10.80237389]
[-71.23443604 -19.81859016]
[-83.22225952 -28.83480835]
[-95.28421021 -37.75160980]
[-110.99665070 -39.60354233]
[-116.74536133 -53.34405136]
[-128.88061523 -62.16083145]
[-141.01586914 -70.97760773]
[-155.70674133 -66.34247589]
[-170.14128113 -71.18991089]
[-178.85064697 -83.46227264]
[-178.66572571 -98.33183289]
[-190.80097961 -107.14861298]
[-202.93624878 -115.96539307]
[-216.38063049 -108.82328796]
[-231.53102112 -108.22914124]
[-245.38029480 -114.24725342]
[-255.20289612 -125.63486481]
[-259.09109497 -140.09831238]
[-256.32546997 -154.75492859]
[-268.46072388 -163.57171631]
[-280.59597778 -172.38848877]
[-292.73123169 -181.20527649]
[-301.53051758 -183.72456360]
[-304.99261475 -190.26950073]
[-316.98043823 -199.28572083]
[-328.96826172 -208.30194092]
[-340.95608521 -217.31816101]
[-352.94390869 -226.33438110]
[-364.93173218 -235.35058594]
[-376.91952515 -244.36680603]
[-388.90734863 -253.38302612]
[-400.89517212 -262.39923096]
[-412.88299561 -271.41546631]
[-424.87081909 -280.43167114]
[-441.16360474 -285.12011719]
[-441.16867065 -302.07406616]
[-424.87869263 -306.77227783]
[-415.85461426 -292.41949463]
[-403.86679077 -283.40328979]
[-391.87896729 -274.38705444]
[-379.89114380 -265.37084961]
[-367.90332031 -256.35464478]
[-355.91549683 -247.33840942]
[-343.92767334 -238.32218933]
[-331.93984985 -229.30598450]
[-319.95202637 -220.28976440]
[-307.96423340 -211.27354431]
[-295.97640991 -202.25732422]
[-283.91445923 -193.34053040]
[-271.77920532 -184.52374268]
[-259.64395142 -175.70697021]
[-247.50868225 -166.89018250]
[-234.42404175 -174.04962158]
[-219.46696472 -174.82115173]
[-205.60134888 -168.99827576]
[-195.59811401 -157.68652344]
[-191.48147583 -143.09405518]
[-194.11946106 -128.10064697]
[-181.98420715 -119.28386688]
[-169.84895325 -110.46708679]
[-155.76429749 -115.23789978]
[-141.40124512 -110.74716949]
[-132.33055115 -98.51705170]
[-132.19909668 -83.11286163]
[-120.06383514 -74.29608154]
[-107.92858124 -65.47930908]
[-93.08412933 -64.25801086]
[-86.46743011 -49.88686752]
[-79.19497681 -48.49627686]
[-74.20603943 -40.82262802]
[-62.21821976 -31.80641174]
[-50.23040009 -22.79019356]
[-38.24258041 -13.77397633]
[-26.25476074 -4.75775909]
[-14.62047291 -12.83934975]
[-1.03773475 -16.93648148]
[13.16775990 -16.63541603]
[26.60524750 -11.95235920]
[37.95505524 -3.33318162]
[46.09820557 8.38900661]
[50.22672272 22.07436562]
[49.92379761 36.38715363]
[45.20581818 49.92611313]
[57.04292679 59.13930511]
[68.88003540 68.35249329]
[80.71714020 77.56568909]
[92.55425262 86.77887726]
[107.42321014 88.75725555]
[121.25756073 82.95977020]
[135.09190369 77.16228485]
[148.92625427 71.36479950]
[158.66354370 58.89500809]
[173.39224243 61.11196136]
[187.22659302 55.31447220]
[201.06092834 49.51698685]
[214.89527893 43.71949768]
[228.72962952 37.92201233]
[238.22288513 24.55002785]
[254.52244568 26.35462952]
[260.86071777 41.47939682]
[250.71740723 54.36526489]
[234.52711487 51.75635910]
[220.69276428 57.55384445]
[206.85841370 63.35133362]
[193.02407837 69.14881897]
[179.18972778 74.94630432]
[170.44195557 87.00141907]
[154.72373962 85.19914246]
[140.88938904 90.99662781]
[127.05504608 96.79412079]
[113.22069550 102.59160614]
[108.35020447 116.77886200]
[115.70655823 129.85113525]
[123.06291199 142.92338562]
[135.95150757 141.83866882]
[148.24650574 145.70108032]
[158.12744141 153.90164185]
[164.14540100 165.19180298]
[165.43536377 177.87347412]
[161.84046936 190.05444336]
[153.93003845 199.93060303]
[160.85015869 213.23895264]
[167.77027893 226.54728699]
[174.69039917 239.85563660]
[181.61051941 253.16397095]
[188.53063965 266.47232056]
[195.45074463 279.78067017]
[215.86119080 284.76721191]
[225.84739685 302.91949463]
[219.31996155 322.27331543]
[227.10450745 335.09521484]
[234.88905334 347.91708374]
[248.66470337 355.69796753]
[248.65599060 370.59255981]
[256.44052124 383.41445923]
[264.22506714 396.23635864]
[279.56579590 397.63943481]
[291.00509644 407.68908691]
[294.29440308 422.37393188]
[288.37677002 436.01651001]
[303.00848389 443.42227173]
[303.64044189 459.80923462]
[289.62255859 468.31988525]
[275.37524414 460.19921875]
[275.55487061 443.80105591]
[260.72082520 442.75741577]
[249.20960999 433.06436157]
[245.57072449 418.27880859]
[251.40318298 404.02087402]
[243.61863708 391.19900513]
[235.83409119 378.37710571]
[222.61523438 371.51333618]
[222.06715393 355.70162964]
[214.28260803 342.87976074]
[206.49807739 330.05786133]
[197.12840271 330.74218750]
[188.10064697 327.94018555]
[180.67449951 321.99850464]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 158]
[4 157]
[5 156]
[6 155]
[7 154]
[8 153]
[9 152]
[14 145]
[15 144]
[16 143]
[17 118]
[18 117]
[19 116]
[20 115]
[21 114]
[29 105]
[30 104]
[31 103]
[32 102]
[33 101]
[34 99]
[36 97]
[37 96]
[38 95]
[42 91]
[43 90]
[44 89]
[50 83]
[51 82]
[52 81]
[53 80]
[55 79]
[56 78]
[57 77]
[58 76]
[59 75]
[60 74]
[61 73]
[62 72]
[63 71]
[64 70]
[65 69]
[119 142]
[120 141]
[121 140]
[122 139]
[124 137]
[125 136]
[126 135]
[127 134]
[128 133]
[161 186]
[162 185]
[163 184]
[165 182]
[166 181]
[167 180]
[171 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
