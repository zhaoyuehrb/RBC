%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:02:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACUUCCGCUUCCGGUUCCUAGCGUUAACUGCGACCGGGGUUCAGCGCUCGGGUGAGGAGCUGGUGGCGUCGGCAGGUUCGAGGCGAUUCGAGGUGAGGGGGUCAAGCGGAGAGGCUCGGAGUCGGAGAAAGCUGUCGCGACCCAGCCACCCAGGGUCUGGGGUCGGUGGGAGCUCCAGCUAGG\
) } def
/len { sequence length } bind def

/coor [
[89.57408905 175.24044800]
[75.37709045 170.39842224]
[65.50287628 159.10684204]
[62.59698868 144.39100647]
[67.43799591 130.19366455]
[78.72825623 120.31893921]
[89.38989258 109.76765442]
[74.97487640 113.91581726]
[60.55985641 118.06398010]
[46.14484024 122.21214294]
[35.02256012 133.46405029]
[20.65193176 129.54814148]
[6.23691368 133.69630432]
[-8.17810440 137.84446716]
[-22.59312248 141.99263000]
[-37.00814056 146.14079285]
[-51.42316055 150.28895569]
[-65.83818054 154.43711853]
[-80.25319672 158.58528137]
[-94.66821289 162.73344421]
[-108.85329437 167.61027527]
[-122.77162933 173.20312500]
[-136.68997192 178.79597473]
[-150.60830688 184.38880920]
[-164.52664185 189.98165894]
[-178.44497681 195.57450867]
[-192.31532288 201.28532410]
[-206.13667297 207.11370850]
[-219.95803833 212.94209290]
[-233.77938843 218.77049255]
[-243.48880005 231.26199341]
[-258.22241211 229.07795715]
[-267.68579102 242.47113037]
[-283.98931885 240.70294189]
[-290.36135864 225.59237671]
[-280.24688721 212.68388367]
[-264.05081177 215.25660706]
[-255.32998657 203.18197632]
[-239.60777283 204.94912720]
[-225.78642273 199.12074280]
[-211.96505737 193.29235840]
[-198.14370728 187.46397400]
[-193.19076538 181.95532227]
[-184.03782654 181.65617371]
[-170.11949158 176.06332397]
[-156.20115662 170.47047424]
[-142.28280640 164.87762451]
[-128.36447144 159.28479004]
[-114.44614410 153.69194031]
[-127.71133423 146.68946838]
[-132.28977966 132.40527344]
[-125.56700134 118.99617004]
[-111.38196564 114.11920929]
[-97.83483124 120.55932617]
[-92.66149139 134.63897705]
[-98.81637573 148.31842041]
[-84.40135956 144.17025757]
[-69.98634338 140.02209473]
[-55.57132339 135.87393188]
[-41.15630341 131.72576904]
[-26.74128532 127.57761383]
[-12.32626629 123.42945099]
[2.08875203 119.28128815]
[16.50377083 115.13313293]
[26.59498978 104.17792511]
[41.99667740 107.79711914]
[56.41169357 103.64895630]
[70.82671356 99.50080109]
[85.24172974 95.35263824]
[95.34162903 84.26245880]
[98.12732697 69.52339935]
[100.91301727 54.78433609]
[103.69871521 40.04527664]
[106.48440552 25.30621529]
[104.74037933 20.33787155]
[105.05982971 15.66879654]
[106.97879791 12.03936386]
[109.80557251 9.89594746]
[113.33820343 -4.68213511]
[116.87084198 -19.26021767]
[120.40347290 -33.83830261]
[123.93610382 -48.41638565]
[127.46874237 -62.99446869]
[123.19913483 -78.22867584]
[133.71618652 -88.77574921]
[125.75002289 -102.16149139]
[129.54028320 -116.89541626]
[142.35063171 -124.40744781]
[145.88327026 -138.98551941]
[149.41590881 -153.56361389]
[152.94853210 -168.14169312]
[144.65194702 -178.76950073]
[144.00801086 -192.04185486]
[151.02807617 -203.09408569]
[162.95535278 -208.00445557]
[166.73501587 -222.52044678]
[170.51469421 -237.03643799]
[163.66784668 -251.54507446]
[170.87126160 -265.88000488]
[186.59907532 -269.04470825]
[198.78625488 -258.61151123]
[198.08386230 -242.58383179]
[185.03068542 -233.25677490]
[181.25100708 -218.74076843]
[177.47134399 -204.22477722]
[186.59523010 -190.10928345]
[182.61967468 -173.43157959]
[167.52662659 -164.60905457]
[163.99398804 -150.03097534]
[160.46134949 -135.45289612]
[156.92872620 -120.87480927]
[164.87925720 -108.33190155]
[161.50433350 -93.49732971]
[148.29426575 -85.24311829]
[152.81655884 -71.05163574]
[142.04682922 -59.46183395]
[138.51419067 -44.88375092]
[134.98155212 -30.30566788]
[131.44892883 -15.72758484]
[127.91629028 -1.14950204]
[124.38365936 13.42858124]
[121.22346497 28.09190941]
[118.43777466 42.83097076]
[115.65207672 57.57003021]
[112.86638641 72.30908966]
[110.08068848 87.04814911]
[121.21340179 76.99515533]
[135.85635376 80.24845886]
[141.68476868 94.06980133]
[133.79295349 106.82594299]
[118.82326508 107.78018951]
[131.32177734 116.07398987]
[143.82029724 124.36779022]
[156.31881714 132.66159058]
[168.81732178 140.95538330]
[184.11764526 138.03340149]
[196.67477417 146.62254333]
[199.36614990 161.22706604]
[211.86466980 169.52085876]
[224.65367126 167.73489380]
[234.89778137 174.91876221]
[237.40830994 186.76657104]
[249.76419067 195.27140808]
[262.12005615 203.77624512]
[274.47595215 212.28108215]
[290.23046875 213.73222351]
[296.32727051 227.32185364]
[313.45697021 223.82751465]
[327.54333496 233.60121155]
[330.16110229 250.20361328]
[342.65960693 258.49740601]
[355.15814209 266.79119873]
[367.65664673 275.08499146]
[380.15515137 283.37881470]
[396.69601440 287.09857178]
[397.70059204 304.02270508]
[381.71594238 309.67312622]
[371.86135864 295.87731934]
[359.36285400 287.58352661]
[346.86431885 279.28973389]
[334.36581421 270.99591064]
[321.86730957 262.70211792]
[309.70571899 266.99951172]
[297.10342407 263.44775391]
[288.73019409 253.12985229]
[287.82241821 239.67773438]
[272.95169067 238.83491516]
[265.97109985 224.63696289]
[253.61521912 216.13212585]
[241.25933838 207.62728882]
[228.90347290 199.12245178]
[211.36956787 198.68888855]
[203.57086182 182.01937866]
[191.07234192 173.72557068]
[176.56964111 176.92039490]
[163.77621460 168.68734741]
[160.52352905 153.45390320]
[148.02500916 145.16011047]
[135.52650452 136.86630249]
[123.02798462 128.57250977]
[110.52946472 120.27870178]
[117.52168274 133.54930115]
[120.42546844 148.26556396]
[115.58242035 162.46220398]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 69]
[8 68]
[9 67]
[10 66]
[12 64]
[13 63]
[14 62]
[15 61]
[16 60]
[17 59]
[18 58]
[19 57]
[20 56]
[21 49]
[22 48]
[23 47]
[24 46]
[25 45]
[26 44]
[27 42]
[28 41]
[29 40]
[30 39]
[32 37]
[70 126]
[71 125]
[72 124]
[73 123]
[74 122]
[78 121]
[79 120]
[80 119]
[81 118]
[82 117]
[83 116]
[85 114]
[88 111]
[89 110]
[90 109]
[91 108]
[95 105]
[96 104]
[97 103]
[131 181]
[132 180]
[133 179]
[134 178]
[135 177]
[138 174]
[139 173]
[142 171]
[143 170]
[144 169]
[145 168]
[147 166]
[150 162]
[151 161]
[152 160]
[153 159]
[154 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
