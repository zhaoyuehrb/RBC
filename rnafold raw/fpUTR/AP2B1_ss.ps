%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:43:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAGAGUUUCCUGCCCACCAUCUUUGUCCCUGGCAAAGUGGGUUUUGCGCAGUGGCUUAGACCUAGAAAAGAAUCGUGACGGGCAGGAAACCAUUACACCACCACCUGGGCUGUGCUCUCCGGCUCCCGCCGCCACCCCCGCCCUCGCCUUCGCCUCCGCCUCCGGUGCACAUUAAAGAUCCAAAGUC\
) } def
/len { sequence length } bind def

/coor [
[4.13713884 101.16691589]
[-10.83006573 100.17556000]
[-25.11142921 106.98387909]
[-37.29951096 98.42234802]
[-49.12832260 108.55728149]
[-64.29307556 107.33869171]
[-73.88229370 95.99926758]
[-88.84949493 95.00791168]
[-103.81670380 94.01655579]
[-118.78390503 93.02519226]
[-133.75111389 92.03383636]
[-148.71830750 91.04248047]
[-163.68551636 90.05111694]
[-178.65272522 89.05976105]
[-193.61993408 88.06839752]
[-208.58712769 87.07704163]
[-223.55433655 86.08568573]
[-235.38314819 96.22061920]
[-250.54789734 95.00202942]
[-260.13711548 83.66260529]
[-275.10430908 82.67124939]
[-290.07153320 81.67989349]
[-304.64248657 85.24182892]
[-317.46435547 93.02637482]
[-330.28625488 100.81092072]
[-343.10815430 108.59546661]
[-355.93002319 116.38000488]
[-368.75192261 124.16455078]
[-381.57382202 131.94909668]
[-391.97512817 145.33749390]
[-407.71966553 139.04895020]
[-406.03540039 122.17886353]
[-389.35836792 119.12720490]
[-376.53646851 111.34265900]
[-363.71456909 103.55811310]
[-350.89270020 95.77357483]
[-338.07080078 87.98902893]
[-325.24890137 80.20448303]
[-312.42703247 72.41994476]
[-315.14022827 57.66736603]
[-329.89279175 54.95415878]
[-344.64538574 52.24095154]
[-359.39794922 49.52774048]
[-374.15054321 46.81453323]
[-388.90310669 44.10132599]
[-403.65567017 41.38811874]
[-420.84677124 47.96400070]
[-433.76092529 36.09288025]
[-448.55633545 33.62396240]
[-461.27139282 43.01028824]
[-476.88674927 40.57394791]
[-486.13812256 27.76037598]
[-483.53683472 12.17163658]
[-470.62615967 3.05625367]
[-455.06579590 5.82222223]
[-446.08740234 18.82854271]
[-431.29199219 21.29746056]
[-421.25723267 14.52230263]
[-408.90103149 16.47051811]
[-400.94247437 26.63554192]
[-386.18991089 29.34874916]
[-371.43731689 32.06195831]
[-356.68475342 34.77516556]
[-341.93215942 37.48837280]
[-327.17959595 40.20158005]
[-312.42703247 42.91479111]
[-312.33102417 27.91509628]
[-305.42733765 14.59823132]
[-293.22482300 5.87477398]
[-278.39050293 3.65135479]
[-264.16665649 8.41393185]
[-253.66207886 19.12158012]
[-249.17268372 33.43399811]
[-251.67968750 48.22301102]
[-260.63516235 60.25628281]
[-274.08175659 66.90377808]
[-289.08016968 66.71268463]
[-274.11297607 67.70404816]
[-259.14575195 68.69540405]
[-248.14472961 58.71978378]
[-232.95173645 59.51195145]
[-222.56297302 71.11847687]
[-207.59577942 72.10984039]
[-192.62857056 73.10119629]
[-177.66136169 74.09255219]
[-162.69415283 75.08391571]
[-147.72695923 76.07527161]
[-132.75975037 77.06662750]
[-117.79254913 78.05799103]
[-102.82534027 79.04934692]
[-87.85813904 80.04071045]
[-72.89093018 81.03206635]
[-61.88990402 71.05644989]
[-46.69690704 71.84860992]
[-36.30815125 83.45513916]
[-23.09734344 76.57591248]
[-9.83870697 85.20835876]
[5.12849760 86.19971466]
[10.38414860 65.94050598]
[19.91100883 47.30461884]
[33.25501251 31.18025970]
[49.78017044 18.33594131]
[68.69886780 9.38383675]
[89.10942078 4.75061607]
[110.03903198 4.65710497]
[130.49017334 9.10775948]
[149.48811340 17.89045715]
[166.12738037 30.58660126]
[179.61492920 46.59107971]
[192.68719482 39.23472595]
[205.75946045 31.87837410]
[218.83172607 24.52202225]
[227.06379700 11.01115704]
[241.94996643 11.51233959]
[247.90740967 4.56372738]
[255.29974365 4.14446735]
[254.66230774 -11.06589222]
[260.66763306 -24.98793030]
[272.07540894 -34.88150406]
[286.58789062 -38.82475281]
[301.31253052 -36.08723831]
[313.33859253 -27.26459122]
[326.53070068 -34.40380096]
[339.72280884 -41.54301071]
[352.91491699 -48.68222427]
[361.03707886 -62.92871857]
[377.43521118 -62.74739075]
[385.24035645 -48.32477188]
[376.42321777 -34.49761581]
[360.05413818 -35.49011612]
[346.86203003 -28.35090637]
[333.66992188 -21.21169472]
[320.47781372 -14.07248402]
[321.28619385 0.82086974]
[315.52432251 14.64513588]
[304.28561401 24.63773727]
[289.76358032 28.77667046]
[274.82391357 26.18949127]
[262.43896484 17.33657455]
[249.30632019 24.58460236]
[242.00926208 37.56929016]
[226.18807983 37.59428406]
[213.11581421 44.95063782]
[200.04354858 52.30699158]
[186.97128296 59.66334152]
[190.91033936 69.56383514]
[193.72639465 79.84030151]
[195.38465881 90.36579132]
[195.86463928 101.01029968]
[195.16043091 111.64232635]
[193.28070068 122.13053131]
[190.24870300 132.34536743]
[186.10185242 142.16064453]
[180.89141846 151.45510864]
[192.87924194 160.47132874]
[205.74806213 159.44203186]
[215.55004883 167.21330261]
[217.36175537 179.18481445]
[229.19886780 188.39799500]
[241.03598022 197.61119080]
[257.34518433 199.32649231]
[263.76617432 214.41632080]
[253.69360352 227.35754395]
[237.48927307 224.83735657]
[231.82278442 209.44830322]
[219.98567200 200.23510742]
[208.14857483 191.02191162]
[190.66819763 189.56076050]
[183.86302185 172.45915222]
[171.87519836 163.44293213]
[164.15025330 171.24461365]
[155.58396912 178.11192322]
[146.28869629 183.95478821]
[136.38635254 188.69657898]
[126.00679779 192.27511597]
[115.28616333 194.64344788]
[104.36505127 195.77053833]
[93.38668823 195.64158630]
[82.49505615 194.25830078]
[71.83300781 191.63880920]
[61.54037094 187.81745911]
[51.75212860 182.84439087]
[42.59666443 176.78480530]
[34.19404602 169.71818542]
[26.65447617 161.73721313]
[20.07683563 152.94654846]
[14.54739285 143.46150208]
[10.13866425 133.40643311]
[6.90847158 122.91325378]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 98]
[2 97]
[4 95]
[7 92]
[8 91]
[9 90]
[10 89]
[11 88]
[12 87]
[13 86]
[14 85]
[15 84]
[16 83]
[17 82]
[20 79]
[21 78]
[22 77]
[23 39]
[24 38]
[25 37]
[26 36]
[27 35]
[28 34]
[29 33]
[40 66]
[41 65]
[42 64]
[43 63]
[44 62]
[45 61]
[46 60]
[48 57]
[49 56]
[109 145]
[110 144]
[111 143]
[112 142]
[114 140]
[116 139]
[122 133]
[123 132]
[124 131]
[125 130]
[154 170]
[155 169]
[158 167]
[159 166]
[160 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
