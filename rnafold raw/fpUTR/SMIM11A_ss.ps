%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:56:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCCACUGCGCCUGAGCACGUAGCGGUGCAUUUCGGGACCUGUAGUUUUCCCCGGCAGGACGGUAGAAGUCGUGGUUUGUGCGCGGCCAGGCGCUGGAGCCUCCGCUGCCGGGAGCAAUCAGACCUUCCAGCUGCCUCUCAUGUACUUGUCUGUUGGGGGCUUGUGUUGAUCAGGAGUGAAUUCACAGUCUACC\
) } def
/len { sequence length } bind def

/coor [
[-12.20989132 322.28091431]
[-28.12837791 320.95065308]
[-35.48913956 334.02044678]
[-42.74492264 347.14880371]
[-49.89525986 360.33486938]
[-49.67200851 376.15451050]
[-62.54060745 383.65438843]
[-69.69094086 396.84048462]
[-76.84127808 410.02655029]
[-83.99161530 423.21264648]
[-91.14195251 436.39871216]
[-84.33293915 450.34207153]
[-87.05316925 465.61883545]
[-98.25666809 476.35482788]
[-113.63545990 478.42178345]
[-127.27608490 471.02496338]
[-133.93344116 457.00857544]
[-131.04765320 441.76220703]
[-119.72834015 431.14840698]
[-104.32803345 429.24838257]
[-97.17769623 416.06228638]
[-90.02735901 402.87622070]
[-82.87702179 389.69015503]
[-75.72668457 376.50405884]
[-76.46137238 361.62759399]
[-63.08134079 353.18453979]
[-55.93100357 339.99844360]
[-55.50562286 332.61065674]
[-48.55892181 326.65966797]
[-41.19815826 313.58990479]
[-49.68847656 302.60980225]
[-53.36193848 289.18005371]
[-51.63159180 275.32122803]
[-44.72611618 263.13159180]
[-33.66021347 254.46929932]
[-20.08563042 250.66934204]
[-6.04465532 252.33770752]
[1.52464294 239.38757324]
[9.09394073 226.43745422]
[16.66323853 213.48733521]
[17.32519150 206.11695862]
[24.45906258 200.39169312]
[32.23495102 187.56454468]
[40.01083755 174.73741150]
[47.68367767 161.84835815]
[55.25297546 148.89823914]
[62.82227707 135.94812012]
[70.39157104 122.99799347]
[77.96086884 110.04786682]
[82.85309601 91.52458954]
[96.87038422 86.32061768]
[100.44216156 71.75207520]
[104.01393127 57.18353271]
[107.58570862 42.61499023]
[111.15748596 28.04644775]
[114.72926331 13.47790623]
[118.30103302 -1.09063613]
[121.87281036 -15.65917873]
[125.44458771 -30.22772026]
[124.44854736 -39.32050323]
[129.19212341 -45.00021362]
[132.99693298 -59.50963593]
[136.80175781 -74.01905823]
[140.49017334 -88.55850983]
[144.06195068 -103.12705231]
[147.63372803 -117.69559479]
[143.40504456 -132.94120789]
[153.95039368 -143.46000671]
[141.22676086 -162.07276917]
[146.95899963 -183.42347717]
[138.37724304 -195.72605896]
[129.79550171 -208.02864075]
[121.21374512 -220.33122253]
[112.63199615 -232.63380432]
[104.05024719 -244.93638611]
[88.45957184 -246.14672852]
[77.33067322 -257.13223267]
[75.91826630 -272.70590210]
[84.88925934 -285.51431274]
[100.00781250 -289.50973511]
[114.13541412 -282.80563354]
[120.60144043 -268.56750488]
[116.35282898 -253.51814270]
[124.93457794 -241.21556091]
[133.51632690 -228.91297913]
[142.09808350 -216.61038208]
[150.67982483 -204.30780029]
[159.26158142 -192.00521851]
[166.21447754 -193.29515076]
[173.25912476 -192.67881775]
[180.61988831 -205.74859619]
[187.98065186 -218.81838989]
[195.34141541 -231.88816833]
[202.59719849 -245.01651001]
[209.74754333 -258.20260620]
[216.89787292 -271.38867188]
[224.04821777 -284.57473755]
[231.19854736 -297.76083374]
[238.34889221 -310.94689941]
[244.42063904 -324.66308594]
[249.37481689 -338.82135010]
[246.62962341 -354.40255737]
[258.13629150 -363.86016846]
[263.09045410 -378.01840210]
[268.04464722 -392.17666626]
[272.99884033 -406.33489990]
[269.42004395 -422.33880615]
[281.67196655 -433.23937988]
[297.15084839 -427.82308960]
[299.93334961 -411.66174316]
[287.15707397 -401.38073730]
[282.20291138 -387.22247314]
[277.24871826 -373.06423950]
[272.29452515 -358.90597534]
[275.39407349 -344.33743286]
[263.53308105 -333.86715698]
[258.57888794 -319.70892334]
[271.00109863 -328.11654663]
[285.95492554 -329.29275513]
[299.53884888 -322.93063354]
[308.20886230 -310.69009399]
[309.70294189 -295.76470947]
[303.63122559 -282.04849243]
[291.57791138 -273.12002563]
[276.68765259 -271.30877686]
[262.84536743 -277.08731079]
[253.66253662 -288.94796753]
[251.53495789 -303.79656982]
[244.38462830 -290.61050415]
[237.23428345 -277.42440796]
[230.08395386 -264.23834229]
[222.93360901 -251.05226135]
[215.78327942 -237.86618042]
[215.35789490 -230.47837830]
[208.41119385 -224.52740479]
[201.05043030 -211.45762634]
[193.68966675 -198.38783264]
[186.32890320 -185.31805420]
[192.64730835 -175.11962891]
[193.78869629 -163.08059692]
[189.43083191 -151.69726562]
[180.40069580 -143.36807251]
[168.51893616 -139.88822937]
[173.00308228 -125.68465424]
[162.20227051 -114.12381744]
[158.63049316 -99.55527496]
[155.05871582 -84.98673248]
[156.52119446 -77.73265076]
[151.31118774 -70.21424103]
[147.50636292 -55.70481873]
[143.70153809 -41.19539642]
[140.01312256 -26.65594482]
[136.44134521 -12.08740330]
[132.86958313 2.48113894]
[129.29780579 17.04968071]
[125.72602844 31.61822319]
[122.15425110 46.18676376]
[118.58247375 60.75530624]
[115.01070404 75.32385254]
[111.43892670 89.89239502]
[115.82194519 104.23774719]
[126.92611694 114.32225800]
[138.03028870 124.40676880]
[149.13446045 134.49128723]
[164.55221558 138.04139709]
[168.77214050 152.32571411]
[179.87631226 162.41021729]
[195.90544128 163.07838440]
[205.26037598 176.11161804]
[200.76478577 191.51191711]
[185.86732483 197.46549988]
[171.99604797 189.40530396]
[169.79179382 173.51438904]
[158.68762207 163.42988586]
[144.06411743 160.60107422]
[139.04994202 145.59545898]
[127.94577026 135.51094055]
[116.84160614 125.42642975]
[105.73743439 115.34191132]
[90.91099548 117.61716461]
[83.34169769 130.56729126]
[75.77239990 143.51741028]
[68.20310211 156.46754456]
[60.63380432 169.41766357]
[59.00152206 178.41801453]
[52.83798218 182.51330566]
[45.06209183 195.34043884]
[37.28620529 208.16758728]
[29.61336327 221.05662537]
[22.04406548 234.00675964]
[14.47476768 246.95687866]
[6.90546942 259.90701294]
[16.10525513 273.31994629]
[18.52906799 289.34429932]
[13.74218655 304.76696777]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 30]
[3 29]
[4 27]
[5 26]
[7 24]
[8 23]
[9 22]
[10 21]
[11 20]
[37 192]
[38 191]
[39 190]
[40 189]
[42 188]
[43 187]
[44 186]
[45 184]
[46 183]
[47 182]
[48 181]
[49 180]
[51 160]
[52 159]
[53 158]
[54 157]
[55 156]
[56 155]
[57 154]
[58 153]
[59 152]
[61 151]
[62 150]
[63 149]
[64 147]
[65 146]
[66 145]
[68 143]
[70 88]
[71 87]
[72 86]
[73 85]
[74 84]
[75 83]
[90 138]
[91 137]
[92 136]
[93 135]
[94 133]
[95 132]
[96 131]
[97 130]
[98 129]
[99 128]
[100 117]
[101 116]
[103 114]
[104 113]
[105 112]
[106 111]
[161 179]
[162 178]
[163 177]
[164 176]
[166 174]
[167 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
