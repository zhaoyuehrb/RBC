%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:31:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCUCGCGGGAAGCUCCGUUGUGGGCGCCCCGGCUGGUGGCUGAGCUCAGGCCUUCAGGCAGAGGGGAGGCGAGGGCGGGGCGGUCACGUGAGAGCACUGCCGCGGUGGGUUGUGGGGGUGCUGCGGCGCCGUUUGCUUUGCCAAACCGACAAAAGAGAG\
) } def
/len { sequence length } bind def

/coor [
[90.16458130 184.26426697]
[82.47993469 169.77709961]
[91.41201019 156.02391052]
[91.70287323 141.02673340]
[91.99374390 126.02955627]
[92.28461456 111.03237152]
[85.42297363 97.69378662]
[73.05284882 89.20968628]
[60.68272400 80.72558594]
[48.31259918 72.24147797]
[32.55567169 70.81676483]
[26.43607903 57.23737335]
[8.07071686 56.25911331]
[1.08086610 40.18511581]
[-11.45145130 31.94248199]
[-23.98376846 23.69984627]
[-36.51608658 15.45721149]
[-50.97539902 20.77081871]
[-65.61983490 16.60020638]
[-74.89074707 4.74634027]
[-75.39784241 -10.11572075]
[-87.93016052 -18.35835457]
[-100.46247101 -26.60099030]
[-112.99478912 -34.84362411]
[-125.52710724 -43.08625793]
[-141.30870056 -44.20515823]
[-147.69046021 -57.66332626]
[-160.22277832 -65.90596008]
[-172.75509644 -74.14859772]
[-185.28741455 -82.39123535]
[-197.81973267 -90.63386536]
[-210.35205078 -98.87650299]
[-222.88436890 -107.11913300]
[-238.66595459 -108.23803711]
[-245.04772949 -121.69620514]
[-257.58004761 -129.93884277]
[-270.37918091 -128.10166931]
[-280.65817261 -135.26506042]
[-283.19653320 -147.12379456]
[-295.56665039 -155.60789490]
[-311.32357788 -157.03260803]
[-317.44317627 -170.61199951]
[-329.81329346 -179.09611511]
[-344.37292480 -174.06388855]
[-358.93374634 -178.51768494]
[-367.97305298 -190.54910278]
[-368.19186401 -205.41819763]
[-380.56198120 -213.90229797]
[-392.93209839 -222.38641357]
[-405.76446533 -220.79777527]
[-415.90261841 -228.15913391]
[-418.21054077 -240.06486511]
[-430.41381836 -248.78724670]
[-442.61709595 -257.50964355]
[-458.98272705 -258.55783081]
[-466.01425171 -273.37301636]
[-456.47827148 -286.71456909]
[-440.18457031 -284.85787964]
[-433.89471436 -269.71292114]
[-421.69143677 -260.99053955]
[-409.48815918 -252.26815796]
[-391.97540283 -251.53692627]
[-384.44799805 -234.75653076]
[-372.07788086 -226.27243042]
[-359.70776367 -217.78833008]
[-345.75781250 -222.93972778]
[-331.27813721 -218.84054565]
[-321.87878418 -206.86117554]
[-321.32919312 -191.46623230]
[-308.95907593 -182.98213196]
[-294.08694458 -182.16426086]
[-287.08255005 -167.97802734]
[-274.71243286 -159.49392700]
[-257.18878174 -159.10243225]
[-249.33740234 -142.47116089]
[-236.80508423 -134.22851562]
[-221.91989136 -133.69918823]
[-214.64173889 -119.65145111]
[-202.10942078 -111.40882111]
[-189.57710266 -103.16618347]
[-177.04478455 -94.92354584]
[-164.51246643 -86.68091583]
[-151.98014832 -78.43827820]
[-139.44783020 -70.19564819]
[-124.56263733 -69.66631317]
[-117.28447723 -55.61857605]
[-104.75215912 -47.37594223]
[-92.21984100 -39.13330841]
[-79.68752289 -30.89067268]
[-67.15520477 -22.64803696]
[-53.30776978 -28.06897736]
[-38.75133896 -24.25135040]
[-29.12145233 -12.45649242]
[-28.27345085 2.92489457]
[-15.74113369 11.16752911]
[-3.20881653 19.41016388]
[9.32350063 27.65279770]
[21.26142883 25.51765060]
[31.78025818 32.32396317]
[34.92018127 44.86724854]
[49.79231644 45.68512344]
[56.79670334 59.87135315]
[69.16682434 68.35546112]
[81.53694916 76.83956146]
[93.90707397 85.32366180]
[134.45281982 78.34955597]
[149.04849243 81.80879211]
[163.64416504 85.26802826]
[181.12925720 79.56584167]
[193.43946838 92.04341888]
[208.09947205 95.21897888]
[222.75949097 98.39453888]
[241.61042786 91.34452057]
[255.41682434 104.84133148]
[270.18893433 107.44605255]
[284.96105957 110.05077362]
[299.73318481 112.65549469]
[314.50527954 115.26022339]
[329.30197144 117.72158813]
[344.12182617 120.03936768]
[358.94165039 122.35715485]
[373.76150513 124.67493439]
[388.58135986 126.99271393]
[403.67663574 120.58455658]
[416.60928345 130.66812134]
[414.07531738 146.87031555]
[398.68145752 152.52369690]
[386.26358032 141.81256104]
[371.44372559 139.49478149]
[356.62387085 137.17700195]
[341.80404663 134.85922241]
[326.98419189 132.54144287]
[319.85464478 134.62510681]
[311.90057373 130.03233337]
[297.12844849 127.42761230]
[282.35632324 124.82289124]
[267.58422852 122.21817017]
[252.81210327 119.61344910]
[244.95158386 126.23587799]
[234.52203369 127.43730927]
[224.96900940 122.57615662]
[219.58392334 113.05455017]
[204.92391968 109.87899017]
[190.26391602 106.70343018]
[179.89624023 112.99504852]
[167.63191223 110.43420410]
[160.18492126 99.86370087]
[145.58924866 96.40446472]
[130.99357605 92.94522858]
[125.06562805 97.53973389]
[139.64195251 101.07962036]
[145.96270752 114.68285370]
[139.26835632 128.10617065]
[124.59974670 131.24179077]
[113.00238800 121.72857666]
[113.20973969 106.72873688]
[107.28179932 111.32324219]
[106.99092865 126.32042694]
[106.70005798 141.31759644]
[106.40918732 156.31478882]
[114.80126190 170.40396118]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 160]
[4 159]
[5 158]
[6 157]
[7 105]
[8 104]
[9 103]
[10 102]
[12 100]
[14 97]
[15 96]
[16 95]
[17 94]
[21 90]
[22 89]
[23 88]
[24 87]
[25 86]
[27 84]
[28 83]
[29 82]
[30 81]
[31 80]
[32 79]
[33 78]
[35 76]
[36 75]
[39 73]
[40 72]
[42 70]
[43 69]
[47 65]
[48 64]
[49 63]
[52 61]
[53 60]
[54 59]
[106 149]
[107 148]
[108 147]
[110 144]
[111 143]
[112 142]
[114 138]
[115 137]
[116 136]
[117 135]
[118 134]
[119 132]
[120 131]
[121 130]
[122 129]
[123 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
