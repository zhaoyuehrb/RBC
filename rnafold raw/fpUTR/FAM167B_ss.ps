%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:00:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUGCAUACUUGGCCUCACACACCCAUCUGCUCACUCACCCUGGCACAUUCAGCCCCCCUAACCCACCUUGAACAUUGACCACCACACACUCCCUGGCACGCUCUUCUCACCCUCAACUUCUGCCACCUCUCCCUGGGCAAUACUGCCAGCCUUUCCCUAAUCUCAGAGCUGCAGCCCUGCCCUGUCACUCACCUCAAACCUGCC\
) } def
/len { sequence length } bind def

/coor [
[104.19712067 172.90180969]
[87.59082031 172.43322754]
[71.41533661 168.20690918]
[56.51520157 160.39434814]
[48.88351822 173.30781555]
[41.25183487 186.22126770]
[46.39804840 196.94345093]
[45.73438644 208.69804382]
[39.54136658 218.56967163]
[29.45650291 224.16592407]
[18.04289627 224.19683838]
[10.02095222 236.87156677]
[1.99900842 249.54627991]
[9.20228672 263.11123657]
[8.64198875 278.45989990]
[0.46882978 291.46356201]
[-13.11865044 298.62429810]
[-28.46548653 298.01589966]
[-41.44345856 289.80200195]
[-48.56155777 276.19213867]
[-47.90504837 260.84729004]
[-39.65053177 247.89512634]
[-26.01842880 240.81973267]
[-10.67570686 241.52433777]
[-2.65376282 228.84960938]
[5.36818171 216.17489624]
[0.28346631 198.59204102]
[9.82581615 182.59996033]
[28.33837891 178.58958435]
[35.97006226 165.67613220]
[43.60174561 152.76266479]
[39.63920975 146.39491272]
[26.90369606 154.31997681]
[14.16818047 162.24504089]
[1.43266523 170.17010498]
[-8.23056889 181.64276123]
[-22.12780952 175.99771118]
[-21.05350113 161.03622437]
[-6.49239922 157.43458557]
[6.24311638 149.50952148]
[18.97863197 141.58445740]
[31.71414757 133.65939331]
[27.75161552 127.29164124]
[12.79520130 128.43431091]
[-2.16121125 129.57699585]
[-11.12343311 142.39154053]
[-26.23925018 146.39729309]
[-40.37143707 139.70286560]
[-46.84720230 125.46916199]
[-42.60889435 110.41689301]
[-29.65770912 101.65328979]
[-14.10879993 103.31624603]
[-3.30388713 114.62058258]
[11.65252590 113.47790527]
[26.60893822 112.33522797]
[25.98868942 98.79909515]
[27.83083534 85.44809723]
[32.04769516 72.72402191]
[38.47344589 61.04302216]
[46.87052155 50.78203201]
[56.93828201 42.26661301]
[68.32373047 35.76064682]
[80.63388062 31.45820236]
[93.44925690 29.47783470]
[106.33824921 29.85945129]
[118.87158203 32.56384659]
[130.63665771 37.47490692]
[141.25108337 44.40432358]
[150.37518311 53.09870911]
[162.40196228 44.13453674]
[174.42875671 35.17036057]
[186.45553589 26.20618820]
[183.99617004 8.80886364]
[190.65071106 -7.35627127]
[204.50344849 -17.87249184]
[221.68554688 -19.91598129]
[237.45526123 -13.01359367]
[249.20307922 -22.34036827]
[260.95089722 -31.66714287]
[272.69873047 -40.99391937]
[259.74633789 -33.42850494]
[244.91056824 -31.21488953]
[230.31385803 -34.66974640]
[218.04441833 -43.29882431]
[209.85754395 -55.86763763]
[206.92443848 -70.57807159]
[209.66474915 -85.32564545]
[217.68640137 -98.00054169]
[229.84184265 -106.78947449]
[244.39207458 -110.43509674]
[259.25555420 -108.41585541]
[272.30584717 -101.02062988]
[281.67602539 -89.30738068]
[286.02551270 -74.95183563]
[284.73162842 -60.00599289]
[288.13314819 -74.61522675]
[291.53463745 -89.22446442]
[294.93615723 -103.83370209]
[298.33764648 -118.44293976]
[285.02349854 -125.54194641]
[274.00103760 -135.84573364]
[266.02182007 -148.65174866]
[261.62985229 -163.08688354]
[261.12457275 -178.16690063]
[264.54046631 -192.86364746]
[271.64462280 -206.17504883]
[281.95266724 -217.19352722]
[294.76174927 -225.16781616]
[309.19857788 -229.55421448]
[324.27880859 -230.05364990]
[338.97421265 -226.63208008]
[352.28286743 -219.52279663]
[363.29736328 -209.21051025]
[371.26672363 -196.39831543]
[375.64755249 -181.95980835]
[376.14117432 -166.87939453]
[372.71392822 -152.18530273]
[365.59948730 -138.87939453]
[355.28295898 -127.86887360]
[342.46768188 -119.90447998]
[328.02749634 -115.52922821]
[312.94689941 -115.04143524]
[309.54537964 -100.43219757]
[306.14389038 -85.82295990]
[302.74237061 -71.21372223]
[299.34088135 -56.60448837]
[303.54324341 -50.39239883]
[313.53237915 -61.58244324]
[320.28598022 -74.97605896]
[334.73516846 -79.00360870]
[347.44332886 -71.03475189]
[350.11090088 -56.27385712]
[340.99572754 -44.36110306]
[326.05142212 -43.07637787]
[311.94799805 -37.96821594]
[316.15036011 -31.75612640]
[330.97625732 -29.47741508]
[345.80218506 -27.19870377]
[360.62808228 -24.91999435]
[375.45397949 -22.64128304]
[386.38983154 -33.49087906]
[401.44140625 -35.79381180]
[414.80484009 -28.87409401]
[421.45162964 -15.57154083]
[436.27755737 -13.29282951]
[451.10345459 -11.01411915]
[465.92935181 -8.73540878]
[474.89083862 -10.52520847]
[480.96328735 -6.30724049]
[495.75271606 -3.80270219]
[510.54214478 -1.29816365]
[525.35021973 1.09353042]
[540.17614746 3.37224102]
[548.76824951 -9.24278259]
[561.98718262 -16.87312508]
[577.20837402 -18.00377655]
[591.40960693 -12.41024494]
[601.77124023 -1.20312929]
[606.23596191 13.39238834]
[603.91723633 28.47835732]
[595.27557373 41.05944824]
[582.02667236 48.63767624]
[566.80114746 49.70837784]
[552.62207031 44.05896378]
[542.30462646 32.81113434]
[537.89746094 18.19814682]
[523.07153320 15.91943645]
[515.97998047 18.01125526]
[508.03759766 13.49126816]
[493.24816895 10.98672962]
[478.45874023 8.48219109]
[463.65063477 6.09049702]
[448.82473755 3.81178641]
[433.99884033 1.53307581]
[419.17294312 -0.74563479]
[408.83813477 9.94688225]
[394.01348877 12.53415012]
[380.34820557 5.81749535]
[373.17526245 -7.81537771]
[358.34936523 -10.09408855]
[343.52346802 -12.37279892]
[328.69757080 -14.65150928]
[313.87164307 -16.93021965]
[293.64666748 -18.23722839]
[282.02548218 -29.24609947]
[270.27767944 -19.91932297]
[258.52984619 -10.59254837]
[246.78204346 -1.26577365]
[249.97250366 10.96320343]
[248.29336548 23.53661728]
[241.95916748 34.58088684]
[231.88076782 42.43681717]
[219.53445435 45.90882874]
[206.74580383 44.44681931]
[195.41970825 38.23297501]
[183.39292908 47.19714737]
[171.36613464 56.16132355]
[159.33935547 65.12549591]
[166.11405945 79.24710846]
[169.55409241 94.63546753]
[169.43591309 110.50878906]
[165.71806335 126.04962158]
[158.54565430 140.44691467]
[148.24531555 152.93836975]
[135.31053162 162.85073853]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 31]
[5 30]
[6 29]
[11 26]
[12 25]
[13 24]
[43 55]
[44 54]
[45 53]
[69 198]
[70 197]
[71 196]
[72 195]
[77 188]
[78 187]
[79 186]
[80 185]
[95 126]
[96 125]
[97 124]
[98 123]
[99 122]
[136 183]
[137 182]
[138 181]
[139 180]
[140 179]
[144 175]
[145 174]
[146 173]
[147 172]
[149 171]
[150 170]
[151 169]
[152 167]
[153 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
