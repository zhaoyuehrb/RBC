%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:14:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCCGCGCCUGUAGCACUCCCGGAACUGGAACUAGGUGCCAGACGGUCCGGAGGCGGGGGCCACGUCAGCGGGGCCACCCAGGGCUCGCGGGGUCCCGGUGGGUGCC\
) } def
/len { sequence length } bind def

/coor [
[102.33058167 243.39370728]
[108.37692261 227.55458069]
[108.37692261 212.55458069]
[108.15876770 197.55616760]
[100.05456543 185.05931091]
[107.38722229 171.03993225]
[106.95095062 156.04627991]
[106.51467896 141.05262756]
[106.07840729 126.05897522]
[96.33700562 125.28000641]
[87.97560883 121.15039825]
[82.03792572 114.54880524]
[79.12834167 106.63376617]
[79.35807800 98.64984894]
[65.76346588 92.31057739]
[56.50619125 91.48976898]
[51.86977005 85.58412933]
[38.46527863 78.85214233]
[25.06079102 72.12014771]
[11.65630150 65.38816071]
[2.42681527 64.29845428]
[-2.03587914 58.26046371]
[-15.23890018 51.14146042]
[-28.44192123 44.02245331]
[-49.65519333 46.19405365]
[-60.21619415 28.56368637]
[-73.98943329 22.62248993]
[-87.76268005 16.68129349]
[-101.53591919 10.74009705]
[-117.27204895 12.37864208]
[-125.89384460 0.23311307]
[-139.66708374 -5.70808363]
[-156.60566711 -6.42979670]
[-160.60122681 -22.90620041]
[-145.87480164 -31.30673218]
[-133.72589111 -19.48132515]
[-119.95264435 -13.54012871]
[-105.20167542 -15.60362720]
[-95.59471893 -3.03314471]
[-81.82147980 2.90805197]
[-68.04824066 8.84924793]
[-54.27499771 14.79044437]
[-46.42674255 10.08868504]
[-37.15108871 9.60995483]
[-28.60826302 13.59632874]
[-22.84906006 21.23474503]
[-21.32291603 30.81943321]
[-8.11989498 37.93843842]
[5.08312654 45.05744553]
[18.38828850 51.98367310]
[31.79277802 58.71566010]
[45.19726944 65.44764709]
[58.60175705 72.17963409]
[72.10273743 78.71595764]
[85.69735718 85.05523682]
[108.96084595 78.03527832]
[126.74424744 99.12673187]
[141.33992004 95.66749573]
[155.93559265 92.20825958]
[170.53126526 88.74901581]
[185.12693787 85.28977966]
[199.72261047 81.83054352]
[211.36645508 71.11926270]
[225.53500366 75.71289062]
[240.13067627 72.25365448]
[254.72634888 68.79441833]
[266.37020874 58.08313751]
[280.53875732 62.67676926]
[295.13442993 59.21752930]
[309.73010254 55.75829315]
[324.16098022 51.66569138]
[338.39962769 46.94752121]
[352.63827515 42.22934723]
[363.13021851 29.62573433]
[379.24310303 32.67648697]
[384.40136719 48.24325943]
[373.29861450 60.31228638]
[357.35644531 56.46798706]
[343.11779785 61.18616104]
[328.87915039 65.90432739]
[326.95849609 69.03623199]
[323.34631348 71.32872009]
[318.48641968 71.95996857]
[313.18933105 70.35396576]
[298.59365845 73.81320190]
[283.99798584 77.27243805]
[273.39813232 87.73628998]
[258.18557739 83.39009094]
[243.58992004 86.84932709]
[228.99424744 90.30856323]
[218.39437866 100.77241516]
[203.18185425 96.42621613]
[188.58618164 99.88545227]
[173.99050903 103.34468842]
[159.39483643 106.80393219]
[144.79916382 110.26316833]
[130.20349121 113.72240448]
[121.07206726 125.62270355]
[121.50833130 140.61636353]
[121.94460297 155.61001587]
[122.38087463 170.60366821]
[130.51628113 184.17297363]
[123.15242004 197.11988831]
[126.57357788 205.76087952]
[123.37692261 212.55458069]
[123.37692261 227.55458069]
[129.42326355 243.39370728]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 106]
[3 105]
[4 103]
[6 101]
[7 100]
[8 99]
[9 98]
[14 55]
[15 54]
[17 53]
[18 52]
[19 51]
[20 50]
[22 49]
[23 48]
[24 47]
[26 42]
[27 41]
[28 40]
[29 39]
[31 37]
[32 36]
[57 97]
[58 96]
[59 95]
[60 94]
[61 93]
[62 92]
[64 90]
[65 89]
[66 88]
[68 86]
[69 85]
[70 84]
[71 80]
[72 79]
[73 78]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
