%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:15:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACAUCUACCUCCUGAUAGCAAAAGAACUGAGGAAGCUCUUUCCACUACGGCUGUAUUGCACUGGUGAGUCCGGGCCCAUGGAUGAGAAAUUGAUGCGAGGAUCAAUACAAGCUUAAUUUGAAUUAAUAAAAGGAAAUAUUUUCUCCCUUUGAACUUAUCUCCGUAAAGCCAUUGUGCCUCCUCUUGGGGGUCACGUGUUCACAAUCA\
) } def
/len { sequence length } bind def

/coor [
[166.06842041 318.58334351]
[152.57464600 325.37265015]
[137.71446228 328.08398438]
[122.69248199 326.49749756]
[108.72648621 320.74182129]
[96.94864655 311.28353882]
[88.31372070 298.88940430]
[83.52171326 284.56411743]
[82.96109772 269.46902466]
[86.67730713 254.82775879]
[94.36908722 241.82725525]
[105.41290283 231.52139282]
[118.91349030 224.74562073]
[133.77639771 222.04924011]
[135.35180664 207.13220215]
[136.92720032 192.21514893]
[127.38903809 180.83276367]
[128.77421570 165.68231201]
[140.77778625 155.75498962]
[142.35319519 140.83795166]
[100.17191315 152.24934387]
[67.33695221 131.91189575]
[55.03173447 140.48988342]
[42.72652054 149.06785583]
[30.42130280 157.64582825]
[18.11608887 166.22380066]
[11.21983910 180.46292114]
[-3.64564061 181.39392090]
[-15.95085621 189.97189331]
[-20.17383957 205.44917297]
[-34.96386719 211.66484070]
[-48.97529602 203.85079956]
[-51.45975494 188.00128174]
[-40.51138306 176.27470398]
[-24.52883148 177.66668701]
[-12.22361565 169.08869934]
[-6.20751905 155.46315002]
[9.53811264 153.91859436]
[21.84332848 145.34060669]
[34.14854431 136.76263428]
[46.45375824 128.18466187]
[58.75897598 119.60668182]
[55.81834793 111.54235077]
[54.43885040 103.07016754]
[39.51039124 101.60692596]
[24.58193207 100.14367676]
[9.65347195 98.68043518]
[-5.27498817 97.21718597]
[-17.41777420 106.97374725]
[-32.53651047 105.27715302]
[-41.76306915 93.64073181]
[-56.69152832 92.17749023]
[-68.74307251 102.40176392]
[-84.48740387 101.02644348]
[-94.58369446 88.86747742]
[-93.04199219 73.13856506]
[-80.77696228 63.17139053]
[-65.06523132 64.87930298]
[-55.22828293 77.24902344]
[-40.29982376 78.71227264]
[-28.98943710 69.08882904]
[-13.82901001 70.36009979]
[-3.81174326 82.28872681]
[11.11671638 83.75197601]
[26.04517746 85.21521759]
[40.97363663 86.67846680]
[55.90209579 88.14170837]
[58.18169403 81.65679169]
[61.40887451 75.58751678]
[50.22155762 65.59532166]
[39.03424454 55.60312653]
[27.84692955 45.61093140]
[16.65961456 35.61873627]
[0.89653105 36.75924683]
[-11.00128841 26.35648727]
[-11.97508049 10.58222675]
[-1.44710970 -1.20494378]
[14.33656406 -2.01190567]
[26.01176834 8.64009762]
[26.65180969 24.43142128]
[37.83912659 34.42361832]
[49.02643967 44.41581345]
[60.21375656 54.40800858]
[71.40106964 64.40020752]
[87.21459961 52.74192047]
[107.72228241 48.32418823]
[129.54548645 52.96809387]
[148.64662170 66.90866089]
[148.42115784 51.91035461]
[148.19569397 36.91204834]
[147.97023010 21.91374397]
[147.74476624 6.91543865]
[147.51930237 -8.08286667]
[147.29383850 -23.08117294]
[144.03536987 -31.61635590]
[147.17941284 -38.30621338]
[147.17941284 -53.30621338]
[136.28485107 -64.43933868]
[136.49853516 -79.65147400]
[147.17941284 -89.96915436]
[134.54714966 -98.98056793]
[129.65615845 -113.70666504]
[134.38711548 -128.48493958]
[146.92086792 -137.63287354]
[162.43794250 -137.63287354]
[174.97169495 -128.48493958]
[179.70265198 -113.70666504]
[174.81166077 -98.98056793]
[162.17941284 -89.96915436]
[172.86027527 -79.65147400]
[173.07395935 -64.43933868]
[162.17941284 -53.30621338]
[162.17941284 -38.30621338]
[162.29214478 -23.30663681]
[162.51760864 -8.30833149]
[162.74307251 6.68997383]
[162.96853638 21.68828011]
[163.19400024 36.68658447]
[163.41946411 51.68489075]
[163.64492798 66.68319702]
[169.63204956 71.20030975]
[176.62475586 57.92996597]
[183.61746216 44.65961838]
[184.42904663 29.68159103]
[194.92617798 18.96662903]
[209.88438416 17.84761620]
[221.85890198 26.88149071]
[224.88996887 41.57205200]
[217.46900940 54.60774994]
[203.28820801 59.50062180]
[192.44726562 69.86757660]
[181.60630798 80.23453522]
[187.59342957 84.75164795]
[202.07745361 80.85121918]
[216.56146240 76.95078278]
[227.87500000 65.89119720]
[242.17639160 70.05288696]
[256.66040039 66.15245056]
[271.14440918 62.25202179]
[279.06167603 48.83729935]
[293.80609131 45.08803558]
[306.54617310 52.71860123]
[321.03018188 48.81817245]
[335.51419067 44.91773987]
[341.94064331 30.66169739]
[356.04959106 23.91838837]
[371.17916870 27.87179184]
[380.18569946 40.65523529]
[378.81655884 56.23276520]
[367.71823120 67.24915314]
[352.13098145 68.50279236]
[339.41464233 59.40175247]
[324.93063354 63.30218506]
[310.44659424 67.20261383]
[303.26116943 80.19896698]
[288.62789917 84.36089325]
[275.04483032 76.73603821]
[260.56082153 80.63646698]
[246.07681274 84.53689575]
[235.79927063 95.31749725]
[220.46189880 91.43479919]
[205.97787476 95.33522797]
[191.49386597 99.23566437]
[189.32684326 106.41577148]
[203.90773010 109.93682861]
[218.48861694 113.45788574]
[233.06950378 116.97894287]
[247.95394897 118.83721161]
[252.19714355 133.22454834]
[240.70321655 142.86247253]
[227.27565002 136.17605591]
[213.18136597 131.04270935]
[199.08709717 125.90935516]
[184.99281311 120.77600098]
[182.82579041 127.95611572]
[192.73362732 139.21821594]
[202.64146423 150.48031616]
[212.63365173 161.66761780]
[222.70965576 172.77952576]
[232.78564453 183.89143372]
[242.86163330 195.00332642]
[252.93763733 206.11523438]
[268.70870972 210.61019897]
[272.43853760 226.57955933]
[260.29016113 237.59539795]
[244.76080322 232.32557678]
[241.82572937 216.19122314]
[231.74974060 205.07931519]
[221.67373657 193.96742249]
[211.59774780 182.85551453]
[201.52175903 171.74362183]
[194.69888306 168.89976501]
[191.37936401 160.38813782]
[181.47152710 149.12605286]
[171.56369019 137.86395264]
[157.27023315 142.41334534]
[155.69483948 157.33038330]
[165.35986328 169.54615784]
[163.54968262 184.65171814]
[151.84423828 193.79055786]
[150.26884460 208.70759583]
[148.69343567 223.62463379]
[162.66520691 229.36628723]
[174.45254517 238.81272888]
[183.09991455 251.19818115]
[187.90631104 265.51864624]
[188.48210144 280.61318970]
[184.78059387 295.25814819]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 202]
[15 201]
[16 200]
[19 197]
[20 196]
[22 42]
[23 41]
[24 40]
[25 39]
[26 38]
[28 36]
[29 35]
[44 67]
[45 66]
[46 65]
[47 64]
[48 63]
[51 60]
[52 59]
[69 84]
[70 83]
[71 82]
[72 81]
[73 80]
[88 120]
[89 119]
[90 118]
[91 117]
[92 116]
[93 115]
[94 114]
[96 113]
[97 112]
[100 109]
[133 163]
[134 162]
[135 161]
[137 159]
[138 158]
[139 157]
[142 154]
[143 153]
[144 152]
[175 195]
[176 194]
[177 193]
[178 191]
[179 190]
[180 189]
[181 188]
[182 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
