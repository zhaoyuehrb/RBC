%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:54:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCCCCUUGUCGCCUAGGUCCACCCGAGCCCCCUCCCCCGGGCCGCCCCCGAGCACGAAGUUGGCGGGAGCCUAUAAAAGCUGGUGCCGGCGCGACCCGCGGACACACAGUGCAGGCGCCCAAGCCGCCGCCGCCAGAUCGGUGCCGAUUCCUGCCCUGCCCCGACCGCCAGCGCGACC\
) } def
/len { sequence length } bind def

/coor [
[102.73635101 356.94219971]
[95.40586090 370.37805176]
[82.66464233 378.85864258]
[67.44054413 380.43511963]
[53.23194122 374.74530029]
[43.30387878 363.09658813]
[39.93774414 348.16583252]
[43.90705109 333.38397217]
[54.29968643 322.14779663]
[68.72749329 317.03927612]
[70.80363464 302.18365479]
[72.87976837 287.32803345]
[74.95590973 272.47241211]
[77.03204346 257.61676025]
[78.97917938 242.74368286]
[80.79717255 227.85426331]
[71.93019104 210.68859863]
[84.22910309 194.73904419]
[85.52922821 179.79550171]
[86.82936096 164.85194397]
[88.12949371 149.90840149]
[82.29434967 148.14839172]
[76.70911407 145.70877075]
[71.45262909 142.62399292]
[66.59907532 138.93759155]
[62.21697235 134.70158386]
[58.36816406 129.97578430]
[45.04468155 136.86669922]
[31.72120094 143.75762939]
[23.33369255 157.84953308]
[6.94181776 157.36116028]
[-0.59186631 142.79490662]
[8.48264790 129.13528442]
[24.83027840 130.43414307]
[38.15375900 123.54322052]
[51.47724152 116.65229797]
[49.71791077 89.82804871]
[61.76518631 65.79684448]
[52.16776276 54.26906967]
[42.47066116 42.82502365]
[32.67461014 31.46556282]
[22.87855721 20.10610199]
[13.08250523 8.74664116]
[-1.78941333 3.34880614]
[-4.24177742 -11.34252357]
[-14.03782940 -22.70198441]
[-23.83388138 -34.06144714]
[-36.63286972 -35.79456329]
[-44.55769730 -45.48024750]
[-43.77320480 -57.56826019]
[-53.37062454 -69.09603119]
[-62.96804810 -80.62380219]
[-70.88626099 -85.23300171]
[-72.62990570 -92.43594360]
[-82.02580261 -104.12855530]
[-91.42170715 -115.82115936]
[-100.81760406 -127.51377106]
[-113.54872894 -129.69004822]
[-121.13262177 -139.64494324]
[-119.92906952 -151.69844055]
[-129.12062073 -163.55236816]
[-138.31216431 -175.40629578]
[-147.50370789 -187.26020813]
[-157.29975891 -198.61967468]
[-167.67376709 -209.45388794]
[-178.04777527 -220.28808594]
[-193.93510437 -224.35316467]
[-198.09715271 -240.21536255]
[-186.25236511 -251.55702209]
[-170.58563232 -246.71080017]
[-167.21356201 -230.66209412]
[-156.83955383 -219.82788086]
[-146.46556091 -208.99366760]
[-144.88000488 -223.90963745]
[-133.31336975 -233.46018982]
[-118.36684418 -232.19471741]
[-108.57056427 -220.83546448]
[-109.51536560 -205.86524963]
[-120.66203308 -195.82772827]
[-135.64979553 -196.45175171]
[-126.45824432 -184.59783936]
[-117.26669312 -172.74391174]
[-108.07514954 -160.88999939]
[-91.50104523 -155.15733337]
[-89.12500000 -136.90966797]
[-79.72909546 -125.21706390]
[-70.33319855 -113.52445221]
[-60.93729782 -101.83184814]
[-51.44027710 -90.22122192]
[-41.84285355 -78.69345093]
[-32.24543381 -67.16567993]
[-15.48235321 -62.01170349]
[-12.47442055 -43.85749817]
[-2.67836857 -32.49803543]
[7.11768389 -21.13857651]
[21.28892326 -16.55324554]
[24.44196510 -1.04941130]
[34.23801804 10.31005001]
[44.03406906 21.66951180]
[53.83012390 33.02897263]
[60.59776688 36.04919815]
[63.69553375 44.67164993]
[73.29295349 56.19942093]
[82.59960175 51.74045944]
[92.61037445 49.23435593]
[102.92016602 48.78252792]
[113.11180115 50.40324783]
[122.77285004 54.03094101]
[131.51237488 59.51880646]
[138.97673035 66.64477539]
[144.86387634 75.12048340]
[148.93554688 84.60296631]
[151.02702332 94.70849609]
[166.01290894 95.35917664]
[180.99877930 96.00985718]
[195.98466492 96.66053009]
[210.97055054 97.31121063]
[219.70703125 94.55139160]
[226.21020508 98.10546875]
[241.18254089 99.01614380]
[247.88945007 85.40390015]
[259.26629639 75.42341614]
[273.55892944 70.57213593]
[288.57931519 71.55982971]
[302.04064941 78.20491791]
[311.90542603 89.46687317]
[316.69381714 103.60903168]
[331.66613770 104.51970673]
[345.91061401 97.63450623]
[358.14465332 106.13023376]
[373.11697388 107.04090881]
[388.08932495 107.95158386]
[403.06164551 108.86225891]
[418.03396606 109.77293396]
[429.69952393 99.11035919]
[445.48391724 99.90302277]
[456.02258301 111.68065643]
[455.06304932 127.45578766]
[443.17468262 137.86932373]
[427.41055298 136.74308777]
[417.12329102 124.74526215]
[402.15097046 123.83458710]
[387.17864990 122.92391205]
[372.20629883 122.01323700]
[357.23397827 121.10256195]
[344.06045532 128.05288696]
[330.75546265 119.49203491]
[315.78314209 118.58135986]
[309.31600952 132.03890991]
[298.15902710 142.02224731]
[283.99154663 146.98684692]
[268.96218872 146.14678955]
[255.36289978 139.59901428]
[245.27954102 128.31323242]
[240.27186584 113.98847198]
[225.29953003 113.07779694]
[210.31987000 112.29708862]
[195.33398438 111.64641571]
[180.34809875 110.99573517]
[165.36222839 110.34505463]
[150.37634277 109.69438171]
[144.51202393 125.50366211]
[133.83882141 138.55763245]
[119.50980377 147.44601440]
[103.07304382 151.20852661]
[101.77291107 166.15208435]
[100.47277832 181.09562683]
[99.17264557 196.03916931]
[106.65923309 203.97639465]
[108.48884583 214.50968933]
[104.29334259 224.10351562]
[95.68659210 229.67225647]
[93.86860657 244.56167603]
[95.93833160 253.48686218]
[91.88767242 259.69290161]
[89.81153107 274.54852295]
[87.73539734 289.40417480]
[85.65925598 304.25979614]
[83.58312225 319.11541748]
[96.05761719 327.98364258]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 179]
[11 178]
[12 177]
[13 176]
[14 175]
[15 173]
[16 172]
[18 168]
[19 167]
[20 166]
[21 165]
[27 36]
[28 35]
[29 34]
[38 103]
[39 102]
[40 100]
[41 99]
[42 98]
[43 97]
[45 95]
[46 94]
[47 93]
[50 91]
[51 90]
[52 89]
[54 88]
[55 87]
[56 86]
[57 85]
[60 83]
[61 82]
[62 81]
[63 80]
[64 73]
[65 72]
[66 71]
[113 161]
[114 160]
[115 159]
[116 158]
[117 157]
[119 156]
[120 155]
[127 148]
[128 147]
[130 145]
[131 144]
[132 143]
[133 142]
[134 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
