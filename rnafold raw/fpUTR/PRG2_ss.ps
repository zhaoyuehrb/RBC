%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:45:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAAGCAAAGAAGGACCUGGGCUUUGGGAAGAUCUAAAGACCCAGGAAGGUCUCUGGGUGGGUGAGUGCUUUCUCUGCUGUGGUGGAGCUGGUGACAGUUUAUUCUCCCAGGAGGUCCCUGGCUGUGGCUGACAGUUUCUGGAGGGCUGGCAGGCGUCUACCUGUGGCUUUCAGGAUAAAGCCAAG\
) } def
/len { sequence length } bind def

/coor [
[179.32579041 181.30326843]
[174.14811707 176.97114563]
[170.54441833 171.20152283]
[168.89820862 164.54791260]
[169.40339661 157.66053772]
[157.03677368 149.17134094]
[144.67015076 140.68212891]
[132.71121216 142.58265686]
[122.33496857 135.59439087]
[119.41844940 123.01692963]
[107.19540405 114.32226562]
[113.68028259 127.84803009]
[108.06808472 141.75857544]
[94.01266479 146.99737549]
[80.66485596 140.15368652]
[76.71482086 125.68311310]
[84.73387909 113.00705719]
[71.57962799 120.21578217]
[58.42538071 127.42450714]
[45.27113342 134.63323975]
[32.11688232 141.84196472]
[18.96263504 149.05068970]
[5.86907578 156.36906433]
[-7.16287994 163.79658508]
[-20.19483566 171.22412109]
[-33.22679138 178.65164185]
[-46.25874710 186.07916260]
[-59.29070282 193.50669861]
[-63.22386932 208.81373596]
[-76.87108612 216.78425598]
[-92.13569641 212.68946838]
[-99.96147919 198.95875549]
[-95.70553589 183.73829651]
[-81.89284515 176.05812073]
[-66.71823120 180.47473145]
[-53.68627167 173.04721069]
[-40.65431595 165.61968994]
[-27.62236023 158.19215393]
[-14.59040546 150.76463318]
[-1.55844939 143.33711243]
[2.70447922 137.28143311]
[11.75390911 135.89643860]
[24.90815735 128.68771362]
[38.06240845 121.47898102]
[51.21665573 114.27025604]
[64.37090302 107.06153107]
[77.52515411 99.85280609]
[82.43368530 96.17446899]
[87.70359039 94.47468567]
[92.74210358 94.70607758]
[88.05919647 80.45580292]
[83.25738525 66.24514771]
[78.33701324 52.07511139]
[73.41664124 37.90507507]
[68.49626923 23.73503876]
[63.45767212 9.60660744]
[58.30120850 -4.47923183]
[53.14474106 -18.56507111]
[47.98827744 -32.65090942]
[35.97851181 -42.95023727]
[38.86909103 -57.56166458]
[33.71262360 -71.64750671]
[28.55615997 -85.73334503]
[23.39969444 -99.81918335]
[18.24323082 -113.90502167]
[13.08676624 -127.99085999]
[7.93030119 -142.07670593]
[2.30603814 -155.98237610]
[-3.77974176 -169.69233704]
[-9.86552143 -183.40231323]
[-15.95130157 -197.11228943]
[-30.42581749 -202.86781311]
[-36.40235901 -216.85836792]
[-30.82614136 -230.62213135]
[-36.91192245 -244.33210754]
[-42.99769974 -258.04208374]
[-49.08348083 -271.75204468]
[-55.16926193 -285.46200562]
[-61.25503922 -299.17199707]
[-74.82279205 -308.38330078]
[-73.35974884 -324.71704102]
[-58.37096024 -331.37048340]
[-45.27561188 -321.49911499]
[-47.54507065 -305.25778198]
[-41.45928955 -291.54779053]
[-35.37350845 -277.83782959]
[-29.28773117 -264.12786865]
[-23.20195007 -250.41789246]
[-17.11617088 -236.70791626]
[-3.16779828 -231.61100769]
[3.19935179 -217.79383850]
[-2.24133158 -203.19805908]
[3.84444833 -189.48809814]
[9.93022823 -175.77812195]
[16.01600838 -162.06814575]
[18.60225868 -160.93865967]
[20.89219475 -158.70645142]
[22.45973587 -155.48091125]
[22.92691994 -151.52487183]
[22.01613998 -147.23316956]
[27.17260551 -133.14732361]
[32.32907104 -119.06148529]
[37.48553467 -104.97564697]
[42.64199829 -90.88980865]
[47.79846573 -76.80397034]
[52.95492935 -62.71813202]
[64.59587097 -53.42631912]
[62.07411575 -37.80737686]
[67.23058319 -23.72153664]
[72.38704681 -9.63569641]
[77.54351044 4.45014286]
[82.80578613 9.66092682]
[82.66630554 18.81466484]
[87.58667755 32.98470306]
[92.50704956 47.15473938]
[97.42742157 61.32477570]
[102.60189056 66.62276459]
[102.30947113 75.77289581]
[106.99237823 90.02317047]
[115.89007568 102.09922028]
[128.11311340 110.79388428]
[146.47169495 112.09992981]
[153.15936279 128.31550598]
[165.52598572 136.80471802]
[177.89260864 145.29391479]
[201.74028015 144.86297607]
[211.29969788 165.92526245]
[224.45393372 173.13400269]
[237.60818481 180.34272766]
[250.76243591 187.55145264]
[263.91668701 194.76017761]
[273.30194092 188.11877441]
[284.43978882 185.48059082]
[295.70535278 187.19100952]
[305.46978760 192.96386719]
[312.33587646 201.92846680]
[315.33782959 212.76071167]
[314.07714844 223.87861633]
[326.85363770 231.73745728]
[339.63012695 239.59629822]
[352.40661621 247.45513916]
[365.18310547 255.31396484]
[377.95959473 263.17282104]
[390.73608398 271.03164673]
[403.51257324 278.89050293]
[416.28906250 286.74932861]
[432.09732056 287.38919067]
[438.88421631 300.64767456]
[445.50350952 301.21578979]
[450.13562012 304.55133057]
[451.95013428 308.98864746]
[464.45687866 317.27001953]
[476.96365356 325.55139160]
[489.47039795 333.83276367]
[501.97714233 342.11413574]
[517.41284180 338.72094727]
[530.68176270 347.30654907]
[533.91156006 362.77728271]
[525.18615723 375.95465088]
[509.68212891 379.02072144]
[496.59774780 370.15646362]
[493.69577026 354.62088013]
[481.18902588 346.33950806]
[468.68228149 338.05813599]
[456.17550659 329.77676392]
[443.66876221 321.49539185]
[431.02539062 313.42413330]
[416.13098145 313.34640503]
[408.43020630 299.52581787]
[395.65371704 291.66699219]
[382.87722778 283.80813599]
[370.10073853 275.94931030]
[357.32424927 268.09045410]
[344.54776001 260.23162842]
[331.77127075 252.37278748]
[318.99481201 244.51394653]
[306.21832275 236.65510559]
[289.40576172 244.77223206]
[270.94625854 241.11015320]
[258.30603027 226.96630859]
[256.70794678 207.91442871]
[243.55371094 200.70570374]
[230.39945984 193.49696350]
[217.24520874 186.28823853]
[204.09095764 179.07951355]
[198.56848145 182.59118652]
[192.17846680 184.22697449]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 125]
[6 124]
[7 123]
[10 121]
[11 120]
[17 47]
[18 46]
[19 45]
[20 44]
[21 43]
[22 42]
[23 40]
[24 39]
[25 38]
[26 37]
[27 36]
[28 35]
[50 119]
[51 118]
[52 116]
[53 115]
[54 114]
[55 113]
[56 111]
[57 110]
[58 109]
[59 108]
[61 106]
[62 105]
[63 104]
[64 103]
[65 102]
[66 101]
[67 100]
[68 95]
[69 94]
[70 93]
[71 92]
[74 89]
[75 88]
[76 87]
[77 86]
[78 85]
[79 84]
[127 185]
[128 184]
[129 183]
[130 182]
[131 181]
[138 177]
[139 176]
[140 175]
[141 174]
[142 173]
[143 172]
[144 171]
[145 170]
[146 169]
[148 167]
[151 166]
[152 165]
[153 164]
[154 163]
[155 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
