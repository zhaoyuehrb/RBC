%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:58:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCGCCCGGGUAGCCAAGAGGGAGGAGCGCGGGGAGCGCCGACAGCCGCCCGCCCGCCCGCCCCCGCGACGCCCGCGCGCAACAGUUCCCCCAAAGUUGCAGCCCGGGAGGCGAGCGCGCACGGGCGGCCGAGGGGCGGGCGGUUGGCGGGGACGCGGCCUCGCGGCCCAGAGCGGAGAGUCCCGGCGGGCGGCGGCGGC\
) } def
/len { sequence length } bind def

/coor [
[-35.72018814 301.50970459]
[-44.27067566 313.83404541]
[-45.78007889 329.58306885]
[-59.39217377 335.62957764]
[-61.71541595 344.47128296]
[-68.17269897 348.07766724]
[-76.91381836 360.26754761]
[-85.65493011 372.45742798]
[-94.39604950 384.64727783]
[-96.15019226 400.37094116]
[-109.85467529 406.20501709]
[-118.59579468 418.39489746]
[-117.27323914 431.22982788]
[-124.81063843 441.20416260]
[-136.72947693 443.29650879]
[-145.65910339 455.34896851]
[-140.87370300 470.10971069]
[-145.71037292 484.85372925]
[-158.30932617 493.91165161]
[-173.82600403 493.80053711]
[-186.29393005 484.56307983]
[-190.91893005 469.75128174]
[-185.92259216 455.06060791]
[-173.22612000 446.13989258]
[-157.71156311 446.41934204]
[-148.78193665 434.36688232]
[-147.73077393 416.85247803]
[-130.78565979 409.65377808]
[-122.04454803 397.46389771]
[-120.91561890 382.61215210]
[-106.58591461 375.90615845]
[-97.84480286 363.71630859]
[-89.10368347 351.52642822]
[-80.36257172 339.33657837]
[-71.71650696 327.07910156]
[-70.81868744 312.21157837]
[-56.59500885 305.28353882]
[-48.04452515 292.95922852]
[-39.59013367 280.56875610]
[-31.23235130 268.11294556]
[-22.87456703 255.65711975]
[-14.51678276 243.20130920]
[-13.39953423 235.89006042]
[-5.93090820 230.61814880]
[-5.03309107 215.75062561]
[9.19059086 208.82261658]
[17.74107552 196.49827576]
[26.29155922 184.17395020]
[34.84204102 171.84960938]
[43.39252472 159.52526855]
[51.94300842 147.20094299]
[60.49349213 134.87660217]
[69.04397583 122.55226898]
[77.59445953 110.22793579]
[81.73899078 95.81187439]
[81.03938293 80.82819366]
[80.33977509 65.84452057]
[79.64016724 50.86084366]
[78.94056702 35.87716675]
[78.24095917 20.89349174]
[77.54135132 5.90981531]
[76.84174347 -9.07386112]
[76.14214325 -24.05753708]
[75.44253540 -39.04121399]
[74.74292755 -54.02489090]
[73.92682648 -69.00267029]
[72.99428558 -83.97365570]
[69.33514404 -92.35124969]
[72.16548920 -99.18437958]
[63.79296875 -112.60865784]
[70.92824554 -125.68295288]
[70.22863770 -140.66662598]
[69.52902985 -155.65029907]
[68.82942200 -170.63398743]
[68.12982178 -185.61766052]
[67.43021393 -200.60133362]
[59.05768585 -214.02561951]
[66.19296265 -227.09991455]
[65.49335480 -242.08358765]
[64.79375458 -257.06726074]
[64.09414673 -272.05093384]
[61.61099243 -275.63293457]
[60.51195145 -279.43646240]
[60.69615555 -282.99783325]
[61.92210770 -285.93408203]
[63.84635925 -287.98199463]
[64.07963562 -302.98019409]
[64.31291199 -317.97839355]
[64.54618835 -332.97656250]
[64.66283417 -347.97610474]
[64.66283417 -362.97610474]
[64.54618835 -377.97564697]
[64.31291199 -392.97384644]
[51.78696823 -401.94082642]
[46.99884796 -416.39514160]
[51.58581543 -430.72775269]
[63.58916473 -439.50601196]
[63.35588837 -454.50418091]
[54.47669220 -468.29156494]
[62.21691513 -482.74914551]
[78.61408234 -483.00418091]
[86.80018616 -468.79431152]
[78.35407257 -454.73745728]
[78.58734894 -439.73928833]
[90.85790253 -431.33859253]
[95.88838959 -417.15557861]
[91.55210876 -402.55932617]
[79.31109619 -393.20712280]
[79.54437256 -378.20892334]
[82.79406738 -371.56497192]
[79.66283417 -362.97610474]
[79.66283417 -347.97610474]
[82.80879974 -341.28244019]
[79.54437256 -332.74328613]
[79.31109619 -317.74511719]
[79.07781982 -302.74691772]
[78.84454346 -287.74871826]
[79.07781982 -272.75054932]
[79.77742767 -257.76687622]
[80.47703552 -242.78318787]
[81.17663574 -227.79951477]
[89.49912262 -215.44696045]
[82.41388702 -201.30093384]
[83.11349487 -186.31726074]
[83.81310272 -171.33358765]
[84.51270294 -156.34991455]
[85.21231079 -141.36624146]
[85.91191864 -126.38256073]
[94.23440552 -114.03000641]
[87.14916992 -99.88398743]
[87.96527100 -84.90620422]
[88.89781189 -69.93521881]
[92.45384216 -63.45006561]
[89.72660828 -54.72449493]
[90.42620850 -39.74081802]
[91.12581635 -24.75714302]
[91.82542419 -9.77346706]
[92.52503204 5.21020937]
[93.22463226 20.19388580]
[93.92424011 35.17756271]
[94.62384796 50.16123962]
[95.32345581 65.14491272]
[96.02305603 80.12859344]
[96.72266388 95.11226654]
[93.64995575 78.22014618]
[100.91935730 60.52215958]
[118.25431824 46.75160980]
[143.48809814 41.25250244]
[158.48083496 41.71900177]
[173.47358704 42.18549728]
[187.66009521 33.95901489]
[201.74090576 42.36512375]
[201.23089600 58.75633621]
[186.65470886 66.27078247]
[173.00709534 57.17824173]
[158.01434326 56.71174622]
[143.02160645 56.24524689]
[140.00949097 70.93971252]
[153.97665405 76.40948486]
[167.94381714 81.87925720]
[181.91098022 87.34902954]
[198.03527832 84.35920715]
[208.47949219 97.00239563]
[202.49952698 112.27236938]
[186.24703979 114.46067810]
[176.44120789 101.31619263]
[162.47404480 95.84641266]
[148.50688171 90.37664032]
[134.53971863 84.90686798]
[130.07490540 90.93309784]
[142.12736511 99.86273193]
[148.10029602 113.62223816]
[133.19772339 111.91518402]
[121.14527130 102.98554993]
[116.68045807 109.01177979]
[125.98059845 120.78069305]
[135.28074646 132.54960632]
[151.00483704 134.13973999]
[160.93418884 146.43539429]
[159.17791748 162.14179993]
[146.77795410 171.94061279]
[131.09100342 170.01837158]
[121.42384338 157.51550293]
[123.51182556 141.84974670]
[114.21168518 130.08084106]
[104.91153717 118.31192017]
[89.91879272 118.77841949]
[81.36830902 131.10275269]
[72.81782532 143.42709351]
[64.26734161 155.75141907]
[55.71686172 168.07575989]
[47.16637802 180.40010071]
[38.61589432 192.72442627]
[30.06540871 205.04876709]
[21.51492500 217.37309265]
[20.00551987 233.12213135]
[6.39342642 239.16864014]
[-2.06096315 251.55908203]
[-10.41874695 264.01492310]
[-18.77653122 276.47073364]
[-27.13431549 288.92654419]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 38]
[2 37]
[4 35]
[6 34]
[7 33]
[8 32]
[9 31]
[11 29]
[12 28]
[15 26]
[16 25]
[39 201]
[40 200]
[41 199]
[42 198]
[44 197]
[46 195]
[47 194]
[48 193]
[49 192]
[50 191]
[51 190]
[52 189]
[53 188]
[54 187]
[55 144]
[56 143]
[57 142]
[58 141]
[59 140]
[60 139]
[61 138]
[62 137]
[63 136]
[64 135]
[65 134]
[66 132]
[67 131]
[69 130]
[71 128]
[72 127]
[73 126]
[74 125]
[75 124]
[76 123]
[78 121]
[79 120]
[80 119]
[81 118]
[86 117]
[87 116]
[88 115]
[89 114]
[90 112]
[91 111]
[92 109]
[93 108]
[97 104]
[98 103]
[148 157]
[149 156]
[150 155]
[158 169]
[159 168]
[160 167]
[161 166]
[175 186]
[176 185]
[177 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
