%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:23:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCGCCUGUCCCUCUGGGCUGCUCGGGCGCCACCACUACUGUCCCCAUCCCGCCCCGCCAGCUGGGCCAAAGGGUGACUUGACUCACGACGCUGCCACCAGCCCACGGCUUGCCCGAGGCGUAUAAAGGCUGCCAGGGCCGCAGGCUGCCAAGCCCUGCCCUGCCCAAGGCGCAUAGAGC\
) } def
/len { sequence length } bind def

/coor [
[99.00367737 375.48303223]
[84.13044739 381.49691772]
[70.22663116 373.49295044]
[67.95805359 357.61108398]
[79.06496429 346.03457642]
[80.09983063 331.07031250]
[81.00550842 316.09765625]
[81.78192902 301.11776733]
[82.55834961 286.13787842]
[83.33477020 271.15798950]
[83.98187256 256.17196655]
[84.37021637 241.17698669]
[84.62912750 226.17921448]
[84.88803864 211.18145752]
[81.85191345 204.42178345]
[85.28308105 195.92765808]
[85.80081940 180.93658447]
[86.31856537 165.94552612]
[86.83630371 150.95446777]
[87.35404968 135.96340942]
[76.36565399 120.90071106]
[75.59925079 105.34182739]
[82.37781525 94.68267822]
[91.76811218 91.49651337]
[82.21473694 79.93222046]
[72.66135406 68.36791992]
[63.10797882 56.80362320]
[53.55460358 45.23932266]
[44.00122452 33.67502594]
[34.24966431 22.27734947]
[24.30282402 11.04968739]
[14.35598373 -0.17797346]
[3.26782775 5.54485369]
[-9.14272213 8.08053207]
[-21.96414375 7.13836718]
[-34.22623825 2.68703198]
[-44.97352982 -5.03550529]
[-53.33958435 -15.53270245]
[-58.61648560 -28.08053970]
[-60.31390381 -41.77711868]
[-58.20289230 -55.60738754]
[-52.34062576 -68.51837158]
[-65.37394714 -75.94350433]
[-78.40726471 -83.36862946]
[-91.50418091 -90.68099976]
[-104.66371918 -97.88006592]
[-117.82326508 -105.07912445]
[-129.39253235 -97.19184113]
[-143.16654968 -95.07443237]
[-156.44381714 -99.08441162]
[-166.64514160 -108.38316345]
[-171.81457520 -121.11056519]
[-170.99443054 -134.75689697]
[-184.02774048 -142.18202209]
[-197.06106567 -149.60716248]
[-210.09437561 -157.03228760]
[-224.17736816 -150.51699829]
[-239.39378357 -153.55682373]
[-249.89259338 -164.98287964]
[-251.63679504 -180.40161133]
[-243.95570374 -193.88421631]
[-229.80285645 -200.24633789]
[-214.62031555 -197.04162598]
[-204.24607849 -185.50236511]
[-202.66925049 -170.06561279]
[-189.63592529 -162.64048767]
[-176.60261536 -155.21534729]
[-163.56929016 -147.79022217]
[-149.83798218 -156.28602600]
[-133.60258484 -156.70768738]
[-119.28433228 -148.84580994]
[-110.83000183 -134.75967407]
[-110.62419891 -118.23867035]
[-97.46466064 -111.03960419]
[-84.30512238 -103.84054565]
[-76.90878296 -103.38751984]
[-70.98213196 -96.40195465]
[-57.94881439 -88.97682190]
[-44.91549301 -81.55168915]
[-38.04993439 -84.57064056]
[-45.92794800 -97.33531189]
[-53.80596542 -110.09999084]
[-66.68728638 -117.78579712]
[-71.16383362 -132.10223389]
[-64.95545197 -145.75712585]
[-51.22442245 -151.79524231]
[-36.96474838 -147.14103699]
[-29.43969917 -134.16514587]
[-32.48255920 -119.47640991]
[-28.40068626 -105.04248047]
[-24.31881332 -90.60855103]
[-17.45325279 -93.62750244]
[-14.11543941 -108.25142670]
[-10.77762508 -122.87534332]
[-7.43981123 -137.49926758]
[-12.78795910 -153.00181580]
[-1.83357334 -165.20565796]
[14.15441322 -161.55650330]
[18.72893143 -145.80830383]
[7.18410730 -134.16145325]
[3.84629321 -119.53752899]
[0.50847930 -104.91361237]
[-2.82933474 -90.28968811]
[17.12020493 -81.73819733]
[31.36646843 -66.14221191]
[37.72018814 -46.60815048]
[35.50194931 -26.77213860]
[25.58364487 -10.12481308]
[35.53048706 1.10284793]
[45.47732544 12.33050919]
[50.13024521 13.50742435]
[54.08355713 17.63542747]
[55.56552124 24.12164879]
[65.11890411 35.68594742]
[74.67227936 47.25024414]
[84.22565460 58.81454086]
[93.77902985 70.37883759]
[103.33241272 81.94313812]
[117.76395416 86.03343201]
[131.96443176 81.20162201]
[146.16491699 76.36981964]
[160.32316589 71.41563416]
[174.43812561 66.33943176]
[180.94461060 51.93661499]
[195.75903320 46.43130493]
[210.09225464 53.08970261]
[215.44064331 67.96150208]
[208.63107300 82.22352600]
[193.70356750 87.41436768]
[179.51432800 80.45439911]
[165.39936829 85.53059387]
[160.15559387 90.76642609]
[150.99671936 90.57029724]
[136.79624939 95.40210724]
[122.59576416 100.23390961]
[121.69008636 115.20654297]
[135.20462036 121.71479797]
[148.71914673 128.22305298]
[162.23368835 134.73130798]
[175.74821472 141.23956299]
[186.01885986 135.19094849]
[197.81378174 134.86682129]
[208.18785095 140.23202515]
[214.60681152 149.84526062]
[215.56611633 161.24423218]
[228.84796143 168.21507263]
[242.12979126 175.18592834]
[255.41163635 182.15676880]
[271.76678467 180.95616150]
[280.75906372 194.67004395]
[273.13800049 209.19078064]
[256.74346924 209.58065796]
[248.44079590 195.43861389]
[235.15895081 188.46775818]
[221.87710571 181.49691772]
[208.59527588 174.52606201]
[191.50126648 181.02412415]
[174.78811646 172.84739685]
[169.23995972 154.75410461]
[155.72543335 148.24584961]
[142.21089172 141.73759460]
[128.69636536 135.22933960]
[115.18183136 128.72108459]
[102.34510803 136.48114014]
[101.82736969 151.47221375]
[101.30962372 166.46327209]
[100.79188538 181.45433044]
[100.27413940 196.44538879]
[99.88580322 211.44036865]
[99.62689209 226.43812561]
[99.36798096 241.43589783]
[102.35487366 250.09625244]
[98.97293854 256.68969727]
[101.80990601 265.40032959]
[98.31465912 271.93441772]
[97.53824615 286.91430664]
[96.76182556 301.89419556]
[95.98540497 316.87408447]
[98.67159271 325.63238525]
[95.06409454 332.10516357]
[94.02922058 347.06942749]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 181]
[6 180]
[7 178]
[8 177]
[9 176]
[10 175]
[11 173]
[12 171]
[13 170]
[14 169]
[16 168]
[17 167]
[18 166]
[19 165]
[20 164]
[24 118]
[25 117]
[26 116]
[27 115]
[28 114]
[29 113]
[30 110]
[31 109]
[32 108]
[42 79]
[43 78]
[44 77]
[45 75]
[46 74]
[47 73]
[53 68]
[54 67]
[55 66]
[56 65]
[92 103]
[93 102]
[94 101]
[95 100]
[119 135]
[120 134]
[121 133]
[122 131]
[123 130]
[136 163]
[137 162]
[138 161]
[139 160]
[140 159]
[145 156]
[146 155]
[147 154]
[148 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
