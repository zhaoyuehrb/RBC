%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:34:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACAGUUUGCCCUCAAGUAUUUAUUCAUGCUAAUAUUUACUUUGUAAAAUGUGCUUCUUACAGGAAUAUAAAUAGUUUCUGGAAAGGACACUGACAACUUCAAAGCAAA\
) } def
/len { sequence length } bind def

/coor [
[118.84683990 219.62425232]
[106.24509430 229.16217041]
[90.60166931 226.91297913]
[81.19753265 214.21110535]
[83.61198425 198.59233093]
[96.41257477 189.32301331]
[98.54729462 174.47569275]
[100.68202209 159.62837219]
[102.81674194 144.78105164]
[104.95146179 129.93373108]
[100.20387268 124.12766266]
[88.59159851 133.62266541]
[79.09677124 122.01025391]
[90.70868683 112.51554108]
[85.96109009 106.70948029]
[70.98554993 105.85314941]
[56.01001740 104.99681091]
[41.03448105 104.14048004]
[26.05894470 103.28414917]
[14.32201958 113.52536011]
[-0.85310572 112.44358063]
[-10.54420185 101.19110870]
[-25.51973915 100.33477020]
[-40.49527359 99.47843933]
[-55.47080994 98.62210846]
[-67.09758759 109.32695007]
[-82.88475800 108.59156799]
[-93.46607971 96.85226440]
[-92.56382751 81.07374573]
[-80.71330261 70.61714172]
[-64.94521332 71.68615723]
[-54.61447906 83.64657593]
[-39.63894272 84.50290680]
[-24.66340637 85.35923767]
[-9.68787003 86.21556854]
[1.22274303 76.14114380]
[16.42226601 76.79624939]
[26.91527557 88.30860901]
[41.89081192 89.16494751]
[56.86634827 90.02127838]
[71.84188843 90.87760925]
[86.81742096 91.73394012]
[100.94509125 86.69319916]
[111.99620819 76.55057526]
[123.04732513 66.40795135]
[120.79019928 55.71456146]
[123.23778534 45.14688110]
[129.86584473 36.66325378]
[139.38212585 31.80591965]
[149.97778320 31.42085075]
[159.67117310 35.51118469]
[171.54971313 26.35146523]
[183.42823792 17.19174767]
[188.40847778 9.35225391]
[195.77929688 7.94586086]
[207.91455078 -0.87091786]
[220.04981995 -9.68769646]
[232.18507385 -18.50447464]
[244.32032776 -27.32125473]
[251.33203125 -44.27302170]
[268.76733398 -45.58941269]
[280.64587402 -54.74913025]
[292.52441406 -63.90885162]
[304.40292358 -73.06856537]
[316.28146362 -82.22828674]
[328.16000366 -91.38800812]
[340.03854370 -100.54772186]
[340.50262451 -116.17842102]
[350.94390869 -127.81945801]
[366.43231201 -129.97428894]
[379.65469360 -121.62548065]
[384.36785889 -106.71508026]
[378.34637451 -92.28330994]
[364.43341064 -85.14443207]
[349.19824219 -88.66918945]
[337.31973267 -79.50946808]
[325.44119263 -70.34975433]
[313.56265259 -61.19003296]
[301.68411255 -52.03031540]
[289.80557251 -42.87059784]
[277.92706299 -33.71088028]
[276.02572632 -21.67012024]
[266.07415771 -13.95362377]
[253.13710022 -15.18599892]
[241.00184631 -6.36922073]
[228.86659241 2.44755816]
[216.73133850 11.26433659]
[204.59608459 20.08111572]
[192.58796692 29.07028008]
[180.70942688 38.22999954]
[168.83090210 47.38971710]
[167.93092346 66.71963501]
[153.03092957 79.53000641]
[133.18994141 77.45906830]
[122.13883209 87.60169220]
[111.08771515 97.74431610]
[125.64861298 94.14151764]
[140.61763000 93.17784882]
[153.89042664 100.16589355]
[161.56735229 113.05250549]
[161.39286804 128.05148315]
[153.41822815 140.75602722]
[139.98645020 147.43341064]
[125.04357910 146.12164307]
[119.79878235 132.06845093]
[117.66406250 146.91577148]
[115.52934265 161.76309204]
[113.39461517 176.61041260]
[111.25989532 191.45773315]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 109]
[7 108]
[8 107]
[9 106]
[10 105]
[15 42]
[16 41]
[17 40]
[18 39]
[19 38]
[22 35]
[23 34]
[24 33]
[25 32]
[43 96]
[44 95]
[45 94]
[51 91]
[52 90]
[53 89]
[55 88]
[56 87]
[57 86]
[58 85]
[59 84]
[61 81]
[62 80]
[63 79]
[64 78]
[65 77]
[66 76]
[67 75]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
