%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:05:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGGUCGGGUCCGGGCGCCCGCGCAGAAUCAGCUGUCUGAGCUGCCCAGGCGGCGGGGGAGCAGCGAGCGGGCUUCAGCGAGCCGCAGGAGGCACAGGCCUGUCCUGGGUCCCCGCAGGUCUGCGCGUCUGUUGUUCCCAGCGCUCUGAGAGGCCUGAAAAGGAAGAGCAACCUGUCCAGAAUCCCCGCAGGAAAGGAAAAGGAGGGGAAAUCUCGAC\
) } def
/len { sequence length } bind def

/coor [
[264.03607178 301.61065674]
[252.54519653 295.03799438]
[244.40135193 284.97680664]
[240.54658508 272.92807007]
[241.30293274 260.59460449]
[246.35588074 249.64094543]
[235.74928284 239.03434753]
[225.14268494 228.42774963]
[214.53608704 217.82113647]
[203.92947388 207.21453857]
[193.32287598 196.60794067]
[182.71627808 186.00134277]
[172.03421021 175.47073364]
[161.05580139 165.24946594]
[149.86097717 155.26568604]
[138.66615295 145.28189087]
[127.47132874 135.29811096]
[116.27650452 125.31432343]
[105.08168793 115.33054352]
[90.20539856 113.40805054]
[76.84029388 120.21790314]
[63.47520065 127.02776337]
[50.11010361 133.83761597]
[36.79396820 140.74272156]
[23.52747345 147.74273682]
[24.00483131 162.95896912]
[17.85335732 176.81704712]
[6.34211493 186.59004211]
[-8.21104336 190.38037109]
[-22.90607834 187.48808289]
[-34.83865356 178.53938293]
[-48.10514832 185.53938293]
[-61.37163925 192.53939819]
[-74.63813782 199.53941345]
[-87.90462494 206.53941345]
[-93.99845123 221.38006592]
[-109.44046783 225.73020935]
[-122.38488770 216.25277710]
[-122.90184784 200.21804810]
[-110.59479523 189.92649841]
[-94.90464020 193.27291870]
[-81.63814545 186.27291870]
[-68.37165070 179.27290344]
[-55.10515594 172.27290344]
[-41.83866119 165.27288818]
[-42.49029922 150.37185669]
[-36.58329391 136.60897827]
[-25.24005127 126.73517609]
[-10.67527390 122.74927521]
[4.23633814 125.49350739]
[16.52746201 134.47624207]
[29.79395676 127.47623444]
[34.23989487 121.57866669]
[43.30024338 120.47251892]
[56.66534042 113.66266632]
[70.03044128 106.85280609]
[83.39553833 100.04294586]
[89.13578796 86.18475342]
[84.50053406 71.91890717]
[79.86528015 57.65306091]
[75.23002625 43.38721466]
[70.59477234 29.12136459]
[65.95951843 14.85551739]
[61.32426071 0.58966970]
[56.68900681 -13.67617798]
[52.05374908 -27.94202614]
[42.60506058 -20.38349533]
[28.73888588 -17.89538956]
[12.89140987 -22.27743912]
[1.01287627 -31.43715668]
[-10.86565781 -40.59687424]
[-22.74419022 -49.75659180]
[-31.44470215 -52.51604462]
[-34.72570801 -59.13289642]
[-46.47223282 -68.46130371]
[-58.21876144 -77.78970337]
[-74.51041412 -79.66426849]
[-80.78368378 -94.81610870]
[-70.58515930 -107.65830994]
[-54.40621185 -104.97991943]
[-48.89035797 -89.53623199]
[-37.14382935 -80.20782471]
[-25.39730453 -70.87942505]
[-13.58447266 -61.63512802]
[-1.70593929 -52.47541046]
[10.17259407 -43.31568909]
[22.05112839 -34.15597153]
[28.78161621 -37.46512985]
[48.97307968 -47.39260483]
[48.97307968 -62.39260483]
[48.97307968 -77.39260864]
[41.23577881 -91.19277954]
[48.97307968 -103.92005157]
[48.97307968 -118.92005157]
[41.23577881 -132.72021484]
[48.97307968 -145.44749451]
[48.97307968 -160.44749451]
[48.97307968 -175.44749451]
[48.97307968 -190.44749451]
[48.97307968 -205.44749451]
[48.97307968 -220.44749451]
[48.97307968 -235.44749451]
[48.97307968 -250.44749451]
[48.97307968 -265.44747925]
[46.36883163 -269.95602417]
[45.80610657 -274.55340576]
[46.97787857 -278.44860840]
[49.30811691 -281.08645630]
[49.95051956 -296.07269287]
[41.89107895 -310.35476685]
[50.46184158 -324.33596802]
[66.84593964 -323.63363647]
[74.18881989 -308.97027588]
[64.93675995 -295.43029785]
[64.29435730 -280.44406128]
[63.97307968 -265.44747925]
[63.97307968 -250.44749451]
[63.97307968 -235.44749451]
[63.97307968 -220.44749451]
[63.97307968 -205.44749451]
[63.97307968 -190.44749451]
[63.97307968 -175.44749451]
[63.97307968 -160.44749451]
[63.97307968 -145.44749451]
[71.71038055 -132.72021484]
[63.97307968 -118.92005157]
[63.97307968 -103.92005157]
[71.71038055 -91.19277954]
[63.97307968 -77.39260864]
[63.97307968 -62.39260483]
[63.97307968 -47.39260483]
[66.31959534 -32.57728195]
[70.95484924 -18.31143379]
[75.59011078 -4.04558516]
[80.22536469 10.22026253]
[84.86061859 24.48611069]
[89.49587250 38.75195694]
[94.13112640 53.01780701]
[98.76638031 67.28365326]
[103.40163422 81.54949951]
[114.56356049 90.86368561]
[115.06546783 104.13571930]
[126.26029205 114.11950684]
[137.45510864 124.10328674]
[148.64993286 134.08706665]
[159.84475708 144.07086182]
[171.03958130 154.05464172]
[176.13774109 155.11184692]
[179.94340515 157.75183105]
[182.07057190 161.21894836]
[182.48828125 164.71376038]
[190.81752014 168.44700623]
[193.32287598 175.39472961]
[203.92947388 186.00134277]
[214.53608704 196.60794067]
[225.14268494 207.21453857]
[235.74928284 217.82113647]
[246.35588074 228.42774963]
[256.96249390 239.03434753]
[278.34719849 232.65087891]
[300.09350586 241.72157288]
[311.78585815 263.60104370]
[326.71096802 265.09793091]
[341.63607788 266.59484863]
[351.86312866 254.92491150]
[367.00381470 251.52790833]
[381.23620605 257.71002197]
[389.08767700 271.09411621]
[387.53918457 286.53372192]
[377.18612671 298.09201050]
[362.00949097 301.32458496]
[347.84500122 294.98843384]
[340.13919067 281.51995850]
[325.21408081 280.02307129]
[310.28894043 278.52615356]
[302.91296387 291.58734131]
[311.90213013 303.59545898]
[320.89126587 315.60357666]
[335.35543823 322.01440430]
[336.78857422 336.83990479]
[345.77774048 348.84802246]
[354.76690674 360.85614014]
[371.85977173 367.71389771]
[373.25448608 385.21020508]
[382.41421509 397.08874512]
[391.57391357 408.96725464]
[400.73364258 420.84579468]
[409.89337158 432.72433472]
[424.23010254 427.85229492]
[439.37197876 427.90188599]
[453.67651367 432.86767578]
[465.59204102 442.21105957]
[473.82608032 454.91851807]
[477.48544312 469.61163330]
[476.17321777 484.69662476]
[470.03170776 498.53713989]
[459.72711182 509.63192749]
[446.37722778 516.77746582]
[431.43011475 519.19873047]
[416.50711060 516.63293457]
[403.22698975 509.35855103]
[393.03027344 498.16455078]
[387.02297974 484.26522827]
[385.85681152 469.16824341]
[389.65820312 454.51123047]
[398.01483154 441.88406372]
[388.85510254 430.00552368]
[379.69540405 418.12698364]
[370.53567505 406.24844360]
[361.37594604 394.36990356]
[349.42733765 392.51089478]
[341.69851685 382.69546509]
[342.75878906 369.84530640]
[333.76962280 357.83718872]
[324.78045654 345.82907104]
[310.95925903 340.27716064]
[308.88314819 324.59274292]
[299.89398193 312.58462524]
[290.90484619 300.57650757]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 159]
[7 158]
[8 157]
[9 156]
[10 155]
[11 154]
[12 153]
[13 151]
[14 147]
[15 146]
[16 145]
[17 144]
[18 143]
[19 142]
[20 57]
[21 56]
[22 55]
[23 54]
[24 52]
[25 51]
[31 45]
[32 44]
[33 43]
[34 42]
[35 41]
[58 140]
[59 139]
[60 138]
[61 137]
[62 136]
[63 135]
[64 134]
[65 133]
[66 132]
[69 87]
[70 86]
[71 85]
[72 84]
[74 83]
[75 82]
[76 81]
[89 131]
[90 130]
[91 129]
[93 127]
[94 126]
[96 124]
[97 123]
[98 122]
[99 121]
[100 120]
[101 119]
[102 118]
[103 117]
[104 116]
[108 115]
[109 114]
[162 175]
[163 174]
[164 173]
[176 219]
[177 218]
[178 217]
[180 215]
[181 214]
[182 213]
[184 210]
[185 209]
[186 208]
[187 207]
[188 206]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
