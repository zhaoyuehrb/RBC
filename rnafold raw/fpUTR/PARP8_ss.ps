%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:22:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGCAGUAUCUCAUUUCUGAACACCUGGAUUGUAGCUUUCCCUUGACUGUCAAAGGAGGUGGUUUUAAAAAUCAAGCCAAACAGGUUUCCAUCUUUUAGGAAGACCCUGGAACGUGCCAGUUGAUUCUGACCAUUUCUCAUGAACAGAAACACCUAGGAAGGGAGAACUGGGAUUUAUUUA\
) } def
/len { sequence length } bind def

/coor [
[-38.32202148 585.29534912]
[-57.80194473 586.90112305]
[-61.62201309 601.40655518]
[-65.44207764 615.91192627]
[-57.26575089 629.43688965]
[-61.12884140 644.76171875]
[-74.73944092 652.79461670]
[-90.02262878 648.76971436]
[-97.91115570 635.07495117]
[-93.72489929 619.83520508]
[-79.94749451 612.09185791]
[-76.12742615 597.58648682]
[-72.30735779 583.08105469]
[-81.63291931 577.87921143]
[-89.66281128 570.82763672]
[-96.03585052 562.23883057]
[-100.46437073 552.49462891]
[-102.74724579 542.02899170]
[-102.77901459 531.30895996]
[-100.55474091 520.81359863]
[-96.17038727 511.01275635]
[-89.81870270 502.34585571]
[-81.78071594 495.20236206]
[-72.41334534 489.90414429]
[-62.13350677 486.69107056]
[-51.39959335 485.71011353]
[-40.69102097 487.00857544]
[-35.15957642 473.06570435]
[-29.62813377 459.12286377]
[-24.09668922 445.18002319]
[-18.56524658 431.23715210]
[-13.03380203 417.29431152]
[-15.53245831 402.61077881]
[-3.25146365 392.63641357]
[2.27998018 378.69357300]
[7.81142426 364.75073242]
[5.31276798 350.06719971]
[17.59376144 340.09283447]
[23.12520599 326.14999390]
[28.65665054 312.20712280]
[34.18809509 298.26428223]
[39.71953964 284.32144165]
[45.25098038 270.37857056]
[50.78242493 256.43572998]
[56.31386948 242.49287415]
[44.34517288 222.20639038]
[51.20862198 199.40983582]
[72.84364319 188.88160706]
[76.16352081 174.25361633]
[79.48339844 159.62561035]
[82.80328369 144.99761963]
[85.99747467 130.34165955]
[89.06575775 115.65882111]
[81.22055817 103.47690582]
[84.18441772 89.29375458]
[96.25140381 81.27289581]
[99.31968689 66.59006500]
[102.38796997 51.90723038]
[105.45624542 37.22439194]
[108.52452850 22.54155731]
[111.59281158 7.85872269]
[114.66109467 -6.82411242]
[117.72937012 -21.50694847]
[120.79765320 -36.18978119]
[123.86593628 -50.87261963]
[115.95223236 -58.09238434]
[111.79344940 -67.87653351]
[112.08239746 -78.42300415]
[116.69934082 -87.81954193]
[124.74590302 -94.39043427]
[134.71908569 -96.99523163]
[138.53915405 -111.50064850]
[142.35922241 -126.00606537]
[146.17929077 -140.51147461]
[149.99935913 -155.01689148]
[153.81942749 -169.52230835]
[157.26473999 -184.12127686]
[160.33302307 -198.80410767]
[163.27516174 -213.51274109]
[151.53854370 -225.67607117]
[149.37672424 -242.27232361]
[157.44418335 -256.74627686]
[172.39404297 -263.49942017]
[174.95648193 -278.27893066]
[177.51892090 -293.05844116]
[180.08137512 -307.83795166]
[182.38973999 -322.65927124]
[184.44332886 -337.51803589]
[186.49691772 -352.37680054]
[188.55050659 -367.23556519]
[190.60409546 -382.09432983]
[179.32449341 -392.75030518]
[176.49565125 -408.00735474]
[183.20529175 -421.99877930]
[196.87344360 -429.34463501]
[212.24441528 -427.22024536]
[223.40774536 -416.44250488]
[226.07092285 -401.15570068]
[219.20988464 -387.23785400]
[205.46286011 -380.04074097]
[203.40927124 -365.18197632]
[201.35568237 -350.32321167]
[199.30207825 -335.46444702]
[197.24848938 -320.60568237]
[199.38169861 -316.30740356]
[198.81993103 -310.62069702]
[194.86088562 -305.27551270]
[192.29843140 -290.49600220]
[189.73599243 -275.71649170]
[187.17353821 -260.93698120]
[197.33232117 -252.25317383]
[201.90441895 -239.57987976]
[199.59266663 -226.19692993]
[190.89643860 -215.62446594]
[178.00849915 -210.69696045]
[179.84570312 -203.51892090]
[175.01585388 -195.73582458]
[171.94757080 -181.05299377]
[173.58200073 -177.90226746]
[173.75680542 -173.79785156]
[172.03810120 -169.44129944]
[168.32484436 -165.70223999]
[164.50477600 -151.19682312]
[160.68470764 -136.69140625]
[156.86463928 -122.18599701]
[153.04457092 -107.68058014]
[149.22450256 -93.17516327]
[160.25700378 -77.14453888]
[155.91462708 -57.86306763]
[138.54876709 -47.80433655]
[135.48048401 -33.12150192]
[132.41220093 -18.43866730]
[129.34393311 -3.75583148]
[126.27564240 10.92700386]
[123.20736694 25.60983849]
[120.13908386 40.29267502]
[117.07080078 54.97550964]
[114.00252533 69.65834808]
[110.93424225 84.34117889]
[118.77944183 96.52309418]
[115.81558228 110.70624542]
[103.74859619 118.72710419]
[100.68031311 133.40994263]
[101.98921204 142.47584534]
[97.43128204 148.31748962]
[94.11140442 162.94549561]
[90.79151917 177.57348633]
[87.47164154 192.20149231]
[93.21992493 196.14962769]
[97.89354706 201.30064392]
[101.24808502 207.37260437]
[103.11096954 214.03578186]
[103.39038849 220.93054199]
[102.07975769 227.68670654]
[99.25762939 233.94354248]
[95.08303833 239.36889648]
[89.78656769 243.67689514]
[83.65759277 246.64303589]
[77.02851868 248.11576843]
[70.25672150 248.02432251]
[64.72528076 261.96716309]
[59.19383621 275.91003418]
[53.66239166 289.85287476]
[48.13094711 303.79571533]
[42.59950256 317.73858643]
[37.06805801 331.68142700]
[31.53661537 345.62429810]
[33.63962555 361.30508423]
[21.75427628 370.28216553]
[16.22283173 384.22500610]
[10.69138813 398.16787720]
[12.79439926 413.84869385]
[0.90905041 422.82574463]
[-4.62239361 436.76861572]
[-10.15383720 450.71145630]
[-15.68528175 464.65429688]
[-21.21672630 478.59716797]
[-26.74816895 492.54000854]
[-11.96365738 505.60440063]
[-3.25691175 523.27490234]
[-1.90987265 542.89715576]
[-8.10091591 561.53356934]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 13]
[3 12]
[4 11]
[27 178]
[28 177]
[29 176]
[30 175]
[31 174]
[32 173]
[34 171]
[35 170]
[36 169]
[38 167]
[39 166]
[40 165]
[41 164]
[42 163]
[43 162]
[44 161]
[45 160]
[48 148]
[49 147]
[50 146]
[51 145]
[52 143]
[53 142]
[56 139]
[57 138]
[58 137]
[59 136]
[60 135]
[61 134]
[62 133]
[63 132]
[64 131]
[65 130]
[71 127]
[72 126]
[73 125]
[74 124]
[75 123]
[76 122]
[77 118]
[78 117]
[79 115]
[83 110]
[84 109]
[85 108]
[86 107]
[87 104]
[88 103]
[89 102]
[90 101]
[91 100]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
