%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:58:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAGAGGCUCUGAGGCUGCCAGAGUGGUUGUGUCUGUUCCUCCGGUAAGGGGUGAUUCGCCGAGGGGCGCGGACCAGACAGACCUCGGGUCAGGCCCGGGAACCCCGAGAGGAGAGCCCAGCCCCUGGUGGAGGCGGCUUGGCGGAGAUUCGGAGCCGUCAGCAGCUCAGCCAGACGUCCAGGAUCCCACCCCUUGCAAAAGACCAGGCCGUGGAAGCC\
) } def
/len { sequence length } bind def

/coor [
[39.34678268 417.17001343]
[30.35761833 429.17813110]
[27.72268677 437.91714478]
[21.15336037 441.29229736]
[11.99364185 453.17083740]
[2.83392334 465.04937744]
[-6.32579470 476.92791748]
[-4.49679279 492.39700317]
[-13.95526409 504.31301880]
[-28.71394157 505.96136475]
[-31.01380157 521.61450195]
[-44.91286850 526.96850586]
[-54.07258606 538.84704590]
[-56.37244797 554.50018311]
[-70.27151489 559.85418701]
[-79.43123627 571.73272705]
[-81.73109436 587.38586426]
[-95.63015747 592.73986816]
[-104.78987885 604.61840820]
[-113.94960022 616.49694824]
[-123.10931396 628.37548828]
[-127.99333954 644.61071777]
[-144.94612122 644.41192627]
[-149.44808960 628.06658936]
[-134.98785400 619.21575928]
[-125.82813263 607.33721924]
[-116.66841125 595.45867920]
[-107.50869751 583.58013916]
[-105.86399841 568.77661133]
[-91.30976868 562.57299805]
[-82.15004730 550.69445801]
[-80.50534821 535.89093018]
[-65.95111847 529.68731689]
[-56.79140091 517.80877686]
[-55.14670563 503.00527954]
[-40.59247589 496.80166626]
[-42.75020981 482.10879517]
[-33.63016891 469.93179321]
[-18.20432854 467.76818848]
[-9.04461002 455.88964844]
[0.11510786 444.01113892]
[9.27482605 432.13259888]
[18.34949875 420.18896484]
[27.33866310 408.18084717]
[68.94316864 390.30398560]
[73.57842255 376.03811646]
[78.21367645 361.77227783]
[82.84893799 347.50643921]
[87.48419189 333.24057007]
[92.11944580 318.97473145]
[96.75469971 304.70889282]
[101.38995361 290.44302368]
[106.02520752 276.17718506]
[110.66046143 261.91134644]
[102.76307678 241.18699646]
[121.64613342 223.84194946]
[117.83286285 209.33474731]
[114.01958466 194.82754517]
[110.20631409 180.32034302]
[106.39303589 165.81314087]
[102.57976532 151.30593872]
[98.76648712 136.79873657]
[94.95320892 122.29153442]
[91.13993835 107.78433228]
[83.39397430 94.93909454]
[72.34285736 84.79647064]
[61.29174042 74.65384674]
[50.24062347 64.51122284]
[41.80816650 61.01734924]
[39.10543442 54.14399719]
[23.75993156 50.29353714]
[19.81970215 35.92955780]
[8.91454411 25.63016319]
[-1.99061525 15.33077049]
[-12.89577389 5.03137636]
[-28.24127960 1.18091524]
[-32.18150711 -13.18306255]
[-43.08666611 -23.48245621]
[-58.87536621 -22.78067398]
[-70.47933960 -33.51023102]
[-71.01415253 -49.30546570]
[-60.16251373 -60.79535294]
[-44.36250687 -61.16313934]
[-32.98799133 -50.19062805]
[-32.78727341 -34.38761520]
[-21.88211441 -24.08822250]
[-7.31661844 -20.97444153]
[-2.59638047 -5.87378263]
[8.30877876 4.42561102]
[19.21393776 14.72500515]
[30.11909676 25.02439880]
[44.68458939 28.13817787]
[49.40483093 43.23883820]
[60.38324738 53.46010590]
[71.43436432 63.60272980]
[82.48548126 73.74535370]
[93.53659821 83.88797760]
[107.13623810 77.55949402]
[106.49383545 62.57325363]
[105.85143280 47.58701324]
[94.49008179 36.93068314]
[94.05207825 21.72335625]
[104.28128052 10.95771313]
[95.96006012 -2.49843359]
[103.14519501 -15.54539204]
[102.50279236 -30.53162956]
[93.25072479 -44.07162094]
[100.59360504 -58.73498154]
[116.97770691 -59.43730164]
[125.54846954 -45.45610046]
[117.48902893 -31.17403221]
[118.13143158 -16.18779373]
[126.40670013 -3.80356312]
[119.26751709 10.31531143]
[130.38046265 20.16609955]
[131.24543762 35.35512543]
[120.83767700 46.94461441]
[121.48007202 61.93085098]
[122.12247467 76.91709137]
[129.41525269 78.66793060]
[151.29357910 83.92044830]
[158.66957092 70.85926056]
[166.04556274 57.79806519]
[173.32810974 44.68454361]
[180.51684570 31.51935959]
[179.58586121 15.14665985]
[193.44606018 6.38155079]
[207.83924866 14.24082565]
[207.95895386 30.63953590]
[193.68203735 38.70809555]
[186.49330139 51.87327957]
[186.04682922 59.24541473]
[179.10675049 65.17406464]
[171.73075867 78.23525238]
[164.35476685 91.29644012]
[145.29551697 105.21697235]
[124.53157806 109.33949280]
[105.64714050 103.97105408]
[109.46041107 118.47825623]
[113.27368927 132.98545837]
[117.08696747 147.49266052]
[120.90023804 161.99986267]
[124.71351624 176.50706482]
[128.52679443 191.01426697]
[132.34005737 205.52146912]
[136.15333557 220.02867126]
[147.83296204 229.44071960]
[162.81919861 230.08311462]
[177.80543518 230.72550964]
[192.79167175 231.36791992]
[207.77790833 232.01031494]
[222.76835632 232.54570007]
[237.76223755 232.97404480]
[252.75611877 233.40238953]
[258.73583984 230.60728455]
[264.38323975 231.16328430]
[268.17034912 234.06314087]
[283.14587402 234.91946411]
[298.12142944 235.77580261]
[313.09695435 236.63212585]
[329.35113525 227.97209167]
[343.63442993 238.17277527]
[358.62066650 238.81517029]
[370.09341431 227.94540405]
[385.88946533 228.45527649]
[396.63732910 240.04228210]
[395.96047974 255.83207703]
[384.26049805 266.45684814]
[368.47872925 265.61309814]
[357.97827148 253.80140686]
[342.99203491 253.15901184]
[333.87487793 261.10275269]
[321.38845825 260.69433594]
[312.24063110 251.60766602]
[297.26510620 250.75134277]
[282.28955078 249.89500427]
[267.31402588 249.03866577]
[252.32777405 248.39627075]
[237.33389282 247.96792603]
[222.34001160 247.53958130]
[215.56869507 250.48866272]
[207.13551331 246.99655151]
[192.14927673 246.35415649]
[177.16304016 245.71176147]
[162.17680359 245.06935120]
[147.19056702 244.42695618]
[139.99418640 261.34451294]
[124.92631531 266.54660034]
[120.29105377 280.81243896]
[115.65579987 295.07830811]
[111.02054596 309.34414673]
[106.38529205 323.60998535]
[101.75003815 337.87582397]
[97.11478424 352.14169312]
[92.47953033 366.40753174]
[87.84426880 380.67337036]
[83.20901489 394.93923950]
[95.29245758 386.05157471]
[110.21631622 387.56103516]
[120.27536774 398.68826294]
[120.27610779 413.68826294]
[110.21814728 424.81649780]
[95.29444122 426.32742310]
[83.20901489 417.43923950]
[87.84426880 431.70507812]
[92.47953033 445.97091675]
[106.06368256 454.50616455]
[107.71690369 470.46380615]
[96.17096710 481.60250854]
[80.28293610 479.37762451]
[72.24075317 465.49588013]
[78.21367645 450.60617065]
[73.57842255 436.34033203]
[68.94316864 422.07449341]
[61.54407120 420.84835815]
[59.09183502 435.64654541]
[56.63936996 450.44470215]
[41.84125137 447.99200439]
[44.29364014 433.19430542]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 44]
[2 43]
[4 42]
[5 41]
[6 40]
[7 39]
[10 36]
[12 34]
[13 33]
[15 31]
[16 30]
[18 28]
[19 27]
[20 26]
[21 25]
[45 197]
[46 196]
[47 195]
[48 194]
[49 193]
[50 192]
[51 191]
[52 190]
[53 189]
[54 188]
[56 146]
[57 145]
[58 144]
[59 143]
[60 142]
[61 141]
[62 140]
[63 139]
[64 138]
[65 97]
[66 96]
[67 95]
[68 94]
[70 93]
[72 91]
[73 90]
[74 89]
[75 88]
[77 86]
[78 85]
[98 119]
[99 118]
[100 117]
[103 114]
[105 112]
[106 111]
[121 135]
[122 134]
[123 133]
[124 131]
[125 130]
[147 186]
[148 185]
[149 184]
[150 183]
[151 182]
[152 180]
[153 179]
[154 178]
[157 177]
[158 176]
[159 175]
[160 174]
[162 171]
[163 170]
[204 214]
[205 213]
[206 212]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
