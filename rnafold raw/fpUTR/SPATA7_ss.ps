%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:52:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAAUAGCGACUCACUGGACCCAGCCCUUAGCAACGGCCUGGCAACGGUUUCCCUGCUGCUGCAGCCCCCGUCGGCUCCUCUUUUCCAGUCCUCCACUGCCGGGGCUGGGCCCGGCCGCGGGAAGGACCGAAGGGGAUACAGCGUGUCCCUGCGGCGGCUGCAAGAGGACUAAGC\
) } def
/len { sequence length } bind def

/coor [
[-53.97668457 287.45285034]
[-59.40872955 273.47094727]
[-60.13565445 258.48858643]
[-56.08270645 244.04650879]
[-47.66713333 231.63043213]
[-61.31161118 237.86166382]
[-74.95609283 244.09288025]
[-88.60057068 250.32411194]
[-102.24505615 256.55532837]
[-103.64056396 273.01553345]
[-113.08467102 286.45443726]
[-127.92793274 293.26626587]
[-144.08830261 291.68164062]
[-157.17366028 282.22619629]
[-170.70475769 288.69998169]
[-184.23583984 295.17373657]
[-197.76692200 301.64752197]
[-200.68537903 316.77328491]
[-211.82058716 327.15884399]
[-226.75935364 328.97470093]
[-239.74737549 321.73251343]
[-253.27845764 328.20629883]
[-266.80953979 334.68005371]
[-280.34063721 341.15383911]
[-289.45007324 354.08938599]
[-304.27029419 352.60269165]
[-317.80139160 359.07644653]
[-320.47845459 374.36087036]
[-331.65158081 385.12844849]
[-347.02444458 387.23886108]
[-360.68591309 379.88061523]
[-367.38287354 365.88308716]
[-364.54016113 350.62863159]
[-353.25088501 339.98287964]
[-337.85598755 338.03933716]
[-324.27514648 345.54537964]
[-310.74407959 339.07159424]
[-302.60244751 326.59909058]
[-286.81439209 327.62274170]
[-273.28332520 321.14898682]
[-259.75222778 314.67520142]
[-246.22114563 308.20144653]
[-243.71064758 293.54415894]
[-232.92312622 283.05163574]
[-217.84948730 280.89791870]
[-204.24069214 288.11642456]
[-190.70960999 281.64266968]
[-177.17852783 275.16888428]
[-163.64744568 268.69509888]
[-163.48863220 255.02165222]
[-157.41865540 242.69445801]
[-146.57347107 234.14981079]
[-133.03892517 231.10382080]
[-119.44965363 234.20799255]
[-108.47628021 242.91085815]
[-94.83179474 236.67962646]
[-81.18731689 230.44841003]
[-67.54283905 224.21717834]
[-53.89835739 217.98594666]
[-48.78845596 210.25038147]
[-38.56184006 208.12977600]
[-27.22559547 198.30685425]
[-15.88935184 188.48394775]
[-4.55310869 178.66104126]
[6.78313494 168.83813477]
[18.11937904 159.01521301]
[29.45562172 149.19230652]
[34.00739670 135.01025391]
[49.50372696 131.82052612]
[60.83996964 121.99761200]
[72.17621613 112.17470551]
[83.51245880 102.35179138]
[89.31322479 62.00408173]
[96.26583099 48.71268463]
[103.21843719 35.42128372]
[104.43089294 26.33426285]
[110.41560364 21.95633316]
[117.60433960 8.79114914]
[124.79306793 -4.37403584]
[131.98181152 -17.53922081]
[124.96350861 -26.59811974]
[122.56261444 -38.46783447]
[125.83472443 -50.80237198]
[134.65467834 -60.90723038]
[147.63406372 -66.32450104]
[152.62434387 -80.47006989]
[157.61460876 -94.61563873]
[162.60488892 -108.76121521]
[167.59515381 -122.90678406]
[172.58543396 -137.05235291]
[177.57569885 -151.19792175]
[182.56597900 -165.34349060]
[187.55625916 -179.48905945]
[178.64151001 -192.18974304]
[178.92826843 -207.70416260]
[188.30625916 -220.06672668]
[203.16943359 -224.52377319]
[217.80262756 -219.36148071]
[226.57907104 -206.56484985]
[226.12402344 -191.05444336]
[216.61248779 -178.79434204]
[201.70182800 -174.49879456]
[196.71154785 -160.35322571]
[191.72128296 -146.20765686]
[186.73100281 -132.06208801]
[181.74073792 -117.91651154]
[176.75045776 -103.77093506]
[171.76017761 -89.62536621]
[166.76991272 -75.47979736]
[161.77963257 -61.33422470]
[173.45925903 -51.92219162]
[186.22079468 -59.80527878]
[198.98234558 -67.68836212]
[211.74388123 -75.57144928]
[219.03671265 -90.25977325]
[235.41831970 -91.01796722]
[244.03672791 -77.06607056]
[236.02603149 -62.75660324]
[219.62696838 -62.80990982]
[206.86543274 -54.92682266]
[194.10388184 -47.04373550]
[181.34234619 -39.16064835]
[169.32437134 -14.10311794]
[145.14698792 -10.35048580]
[137.95825195 2.81469917]
[130.76951599 15.97988415]
[123.58078766 29.14506912]
[116.50983429 42.37388611]
[109.55722809 55.66528702]
[102.60462952 68.95668793]
[105.28822327 75.96013641]
[110.65540314 89.96704102]
[113.33899689 96.97048950]
[127.39324188 102.21245575]
[141.44749451 107.45441437]
[155.50173950 112.69638062]
[169.55598450 117.93833923]
[183.61022949 123.18030548]
[197.66447449 128.42227173]
[211.71871948 133.66423035]
[228.67216492 133.53431702]
[233.49018860 149.78926086]
[219.20425415 158.91880798]
[206.47676086 147.71847534]
[192.42251587 142.47651672]
[178.36827087 137.23455811]
[164.31402588 131.99258423]
[150.25978088 126.75062561]
[136.20553589 121.50865936]
[122.15128326 116.26670074]
[108.09703827 111.02473450]
[93.33536530 113.68803406]
[81.99912262 123.51094818]
[70.66287994 133.33386230]
[59.32663727 143.15676880]
[53.96401596 158.04142761]
[39.27853394 160.52854919]
[27.94228935 170.35145569]
[16.60604668 180.17437744]
[5.26980257 189.99728394]
[-6.06644106 199.82019043]
[-17.40268517 209.64311218]
[-28.73892784 219.46601868]
[-13.94826508 216.96876526]
[0.87233460 219.28172302]
[14.19871044 226.16705322]
[24.66036987 236.91664124]
[31.18143082 250.42500305]
[33.09125900 265.30291748]
[30.19345284 280.02035522]
[22.78601837 293.06375122]
[11.63074493 303.09170532]
[-2.12515426 309.07293701]
[-17.06701279 310.39233398]
[-31.65820122 306.91424561]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 59]
[6 58]
[7 57]
[8 56]
[9 55]
[14 49]
[15 48]
[16 47]
[17 46]
[21 42]
[22 41]
[23 40]
[24 39]
[26 37]
[27 36]
[61 163]
[62 162]
[63 161]
[64 160]
[65 159]
[66 158]
[67 157]
[69 155]
[70 154]
[71 153]
[72 152]
[73 130]
[74 129]
[75 128]
[77 127]
[78 126]
[79 125]
[80 124]
[85 110]
[86 109]
[87 108]
[88 107]
[89 106]
[90 105]
[91 104]
[92 103]
[93 102]
[111 122]
[112 121]
[113 120]
[114 119]
[133 151]
[134 150]
[135 149]
[136 148]
[137 147]
[138 146]
[139 145]
[140 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
