%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:15:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCGCGUUGGGGGGGACACUGGGGCUGGGGGGGUUUGUUGGGCUGGUGAGUUUUCGAGGUGACUGUGCUGUGCUCGGUGAGGGGACGCCCAGAGAGCCCUGACCCGGGGUCACUCCGUCGCCGUUCUCCUCUUGUCUACGUGCUGGACCCGGUGCUACCUUUUUACCCACACUUAAGUGACGCAAA\
) } def
/len { sequence length } bind def

/coor [
[78.60934448 233.27861023]
[70.85780334 219.69746399]
[73.70042419 204.32041931]
[85.79500580 194.40805054]
[85.79500580 179.40805054]
[85.79500580 164.40805054]
[85.79500580 149.40805054]
[61.39797974 115.18648529]
[72.95539856 83.74395752]
[62.30434418 73.18199921]
[51.65328598 62.62003708]
[41.00223160 52.05807495]
[30.35117531 41.49611282]
[19.70012093 30.93415451]
[9.04906464 20.37219429]
[-1.60199082 9.81023312]
[-12.25304604 -0.75172800]
[-17.34202194 -2.08835101]
[-21.02945328 -4.96492529]
[-22.96232033 -8.58408260]
[-23.15776062 -12.12433338]
[-33.26319504 -23.20946693]
[-48.27824402 -28.19533157]
[-51.13462067 -42.81348419]
[-66.14966583 -47.79935074]
[-69.00604248 -62.41750336]
[-79.11148071 -73.50263977]
[-89.21691132 -84.58776855]
[-99.32234955 -95.67290497]
[-109.42778015 -106.75804138]
[-137.51647949 -121.53844452]
[-149.78366089 -130.17074585]
[-162.05082703 -138.80303955]
[-174.31799316 -147.43533325]
[-186.58517456 -156.06762695]
[-198.85234070 -164.69992065]
[-214.59098816 -166.31407166]
[-220.54678345 -179.96609497]
[-232.81396484 -188.59838867]
[-245.08113098 -197.23068237]
[-257.34829712 -205.86297607]
[-269.61547852 -214.49526978]
[-281.88265991 -223.12756348]
[-292.37753296 -213.34445190]
[-311.06268311 -213.39743042]
[-325.18185425 -218.46189880]
[-339.30102539 -223.52636719]
[-357.32803345 -219.81776428]
[-368.15304565 -233.61900330]
[-382.35531616 -238.44557190]
[-396.55755615 -243.27212524]
[-410.75982666 -248.09869385]
[-423.35668945 -239.03785706]
[-438.87341309 -239.14540100]
[-451.34344482 -248.37997437]
[-455.97186279 -263.19070435]
[-450.97891235 -277.88253784]
[-438.28451538 -286.80618286]
[-422.76989746 -286.53030396]
[-410.40075684 -277.16101074]
[-405.93325806 -262.30096436]
[-391.73101807 -257.47439575]
[-377.52874756 -252.64782715]
[-363.32647705 -247.82125854]
[-352.32717896 -252.88670349]
[-340.44674683 -248.96582031]
[-334.23657227 -237.64553833]
[-320.11737061 -232.58106995]
[-305.99819946 -227.51660156]
[-296.36712646 -239.01626587]
[-303.83071899 -252.02760315]
[-317.40881348 -260.14828491]
[-317.03005981 -275.03808594]
[-324.49365234 -288.04940796]
[-331.95727539 -301.06076050]
[-347.00363159 -306.62731934]
[-351.89572144 -321.90628052]
[-342.88076782 -335.17694092]
[-326.87426758 -336.25915527]
[-316.15502930 -324.32278442]
[-318.94592285 -308.52435303]
[-311.48233032 -295.51300049]
[-304.01873779 -282.50167847]
[-290.97448730 -275.31164551]
[-290.81939697 -259.49118042]
[-283.35580444 -246.47985840]
[-273.25036621 -235.39472961]
[-260.98318481 -226.76243591]
[-248.71601868 -218.13014221]
[-236.44883728 -209.49784851]
[-224.18167114 -200.86555481]
[-211.91448975 -192.23326111]
[-197.05328369 -191.23654175]
[-190.22004700 -176.96708679]
[-177.95288086 -168.33479309]
[-165.68569946 -159.70249939]
[-153.41853333 -151.07020569]
[-141.15136719 -142.43791199]
[-128.88418579 -133.80561829]
[-114.42282867 -137.78923035]
[-108.30643463 -151.48556519]
[-102.19004822 -165.18191528]
[-96.07365417 -178.87825012]
[-89.95726013 -192.57458496]
[-89.01954651 -209.50259399]
[-72.49352264 -213.28765869]
[-64.28150940 -198.45529175]
[-76.26091766 -186.45819092]
[-82.37731171 -172.76185608]
[-88.49370575 -159.06552124]
[-94.61009979 -145.36917114]
[-100.72649384 -131.67283630]
[-98.34265137 -116.86347198]
[-88.23721313 -105.77833557]
[-78.13177490 -94.69320679]
[-68.02634430 -83.60807037]
[-57.92090988 -72.52294159]
[-43.62866592 -68.32995605]
[-40.04948425 -52.91891861]
[-25.75724411 -48.72593689]
[-22.17806244 -33.31490326]
[-12.07262707 -22.22976875]
[-1.69108582 -11.40278339]
[8.95996952 -0.84082299]
[19.61102486 9.72113800]
[30.26208115 20.28309822]
[40.91313553 30.84505844]
[51.56419373 41.40702057]
[62.21524811 51.96897888]
[72.86630249 62.53094101]
[83.51735687 73.09290314]
[89.68223572 67.85491943]
[97.42846680 64.12553406]
[106.36289978 62.36138916]
[115.96555328 62.91161346]
[125.61987305 65.98384094]
[134.65180969 71.61880493]
[142.37527466 79.67577362]
[148.14093018 89.83035278]
[151.38505554 101.58528900]
[165.94219971 105.20324707]
[180.49934387 108.82121277]
[195.05647278 112.43917084]
[209.61361694 116.05712891]
[224.17076111 119.67508698]
[239.77314758 114.62555695]
[251.76440430 125.81222534]
[247.80897522 141.72720337]
[231.97586060 145.99853516]
[220.55279541 134.23223877]
[205.99566650 130.61427307]
[191.43852234 126.99631500]
[176.88137817 123.37834930]
[162.32423401 119.76039124]
[147.76708984 116.14243317]
[143.04882812 121.97235107]
[154.70864868 131.40888977]
[166.36848450 140.84542847]
[178.02832031 150.28196716]
[189.68815613 159.71850586]
[201.34783936 169.15522766]
[191.91093445 180.81477356]
[180.25161743 171.37834167]
[168.59178162 161.94180298]
[156.93194580 152.50526428]
[145.27210999 143.06872559]
[133.61228943 133.63218689]
[128.89401245 139.46209717]
[135.46705627 152.94523621]
[142.04011536 166.42837524]
[157.06216431 171.33892822]
[164.13746643 185.47100830]
[159.06835938 200.44029236]
[144.86227417 207.36578369]
[129.94740295 202.13870239]
[123.17249298 187.86018372]
[128.55697632 173.00141907]
[121.98392487 159.51828003]
[115.41087341 146.03514099]
[100.79500580 149.40805054]
[100.79500580 164.40805054]
[100.79500580 179.40805054]
[100.79500580 194.40805054]
[112.88958740 204.32041931]
[115.73220825 219.69746399]
[107.98066711 233.27861023]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 183]
[5 182]
[6 181]
[7 180]
[9 131]
[10 130]
[11 129]
[12 128]
[13 127]
[14 126]
[15 125]
[16 124]
[17 123]
[21 122]
[22 121]
[24 119]
[26 117]
[27 116]
[28 115]
[29 114]
[30 113]
[31 99]
[32 98]
[33 97]
[34 96]
[35 95]
[36 94]
[38 92]
[39 91]
[40 90]
[41 89]
[42 88]
[43 87]
[45 69]
[46 68]
[47 67]
[49 64]
[50 63]
[51 62]
[52 61]
[70 86]
[71 85]
[73 83]
[74 82]
[75 81]
[100 112]
[101 111]
[102 110]
[103 109]
[104 108]
[140 155]
[141 154]
[142 153]
[143 152]
[144 151]
[145 150]
[168 179]
[169 178]
[170 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
