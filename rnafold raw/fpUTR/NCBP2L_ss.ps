%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:13:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCCCUGUGGGUCCUAUAUGUGCCCUGCAACUUGGGGAAAAUGGAGGUGGGGUUGUGGUCUCUAUGCUGUAGCAGCCGGAAAGCCAAAAACAAGCCGUACUUCUCGCUCUUGACAGGAUCCCAAGGUUUUCAGUGGUGGUGUCACUGCUGCCAAGCUGGACCGAAAACGGCCAUCGGCAUGCUGCCCAACCAGCACC\
) } def
/len { sequence length } bind def

/coor [
[317.16302490 244.93104553]
[315.18395996 228.13757324]
[302.00076294 220.98191833]
[288.81756592 213.82627869]
[275.63433838 206.67062378]
[260.75756836 207.39932251]
[252.31991577 194.01588440]
[239.13671875 186.86024475]
[231.75108337 186.43194580]
[225.80319214 179.48616028]
[212.73458862 172.12329102]
[199.66600037 164.76042175]
[186.59741211 157.39755249]
[173.52880859 150.03468323]
[160.46022034 142.67181396]
[147.39161682 135.30894470]
[135.10861206 147.54022217]
[119.80518341 155.68161011]
[102.79792023 159.03269958]
[85.54994965 157.30517578]
[69.54512024 150.64768982]
[56.16033554 139.63294983]
[49.25010681 153.86529541]
[34.38372040 154.78169250]
[22.07008553 163.34757996]
[9.75645351 171.91346741]
[9.57266808 187.42945862]
[0.27693579 199.85398865]
[-14.55634499 204.40957642]
[-29.22347450 199.34451294]
[-38.08464432 186.60641479]
[-37.73255157 171.09332275]
[-28.30258369 158.77037048]
[-13.42075539 154.37596130]
[1.19056499 159.59983826]
[13.50419807 151.03395081]
[25.81783104 142.46806335]
[31.84730530 128.84841919]
[47.59444427 127.31932068]
[42.79124069 114.82717896]
[40.92201614 101.57462311]
[42.08263779 88.24131012]
[46.21358490 75.51103973]
[53.10299301 64.03670502]
[42.45461273 53.47204971]
[31.80623436 42.90739059]
[21.15785408 32.34273529]
[10.50947380 21.77807617]
[-0.13890691 11.21341801]
[-10.78728771 0.64876026]
[-26.03338242 -3.57819867]
[-29.61890793 -18.03479767]
[-40.26728821 -28.59945679]
[-50.91566849 -39.16411209]
[-61.56404877 -49.72877121]
[-72.29548645 -60.20904922]
[-83.10932159 -70.60429382]
[-94.24591827 -80.65297699]
[-105.69419861 -90.34508514]
[-117.14247131 -100.03720093]
[-135.33003235 -102.88803101]
[-140.62023926 -119.61627197]
[-152.22009277 -129.12644958]
[-163.81994629 -138.63662720]
[-176.71519470 -138.14608765]
[-186.18220520 -146.31411743]
[-187.49816895 -158.34504700]
[-198.94644165 -168.03715515]
[-210.39471436 -177.72927856]
[-221.84298706 -187.42138672]
[-237.83850098 -193.04101562]
[-236.86648560 -209.96707153]
[-220.33280945 -213.71864319]
[-212.15087891 -198.86965942]
[-200.70260620 -189.17755127]
[-189.25433350 -179.48544312]
[-177.80606079 -169.79331970]
[-160.39756775 -167.61041260]
[-154.30976868 -150.23648071]
[-142.70991516 -140.72630310]
[-131.11006165 -131.21612549]
[-119.03924561 -132.09402466]
[-109.29617310 -124.25737000]
[-107.45036316 -111.48547363]
[-96.00208282 -101.79336548]
[-84.55381012 -92.10124969]
[-81.74316406 -92.20450592]
[-78.72218323 -91.19511414]
[-75.91648865 -88.98731232]
[-73.77484894 -85.65158081]
[-72.71407318 -81.41812134]
[-61.90024567 -71.02288055]
[-54.89256287 -68.65148163]
[-50.99938965 -60.37715149]
[-40.35100937 -49.81249237]
[-29.70263100 -39.24783707]
[-19.05425072 -28.68317795]
[-4.56979942 -25.21187401]
[-0.22262937 -9.99962044]
[10.42575073 0.56503779]
[21.07413101 11.12969589]
[31.72251129 21.69435310]
[42.37089157 32.25901031]
[53.01927185 42.82366943]
[63.66765213 53.38832855]
[75.68446350 46.13496017]
[89.07286835 41.92000961]
[103.07764435 40.98122787]
[116.90882111 43.37156677]
[129.78620911 48.95619965]
[140.98341370 57.42010498]
[149.86883545 68.28585052]
[155.94125366 80.94052887]
[158.85815430 94.67030334]
[158.45498657 108.70072174]
[154.75448608 122.24034882]
[167.82308960 129.60322571]
[180.89167786 136.96609497]
[193.96028137 144.32894897]
[207.02886963 151.69181824]
[220.09745789 159.05468750]
[233.16606140 166.41755676]
[246.29235840 173.67704773]
[259.47555542 180.83268738]
[275.29528809 180.61581421]
[282.79000854 193.48742676]
[295.97320557 200.64308167]
[309.15640259 207.79872131]
[322.33959961 214.95437622]
[334.30895996 208.10762024]
[347.98989868 208.07203674]
[359.80618286 214.74992371]
[366.72183228 226.30261230]
[367.02102661 239.65541077]
[380.08963013 247.01828003]
[393.15823364 254.38114929]
[408.97940063 254.41403198]
[416.26998901 267.40237427]
[429.33859253 274.76522827]
[442.40716553 282.12808228]
[455.47576904 289.49096680]
[467.45751953 280.17898560]
[482.05230713 276.17453003]
[497.02786255 278.05783081]
[510.10601807 285.51098633]
[519.30926514 297.37118530]
[523.25988770 311.81204224]
[521.38574219 326.62478638]
[534.45434570 333.98764038]
[547.58068848 341.24713135]
[560.76385498 348.40277100]
[573.94708252 355.55841064]
[587.13024902 362.71405029]
[597.66412354 357.17761230]
[609.44201660 357.41571045]
[619.53582764 363.25332642]
[625.49218750 373.13778687]
[625.92834473 384.54995728]
[638.87908936 392.11819458]
[651.82977295 399.68646240]
[660.82769775 401.31726074]
[664.92388916 407.47778320]
[677.75354004 415.24954224]
[690.58319092 423.02130127]
[706.98114014 422.82531738]
[715.11602783 437.06454468]
[706.61938477 451.09088135]
[690.23175049 450.47525024]
[682.81140137 435.85095215]
[669.98175049 428.07919312]
[657.15216064 420.30743408]
[644.26153564 412.63720703]
[631.31079102 405.06893921]
[618.36004639 397.50067139]
[600.97344971 403.20706177]
[584.65264893 394.24777222]
[579.97460938 375.89727783]
[566.79144287 368.74160767]
[553.60821533 361.58596802]
[540.42504883 354.43032837]
[533.03936768 354.00201416]
[527.09149170 347.05624390]
[514.02288818 339.69335938]
[502.32443237 348.97103882]
[487.92617798 353.07412720]
[473.01364136 351.34744263]
[459.86288452 344.02316284]
[450.49298096 332.19018555]
[446.35623169 317.63238525]
[448.11291504 302.55957031]
[435.04431152 295.19668579]
[421.97570801 287.83383179]
[408.90713501 280.47094727]
[394.02069092 280.96472168]
[385.79534912 267.44973755]
[372.72677612 260.08688354]
[359.65817261 252.72401428]
[344.96423340 260.03280640]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 129]
[3 128]
[4 127]
[5 126]
[7 124]
[8 123]
[10 122]
[11 121]
[12 120]
[13 119]
[14 118]
[15 117]
[16 116]
[22 39]
[24 37]
[25 36]
[26 35]
[44 105]
[45 104]
[46 103]
[47 102]
[48 101]
[49 100]
[50 99]
[52 97]
[53 96]
[54 95]
[55 94]
[56 92]
[57 91]
[58 86]
[59 85]
[60 84]
[62 81]
[63 80]
[64 79]
[67 77]
[68 76]
[69 75]
[70 74]
[134 197]
[135 196]
[136 195]
[138 193]
[139 192]
[140 191]
[141 190]
[148 183]
[149 182]
[150 180]
[151 179]
[152 178]
[153 177]
[158 174]
[159 173]
[160 172]
[162 171]
[163 170]
[164 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
