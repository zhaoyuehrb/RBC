%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:59:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCAGCCGCCGAAGAGCGCUUGGCGCCAUUUUGAAGCGGAGAGGAGGAGGAACGGCAGGGCUGGCUGCGGAAGGGGAGGGGGGGGGAGAAGGCGAUUGGAUGCGGCGGCGGCGGCGGAUCCCGGAGAGCCCCGGAGUGAGCGGAGUAGCGAGUCGGCAACCCGGAGGGGUAGAAAUAUUUCUGUC\
) } def
/len { sequence length } bind def

/coor [
[90.27481842 190.73272705]
[82.55263519 176.26553345]
[91.44902802 162.48924255]
[91.70101166 147.49134827]
[91.95300293 132.49346924]
[92.20498657 117.49558258]
[78.40782928 111.61014557]
[67.75677490 122.17210388]
[57.10572052 132.73406982]
[46.45466232 143.29602051]
[35.98254395 154.03543091]
[25.69231415 164.94923401]
[15.40208435 175.86303711]
[5.11185455 186.77684021]
[-5.17837524 197.69064331]
[-8.99165821 215.69580078]
[-25.97107506 220.09519958]
[-36.07651138 231.18032837]
[-46.18194580 242.26545715]
[-56.28738022 253.35060120]
[-62.48983383 269.12924194]
[-79.36885834 267.53713989]
[-82.51156616 250.87702942]
[-67.37251282 243.24516296]
[-57.26707840 232.16003418]
[-47.16164398 221.07489014]
[-37.05620956 209.98976135]
[-37.29804993 197.88253784]
[-28.95155525 188.56298828]
[-16.09218216 187.40042114]
[-5.80195189 176.48661804]
[4.48827791 165.57281494]
[14.77850723 154.65899658]
[25.06873703 143.74519348]
[25.82409859 139.01020813]
[29.57522011 134.70606995]
[35.89270401 132.64497375]
[46.54375839 122.08300781]
[57.19481277 111.52104950]
[67.84587097 100.95909119]
[54.67349625 108.13464355]
[39.82019043 110.22732544]
[25.17801094 106.97055817]
[12.61211872 98.77919769]
[3.72319674 86.69668579]
[-0.35645911 72.26213074]
[0.89283031 57.31424332]
[7.31192684 43.75713348]
[18.08314705 33.31774902]
[31.83442116 27.32588005]
[46.81407166 26.54479599]
[61.11394501 31.07399178]
[72.91248322 40.33652496]
[80.70674896 53.15250778]
[83.50389099 67.88939667]
[80.94841766 82.66774750]
[87.52146912 69.18460846]
[84.06456757 56.74415207]
[89.83314514 45.64273071]
[101.24459076 41.59032059]
[108.04322052 28.21950722]
[114.84185028 14.84869480]
[121.64048004 1.47788131]
[120.99835968 -14.33028889]
[133.66383362 -22.16835213]
[140.46244812 -35.53916550]
[147.26107788 -48.90998077]
[154.05970764 -62.28079224]
[160.85833740 -75.65160370]
[149.30557251 -85.31284332]
[140.19686890 -97.29699707]
[133.98652649 -111.00109863]
[130.98304749 -125.73651886]
[131.33392334 -140.76359558]
[135.01834106 -155.32876587]
[141.84840393 -168.70233154]
[151.47869873 -180.21504211]
[163.42378235 -189.29156494]
[177.08264160 -195.47924805]
[191.76889038 -198.47068787]
[206.74536133 -198.11903381]
[221.26101685 -194.44511414]
[228.05964661 -207.81591797]
[234.85827637 -221.18673706]
[241.65690613 -234.55754089]
[231.84222412 -246.13111877]
[227.21878052 -260.54177856]
[228.46147156 -275.58401489]
[235.34988403 -288.96826172]
[246.80665588 -298.66912842]
[261.06582642 -303.23220825]
[275.94500732 -301.99176025]
[282.74365234 -315.36257935]
[283.84844971 -324.45147705]
[289.77044678 -328.89944458]
[296.79272461 -342.15417480]
[303.81503296 -355.40887451]
[310.83731079 -368.66360474]
[310.64187622 -373.92153931]
[312.32647705 -378.28433228]
[315.23025513 -381.18304443]
[318.56195068 -382.39599609]
[326.24307251 -395.28012085]
[333.92419434 -408.16421509]
[334.34503174 -423.97982788]
[347.50823975 -430.94973755]
[355.18936157 -443.83383179]
[354.87777710 -460.23004150]
[369.05932617 -468.46508789]
[383.14523315 -460.06750488]
[382.64511108 -443.67596436]
[368.07348633 -436.15270996]
[360.39236450 -423.26861572]
[360.52093506 -408.37454224]
[346.80831909 -400.48309326]
[339.12719727 -387.59899902]
[331.44607544 -374.71487427]
[324.09204102 -361.64132690]
[317.06973267 -348.38659668]
[310.04745483 -335.13189697]
[303.02517700 -321.87716675]
[296.11447144 -308.56393433]
[289.31582642 -295.19311523]
[299.08413696 -283.90112305]
[303.79776001 -269.69100952]
[302.70883179 -254.71838379]
[295.95227051 -241.26712036]
[284.52984619 -231.40095520]
[270.16174316 -226.64688110]
[255.02770996 -227.75891113]
[248.22908020 -214.38810730]
[241.43045044 -201.01728821]
[234.63182068 -187.64648438]
[246.15226746 -178.08189392]
[255.25970459 -166.18765259]
[261.49484253 -152.55834961]
[264.54205322 -137.87619019]
[264.24533081 -122.87684631]
[260.61636353 -108.31265259]
[253.83403015 -94.91481018]
[244.23561096 -83.35671997]
[232.30003357 -74.22009277]
[218.62390137 -67.96571350]
[203.89181519 -64.91017151]
[188.84194946 -65.20986176]
[174.22915649 -68.85298157]
[167.43052673 -55.48216248]
[160.63189697 -42.11135101]
[153.83326721 -28.74053764]
[147.03463745 -15.36972427]
[148.16304016 -0.51792359]
[135.01129150 8.27650928]
[128.21266174 21.64732361]
[121.41403198 35.01813507]
[114.61540222 48.38895035]
[116.50034332 65.82747650]
[101.00460815 75.75765991]
[94.43155670 89.24079132]
[114.59165955 74.48109436]
[146.60847473 97.46400452]
[156.52626038 108.71733856]
[166.44406128 119.97067261]
[176.36184692 131.22399902]
[192.06776428 135.94163513]
[195.57128906 151.96215820]
[183.26828003 162.80505371]
[167.81503296 157.31605530]
[165.10850525 141.14179993]
[155.19071960 129.88845825]
[145.27293396 118.63513184]
[135.35514832 107.38179779]
[128.31707764 109.97324371]
[133.49996948 124.04937744]
[138.68286133 138.12551880]
[143.86575317 152.20166016]
[149.04840088 166.27787781]
[134.97209167 171.46029663]
[129.78961182 157.38453674]
[124.60671997 143.30841064]
[119.42382812 129.23226929]
[114.24094391 115.15612793]
[107.20287323 117.74757385]
[106.95088196 132.74545288]
[106.69889832 147.74334717]
[106.44690704 162.74122620]
[114.87548065 176.80860901]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 185]
[4 184]
[5 183]
[6 182]
[7 40]
[8 39]
[9 38]
[10 37]
[11 34]
[12 33]
[13 32]
[14 31]
[15 30]
[17 27]
[18 26]
[19 25]
[20 24]
[56 158]
[57 157]
[60 155]
[61 154]
[62 153]
[63 152]
[65 150]
[66 149]
[67 148]
[68 147]
[69 146]
[82 133]
[83 132]
[84 131]
[85 130]
[92 123]
[93 122]
[95 121]
[96 120]
[97 119]
[98 118]
[102 117]
[103 116]
[104 115]
[106 113]
[107 112]
[160 171]
[161 170]
[162 169]
[163 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
