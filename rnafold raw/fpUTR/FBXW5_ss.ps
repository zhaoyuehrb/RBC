%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:25:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGCGCUCUGCCUUCCUCGGCCAUCGAUGCCUCGGGGCUCGUGGCGUCGGGCCUGGCGGGCUCCCCGUUGGGCGGGGGCGGCGGUCCGAGCGGCUGCGGCAGCGGAAGCGGGUCCGGGUCGCGCAGGGCGGGGGCGGCGCAGCGGGCGGAGGCGGCCGUGGGCCGCCUGGGCAGAAUGUCACG\
) } def
/len { sequence length } bind def

/coor [
[284.61795044 386.54461670]
[276.21832275 374.11697388]
[267.81872559 361.68933105]
[254.28134155 355.47735596]
[252.96401978 339.71109009]
[244.56439209 327.28344727]
[236.16476440 314.85580444]
[227.76515198 302.42816162]
[214.22776794 296.21618652]
[212.91044617 280.44992065]
[204.51083374 268.02224731]
[196.11120605 255.59461975]
[187.71157837 243.16697693]
[174.17420959 236.95500183]
[172.85688782 221.18872070]
[164.45726013 208.76107788]
[156.05764771 196.33343506]
[147.65802002 183.90579224]
[139.25839233 171.47814941]
[130.85877991 159.05050659]
[117.32139587 152.83853149]
[116.00407410 137.07226562]
[107.60445404 124.64461517]
[89.46169281 127.63758087]
[71.43211365 117.23841095]
[57.01709366 121.38657379]
[42.60207367 125.53473663]
[28.18705750 129.68289185]
[13.77203846 133.83105469]
[-0.64297980 137.97921753]
[-15.05799866 142.12738037]
[-29.47301674 146.27554321]
[-40.59529495 157.52745056]
[-54.96592331 153.61155701]
[-69.38094330 157.75971985]
[-78.37252808 171.04620361]
[-94.37710571 172.15660095]
[-105.11734009 160.23910522]
[-102.35423279 144.43577576]
[-88.20741272 136.86961365]
[-73.52910614 143.34469604]
[-59.11408615 139.19653320]
[-49.02286530 128.24133301]
[-33.62117767 131.86051941]
[-19.20615959 127.71236420]
[-4.79114151 123.56420135]
[9.62387657 119.41603851]
[24.03889465 115.26788330]
[38.45391464 111.11972046]
[52.86893082 106.97155762]
[67.28395081 102.82339478]
[69.44158936 87.97938538]
[56.80404282 79.89901733]
[44.16649628 71.81864929]
[31.52894592 63.73827744]
[18.89139748 55.65790939]
[6.25384998 47.57754135]
[-6.38369846 39.49716949]
[-19.02124596 31.41679955]
[-31.65879440 23.33643150]
[-44.29634476 15.25606155]
[-60.89797592 11.81771946]
[-62.18979263 -5.08694124]
[-46.30338287 -11.00795078]
[-36.21597290 2.61851287]
[-23.57842636 10.69888210]
[-10.94087696 18.77925301]
[1.69667113 26.85962105]
[14.33421993 34.93999100]
[26.97176743 43.02035904]
[39.60931778 51.10073090]
[52.24686432 59.18109894]
[64.88441467 67.26146698]
[77.52195740 75.34184265]
[85.35195923 72.85955048]
[92.97687531 72.56867981]
[99.83563232 74.20934296]
[96.34733582 58.77748489]
[107.38783264 48.77964783]
[111.65823364 34.40036774]
[115.92864227 20.02109146]
[120.19905090 5.64181280]
[124.46945190 -8.73746490]
[128.49507141 -23.18718529]
[132.27474976 -37.70317841]
[128.26445007 -53.00769043]
[138.95907593 -63.37466049]
[142.73875427 -77.89065552]
[136.89181519 -89.40421295]
[140.35481262 -101.42741394]
[150.74272156 -107.65352631]
[154.76834106 -122.10324097]
[147.26130676 -135.75177002]
[151.54969788 -150.34849548]
[164.60774231 -157.42118835]
[168.63336182 -171.87091064]
[172.65898132 -186.32063293]
[176.68460083 -200.77033997]
[172.07553101 -216.50846863]
[183.59475708 -228.18063354]
[199.39228821 -223.77951050]
[203.21699524 -207.83261108]
[191.13432312 -196.74473572]
[187.10870361 -182.29501343]
[183.08308411 -167.84529114]
[179.05746460 -153.39556885]
[186.57749939 -140.58992004]
[182.70079041 -125.87850189]
[169.21806335 -118.07762146]
[165.19244385 -103.62790680]
[170.48310852 -86.90562439]
[157.25474548 -74.11098480]
[153.47506714 -59.59498978]
[157.75572205 -45.32875824]
[146.79074097 -33.92350769]
[143.01106262 -19.40751457]
[144.62509155 -14.89054680]
[143.40249634 -9.31109238]
[138.84872437 -4.46705961]
[134.57832336 9.91221809]
[130.30792236 24.29149628]
[126.03751373 38.67077255]
[121.76711273 53.05005264]
[125.56085205 67.45341492]
[114.21491241 78.47975159]
[125.49054718 96.07355499]
[120.03209686 116.24499512]
[128.43171692 128.67263794]
[142.56990051 135.77352905]
[143.28642273 150.65087891]
[151.68603516 163.07852173]
[160.08566284 175.50616455]
[168.48529053 187.93382263]
[176.88490295 200.36146545]
[185.28453064 212.78910828]
[199.42269897 219.88998413]
[200.13923645 234.76734924]
[208.53884888 247.19499207]
[216.93847656 259.62265015]
[225.33808899 272.05029297]
[239.47627258 279.15115356]
[240.19279480 294.02853394]
[248.59242249 306.45617676]
[256.99203491 318.88381958]
[265.39166260 331.31146240]
[279.52984619 338.41235352]
[280.24636841 353.28970337]
[288.64599609 365.71734619]
[297.04559326 378.14498901]
[321.70214844 377.21783447]
[339.42575073 402.31427002]
[350.68585205 412.22439575]
[361.94592285 422.13452148]
[373.20602417 432.04461670]
[384.46609497 441.95474243]
[395.72616577 451.86486816]
[406.98626709 461.77499390]
[418.24633789 471.68511963]
[434.13101196 477.61080933]
[432.83419800 494.51507568]
[416.23156738 497.94851685]
[408.33624268 482.94519043]
[397.07614136 473.03506470]
[385.81607056 463.12493896]
[374.55596924 453.21484375]
[363.29589844 443.30471802]
[352.03579712 433.39459229]
[340.77572632 423.48446655]
[329.51562500 413.57434082]
[316.94659424 421.76208496]
[304.37866211 429.94909668]
[308.89263916 444.25378418]
[313.40658569 458.55850220]
[317.92056274 472.86318970]
[328.45309448 486.14855957]
[318.60260010 499.94726562]
[302.61627197 494.30160522]
[303.61587524 477.37713623]
[299.10189819 463.07244873]
[294.58795166 448.76776123]
[290.07397461 434.46307373]
[280.38064575 425.44506836]
[275.22534180 414.32592773]
[274.73034668 403.06011963]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[5 145]
[6 144]
[7 143]
[8 142]
[10 140]
[11 139]
[12 138]
[13 137]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[22 128]
[23 127]
[25 51]
[26 50]
[27 49]
[28 48]
[29 47]
[30 46]
[31 45]
[32 44]
[34 42]
[35 41]
[52 74]
[53 73]
[54 72]
[55 71]
[56 70]
[57 69]
[58 68]
[59 67]
[60 66]
[61 65]
[77 125]
[79 123]
[80 122]
[81 121]
[82 120]
[83 119]
[84 116]
[85 115]
[87 113]
[88 112]
[91 110]
[92 109]
[95 106]
[96 105]
[97 104]
[98 103]
[151 169]
[152 168]
[153 167]
[154 166]
[155 165]
[156 164]
[157 163]
[158 162]
[171 181]
[172 180]
[173 179]
[174 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
