%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:45:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGGCACUGAGAGUGGAGGUCUCAGACUCUUGGAAGGGGCUAUACUAGACACACAAAGACAGCCCCAAGAAGGACGGUGGAGUAGUGUCCUCGCUAAAAGACAGUAGAU\
) } def
/len { sequence length } bind def

/coor [
[86.83001709 199.59414673]
[91.55899811 185.22431946]
[100.49868011 173.02033997]
[112.77325439 164.17782593]
[108.17839050 149.89891052]
[103.58353424 135.61999512]
[84.79386902 132.40986633]
[70.31532288 120.01114655]
[56.39698792 125.60399628]
[42.47865295 131.19683838]
[28.56031609 136.78968811]
[14.64198112 142.38253784]
[0.72364593 147.97538757]
[-13.19468975 153.56823730]
[-27.11302567 159.16107178]
[-38.04701614 173.89276123]
[-55.27796555 170.91621399]
[-69.03245544 176.90069580]
[-78.34358978 190.40013123]
[-94.66610718 188.81663513]
[-101.20880127 173.77917480]
[-91.24110413 160.75700378]
[-75.01693726 163.14620972]
[-61.26244354 157.16172791]
[-56.48176956 145.95024109]
[-44.95046997 140.89434814]
[-32.70587158 145.24273682]
[-18.78753662 139.64990234]
[-4.86920118 134.05705261]
[9.04913425 128.46420288]
[22.96747017 122.87135315]
[36.88580322 117.27850342]
[50.80414200 111.68566132]
[64.72247314 106.09281158]
[65.52782440 90.34106445]
[73.02428436 76.46414185]
[85.75678253 67.15557098]
[82.80440521 52.44898605]
[79.85202789 37.74240875]
[76.89965820 23.03582764]
[73.94728088 8.32924843]
[70.99491119 -6.37733126]
[55.95454407 -7.88692760]
[42.02799225 -13.76421547]
[30.45358849 -23.48658943]
[22.26052094 -36.18954468]
[18.17731285 -50.74354172]
[18.56704140 -65.85444641]
[23.39505005 -80.17861176]
[32.23203659 -92.44234467]
[44.29222107 -101.55515289]
[58.50322342 -106.70674133]
[73.60140991 -107.43903351]
[88.24425507 -103.68690491]
[101.12973022 -95.78400421]
[111.11207581 -84.43304443]
[117.30364990 -70.64334106]
[119.15392303 -55.64107895]
[116.49835205 -40.76024246]
[109.57308197 -27.32402229]
[98.99389648 -16.52715874]
[85.70149231 -9.32970524]
[88.65386200 5.37687445]
[91.60623932 20.08345413]
[94.55860901 34.79003525]
[97.51098633 49.49661255]
[100.46335602 64.20319366]
[109.48509979 65.47958374]
[117.89241028 68.99213409]
[125.14069366 74.51330566]
[130.76042175 81.68544769]
[134.38754272 90.04396820]
[149.35002136 88.98350525]
[164.31248474 87.92304230]
[179.27494812 86.86257935]
[194.23741150 85.80211639]
[209.19989014 84.74165344]
[222.41851807 76.04807281]
[235.66094971 82.86622620]
[250.62341309 81.80576324]
[265.99545288 74.65476990]
[277.12240601 87.44646454]
[267.91085815 101.67965698]
[251.68388367 96.76823425]
[236.72142029 97.82869720]
[224.57299805 106.44642639]
[210.26034546 99.70412445]
[195.29788208 100.76458740]
[180.33541870 101.82505035]
[165.37294006 102.88551331]
[150.41047668 103.94597626]
[135.44801331 105.00643921]
[129.66047668 120.04698944]
[117.86244202 131.02514648]
[122.45729828 145.30404663]
[127.05216217 159.58296204]
[142.18009949 159.60752869]
[156.55940247 164.30761719]
[168.78134155 173.22274780]
[177.64851379 185.47952271]
[182.29222107 199.87712097]
[182.25750732 215.00505066]
[177.54779053 229.38119507]
[168.62446594 241.59715271]
[156.36177063 250.45611572]
[141.96104431 255.09016418]
[126.83315277 255.04533386]
[112.46015930 250.32597351]
[100.25018311 241.39447021]
[91.39944458 229.12582397]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 96]
[5 95]
[6 94]
[8 34]
[9 33]
[10 32]
[11 31]
[12 30]
[13 29]
[14 28]
[15 27]
[17 24]
[18 23]
[37 67]
[38 66]
[39 65]
[40 64]
[41 63]
[42 62]
[72 92]
[73 91]
[74 90]
[75 89]
[76 88]
[77 87]
[79 85]
[80 84]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
