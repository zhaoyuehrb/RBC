%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:00:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAAUUAAUCAAGCAAUGGUCAAGAUAAAUGGAGUUGGCCUUGAUCGCUCAGGUGUUUAUGUACAAGAGUUUUCCAGCAAGCGUAUUUUAGUUGUAACAUUCCAGUGAAUAAUCAGAAGUCAGUUUGGGAAGAUCCAGUUCUUAUAGGACUAUUCAUCAGGUUGUUUAGUUCAGCAUUACUUUGUGCUUUCUGAUAAGAU\
) } def
/len { sequence length } bind def

/coor [
[169.76972961 301.84881592]
[178.10185242 298.62026978]
[186.11892700 298.58364868]
[180.21742249 284.79333496]
[174.31593323 271.00305176]
[168.41442871 257.21276855]
[162.51292419 243.42245483]
[156.61141968 229.63217163]
[150.70991516 215.84187317]
[138.58926392 207.18513489]
[140.27311707 191.45378113]
[134.37161255 177.66348267]
[128.47010803 163.87319946]
[116.34947205 155.21644592]
[118.03332520 139.48510742]
[99.79062653 143.51246643]
[81.49866486 139.49945068]
[66.54563141 128.15065002]
[57.71746826 111.53305817]
[44.88539124 119.30080414]
[32.05331802 127.06854248]
[19.22124290 134.83628845]
[6.38916731 142.60403442]
[-6.44290781 150.37178040]
[-19.27498245 158.13952637]
[-27.76829720 174.47421265]
[-45.31141663 174.16160583]
[-58.02113724 182.12796021]
[-70.73085785 190.09432983]
[-74.02002716 205.55256653]
[-87.32174683 214.08718872]
[-102.74433899 210.63478088]
[-111.13785553 197.24356079]
[-107.52257538 181.85833740]
[-94.04337311 173.60687256]
[-78.69722748 177.38461304]
[-65.98750305 169.41824341]
[-53.27778625 161.45187378]
[-50.26587296 149.73159790]
[-39.73614883 142.99182129]
[-27.04272652 145.30744934]
[-14.21065235 137.53970337]
[-1.37857699 129.77195740]
[11.45349789 122.00421143]
[24.28557205 114.23647308]
[37.11764908 106.46872711]
[49.94972229 98.70098114]
[47.97255707 83.83185577]
[33.55649185 79.68733215]
[19.14042854 75.54280853]
[4.72436476 71.39827728]
[-8.98554134 78.79261780]
[-23.54644012 74.38411713]
[-30.51132011 61.26824570]
[-44.92738342 57.12372208]
[-59.34344864 52.97919464]
[-73.04838562 60.85004044]
[-88.28275299 56.64411926]
[-96.00825500 42.85673141]
[-91.64150238 27.66768837]
[-77.77320862 20.08838081]
[-62.63118362 24.61547661]
[-55.19892120 38.56312943]
[-40.78285980 42.70765686]
[-26.36679459 46.85218430]
[-13.49962711 39.43790054]
[1.17935216 43.43567657]
[8.86889076 56.98221588]
[23.28495598 61.12674332]
[37.70101929 65.27127075]
[52.11708450 69.41579437]
[64.30695343 60.67467880]
[65.00656128 45.69100189]
[65.70616150 30.70732689]
[66.40576935 15.72364998]
[67.10537720 0.73997402]
[64.40975952 -5.30982208]
[65.07892609 -10.96251392]
[68.06692505 -14.69666195]
[69.23218536 -29.65133286]
[70.39743805 -44.60600281]
[71.56269836 -59.56067276]
[72.72795868 -74.51534271]
[73.77688599 -89.47862244]
[63.59555435 -101.26752472]
[64.75455475 -116.43694305]
[76.05621338 -126.07064056]
[76.98875427 -141.04162598]
[77.92130280 -156.01260376]
[78.85384369 -170.98359680]
[71.98946381 -185.23809814]
[80.50304413 -197.45971680]
[81.43559265 -212.43070984]
[82.36813354 -227.40168762]
[83.30068207 -242.37268066]
[84.23322296 -257.34365845]
[75.65374756 -273.63323975]
[85.91073608 -287.86886597]
[86.61034393 -302.85253906]
[75.78444672 -314.36669922]
[76.35461426 -330.16070557]
[87.98257446 -340.86425781]
[103.76966095 -340.12713623]
[114.34968567 -328.38665771]
[113.44569397 -312.60824585]
[101.59401703 -302.15295410]
[100.89441681 -287.16928101]
[108.80716705 -278.01367188]
[108.34243774 -265.52032471]
[99.20420837 -256.41110229]
[98.27166748 -241.44012451]
[97.33911896 -226.46914673]
[96.40657806 -211.49816895]
[95.47402954 -196.52717590]
[102.40511322 -183.34350586]
[93.82482910 -170.05105591]
[92.89228058 -155.08006287]
[91.95973969 -140.10908508]
[91.02719116 -125.13809967]
[101.04595947 -114.17634583]
[100.31349182 -98.98035431]
[88.74787140 -88.54608154]
[91.47161102 -81.66976166]
[87.68262482 -73.35009003]
[86.51737213 -58.39541626]
[85.35211182 -43.44074631]
[84.18685150 -28.48607445]
[83.02159882 -13.53140450]
[82.08905029 1.43957984]
[81.38944244 16.42325592]
[80.68984222 31.40693283]
[79.99023438 46.39060974]
[79.29062653 61.37428284]
[94.97247314 56.54646301]
[111.29904938 57.82780838]
[125.97933197 65.01533508]
[136.96186829 77.07890320]
[142.72142029 92.30879974]
[157.41587830 89.29669189]
[172.11035156 86.28458405]
[186.80480957 83.27248383]
[201.49926758 80.26037598]
[216.19374084 77.24826813]
[230.49609375 68.14447784]
[243.20338440 79.36771393]
[235.93649292 94.68530273]
[219.20584106 91.94273376]
[204.51138306 94.95483398]
[189.81690979 97.96694183]
[175.12245178 100.97904968]
[160.42799377 103.99115753]
[145.73353577 107.00326538]
[142.25605774 113.64834595]
[156.59573364 118.04987335]
[171.52496338 119.50521088]
[178.66020203 132.69946289]
[171.70503235 145.98951721]
[156.79696655 147.64772034]
[147.09158325 136.21130371]
[135.30110168 126.93851471]
[131.82362366 133.58360291]
[144.36637878 143.22671509]
[142.26040649 157.97169495]
[148.16191101 171.76197815]
[154.06341553 185.55227661]
[166.60618591 195.19540405]
[164.50021362 209.94036865]
[170.40170288 223.73066711]
[176.30320740 237.52096558]
[182.20471191 251.31124878]
[188.10621643 265.10156250]
[194.00772095 278.89184570]
[199.90922546 292.68212891]
[207.37553406 305.69192505]
[216.30516052 317.74438477]
[225.23480225 329.79681396]
[234.16442871 341.84927368]
[243.09407043 353.90173340]
[258.76110840 355.98010254]
[268.30325317 368.57861328]
[266.05935669 384.22280884]
[253.36067200 393.63125610]
[237.74107361 391.22207642]
[228.46743774 378.42462158]
[231.04161072 362.83135986]
[222.11198425 350.77890015]
[213.18234253 338.72647095]
[204.25271606 326.67401123]
[195.32307434 314.62155151]
[181.62562561 320.73709106]
[167.92938232 326.85205078]
[170.94148254 341.54650879]
[173.95359802 356.24099731]
[185.23681641 368.14144897]
[180.31356812 383.78411865]
[164.24845886 387.07717896]
[153.56790161 374.63299561]
[159.25912476 359.25308228]
[156.24702454 344.55862427]
[153.23492432 329.86416626]
[156.33563232 317.85836792]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 173]
[4 172]
[5 171]
[6 170]
[7 169]
[8 168]
[9 167]
[11 165]
[12 164]
[13 163]
[15 161]
[19 47]
[20 46]
[21 45]
[22 44]
[23 43]
[24 42]
[25 41]
[27 38]
[28 37]
[29 36]
[48 71]
[49 70]
[50 69]
[51 68]
[54 65]
[55 64]
[56 63]
[72 133]
[73 132]
[74 131]
[75 130]
[76 129]
[79 128]
[80 127]
[81 126]
[82 125]
[83 124]
[84 122]
[87 119]
[88 118]
[89 117]
[90 116]
[92 114]
[93 113]
[94 112]
[95 111]
[96 110]
[98 107]
[99 106]
[138 152]
[139 151]
[140 150]
[141 149]
[142 148]
[143 147]
[174 189]
[175 188]
[176 187]
[177 186]
[178 185]
[191 200]
[192 199]
[193 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
