%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:55:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCUAGGCGGCGGCCGCGGCGGCGGAGGCAGCAGCGGCGGCGGCAGUGGCGGCGGCGAAGGUGGCGGCGGCUCGGCCAGUACUCCCGGCCCCCGCCAUUUCGGACUGGGAGCGAGCGCGGCGCAGGCACUGAAGGCGGCGGCGGGGCCAGAGGCUCAGCGGCUCCCAGGUGCGGGAGAGAGGCCUGCUGAAA\
) } def
/len { sequence length } bind def

/coor [
[157.17430115 193.78945923]
[159.97143555 184.75657654]
[151.27359009 172.53579712]
[142.57575989 160.31500244]
[126.24796295 153.90066528]
[124.63629913 135.56419373]
[115.74069214 123.48660278]
[106.84509277 111.40901184]
[102.48089600 120.02107239]
[92.16773224 125.88446045]
[81.09712982 136.00579834]
[76.13283539 151.02799988]
[61.51879883 153.90536499]
[50.44818878 164.02671814]
[39.37757874 174.14805603]
[28.30697250 184.26940918]
[17.23636436 194.39074707]
[12.27206993 209.41294861]
[-2.34196544 212.29031372]
[-13.41257381 222.41165161]
[-18.37686729 237.43385315]
[-32.99090195 240.31121826]
[-44.06151199 250.43255615]
[-48.49195480 266.22189331]
[-64.44593048 270.01696777]
[-75.51136017 257.91372681]
[-70.30507660 242.36296082]
[-54.18285751 239.36195374]
[-43.11224747 229.24061584]
[-38.93980026 214.94235229]
[-23.53391838 211.34104919]
[-12.46331120 201.21969604]
[-8.29086113 186.92144775]
[7.11501884 183.32014465]
[18.18562698 173.19879150]
[29.25623512 163.07745361]
[40.32684326 152.95610046]
[51.39745331 142.83476257]
[55.56990051 128.53651428]
[70.97578430 124.93519592]
[82.04638672 114.81385040]
[79.25485992 100.07589722]
[65.24969482 94.70417786]
[51.24452972 89.33245087]
[37.15378571 84.18940735]
[22.98119545 79.27639771]
[8.80860519 74.36338806]
[-6.76457024 77.15386200]
[-16.25556755 65.67474365]
[-30.42815971 60.76173401]
[-46.00133514 63.55221176]
[-55.49233246 52.07309341]
[-69.66492462 47.16007996]
[-85.23809814 49.95056152]
[-94.72909546 38.47143936]
[-108.90168762 33.55842972]
[-124.89510345 37.18371582]
[-135.83126831 24.96355057]
[-130.45997620 9.46899128]
[-114.30677795 6.63951159]
[-103.98867798 19.38583946]
[-89.81608582 24.29884911]
[-75.25662994 21.15695763]
[-64.75191498 32.98749161]
[-50.57932281 37.90050125]
[-36.01986313 34.75860977]
[-25.51514816 46.58914185]
[-11.34255791 51.50215530]
[3.21689963 48.36026382]
[13.72161674 60.19079590]
[27.89420700 65.10380554]
[42.06679916 70.01681519]
[46.69075775 68.76785278]
[52.14796829 70.42111206]
[56.61624908 75.32729340]
[70.62141418 80.69901276]
[84.62657928 86.07073212]
[72.48278046 77.26572418]
[69.37826538 62.59050751]
[76.91589355 49.62192917]
[91.20398712 45.05569077]
[104.86555481 51.24935532]
[110.84710693 65.00511932]
[106.05905151 79.22242737]
[114.35449982 66.72500610]
[122.64994812 54.22758484]
[130.94538879 41.73016357]
[133.08918762 32.83489227]
[139.47895813 29.09835243]
[147.97673035 16.73761177]
[149.41886902 0.98226875]
[163.00500488 -5.12231112]
[171.50277710 -17.48305130]
[180.00054932 -29.84379196]
[188.49832153 -42.20453262]
[196.99609375 -54.56527328]
[197.89874268 -61.13957214]
[201.45915222 -65.59354401]
[205.97708130 -67.18389130]
[214.87268066 -79.26148224]
[223.76829529 -91.33907318]
[232.66389465 -103.41666412]
[241.55949402 -115.49425507]
[242.87477112 -135.59980774]
[260.88812256 -142.60459900]
[269.38589478 -154.96534729]
[277.88366699 -167.32608032]
[279.32577515 -183.08142090]
[292.91192627 -189.18600464]
[293.92590332 -207.56521606]
[310.03625488 -214.50762939]
[318.33169556 -227.00505066]
[318.81372070 -243.39710999]
[333.37704468 -250.93644714]
[347.04019165 -241.86721802]
[345.74765015 -225.51908875]
[330.82913208 -218.70959473]
[322.53366089 -206.21217346]
[324.62063599 -194.28736877]
[317.79895020 -183.80447388]
[305.27267456 -180.68823242]
[304.43835449 -165.81701660]
[290.24438477 -158.82830811]
[281.74661255 -146.46757507]
[273.24887085 -134.10682678]
[276.00836182 -124.24898529]
[272.81146240 -114.29311371]
[264.48620605 -107.60925293]
[253.63708496 -106.59865570]
[244.74148560 -94.52106476]
[235.84588623 -82.44346619]
[226.95027161 -70.36587524]
[218.05467224 -58.28828812]
[209.35682678 -46.06750107]
[200.85905457 -33.70676041]
[192.36129761 -21.34602165]
[183.86352539 -8.98528099]
[175.36575317 3.37545896]
[174.53143311 18.24667931]
[160.33747864 25.23538208]
[151.83970642 37.59612274]
[143.44281006 50.02561569]
[135.14736938 62.52303696]
[126.85192108 75.02045441]
[118.55647278 87.51787567]
[118.92268372 102.51340485]
[127.81828308 114.59099579]
[136.71389771 126.66858673]
[149.33497620 129.37544250]
[156.49426270 139.63075256]
[154.79653931 151.61717224]
[163.49438477 163.83795166]
[172.19221497 176.05874634]
[192.18840027 183.73646545]
[193.32843018 204.33583069]
[202.61244202 216.11747742]
[211.89645386 227.89912415]
[221.18046570 239.68077087]
[230.46447754 251.46240234]
[239.74848938 263.24404907]
[249.03250122 275.02569580]
[258.88055420 286.34011841]
[269.26916504 297.16030884]
[279.65774536 307.98052979]
[290.04635620 318.80072021]
[300.43496704 329.62094116]
[316.23910522 329.69186401]
[327.30465698 340.97586060]
[327.06665039 356.77838135]
[315.66625977 367.72399902]
[299.86718750 367.31893921]
[289.04269409 355.80346680]
[289.61477661 340.00952148]
[279.22616577 329.18933105]
[268.83755493 318.36911011]
[258.44894409 307.54891968]
[248.06033325 296.72872925]
[246.57273865 311.65475464]
[235.06262207 321.27334595]
[220.10968018 320.08602905]
[210.26171875 308.77154541]
[211.14828491 293.79776001]
[222.26255798 283.72439575]
[237.25085449 284.30969238]
[227.96684265 272.52807617]
[218.68283081 260.74642944]
[209.39881897 248.96478271]
[200.11480713 237.18313599]
[190.83079529 225.40148926]
[181.54678345 213.61984253]
[172.65078735 214.02398682]
[164.44529724 210.22349548]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 153]
[3 152]
[4 151]
[6 148]
[7 147]
[8 146]
[10 41]
[11 40]
[13 38]
[14 37]
[15 36]
[16 35]
[17 34]
[19 32]
[20 31]
[22 29]
[23 28]
[42 77]
[43 76]
[44 75]
[45 72]
[46 71]
[47 70]
[49 68]
[50 67]
[52 65]
[53 64]
[55 62]
[56 61]
[84 145]
[85 144]
[86 143]
[87 142]
[89 141]
[90 140]
[92 138]
[93 137]
[94 136]
[95 135]
[96 134]
[99 133]
[100 132]
[101 131]
[102 130]
[103 129]
[105 125]
[106 124]
[107 123]
[109 121]
[111 118]
[112 117]
[155 190]
[156 189]
[157 188]
[158 187]
[159 186]
[160 185]
[161 184]
[162 177]
[163 176]
[164 175]
[165 174]
[166 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
