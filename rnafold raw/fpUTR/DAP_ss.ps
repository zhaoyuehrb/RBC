%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:26:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCGGCUGCGCCACGUCGGCGCGCGGCGGCCGCGCCCCCUUAACGGCAGUGGCACUCACCCGGCUCGCGCGGCCCCGGCGCCCCACGCGCGCGCGUCGUUCUCCCGCCCGCUCGCUCCCCGGCGCUCACACCUGAGCUCACUCGCGCACGCCCGCCCGGCCCGAGAACCGCGCCGCCGCCUCGGCCCCGCGGAAGCCCCGCCGCGUC\
) } def
/len { sequence length } bind def

/coor [
[-285.93283081 623.77124023]
[-287.89965820 638.64172363]
[-296.47518921 650.94860840]
[-309.74435425 657.94354248]
[-324.74386597 658.06439209]
[-338.12402344 651.28411865]
[-346.89669800 639.11694336]
[-349.10281372 624.27984619]
[-355.66931152 637.76617432]
[-362.23583984 651.25250244]
[-368.80236816 664.73883057]
[-375.36886597 678.22515869]
[-371.51586914 693.79864502]
[-381.40325928 706.43267822]
[-397.44631958 706.43548584]
[-407.33816528 693.80493164]
[-403.49063110 678.23004150]
[-388.85519409 671.65863037]
[-382.28866577 658.17230225]
[-375.72216797 644.68597412]
[-369.15563965 631.19964600]
[-362.58914185 617.71331787]
[-357.16430664 603.72863770]
[-352.91854858 589.34210205]
[-348.67279053 574.95550537]
[-344.42706299 560.56890869]
[-340.18130493 546.18231201]
[-335.93554688 531.79577637]
[-346.77972412 521.43218994]
[-360.95922852 526.32519531]
[-375.13870239 531.21826172]
[-389.31820679 536.11126709]
[-403.49771118 541.00433350]
[-417.63986206 546.00433350]
[-431.74383545 551.11096191]
[-445.84780884 556.21759033]
[-450.02038574 571.16314697]
[-462.20169067 580.77539062]
[-477.70782471 581.35815430]
[-490.57632446 572.68743896]
[-495.85900879 558.09729004]
[-491.52456665 543.19787598]
[-479.23965454 533.71838379]
[-463.72811890 533.30383301]
[-450.95443726 542.11358643]
[-436.85046387 537.00695801]
[-422.74649048 531.90032959]
[-417.52621460 526.66613770]
[-408.39074707 526.82482910]
[-394.21124268 521.93176270]
[-380.03176880 517.03875732]
[-365.85226440 512.14569092]
[-351.67276001 507.25265503]
[-350.97250366 499.41760254]
[-348.45822144 492.14343262]
[-344.35528564 485.83346558]
[-338.97454834 480.81652832]
[-332.68978882 477.33007812]
[-325.91275024 475.50958252]
[-319.06628418 475.38455200]
[-312.55816650 476.88116455]
[-306.75686646 479.83142090]
[-296.31167603 469.06582642]
[-285.86648560 458.30023193]
[-275.42129517 447.53463745]
[-265.13986206 436.61254883]
[-255.02459717 425.53637695]
[-244.90931702 414.46023560]
[-234.79403687 403.38409424]
[-231.92466736 388.76846313]
[-216.90519714 383.79595947]
[-206.78991699 372.71978760]
[-196.67463684 361.64364624]
[-186.55935669 350.56750488]
[-187.48847961 335.74615479]
[-177.38792419 324.36926270]
[-161.83563232 323.49520874]
[-151.72035217 312.41906738]
[-141.60507202 301.34289551]
[-131.48979187 290.26675415]
[-146.48391724 289.84683228]
[-156.89062500 279.04403687]
[-156.75039673 264.04467773]
[-146.14355469 253.43832397]
[-131.14421082 253.29879761]
[-120.34188080 263.70599365]
[-119.92232513 278.69927979]
[-108.84617615 268.58401489]
[-97.77001953 258.46871948]
[-94.95013428 251.63526917]
[-86.44935608 248.28587341]
[-75.22169495 238.33903503]
[-63.99403763 228.39219666]
[-52.76637650 218.44535828]
[-41.53871536 208.49850464]
[-40.36133575 203.86782837]
[-36.26108170 199.92848206]
[-29.81845665 198.42707825]
[-18.29549217 188.82388306]
[-6.77252913 179.22068787]
[4.75043440 169.61749268]
[16.27339745 160.01431274]
[27.79636192 150.41111755]
[28.88434792 135.60058594]
[40.43347168 125.69743347]
[55.96074295 126.93903351]
[67.48370361 117.33583832]
[79.00666809 107.73264313]
[69.25853729 82.83859253]
[90.47573090 52.91118622]
[96.00602722 38.96787643]
[96.26132202 29.83461380]
[101.72657776 24.85677147]
[107.46682739 10.99857903]
[102.68054199 -4.31386852]
[111.78709412 -17.52183533]
[127.80070496 -18.49329758]
[138.43710327 -6.48303509]
[135.53697205 9.29570866]
[121.32501984 16.73883057]
[115.58477020 30.59702301]
[109.94933319 44.49816895]
[104.41904449 58.44147873]
[116.89109039 66.77503204]
[127.65666962 56.32983398]
[138.42225647 45.88463593]
[149.18785095 35.43943787]
[159.95343018 24.99424171]
[163.91368103 9.08046055]
[179.74810791 4.81393099]
[191.16758728 16.58369255]
[186.42475891 32.28202438]
[170.39863586 35.75982666]
[159.63304138 46.20502472]
[148.86746216 56.65022278]
[138.10186768 67.09542084]
[127.33628845 77.54061890]
[130.82171631 84.18154144]
[144.10354614 77.21069336]
[157.38549805 70.24005127]
[164.35594177 83.52210236]
[151.07440186 90.49253082]
[137.79255676 97.46337891]
[141.27798462 104.10430145]
[155.98976135 101.17794800]
[170.70153809 98.25158691]
[179.27243042 84.97321320]
[194.73957825 81.72624207]
[207.92660522 90.43704224]
[211.00987244 105.93765259]
[202.16012573 119.03183746]
[186.62777710 121.95104980]
[173.62789917 112.96337128]
[158.91610718 115.88972473]
[144.20433044 118.81607819]
[122.32315063 132.56979370]
[101.03117371 130.91169739]
[88.60986328 119.25560760]
[77.08689880 128.85879517]
[65.56393433 138.46199036]
[63.98632812 153.95874023]
[52.16360474 163.53358459]
[37.39955521 161.93408203]
[25.87659073 171.53727722]
[14.35362720 181.14045715]
[2.83066320 190.74365234]
[-8.69230080 200.34684753]
[-20.21526337 209.95004272]
[-31.59187317 219.72616577]
[-42.81953430 229.67301941]
[-54.04719543 239.61985779]
[-65.27485657 249.56669617]
[-76.50251770 259.51351929]
[-87.65473938 269.54489136]
[-98.73089600 279.66015625]
[-109.80704498 289.77545166]
[-120.41365051 300.38204956]
[-130.52893066 311.45819092]
[-140.64421082 322.53433228]
[-150.75949097 333.61050415]
[-150.22248840 349.17807007]
[-160.63859558 360.26675415]
[-175.48321533 360.68276978]
[-185.59849548 371.75894165]
[-195.71377563 382.83508301]
[-205.82905579 393.91122437]
[-209.42192078 409.31909180]
[-223.71788025 413.49935913]
[-233.83316040 424.57550049]
[-243.94844055 435.65167236]
[-254.06372070 446.72781372]
[-255.85540771 453.09582520]
[-259.97644043 457.01342773]
[-264.65570068 457.97985840]
[-275.10089111 468.74542236]
[-285.54608154 479.51101685]
[-295.99130249 490.27661133]
[-294.02960205 519.20886230]
[-321.54898071 536.04150391]
[-325.79473877 550.42810059]
[-330.04046631 564.81463623]
[-334.28622437 579.20123291]
[-338.53195190 593.58782959]
[-342.77770996 607.97442627]
[-331.14349365 598.50628662]
[-316.46072388 595.43774414]
[-302.00836182 599.45391846]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 22]
[9 21]
[10 20]
[11 19]
[12 18]
[23 204]
[24 203]
[25 202]
[26 201]
[27 200]
[28 199]
[29 53]
[30 52]
[31 51]
[32 50]
[33 49]
[34 47]
[35 46]
[36 45]
[62 197]
[63 196]
[64 195]
[65 194]
[66 191]
[67 190]
[68 189]
[69 188]
[71 186]
[72 185]
[73 184]
[74 183]
[77 180]
[78 179]
[79 178]
[80 177]
[87 176]
[88 175]
[89 174]
[91 173]
[92 172]
[93 171]
[94 170]
[95 169]
[98 168]
[99 167]
[100 166]
[101 165]
[102 164]
[103 163]
[106 160]
[107 159]
[108 158]
[110 123]
[111 122]
[113 121]
[114 120]
[124 137]
[125 136]
[126 135]
[127 134]
[128 133]
[144 155]
[145 154]
[146 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
