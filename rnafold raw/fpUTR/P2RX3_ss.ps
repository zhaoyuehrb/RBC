%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCUCUUGGAAGCCAGAGUAUCAAGAGCAGAGAAUCUCACUAGGAUUGCAUGGCUUAAAGGGACAGGCUCCCCAUUCCUCCAACCCCUCUAAGCUGCCCCCUCCAGGUCGUGAUCUCGUCUCCCUGUCCUGUAGGACCUCCCUCUCCUGAGGCCACCACUGGGCCCCCUUCUGAGUGUCCCCUGAGCACUCUCUCAGC\
) } def
/len { sequence length } bind def

/coor [
[80.05656433 87.65863800]
[70.49520111 76.10093689]
[60.93384171 64.54323578]
[51.37248230 52.98553848]
[41.81112289 41.42784119]
[32.24976349 29.87014198]
[19.50021362 27.87948227]
[11.77477837 18.04868317]
[12.78897381 5.98909616]
[3.41033363 -5.71736002]
[-5.96830606 -17.42381668]
[-15.43859768 -29.05625153]
[-24.99995804 -40.61395264]
[-35.88095093 -41.01132202]
[-44.56530380 -47.20810318]
[-48.32173157 -56.95839310]
[-46.13350677 -66.95079803]
[-55.32711411 -78.80312347]
[-64.52072144 -90.65544891]
[-76.82328796 -82.58441925]
[-91.03890228 -80.27999878]
[-104.65673065 -83.89164734]
[-115.37512207 -92.54594421]
[-121.49039459 -104.54058075]
[-122.16559601 -117.67432404]
[-117.53710175 -129.64958191]
[-128.30900574 -140.08828735]
[-139.08088684 -150.52697754]
[-154.65754700 -150.45098877]
[-165.43307495 -161.19076538]
[-165.40951538 -176.04118347]
[-176.18141174 -186.47987366]
[-186.95330811 -196.91856384]
[-197.72520447 -207.35725403]
[-206.07366943 -211.08660889]
[-208.58268738 -218.04551697]
[-219.18928528 -228.65211487]
[-234.41857910 -232.93922424]
[-237.94702148 -247.40985107]
[-248.63659668 -257.93283081]
[-259.40850830 -268.37152100]
[-270.18038940 -278.81021118]
[-285.47512817 -282.85757446]
[-289.23043823 -297.27099609]
[-300.00234985 -307.70968628]
[-310.77423096 -318.14837646]
[-329.68450928 -317.12283325]
[-343.11560059 -330.01736450]
[-342.86972046 -348.31542969]
[-353.96420288 -358.41061401]
[-365.05865479 -368.50579834]
[-371.44018555 -370.28878784]
[-375.36785889 -374.41171265]
[-376.33670044 -379.09658813]
[-387.10858154 -389.53527832]
[-397.88049316 -399.97396851]
[-408.65237427 -410.41265869]
[-419.42425537 -420.85134888]
[-434.71902466 -424.89871216]
[-438.47433472 -439.31213379]
[-449.24621582 -449.75082397]
[-460.01812744 -460.18951416]
[-470.79000854 -470.62820435]
[-485.98742676 -468.10928345]
[-499.59494019 -474.94219971]
[-506.48822021 -488.31930542]
[-504.21002197 -503.01446533]
[-514.98193359 -513.45312500]
[-529.28967285 -508.13806152]
[-544.48590088 -509.56579590]
[-557.55328369 -517.45288086]
[-565.89733887 -530.23333740]
[-567.86132812 -545.36956787]
[-563.05529785 -559.85626221]
[-552.43347168 -570.81713867]
[-538.10485840 -576.07580566]
[-522.91442871 -574.58825684]
[-509.87820435 -566.64978027]
[-501.58453369 -553.83654785]
[-499.68017578 -538.69268799]
[-504.54321289 -524.22503662]
[-493.77133179 -513.78637695]
[-479.15496826 -516.52502441]
[-465.56796265 -510.05532837]
[-458.31100464 -496.66912842]
[-460.35131836 -481.40011597]
[-449.57943726 -470.96142578]
[-438.80752563 -460.52273560]
[-428.03564453 -450.08401489]
[-413.51135254 -446.78332520]
[-408.98556519 -431.62322998]
[-398.21368408 -421.18453979]
[-387.44180298 -410.74584961]
[-376.66989136 -400.30715942]
[-365.89801025 -389.86846924]
[-354.96347046 -379.60028076]
[-343.86901855 -369.50506592]
[-332.77453613 -359.40988159]
[-321.75512695 -362.40600586]
[-310.54269409 -359.67852783]
[-301.95404053 -351.79339600]
[-298.20410156 -340.62701416]
[-300.33554077 -328.92028809]
[-289.56365967 -318.48159790]
[-278.79174805 -308.04290771]
[-264.26748657 -304.74218750]
[-259.74169922 -289.58212280]
[-248.96980286 -279.14340210]
[-238.19790649 -268.70471191]
[-231.20045471 -266.30532837]
[-227.34042358 -258.01644897]
[-212.86978149 -254.48802185]
[-208.58268738 -239.25872803]
[-197.97608948 -228.65211487]
[-187.28649902 -218.12915039]
[-176.51461792 -207.69046021]
[-165.74272156 -197.25177002]
[-154.97082520 -186.81307983]
[-140.12846375 -187.30308533]
[-129.05552673 -176.87020874]
[-128.64219666 -161.29887390]
[-117.87030792 -150.86016846]
[-107.09841156 -140.42147827]
[-94.73197174 -146.06015015]
[-80.57169342 -145.85580444]
[-67.34703064 -139.36335754]
[-57.81096268 -127.39458466]
[-45.02135849 -135.23205566]
[-32.23175812 -143.06953430]
[-19.44215393 -150.90701294]
[-12.09693241 -165.56921387]
[4.28728056 -166.26892090]
[12.85581112 -152.28634644]
[4.79409027 -138.00556946]
[-11.60467625 -138.11741638]
[-24.39427757 -130.27993774]
[-37.18387985 -122.44245911]
[-49.97348404 -114.60498047]
[-52.66839600 -99.84905243]
[-43.47478867 -87.99672699]
[-34.28118134 -76.14440155]
[-15.89390373 -70.17822266]
[-13.44225883 -50.17531204]
[-3.88089943 -38.61761093]
[2.81100345 -35.46484375]
[5.73815012 -26.80245590]
[15.11678982 -15.09599972]
[24.49542999 -3.38954353]
[41.16312027 2.08964658]
[43.80746078 20.30878067]
[53.36882019 31.86647987]
[62.93018341 43.42417908]
[72.49153900 54.98187637]
[82.05290222 66.53957367]
[91.61425781 78.09727478]
[107.99945831 73.07668304]
[126.48631287 80.78865814]
[137.33992004 101.00595093]
[150.00483704 109.04335022]
[162.66975403 117.08074951]
[175.33468628 125.11815643]
[191.13240051 125.97983551]
[197.73254395 139.33227539]
[210.39746094 147.36967468]
[225.24736023 142.46919250]
[239.75376892 148.30851746]
[247.06723022 162.13050842]
[243.73454285 177.40882874]
[231.32929993 186.92953491]
[215.70886230 186.19723511]
[204.24874878 175.55769348]
[202.36006165 160.03459167]
[189.69514465 151.99719238]
[174.80329895 151.71038818]
[167.29727173 137.78306580]
[154.63235474 129.74566650]
[141.96743774 121.70826721]
[129.30252075 113.67086792]
[123.34043884 118.22098541]
[132.44047546 130.14529419]
[120.51600647 139.24514771]
[111.41627502 127.32122040]
[105.45419312 131.87133789]
[109.86479187 146.20823669]
[114.27539825 160.54512024]
[118.68600464 174.88201904]
[123.09661102 189.21891785]
[137.17941284 196.39178467]
[141.98596191 211.44743347]
[134.66461182 225.45362854]
[119.55897522 230.10072327]
[105.63098145 222.63169861]
[101.14384460 207.47776794]
[108.75971222 193.62951660]
[104.34911346 179.29263306]
[99.93850708 164.95573425]
[95.52790070 150.61883545]
[91.11729431 136.28193665]
[75.02533722 121.13922119]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 155]
[2 154]
[3 153]
[4 152]
[5 151]
[6 150]
[9 148]
[10 147]
[11 146]
[12 144]
[13 143]
[17 141]
[18 140]
[19 139]
[26 123]
[27 122]
[28 121]
[31 118]
[32 117]
[33 116]
[34 115]
[36 114]
[37 113]
[39 111]
[40 109]
[41 108]
[42 107]
[44 105]
[45 104]
[46 103]
[49 98]
[50 97]
[51 96]
[54 95]
[55 94]
[56 93]
[57 92]
[58 91]
[60 89]
[61 88]
[62 87]
[63 86]
[67 82]
[68 81]
[127 138]
[128 137]
[129 136]
[130 135]
[158 178]
[159 177]
[160 176]
[161 175]
[163 173]
[164 172]
[183 198]
[184 197]
[185 196]
[186 195]
[187 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
