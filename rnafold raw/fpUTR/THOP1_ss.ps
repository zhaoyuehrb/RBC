%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:01:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGGGGCGCGUGCGUCCUGCCCUCCCUGUGCGCGCGCCGCCCCAGCAUGCCCCGGGAGCGCGGGCGGCGGGCCCCUUGGUCCUCAGGCGGCCGUGGCGGCGGUGGCGGCGGUUGGGCCGAGGCAGGCGGCCUCAGUGGCCGAGGUGGCUGGACGCGUAGCAGGUGGAAGGAGGGAGGGAGCCGCAGGCGCAGACCCACCCGCC\
) } def
/len { sequence length } bind def

/coor [
[178.91084290 687.81677246]
[185.60218811 673.99206543]
[198.31840515 665.37854004]
[197.16455078 650.42297363]
[196.01069641 635.46740723]
[194.51170349 620.54248047]
[192.66838074 605.65618896]
[190.82505798 590.76989746]
[188.98173523 575.88360596]
[179.73904419 564.20361328]
[185.72181702 549.55718994]
[183.87849426 534.67089844]
[182.03517151 519.78460693]
[180.19184875 504.89828491]
[178.11950684 490.04211426]
[175.81863403 475.21963501]
[173.51776123 460.39715576]
[171.21688843 445.57467651]
[161.61889648 434.18487549]
[167.14779663 419.36117554]
[164.84692383 404.53869629]
[162.54605103 389.71621704]
[160.24516296 374.89373779]
[157.94429016 360.07125854]
[155.64341736 345.24874878]
[152.66044617 330.54837036]
[149.00173950 316.00140381]
[145.34303284 301.45443726]
[141.57243347 286.93609619]
[137.69013977 272.44720459]
[133.80786133 257.95831299]
[129.92556763 243.46943665]
[126.04328156 228.98054504]
[122.16099548 214.49166870]
[118.16726685 200.03309631]
[113.84063721 185.67063904]
[109.29334259 171.37651062]
[104.74605560 157.08238220]
[100.19876099 142.78825378]
[95.65147400 128.49412537]
[91.10418701 114.19998932]
[79.71311188 104.44071198]
[64.89062500 102.13983917]
[55.92480087 103.91639709]
[49.85831833 99.68771362]
[35.07302475 97.15885162]
[26.08090401 98.79712677]
[20.08025932 94.47552490]
[5.33566236 91.71928406]
[-9.40893459 88.96304321]
[-24.15353012 86.20680237]
[-38.89812851 83.45055389]
[-53.66350937 80.80792999]
[-68.44879913 78.27906799]
[-83.63391876 84.47133636]
[-96.42148590 74.20439148]
[-93.65673828 58.03997421]
[-78.18382263 52.60666275]
[-65.91994476 63.49377823]
[-51.13465118 66.02263641]
[-44.00759888 64.05056000]
[-36.14188385 68.70596313]
[-21.39728737 71.46220398]
[-6.65269136 74.21844482]
[8.09190559 76.97468567]
[22.83650208 79.73093414]
[37.60188293 82.37355804]
[52.38717651 84.90242004]
[67.19150543 87.31735992]
[82.01398468 89.61823273]
[92.94218445 79.34329224]
[91.55815887 64.40727997]
[90.17413330 49.47126770]
[88.56027222 34.55833817]
[86.71694183 19.67202950]
[84.87361908 4.78572273]
[83.03029633 -10.10058498]
[81.18697357 -24.98689270]
[79.34365082 -39.87319946]
[77.50032043 -54.75950623]
[75.65699768 -69.64581299]
[73.81367493 -84.53211975]
[70.65942383 -88.70513916]
[69.53733826 -93.21945190]
[70.23645020 -97.24246979]
[72.24543762 -100.14650726]
[71.09158325 -115.10205841]
[69.93772125 -130.05761719]
[61.16178894 -143.22171021]
[67.89713287 -156.50645447]
[66.74327850 -171.46200562]
[65.58942413 -186.41757202]
[64.43556213 -201.37312317]
[63.28170776 -216.32867432]
[54.50577164 -229.49278259]
[61.24111938 -242.77751160]
[60.08726120 -257.73306274]
[50.37815857 -270.94918823]
[57.21595383 -285.85476685]
[73.56651306 -287.11624146]
[82.60977936 -273.43591309]
[75.04281616 -258.88693237]
[76.19667053 -243.93138123]
[84.89007568 -231.83699036]
[78.23726654 -217.48252869]
[79.39112091 -202.52697754]
[80.54497528 -187.57142639]
[81.69882965 -172.61585999]
[82.85269165 -157.66030884]
[91.54609680 -145.56593323]
[84.89328003 -131.21147156]
[86.04713440 -116.25591278]
[87.20098877 -101.30036163]
[88.69998169 -86.37545013]
[90.54330444 -71.48914337]
[92.38663483 -56.60283279]
[94.22995758 -41.71652603]
[96.07328033 -26.83021736]
[97.91660309 -11.94390965]
[99.75992584 2.94239831]
[101.60325623 17.82870674]
[103.44657898 32.71501541]
[106.59979248 36.30872345]
[107.52532196 41.92301559]
[105.11014557 48.08724213]
[106.49417114 63.02325439]
[107.87819672 77.95926666]
[121.40702057 84.43777466]
[133.91105652 76.15229797]
[146.41508484 67.86682892]
[158.91912842 59.58135223]
[163.50584412 44.20794296]
[178.43829346 38.34269333]
[192.26159668 46.48492050]
[194.37168884 62.38859940]
[183.14988708 73.85379791]
[167.20460510 72.08538818]
[154.70056152 80.37086487]
[142.19653320 88.65633392]
[129.69248962 96.94181061]
[122.63349152 106.63604736]
[113.54536438 110.79853821]
[105.39831543 109.65269470]
[109.94560242 123.94683075]
[114.49289703 138.24095154]
[119.04018402 152.53509521]
[123.58747101 166.82922363]
[128.13476562 181.12335205]
[132.76164246 185.85861206]
[134.09768677 191.38960266]
[132.59465027 195.92816162]
[137.95594788 203.33076477]
[136.64988708 210.60937500]
[140.53216553 225.09826660]
[144.41445923 239.58715820]
[148.29673767 254.07603455]
[152.17903137 268.56494141]
[156.06130981 283.05380249]
[161.30798340 290.53811646]
[159.88998413 297.79574585]
[163.54869080 312.34271240]
[167.20739746 326.88964844]
[175.84635925 314.62716675]
[190.60087585 311.92456055]
[203.02540588 320.32879639]
[206.00807190 335.02926636]
[197.84159851 347.61132812]
[183.20050049 350.87298584]
[170.46589661 342.94787598]
[172.76676941 357.77038574]
[175.06765747 372.59286499]
[177.36853027 387.41534424]
[179.66940308 402.23782349]
[181.97027588 417.06030273]
[191.73283386 429.51031494]
[186.03936768 443.27380371]
[188.34024048 458.09628296]
[190.64111328 472.91876221]
[192.94198608 487.74124146]
[196.78775024 493.13021851]
[197.25958252 498.80068970]
[195.07815552 503.05496216]
[196.92147827 517.94128418]
[198.76480103 532.82757568]
[200.60813904 547.71386719]
[209.98266602 560.45861816]
[203.86804199 574.04028320]
[205.71136475 588.92657471]
[207.55468750 603.81286621]
[209.39801025 618.69915771]
[212.55227661 622.87219238]
[213.67434692 627.38653564]
[212.97525024 631.40954590]
[210.96624756 634.31353760]
[212.12011719 649.26910400]
[213.27397156 664.22467041]
[227.16094971 670.78570557]
[235.89369202 683.42041016]
[237.12315369 698.72998047]
[230.51860046 712.59631348]
[217.85662842 721.28942871]
[202.54324341 722.47088623]
[188.69767761 715.82293701]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 196]
[4 195]
[5 194]
[6 190]
[7 189]
[8 188]
[9 187]
[11 185]
[12 184]
[13 183]
[14 182]
[15 179]
[16 178]
[17 177]
[18 176]
[20 174]
[21 173]
[22 172]
[23 171]
[24 170]
[25 169]
[26 162]
[27 161]
[28 160]
[29 158]
[30 157]
[31 156]
[32 155]
[33 154]
[34 153]
[35 151]
[36 148]
[37 147]
[38 146]
[39 145]
[40 144]
[41 143]
[42 70]
[43 69]
[45 68]
[46 67]
[48 66]
[49 65]
[50 64]
[51 63]
[52 62]
[53 60]
[54 59]
[71 127]
[72 126]
[73 125]
[74 122]
[75 121]
[76 120]
[77 119]
[78 118]
[79 117]
[80 116]
[81 115]
[82 114]
[86 113]
[87 112]
[88 111]
[90 109]
[91 108]
[92 107]
[93 106]
[94 105]
[96 103]
[97 102]
[128 140]
[129 139]
[130 138]
[131 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
