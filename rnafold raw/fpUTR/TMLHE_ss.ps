%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:23:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCCUACAGGCUCUCCGCUGGGCCCGAGCGGGCUGGGGGAGGGGAGCGUGGGGCCGACAGUUUUGGGGGUGAAAAGGCAAAAGGCGGGUGAAAGGCUGCCUCCCGAGACUCUCCUUGCUUGGAAUUCUGCCCACUCUGCGGAGUUAGCAGUCACGACCUCCAGCACAGG\
) } def
/len { sequence length } bind def

/coor [
[99.39696503 133.01188660]
[85.86170959 129.83717346]
[74.83315277 121.37236786]
[61.49302292 128.23100281]
[48.15288925 135.08963013]
[34.81275940 141.94827271]
[21.47262573 148.80690002]
[15.24301147 155.53900146]
[7.82562590 155.66647339]
[-5.63754749 162.28031921]
[-14.61226749 175.30970764]
[-29.44712067 173.97688293]
[-42.91029358 180.59072876]
[-56.37346649 187.20457458]
[-69.83663940 193.81842041]
[-83.29981232 200.43226624]
[-96.76298523 207.04611206]
[-110.22615814 213.65995789]
[-120.63970947 230.89208984]
[-139.84667969 228.85449219]
[-153.05931091 235.95562744]
[-161.55218506 249.30410767]
[-176.42582703 248.51396179]
[-189.63845825 255.61509705]
[-202.85110474 262.71624756]
[-216.06375122 269.81738281]
[-229.27638245 276.91851807]
[-237.43959045 291.14151001]
[-253.83714294 290.91290283]
[-261.60064697 276.46783447]
[-252.74368286 262.66616821]
[-236.37751770 263.70587158]
[-223.16488647 256.60473633]
[-209.95223999 249.50360107]
[-196.73959351 242.40246582]
[-183.52696228 235.30133057]
[-175.97914124 222.46076965]
[-160.16046143 222.74299622]
[-146.94781494 215.64186096]
[-144.88082886 205.58885193]
[-137.45191956 198.19210815]
[-126.95866394 196.08169556]
[-116.84000397 200.19677734]
[-103.37683105 193.58293152]
[-89.91365814 186.96908569]
[-76.45048523 180.35523987]
[-62.98731232 173.74139404]
[-49.52413940 167.12754822]
[-36.06096649 160.51370239]
[-28.04922295 147.95738220]
[-12.25139332 148.81713867]
[1.21178007 142.20329285]
[14.61399174 135.46676636]
[27.95412445 128.60813904]
[41.29425812 121.74950409]
[54.63438797 114.89086914]
[67.97451782 108.03223419]
[67.38187408 94.88081360]
[71.97483826 82.54324341]
[81.02321625 72.98093414]
[93.08851624 67.71409607]
[93.36248016 52.71659851]
[93.63644409 37.71910095]
[93.91040039 22.72160339]
[94.18436432 7.72410488]
[94.45832062 -7.27339268]
[94.73228455 -22.27089119]
[95.00624847 -37.26839066]
[95.28020477 -52.26588821]
[75.46595001 -48.98826599]
[54.15616989 -63.63401031]
[48.54271698 -77.54404449]
[33.90110397 -83.49373627]
[27.83204079 -98.08626556]
[33.93619537 -112.66415405]
[48.59207916 -118.57859802]
[63.10461426 -112.32066345]
[68.86377716 -97.60306549]
[62.45275497 -83.15750122]
[68.06620789 -69.24745941]
[75.55494690 -69.65821838]
[82.33196259 -83.04000092]
[90.53244019 -70.47973633]
[98.02117920 -70.89049530]
[102.07959747 -85.33103943]
[106.13802338 -99.77157593]
[110.19644165 -114.21212006]
[114.25485992 -128.65266418]
[118.31328583 -143.09320068]
[108.59031677 -155.18632507]
[107.86605072 -170.68647766]
[116.41899109 -183.63356018]
[130.96034241 -189.04914856]
[145.89868164 -184.85081482]
[155.48988342 -172.65293884]
[156.04595947 -157.14582825]
[147.35307312 -144.29229736]
[132.75382996 -139.03477478]
[128.69540405 -124.59423828]
[124.63698578 -110.15370178]
[120.57855988 -95.71315765]
[116.52014160 -81.27262115]
[112.46172333 -66.83207703]
[110.27770233 -51.99192429]
[110.00374603 -36.99442673]
[109.72978210 -21.99692917]
[109.45581818 -6.99943209]
[109.18186188 7.99806595]
[108.90789795 22.99556351]
[108.63394165 37.99306107]
[108.35997772 52.99055862]
[108.08601379 67.98806000]
[123.28219604 76.58872986]
[131.96675110 91.73712921]
[131.71075439 109.19651031]
[144.79150391 116.53778076]
[157.87223816 123.87904358]
[171.01948547 131.10055542]
[184.23211670 138.20169067]
[197.44476318 145.30282593]
[210.65740967 152.40396118]
[219.73478699 153.71931458]
[224.04476929 159.75735474]
[237.12551880 167.09863281]
[250.20625305 174.43989563]
[268.40274048 164.60598755]
[288.71789551 167.67480469]
[303.00430298 182.24757385]
[305.63354492 202.34576416]
[319.32928467 208.46348572]
[333.02502441 214.58122253]
[346.72076416 220.69895935]
[361.32919312 215.29231262]
[375.13146973 221.69166565]
[380.19586182 235.65188599]
[393.89160156 241.76962280]
[407.58734131 247.88734436]
[421.28308105 254.00508118]
[437.52969360 251.77349854]
[447.37048340 264.89181519]
[440.68209839 279.86505127]
[424.34500122 281.29000854]
[415.16534424 267.70083618]
[401.46960449 261.58309937]
[387.77386475 255.46536255]
[374.07812500 249.34762573]
[360.30139160 254.89173889]
[346.32479858 248.88259888]
[340.60302734 234.39469910]
[326.90728760 228.27696228]
[313.21154785 222.15924072]
[299.51580811 216.04150391]
[292.50497437 222.82939148]
[283.74356079 227.19325256]
[274.04357910 228.70864868]
[264.31008911 227.21603394]
[255.45681763 222.83743286]
[248.32029724 215.96661377]
[243.58085632 207.23371887]
[241.69781494 197.44755554]
[242.86499023 187.52062988]
[229.78424072 180.17936707]
[216.70350647 172.83810425]
[203.55627441 165.61659241]
[190.34362793 158.51545715]
[177.13098145 151.41432190]
[163.91835022 144.31318665]
[156.51055908 143.91490173]
[150.53097534 136.95979309]
[137.45022583 129.61851501]
[124.36949158 122.27725220]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 57]
[4 56]
[5 55]
[6 54]
[7 53]
[9 52]
[10 51]
[12 49]
[13 48]
[14 47]
[15 46]
[16 45]
[17 44]
[18 43]
[20 39]
[21 38]
[23 36]
[24 35]
[25 34]
[26 33]
[27 32]
[61 112]
[62 111]
[63 110]
[64 109]
[65 108]
[66 107]
[67 106]
[68 105]
[69 104]
[71 80]
[72 79]
[84 103]
[85 102]
[86 101]
[87 100]
[88 99]
[89 98]
[115 171]
[116 170]
[117 169]
[118 167]
[119 166]
[120 165]
[121 164]
[123 163]
[124 162]
[125 161]
[129 152]
[130 151]
[131 150]
[132 149]
[135 146]
[136 145]
[137 144]
[138 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
