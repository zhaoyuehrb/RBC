%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:14:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCCUUGGCCCCGCCCUCGCGCCAUCUUGGGGGCCCUGGAGGCGGCGCCGCGGAGGACGGAGCGGAAGUGCUCGCUGCAGCUUCCCGGAGCCGGAGCGCAGCGCCUGCGGCCGCCCGUGCCCCGCCGUCCUCCUUCCCGCGGCCGUGAGGGAGACCGCGGCUCGGCCGUAGCGGAGCUGCGAGUUACAGA\
) } def
/len { sequence length } bind def

/coor [
[100.36055756 130.32339478]
[93.11611176 132.26454163]
[90.18975830 146.97631836]
[87.26340485 161.68809509]
[90.10350800 178.40246582]
[74.82855988 185.75857544]
[63.53140259 173.11694336]
[72.55162811 158.76174927]
[75.47798157 144.04997253]
[78.40433502 129.33818054]
[71.88806915 118.57314301]
[69.86814880 107.10114288]
[71.98494720 96.59471893]
[77.31714630 88.38175964]
[84.57623291 83.27782440]
[78.61000824 69.51541138]
[72.64378357 55.75299454]
[66.67755127 41.99057770]
[60.71132660 28.22815895]
[54.74510193 14.46574116]
[48.77887344 0.70332348]
[42.81264496 -13.05909443]
[36.73402786 -26.77223969]
[30.54342079 -40.43519592]
[22.81743622 -27.57793617]
[7.97120571 -25.43564034]
[-3.07449317 -35.58416367]
[-2.19452596 -50.55833054]
[9.96380997 -59.34325409]
[24.45653343 -55.47714615]
[12.52238655 -65.86399841]
[15.51970768 -80.45390320]
[10.46635914 -94.57706451]
[5.41301155 -108.70022583]
[-6.13604164 -111.60066986]
[-14.75758457 -119.63929749]
[-18.38351250 -130.72933960]
[-16.22096825 -142.07283020]
[-8.92239571 -150.86633301]
[-13.51094055 -165.14727783]
[-18.09948540 -179.42822266]
[-22.68803215 -193.70915222]
[-27.27657700 -207.99009705]
[-31.98180199 -222.23301697]
[-36.80339432 -236.43696594]
[-41.62498856 -250.64093018]
[-46.44657898 -264.84487915]
[-51.26816940 -279.04882812]
[-54.66275406 -281.81454468]
[-56.77821732 -285.18127441]
[-57.58305359 -288.66983032]
[-57.20566559 -291.84054565]
[-55.90737534 -294.34225464]
[-59.78966141 -308.83111572]
[-65.04160309 -316.32485962]
[-63.61486435 -323.58886719]
[-74.47345734 -335.09545898]
[-70.06050873 -349.32131958]
[-73.70520782 -363.87179565]
[-77.34991455 -378.42227173]
[-80.99461365 -392.97271729]
[-86.12324524 -400.55139160]
[-84.57784271 -407.79107666]
[-87.98398590 -422.39923096]
[-91.39012909 -437.00738525]
[-94.79627228 -451.61553955]
[-107.93429565 -459.98394775]
[-111.18051147 -474.84722900]
[-103.12155914 -487.32073975]
[-106.52770233 -501.92889404]
[-109.93384552 -516.53704834]
[-123.07186890 -524.90545654]
[-126.31808472 -539.76873779]
[-118.25912476 -552.24224854]
[-121.66527557 -566.85040283]
[-125.07141876 -581.45855713]
[-128.47755432 -596.06671143]
[-131.88369751 -610.67486572]
[-135.28984070 -625.28302002]
[-140.29379272 -632.94458008]
[-138.63014221 -640.15802002]
[-141.79681396 -654.81994629]
[-144.96348572 -669.48187256]
[-148.13015747 -684.14379883]
[-151.29682922 -698.80572510]
[-165.54679871 -704.94726562]
[-173.43641663 -718.30889893]
[-171.93194580 -733.75286865]
[-161.61190796 -745.34063721]
[-146.44454956 -748.61645508]
[-132.26205444 -742.32073975]
[-124.51785278 -728.87426758]
[-126.18976593 -713.44757080]
[-136.63490295 -701.97241211]
[-133.46823120 -687.31048584]
[-130.30155945 -672.64855957]
[-127.13488770 -657.98663330]
[-123.96820831 -643.32470703]
[-120.68169403 -628.68914795]
[-117.27555084 -614.08099365]
[-113.86940765 -599.47283936]
[-110.46326447 -584.86468506]
[-107.05712128 -570.25653076]
[-103.65097046 -555.64837646]
[-90.90621948 -548.02563477]
[-87.24380493 -533.25939941]
[-95.32569122 -519.94317627]
[-91.91954803 -505.33505249]
[-88.51340485 -490.72689819]
[-75.76864624 -483.10409546]
[-72.10623169 -468.33789062]
[-80.18811798 -455.02169800]
[-76.78197479 -440.41354370]
[-73.37583160 -425.80538940]
[-69.96968842 -411.19723511]
[-66.44414520 -396.61743164]
[-62.79944229 -382.06695557]
[-59.15473938 -367.51651001]
[-55.51003647 -352.96603394]
[-44.91213989 -342.50018311]
[-49.06439590 -327.23358154]
[-45.30077362 -312.71340942]
[-41.41848755 -298.22451782]
[-37.06422043 -283.87042236]
[-32.24262619 -269.66647339]
[-27.42103577 -255.46250916]
[-22.59944344 -241.25856018]
[-17.77785110 -227.05461121]
[-12.64244938 -221.72273254]
[-12.99563694 -212.57864380]
[-8.40709114 -198.29769897]
[-3.81854606 -184.01676941]
[0.76999933 -169.73582458]
[5.35854483 -155.45487976]
[22.10985565 -148.10070801]
[28.28731537 -130.54217529]
[19.53617287 -113.75357056]
[24.58952141 -99.63040924]
[29.64286804 -85.50725555]
[41.21556473 -76.13058472]
[38.57969666 -60.53049469]
[44.20637894 -46.62580490]
[50.39698410 -32.96284485]
[56.03027344 -28.15999603]
[56.57506561 -19.02532196]
[62.54129028 -5.26290369]
[68.50751495 8.49951363]
[74.47374725 22.26193047]
[80.43997192 36.02434921]
[86.40619659 49.78676605]
[92.37242889 63.54918289]
[98.33865356 77.31159973]
[124.15719604 82.91329956]
[133.37149048 114.60977936]
[143.26167297 125.88738251]
[153.15185547 137.16497803]
[163.13398743 148.36128235]
[173.20736694 159.47555542]
[183.28074646 170.58981323]
[193.35414124 181.70408630]
[203.42752075 192.81834412]
[213.50090027 203.93261719]
[223.57427979 215.04689026]
[233.64767456 226.16114807]
[248.64826965 231.19035339]
[251.46241760 245.81669617]
[261.53579712 256.93096924]
[277.30584717 261.42962646]
[281.03189087 277.39987183]
[268.88092041 288.41287231]
[253.35281372 283.13937378]
[250.42153931 267.00433350]
[240.34814453 255.89007568]
[226.06806946 251.65583801]
[222.53340149 236.23454285]
[212.46002197 225.12026978]
[202.38664246 214.00599670]
[192.31324768 202.89173889]
[182.23986816 191.77746582]
[172.16648865 180.66320801]
[162.09309387 169.54893494]
[152.01971436 158.43466187]
[145.18727112 155.58529663]
[141.87426758 147.05516052]
[131.98406982 135.77757263]
[122.09388733 124.49996948]
[114.84944916 126.44111633]
[118.73173523 140.93000793]
[126.90116119 153.51016235]
[117.46106720 165.16711426]
[103.45755768 159.79107666]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 10]
[3 9]
[4 8]
[15 152]
[16 151]
[17 150]
[18 149]
[19 148]
[20 147]
[21 146]
[22 145]
[23 143]
[24 142]
[30 141]
[32 139]
[33 138]
[34 137]
[39 134]
[40 133]
[41 132]
[42 131]
[43 130]
[44 128]
[45 127]
[46 126]
[47 125]
[48 124]
[53 123]
[54 122]
[56 121]
[58 119]
[59 118]
[60 117]
[61 116]
[63 115]
[64 114]
[65 113]
[66 112]
[69 109]
[70 108]
[71 107]
[74 104]
[75 103]
[76 102]
[77 101]
[78 100]
[79 99]
[81 98]
[82 97]
[83 96]
[84 95]
[85 94]
[154 186]
[155 185]
[156 184]
[157 182]
[158 181]
[159 180]
[160 179]
[161 178]
[162 177]
[163 176]
[164 175]
[166 173]
[167 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
