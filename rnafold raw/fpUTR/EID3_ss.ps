%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:32:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCGCAUGGGCGGGCGUCCUCGGCUCUAACUGCCGCCACUUUCCACACGCUGGGAGGGCCGUUACCUCAGAGAUACCCGUGGCCGGCAUGUUGGUUGAAAAAGCUUCCCGGAAGGGAGACGAAGAGAAAGGAGAGGAGCAGCUCGUGAUCAUCCCCGGUAGCGAGUACGCGGCGAAGUAGGCGGCGGCGGAGGGAGCGCUG\
) } def
/len { sequence length } bind def

/coor [
[92.47486115 191.26525879]
[92.24386597 176.26702881]
[92.01287842 161.26881409]
[91.78189087 146.27059937]
[91.55089569 131.27236938]
[73.69433594 110.90087891]
[78.70462799 87.77271271]
[68.59919739 76.68758392]
[58.49375916 65.60244751]
[48.38832474 54.51731491]
[38.28289032 43.43217850]
[28.17745590 32.34704590]
[18.07202148 21.26191330]
[5.24371529 19.88658714]
[-2.94495130 10.44101524]
[-2.51435018 -1.65136993]
[-12.44788265 -12.89080620]
[-20.48054504 -17.25183105]
[-22.44621468 -24.38065529]
[-32.20549011 -35.77172852]
[-41.96476364 -47.16280365]
[-51.72403717 -58.55387497]
[-61.48331451 -69.94494629]
[-88.50553894 -87.89269257]
[-102.03436279 -94.37120056]
[-115.56317902 -100.84970856]
[-129.09199524 -107.32822418]
[-142.95019531 -113.06847382]
[-157.09750366 -118.05379486]
[-171.24482727 -123.03911591]
[-185.39213562 -128.02444458]
[-199.53945923 -133.00976562]
[-213.72474670 -137.88600159]
[-227.94714355 -142.65287781]
[-242.16955566 -147.41973877]
[-256.39196777 -152.18661499]
[-270.61437988 -156.95349121]
[-284.87307739 -161.61070251]
[-299.16720581 -166.15798950]
[-313.46133423 -170.70529175]
[-327.75546265 -175.25257874]
[-342.78924561 -158.47891235]
[-365.22839355 -152.35487366]
[-388.10076904 -159.60787964]
[-403.84817505 -178.67581177]
[-418.84106445 -178.21388245]
[-433.83395386 -177.75196838]
[-445.82672119 -167.09582520]
[-461.61019897 -169.97001648]
[-469.07669067 -184.16970825]
[-462.49850464 -198.80210876]
[-446.92187500 -202.64248657]
[-434.29586792 -192.74484253]
[-419.30297852 -193.20677185]
[-404.31011963 -193.66870117]
[-401.78125000 -208.45399475]
[-415.76834106 -213.87261963]
[-429.75540161 -219.29124451]
[-443.74249268 -224.70986938]
[-457.35458374 -217.01277161]
[-472.72012329 -219.91693115]
[-482.58398438 -232.05110168]
[-482.28875732 -247.68589783]
[-471.97384644 -259.43905640]
[-456.50961304 -261.76107788]
[-443.19781494 -253.55557251]
[-438.32388306 -238.69694519]
[-424.33679199 -233.27832031]
[-410.34970093 -227.85969543]
[-396.36260986 -222.44107056]
[-388.59689331 -229.19573975]
[-379.57598877 -233.91778564]
[-369.81375122 -236.39573669]
[-359.85330200 -236.54431152]
[-350.23675537 -234.40635681]
[-341.47586060 -230.14782715]
[-334.02459717 -224.04606628]
[-328.25582886 -216.47222900]
[-324.44274902 -207.86901855]
[-322.74612427 -198.72497559]
[-323.20816040 -189.54670715]
[-308.91403198 -184.99942017]
[-294.61990356 -180.45211792]
[-280.32577515 -175.90483093]
[-272.99462891 -176.87335205]
[-265.84750366 -171.17590332]
[-251.62509155 -166.40902710]
[-237.40269470 -161.64215088]
[-223.18028259 -156.87527466]
[-208.95787048 -152.10841370]
[-201.61265564 -152.96391296]
[-194.55413818 -147.15707397]
[-180.40681458 -142.17175293]
[-166.25950623 -137.18643188]
[-152.11218262 -132.20111084]
[-137.96487427 -127.21578979]
[-144.48475647 -140.72471619]
[-140.92204285 -155.29547119]
[-128.90428162 -164.27174377]
[-113.92151642 -163.55290222]
[-102.81829834 -153.46733093]
[-100.66689301 -138.62242126]
[-108.45011902 -125.79972839]
[-122.61348724 -120.85704041]
[-109.08467102 -114.37853241]
[-95.55585480 -107.90002441]
[-82.02703094 -101.42151642]
[-68.12505341 -107.05488586]
[-62.92246246 -121.12375641]
[-57.71987152 -135.19262695]
[-52.51728058 -149.26148987]
[-55.81385803 -165.32588196]
[-43.37201309 -176.00917053]
[-27.99084854 -170.32128906]
[-25.49318886 -154.11346436]
[-38.44841385 -144.05889893]
[-43.65100098 -129.99003601]
[-48.85359192 -115.92116547]
[-54.05618286 -101.85229492]
[-42.74550629 -111.70463562]
[-35.46381378 -124.81863403]
[-23.85535622 -134.31829834]
[-9.55998135 -138.86167908]
[5.40289068 -137.80694580]
[18.91954994 -131.30311584]
[29.08058357 -120.26892090]
[34.45060730 -106.26310730]
[34.27103043 -91.26418304]
[28.56722069 -77.39095306]
[18.14492035 -66.60319519]
[4.47642088 -60.42483521]
[-10.50741482 -59.72864914]
[-24.68991470 -64.61298370]
[-36.06649780 -74.38645935]
[-50.09223938 -79.70422363]
[-40.33296585 -68.31314850]
[-30.57369041 -56.92207718]
[-20.81441689 -45.53100204]
[-11.05514145 -34.13993073]
[-1.20844626 -22.82433891]
[8.72508621 -11.58490276]
[25.63909912 -6.91587448]
[29.15715599 11.15647793]
[39.26258850 22.24161148]
[49.36802673 33.32674408]
[59.47346115 44.41188049]
[69.57889557 55.49701309]
[79.68432617 66.58214569]
[89.78976440 77.66728210]
[101.40611267 73.91430664]
[114.15419769 76.19968414]
[124.91899872 84.66670990]
[130.75289917 97.87635803]
[129.66064453 113.02286530]
[141.20065308 122.60556793]
[152.74066162 132.18826294]
[164.28067017 141.77096558]
[175.89411926 151.26452637]
[191.49626160 153.88821411]
[196.56114197 167.89521790]
[208.24734497 177.29907227]
[205.68746948 162.51911926]
[212.19676208 149.00508118]
[225.34934998 141.79331970]
[240.24357605 143.57148743]
[251.32873535 153.67691040]
[254.47363281 168.34352112]
[248.50624084 182.10543823]
[235.65048218 189.83392334]
[220.69729614 188.64871216]
[231.13931274 199.41738892]
[241.58131409 210.18606567]
[256.74279785 214.70718384]
[260.04797363 229.23043823]
[270.48999023 239.99911499]
[286.07318115 238.69587708]
[298.81838989 247.75639343]
[302.70776367 262.90258789]
[295.90484619 276.98284912]
[281.62176514 283.34893799]
[266.60253906 278.99499512]
[257.93881226 265.97677612]
[259.72131348 250.44111633]
[249.27929688 239.67243958]
[234.86471558 235.92158508]
[230.81263733 220.62808228]
[220.37063599 209.85939026]
[209.92861938 199.09071350]
[198.84349060 188.98527527]
[187.15728760 179.58142090]
[172.39100647 177.63037109]
[166.49026489 162.95074463]
[159.30429077 161.20553589]
[154.69796753 153.31097412]
[143.15795898 143.72827148]
[131.61795044 134.14556885]
[120.07793427 124.56287384]
[106.54911804 131.04138184]
[106.78011322 146.03959656]
[107.01110077 161.03782654]
[107.24208832 176.03604126]
[107.47308350 191.03427124]
[109.96022034 210.25572205]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 202]
[2 201]
[3 200]
[4 199]
[5 198]
[7 149]
[8 148]
[9 147]
[10 146]
[11 145]
[12 144]
[13 143]
[16 141]
[17 140]
[19 139]
[20 138]
[21 137]
[22 136]
[23 135]
[24 107]
[25 106]
[26 105]
[27 104]
[28 96]
[29 95]
[30 94]
[31 93]
[32 92]
[33 90]
[34 89]
[35 88]
[36 87]
[37 86]
[38 84]
[39 83]
[40 82]
[41 81]
[45 55]
[46 54]
[47 53]
[56 70]
[57 69]
[58 68]
[59 67]
[108 119]
[109 118]
[110 117]
[111 116]
[154 197]
[155 196]
[156 195]
[157 194]
[158 192]
[160 190]
[161 189]
[170 188]
[171 187]
[172 186]
[174 184]
[175 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
