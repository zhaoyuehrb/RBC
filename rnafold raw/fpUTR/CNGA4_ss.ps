%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:47:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAGCCCAACAGCAGCCUCCUUCAGGCAGUCAGGCACUAGUGCCCAACUCCAGAAGUCCCCUACAGGCAGAGAGGGUGUGGACAUCUCACACCCCAGCACCAGACCACAGAACC\
) } def
/len { sequence length } bind def

/coor [
[102.51278687 195.86941528]
[104.80177307 181.04508972]
[110.58978271 167.20133972]
[110.80834198 152.20292664]
[111.02690125 137.20451355]
[103.64447784 150.26206970]
[108.11354065 165.42132568]
[100.48116302 179.26049805]
[85.27550507 183.56903076]
[71.51781464 175.79077148]
[67.37027740 160.54040527]
[75.29356384 146.86572266]
[90.58692169 142.87965393]
[97.96934509 129.82209778]
[77.06339264 113.94119263]
[78.18564606 90.50534821]
[67.02037048 80.48853302]
[55.85509109 70.47171783]
[44.68981552 60.45489883]
[20.30404091 58.48347092]
[12.04344559 36.17173386]
[-0.80941254 28.43842697]
[-13.66227055 20.70511818]
[-26.51512718 12.97181129]
[-42.32889938 12.48684025]
[-49.24535751 -0.70451510]
[-62.09821701 -8.43782330]
[-71.19624329 -10.22065163]
[-75.19039154 -16.55858803]
[-87.82912445 -24.63710785]
[-100.46784973 -32.71562576]
[-115.71588135 -29.53201675]
[-128.41827393 -37.90482712]
[-131.35939026 -52.46111298]
[-143.99812317 -60.53963089]
[-156.63685608 -68.61814880]
[-169.27558899 -76.69667053]
[-185.67352295 -76.89570618]
[-193.46307373 -91.32674408]
[-184.63102722 -105.14437103]
[-168.26301575 -104.13419342]
[-161.19706726 -89.33540344]
[-148.55833435 -81.25688171]
[-135.91960144 -73.17835999]
[-123.28086853 -65.09984589]
[-108.83499908 -68.54257965]
[-95.90245056 -60.52985764]
[-92.38933563 -45.35435867]
[-79.75060272 -37.27583694]
[-67.11186981 -29.19731903]
[-54.36491013 -21.29067993]
[-41.51205063 -13.55737305]
[-26.61760139 -13.62553978]
[-18.78182030 0.11895344]
[-5.92896223 7.85226107]
[6.92389536 15.58556938]
[19.77675247 23.31887627]
[25.24102783 19.95027542]
[31.48725891 18.30217171]
[37.98376465 18.53935623]
[44.17042160 20.66508102]
[49.50694656 24.51876068]
[53.52006912 29.78785896]
[55.84548187 36.03314209]
[56.26080322 42.72526550]
[54.70663071 49.28962326]
[65.87191010 59.30643845]
[77.03718567 69.32325745]
[88.20246124 79.34007263]
[97.17311859 75.35385132]
[107.39569092 75.25723267]
[117.19071198 79.38630676]
[124.82389832 87.35760498]
[128.81083679 98.08423615]
[128.19738770 109.91906738]
[143.10946655 108.29728699]
[158.02153015 106.67549896]
[172.93359375 105.05371094]
[187.84567261 103.43193054]
[202.75773621 101.81014252]
[217.66979980 100.18835449]
[232.58187866 98.56657410]
[243.71325684 87.01356506]
[259.67193604 88.65663910]
[268.21582031 102.23537445]
[262.79071045 117.33332062]
[247.55834961 122.36862946]
[234.20365906 113.47864532]
[219.29159546 115.10042572]
[204.37951660 116.72221375]
[189.46745300 118.34399414]
[174.55538940 119.96578217]
[159.64331055 121.58757019]
[144.73124695 123.20935059]
[129.81918335 124.83113861]
[143.68327332 130.55711365]
[157.54736328 136.28309631]
[172.54658508 136.43595886]
[187.06922913 140.19004822]
[200.26354980 147.32516479]
[211.35572815 157.42286682]
[219.69522095 169.89093018]
[224.79295349 183.99813843]
[226.34994507 198.91711426]
[224.27487183 213.77288818]
[218.68942261 227.69419861]
[209.92120361 239.86457825]
[198.48443604 249.57026672]
[185.04988098 256.24203491]
[170.40542603 259.48861694]
[155.40997314 259.11956787]
[140.94296265 255.15655518]
[127.85285187 247.83198547]
[116.90737152 237.57545471]
[108.74844360 224.98849487]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 14]
[6 13]
[16 69]
[17 68]
[18 67]
[19 66]
[21 57]
[22 56]
[23 55]
[24 54]
[26 52]
[27 51]
[29 50]
[30 49]
[31 48]
[34 45]
[35 44]
[36 43]
[37 42]
[75 95]
[76 94]
[77 93]
[78 92]
[79 91]
[80 90]
[81 89]
[82 88]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
