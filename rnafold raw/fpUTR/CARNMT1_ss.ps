%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:44:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUUCUGGGAGCCCUGAAGACCUGGCGGAGCCCAGCGCGGAUGGAGGCCUGAGGGUGGCGGGGGCGGAGCGCGCCGCGAGCUGGGGGCAUGUCCGCGGCGGGCGCCGUCUAGAGGAAGGCCAAGCAGCCGCCACCACGCUGUCGGUCGCGGAGAGACGCAAGCGAGCCAGGCCGAGGGCCGCGGCGGCG\
) } def
/len { sequence length } bind def

/coor [
[79.28672028 445.38745117]
[85.33306122 429.54830933]
[85.33306122 414.54830933]
[85.33306122 399.54830933]
[85.20904541 384.54882812]
[84.96103668 369.55087280]
[84.71302795 354.55291748]
[76.76635742 341.95532227]
[84.27442932 328.02911377]
[81.01443481 321.38119507]
[84.14836884 312.78161621]
[84.14836884 297.78161621]
[84.14836884 282.78161621]
[84.14836884 267.78161621]
[84.14836884 252.78161621]
[73.84511566 245.02651978]
[69.83525085 232.56541443]
[73.79824829 219.88519287]
[84.49945831 211.68832397]
[81.46105194 204.93624878]
[84.87760162 196.44499207]
[85.37355042 181.45318604]
[85.86949921 166.46139526]
[86.36545563 151.46958923]
[86.86140442 136.47779846]
[87.35735321 121.48599243]
[83.31828308 115.26719666]
[81.66522217 108.70714569]
[82.20910645 102.60840607]
[84.51618958 97.62483978]
[87.98014069 94.19377899]
[91.91094208 92.49765778]
[95.62953186 92.45845032]
[91.70732880 77.98031616]
[87.78513336 63.50218201]
[83.86293030 49.02404785]
[79.94073486 34.54591370]
[68.86415100 23.24901390]
[73.00434113 8.94138908]
[69.08213806 -5.53674459]
[63.80862045 -13.01767731]
[65.21689606 -20.28672600]
[61.53461456 -34.82772827]
[57.85233307 -49.36873245]
[46.96405029 -60.84722900]
[51.34022903 -75.08444214]
[47.65794754 -89.62545013]
[43.97566605 -104.16645050]
[38.82655716 -111.73355865]
[40.35482788 -118.97832489]
[36.91347122 -133.57823181]
[25.75945091 -137.75369263]
[18.09088707 -146.70892334]
[15.73008156 -158.13760376]
[19.15162277 -169.16915894]
[27.39238167 -177.08970642]
[24.43562698 -191.79541016]
[21.47887039 -206.50111389]
[18.52211571 -221.20680237]
[-1.18439186 -232.00646973]
[-6.44424200 -253.57135010]
[5.77074671 -271.77536011]
[1.37199628 -286.11587524]
[-3.02675438 -300.45642090]
[-7.42550468 -314.79696655]
[-11.82425499 -329.13751221]
[-16.22300529 -343.47802734]
[-27.66704369 -354.40252686]
[-24.00218010 -368.83923340]
[-28.40093040 -383.17974854]
[-39.84496689 -394.10424805]
[-36.18010330 -408.54095459]
[-40.57885361 -422.88146973]
[-44.97760391 -437.22201538]
[-49.37635803 -451.56256104]
[-53.77510834 -465.90307617]
[-58.17385864 -480.24362183]
[-62.57260895 -494.58416748]
[-74.01664734 -505.50866699]
[-70.35178375 -519.94537354]
[-74.75053406 -534.28588867]
[-79.26769257 -548.58953857]
[-83.90294647 -562.85540771]
[-96.44530487 -573.42053223]
[-93.30086517 -589.51538086]
[-77.70434570 -594.58300781]
[-65.70011902 -583.41021729]
[-69.63710022 -567.49066162]
[-65.00183868 -553.22485352]
[-59.93566895 -547.82519531]
[-60.40999603 -538.68463135]
[-56.01124573 -524.34411621]
[-44.88183594 -514.44531250]
[-48.23207092 -498.98291016]
[-43.83332062 -484.64236450]
[-39.43457031 -470.30184937]
[-35.03582001 -455.96130371]
[-30.63706970 -441.62075806]
[-26.23831749 -427.28024292]
[-21.83956718 -412.93969727]
[-10.71015930 -403.04092407]
[-14.06039429 -387.57852173]
[-9.66164303 -373.23797607]
[1.46776569 -363.33920288]
[-1.88246930 -347.87680054]
[2.51628137 -333.53625488]
[6.91503191 -319.19570923]
[11.31378269 -304.85516357]
[15.71253300 -290.51464844]
[20.11128426 -276.17410278]
[28.11101151 -275.21627808]
[35.50522232 -271.93231201]
[41.63061523 -266.59506226]
[45.93132782 -259.66247559]
[48.00935364 -251.73840332]
[47.66131592 -243.51995850]
[44.89818573 -235.73623657]
[39.94606400 -229.08364868]
[33.22781372 -224.16355896]
[36.18457031 -209.45785522]
[39.14132690 -194.75216675]
[42.09807968 -180.04646301]
[57.91763687 -170.86048889]
[62.08826065 -152.72167969]
[51.51337051 -137.01957703]
[54.95472717 -122.41968536]
[58.51667023 -107.84873962]
[62.19895172 -93.30773163]
[65.88123322 -78.76673126]
[76.50613403 -68.32830048]
[72.39333344 -53.05101776]
[76.07562256 -38.51001358]
[79.75790405 -23.96900940]
[83.56027222 -9.45894337]
[87.48247528 5.01918983]
[98.27851105 15.28051758]
[94.41886902 30.62371635]
[98.34106445 45.10184860]
[102.26326752 59.57998276]
[106.18546295 74.05811310]
[110.10766602 88.53624725]
[120.17530060 99.65572357]
[134.19377136 104.99263000]
[148.21223450 110.32953644]
[163.86227417 108.00854492]
[173.00384521 119.76783752]
[188.65388489 117.44684601]
[197.79545593 129.20614624]
[211.81391907 134.54304504]
[225.83238220 139.87995911]
[240.14816284 133.18414307]
[254.97691345 138.65072632]
[261.52099609 153.03651428]
[255.89793396 167.80664062]
[241.44377136 174.19825745]
[226.73393250 168.41934204]
[220.49548340 153.89842224]
[206.47700500 148.56150818]
[192.45854187 143.22460938]
[177.81120300 145.92732239]
[167.66693115 133.78630066]
[153.01959229 136.48902893]
[142.87533569 124.34799957]
[128.85685730 119.01109314]
[114.83839417 113.67418671]
[102.34915161 121.98194885]
[101.85320282 136.97373962]
[101.35725403 151.96554565]
[100.86130524 166.95733643]
[100.36534882 181.94914246]
[99.86940002 196.94093323]
[99.49740601 211.93632507]
[111.88657379 224.27438354]
[111.53528595 241.41804504]
[99.14836884 252.78161621]
[99.14836884 267.78161621]
[99.14836884 282.78161621]
[99.14836884 297.78161621]
[99.14836884 312.78161621]
[99.27237701 327.78109741]
[107.23679352 341.45144653]
[99.71098328 354.30490112]
[99.95899200 369.30285645]
[100.20700073 384.30081177]
[103.48268890 392.84741211]
[100.33306122 399.54830933]
[100.33306122 414.54830933]
[100.33306122 429.54830933]
[106.37939453 445.38745117]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 188]
[3 187]
[4 186]
[5 184]
[6 183]
[7 182]
[9 180]
[11 179]
[12 178]
[13 177]
[14 176]
[15 175]
[19 172]
[21 171]
[22 170]
[23 169]
[24 168]
[25 167]
[26 166]
[33 141]
[34 140]
[35 139]
[36 138]
[37 137]
[39 135]
[40 134]
[42 133]
[43 132]
[44 131]
[46 129]
[47 128]
[48 127]
[50 126]
[51 125]
[56 122]
[57 121]
[58 120]
[59 119]
[62 110]
[63 109]
[64 108]
[65 107]
[66 106]
[67 105]
[69 103]
[70 102]
[72 100]
[73 99]
[74 98]
[75 97]
[76 96]
[77 95]
[78 94]
[80 92]
[81 91]
[82 89]
[83 88]
[142 165]
[143 164]
[144 163]
[146 161]
[148 159]
[149 158]
[150 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
