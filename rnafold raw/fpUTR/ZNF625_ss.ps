%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:55:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUUCCUGACUCCCAGGCGUCUUGCACCAAAGGGAGGUCGGGAUCUCGGUUUUCCGGCCCCGAGAGGGACCAGGUGCCUCCGCCAUAGCUUCUGUCGCUCCAUCGCCCGCACUGUGACUGGACUGUUAGAGGGAUCCGUGGAGAGGAGGCCAGGACACCUGGAAGCCGGGAA\
) } def
/len { sequence length } bind def

/coor [
[19.55249214 242.83271790]
[8.47855759 252.95042419]
[-6.51280403 252.44142151]
[-16.87497330 241.59590149]
[-16.69974518 226.59524536]
[-28.30563354 236.09805298]
[-39.91152191 245.60086060]
[-51.51741028 255.10366821]
[-63.12329483 264.60647583]
[-74.72918701 274.10928345]
[-86.33506775 283.61209106]
[-97.85469818 293.21929932]
[-109.28713226 302.93008423]
[-120.71955872 312.64086914]
[-132.15199280 322.35168457]
[-138.02886963 341.61074829]
[-157.15179443 344.33560181]
[-168.22619629 354.45281982]
[-173.19610596 369.47314453]
[-187.81121826 372.34503174]
[-198.88560486 382.46224976]
[-206.50138855 397.60940552]
[-223.16484070 394.48437500]
[-224.77487183 377.60705566]
[-209.00280762 371.38784790]
[-197.92842102 361.27066040]
[-193.75061035 346.97396851]
[-178.34339905 343.37841797]
[-167.26899719 333.26119995]
[-167.72399902 323.01080322]
[-162.33282471 314.02322388]
[-152.67835999 309.40884399]
[-141.86279297 310.91925049]
[-130.43035889 301.20843506]
[-118.99792480 291.49765015]
[-107.56549072 281.78686523]
[-104.49249268 275.03668213]
[-95.83788300 272.00619507]
[-84.23199463 262.50338745]
[-72.62610626 253.00059509]
[-61.02021790 243.49778748]
[-49.41432953 233.99497986]
[-37.80844116 224.49217224]
[-26.20255470 214.98936462]
[-15.12815952 204.87216187]
[-4.61774063 194.17024231]
[5.89267826 183.46830750]
[16.40309715 172.76638794]
[26.91351700 162.06446838]
[37.42393494 151.36254883]
[47.93435287 140.66062927]
[58.44477463 129.95870972]
[68.95519257 119.25679779]
[79.46561432 108.55487823]
[79.33020020 93.55548859]
[68.62828064 83.04506683]
[57.83191299 72.63169098]
[46.94198227 62.31619644]
[31.60218239 58.44306946]
[27.68317604 44.07328796]
[16.79324341 33.75779343]
[5.90331173 23.44230270]
[-10.16333008 20.15671921]
[-15.09386349 4.51632738]
[-3.81617904 -7.38937950]
[12.06820869 -3.31283069]
[16.21880341 12.55237007]
[27.10873604 22.86786270]
[37.99866867 33.18335342]
[52.55954742 36.31864548]
[57.25747299 51.42626190]
[68.14740753 61.74175644]
[75.19025421 64.06692505]
[79.13870239 72.34314728]
[89.84062195 82.85356903]
[101.07111359 80.35575867]
[111.65515900 84.47058868]
[124.07049561 76.05278015]
[136.48582458 67.63497162]
[148.90116882 59.21716690]
[161.31649780 50.79936218]
[173.73182678 42.38155365]
[181.65652466 23.87078857]
[200.96195984 23.22944832]
[213.06530762 14.36890697]
[225.16864014 5.50836468]
[237.27198792 -3.35217738]
[239.24566650 -23.31440926]
[254.98771667 -35.25074387]
[274.14337158 -31.86898232]
[285.74926758 -41.37179184]
[297.35516357 -50.87459946]
[308.96105957 -60.37740707]
[320.56692505 -69.88021851]
[332.17282104 -79.38302612]
[337.94863892 -94.11226654]
[352.69778442 -96.18870544]
[364.30368042 -105.69152069]
[370.07949829 -120.42076111]
[384.82864380 -122.49720001]
[396.43453979 -132.00000000]
[408.04043579 -141.50282288]
[419.64630127 -151.00563049]
[431.16595459 -160.61282349]
[442.59835815 -170.32360840]
[454.03079224 -180.03440857]
[465.46322632 -189.74519348]
[465.18820190 -205.38037109]
[475.06771851 -217.50178528]
[490.43701172 -220.38610840]
[504.03912354 -212.67143250]
[509.45159912 -198.00039673]
[504.11880493 -183.30021667]
[490.55871582 -175.51187134]
[475.17404175 -178.31277466]
[463.74160767 -168.60197449]
[452.30917358 -158.89117432]
[440.87673950 -149.18038940]
[437.80374146 -142.43022156]
[429.14910889 -139.39973450]
[417.54324341 -129.89692688]
[405.93734741 -120.39411926]
[394.33145142 -110.89131165]
[389.38577271 -96.84177399]
[373.80648804 -94.08563232]
[362.20059204 -84.58281708]
[357.25491333 -70.53327942]
[341.67562866 -67.77713776]
[330.06973267 -58.27433014]
[318.46386719 -48.77152252]
[306.85797119 -39.26871109]
[295.25207520 -29.76590347]
[283.64620972 -20.26309586]
[285.42330933 -10.09280682]
[282.78030396 -0.02873711]
[276.13275146 8.08127022]
[266.63772583 12.71921730]
[255.99275208 12.98085213]
[246.13252258 8.75116062]
[234.02919006 17.61170197]
[221.92584229 26.47224426]
[209.82250977 35.33278656]
[209.16658020 45.57230377]
[202.83528137 53.92430115]
[192.73851013 57.46779251]
[182.14964294 54.79689026]
[169.73429871 63.21469498]
[157.31896973 71.63249969]
[144.90364075 80.05030823]
[132.48829651 88.46811676]
[120.07296753 96.88591766]
[117.37938690 111.64208984]
[126.01996613 123.90342712]
[134.66055298 136.16476440]
[143.30113220 148.42610168]
[157.36749268 157.89042664]
[152.16699219 174.02706909]
[135.22134399 173.49687195]
[131.03979492 157.06668091]
[122.39921570 144.80534363]
[113.75862885 132.54400635]
[105.11804962 120.28267670]
[90.16753387 119.06529236]
[79.65711212 129.76721191]
[69.14669037 140.46913147]
[58.63627625 151.17105103]
[48.12585449 161.87297058]
[37.61543655 172.57489014]
[27.10501671 183.27680969]
[16.59459877 193.97872925]
[6.08417940 204.68064880]
[-4.42623949 215.38256836]
[10.52750874 216.55960083]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 44]
[6 43]
[7 42]
[8 41]
[9 40]
[10 39]
[11 38]
[12 36]
[13 35]
[14 34]
[15 33]
[17 29]
[18 28]
[20 26]
[21 25]
[45 172]
[46 171]
[47 170]
[48 169]
[49 168]
[50 167]
[51 166]
[52 165]
[53 164]
[54 163]
[55 75]
[56 74]
[57 72]
[58 71]
[60 69]
[61 68]
[62 67]
[77 151]
[78 150]
[79 149]
[80 148]
[81 147]
[82 146]
[84 142]
[85 141]
[86 140]
[87 139]
[90 133]
[91 132]
[92 131]
[93 130]
[94 129]
[95 128]
[97 126]
[98 125]
[100 123]
[101 122]
[102 121]
[103 120]
[104 118]
[105 117]
[106 116]
[107 115]
[152 162]
[153 161]
[154 160]
[155 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
