%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:29:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGAAGGGCGCCCCGGCCGGUAUGGCGGGCAGGAAGUGCGGGUGCGCGCCUGCGCAUAGGUCGGGUCUGCGGUGUCACCGCUUUCGCUUCUGCUUGAGUAGUCAAGUGAAAAA\
) } def
/len { sequence length } bind def

/coor [
[175.97045898 179.25398254]
[166.11918640 167.94238281]
[156.26789856 156.63078308]
[146.41661072 145.31918335]
[136.56533813 134.00758362]
[126.71405792 122.69598389]
[113.64601898 131.29522705]
[98.53279877 133.19601440]
[84.52043915 128.36721802]
[74.36722565 118.14192963]
[69.90140533 104.87465668]
[71.69770050 91.40628815]
[58.91890717 83.55119324]
[46.14011765 75.69609833]
[33.36132431 67.84101105]
[20.58253288 59.98591614]
[7.80374241 52.13082123]
[-4.97504854 44.27572632]
[-11.78708076 43.69381714]
[-16.49515915 40.20697021]
[-18.22457314 35.61938095]
[-30.55124092 27.07225990]
[-42.87790680 18.52513885]
[-55.20457458 9.97801876]
[-67.64783478 1.60155153]
[-80.20533752 -6.60267067]
[-92.76283264 -14.80689335]
[-105.32032776 -23.01111603]
[-117.87782288 -31.21533775]
[-130.43531799 -39.41955948]
[-130.75617981 -24.42299271]
[-142.50785828 -15.10108471]
[-157.18394470 -18.20147514]
[-164.16119385 -31.47995567]
[-158.38914490 -45.32493210]
[-144.04530334 -49.71467590]
[-155.35690308 -59.56595612]
[-166.66850281 -69.41723633]
[-177.98010254 -79.26851654]
[-194.17004395 -81.87964630]
[-199.75003052 -97.30027771]
[-188.97985840 -109.66698456]
[-172.93894958 -106.25795746]
[-168.12882996 -90.58011627]
[-156.81723022 -80.72883606]
[-145.50563049 -70.87755585]
[-134.19403076 -61.02627563]
[-122.23110199 -51.97705841]
[-109.67360687 -43.77283478]
[-97.11610413 -35.56861115]
[-84.55860901 -27.36439133]
[-72.00111389 -19.16016769]
[-59.44361496 -10.95594597]
[-52.02041626 -9.91767025]
[-46.65745544 -2.34864902]
[-34.33078766 6.19847202]
[-22.00411987 14.74559307]
[-9.67745209 23.29271317]
[2.88004518 31.49693680]
[15.65883636 39.35202789]
[28.43762779 47.20712280]
[41.21641922 55.06221771]
[53.99520874 62.91731262]
[66.77400208 70.77240753]
[79.55279541 78.62749481]
[91.24178314 70.31812286]
[106.08477783 68.26215363]
[120.80585480 73.50897217]
[131.88174438 85.42937469]
[144.43923950 77.22515106]
[156.99673462 69.02092743]
[169.55422974 60.81670380]
[182.11172485 52.61248398]
[192.06468201 38.88750458]
[208.00852966 44.65204620]
[206.88298035 61.56858826]
[190.31594849 65.16998291]
[177.75845337 73.37419891]
[165.20095825 81.57842255]
[152.64346313 89.78264618]
[140.08595276 97.98686981]
[138.02565002 112.84470367]
[147.87693787 124.15629578]
[157.72821045 135.46789551]
[167.57949829 146.77949524]
[177.43077087 158.09109497]
[187.28205872 169.40269470]
[197.74151611 180.15443420]
[208.77737427 190.31365967]
[219.81323242 200.47288513]
[228.37182617 204.05084229]
[231.00828552 211.06732178]
[241.76002502 221.52676392]
[252.51176453 231.98622131]
[263.26348877 242.44567871]
[274.01522827 252.90512085]
[284.76696777 263.36459351]
[300.78848267 266.86361694]
[305.51052856 282.56820679]
[294.07543945 294.32284546]
[278.24670410 290.03533936]
[274.30752563 274.11630249]
[263.55578613 263.65686035]
[252.80404663 253.19741821]
[242.05230713 242.73796082]
[231.30056763 232.27850342]
[220.54884338 221.81906128]
[209.65400696 211.50874329]
[198.61814880 201.34951782]
[187.58229065 191.19029236]
[184.64691162 191.25459290]
[181.51023865 190.07734680]
[178.67752075 187.57597351]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 87]
[2 86]
[3 85]
[4 84]
[5 83]
[6 82]
[12 65]
[13 64]
[14 63]
[15 62]
[16 61]
[17 60]
[18 59]
[21 58]
[22 57]
[23 56]
[24 55]
[25 53]
[26 52]
[27 51]
[28 50]
[29 49]
[30 48]
[36 47]
[37 46]
[38 45]
[39 44]
[69 81]
[70 80]
[71 79]
[72 78]
[73 77]
[88 110]
[89 109]
[90 108]
[92 107]
[93 106]
[94 105]
[95 104]
[96 103]
[97 102]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
