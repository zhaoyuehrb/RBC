%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGCGUGGCCUGCGCGCGCGUGCGUCGUAGCCGAACGCUGUGGCGGGGCAGGCGAGGCGGUCGCUUCGAGCGCGCUAGUCAGCUCCCUGAAGGGAGUGACGGCGGUUGGGUGCCCGCGGCCACUUUUGCCUUCCCGGGGAGAUGUCCUUUGCUUCUCAGAUGUAAAUGCACUUUAAGUUUGUUAUUCAACAGUGAAA\
) } def
/len { sequence length } bind def

/coor [
[290.93359375 191.34040833]
[278.43719482 183.04344177]
[265.94076538 174.74647522]
[253.44436646 166.44950867]
[240.94795227 158.15254211]
[228.45153809 149.85557556]
[215.95512390 141.55860901]
[203.20550537 133.65626526]
[190.21511841 126.15625763]
[177.22473145 118.65625763]
[164.23435974 111.15625763]
[151.24397278 103.65625763]
[138.25360107 96.15625763]
[108.46482086 128.82908630]
[80.71132660 109.82332611]
[65.81427002 111.57765961]
[50.91721344 113.33198547]
[36.02015686 115.08631897]
[21.12309647 116.84064484]
[6.22603989 118.59497833]
[-8.33592701 122.19346619]
[-22.33542824 127.57992554]
[-32.43668365 139.75675964]
[-47.09349442 137.10586548]
[-61.09299469 142.49232483]
[-75.09249878 147.87878418]
[-85.19375610 160.05561829]
[-99.85056305 157.40472412]
[-113.85006714 162.79118347]
[-127.84956360 168.17764282]
[-141.84906006 173.56410217]
[-155.71844482 179.27726746]
[-169.45008850 185.31401062]
[-183.18171692 191.35073853]
[-190.31771851 205.71934509]
[-206.03050232 208.95790100]
[-218.26655579 198.58203125]
[-217.63943481 182.55123901]
[-204.63021851 173.16296387]
[-189.21846008 177.61909485]
[-175.48681641 171.58236694]
[-161.75517273 165.54563904]
[-160.14195251 162.40180969]
[-156.92161560 159.88601685]
[-152.40730286 158.74697876]
[-147.23553467 159.56460571]
[-133.23602295 154.17814636]
[-119.23652649 148.79168701]
[-105.23702240 143.40522766]
[-96.13710785 131.61367798]
[-80.47895813 133.87928772]
[-66.47945404 128.49282837]
[-52.47995377 123.10636139]
[-43.38003540 111.31481171]
[-27.72188950 113.58042908]
[-13.72238827 108.19396973]
[-13.37074947 93.19808960]
[-27.10238838 87.16136169]
[-40.83402634 81.12462616]
[-54.56566620 75.08789825]
[-68.29730225 69.05117035]
[-84.53044128 71.37867737]
[-94.44855499 58.31869888]
[-87.84873962 43.30622101]
[-71.52032471 41.78479385]
[-62.26057434 55.31953049]
[-48.52893448 61.35626221]
[-34.79729843 67.39299011]
[-21.06565857 73.42971802]
[-7.33402061 79.46644592]
[0.71118313 86.89363861]
[4.59459591 95.55220795]
[4.47170973 103.69792175]
[19.36876678 101.94358826]
[34.26582336 100.18926239]
[49.16288376 98.43492889]
[64.05994415 96.68060303]
[78.95700073 94.92626953]
[76.39659119 86.39012146]
[77.34037781 76.22161865]
[82.42160034 65.80772400]
[78.48273468 51.33411407]
[74.54386139 36.86050797]
[70.60499573 22.38690186]
[65.32785034 14.92091274]
[66.71955872 7.65626287]
[63.00737762 -6.87713766]
[59.29520035 -21.41053772]
[55.58301926 -35.94393921]
[51.87084198 -50.47733688]
[40.03079605 -61.82393646]
[44.19947433 -77.68439484]
[60.08849716 -81.74283600]
[71.35260010 -69.82427979]
[66.40424347 -54.18951797]
[70.11642456 -39.65611649]
[73.82859802 -25.12271690]
[77.54077911 -10.58931637]
[81.25296021 3.94408417]
[85.07859802 18.44803047]
[89.01747131 32.92163849]
[92.95633698 47.39524460]
[96.89521027 61.86885071]
[104.38399506 62.27893066]
[126.85033417 63.50916290]
[132.34603882 49.55218506]
[137.84173584 35.59520340]
[143.33743286 21.63822556]
[134.88516235 8.62520599]
[135.72959900 -6.86887455]
[145.54606628 -18.88622665]
[160.55990601 -22.80593300]
[174.99801636 -17.12078667]
[183.30862427 -4.01684141]
[182.29614258 11.46716690]
[172.34989929 23.37732124]
[157.29441833 27.13392639]
[151.79872131 41.09090424]
[146.30300903 55.04788589]
[140.80731201 69.00486755]
[145.75360107 83.16587830]
[158.74397278 90.66587830]
[171.73435974 98.16587830]
[184.72473145 105.66587830]
[197.71511841 113.16587830]
[210.70550537 120.66587830]
[215.06312561 120.50916290]
[218.85955811 121.63813782]
[221.75860596 123.71717072]
[223.56814575 126.33575439]
[224.25209045 129.06219482]
[236.74850464 137.35916138]
[249.24491882 145.65612793]
[261.74133301 153.95309448]
[274.23773193 162.25006104]
[286.73416138 170.54702759]
[299.23056030 178.84399414]
[320.77310181 167.13523865]
[345.98934937 171.92062378]
[363.22457886 192.46173096]
[378.02304077 190.01106262]
[392.82147217 187.56040955]
[407.61993408 185.10974121]
[419.94119263 174.28761292]
[435.38519287 179.80265808]
[438.06442261 195.98146057]
[425.22277832 206.18066406]
[410.07058716 199.90820312]
[395.27215576 202.35885620]
[380.47369385 204.80952454]
[365.67523193 207.26017761]
[361.96304321 221.79357910]
[373.77359009 231.04081726]
[385.58410645 240.28805542]
[401.06628418 238.57339478]
[412.91210938 248.11964417]
[414.45138550 262.89010620]
[429.93356323 261.17544556]
[441.77938843 270.72171021]
[443.31863403 285.49215698]
[455.12915039 294.73937988]
[466.93969727 303.98663330]
[478.75021362 313.23385620]
[490.56076050 322.48107910]
[506.19650269 324.89654541]
[511.44763184 338.83477783]
[523.25817871 348.08203125]
[535.06872559 357.32925415]
[546.87921143 366.57647705]
[562.91436768 366.07305908]
[573.19555664 378.38879395]
[569.83587646 394.07614136]
[555.41265869 401.10107422]
[540.99011230 394.07467651]
[537.63201904 378.38702393]
[525.82147217 369.13980103]
[514.01092529 359.89254761]
[502.20040894 350.64532471]
[487.40945435 348.89129639]
[481.31353760 334.29162598]
[469.50299072 325.04437256]
[457.69247437 315.79714966]
[445.88192749 306.54992676]
[434.07141113 297.30267334]
[419.36300659 299.35180664]
[407.25372314 290.14202881]
[405.20413208 274.70062256]
[390.49575806 276.74975586]
[378.38647461 267.53997803]
[376.33688354 252.09858704]
[364.52636719 242.85134888]
[352.71582031 233.60411072]
[343.57290649 239.75006104]
[333.24563599 243.16430664]
[322.51992798 243.66601562]
[312.19113159 241.29304504]
[303.00515747 236.29368591]
[295.60446167 229.10298157]
[290.48342896 220.30577087]
[287.95556641 210.58959961]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 137]
[2 136]
[3 135]
[4 134]
[5 133]
[6 132]
[7 131]
[8 126]
[9 125]
[10 124]
[11 123]
[12 122]
[13 121]
[15 78]
[16 77]
[17 76]
[18 75]
[19 74]
[20 73]
[21 56]
[22 55]
[24 53]
[25 52]
[26 51]
[28 49]
[29 48]
[30 47]
[31 46]
[32 42]
[33 41]
[34 40]
[57 70]
[58 69]
[59 68]
[60 67]
[61 66]
[81 103]
[82 102]
[83 101]
[84 100]
[86 99]
[87 98]
[88 97]
[89 96]
[90 95]
[105 120]
[106 119]
[107 118]
[108 117]
[140 151]
[141 150]
[142 149]
[143 148]
[152 192]
[153 191]
[154 190]
[157 187]
[160 184]
[161 183]
[162 182]
[163 181]
[164 180]
[166 178]
[167 177]
[168 176]
[169 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
