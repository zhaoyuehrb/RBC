%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:58:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACGGACCUACCACUGGCCCUGCGUAUGUGGUGCAGCCUCUCUUCAAUCCCUAAGAACUGGUUCUUUCAAAGCAUGUAUUUUCUGAAGAAACUUUAGAACCACGUUUAUUUUAAAAGAACGAAUUGGAGAAAACAAAUCGAUUAAUGCUCACAGCUUCUUGGGUGCUUUCUCACGGGUAAAGCC\
) } def
/len { sequence length } bind def

/coor [
[98.21975708 170.20826721]
[84.44013977 176.13465881]
[74.09043121 165.27723694]
[80.66982269 151.79678345]
[84.71122742 137.35147095]
[77.36312103 135.84970093]
[66.89099884 146.58909607]
[69.36267853 161.79426575]
[62.48750305 175.38047791]
[49.08905411 182.23216248]
[34.40104675 179.90829468]
[23.92892456 190.64768982]
[13.45680523 201.38708496]
[2.98468447 212.12649536]
[-7.48743582 222.86589050]
[-17.95955658 233.60528564]
[-17.93198776 249.18209839]
[-28.70519447 259.92419434]
[-43.55546951 259.85449219]
[-54.02759171 270.59387207]
[-55.26402664 286.58923340]
[-68.62094116 295.47586060]
[-83.85205078 290.43673706]
[-89.27335358 275.33743286]
[-80.72609711 261.76083374]
[-64.76699066 260.12176514]
[-54.29486847 249.38237000]
[-54.73874664 234.53855896]
[-44.27151489 223.49810791]
[-28.69895554 223.13316345]
[-18.22683525 212.39376831]
[-7.75471449 201.65437317]
[2.71740580 190.91497803]
[13.18952656 180.17556763]
[23.66164589 169.43617249]
[20.96841431 154.81138611]
[27.48031616 141.24453735]
[40.88898468 134.02922058]
[56.15159988 136.11697388]
[66.62371826 125.37757874]
[62.90087509 117.60263062]
[60.91558456 109.39700317]
[60.68334579 101.13576508]
[62.14118576 93.18158722]
[65.15350342 85.86882782]
[69.52095032 79.48948669]
[74.99201965 74.28159332]
[81.27651215 70.42052460]
[88.06039429 68.01350403]
[95.02112579 67.09751129]
[101.84284210 67.64051056]
[108.23066711 69.54584503]
[115.47463226 56.41097260]
[122.71859741 43.27609634]
[129.96257019 30.14121819]
[137.20652771 17.00634193]
[144.45050049 3.87146592]
[151.69445801 -9.26341057]
[158.93841553 -22.39828682]
[166.07180786 -35.59354782]
[173.09408569 -48.84826279]
[180.11637878 -62.10297775]
[179.64393616 -91.99613953]
[179.14002991 -106.98767090]
[178.63612366 -121.97920227]
[178.13221741 -136.97073364]
[177.62832642 -151.96226501]
[177.12442017 -166.95381165]
[176.62051392 -181.94534302]
[168.42398071 -195.47779846]
[175.72935486 -208.45780945]
[175.22544861 -223.44934082]
[174.72155762 -238.44087219]
[174.21765137 -253.43241882]
[162.78675842 -270.01998901]
[172.56848145 -286.68545532]
[171.56123352 -301.65158081]
[170.55400085 -316.61773682]
[169.54676819 -331.58389282]
[158.44293213 -339.22955322]
[153.84342957 -351.69485474]
[157.21958923 -364.34411621]
[167.12010193 -372.60980225]
[166.36442566 -387.59075928]
[165.60874939 -402.57171631]
[164.85307312 -417.55267334]
[164.09739685 -432.53363037]
[163.34172058 -447.51458740]
[162.58602905 -462.49554443]
[161.83035278 -477.47647095]
[154.99374390 -492.99090576]
[168.00929260 -503.85516357]
[182.05201721 -494.35577393]
[176.81130981 -478.23214722]
[177.56698608 -463.25122070]
[178.32266235 -448.27026367]
[179.07833862 -433.28930664]
[179.83403015 -418.30834961]
[180.58970642 -403.32739258]
[181.34538269 -388.34643555]
[182.10105896 -373.36547852]
[195.04426575 -362.64187622]
[196.26100159 -345.53918457]
[184.51290894 -332.59112549]
[185.52014160 -317.62496948]
[186.52738953 -302.65884399]
[187.53462219 -287.69268799]
[195.82106018 -281.67025757]
[199.49119568 -271.87142944]
[197.10200500 -261.45858765]
[189.20918274 -253.93630981]
[189.71308899 -238.94477844]
[190.21699524 -223.95324707]
[190.72088623 -208.96171570]
[198.88137817 -196.50155640]
[191.61204529 -182.44924927]
[192.11595154 -167.45770264]
[192.61985779 -152.46617126]
[193.12376404 -137.47463989]
[193.62765503 -122.48310852]
[194.13156128 -107.49157715]
[194.63546753 -92.50003815]
[206.75588989 -83.66288757]
[221.18327332 -87.76782990]
[232.33923340 -98.98636627]
[246.69805908 -95.02741241]
[261.12542725 -99.13235474]
[275.55282593 -103.23730469]
[281.77694702 -117.58283234]
[295.78906250 -124.52506256]
[310.97308350 -120.78608704]
[320.15954590 -108.13134003]
[319.01092529 -92.53599548]
[308.06954956 -81.36370850]
[292.50158691 -79.88968658]
[279.65777588 -88.80991364]
[265.23037720 -84.70497131]
[250.80299377 -80.60002899]
[240.67900085 -69.67510986]
[225.28822327 -73.34044647]
[210.86083984 -69.23550415]
[225.72235107 -71.26906586]
[240.06616211 -66.88097382]
[251.24624634 -56.88069153]
[257.20022583 -43.11297607]
[256.82977295 -28.11754990]
[250.20323181 -14.66062355]
[238.54298401 -5.22459269]
[224.00001526 -1.55012143]
[209.25703430 -4.31503963]
[197.03370667 -13.00930309]
[189.58485413 -26.02908134]
[188.28457642 -40.97261810]
[193.37109375 -55.08069229]
[186.34880066 -41.82597351]
[179.32652283 -28.57126045]
[178.97259521 -21.17332458]
[172.07330322 -15.15432167]
[164.82933044 -2.01944542]
[157.58537292 11.11543083]
[150.34140015 24.25030708]
[143.09744263 37.38518143]
[135.85346985 50.52005768]
[128.60951233 63.65493393]
[121.36554718 76.78981018]
[136.50222778 104.15225220]
[120.74263000 136.43818665]
[126.16125488 150.42526245]
[131.57987976 164.41235352]
[136.99850464 178.39942932]
[142.41712952 192.38652039]
[147.95304871 206.32759094]
[153.60588074 220.22166443]
[166.87809753 229.85392761]
[164.90353394 246.13377380]
[149.71345520 252.31388855]
[136.93411255 242.03669739]
[139.71180725 225.87449646]
[134.05897522 211.98042297]
[128.61463928 206.95907593]
[128.43005371 197.80514526]
[123.01142120 183.81805420]
[117.59279633 169.83097839]
[112.17417145 155.84388733]
[106.75554657 141.85681152]
[99.40744019 140.35502625]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 40]
[7 39]
[11 35]
[12 34]
[13 33]
[14 32]
[15 31]
[16 30]
[19 27]
[20 26]
[52 165]
[53 164]
[54 163]
[55 162]
[56 161]
[57 160]
[58 159]
[59 158]
[60 156]
[61 155]
[62 154]
[63 122]
[64 121]
[65 120]
[66 119]
[67 118]
[68 117]
[69 116]
[71 114]
[72 113]
[73 112]
[74 111]
[76 107]
[77 106]
[78 105]
[79 104]
[83 101]
[84 100]
[85 99]
[86 98]
[87 97]
[88 96]
[89 95]
[90 94]
[123 141]
[124 140]
[126 138]
[127 137]
[128 136]
[167 185]
[168 184]
[169 183]
[170 182]
[171 181]
[172 179]
[173 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
