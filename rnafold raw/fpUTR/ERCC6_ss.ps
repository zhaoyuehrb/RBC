%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:50:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCCACGGGCCUCCCCGCACCAGCAGAAGUCGGAGUCGCUGUUGGGGGCGGUGUCUAUGGUUGAGCUGAGGGCGCAGGCGCCACGGCCCGUCGAGCUGGGUUCCAAGGCGGCUGGCGGCGGUAGCGUCUCUGUUUCCUUGUGGGCGCUCGCGCGGCCCUGGGUAGUCUGUAGAGA\
) } def
/len { sequence length } bind def

/coor [
[95.60439301 127.03495026]
[86.80723572 123.41163635]
[79.93830109 117.09271240]
[66.22431183 123.16943359]
[52.51032639 129.24615479]
[38.79633713 135.32286072]
[29.31380081 147.98747253]
[14.54319668 146.06951904]
[0.82920778 152.14624023]
[-12.88478088 158.22296143]
[-26.59877014 164.29968262]
[-40.25829315 170.49786377]
[-53.86227036 176.81701660]
[-63.11853790 189.64791870]
[-77.92085266 187.99243164]
[-91.52483368 194.31158447]
[-105.12881470 200.63075256]
[-114.38507843 213.46165466]
[-129.18739319 211.80615234]
[-142.79138184 218.12532043]
[-152.04763794 230.95622253]
[-166.84996033 229.30072021]
[-180.45393372 235.61988831]
[-194.05792236 241.93904114]
[-207.66189575 248.25820923]
[-214.15148926 254.73188782]
[-221.56385803 254.56639099]
[-235.27784729 260.64312744]
[-238.39916992 275.84301758]
[-249.88131714 286.28042603]
[-265.30917358 287.94198608]
[-278.75042725 280.18875122]
[-285.03662109 266.00201416]
[-281.75057983 250.83686829]
[-270.15588379 240.52462769]
[-254.71090698 239.03053284]
[-241.35456848 246.92912292]
[-227.64057922 240.85240173]
[-213.98104858 234.65422058]
[-200.37707520 228.33506775]
[-186.77310181 222.01589966]
[-173.16911316 215.69674683]
[-164.88589478 203.31782532]
[-149.11053467 204.52133179]
[-135.50656128 198.20217896]
[-127.22333527 185.82325745]
[-111.44796753 187.02676392]
[-97.84399414 180.70761108]
[-84.24001312 174.38844299]
[-75.95679474 162.00953674]
[-60.18143082 163.21304321]
[-46.57744980 156.89387512]
[-41.82085800 151.20657349]
[-32.67548752 150.58569336]
[-18.96150017 144.50897217]
[-5.24751043 138.43225098]
[8.46647835 132.35552979]
[16.96809769 120.12557983]
[32.71961594 121.60887909]
[46.43360519 115.53215790]
[60.14759445 109.45544434]
[73.86158752 103.37872314]
[73.19639587 93.76509094]
[76.09731293 84.14595795]
[82.46360779 75.84938049]
[91.70059967 70.12203979]
[82.54280090 58.24202347]
[73.38500214 46.36201477]
[58.92618561 37.50881958]
[63.43079376 21.16425514]
[80.38360596 20.96819496]
[85.26500702 37.20421219]
[94.42281342 49.08422470]
[103.58061218 60.96423721]
[117.97980499 65.16699219]
[132.09031677 60.07841110]
[146.20082092 54.98983002]
[160.31132507 49.90124512]
[174.42182922 44.81266403]
[188.53233337 39.72407913]
[200.78970337 23.74612999]
[219.65496826 27.90401840]
[233.57598877 22.31784821]
[247.49700928 16.73167801]
[257.42303467 4.41159868]
[272.11627197 6.85255766]
[286.03729248 1.26638794]
[299.95831299 -4.31978178]
[313.87933350 -9.90595150]
[327.75021362 -15.61544228]
[341.56988525 -21.44780540]
[348.28515625 -27.68708801]
[355.68698120 -27.25863266]
[369.60800171 -32.84480286]
[383.52902222 -38.43097305]
[397.45004272 -44.01714325]
[411.37106323 -49.60331345]
[414.62908936 -53.76129532]
[418.75015259 -56.00810242]
[422.85333252 -56.33684158]
[426.18466187 -55.09449768]
[440.38327026 -59.93184280]
[454.58184814 -64.76918793]
[468.78045654 -69.60653687]
[482.93554688 -74.56969452]
[497.04605103 -79.65827942]
[511.15655518 -84.74685669]
[525.26708984 -89.83544159]
[539.37756348 -94.92402649]
[549.73461914 -106.88406372]
[564.33197021 -103.92316437]
[578.44244385 -109.01174927]
[592.55297852 -114.10033417]
[599.59075928 -119.97337341]
[606.95928955 -119.15158081]
[621.15789795 -123.98892975]
[631.72558594 -135.76325989]
[646.26806641 -132.54376221]
[660.46667480 -137.38110352]
[674.66522217 -142.21844482]
[688.86383057 -147.05578613]
[699.24975586 -159.74690247]
[715.38763428 -156.83129883]
[720.67620850 -141.30831909]
[709.67504883 -129.14665222]
[693.70117188 -132.85719299]
[679.50256348 -128.01985168]
[665.30401611 -123.18250275]
[651.10540771 -118.34516144]
[641.55328369 -106.91682434]
[625.99523926 -109.79032898]
[611.79663086 -104.95298767]
[597.64154053 -99.98983002]
[583.53100586 -94.90124512]
[569.42053223 -89.81266022]
[560.07275391 -78.21659851]
[544.46612549 -80.81352234]
[530.35565186 -75.72493744]
[516.24511719 -70.63635254]
[502.13464355 -65.54777527]
[488.02413940 -60.45919037]
[482.78219604 -55.21582794]
[473.61779785 -55.40793991]
[459.41918945 -50.57059479]
[445.22061157 -45.73324585]
[431.02200317 -40.89590073]
[416.95721436 -35.68229675]
[403.03619385 -30.09612656]
[389.11517334 -24.50995636]
[375.19418335 -18.92378616]
[361.27316284 -13.33761692]
[347.40225220 -7.62812567]
[333.58258057 -1.79576302]
[328.62713623 3.71915221]
[319.46548462 4.01506519]
[305.54446411 9.60123444]
[291.62344360 15.18740463]
[277.70245361 20.77357483]
[268.77212524 32.69409561]
[253.08317566 30.65269470]
[239.16215515 36.23886490]
[225.24113464 41.82503510]
[222.07095337 51.57921600]
[213.87278748 58.10185242]
[203.21745300 59.03771210]
[193.62091064 53.83458328]
[179.51040649 58.92316818]
[165.39990234 64.01174927]
[151.28939819 69.10033417]
[137.17889404 74.18891907]
[123.06838989 79.27749634]
[128.31816101 88.69265747]
[129.96347046 99.16318512]
[127.92485046 109.37995911]
[122.57571411 118.10865021]
[114.68151855 124.33883667]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 62]
[4 61]
[5 60]
[6 59]
[8 57]
[9 56]
[10 55]
[11 54]
[12 52]
[13 51]
[15 49]
[16 48]
[17 47]
[19 45]
[20 44]
[22 42]
[23 41]
[24 40]
[25 39]
[27 38]
[28 37]
[66 74]
[67 73]
[68 72]
[75 171]
[76 170]
[77 169]
[78 168]
[79 167]
[80 166]
[82 162]
[83 161]
[84 160]
[86 158]
[87 157]
[88 156]
[89 155]
[90 153]
[91 152]
[93 151]
[94 150]
[95 149]
[96 148]
[97 147]
[101 146]
[102 145]
[103 144]
[104 143]
[105 141]
[106 140]
[107 139]
[108 138]
[109 137]
[111 135]
[112 134]
[113 133]
[115 132]
[116 131]
[118 129]
[119 128]
[120 127]
[121 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
