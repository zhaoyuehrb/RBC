%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:25:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCUGCUGGUCCCGGGCGCGCGGAGGGCGCGAGCGGCGCGCGGGGGCCGAGGGGGCGCGAGGCAGCGGCGCGGGGACUCCGGGCCCCGGCGGCGGCCCAUGGGGCGGGAGGCGUGAGGCCGCUGCCUGUCCGGGGCUCGGGGGGUGGGGGGAGCGGGGCGGGGAG\
) } def
/len { sequence length } bind def

/coor [
[96.20019531 343.70462036]
[81.29261017 349.63281250]
[67.43507385 341.54898071]
[65.25791168 325.65432739]
[76.43125153 314.14190674]
[77.55220032 299.18383789]
[70.78765106 285.91394043]
[79.53459930 272.73059082]
[80.65555573 257.77252197]
[73.89099884 244.50262451]
[82.63795471 231.31925964]
[83.75890350 216.36119080]
[84.87985229 201.40313721]
[86.00080872 186.44508362]
[87.12175751 171.48703003]
[88.24270630 156.52897644]
[76.59252167 152.78112793]
[65.99393463 146.66204834]
[56.92312241 138.44659424]
[44.52954102 146.89639282]
[32.13595963 155.34620667]
[19.74237633 163.79600525]
[7.34879446 172.24580383]
[2.96540451 187.67840576]
[-11.88833714 193.74024963]
[-25.81791115 185.78120422]
[-28.13773918 169.90675354]
[-17.06825066 158.29443359]
[-1.10100627 159.85221863]
[11.29257488 151.40242004]
[23.68615723 142.95262146]
[36.07973862 134.50282288]
[48.47332001 126.05301666]
[42.42274094 104.31481934]
[45.16582870 81.91762543]
[31.65129662 75.40937042]
[18.13676453 68.90111542]
[2.34614944 69.88451385]
[-5.76363754 57.39128876]
[-19.27816963 50.88303375]
[-32.79270172 44.37477493]
[-46.36749649 37.99316406]
[-60.00136566 31.73875237]
[-76.26518250 38.12711334]
[-91.82003021 30.93697548]
[-97.27188110 15.04720592]
[-113.01468658 16.62034416]
[-121.58593750 4.43909264]
[-135.33436584 -1.55928779]
[-149.08280945 -7.55766821]
[-164.48207092 -3.05854702]
[-177.51745605 -12.41047573]
[-178.18930054 -28.43945503]
[-165.98225403 -38.84942245]
[-150.26049805 -35.65474319]
[-143.08442688 -21.30610275]
[-129.33599854 -15.30772114]
[-115.58755493 -9.30934143]
[-100.82813263 -11.31152439]
[-91.27350616 1.29877222]
[-80.03173828 -5.04750109]
[-66.99413300 -3.72758794]
[-56.95825577 4.99862862]
[-53.74695206 18.10488510]
[-40.11308670 24.35929680]
[-32.69134140 24.28983688]
[-26.28444672 30.86024284]
[-12.76991463 37.36849976]
[0.74461859 43.87675476]
[15.56858349 42.42784500]
[24.64501953 55.38658142]
[38.15955353 61.89484024]
[51.67408752 68.40309143]
[63.84089661 54.98580551]
[79.56590271 45.99809265]
[97.30170441 42.32437515]
[115.30303192 44.32616806]
[131.79847717 51.80648041]
[145.16482544 64.02922821]
[158.01269531 56.28763199]
[170.86056519 48.54603577]
[183.70843506 40.80444336]
[196.55630493 33.06285095]
[209.40417480 25.32125473]
[222.25204468 17.57966042]
[235.09991455 9.83806705]
[247.94776917 2.09647274]
[260.79565430 -5.64512157]
[273.64352417 -13.38671589]
[286.11557007 -21.72026825]
[298.18450928 -30.62757111]
[310.25347900 -39.53487396]
[322.32244873 -48.44217682]
[334.39141846 -57.34947968]
[346.46038818 -66.25678253]
[358.52935791 -75.16408539]
[370.59832764 -84.07138824]
[382.66729736 -92.97869110]
[394.73626709 -101.88599396]
[406.72140503 -110.90575409]
[418.62170410 -120.03717041]
[430.52200317 -129.16859436]
[442.42230225 -138.30001831]
[440.33804321 -153.51683044]
[446.15628052 -167.73103333]
[458.31195068 -177.11907959]
[473.53521729 -179.15563965]
[487.73110962 -173.29287720]
[497.08102417 -161.10784912]
[499.06985474 -145.87826538]
[493.16262817 -131.70080566]
[480.94833374 -122.38915253]
[465.71261597 -120.44807434]
[451.55374146 -126.39971161]
[439.65344238 -117.26829529]
[427.75314331 -108.13687134]
[415.85284424 -99.00544739]
[412.44628906 -92.41131592]
[403.64355469 -89.81702423]
[391.57458496 -80.90972137]
[379.50561523 -72.00241852]
[367.43664551 -63.09511948]
[355.36770630 -54.18781662]
[343.29873657 -45.28051376]
[331.22976685 -36.37321091]
[319.16079712 -27.46590805]
[307.09182739 -18.55860519]
[295.02285767 -9.65130234]
[309.16146851 -4.64136124]
[314.24057007 9.47256374]
[306.53640747 22.34292030]
[291.69729614 24.53387451]
[280.60241699 14.43913841]
[281.38510132 -0.53884721]
[268.53723145 7.20274687]
[255.68937683 14.94434071]
[242.84150696 22.68593597]
[229.99363708 30.42752838]
[217.14576721 38.16912460]
[204.29789734 45.91071701]
[191.45002747 53.65231323]
[178.60215759 61.39390564]
[165.75428772 69.13549805]
[152.90641785 76.87709045]
[155.92340088 85.63572693]
[157.50082397 94.76411438]
[157.59808350 104.02728271]
[156.21269226 113.18678284]
[153.38031006 122.00683594]
[149.17384338 130.26040649]
[143.70156860 137.73501587]
[137.10435486 144.23828125]
[129.55201721 149.60279846]
[121.23896027 153.69046021]
[112.37919617 156.39604187]
[103.20076752 157.64991760]
[102.07981110 172.60798645]
[100.95886230 187.56604004]
[99.83791351 202.52409363]
[98.71695709 217.48214722]
[97.59600830 232.44020081]
[104.28038788 246.77999878]
[95.61360931 258.89346313]
[94.49266052 273.85153198]
[101.17703247 288.19131470]
[92.51026154 300.30480957]
[91.38931274 315.26284790]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 167]
[6 166]
[8 164]
[9 163]
[11 161]
[12 160]
[13 159]
[14 158]
[15 157]
[16 156]
[19 33]
[20 32]
[21 31]
[22 30]
[23 29]
[35 73]
[36 72]
[37 71]
[39 69]
[40 68]
[41 67]
[42 65]
[43 64]
[46 60]
[48 58]
[49 57]
[50 56]
[79 144]
[80 143]
[81 142]
[82 141]
[83 140]
[84 139]
[85 138]
[86 137]
[87 136]
[88 135]
[89 134]
[90 128]
[91 127]
[92 126]
[93 125]
[94 124]
[95 123]
[96 122]
[97 121]
[98 120]
[99 119]
[100 117]
[101 116]
[102 115]
[103 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
