%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:40:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGGUCAGGACCUCUUCUGAAAUGGGAGUUUAAGACCUACAAUCAGACAAGGGCAGGGAGCUGUCUUGACCCCCAGUGGAGGCUGACAAUUUUUUUCCUGUGUACACUGGACCCCUUUCAUAGAGGUGGGUGCUAUGCAAGUGGAGCUGGUGACUGAUGGCUGACCAUUGAUACAGGCUAGGAAUACCA\
) } def
/len { sequence length } bind def

/coor [
[84.51473999 136.06777954]
[73.77558136 129.20545959]
[65.80105591 119.26423645]
[51.56601334 123.99324799]
[37.33097076 128.72225952]
[23.09592819 133.45127869]
[8.86088467 138.18028259]
[-5.37415791 142.90930176]
[-19.60920143 147.63830566]
[-33.84424210 152.36732483]
[-35.43664932 167.71199036]
[-51.14342499 179.65913391]
[-64.29515076 186.87246704]
[-77.44687653 194.08580017]
[-81.96913147 208.99172974]
[-95.40960693 216.11972046]
[-109.59226990 211.71658325]
[-122.74399567 218.92991638]
[-135.89572144 226.14324951]
[-149.04743958 233.35658264]
[-162.19917297 240.56990051]
[-166.78115845 257.44415283]
[-181.84877014 265.63015747]
[-197.85595703 260.49685669]
[-210.88726807 267.92550659]
[-223.91856384 275.35418701]
[-236.94987488 282.78283691]
[-237.66571045 298.19360352]
[-246.61820984 310.75769043]
[-260.95065308 316.46594238]
[-276.08963013 313.49691772]
[-287.20434570 302.79800415]
[-290.74810791 287.78314209]
[-285.59011841 273.24359131]
[-273.37631226 263.81881714]
[-258.00402832 262.51626587]
[-244.37854004 269.75152588]
[-231.34722900 262.32287598]
[-218.31593323 254.89421082]
[-205.28462219 247.46554565]
[-203.65017700 234.67440796]
[-194.81111145 225.01965332]
[-181.83317566 222.18211365]
[-169.41250610 227.41818237]
[-156.26077271 220.20484924]
[-143.10905457 212.99151611]
[-129.95732117 205.77819824]
[-116.80560303 198.56486511]
[-112.89555359 184.23841858]
[-99.66059113 176.73571777]
[-84.66020966 180.93406677]
[-71.50848389 173.72074890]
[-58.35675430 166.50741577]
[-59.21980667 151.53225708]
[-73.11314392 145.87759399]
[-87.00647736 140.22293091]
[-100.89981079 134.56826782]
[-117.06237030 137.34382629]
[-127.33787537 124.56312561]
[-121.15576172 109.37387085]
[-104.87566376 107.40145111]
[-95.24514771 120.67493439]
[-81.35181427 126.32959747]
[-67.45847321 131.98426819]
[-53.56513977 137.63893127]
[-38.57325745 138.13227844]
[-24.33821297 133.40327454]
[-10.10317039 128.67425537]
[4.13187218 123.94524384]
[18.36691475 119.21623230]
[32.60195923 114.48722076]
[46.83700180 109.75820923]
[61.07204437 105.02919769]
[63.52394104 85.50255585]
[75.14532471 69.62033844]
[68.04039764 56.40973663]
[60.93547440 43.19913483]
[53.83054733 29.98853111]
[39.60519028 21.82940674]
[39.82910919 5.43178797]
[54.27194977 -2.33586049]
[68.07615662 6.51715183]
[67.04115295 22.88360596]
[74.14607239 36.09420776]
[81.25099945 49.30480957]
[88.35592651 62.51541519]
[102.96336365 60.86054230]
[117.15512085 64.69588470]
[128.94047546 73.48344421]
[136.66625977 85.99056244]
[151.44309998 83.41284180]
[166.21995544 80.83512115]
[180.99681091 78.25740051]
[195.77366638 75.67967987]
[210.55052185 73.10195923]
[219.64581299 60.45626831]
[234.66836548 58.05259705]
[246.66802979 66.80149841]
[261.44488525 64.22377777]
[276.22174072 61.64605713]
[290.99859619 59.06833649]
[305.77545166 56.49061584]
[320.55230713 53.91289520]
[335.32916260 51.33517075]
[346.73165894 29.73985863]
[377.53311157 29.91781998]
[391.02462769 23.36197090]
[404.51614380 16.80612183]
[418.00762939 10.25027370]
[431.49914551 3.69442511]
[444.99066162 -2.86142397]
[450.24264526 -17.52616119]
[464.01834106 -23.98253250]
[477.96655273 -18.88520241]
[491.45806885 -25.44105148]
[504.89520264 -32.10763168]
[518.27703857 -38.88449478]
[531.65893555 -45.66135788]
[540.47473145 -58.79877853]
[555.32470703 -57.64621353]
[568.70654297 -64.42307281]
[582.08837891 -71.19993591]
[595.47027588 -77.97679901]
[608.85211182 -84.75366211]
[610.32720947 -100.11034393]
[619.88854980 -112.21755981]
[634.48510742 -117.21194458]
[649.45916748 -113.49980927]
[660.03265381 -102.26567841]
[662.83148193 -87.09432983]
[656.96264648 -72.82687378]
[644.29882812 -64.01601410]
[628.88104248 -63.47325897]
[615.62896729 -71.37180328]
[602.24713135 -64.59494019]
[588.86529541 -57.81807709]
[575.48339844 -51.04121780]
[562.10156250 -44.26435471]
[554.24285889 -31.61166000]
[538.43579102 -32.27949905]
[525.05389404 -25.50263596]
[511.67205811 -18.72577477]
[507.11743164 -12.88908005]
[498.01391602 -11.94954205]
[484.52239990 -5.39369297]
[479.91046143 8.72245789]
[466.32156372 15.56321239]
[451.54650879 10.63008595]
[438.05499268 17.18593597]
[424.56347656 23.74178314]
[411.07199097 30.29763222]
[397.58047485 36.85348129]
[384.08895874 43.40933228]
[383.28863525 50.86650848]
[395.40472412 59.70962906]
[381.68798828 65.78086090]
[380.88766479 73.23803711]
[392.68078613 82.50748444]
[404.47390747 91.77693176]
[416.26699829 101.04637909]
[428.06011963 110.31582642]
[444.36096191 112.10875702]
[450.71002197 127.22898102]
[440.57595825 140.12210083]
[424.38381958 137.52479553]
[418.79064941 122.10893250]
[406.99755859 112.83948517]
[395.20443726 103.57003784]
[383.41134644 94.30059052]
[371.61822510 85.03114319]
[348.43951416 81.63803101]
[337.90686035 66.11202240]
[323.13000488 68.68974304]
[308.35317993 71.26746368]
[293.57632446 73.84519196]
[278.79946899 76.42291260]
[264.02261353 79.00063324]
[249.24575806 81.57835388]
[240.91705322 93.87340546]
[225.96794128 96.69808197]
[213.12823486 87.87880707]
[198.35137939 90.45652771]
[183.57453918 93.03424835]
[168.79768372 95.61196899]
[154.02082825 98.18968964]
[139.24397278 100.76741791]
[136.92953491 113.29994202]
[130.72190857 124.43037415]
[121.27552795 132.98530579]
[109.58625031 138.06288147]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 73]
[4 72]
[5 71]
[6 70]
[7 69]
[8 68]
[9 67]
[10 66]
[12 53]
[13 52]
[14 51]
[17 48]
[18 47]
[19 46]
[20 45]
[21 44]
[24 40]
[25 39]
[26 38]
[27 37]
[54 65]
[55 64]
[56 63]
[57 62]
[75 86]
[76 85]
[77 84]
[78 83]
[90 186]
[91 185]
[92 184]
[93 183]
[94 182]
[95 181]
[98 178]
[99 177]
[100 176]
[101 175]
[102 174]
[103 173]
[104 172]
[106 153]
[107 152]
[108 151]
[109 150]
[110 149]
[111 148]
[114 145]
[115 144]
[116 142]
[117 141]
[118 140]
[120 138]
[121 137]
[122 136]
[123 135]
[124 134]
[157 170]
[158 169]
[159 168]
[160 167]
[161 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
