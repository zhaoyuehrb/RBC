%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCCCGCUGGAGAGGAAGCCCGAGAGCUGCCGCGCGCCUGCCGGACGAGGGCGUAGAAGCCAGGCGUCAGAGCCCGGGCUCCGGUGGGGUCCCCCACCCGGCCCUCGGGUCCCCCGCCCCCUGCUCCCUGCCCAUCCCAGCCCACGCGACCCUCUCGCGCGCGGAGGGGCGGGUCCUCGACGGCUACGGGAAGGUGCCAGCCCGCCCCGG\
) } def
/len { sequence length } bind def

/coor [
[352.02877808 341.44784546]
[347.14721680 334.98425293]
[344.36300659 327.34201050]
[343.93933105 319.18569946]
[345.93307495 311.23068237]
[350.18835449 304.18051147]
[356.34826660 298.66473389]
[351.96743774 284.31872559]
[347.58657837 269.97271729]
[343.20571899 255.62669373]
[329.97717285 248.87828064]
[325.33001709 234.39178467]
[332.49807739 220.56222534]
[328.11721802 206.21621704]
[323.73635864 191.87019348]
[319.35549927 177.52418518]
[314.97467041 163.17816162]
[290.30636597 159.68025208]
[281.42556763 139.00965881]
[267.36425781 133.78663635]
[253.30297852 128.56359863]
[239.24168396 123.34058380]
[225.18038940 118.11755371]
[211.11907959 112.89453125]
[197.05778503 107.67150879]
[182.43286133 110.49295044]
[172.19044495 98.43460846]
[158.12915039 93.21158600]
[144.06785583 87.98855591]
[130.00656128 82.76553345]
[136.65425110 111.77661133]
[117.58485413 138.57661438]
[81.78070831 142.55529785]
[67.31117249 146.50910950]
[52.84164047 150.46292114]
[38.37210464 154.41671753]
[30.91950607 159.69708252]
[23.65882683 158.32020569]
[9.13229275 162.05917358]
[-5.39424086 165.79812622]
[-10.97245121 180.27787781]
[-24.01457405 188.68518066]
[-39.50564575 187.78724670]
[-51.48903656 177.92935181]
[-55.35688400 162.90206909]
[-49.62192535 148.48368835]
[-36.48936462 140.21836853]
[-21.00894547 141.28428650]
[-9.13320065 151.27159119]
[5.39333344 147.53263855]
[19.91986656 143.79368591]
[34.41829681 139.94718933]
[48.88783264 135.99337769]
[63.35736465 132.03958130]
[77.82689667 128.08576965]
[78.71395111 120.63841248]
[66.70160675 111.65488434]
[80.48804474 105.74369049]
[81.37509155 98.29633331]
[68.23906708 91.05445099]
[55.10304642 83.81256866]
[41.96702194 76.57068634]
[23.56948471 77.36133575]
[15.08998299 61.99655914]
[1.84808838 54.95012283]
[-11.39380550 47.90369034]
[-26.43394279 52.75856400]
[-40.46357346 45.48222733]
[-45.15916061 30.39160347]
[-37.73490143 16.43968773]
[-22.59547615 11.90390778]
[-8.72283459 19.47525978]
[-4.34737158 34.66179657]
[8.89452267 41.70822906]
[22.13641739 48.75466537]
[33.79276276 45.52286148]
[44.88224792 51.28435898]
[49.20890427 63.43466187]
[62.34492874 70.67654419]
[75.48095703 77.91842651]
[88.61698151 85.16030884]
[94.11306763 80.05707550]
[105.10524750 69.85060883]
[110.60133362 64.74736786]
[104.35173035 51.11129761]
[98.10213470 37.47522354]
[91.85253143 23.83915138]
[85.60292816 10.20307827]
[79.35332489 -3.43299437]
[65.67618561 -12.48108196]
[66.94343567 -28.83119202]
[81.85143280 -35.66373444]
[95.06410980 -25.94997406]
[92.98940277 -9.68259525]
[99.23900604 3.95347762]
[105.48860168 17.58955002]
[111.73820496 31.22562408]
[117.98780823 44.86169815]
[124.23740387 58.49776840]
[135.22958374 68.70423889]
[149.29087830 73.92726135]
[163.35217285 79.15029144]
[177.41346741 84.37331390]
[193.04415894 81.92546082]
[202.28082275 93.61021423]
[216.34211731 98.83323669]
[230.40341187 104.05625916]
[244.46470642 109.27928925]
[258.52600098 114.50231171]
[272.58728027 119.72533417]
[286.64859009 124.94835663]
[299.76330566 115.90058899]
[316.73788452 117.92587280]
[328.91653442 131.52816772]
[342.45852661 125.07718658]
[356.00048828 118.62620544]
[369.54244995 112.17523193]
[383.08441162 105.72425079]
[396.62637329 99.27326965]
[410.16836548 92.82229614]
[423.71032715 86.37131500]
[437.20413208 79.82017517]
[450.64901733 73.16924286]
[464.09390259 66.51830292]
[477.53878784 59.86736298]
[475.52120972 51.85660553]
[476.39108276 42.94268799]
[480.48767090 34.19971085]
[487.74627686 26.81209755]
[497.66806030 21.92329788]
[509.34576416 20.47854233]
[521.13238525 11.20086288]
[520.40014648 -4.29892492]
[528.94641113 -17.25041199]
[543.48498535 -22.67348671]
[558.42547607 -18.48286629]
[568.02294922 -6.28992987]
[568.58703613 9.21688938]
[559.90075684 22.07490349]
[545.30419922 27.33994484]
[530.41009521 22.98749352]
[518.62341309 32.26517487]
[521.69763184 39.10617447]
[536.62084961 40.62220001]
[527.84600830 52.78817749]
[530.92022705 59.62918091]
[545.68371582 56.97582626]
[560.44714355 54.32247162]
[575.21063232 51.66912079]
[589.97406006 49.01576614]
[600.27636719 36.71768951]
[616.31060791 37.24863815]
[625.77673340 50.20131302]
[621.41314697 65.63953400]
[606.56719971 71.72041321]
[592.62744141 63.77922440]
[577.86395264 66.43257904]
[563.10052490 69.08592987]
[548.33703613 71.73928833]
[533.57360840 74.39263916]
[505.26974487 86.72280884]
[484.18972778 73.31224823]
[470.74484253 79.96318817]
[457.29995728 86.61412811]
[443.85507202 93.26506805]
[439.25387573 99.04799652]
[430.16128540 99.91328430]
[416.61932373 106.36426544]
[403.07736206 112.81523895]
[389.53540039 119.26622009]
[375.99343872 125.71719360]
[362.45144653 132.16816711]
[348.90948486 138.61915588]
[335.36752319 145.07012939]
[329.32067871 158.79731750]
[333.70153809 173.14332581]
[338.08236694 187.48934937]
[342.46322632 201.83535767]
[346.84408569 216.18138123]
[360.51513672 223.64727783]
[364.75360107 238.25859070]
[357.55172729 251.24584961]
[361.93258667 265.59185791]
[366.31344604 279.93786621]
[370.69430542 294.28387451]
[391.35519409 303.15545654]
[398.59527588 324.15084839]
[388.05969238 343.38699341]
[393.69711304 357.28735352]
[399.33450317 371.18768311]
[404.97192383 385.08804321]
[421.20602417 391.60620117]
[427.57739258 407.53518677]
[420.59671021 422.83618164]
[426.43948364 436.65145874]
[432.28225708 450.46673584]
[445.68527222 459.91616821]
[443.93408203 476.22152710]
[428.83013916 482.60931396]
[415.91113281 472.50827026]
[418.46697998 456.30950928]
[412.62420654 442.49423218]
[406.78143311 428.67895508]
[394.28112793 425.55480957]
[385.73486328 415.65371704]
[384.43215942 402.44381714]
[391.07159424 390.72546387]
[385.43417358 376.82510376]
[379.79675293 362.92477417]
[374.15933228 349.02441406]
[366.16467285 348.77224731]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 185]
[8 184]
[9 183]
[10 182]
[13 179]
[14 178]
[15 177]
[16 176]
[17 175]
[19 111]
[20 110]
[21 109]
[22 108]
[23 107]
[24 106]
[25 105]
[27 103]
[28 102]
[29 101]
[30 100]
[33 55]
[34 54]
[35 53]
[36 52]
[38 51]
[39 50]
[40 49]
[59 81]
[60 80]
[61 79]
[62 78]
[64 75]
[65 74]
[66 73]
[84 99]
[85 98]
[86 97]
[87 96]
[88 95]
[89 94]
[114 174]
[115 173]
[116 172]
[117 171]
[118 170]
[119 169]
[120 168]
[121 167]
[122 165]
[123 164]
[124 163]
[125 162]
[131 142]
[132 141]
[146 160]
[147 159]
[148 158]
[149 157]
[150 156]
[188 210]
[189 209]
[190 208]
[191 207]
[194 203]
[195 202]
[196 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
