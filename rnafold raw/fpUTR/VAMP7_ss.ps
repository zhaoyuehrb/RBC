%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:33:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGGAGGAGCGCUCCCACUCCCAAGAGGCCACGCGUAGACGGGGCGCUUCAUGCGGAAGUCAGCGGCGUCCGGUCCCAGCCUCCUCUGGGAGCGGGCAGUUGGCGACCCUGCACUGACCCGCGUCCCUCCGUCCCGAGCCCGCGCGCCCUCAGAGGGUGCCCGGACAGACUGAAGCC\
) } def
/len { sequence length } bind def

/coor [
[148.21571350 194.76657104]
[150.73405457 186.44761658]
[154.62463379 178.66940308]
[159.77706909 171.65655518]
[150.09051514 160.20358276]
[140.40396118 148.75061035]
[130.61727905 137.38307190]
[120.73121643 126.10186768]
[110.84515381 114.82065582]
[95.86593628 114.03123474]
[84.84886932 124.21082306]
[73.83179474 134.39042664]
[62.81472397 144.57000732]
[67.19351959 159.15039062]
[64.81728363 174.12506104]
[56.21021652 186.53225708]
[43.12350082 193.94163513]
[28.17919731 194.93019104]
[14.34496689 189.35528564]
[3.32789540 199.53488159]
[-7.68917561 209.71447754]
[-12.03627872 225.52696228]
[-27.97002029 229.40612793]
[-39.09913254 217.36141968]
[-33.97493744 201.78340149]
[-17.86877060 198.69740295]
[-6.85169888 188.51780701]
[4.16537237 178.33821106]
[-0.30067939 164.10726929]
[1.86384356 149.28753662]
[10.28261852 136.82618713]
[23.33021164 129.22483826]
[38.44567108 128.03746033]
[52.63513184 133.55294800]
[63.65220261 123.37335205]
[74.66927338 113.19375610]
[85.68634033 103.01416016]
[70.68637085 103.04334259]
[61.97524261 90.83203125]
[66.88499451 76.65830994]
[81.28315735 72.45201111]
[93.05102539 81.75360107]
[90.69151306 66.94033813]
[88.33199310 52.12707901]
[85.97247314 37.31381989]
[83.61296082 22.50055885]
[81.25344086 7.68729782]
[78.89392090 -7.12596226]
[65.49127960 -22.15807533]
[73.10980988 -39.91176224]
[70.23188019 -54.63309479]
[67.35395813 -69.35442352]
[64.34696198 -84.04992676]
[61.21111679 -98.71848297]
[58.07527924 -113.38703918]
[54.93943787 -128.05558777]
[51.80359650 -142.72415161]
[41.40921402 -150.39294434]
[39.11154938 -162.69619751]
[45.60814285 -172.92175293]
[42.73021698 -187.64308167]
[39.85229111 -202.36441040]
[27.02411652 -211.20045471]
[24.31520081 -226.17097473]
[32.81807709 -238.34622192]
[29.94014931 -253.06755066]
[27.06222343 -267.78887939]
[24.18429756 -282.51019287]
[21.17729950 -297.20571899]
[18.04145813 -311.87426758]
[14.90561771 -326.54281616]
[11.76977730 -341.21139526]
[8.63393688 -355.87994385]
[-1.81740654 -367.75765991]
[3.08821487 -381.82122803]
[-0.04762569 -396.48977661]
[-3.18346620 -411.15832520]
[-6.31930685 -425.82687378]
[-9.45514679 -440.49545288]
[-12.59098721 -455.16400146]
[-25.99023247 -463.54467773]
[-29.45742989 -478.96395874]
[-20.93555450 -492.27383423]
[-5.48048162 -495.57781982]
[7.73856592 -486.91571045]
[10.87896252 -471.42657471]
[2.07756734 -458.29983521]
[5.21340799 -443.63128662]
[8.34924793 -428.96273804]
[11.48508835 -414.29415894]
[14.62092972 -399.62561035]
[17.75676918 -384.95706177]
[27.98381615 -374.12854004]
[23.30249214 -359.01577759]
[26.43833160 -344.34722900]
[29.57417297 -329.67868042]
[32.71001434 -315.01010132]
[35.84585571 -300.34155273]
[40.33202362 -294.44064331]
[38.90562820 -285.38812256]
[41.78355408 -270.66680908]
[44.66147995 -255.94548035]
[47.53940582 -241.22415161]
[60.00141525 -233.14739990]
[63.12975311 -218.25886536]
[54.57361984 -205.24232483]
[57.45154572 -190.52099609]
[60.32947159 -175.79966736]
[72.55431366 -163.22645569]
[66.47215271 -145.85998535]
[69.60799408 -131.19143677]
[72.74383545 -116.52288055]
[75.87967682 -101.85432434]
[79.01551056 -87.18576813]
[83.50168610 -81.28485870]
[82.07528687 -72.23234558]
[84.95321655 -57.51102066]
[87.83113861 -42.78968811]
[96.81611633 -37.84902954]
[101.68669891 -28.57670212]
[100.61189270 -17.93720055]
[93.70718384 -9.48547935]
[96.06670380 5.32778072]
[98.42621613 20.14104080]
[100.78573608 34.95429993]
[103.14525604 49.76756287]
[105.50476837 64.58081818]
[107.86428833 79.39408112]
[122.12636566 104.93458557]
[132.01242065 116.21580505]
[141.89848328 127.49701691]
[149.93260193 131.90560913]
[151.85693359 139.06405640]
[161.54348755 150.51702881]
[171.23005676 161.97000122]
[192.35496521 154.69488525]
[214.52832031 157.09172058]
[233.54226685 168.67137146]
[245.80308533 187.20539856]
[249.01042175 209.15473938]
[242.58877563 230.34552002]
[254.45561218 239.52038574]
[266.32244873 248.69526672]
[281.97265625 251.01510620]
[287.30889893 264.92098999]
[299.17572021 274.09585571]
[311.04257202 283.27072144]
[322.90939331 292.44561768]
[334.77621460 301.62048340]
[346.64306641 310.79534912]
[358.50988770 319.97021484]
[374.73886108 324.87496948]
[374.51843262 341.82748413]
[358.16741943 346.30859375]
[349.33502197 331.83706665]
[337.46817017 322.66217041]
[325.60134888 313.48730469]
[313.73452759 304.31243896]
[301.86767578 295.13757324]
[290.00085449 285.96270752]
[278.13403320 276.78781128]
[263.33261108 275.12423706]
[257.14758301 260.56210327]
[245.28074646 251.38722229]
[233.41390991 242.21234131]
[226.73210144 247.64854431]
[219.22300720 251.87960815]
[211.10189819 254.78227234]
[202.60189819 256.27133179]
[193.96730042 256.30221558]
[185.44662476 254.87226868]
[177.28535461 252.02090454]
[169.71893311 247.82853699]
[162.96600342 242.41429138]
[157.22196960 235.93260193]
[152.65347290 228.56883240]
[149.39347839 220.53399658]
[147.53741455 212.05865479]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 135]
[5 134]
[6 133]
[7 131]
[8 130]
[9 129]
[10 37]
[11 36]
[12 35]
[13 34]
[19 28]
[20 27]
[21 26]
[42 128]
[43 127]
[44 126]
[45 125]
[46 124]
[47 123]
[48 122]
[50 118]
[51 117]
[52 116]
[53 114]
[54 113]
[55 112]
[56 111]
[57 110]
[60 108]
[61 107]
[62 106]
[65 103]
[66 102]
[67 101]
[68 100]
[69 98]
[70 97]
[71 96]
[72 95]
[73 94]
[75 92]
[76 91]
[77 90]
[78 89]
[79 88]
[80 87]
[141 165]
[142 164]
[143 163]
[145 161]
[146 160]
[147 159]
[148 158]
[149 157]
[150 156]
[151 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
