%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCACCUGAAGCCCUUCGGGGCAGAGGAGGGCGGGGACUCGGGGCGGCUCUCAGCAUCCGCCUGGAGCUCGUGGCGCUGUGUUUCCGUGCUGUGGAGUUGCCUGGUCCGCUUCCUCCCCGCGAAUAAGAAUAAAAGAUUCUGGAGGAGUUGGAGAAGAGUGUAUUCAGCCCCCAAACCACGAGAUCAACAAAGAA\
) } def
/len { sequence length } bind def

/coor [
[103.98651886 142.13436890]
[99.94963837 127.68778229]
[92.46504211 127.20726013]
[77.49586487 126.24620819]
[70.01127625 125.76567841]
[64.16014099 139.57742310]
[58.30901337 153.38917542]
[52.45788574 167.20091248]
[46.60675812 181.01264954]
[40.75562668 194.82440186]
[43.30168533 211.02470398]
[30.37655258 221.11791992]
[15.27649689 214.72100830]
[13.53516197 198.41458130]
[26.94388199 188.97326660]
[32.79501343 175.16152954]
[38.64614105 161.34977722]
[44.49726868 147.53804016]
[50.34840012 133.72628784]
[56.19952774 119.91455078]
[52.74462509 105.31784821]
[41.32293320 95.59442139]
[25.79931068 92.54029846]
[21.12371826 78.39858246]
[12.54920101 75.21292877]
[9.59850502 68.42662048]
[-1.66587114 58.52137756]
[-12.93024826 48.61613464]
[-24.19462395 38.71089554]
[-35.45899963 28.80565262]
[-46.72337723 18.90040970]
[-62.19605637 15.59786415]
[-66.64438629 1.38302636]
[-82.11706543 -1.91951907]
[-86.56539154 -16.13435745]
[-97.82977295 -26.03959846]
[-109.09414673 -35.94483948]
[-120.35852051 -45.85008240]
[-131.62289429 -55.75532532]
[-138.03926086 -57.43104553]
[-142.03787231 -61.49139023]
[-143.08302307 -66.16310120]
[-154.02413940 -76.42430115]
[-164.96524048 -86.68549347]
[-175.90635681 -96.94668579]
[-186.84745789 -107.20787811]
[-197.78857422 -117.46907806]
[-208.72969055 -127.73027039]
[-219.67079163 -137.99145508]
[-230.61190796 -148.25265503]
[-241.55302429 -158.51385498]
[-252.57600403 -168.68702698]
[-263.68017578 -178.77154541]
[-274.78436279 -188.85606384]
[-285.88851929 -198.94056702]
[-296.99270630 -209.02508545]
[-308.09686279 -219.10960388]
[-319.62463379 -222.06735229]
[-324.09887695 -231.66230774]
[-336.53744507 -240.04577637]
[-348.97598267 -248.42922974]
[-361.41452026 -256.81268311]
[-376.73547363 -254.00080872]
[-389.23049927 -262.68002319]
[-391.81680298 -277.30352783]
[-408.20504761 -277.90124512]
[-415.64138794 -292.51742554]
[-406.47592163 -306.11621094]
[-390.13732910 -304.70831299]
[-383.43331909 -289.74206543]
[-368.90802002 -292.83251953]
[-356.17413330 -284.50769043]
[-353.03106689 -269.25125122]
[-340.59252930 -260.86779785]
[-328.15396118 -252.48431396]
[-315.71542358 -244.10086060]
[-319.76092529 -258.54501343]
[-316.35974121 -273.15432739]
[-306.35055542 -284.32644653]
[-292.20138550 -289.30651855]
[-277.40115356 -286.86657715]
[-265.59930420 -277.60830688]
[-259.70590210 -263.81454468]
[-261.17416382 -248.88656616]
[-269.64205933 -236.50532532]
[-283.02154541 -229.72377014]
[-298.01235962 -230.21376038]
[-286.90817261 -220.12925720]
[-275.80401611 -210.04473877]
[-264.69982910 -199.96022034]
[-253.59567261 -189.87571716]
[-242.49150085 -179.79119873]
[-235.41749573 -177.61888123]
[-231.29182434 -169.45495605]
[-220.35070801 -159.19377136]
[-209.40960693 -148.93257141]
[-198.46849060 -138.67137146]
[-187.52737427 -128.41018677]
[-176.58627319 -118.14899445]
[-165.64515686 -107.88779449]
[-154.70405579 -97.62660217]
[-143.76293945 -87.36540985]
[-132.82182312 -77.10421753]
[-121.71765900 -67.01969910]
[-110.45328522 -57.11445999]
[-99.18890381 -47.20921707]
[-87.92453003 -37.30397415]
[-76.66014862 -27.39873314]
[-61.99317932 -24.80467796]
[-56.73914337 -9.88135052]
[-42.07217026 -7.28729391]
[-36.81813431 7.63603354]
[-25.55375862 17.54127502]
[-14.28938198 27.44651794]
[-3.02500582 37.35176086]
[8.23937035 47.25699997]
[19.50374794 57.16224289]
[30.84714508 66.97689056]
[45.55381393 69.33553314]
[51.04636002 84.17273712]
[62.46804810 93.89616394]
[64.79333496 80.05369568]
[72.32477570 67.21575165]
[84.58605957 57.35733795]
[100.35295868 52.21900940]
[117.76827240 53.02662277]
[134.55995178 60.26611328]
[148.27615356 54.19436646]
[161.99234009 48.12261581]
[175.70852661 42.05086517]
[189.42471313 35.97911453]
[196.52403259 21.59233665]
[212.22848511 18.31370544]
[224.49098206 28.65830421]
[223.90476990 44.69064331]
[210.91955566 54.11208344]
[195.49645996 49.69530487]
[181.78027344 55.76705551]
[168.06408691 61.83880234]
[154.34790039 67.91055298]
[140.63171387 73.98230743]
[141.23262024 88.97026062]
[155.39086914 93.92444611]
[164.53727722 93.80613708]
[169.73524475 99.07316589]
[183.81227112 104.25363922]
[192.95941162 104.28193665]
[198.07229614 109.63160706]
[212.06448364 115.03704071]
[226.05667114 120.44247437]
[240.04884338 125.84790802]
[254.04103088 131.25334167]
[268.03323364 136.65878296]
[279.93942261 126.95631409]
[295.10427856 124.52268219]
[309.44854736 130.01251221]
[319.11361694 141.94906616]
[321.49972534 157.12149048]
[315.96496582 171.44845581]
[303.99816895 181.07608032]
[288.81832886 183.41461182]
[274.50878906 177.83496094]
[264.91870117 165.83804321]
[262.62777710 150.65097046]
[248.63560486 145.24552917]
[234.64341736 139.84010315]
[220.65122986 134.43466187]
[206.65904236 129.02923584]
[192.66685486 123.62379456]
[178.63180542 118.33066559]
[164.55477905 113.15019226]
[150.43667603 108.08270264]
[136.27842712 103.12850952]
[130.80787659 108.25910950]
[134.22407532 122.86491394]
[119.86676788 118.52030182]
[114.39620972 123.65090179]
[118.43309784 138.09747314]
[133.54867554 138.70950317]
[147.73460388 143.96446228]
[159.60110474 153.34748840]
[167.98561096 165.93936157]
[172.06669617 180.50645447]
[171.44453430 195.62161255]
[166.18008423 209.80401611]
[156.78909302 221.66423035]
[144.19160461 230.04029846]
[129.62179565 234.11161804]
[114.50704956 233.47932434]
[100.32817078 228.20538330]
[88.47425842 218.80644226]
[80.10663605 206.20335388]
[76.04507446 191.63081360]
[76.68749237 176.51649475]
[81.97094727 162.34115601]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 178]
[2 177]
[5 20]
[6 19]
[7 18]
[8 17]
[9 16]
[10 15]
[21 121]
[22 120]
[24 118]
[26 117]
[27 116]
[28 115]
[29 114]
[30 113]
[31 112]
[33 110]
[35 108]
[36 107]
[37 106]
[38 105]
[39 104]
[42 103]
[43 102]
[44 101]
[45 100]
[46 99]
[47 98]
[48 97]
[49 96]
[50 95]
[51 94]
[52 92]
[53 91]
[54 90]
[55 89]
[56 88]
[57 87]
[59 76]
[60 75]
[61 74]
[62 73]
[65 70]
[127 141]
[128 140]
[129 139]
[130 138]
[131 137]
[142 173]
[143 172]
[145 171]
[146 170]
[148 169]
[149 168]
[150 167]
[151 166]
[152 165]
[153 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
