%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:43:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUCACCGCAGUGGCUGAGCUGCUGACAGGAGGCGGCAGCGGAGUAGGAGGCGAGGCAAGACCUGCGGCUCGGCCCGGCCACAGCCGCGGUAGUGCUAGGCAAGCCCACGGAGUCACGCCGGCCUCAGCCAGUCUGCGAACCUCUCGCCCCCGCCCACCCCUGCAUCCGCCCGGCCCCUGCCCGCCCGAGUGGUCCGGGGAGGCCUAGUCUGCACCACCCGCCGGGCUCCUGGGGCCGCCGCCCCGCGCGGUCC\
UGUCGGCGUCCGCGGCCGCGCCCGGCCCCUGGCCCGCUCGCCCGCCGGCACC\
) } def
/len { sequence length } bind def

/coor [
[402.47485352 522.36816406]
[395.06246948 523.51116943]
[392.17364502 538.23040771]
[389.28482056 552.94958496]
[386.39599609 567.66876221]
[383.50714111 582.38793945]
[380.61831665 597.10717773]
[386.43826294 612.43884277]
[375.86239624 624.97210693]
[359.77023315 621.81378174]
[354.71603394 606.21295166]
[365.89913940 594.21832275]
[368.78796387 579.49914551]
[371.67678833 564.77990723]
[374.56561279 550.06072998]
[377.45443726 535.34155273]
[380.34329224 520.62237549]
[367.37063599 528.15295410]
[353.06106567 523.65441895]
[346.73092651 510.05557251]
[352.50146484 496.20996094]
[366.61572266 491.13186646]
[379.88430786 498.12704468]
[376.39752197 483.53793335]
[372.91070557 468.94882202]
[369.42391968 454.35971069]
[365.93710327 439.77059937]
[362.45031738 425.18148804]
[358.96350098 410.59234619]
[355.47671509 396.00323486]
[351.98989868 381.41412354]
[348.50311279 366.82501221]
[354.92523193 333.18954468]
[350.26089478 318.93316650]
[345.59655762 304.67681885]
[340.93218994 290.42044067]
[336.26785278 276.16409302]
[331.60351562 261.90774536]
[305.06948853 257.63912964]
[298.74411011 234.26338196]
[286.20867920 226.02548218]
[273.67324829 217.78758240]
[261.13784790 209.54969788]
[248.60240173 201.31179810]
[236.02511597 193.13792419]
[223.40632629 185.02832031]
[210.78752136 176.91870117]
[198.16871643 168.80909729]
[185.54991150 160.69947815]
[164.89762878 161.42889404]
[155.56774902 142.10156250]
[142.70674133 134.38182068]
[129.84573364 126.66207886]
[116.98471832 118.94233704]
[90.47497559 138.50904846]
[49.46120834 118.72787476]
[34.46120834 118.72787476]
[19.46120834 118.72787476]
[4.46120739 118.72787476]
[-6.67191696 129.62243652]
[-21.88405037 129.40875244]
[-32.20173264 118.72787476]
[-47.20173264 118.72787476]
[-62.20173264 118.72787476]
[-70.73233032 121.84438324]
[-77.35453033 118.65059662]
[-92.35375214 118.49760437]
[-107.35297394 118.34460449]
[-122.35219574 118.19160461]
[-137.35140991 118.03861237]
[-152.35063171 117.88561249]
[-168.20814514 127.29250336]
[-182.94247437 117.72023773]
[-197.94247437 117.72023773]
[-212.94247437 117.72023773]
[-228.78161621 123.76657867]
[-238.97636414 110.22023773]
[-228.78161621 96.67389679]
[-212.94247437 102.72023773]
[-197.94247437 102.72023773]
[-182.94247437 102.72023773]
[-174.19955444 94.40690613]
[-161.73596191 94.25393677]
[-152.19763184 102.88639069]
[-137.19841003 103.03939056]
[-122.19919586 103.19239044]
[-107.19997406 103.34538269]
[-92.20075989 103.49838257]
[-77.20153809 103.65137482]
[-62.20173264 103.72787476]
[-47.20173264 103.72787476]
[-32.20173264 103.72787476]
[-21.88405037 93.04700470]
[-6.67191696 92.83332825]
[4.46120739 103.72787476]
[19.46120834 103.72787476]
[34.46120834 103.72787476]
[49.46120834 103.72787476]
[52.33133316 96.79878235]
[60.94171143 76.01148987]
[50.33510971 65.40489197]
[39.72850800 54.79829025]
[20.75650215 55.48883820]
[7.56938648 42.28151703]
[8.26487350 23.95188713]
[-2.55588031 13.56385136]
[-13.37663460 3.17581582]
[-28.95275497 3.32488132]
[-39.77855682 -7.36420965]
[-39.82467651 -22.21457863]
[-50.64543152 -32.60261536]
[-66.43933105 -32.02968979]
[-77.95536804 -42.85357666]
[-78.36127472 -58.65264893]
[-67.41624451 -70.05360413]
[-51.61375809 -70.29245758]
[-40.32915878 -59.22749329]
[-40.25739670 -43.42337036]
[-29.43664169 -33.03533173]
[-14.59675026 -33.59497452]
[-3.47498512 -23.21417618]
[-2.98859859 -7.64493799]
[7.83215523 2.74309754]
[18.65291023 13.13113308]
[29.67796135 10.43796539]
[40.75498962 13.40981483]
[49.12409592 21.42522240]
[52.64310455 32.59169006]
[50.33510971 44.19168854]
[60.94171143 54.79829025]
[71.54830933 65.40489197]
[78.11248779 61.77700043]
[70.85670471 48.64864731]
[71.13716125 33.65126801]
[83.98505402 41.39286423]
[91.24083710 54.52121353]
[97.80501556 50.89332199]
[94.46720123 36.26940536]
[91.12938690 21.64548683]
[87.79157257 7.02156782]
[75.02719116 -2.69698048]
[74.81106567 -18.73857689]
[87.30898285 -28.79748344]
[102.93361664 -25.15736580]
[109.69908142 -10.61061192]
[102.41548920 3.68375373]
[105.75330353 18.30767250]
[109.09111786 32.93159103]
[112.42893219 47.55551147]
[127.47001648 62.13074875]
[133.85308838 79.32050323]
[132.17295837 95.02226257]
[124.70446014 106.08132935]
[137.56547546 113.80107117]
[150.42648315 121.52081299]
[163.28749084 129.24055481]
[171.96479797 125.79056549]
[181.12306213 126.67593384]
[188.74816895 131.57617188]
[193.22074890 139.30178833]
[193.65953064 148.08067322]
[206.27832031 156.19029236]
[218.89712524 164.29989624]
[231.51593018 172.40951538]
[244.13473511 180.51911926]
[252.99603271 182.50935364]
[256.84030151 188.77636719]
[269.37573242 197.01426697]
[281.91116333 205.25216675]
[294.44659424 213.49006653]
[306.98202515 221.72796631]
[319.21972656 216.05961609]
[333.43444824 218.85108948]
[343.99359131 230.17980957]
[357.08477783 222.85716248]
[370.17593384 215.53451538]
[383.26712036 208.21186829]
[396.35830688 200.88923645]
[409.44946289 193.56658936]
[408.91021729 179.61694336]
[414.39739990 166.85237122]
[424.79177856 157.73268127]
[438.03454590 153.98858643]
[451.53500366 156.29348755]
[462.67739868 164.14315796]
[475.84259033 156.95442200]
[489.00775146 149.76568604]
[502.17294312 142.57696533]
[515.33813477 135.38822937]
[521.33166504 128.56465149]
[528.67443848 128.19409180]
[541.91229248 121.14000702]
[555.15008545 114.08592987]
[568.38793945 107.03185272]
[570.79370117 93.81063080]
[580.22540283 84.51295471]
[593.09649658 82.36094666]
[604.68933105 87.91695404]
[617.99841309 80.99826050]
[631.27209473 74.01178741]
[639.81237793 60.69361877]
[654.68310547 61.53667831]
[667.92095947 54.48259735]
[681.15875244 47.42852020]
[694.39660645 40.37443924]
[705.53155518 27.58971596]
[720.89910889 34.75034714]
[718.27246094 51.49959183]
[701.45068359 53.61226273]
[688.21282959 60.66634369]
[674.97503662 67.72042084]
[661.73718262 74.77449799]
[654.14373779 87.58811188]
[638.32617188 87.24961090]
[633.92358398 93.13783264]
[624.91711426 94.30735016]
[611.60803223 101.22603607]
[607.21081543 117.48264313]
[592.10711670 125.66846466]
[575.44201660 120.26967621]
[562.20416260 127.32375336]
[548.96636963 134.37783813]
[535.72851562 141.43191528]
[522.52685547 148.55340576]
[509.36169434 155.74214172]
[496.19650269 162.93087769]
[483.03131104 170.11961365]
[469.86611938 177.30834961]
[469.86801147 193.49079895]
[461.64859009 207.53952026]
[447.37686157 215.55914307]
[430.91470337 215.27053833]
[416.77212524 206.65776062]
[403.68093872 213.98040771]
[390.58975220 221.30305481]
[377.49859619 228.62570190]
[364.40740967 235.94833374]
[351.31622314 243.27098083]
[345.85986328 257.24337769]
[350.52420044 271.49975586]
[355.18856812 285.75610352]
[359.85290527 300.01248169]
[364.51724243 314.26882935]
[369.18161011 328.52520752]
[379.56964111 339.34594727]
[393.62387085 344.58792114]
[409.69744873 341.33633423]
[420.34585571 353.80804443]
[414.61492920 369.17321777]
[398.40017700 371.62548828]
[388.38192749 358.64215088]
[374.32766724 353.40020752]
[363.09222412 363.33822632]
[366.57901001 377.92733765]
[370.06582642 392.51644897]
[373.55261230 407.10556030]
[377.03942871 421.69467163]
[380.52621460 436.28378296]
[384.01303101 450.87289429]
[387.49981689 465.46200562]
[390.98663330 480.05111694]
[394.47341919 494.64022827]
[437.87719727 511.75033569]
[445.06594849 524.91552734]
[452.25466919 538.08074951]
[465.65927124 546.48474121]
[464.96792603 561.36328125]
[472.15667725 574.52850342]
[479.34539795 587.69366455]
[486.53414917 600.85882568]
[499.93872070 609.26287842]
[499.24737549 624.14141846]
[506.43612671 637.30664062]
[519.84069824 645.71063232]
[519.14935303 660.58917236]
[526.33813477 673.75439453]
[538.44207764 678.11254883]
[544.16833496 689.18389893]
[540.94317627 700.80920410]
[547.99725342 714.04705811]
[555.05133057 727.28491211]
[562.10540771 740.52270508]
[574.89013672 751.65765381]
[567.72949219 767.02520752]
[550.98028564 764.39855957]
[548.86761475 747.57678223]
[541.81353760 734.33898926]
[534.75946045 721.10113525]
[527.70532227 707.86334229]
[512.32849121 699.36151123]
[513.17291260 680.94311523]
[505.98419189 667.77795410]
[493.09378052 660.31555176]
[493.27093506 644.49536133]
[486.08221436 631.33020020]
[473.19180298 623.86779785]
[473.36895752 608.04760742]
[466.18020630 594.88238525]
[458.99148560 581.71722412]
[451.80273438 568.55206299]
[438.91235352 561.08966064]
[439.08950806 545.26947021]
[431.90075684 532.10424805]
[424.71203613 518.93908691]
[417.29965210 520.08209229]
[424.05474854 533.47497559]
[413.40469360 544.03796387]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 17]
[3 16]
[4 15]
[5 14]
[6 13]
[7 12]
[23 262]
[24 261]
[25 260]
[26 259]
[27 258]
[28 257]
[29 256]
[30 255]
[31 254]
[32 253]
[33 244]
[34 243]
[35 242]
[36 241]
[37 240]
[38 239]
[40 171]
[41 170]
[42 169]
[43 168]
[44 167]
[45 165]
[46 164]
[47 163]
[48 162]
[49 161]
[51 156]
[52 155]
[53 154]
[54 153]
[56 98]
[57 97]
[58 96]
[59 95]
[62 92]
[63 91]
[64 90]
[66 89]
[67 88]
[68 87]
[69 86]
[70 85]
[71 84]
[73 81]
[74 80]
[75 79]
[100 131]
[101 130]
[102 129]
[105 124]
[106 123]
[107 122]
[110 119]
[111 118]
[137 149]
[138 148]
[139 147]
[140 146]
[174 238]
[175 237]
[176 236]
[177 235]
[178 234]
[179 233]
[185 228]
[186 227]
[187 226]
[188 225]
[189 224]
[191 223]
[192 222]
[193 221]
[194 220]
[198 217]
[199 216]
[200 214]
[202 212]
[203 211]
[204 210]
[205 209]
[245 252]
[246 251]
[263 304]
[264 303]
[265 302]
[267 300]
[268 299]
[269 298]
[270 297]
[272 295]
[273 294]
[275 292]
[276 291]
[279 289]
[280 288]
[281 287]
[282 286]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
