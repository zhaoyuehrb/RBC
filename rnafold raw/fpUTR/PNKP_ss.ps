%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:26:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGAGGAACCGACCGCCGCCGGCCGGGUUGCAGGCGGGGCACCUCGGGCAGGACCUCCCUGGUCGGAAGUGGCCGUGAGCCCAAGCCGCGGUCCCGGGCCGGCACCCAGG\
) } def
/len { sequence length } bind def

/coor [
[58.23553085 361.43002319]
[50.67449570 365.23233032]
[42.45890808 367.20831299]
[34.02257538 367.25991821]
[25.80954170 365.39053345]
[18.12646866 378.27346802]
[22.24298477 393.53222656]
[14.29191208 407.19076538]
[-1.00951958 411.14575195]
[-14.58324242 403.05072021]
[-18.37620735 387.70831299]
[-10.13811588 374.22094727]
[5.24351883 370.59039307]
[12.92659283 357.70745850]
[1.67519176 338.29583740]
[3.80490565 315.84426880]
[18.65708923 298.71960449]
[40.80680847 293.38201904]
[44.99575043 278.97879028]
[49.18469620 264.57556152]
[53.37363815 250.17234802]
[57.56258011 235.76911926]
[61.75152588 221.36590576]
[65.94046783 206.96267700]
[69.92517090 192.50163269]
[73.70484161 177.98564148]
[77.48451996 163.46963501]
[81.05839539 148.90161133]
[84.42576599 134.28446960]
[87.79313660 119.66732788]
[91.16050720 105.05019379]
[89.74768829 96.98435974]
[94.83553314 90.06986237]
[98.61520386 75.55387115]
[102.39487457 61.03787613]
[97.05235291 43.48703003]
[109.69158936 31.40335083]
[113.05895996 16.78620911]
[116.42633057 2.16906905]
[119.79370117 -12.44807243]
[109.94889069 -22.21315193]
[106.28083801 -35.47282791]
[109.65366364 -48.69847107]
[119.07253265 -58.42587662]
[131.97375488 -62.16259003]
[135.75343323 -76.67858124]
[139.53309631 -91.19458008]
[135.52279663 -106.49908447]
[146.21743774 -116.86605835]
[149.99710083 -131.38204956]
[142.17848206 -152.29774475]
[157.36201477 -167.64218140]
[159.47763062 -182.49223328]
[161.59326172 -197.34228516]
[163.70887756 -212.19235229]
[155.26684570 -225.83462524]
[160.80473328 -240.89155579]
[176.07435608 -245.81275940]
[189.36215210 -236.82310486]
[190.47488403 -220.81869507]
[178.55892944 -210.07672119]
[176.44331360 -195.22666931]
[174.32769775 -180.37661743]
[172.21206665 -165.52656555]
[178.41384888 -160.16278076]
[181.95201111 -152.66064453]
[182.15046692 -144.27328491]
[178.89820862 -136.43653870]
[172.68161011 -130.52313232]
[164.51310730 -127.60237885]
[160.73342896 -113.08638763]
[165.01408386 -98.82015991]
[154.04910278 -87.41490936]
[150.26942444 -72.89891052]
[146.48976135 -58.38291550]
[157.29060364 -46.11060715]
[158.71524048 -29.65858650]
[150.01231384 -15.43033504]
[134.41084290 -9.08070087]
[131.04347229 5.53643990]
[127.67610168 20.15358162]
[124.30873108 34.77072144]
[130.47998047 45.28108978]
[127.68801117 57.55862427]
[116.91087341 64.81755066]
[113.13120270 79.33354187]
[109.35153198 93.84953308]
[105.77764893 108.41756439]
[102.41027832 123.03470612]
[99.04290771 137.65184021]
[95.67553711 152.26898193]
[96.80154419 161.48521423]
[92.00051117 167.24931335]
[88.22084045 181.76530457]
[84.44116974 196.28129578]
[85.30592346 205.52569580]
[80.34368896 211.15162659]
[76.15474701 225.55484009]
[71.96580505 239.95806885]
[67.77685547 254.36128235]
[63.58791733 268.76449585]
[59.39897156 283.16772461]
[55.21002960 297.57095337]
[62.26343155 302.46282959]
[68.00740814 308.82351685]
[72.14418030 316.31411743]
[74.46137238 324.53747559]
[74.84291840 333.05914307]
[73.27481842 341.43035889]
[69.84560394 349.21166992]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 14]
[6 13]
[18 103]
[19 102]
[20 101]
[21 100]
[22 99]
[23 98]
[24 97]
[25 95]
[26 94]
[27 93]
[28 91]
[29 90]
[30 89]
[31 88]
[33 87]
[34 86]
[35 85]
[37 82]
[38 81]
[39 80]
[40 79]
[45 75]
[46 74]
[47 73]
[49 71]
[50 70]
[52 64]
[53 63]
[54 62]
[55 61]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
