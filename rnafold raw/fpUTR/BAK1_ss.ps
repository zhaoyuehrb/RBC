%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:39:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCUGCAUCCGGUGGCCACAGAGCAACUUCCUCUAGAGGGAGCUGAUUGGAGCCGGGUGCCGCUGGCACCUCUAUGAUCACUGGAGUCUCGCGGGUCCCUCGGGCUGCACAGGGACAAGUAAAGGCUACAUCCAGAUGCCGGGAAUGCACUGACGCCCAUUCCUGGAAACUGGGCUCCCACUCAGCCCCUGGGAGCAGCAGCCGCCAGCCCCUCGGGACCUCCAUCUCCACCCUGCUGAGCCACCCGGGUUGGGC\
CAGGAUCCCGGCAGGCUGAUCCCGUCCUCCACUGAGACCUGAAAA\
) } def
/len { sequence length } bind def

/coor [
[82.65509796 265.75427246]
[81.56016541 250.79428101]
[80.46524048 235.83428955]
[79.37030792 220.87431335]
[67.91960907 230.56355286]
[53.18441010 227.75749207]
[46.09630203 214.53785706]
[51.91373444 200.71188354]
[66.32093048 196.53663635]
[78.62931061 205.10900879]
[78.31621552 190.11228943]
[78.00312042 175.11555481]
[77.69003296 160.11882019]
[77.37693787 145.12208557]
[77.06384277 130.12535095]
[69.83830261 128.11499023]
[65.81733704 142.56600952]
[51.36639023 138.54479980]
[55.38722229 124.09426117]
[48.16168213 122.08390045]
[40.14808655 134.76390076]
[32.13449478 147.44389343]
[24.12089920 160.12388611]
[29.04926872 174.96455383]
[23.23720360 189.48191833]
[9.42898083 196.82133484]
[-5.85557747 193.51734924]
[-15.39957047 181.13000488]
[-14.69661617 165.50822449]
[-4.07862854 154.02813721]
[11.44090366 152.11029053]
[19.45449829 139.43029785]
[27.46809196 126.75030518]
[35.48168564 114.07030487]
[54.03944397 104.26885986]
[73.72940826 99.22505951]
[93.66780090 99.03264618]
[83.20047760 88.28857422]
[72.73315430 77.54450226]
[62.26583099 66.80042267]
[54.07846451 62.86357117]
[51.74605560 55.88916779]
[41.39143753 45.03643036]
[31.03681755 34.18369675]
[20.68219948 23.33095932]
[10.32758141 12.47822285]
[-7.18868494 12.37395000]
[-18.96025467 -0.13675207]
[-18.03580666 -16.95100784]
[-28.50312996 -27.69508171]
[-38.97045517 -38.43915558]
[-49.43777847 -49.18322754]
[-59.90510178 -59.92730331]
[-70.37242889 -70.67137909]
[-84.82350922 -74.69210052]
[-99.33576202 -70.89810181]
[-113.84802246 -67.10410309]
[-128.36027527 -63.31010056]
[-142.87252808 -59.51610184]
[-157.38478088 -55.72209930]
[-171.89703369 -51.92810059]
[-185.69181824 -42.07212067]
[-198.98139954 -52.59938812]
[-192.54446411 -68.28384399]
[-175.69104004 -66.44035339]
[-161.17878723 -70.23435211]
[-146.66653442 -74.02835846]
[-132.15428162 -77.82235718]
[-117.64202118 -81.61635590]
[-103.12976074 -85.41036224]
[-88.61750793 -89.20436096]
[-87.02500916 -96.53334045]
[-101.68296814 -99.71833801]
[-116.34092712 -102.90334320]
[-131.26570129 -101.40292358]
[-137.30465698 -115.13358307]
[-126.11215973 -125.11996460]
[-113.15592194 -117.56130219]
[-98.49796295 -114.37629700]
[-83.84000397 -111.19129944]
[-82.24750519 -118.52027893]
[-93.87672424 -127.99451447]
[-105.50595093 -137.46875000]
[-117.13516998 -146.94299316]
[-128.76438904 -156.41722107]
[-140.58883667 -165.64666748]
[-152.60334778 -174.62728882]
[-164.61785889 -183.60789490]
[-176.63238525 -192.58851624]
[-194.98365784 -194.35960388]
[-201.22462463 -210.78338623]
[-213.33221436 -219.63812256]
[-228.74978638 -217.41639709]
[-240.90246582 -226.56883240]
[-242.92553711 -241.28082275]
[-255.03312683 -250.13555908]
[-267.14071655 -258.99029541]
[-279.24829102 -267.84503174]
[-291.35589600 -276.69973755]
[-303.46347046 -285.55447388]
[-318.88104248 -283.33276367]
[-331.03372192 -292.48519897]
[-333.05679321 -307.19717407]
[-349.41003418 -308.42352295]
[-356.27984619 -323.31439209]
[-346.59918213 -336.55133057]
[-330.32666016 -334.51730347]
[-324.20205688 -319.30477905]
[-309.56881714 -321.83538818]
[-297.16387939 -313.02792358]
[-294.60873413 -297.66207886]
[-282.50115967 -288.80734253]
[-270.39355469 -279.95260620]
[-258.28598022 -271.09786987]
[-246.17839050 -262.24313354]
[-234.07080078 -253.38841248]
[-219.43756104 -255.91902161]
[-207.03260803 -247.11154175]
[-204.47747803 -231.74571228]
[-192.36988831 -222.89097595]
[-180.40368652 -224.43994141]
[-170.25265503 -217.20375061]
[-167.65176392 -204.60302734]
[-155.63725281 -195.62240601]
[-143.62274170 -186.64179993]
[-131.60821533 -177.66117859]
[-128.86105347 -177.89743042]
[-125.85664368 -177.08633423]
[-122.98393250 -175.12539673]
[-120.66163635 -172.05133057]
[-119.29016113 -168.04644775]
[-107.66093445 -158.57220459]
[-96.03171539 -149.09797668]
[-84.40248871 -139.62373352]
[-72.77326965 -130.14950562]
[-65.93340302 -133.22622681]
[-64.42260742 -148.14994812]
[-52.25366592 -139.37966919]
[-45.41379929 -142.45639038]
[-44.78775024 -157.44332886]
[-44.16170120 -172.43025208]
[-43.53565216 -187.41717529]
[-42.90960312 -202.40411377]
[-42.28355408 -217.39103699]
[-41.65750504 -232.37797546]
[-41.03145599 -247.36489868]
[-40.40540695 -262.35183716]
[-50.82580948 -273.92996216]
[-49.97740936 -289.11990356]
[-38.87522125 -298.98281860]
[-46.95024109 -313.25610352]
[-38.39474106 -327.24664307]
[-22.00988197 -326.56219482]
[-14.65100479 -311.90686035]
[-23.88829041 -298.35678101]
[-13.64735031 -287.60229492]
[-14.06875801 -272.39450073]
[-25.41847801 -261.72576904]
[-26.04452705 -246.73884583]
[-26.67057610 -231.75192261]
[-27.29662514 -216.76499939]
[-27.92267418 -201.77806091]
[-28.54872322 -186.79113770]
[-29.17477226 -171.80419922]
[-29.80082130 -156.81727600]
[-30.42687035 -141.83033752]
[-28.01654434 -128.32690430]
[-28.60064697 -115.63842010]
[-31.79371643 -104.36698914]
[-37.09770203 -95.00077820]
[-43.93059921 -87.89431000]
[-51.65832901 -83.25529480]
[-59.62835312 -81.13870239]
[-49.16102982 -70.39463043]
[-38.69370270 -59.65055466]
[-28.22638130 -48.90647888]
[-17.75905609 -38.16240692]
[-7.29173231 -27.41833115]
[5.46032095 -29.05757713]
[17.00766945 -22.97525978]
[23.04603004 -11.18613720]
[21.18031693 2.12360501]
[31.53493500 12.97634125]
[41.88955307 23.82907677]
[52.24417114 34.68181229]
[62.59878922 45.53454971]
[73.00990295 56.33310318]
[83.47722626 67.07717896]
[93.94454956 77.82125092]
[104.41187286 88.56532288]
[117.64299774 95.63195801]
[132.39347839 98.35651398]
[147.14396667 101.08106232]
[161.89445496 103.80561829]
[176.87045288 98.70364380]
[187.98063660 108.62397766]
[202.73112488 111.34853363]
[217.48159790 114.07308197]
[232.23208618 116.79763794]
[249.46707153 110.25076294]
[262.34149170 122.20651245]
[277.11959839 124.77696991]
[291.89773560 127.34741974]
[306.67584229 129.91787720]
[321.50439453 132.17930603]
[336.37692261 134.13073730]
[353.24694824 126.69375610]
[366.72747803 137.96166992]
[381.61953735 139.75776672]
[396.51162720 141.55386353]
[411.40371704 143.34996033]
[426.31372070 144.99052429]
[441.24005127 146.47538757]
[456.16638184 147.96025085]
[471.09268188 149.44511414]
[486.01901245 150.92997742]
[500.94534302 152.41484070]
[514.30004883 141.07984924]
[531.38159180 142.89901733]
[541.63696289 156.25567627]
[556.57800293 157.58467102]
[571.51898193 158.91366577]
[580.76171875 149.15650940]
[593.74371338 146.52708435]
[605.69866943 151.76290894]
[612.36785889 162.75491333]
[622.58551025 151.07675171]
[637.72338867 147.66752625]
[651.96081543 153.83816528]
[659.82305908 167.21592712]
[658.28698730 182.65678406]
[647.94329834 194.22341919]
[632.76928711 197.46823120]
[618.59967041 191.14350891]
[610.88299561 177.68124390]
[598.31347656 188.88752747]
[581.19274902 187.48443604]
[570.19000244 173.85467529]
[555.24902344 172.52568054]
[540.30798340 171.19668579]
[531.70324707 180.74971008]
[518.98071289 183.66061401]
[506.71826172 178.65287781]
[499.46047974 167.34117126]
[484.53414917 165.85630798]
[469.60781860 164.37144470]
[454.68151855 162.88658142]
[439.75518799 161.40171814]
[424.82885742 159.91685486]
[420.66500854 162.16473389]
[415.05151367 161.85411072]
[409.60760498 158.24203491]
[394.71551514 156.44593811]
[379.82345581 154.64984131]
[364.93136597 152.85375977]
[355.25433350 160.06100464]
[342.86062622 158.71878052]
[334.42547607 149.00325012]
[319.55297852 147.05183411]
[317.27291870 148.60237122]
[314.25598145 149.36547852]
[310.79110718 149.06138611]
[307.26144409 147.51721191]
[304.10537720 144.69599915]
[289.32727051 142.12553406]
[274.54916382 139.55508423]
[259.77102661 136.98463440]
[249.73123169 143.67729187]
[237.42439270 141.69041443]
[229.50753784 131.54812622]
[214.75704956 128.82356262]
[200.00656128 126.09901428]
[185.25608826 123.37446594]
[171.33514404 128.67132568]
[159.16990662 118.55610657]
[144.41941833 115.83155060]
[129.66893005 113.10699463]
[114.91844940 110.38244629]
[109.20397949 115.23989868]
[121.97504425 123.10755157]
[118.43875885 137.68475342]
[103.48223114 138.82595825]
[97.77504730 124.95480347]
[92.06057739 129.81225586]
[92.37367249 144.80899048]
[92.68675995 159.80572510]
[92.99985504 174.80245972]
[93.31295013 189.79919434]
[93.62603760 204.79592896]
[94.33029175 219.77937317]
[95.42522430 234.73936462]
[96.52014923 249.69935608]
[97.61508179 264.65933228]
[110.87142944 272.72460938]
[116.82431793 287.05441284]
[113.18472290 302.13861084]
[101.35215759 312.17703247]
[85.87648010 313.30969238]
[72.70839691 305.10107422]
[66.91131592 290.70755005]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 293]
[2 292]
[3 291]
[4 290]
[10 289]
[11 288]
[12 287]
[13 286]
[14 285]
[15 284]
[20 34]
[21 33]
[22 32]
[23 31]
[37 190]
[38 189]
[39 188]
[40 187]
[42 186]
[43 185]
[44 184]
[45 183]
[46 182]
[49 178]
[50 177]
[51 176]
[52 175]
[53 174]
[54 173]
[55 71]
[56 70]
[57 69]
[58 68]
[59 67]
[60 66]
[61 65]
[81 135]
[82 134]
[83 133]
[84 132]
[85 131]
[86 126]
[87 125]
[88 124]
[89 123]
[91 120]
[92 119]
[95 116]
[96 115]
[97 114]
[98 113]
[99 112]
[100 111]
[103 108]
[139 166]
[140 165]
[141 164]
[142 163]
[143 162]
[144 161]
[145 160]
[146 159]
[147 158]
[150 155]
[191 278]
[192 277]
[193 276]
[194 275]
[196 273]
[197 272]
[198 271]
[199 270]
[201 267]
[202 266]
[203 265]
[204 264]
[205 259]
[206 258]
[208 255]
[209 254]
[210 253]
[211 252]
[212 249]
[213 248]
[214 247]
[215 246]
[216 245]
[217 244]
[220 240]
[221 239]
[222 238]
[226 235]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
