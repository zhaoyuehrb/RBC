%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGCCGCGGGGCCGCGCGUCCAGGCGGCGAGCGGAAGUGGGUGUGAGAGCGGAAGUGGCCGGCUAGAGCCGGGGGCUGGGCGGGGACCGGGCUUGUCGGUGAAGCGGCAGUGGCGGCGGCGGCGGCGGCUCGGCAGGCGGGUUCAGGCUUCGGGGGCCAGCCGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[269.44628906 236.95602417]
[254.60182190 235.73472595]
[247.98512268 221.36358643]
[235.84986877 212.54679871]
[223.71461487 203.73002625]
[211.57936096 194.91323853]
[199.44410706 186.09646606]
[187.30885315 177.27969360]
[177.35299683 179.78474426]
[167.46150208 176.30345154]
[161.00344849 167.76422119]
[160.31924438 156.85929871]
[148.51808167 147.60011292]
[136.71690369 138.34094238]
[124.91572571 129.08177185]
[113.11455536 119.82260132]
[89.01425171 121.07701111]
[76.23944855 100.60256958]
[61.89038086 96.23171997]
[47.54131317 91.86087799]
[33.19224930 87.49002838]
[18.84318161 83.11917877]
[4.49411488 78.74833679]
[-9.85495090 74.37748718]
[-25.31082726 77.75779724]
[-35.23122025 66.64766693]
[-49.05577850 73.82536316]
[-63.54550934 69.18829346]
[-70.30315399 55.96445847]
[-84.65222168 51.59361267]
[-93.81366730 52.08465195]
[-99.22469330 47.00715256]
[-113.49053955 42.37189865]
[-126.03005981 51.31989670]
[-141.25605774 51.17023087]
[-153.33152771 42.18986511]
[-157.75061035 27.99093056]
[-172.01644897 23.35567474]
[-186.28230286 18.72042084]
[-201.79800415 21.81454277]
[-211.51139832 10.52298927]
[-225.77725220 5.88773441]
[-240.04309082 1.25247943]
[-249.60829163 13.03684902]
[-262.78652954 20.56670189]
[-277.79553223 22.82368851]
[-292.60549927 19.50256729]
[-305.21343994 11.05249405]
[-313.91430664 -1.38372874]
[-317.53131104 -16.12420273]
[-315.57534790 -31.17540169]
[-308.31088257 -44.50177383]
[-296.72042847 -54.30103683]
[-282.37145996 -59.24792099]
[-267.20458984 -58.67339706]
[-253.27096558 -52.65517044]
[-242.45504761 -42.00715637]
[-236.21957397 -28.16940689]
[-235.40783691 -13.01336861]
[-221.14199829 -8.37811375]
[-206.87614441 -3.74285841]
[-192.38082886 -7.16852522]
[-181.64704895 4.45457268]
[-167.38119507 9.08982754]
[-153.11535645 13.72508240]
[-141.19432068 4.83537388]
[-126.14653015 4.66788864]
[-113.74047089 13.49642277]
[-108.85528564 28.10605049]
[-94.58943939 32.74130630]
[-80.28137207 37.24454880]
[-65.93230438 41.61539459]
[-52.95006943 34.40449142]
[-38.33581161 38.63274384]
[-30.86037636 52.29859924]
[-16.43084145 48.60565948]
[-5.48410511 60.02842331]
[8.86496162 64.39926910]
[23.21402740 68.77011871]
[37.56309509 73.14096069]
[51.91215897 77.51181030]
[66.26122284 81.88265228]
[80.61029053 86.25350189]
[84.45918274 82.01640320]
[89.20946503 78.82238770]
[94.58562469 76.85671997]
[100.27583313 76.23340607]
[105.17391205 62.05564880]
[110.07199097 47.87789154]
[114.97007751 33.70013428]
[119.86815643 19.52237892]
[114.17139435 4.52483034]
[122.46872711 -9.20592976]
[138.39515686 -11.13683891]
[149.73329163 0.21333182]
[147.78547668 16.13770294]
[134.04591370 24.42045784]
[129.14782715 38.59821701]
[124.24974823 52.77597427]
[119.35166931 66.95372772]
[114.45359039 81.13148499]
[119.59279633 86.54454803]
[122.79978180 93.28456879]
[123.75826263 100.68686676]
[122.37372589 108.02142334]
[134.17489624 117.28060150]
[145.97607422 126.53977203]
[157.77725220 135.79895020]
[169.57843018 145.05812073]
[189.62117004 146.95932007]
[196.12562561 165.14443970]
[208.26087952 173.96121216]
[220.39613342 182.77798462]
[232.53138733 191.59477234]
[244.66664124 200.41154480]
[256.80191040 209.22833252]
[272.51434326 211.08026123]
[278.26306152 224.82077026]
[290.47924805 233.52503967]
[302.77536011 242.11607361]
[315.07147217 250.70709229]
[327.36758423 259.29812622]
[339.66369629 267.88916016]
[351.95980835 276.48016357]
[364.25588989 285.07119751]
[376.55200195 293.66223145]
[388.84811401 302.25326538]
[401.22308350 310.73031616]
[413.67584229 319.09265137]
[426.12860107 327.45498657]
[438.58135986 335.81732178]
[451.03411865 344.17965698]
[465.54370117 339.00485229]
[480.14749146 343.31561279]
[489.30438232 355.25775146]
[489.66903687 370.12399292]
[502.12179565 378.48632812]
[514.57458496 386.84869385]
[527.02734375 395.21102905]
[541.55084229 389.74768066]
[556.50286865 393.89691162]
[566.13409424 406.06320190]
[566.74114990 421.56842041]
[558.09051514 434.45043945]
[543.50860596 439.75588989]
[528.60247803 435.44473267]
[519.10375977 423.17465210]
[518.66497803 407.66378784]
[506.21221924 399.30145264]
[493.75946045 390.93908691]
[481.30670166 382.57675171]
[467.40795898 387.86474609]
[452.88879395 383.90783691]
[443.37234497 372.02124023]
[442.67178345 356.63244629]
[430.21902466 348.27008057]
[417.76626587 339.90774536]
[405.31350708 331.54541016]
[392.86074829 323.18307495]
[385.52593994 322.06021118]
[380.25708008 314.54937744]
[367.96096802 305.95834351]
[355.66488647 297.36730957]
[343.36877441 288.77627563]
[331.07266235 280.18527222]
[318.77655029 271.59423828]
[306.48043823 263.00320435]
[294.18432617 254.41217041]
[281.88824463 245.82115173]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 118]
[3 116]
[4 115]
[5 114]
[6 113]
[7 112]
[8 111]
[12 109]
[13 108]
[14 107]
[15 106]
[16 105]
[18 83]
[19 82]
[20 81]
[21 80]
[22 79]
[23 78]
[24 77]
[26 75]
[29 72]
[30 71]
[32 70]
[33 69]
[37 65]
[38 64]
[39 63]
[41 61]
[42 60]
[43 59]
[87 101]
[88 100]
[89 99]
[90 98]
[91 97]
[119 169]
[120 168]
[121 167]
[122 166]
[123 165]
[124 164]
[125 163]
[126 162]
[127 161]
[128 159]
[129 158]
[130 157]
[131 156]
[132 155]
[136 151]
[137 150]
[138 149]
[139 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
