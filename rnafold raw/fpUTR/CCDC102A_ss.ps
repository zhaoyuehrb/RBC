%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:44:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACGGUGCCCGCUCUACCCCGCCGCAGCGGCUGGGACGUACGGAGCCCGCAAGUCCCGGCCCGAGGUCCGAGGAGGCGUCCUCCGCCCGGUGGCCCAGAGGGAAGCGGGGCACGGCGUCAUCAUGCACAGUUGUAUCGCGCCCGCCGCGCGUCCCCGGAGCCGCCCCUGAGCCCGACCGCGAGUUCGAGCUCAGGGCCCGCCCGGCCGCACC\
) } def
/len { sequence length } bind def

/coor [
[48.41527939 309.91845703]
[41.63747025 315.36499023]
[33.49972916 318.30221558]
[24.89264107 318.43865967]
[18.69785690 332.09970093]
[12.50307274 345.76077271]
[6.30828905 359.42184448]
[0.11350499 373.08291626]
[9.94210625 384.76028442]
[13.72242355 399.54785156]
[10.70387268 414.50949097]
[1.48578787 426.67459106]
[-12.10157204 433.62777710]
[-27.36042786 433.98843384]
[-41.26112366 427.68496704]
[-51.04366302 415.96896362]
[-54.76571655 401.16662598]
[-51.68827057 386.21697998]
[-42.42235184 374.08828735]
[-28.80771637 367.18869019]
[-13.54755878 366.88812256]
[-7.35277462 353.22705078]
[-1.15799069 339.56597900]
[5.03679323 325.90493774]
[11.23157692 312.24386597]
[1.94096875 293.13781738]
[9.92472172 273.14300537]
[30.35294342 265.49081421]
[35.52920151 251.41224670]
[40.70545959 237.33366394]
[45.88171768 223.25508118]
[51.05797577 209.17651367]
[56.23423386 195.09793091]
[61.41049194 181.01934814]
[66.58675385 166.94078064]
[71.76300812 152.86219788]
[71.12100983 145.50120544]
[77.11997223 138.61587524]
[82.50234222 124.61480713]
[75.35251617 117.45159912]
[70.97080231 108.32843018]
[69.84931946 98.26990509]
[55.55649948 93.71849823]
[41.26367950 89.16709900]
[26.97085762 84.61569214]
[12.67803669 80.06428528]
[-1.23591447 87.06712341]
[-15.66603088 82.24774170]
[-22.25641632 68.93975830]
[-36.54923630 64.38835907]
[-50.84205627 59.83695221]
[-60.19693375 65.38064575]
[-70.83937073 64.87245941]
[-79.26857758 58.72119141]
[-82.84468079 49.15209961]
[-96.99772644 44.18306732]
[-111.15077209 39.21403885]
[-125.33991241 34.34902954]
[-139.56437683 29.58829880]
[-153.78884888 24.82756805]
[-168.04788208 20.17137527]
[-182.34069824 15.61997128]
[-199.26771545 16.57523537]
[-204.87150574 0.57417804]
[-191.04705811 -9.24015141]
[-177.78929138 1.32715118]
[-163.49647522 5.87855577]
[-156.17088318 4.91309786]
[-149.02812195 10.60310173]
[-134.80364990 15.36383247]
[-120.57918549 20.12456131]
[-113.24021149 19.26674652]
[-106.18174744 25.06099319]
[-92.02869415 30.03002167]
[-77.87564850 34.99905014]
[-59.18334579 30.04571724]
[-46.29065323 45.54413223]
[-31.99783325 50.09553528]
[-17.70501328 54.64694214]
[-4.63289642 47.60028458]
[9.92689228 52.01245117]
[17.22944069 65.77146912]
[31.52226257 70.32286835]
[45.81508255 74.87427521]
[60.10790253 79.42568207]
[74.40072632 83.97708130]
[83.74289703 73.07388306]
[97.55490875 67.38523865]
[113.02163696 68.63647461]
[126.72859192 77.07647705]
[135.40225220 64.83850861]
[144.07589722 52.60055161]
[152.74955750 40.36258698]
[161.42321777 28.12462616]
[170.09686279 15.88666344]
[178.68046570 3.58536506]
[187.17352295 -8.77860641]
[189.45222473 -17.62183952]
[195.88313293 -21.26049042]
[198.29139709 -30.06931877]
[204.77502441 -33.61317444]
[213.62739563 -45.72248840]
[222.47976685 -57.83180618]
[231.33213806 -69.94112396]
[233.23019409 -85.64806366]
[246.98751831 -91.35639954]
[255.83988953 -103.46572113]
[264.69226074 -115.57503510]
[266.59033203 -131.28196716]
[280.34765625 -136.99031067]
[289.20001221 -149.09962463]
[298.05239868 -161.20893860]
[296.84671021 -174.04914856]
[304.46731567 -183.95237732]
[316.39746094 -185.94326782]
[325.42663574 -197.92132568]
[334.45581055 -209.89938354]
[343.48498535 -221.87744141]
[352.51416016 -233.85549927]
[349.97332764 -242.93156433]
[351.86404419 -252.02452087]
[357.63873291 -259.12197876]
[365.90487671 -262.71276855]
[374.75906372 -262.10784912]
[384.30685425 -273.67678833]
[393.85464478 -285.24569702]
[403.40240479 -296.81460571]
[412.95019531 -308.38354492]
[415.13098145 -324.63702393]
[430.39816284 -330.62408447]
[443.04620361 -320.18572998]
[440.06384277 -304.06002808]
[424.51910400 -298.83575439]
[414.97134399 -287.26684570]
[405.42355347 -275.69790649]
[395.87576294 -264.12899780]
[386.32800293 -252.56007385]
[384.69198608 -231.98490906]
[364.49221802 -224.82632446]
[355.46304321 -212.84826660]
[346.43386841 -200.87020874]
[337.40469360 -188.89215088]
[328.37551880 -176.91409302]
[327.17453003 -159.40527344]
[310.16171265 -152.35658264]
[301.30932617 -140.24725342]
[292.45697021 -128.13793945]
[291.19207764 -113.29714203]
[276.80157471 -106.72266388]
[267.94921875 -94.61334991]
[259.09683228 -82.50402832]
[257.83197021 -67.66323090]
[243.44145203 -61.08874893]
[234.58908081 -48.97943497]
[225.73670959 -36.87011719]
[216.88433838 -24.76080322]
[208.12109375 -12.58683586]
[199.53750610 -0.28553745]
[191.04443359 12.07843399]
[189.84849548 19.36994553]
[182.33482361 24.56031799]
[173.66117859 36.79827881]
[164.98751831 49.03624344]
[156.31387329 61.27420425]
[147.64021301 73.51216888]
[138.96655273 85.75012970]
[141.48690796 100.53687286]
[153.72486877 109.21052551]
[165.96282959 117.88418579]
[178.20079041 126.55783844]
[190.43875122 135.23149109]
[202.67671204 143.90515137]
[214.91467285 152.57879639]
[230.64778137 154.24607849]
[236.55746460 167.91812134]
[248.79542542 176.59178162]
[261.03338623 185.26544189]
[276.76651001 186.93270874]
[282.67617798 200.60476685]
[299.04583740 201.58770752]
[306.13641357 216.37472534]
[296.65371704 229.75419617]
[280.35272217 227.96247864]
[274.00253296 212.84272766]
[259.14477539 211.79583740]
[252.35974121 197.50340271]
[240.12178040 188.82974243]
[227.88381958 180.15608215]
[213.02604675 179.10920715]
[206.24102783 164.81675720]
[194.00306702 156.14311218]
[181.76510620 147.46945190]
[169.52713013 138.79580688]
[157.28916931 130.12214661]
[145.05120850 121.44849396]
[132.81324768 112.77483368]
[125.97003937 121.88127899]
[116.86441803 128.02307129]
[106.64447784 130.74345398]
[96.50341797 129.99717712]
[91.12104034 143.99824524]
[85.84158325 158.03845215]
[80.66532898 172.11703491]
[75.48906708 186.19561768]
[70.31281281 200.27418518]
[65.13655090 214.35276794]
[59.96029663 228.43135071]
[54.78403854 242.50991821]
[49.60778046 256.58850098]
[44.43152237 270.66708374]
[50.56352234 277.13433838]
[54.24663162 285.20211792]
[55.10775757 293.98532104]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 25]
[5 24]
[6 23]
[7 22]
[8 21]
[28 210]
[29 209]
[30 208]
[31 207]
[32 206]
[33 205]
[34 204]
[35 203]
[36 202]
[38 201]
[39 200]
[42 86]
[43 85]
[44 84]
[45 83]
[46 82]
[49 79]
[50 78]
[51 77]
[55 75]
[56 74]
[57 73]
[58 71]
[59 70]
[60 69]
[61 67]
[62 66]
[90 166]
[91 165]
[92 164]
[93 163]
[94 162]
[95 161]
[96 159]
[97 158]
[99 157]
[101 156]
[102 155]
[103 154]
[104 153]
[106 151]
[107 150]
[108 149]
[110 147]
[111 146]
[112 145]
[115 143]
[116 142]
[117 141]
[118 140]
[119 139]
[124 137]
[125 136]
[126 135]
[127 134]
[128 133]
[167 196]
[168 195]
[169 194]
[170 193]
[171 192]
[172 191]
[173 190]
[175 188]
[176 187]
[177 186]
[179 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
