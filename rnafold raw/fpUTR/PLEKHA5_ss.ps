%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:00:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGGGGAGGCGCGCUCGCUCCGCGCUCCCUUCGCUCGCUCGUUCCCUCCUCCCUCGGCAGCCGCGGCGGCAGCAGGAGAAGGCGGCGGCGGCGGCUAGGGAUCAGAC\
) } def
/len { sequence length } bind def

/coor [
[119.06520081 126.67196655]
[113.98006439 140.78372192]
[108.89492798 154.89546204]
[114.39286804 169.96702576]
[105.91468811 183.58686829]
[89.96411896 185.30700684]
[78.77706909 173.80789185]
[80.93529510 157.91067505]
[94.78318024 149.81033325]
[99.86831665 135.69857788]
[104.95345306 121.58683014]
[93.68180084 111.68987274]
[80.34626770 118.55744934]
[67.01073456 125.42502594]
[53.67520142 132.29260254]
[50.40011597 147.58337402]
[38.03083801 157.15077209]
[22.40776253 156.47734070]
[10.90762711 145.88107300]
[8.96044540 130.36518860]
[17.48561668 117.25582886]
[32.45781708 112.74282074]
[46.80762863 118.95706940]
[60.14316177 112.08949280]
[73.47869110 105.22191620]
[86.81422424 98.35434723]
[97.94209290 88.29598236]
[106.11772156 75.71984863]
[114.29334259 63.14371872]
[122.46897125 50.56758499]
[130.64460754 37.99145508]
[138.45440674 25.18494034]
[145.89192200 12.15868092]
[153.32943726 -0.86757731]
[160.76695251 -13.89383602]
[162.34666443 -23.04914093]
[168.61114502 -27.18386459]
[176.42095947 -39.99037933]
[184.23077393 -52.79689407]
[186.07368469 -61.90287399]
[192.45471191 -65.85534668]
[200.63034058 -78.43148041]
[208.80596924 -91.00761414]
[216.98159790 -103.58374786]
[218.01623535 -119.37108612]
[231.44015503 -125.82459259]
[239.61578369 -138.40072632]
[247.79141235 -150.97685242]
[248.82606506 -166.76419067]
[262.24996948 -173.21769714]
[270.42559814 -185.79383850]
[278.60122681 -198.36996460]
[286.77685547 -210.94610596]
[283.52407837 -220.08468628]
[284.91500854 -229.54408264]
[290.49606323 -237.13526917]
[298.85940552 -241.16343689]
[307.99618530 -240.80567932]
[317.22732544 -252.62879944]
[319.62149048 -268.26782227]
[333.55255127 -273.53793335]
[342.78369141 -285.36105347]
[352.01483154 -297.18417358]
[361.24597168 -309.00729370]
[366.22775269 -325.21279907]
[383.17901611 -324.91183472]
[387.58239746 -308.53970337]
[373.06909180 -299.77615356]
[363.83795166 -287.95303345]
[354.60681152 -276.12991333]
[345.37567139 -264.30679321]
[343.64178467 -249.51345825]
[329.05044556 -243.39765930]
[319.81930542 -231.57453918]
[319.01184082 -211.03715515]
[299.35299683 -202.77047729]
[291.17736816 -190.19433594]
[283.00173950 -177.61820984]
[274.82611084 -165.04206848]
[274.37625122 -150.15426636]
[260.36755371 -142.80122375]
[252.19192505 -130.22509766]
[244.01629639 -117.64896393]
[243.56642151 -102.76115417]
[229.55772400 -95.40811920]
[221.38209534 -82.83198547]
[213.20646667 -70.25585175]
[205.03083801 -57.67972183]
[197.03729248 -44.98707962]
[189.22747803 -32.18056488]
[181.41766357 -19.37405205]
[173.79321289 -6.45632362]
[166.35569763 6.56993484]
[158.91818237 19.59619331]
[151.48066711 32.62245178]
[151.90270996 37.51983261]
[149.14472961 42.70880890]
[143.22073364 46.16707993]
[135.04510498 58.74321365]
[126.86947632 71.31934357]
[118.69384766 83.89547729]
[110.51822662 96.47161102]
[120.36507416 85.15615082]
[134.93339539 81.58346558]
[148.89811707 87.05944824]
[157.15481567 99.58250427]
[156.68547058 114.57515717]
[147.66165161 126.55725098]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 11]
[2 10]
[3 9]
[12 26]
[13 25]
[14 24]
[15 23]
[27 102]
[28 101]
[29 100]
[30 99]
[31 98]
[32 95]
[33 94]
[34 93]
[35 92]
[37 91]
[38 90]
[39 89]
[41 88]
[42 87]
[43 86]
[44 85]
[46 83]
[47 82]
[48 81]
[50 79]
[51 78]
[52 77]
[53 76]
[58 74]
[59 73]
[61 71]
[62 70]
[63 69]
[64 68]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
