%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:01:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCAAUGAAAAAUUACACUUCUAUUUUCUUUCCUAAAGGGAAAAAGGAAGAAUGCAACAAAACUGAAGUAUGUUCUGCCACGUUCCUGAACUGCAGCCAUAGGAGCCCUCCCAGCCCUACCCAAACCAGCCUACUCCCUCUCAAGAGCUCACAGCUGCAGGACUAGAGCCAGAUGUGCCCCGGCAAUAAGGACUUCUUCC\
) } def
/len { sequence length } bind def

/coor [
[-308.74395752 575.55090332]
[-293.74456787 575.41424561]
[-278.99832153 578.16162109]
[-265.05453491 583.69073486]
[-252.43266296 591.79559326]
[-241.60289001 602.17419434]
[-232.96864319 614.44000244]
[-226.85157776 628.13604736]
[-223.47956848 642.75213623]
[-222.97822571 657.74371338]
[-225.36622620 672.55242920]
[-230.55461121 686.62652588]
[-238.35011292 699.44177246]
[-248.46232605 710.52075195]
[-260.51452637 719.45068359]
[-274.05776978 725.89898682]
[-288.58752441 729.62542725]
[-303.56253052 730.49121094]
[-318.42489624 728.46398926]
[-332.62103271 723.61938477]
[-345.62203979 716.13781738]
[-356.94360352 706.29803467]
[-366.16400146 694.46655273]
[-372.93975830 681.08410645]
[-377.01840210 666.64929199]
[-378.24807739 651.69976807]
[-376.58288574 636.79248047]
[-372.08493042 622.48272705]
[-364.92172241 609.30364990]
[-355.35711670 597.74310303]
[-369.05395508 603.85839844]
[-382.75082397 609.97363281]
[-396.44766235 616.08886719]
[-410.14450073 622.20416260]
[-423.84136963 628.31939697]
[-435.83944702 640.29779053]
[-450.67114258 632.08453369]
[-446.88467407 615.55883789]
[-429.95660400 614.62255859]
[-416.25976562 608.50726318]
[-402.56292725 602.39202881]
[-388.86605835 596.27679443]
[-375.16921997 590.16149902]
[-361.47238159 584.04626465]
[-359.18542480 579.39184570]
[-354.69052124 575.86816406]
[-348.60076904 574.50976562]
[-338.76184082 563.18737793]
[-328.92291260 551.86505127]
[-319.08398438 540.54272461]
[-309.24505615 529.22039795]
[-299.40612793 517.89801025]
[-289.56719971 506.57568359]
[-290.86169434 491.78176880]
[-281.04492188 480.15914917]
[-265.51892090 478.90164185]
[-272.82299805 465.86572266]
[-275.23086548 451.08966064]
[-272.43286133 436.35382080]
[-264.74771118 423.44024658]
[-253.08639526 413.91744995]
[-238.84416199 408.94967651]
[-223.73356628 409.15475464]
[-209.57864380 414.52725220]
[-199.73971558 403.20489502]
[-189.90078735 391.88256836]
[-191.19529724 377.08865356]
[-181.37850952 365.46603394]
[-165.85250854 364.20852661]
[-156.01358032 352.88619995]
[-146.17465210 341.56384277]
[-136.33572388 330.24151611]
[-126.49680328 318.91915894]
[-116.65786743 307.59680176]
[-114.64194489 300.48074341]
[-106.57681274 296.17642212]
[-96.56298828 285.00845337]
[-86.54917145 273.84051514]
[-86.57096863 271.03048706]
[-85.47690582 268.04257202]
[-83.19364929 265.30322266]
[-79.80397034 263.25756836]
[-75.54870605 262.31442261]
[-64.85994720 251.79063416]
[-54.17119217 241.26683044]
[-43.48242950 230.74302673]
[-43.62377548 215.89326477]
[-32.93376923 205.06835938]
[-17.35700798 205.02079773]
[-17.49835396 190.17102051]
[-6.80834675 179.34613037]
[8.76841450 179.29855347]
[19.45717430 168.77474976]
[30.14593315 158.25094604]
[40.83469391 147.72714233]
[51.52345276 137.20333862]
[62.21221161 126.67954254]
[72.90097046 116.15573883]
[65.41454315 93.67994690]
[75.87440491 69.65481567]
[101.97553253 57.67038345]
[106.34375000 43.32051849]
[110.71196747 28.97065353]
[115.08019257 14.62078762]
[114.58587646 5.49231386]
[119.62953949 0.08268519]
[124.22039795 -14.19751167]
[115.73994446 -27.33585358]
[117.73999023 -42.84500504]
[129.27616882 -53.40202332]
[144.90144348 -54.02220535]
[157.23805237 -44.41271591]
[160.46101379 -29.11086845]
[153.04853821 -15.34172440]
[138.50059509 -9.60665226]
[133.90972900 4.67354393]
[129.43005371 18.98900795]
[125.06183624 33.33887482]
[120.69361877 47.68873978]
[116.32539368 62.03860474]
[121.66977692 67.30050659]
[132.19357300 56.61174774]
[142.71737671 45.92298889]
[153.24118042 35.23423004]
[163.76498413 24.54546928]
[174.28878784 13.85670948]
[184.81277466 3.16812444]
[195.50117493 13.69228172]
[184.97755432 24.38051224]
[174.45375061 35.06927109]
[163.92994690 45.75802994]
[153.40614319 56.44678879]
[142.88233948 67.13555145]
[132.35853577 77.82431030]
[137.70291138 83.08621216]
[151.98310852 78.49535370]
[166.26330566 73.90449524]
[170.97610474 59.12040710]
[183.49861145 49.95708847]
[199.01567078 49.93801880]
[211.56066895 59.07053375]
[216.30978394 73.84299469]
[211.43688965 88.57508850]
[198.81570435 97.60202026]
[183.29934692 97.45275879]
[170.85417175 88.18469238]
[156.57397461 92.77555084]
[142.29377747 97.36640930]
[139.55862427 110.10589600]
[133.23162842 120.94686890]
[124.19644165 128.95733643]
[113.54969025 133.55693054]
[102.47335815 134.55422974]
[92.10571289 132.14073181]
[83.42477417 126.84449768]
[72.73601532 137.36830139]
[62.04725647 147.89210510]
[51.35849380 158.41590881]
[40.66973495 168.93971252]
[29.98097610 179.46351624]
[19.29221725 189.98731995]
[19.00240707 205.56144714]
[8.01256847 216.08181763]
[-6.83320522 215.70954895]
[-7.12301636 231.28369141]
[-18.11285400 241.80406189]
[-32.95862961 241.43179321]
[-43.64738846 251.95559692]
[-54.33614731 262.47940063]
[-65.02490997 273.00320435]
[-75.38121033 283.85433960]
[-85.39502716 295.02227783]
[-95.40885162 306.19024658]
[-105.33552551 317.43572998]
[-115.17445374 328.75808716]
[-125.01338196 340.08044434]
[-134.85231018 351.40277100]
[-144.69123840 362.72512817]
[-154.53016663 374.04745483]
[-153.60925293 389.59704590]
[-163.74861145 400.93936157]
[-178.57844543 401.72149658]
[-188.41737366 413.04382324]
[-198.25630188 424.36618042]
[-190.96153259 437.63311768]
[-188.65029907 452.56732178]
[-191.58245850 467.36334229]
[-199.38519287 480.23919678]
[-211.10026550 489.65081787]
[-225.30165100 494.47732544]
[-240.26910400 494.15451050]
[-254.19659424 488.74057007]
[-253.27566528 504.29016113]
[-263.41503906 515.63244629]
[-278.24484253 516.41461182]
[-288.08380127 527.73693848]
[-297.92272949 539.05932617]
[-307.76165771 550.38165283]
[-317.60058594 561.70397949]
[-327.43951416 573.02630615]
[-337.27844238 584.34869385]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 44]
[31 43]
[32 42]
[33 41]
[34 40]
[35 39]
[47 201]
[48 200]
[49 199]
[50 198]
[51 197]
[52 196]
[53 195]
[56 192]
[64 184]
[65 183]
[66 182]
[69 179]
[70 178]
[71 177]
[72 176]
[73 175]
[74 174]
[76 173]
[77 172]
[78 171]
[83 170]
[84 169]
[85 168]
[86 167]
[89 164]
[92 161]
[93 160]
[94 159]
[95 158]
[96 157]
[97 156]
[98 155]
[101 120]
[102 119]
[103 118]
[104 117]
[106 116]
[107 115]
[135 148]
[136 147]
[137 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
