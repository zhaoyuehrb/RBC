%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:58:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACACACAGCGAGCGGGCGGGCAGAAGGCGGUUCUGCUGGUCUCCUCUUCCUGCUGCAGCCAGCCCAGCGUGCGGGCCAUGGGCCCUGCCGGCGGGUGAGGCAGCCGCGUGGCAGGC\
) } def
/len { sequence length } bind def

/coor [
[-15.71295261 163.33374023]
[-20.12154388 168.51644897]
[-25.50892830 172.65072632]
[-31.63188362 175.55693054]
[-38.21544266 177.11070251]
[-44.96523285 177.24827576]
[-51.58064651 175.96905518]
[-57.76823044 173.33546448]
[-63.25468445 169.46984863]
[-67.79895782 164.54884338]
[-71.20281982 158.79528809]
[-73.31951904 152.46817017]
[-88.31820679 152.27017212]
[-103.31690216 152.07217407]
[-117.21800232 159.62664795]
[-129.84204102 151.72203064]
[-144.84072876 151.52403259]
[-159.83941650 151.32603455]
[-174.83811951 151.12803650]
[-188.73921204 158.68251038]
[-201.36325073 150.77789307]
[-216.36193848 150.57989502]
[-231.36064148 150.38189697]
[-246.35932922 150.18391418]
[-261.35803223 149.98591614]
[-276.35671997 149.78791809]
[-291.35540771 149.58993530]
[-303.80526733 159.70825195]
[-319.44705200 156.14259338]
[-326.28173828 141.62821960]
[-319.06631470 127.29932404]
[-303.33584595 124.14780426]
[-291.15740967 134.59123230]
[-276.15872192 134.78923035]
[-261.16003418 134.98722839]
[-246.16133118 135.18521118]
[-231.16264343 135.38320923]
[-216.16394043 135.58120728]
[-201.16525269 135.77920532]
[-188.33695984 128.21057129]
[-174.64012146 136.12934875]
[-159.64143372 136.32734680]
[-144.64273071 136.52532959]
[-129.64404297 136.72332764]
[-116.81575012 129.15469360]
[-103.11891174 137.07348633]
[-88.12021637 137.27146912]
[-73.12152100 137.46946716]
[-58.51883316 117.78610992]
[-34.02486420 114.34402466]
[-14.20380020 129.51502991]
[0.22358449 125.41008759]
[14.65096951 121.30513763]
[29.07835388 117.20019531]
[43.50573730 113.09525299]
[57.93312454 108.99030304]
[72.05836487 103.94278717]
[85.81996155 97.97466278]
[94.30086517 86.85864258]
[108.21191406 88.26374054]
[121.97351074 82.29561615]
[135.73510742 76.32749939]
[146.27854919 61.30191422]
[163.58935547 63.83481216]
[177.18861389 57.50551224]
[190.78788757 51.17620850]
[204.38714600 44.84690475]
[210.94760132 38.30696106]
[218.42994690 38.53532410]
[232.19154358 32.56720352]
[238.07084656 18.14251900]
[252.11209106 12.28603649]
[265.82757568 17.97994995]
[279.58917236 12.01183033]
[293.27081299 5.86258364]
[306.87005615 -0.46671900]
[320.46932983 -6.79602194]
[334.06860352 -13.12532425]
[347.66784668 -19.45462799]
[359.47662354 -31.61972237]
[374.43527222 -23.64008713]
[370.90847778 -7.05702639]
[353.99716187 -5.85536575]
[340.39788818 0.47393721]
[326.79864502 6.80324030]
[313.19937134 13.13254261]
[299.60009766 19.46184540]
[294.80349731 25.20903015]
[285.55731201 25.77342796]
[271.79571533 31.74154663]
[266.57949829 45.64574814]
[252.70829773 51.89431000]
[238.15966797 46.32880020]
[224.39807129 52.29692078]
[210.71644592 58.44616699]
[197.11718750 64.77546692]
[183.51792908 71.10477448]
[169.91865540 77.43407440]
[165.43032837 88.75180054]
[154.04745483 94.10244751]
[141.70323181 90.08909607]
[127.94163513 96.05721283]
[114.18003845 102.02533722]
[105.69913483 113.14135742]
[91.78808594 111.73625946]
[78.02648926 117.70438385]
[90.41138458 126.16690826]
[91.78625488 141.10375977]
[81.15423584 151.68489075]
[66.22414398 150.23835754]
[57.82114410 137.81300354]
[62.03806686 123.41768646]
[47.61068344 127.52263641]
[33.18330002 131.62757874]
[18.75591469 135.73252869]
[4.32852936 139.83746338]
[-10.09885502 143.94241333]
[-10.58229160 150.76913452]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 48]
[13 47]
[14 46]
[16 44]
[17 43]
[18 42]
[19 41]
[21 39]
[22 38]
[23 37]
[24 36]
[25 35]
[26 34]
[27 33]
[51 117]
[52 116]
[53 115]
[54 114]
[55 113]
[56 112]
[57 106]
[58 105]
[60 103]
[61 102]
[62 101]
[64 98]
[65 97]
[66 96]
[67 95]
[69 94]
[70 93]
[73 90]
[74 89]
[75 87]
[76 86]
[77 85]
[78 84]
[79 83]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
