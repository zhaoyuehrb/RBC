%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:50:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGGGGCGGGGCUGCUUCCCGACCACCAUUUCCACAGAGGCAGGGCAAGAAGAGGGCCACAGGUGACGUCAUUCAGGAAAGCCGCCCUGAUUGGAGGGAAGGAGGCGGAGUCUAGUUUCCCUGGUGACGGAUUGUCCGGUGGUCGCCUGGUAACCGGUCGUGGCUGUACUGGCGGCGGCAGGGCUGGCGGCUUAGGCCGCAGAGGUCUGUGGGCCUGAGCCCACGCUGGACUCUGUCCGUUCUGCG\
) } def
/len { sequence length } bind def

/coor [
[-163.15992737 262.34402466]
[-177.96748352 264.73898315]
[-191.56222534 258.39996338]
[-199.24615479 245.51753235]
[-198.36381531 230.54316711]
[-204.60285950 244.18406677]
[-210.75573730 257.86407471]
[-216.82218933 271.58258057]
[-222.80197144 285.33911133]
[-228.69485474 299.13311768]
[-234.58775330 312.92709351]
[-240.48063660 326.72106934]
[-246.37353516 340.51504517]
[-241.75657654 355.87939453]
[-251.00837708 368.98602295]
[-267.03173828 369.78063965]
[-277.53491211 357.65368652]
[-274.46075439 341.90792847]
[-260.16751099 334.62216187]
[-254.27461243 320.82818604]
[-248.38172913 307.03417969]
[-242.48884583 293.24020386]
[-236.59594727 279.44622803]
[-236.85772705 272.07891846]
[-230.54071045 265.51614380]
[-224.47425842 251.79760742]
[-224.64306641 244.42756653]
[-218.24375916 237.94502258]
[-212.00471497 224.30412292]
[-215.83636475 217.85675049]
[-223.49966431 204.96203613]
[-227.33129883 198.51466370]
[-242.29521179 197.47460938]
[-257.25909424 196.43455505]
[-272.22299194 195.39450073]
[-287.18688965 194.35444641]
[-292.32043457 202.52133179]
[-300.02102661 208.23452759]
[-309.21411133 210.74894714]
[-318.63552856 209.76231384]
[-327.00549316 205.45080566]
[-333.20233154 198.43937683]
[-336.41271973 189.71148682]
[-351.30511475 187.91789246]
[-366.19750977 186.12429810]
[-381.08987427 184.33070374]
[-395.98226929 182.53709412]
[-410.87463379 180.74349976]
[-410.04342651 194.79991150]
[-419.40161133 209.47708130]
[-438.54785156 218.63769531]
[-453.54037476 218.16464233]
[-468.53292847 217.69158936]
[-483.52813721 217.31312561]
[-498.52545166 217.02926636]
[-512.46960449 224.50402832]
[-525.04815674 216.52725220]
[-540.04785156 216.43263245]
[-555.04754639 216.52725220]
[-570.04724121 216.62188721]
[-585.84790039 222.76802063]
[-596.12792969 209.28627014]
[-586.01885986 195.67588806]
[-570.14190674 201.62217712]
[-555.14215088 201.52755737]
[-540.14245605 201.43293762]
[-536.22399902 198.74221802]
[-530.57873535 198.46786499]
[-524.76428223 201.52993774]
[-511.89288330 194.03488159]
[-498.24160767 202.03195190]
[-483.24429321 202.31581116]
[-476.51400757 199.30760193]
[-468.05987549 202.69905090]
[-453.06732178 203.17210388]
[-438.07479858 203.64515686]
[-434.23806763 189.14344788]
[-430.40164185 174.64303589]
[-443.66653442 167.63998413]
[-460.02453613 168.80091858]
[-468.98352051 155.06524658]
[-461.32723999 140.56304932]
[-444.93185425 140.21295166]
[-436.66348267 154.37509155]
[-423.39859009 161.37815857]
[-409.08105469 165.85112000]
[-394.18865967 167.64471436]
[-379.29626465 169.43830872]
[-364.40390015 171.23191833]
[-349.51150513 173.02551270]
[-334.61914062 174.81910706]
[-319.61691284 160.90670776]
[-298.93627930 162.66998291]
[-286.14685059 179.39054871]
[-271.18295288 180.43060303]
[-256.21905518 181.47065735]
[-241.25515747 182.51071167]
[-226.29124451 183.55076599]
[-187.46366882 201.11830139]
[-173.49070740 195.66336060]
[-159.51774597 190.20841980]
[-145.54478455 184.75347900]
[-136.50270081 172.91751099]
[-120.83365631 175.10644531]
[-115.75845337 169.75964355]
[-106.64983368 169.67204285]
[-92.60916901 164.39382935]
[-78.56849670 159.11561584]
[-64.52782440 153.83740234]
[-50.48715210 148.55918884]
[-36.44647980 143.28097534]
[-22.40580940 138.00276184]
[-8.36513901 132.72454834]
[5.67553234 127.44632721]
[19.71620369 122.16811371]
[33.75687408 116.88989258]
[47.79754639 111.61167908]
[61.83821487 106.33346558]
[63.03743362 88.58934021]
[72.04920197 73.25701141]
[86.96876526 63.57718658]
[104.64265442 61.59582901]
[109.29590607 47.33584213]
[106.22135925 31.81624985]
[117.52516174 22.11710548]
[122.17841339 7.85711765]
[126.83166504 -6.40287066]
[131.48490906 -20.66285896]
[136.13816833 -34.92284775]
[140.79141235 -49.18283463]
[145.08338928 -63.55569077]
[149.01135254 -78.03225708]
[152.93931580 -92.50882721]
[151.25167847 -109.37857056]
[166.99496460 -115.67027283]
[177.39894104 -102.28395844]
[167.41589355 -88.58086395]
[163.48793030 -74.10429382]
[159.55995178 -59.62772369]
[160.81239319 -57.14610291]
[161.16967773 -54.02482986]
[160.38555908 -50.59793472]
[158.33747864 -47.28162384]
[155.05140686 -44.52958298]
[150.39814758 -30.26959610]
[145.74490356 -16.00960922]
[141.09164429 -1.74962020]
[136.43840027 12.51036835]
[131.78515625 26.77035522]
[135.19252014 41.26997757]
[123.55589294 51.98909378]
[118.90264130 66.24907684]
[123.00633240 68.90107727]
[126.74298859 72.04920197]
[130.05300903 75.64324951]
[132.88357544 79.62586212]
[146.92424011 74.34764862]
[160.96490479 69.06943512]
[175.00558472 63.79121780]
[189.04624939 58.51300430]
[203.08692932 53.23478699]
[217.05989075 47.77984619]
[230.96290588 42.14905167]
[240.84938049 29.79719734]
[255.55036926 32.19101334]
[269.45339966 26.56021690]
[283.35641479 20.92942238]
[297.25942993 15.29862785]
[311.16247559 9.66783237]
[320.81576538 -3.58908534]
[337.09246826 -1.58871198]
[343.24847412 13.61114025]
[332.95101929 26.37416649]
[316.79327393 23.57085991]
[302.89022827 29.20165443]
[288.98721313 34.83245087]
[275.08419800 40.46324539]
[261.18115234 46.09403992]
[252.28912354 58.04314423]
[236.59370422 56.05207825]
[222.69067383 61.68287277]
[220.04383850 65.63114166]
[214.89958191 67.97217560]
[208.36514282 67.27545929]
[194.32446289 72.55367279]
[180.28379822 77.83188629]
[166.24311829 83.11010742]
[152.20245361 88.38832092]
[138.16178894 93.66653442]
[138.57298279 102.92560577]
[136.76998901 112.01673889]
[149.85395813 119.35224915]
[162.93794250 126.68775940]
[176.02191162 134.02326965]
[189.10588074 141.35877991]
[202.18984985 148.69429016]
[215.27381897 156.02980042]
[228.35778809 163.36531067]
[241.44175720 170.70082092]
[254.52572632 178.03633118]
[267.65573120 185.28915405]
[280.83120728 192.45899963]
[294.00668335 199.62886047]
[307.18215942 206.79870605]
[323.55349731 205.84425354]
[332.33847046 219.69186401]
[324.49984741 234.09629822]
[308.10131836 234.23951721]
[300.01229858 219.97418213]
[286.83682251 212.80433655]
[273.66134644 205.63447571]
[260.48587036 198.46463013]
[253.12677002 198.02912903]
[247.19021606 191.12030029]
[234.10624695 183.78479004]
[221.02227783 176.44927979]
[207.93830872 169.11376953]
[194.85433960 161.77825928]
[181.77037048 154.44274902]
[168.68640137 147.10723877]
[155.60243225 139.77172852]
[142.51846313 132.43621826]
[129.43447876 125.10070801]
[114.86794281 135.71244812]
[97.07439423 138.57298279]
[79.91583252 133.06146240]
[67.11643219 120.37413788]
[53.07575989 125.65235138]
[39.03508759 130.93057251]
[24.99441910 136.20878601]
[10.95374775 141.48699951]
[-3.08692384 146.76521301]
[-17.12759399 152.04342651]
[-31.16826630 157.32164001]
[-45.20893860 162.59985352]
[-59.24960709 167.87806702]
[-73.29027557 173.15629578]
[-87.33094788 178.43450928]
[-101.37162018 183.71272278]
[-115.37871552 189.07940674]
[-125.42023468 201.30554199]
[-140.08984375 198.72644043]
[-154.06280518 204.18138123]
[-168.03576660 209.63632202]
[-182.00872803 215.09126282]
[-167.00875854 215.05995178]
[-154.58299255 223.46235657]
[-149.02542114 237.39482117]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 29]
[6 28]
[7 26]
[8 25]
[9 23]
[10 22]
[11 21]
[12 20]
[13 19]
[32 98]
[33 97]
[34 96]
[35 95]
[36 94]
[43 91]
[44 90]
[45 89]
[46 88]
[47 87]
[48 86]
[51 76]
[52 75]
[53 74]
[54 72]
[55 71]
[57 69]
[58 66]
[59 65]
[60 64]
[78 85]
[79 84]
[99 245]
[100 244]
[101 243]
[102 242]
[104 240]
[106 239]
[107 238]
[108 237]
[109 236]
[110 235]
[111 234]
[112 233]
[113 232]
[114 231]
[115 230]
[116 229]
[117 228]
[118 227]
[122 152]
[123 151]
[125 149]
[126 148]
[127 147]
[128 146]
[129 145]
[130 144]
[131 139]
[132 138]
[133 137]
[156 189]
[157 188]
[158 187]
[159 186]
[160 185]
[161 184]
[162 181]
[163 180]
[165 178]
[166 177]
[167 176]
[168 175]
[169 174]
[191 223]
[192 222]
[193 221]
[194 220]
[195 219]
[196 218]
[197 217]
[198 216]
[199 215]
[200 214]
[201 212]
[202 211]
[203 210]
[204 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
