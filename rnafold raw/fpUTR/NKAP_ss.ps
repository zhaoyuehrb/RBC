%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:23:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAGAUCCGGGGAAGGGUUUUGCAGAAGUACCCAGAACUGUGUCCAAGGUUUCCUCAGAUUUGGGCUGUUCCGCAGCGGCAGGUCCCGGGAACCAAGGCAACAGACAUCUUCCUAGGCUCGCGAGAGCGCCCCCUUGUCCCACGGCUGCUGGGGCCCCCCAGUAGCC\
) } def
/len { sequence length } bind def

/coor [
[153.86227417 268.99508667]
[146.95277405 255.57402039]
[147.69361877 240.39680481]
[155.98587036 227.54434204]
[149.22605896 214.15386963]
[142.46623230 200.76339722]
[128.28172302 196.36621094]
[121.23554230 182.88265991]
[125.94389343 168.03445435]
[119.18406677 154.64398193]
[112.42424011 141.25350952]
[105.66442108 127.86303711]
[91.53428650 128.75225830]
[77.98970795 122.55159760]
[68.52989197 110.10289001]
[56.80242157 119.45523834]
[45.07494736 128.80758667]
[33.34747696 138.15992737]
[21.70795822 147.62152100]
[10.15741539 157.19152832]
[-1.39312816 166.76152039]
[-6.58751774 182.31628418]
[-22.70743752 185.32962036]
[-33.17009735 172.70167542]
[-27.21240616 157.42300415]
[-10.96313095 155.21098328]
[0.58741301 145.64097595]
[12.13795662 136.07096863]
[15.29554939 129.35408020]
[23.99512863 126.43245697]
[35.72259903 117.08010864]
[47.45007324 107.72776794]
[59.17754364 98.37541962]
[62.51535797 83.75149536]
[56.00710297 70.23696899]
[49.49884796 56.72243118]
[32.34893036 46.18001938]
[34.52482605 26.99102402]
[27.51579666 13.72929287]
[20.50676727 0.46756187]
[13.49773884 -12.79416943]
[-1.33646333 -17.54645348]
[-8.25569725 -31.09558105]
[-3.63370275 -45.20843887]
[-10.64273167 -58.47016907]
[-25.47693443 -63.22245407]
[-32.39616776 -76.77158356]
[-27.77417374 -90.88443756]
[-34.78320312 -104.14617157]
[-41.79223251 -117.40789795]
[-48.80126190 -130.66963196]
[-55.81029129 -143.93136597]
[-62.81932068 -157.19309998]
[-69.82835388 -170.45481873]
[-83.09404755 -172.92619324]
[-92.36925507 -182.45701599]
[-94.41811371 -195.40008545]
[-88.71215057 -206.98001099]
[-95.47197723 -220.37048340]
[-102.23180389 -233.76095581]
[-108.99163055 -247.15142822]
[-115.75144958 -260.54190063]
[-122.51127625 -273.93237305]
[-138.14006042 -283.63360596]
[-136.52195740 -301.08999634]
[-143.53099060 -314.35174561]
[-150.54002380 -327.61346436]
[-157.54904175 -340.87521362]
[-164.55807495 -354.13693237]
[-177.30487061 -365.31527710]
[-170.09202576 -380.65841675]
[-153.35180664 -377.97485352]
[-151.29634094 -361.14596558]
[-144.28732300 -347.88421631]
[-137.27828979 -334.62249756]
[-130.26925659 -321.36077881]
[-123.26023102 -308.09902954]
[-111.77503204 -304.21981812]
[-105.83641052 -293.19332886]
[-109.12080383 -280.69219971]
[-102.36097717 -267.30172729]
[-95.60115814 -253.91125488]
[-88.84133148 -240.52078247]
[-82.08150482 -227.13031006]
[-75.32167816 -213.73983765]
[-59.15122223 -209.18750000]
[-51.10022736 -194.06028748]
[-56.56661987 -177.46385193]
[-49.55759048 -164.20211792]
[-42.54856110 -150.94038391]
[-35.53953171 -137.67866516]
[-28.53050232 -124.41693115]
[-21.52147293 -111.15519714]
[-14.51244259 -97.89347076]
[-0.24819002 -93.76228333]
[7.04888105 -80.41284943]
[2.61899877 -65.47920227]
[9.62802792 -52.21746826]
[23.89228058 -48.08628464]
[31.18935204 -34.73684692]
[26.75946999 -19.80319786]
[33.76849747 -6.54146767]
[40.77752686 6.72026348]
[47.78655624 19.98199463]
[57.83044815 22.12087440]
[65.17696381 29.60765648]
[67.20938110 40.12232971]
[63.01337814 50.21417618]
[69.52163696 63.72871017]
[76.02989197 77.24324036]
[83.68383026 72.01725006]
[92.32126617 69.21078491]
[101.21347809 68.95127106]
[109.63999176 71.15567780]
[116.94695282 75.54546356]
[122.59780121 81.67698669]
[126.21240234 88.98435211]
[141.08407593 87.02645874]
[155.95574951 85.06856537]
[170.82742310 83.11067963]
[183.50126648 72.70367432]
[198.75358582 78.72851562]
[200.89410400 94.98736572]
[187.72084045 104.75450897]
[172.78530884 97.98234558]
[157.91363525 99.94023895]
[143.04196167 101.89813232]
[128.17028809 103.85602570]
[126.51420593 110.26797485]
[123.41978455 116.12290955]
[119.05489349 121.10321045]
[125.81471252 134.49368286]
[132.57453918 147.88415527]
[139.33436584 161.27462769]
[154.07711792 166.30346680]
[160.74177551 179.97961426]
[155.85670471 194.00357056]
[162.61653137 207.39404297]
[169.37635803 220.78451538]
[184.64152527 221.74462891]
[197.29301453 230.16108704]
[203.98857117 243.69015503]
[203.01976013 258.65402222]
[194.74670410 271.04040527]
[201.50651550 284.43087769]
[208.26634216 297.82135010]
[215.02616882 311.21182251]
[221.78599548 324.60229492]
[228.54582214 337.99276733]
[235.30564880 351.38323975]
[242.06547546 364.77371216]
[248.82528687 378.16418457]
[255.58511353 391.55465698]
[269.59402466 400.08007812]
[268.94479370 416.46636963]
[254.30529785 423.85671997]
[240.73541260 414.64859009]
[242.19464111 398.31448364]
[235.43481445 384.92401123]
[228.67500305 371.53353882]
[221.91517639 358.14306641]
[215.15534973 344.75259399]
[208.39552307 331.36212158]
[201.63569641 317.97164917]
[194.87586975 304.58117676]
[188.11604309 291.19070435]
[181.35621643 277.80023193]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 139]
[5 138]
[6 137]
[9 134]
[10 133]
[11 132]
[12 131]
[15 33]
[16 32]
[17 31]
[18 30]
[19 28]
[20 27]
[21 26]
[34 110]
[35 109]
[36 108]
[38 104]
[39 103]
[40 102]
[41 101]
[44 98]
[45 97]
[48 94]
[49 93]
[50 92]
[51 91]
[52 90]
[53 89]
[54 88]
[58 85]
[59 84]
[60 83]
[61 82]
[62 81]
[63 80]
[65 77]
[66 76]
[67 75]
[68 74]
[69 73]
[117 128]
[118 127]
[119 126]
[120 125]
[144 167]
[145 166]
[146 165]
[147 164]
[148 163]
[149 162]
[150 161]
[151 160]
[152 159]
[153 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
