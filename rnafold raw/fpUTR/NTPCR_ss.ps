%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:43:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGAAGGCGCAUGCGUGGUCUUGAGGGCGGUGCUUCCGGUCAAAGCACCGCUUGGGGGCGGGGCCUGCGACACGCGGUGGGCGGGUCCUGAGUCGCGACCCUGGUCCGGACCUGACCUGAAUUGCGACCCCAACCUGGACUGCUCCCCUGACCGCAACCCCUACCCCCGCCCACCAGU\
) } def
/len { sequence length } bind def

/coor [
[131.36280823 153.04742432]
[129.80351257 138.12869263]
[128.24421692 123.20995331]
[120.90631104 121.65911102]
[106.23049927 118.55741119]
[98.89259338 117.00656891]
[91.43019867 130.01858521]
[83.96781158 143.03060913]
[76.50542450 156.04263306]
[69.04302979 169.05465698]
[67.48088837 178.08253479]
[61.33652496 182.22613525]
[53.64942169 195.10668945]
[53.95338821 211.50302124]
[39.76803589 219.73149109]
[25.68603897 211.32736206]
[26.19374657 194.93608093]
[40.76887512 187.41958618]
[48.45597839 174.53903198]
[56.03100967 161.59226990]
[63.49340057 148.58024597]
[70.95578766 135.56822205]
[78.41818237 122.55619812]
[85.88056946 109.54417419]
[81.65310669 103.34912872]
[73.19818878 90.95904541]
[68.97072601 84.76399994]
[54.13367462 86.96897888]
[39.29662323 89.17395782]
[24.45957375 91.37894440]
[9.62252426 93.58392334]
[-5.21452570 95.78890228]
[-20.05157661 97.99388123]
[-34.88862610 100.19886780]
[-49.72567749 102.40384674]
[-64.56272888 104.60882568]
[-79.39978027 106.81380463]
[-87.42657471 120.23410797]
[-102.21871948 125.30625153]
[-116.79179382 119.63533020]
[-124.26485443 105.89897919]
[-121.10934448 90.58308411]
[-108.81519318 80.91933441]
[-93.18733215 81.47067261]
[-81.60475922 91.97676086]
[-66.76770782 89.77177429]
[-51.93065643 87.56679535]
[-37.09360886 85.36181641]
[-22.25655746 83.15683746]
[-7.41950703 80.95185089]
[7.41754341 78.74687195]
[22.25459290 76.54189301]
[37.09164429 74.33690643]
[51.92869568 72.13192749]
[66.76574707 69.92694855]
[80.14852905 63.15190887]
[90.70900726 52.49938202]
[101.26948547 41.84685898]
[111.82995605 31.19433212]
[122.39043427 20.54180527]
[126.61141205 5.29405355]
[141.06660461 1.70285285]
[151.62707520 -8.94967270]
[162.18756104 -19.60219955]
[172.74803162 -30.25472450]
[172.84913635 -45.83123016]
[183.71072388 -56.48397064]
[198.55990601 -56.29158783]
[209.12039185 -66.94411469]
[219.68086243 -77.59664154]
[230.24134827 -88.24916840]
[234.50141907 -106.15097046]
[251.58164978 -110.12964630]
[261.95565796 -120.96385956]
[265.64410400 -129.35063171]
[272.60498047 -131.89410400]
[276.43844604 -140.21560669]
[283.44238281 -142.63787842]
[294.18615723 -153.10551453]
[298.16348267 -161.35922241]
[305.20840454 -163.65957642]
[316.13226318 -173.93916321]
[327.05609131 -184.21875000]
[337.97991943 -194.49833679]
[348.90374756 -204.77792358]
[359.82757568 -215.05751038]
[363.94754028 -223.24095154]
[371.03134155 -225.41868591]
[382.13192749 -235.50712585]
[393.23254395 -245.59556580]
[403.97631836 -256.06320190]
[414.35031128 -266.89739990]
[418.29904175 -284.87045288]
[435.30764771 -289.14498901]
[445.49203491 -300.15762329]
[455.67645264 -311.17022705]
[465.86083984 -322.18286133]
[476.04525757 -333.19549561]
[486.22964478 -344.20812988]
[496.41406250 -355.22076416]
[495.97448730 -370.79138184]
[506.45980835 -381.81466675]
[521.30670166 -382.13778687]
[524.99597168 -397.52282715]
[539.31781006 -401.61355591]
[549.50219727 -412.62619019]
[559.68658447 -423.63882446]
[569.87097168 -434.65145874]
[567.72155762 -450.14059448]
[576.07495117 -463.36007690]
[590.98699951 -468.06802368]
[605.41668701 -462.04153442]
[612.55072021 -448.12606812]
[609.02062988 -432.89215088]
[596.49328613 -423.53271484]
[580.88360596 -424.46704102]
[570.69921875 -413.45443726]
[560.51483154 -402.44180298]
[550.33044434 -391.42916870]
[547.36962891 -376.83178711]
[532.31933594 -371.95336914]
[533.15570068 -357.12649536]
[522.98413086 -345.81304932]
[507.42666626 -345.03634644]
[497.24227905 -334.02371216]
[487.05789185 -323.01110840]
[476.87347412 -311.99847412]
[466.68908691 -300.98583984]
[456.50466919 -289.97320557]
[446.32028198 -278.96057129]
[446.47454834 -266.84811401]
[438.05636597 -257.58804321]
[425.18450928 -256.52340698]
[414.81051636 -245.68920898]
[414.75109863 -242.86097717]
[413.55252075 -239.88655090]
[411.15356445 -237.20562744]
[407.65533447 -235.27175903]
[403.32098389 -234.49497986]
[392.22039795 -224.40652466]
[381.11978149 -214.31808472]
[370.10714722 -204.13368225]
[359.18331909 -193.85409546]
[348.25949097 -183.57450867]
[337.33566284 -173.29492188]
[326.41183472 -163.01533508]
[315.48800659 -152.73573303]
[304.65380859 -142.36174011]
[293.91003418 -131.89410400]
[283.25750732 -121.33362579]
[272.78985596 -110.58985138]
[262.41586304 -99.75564575]
[262.35989380 -87.64233398]
[253.78225708 -78.52973938]
[240.89387512 -77.68869019]
[230.33338928 -67.03616333]
[219.77291870 -56.38363647]
[209.21243286 -45.73110962]
[209.53367615 -30.88414383]
[198.97560120 -19.93052864]
[183.40055847 -19.69424820]
[172.84008789 -9.04172134]
[162.27960205 1.61080456]
[151.71913147 12.26333046]
[148.25350952 26.74914360]
[133.04296875 31.10228348]
[122.48248291 41.75481033]
[111.92200470 52.40733719]
[101.36152649 63.05986023]
[90.80105591 73.71238708]
[128.58978271 74.86193848]
[143.16294861 121.65065765]
[144.72224426 136.56939697]
[146.28153992 151.48812866]
[159.34101868 160.08952332]
[163.76672363 175.08776855]
[157.46899414 189.40112305]
[143.42138672 196.27128601]
[128.25679016 192.45436096]
[119.13544464 179.75259399]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 174]
[2 173]
[3 172]
[6 24]
[7 23]
[8 22]
[9 21]
[10 20]
[12 19]
[13 18]
[27 55]
[28 54]
[29 53]
[30 52]
[31 51]
[32 50]
[33 49]
[34 48]
[35 47]
[36 46]
[37 45]
[56 170]
[57 169]
[58 168]
[59 167]
[60 166]
[62 164]
[63 163]
[64 162]
[65 161]
[68 158]
[69 157]
[70 156]
[71 155]
[73 152]
[74 151]
[76 150]
[78 149]
[79 148]
[81 147]
[82 146]
[83 145]
[84 144]
[85 143]
[86 142]
[88 141]
[89 140]
[90 139]
[91 134]
[92 133]
[94 130]
[95 129]
[96 128]
[97 127]
[98 126]
[99 125]
[100 124]
[103 121]
[105 119]
[106 118]
[107 117]
[108 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
