%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:48:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGUUUCCCGCCGCGGGUGAAUGAGUCCGACUGCGCUGCCGCCGCCGCCGCCGCCCGCAUCGAAGCUCCGGCCGCGUCCCCCGCGCCAGCCCCGGGAGCCUGCGCGCCGAGACCCCUGCGUGUCUGCGAACAGACCUCCGGCCUCGGGCCAUCACCCCGGGCAGACGCUGCAGCCCCUGUCCGGGCCUCUUGCCUGCCGCCCCC\
) } def
/len { sequence length } bind def

/coor [
[211.43775940 321.80905151]
[207.81387329 336.36471558]
[204.18997192 350.92037964]
[200.56607056 365.47604370]
[196.94218445 380.03170776]
[203.94410706 394.46612549]
[196.89472961 408.87744141]
[181.20173645 412.21051025]
[168.90344238 401.90850830]
[169.43403625 385.87423706]
[182.38652039 376.40780640]
[186.01040649 361.85214233]
[189.63430786 347.29647827]
[193.25819397 332.74081421]
[196.88209534 318.18515015]
[195.05657959 303.29666138]
[188.02348328 290.04766846]
[180.99038696 276.79867554]
[173.95729065 263.54971313]
[166.92419434 250.30072021]
[159.89109802 237.05174255]
[153.97592163 232.61592102]
[152.85353088 223.54664612]
[146.02330017 210.19194031]
[140.17645264 205.66644287]
[139.19248962 196.58110046]
[132.56671143 183.12379456]
[125.94092560 169.66650391]
[119.31514740 156.20919800]
[112.68936157 142.75189209]
[106.06358337 129.29458618]
[94.83871460 129.46694946]
[84.34066772 125.48970795]
[76.04780579 117.92294312]
[71.12793732 107.83223724]
[70.27390289 96.63858032]
[56.26746750 91.27017975]
[42.26103210 85.90177917]
[28.25459480 80.53337860]
[12.59938335 82.81919098]
[3.48426270 71.03938293]
[-10.52217484 65.67098236]
[-24.52861214 60.30258179]
[-40.11250305 71.40745544]
[-59.09093857 70.88498688]
[-73.80574036 59.12692261]
[-78.42819214 41.02225876]
[-92.66549683 36.30006409]
[-106.90280151 31.57787323]
[-122.43708801 34.57728958]
[-132.08142090 23.22669411]
[-146.31872559 18.50450134]
[-160.55604553 13.78230858]
[-174.79335022 9.06011581]
[-186.05815125 16.44810486]
[-199.32751465 16.00447655]
[-209.76313782 8.11522865]
[-213.68916321 -4.15974426]
[-227.85279846 -9.09850502]
[-241.97370911 -2.00094414]
[-256.95098877 -7.04645014]
[-263.89883423 -21.24161339]
[-258.69528198 -36.16469574]
[-244.42744446 -42.96209717]
[-229.56021118 -37.60103989]
[-222.91403198 -23.26214218]
[-208.75039673 -18.32338333]
[-193.93447876 -26.27747536]
[-177.62832642 -20.95193100]
[-170.07115173 -5.17719030]
[-155.83384705 -0.45499805]
[-141.59654236 4.26719427]
[-127.35923767 8.98938656]
[-112.84329224 5.65220737]
[-102.18061066 17.34056664]
[-87.94330597 22.06275940]
[-73.70599365 26.78495026]
[-66.02732849 18.68330383]
[-55.83264542 14.01260662]
[-44.58007431 13.48305130]
[-33.89487839 17.20948029]
[-25.33468437 24.68925476]
[-20.16245270 34.86969757]
[-19.16021156 46.29614639]
[-5.15377474 51.66454697]
[8.85266209 57.03294754]
[23.50603867 54.36315155]
[33.62299347 66.52693939]
[47.62943268 71.89533997]
[61.63586807 77.26374054]
[75.64230347 82.63214111]
[88.86868286 72.23250580]
[105.61614227 70.61635590]
[112.03592682 57.05957031]
[118.45571899 43.50278854]
[124.87550354 29.94600868]
[131.29528809 16.38922691]
[130.20870972 0.60537666]
[142.64866638 -7.58589125]
[141.56208801 -23.36974144]
[154.00202942 -31.56100845]
[160.42182922 -45.11779022]
[166.84161377 -58.67457199]
[161.76008606 -73.39923859]
[168.46379089 -87.05629730]
[182.53283691 -91.81000519]
[188.95262146 -105.36678314]
[195.37240601 -118.92356110]
[194.28582764 -134.70741272]
[206.72578430 -142.89868164]
[213.14556885 -156.45545959]
[212.05899048 -172.23931885]
[224.49893188 -180.43058777]
[230.91873169 -193.98736572]
[225.36616516 -208.78413391]
[231.97877502 -223.13853455]
[246.83343506 -228.53434753]
[261.11712646 -221.77033997]
[266.35559082 -206.85946655]
[259.44091797 -192.64810181]
[244.47550964 -187.56758118]
[238.05572510 -174.01078796]
[239.60148621 -159.19660950]
[226.70234680 -150.03567505]
[220.28256226 -136.47889709]
[221.82832336 -121.66471863]
[208.92918396 -112.50377655]
[202.50939941 -98.94699860]
[196.08961487 -85.39021301]
[201.32701111 -71.49398041]
[195.00955200 -57.65402603]
[180.39839172 -52.25478363]
[173.97860718 -38.69800186]
[167.55882263 -25.14122009]
[169.10458374 -10.32704258]
[156.20544434 -1.16610312]
[157.75120544 13.64807510]
[144.85208130 22.80901527]
[138.43228149 36.36579514]
[132.01249695 49.92257690]
[125.59271240 63.47935867]
[119.17292023 77.03614044]
[128.60763550 91.25109100]
[128.73771667 108.31162262]
[119.52088928 122.66880798]
[126.14666748 136.12611389]
[132.77244568 149.58341980]
[139.39822388 163.04071045]
[146.02401733 176.49801636]
[152.64979553 189.95532227]
[159.37799072 203.36170959]
[166.20822144 216.71641541]
[173.14009094 230.01864624]
[180.17318726 243.26762390]
[187.20628357 256.51660156]
[194.23937988 269.76559448]
[201.27247620 283.01458740]
[208.30555725 296.26354980]
[219.58380127 290.03100586]
[235.45440674 291.49334717]
[250.83993530 302.98968506]
[261.52709961 313.51510620]
[272.21426392 324.04049683]
[282.90145874 334.56591797]
[293.58862305 345.09133911]
[299.88705444 347.12246704]
[303.64715576 351.39038086]
[304.43505859 356.10446167]
[314.79626465 366.95089722]
[330.81799316 362.87234497]
[346.62011719 367.40307617]
[357.91690063 379.21575928]
[361.69424438 395.02169800]
[357.01351929 410.48599243]
[367.53894043 421.17315674]
[378.06436157 431.86035156]
[388.58975220 442.54751587]
[404.39352417 442.41738892]
[415.60174561 453.55972290]
[415.56475830 469.36395264]
[404.30456543 480.45373535]
[388.50158691 480.24969482]
[377.53146362 468.87286377]
[377.90258789 453.07293701]
[367.37716675 442.38574219]
[356.85177612 431.69857788]
[346.32635498 421.01141357]
[333.36099243 425.30963135]
[319.74334717 423.59320068]
[308.13873291 416.14062500]
[300.84329224 404.35870361]
[299.32962036 390.51730347]
[303.94982910 377.31213379]
[293.58862305 366.46569824]
[283.06320190 355.77850342]
[272.37603760 345.25308228]
[261.68887329 334.72769165]
[251.00169373 324.20227051]
[240.31451416 313.67684937]
[233.09533691 315.70989990]
[237.42805481 330.07052612]
[245.55447388 342.67849731]
[236.19999695 354.40429688]
[222.10168457 349.28204346]
[222.45504761 334.28720093]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 15]
[2 14]
[3 13]
[4 12]
[5 11]
[16 158]
[17 157]
[18 156]
[19 155]
[20 154]
[21 153]
[23 152]
[24 151]
[26 150]
[27 149]
[28 148]
[29 147]
[30 146]
[31 145]
[36 91]
[37 90]
[38 89]
[39 88]
[41 86]
[42 85]
[43 84]
[47 77]
[48 76]
[49 75]
[51 73]
[52 72]
[53 71]
[54 70]
[58 67]
[59 66]
[93 142]
[94 141]
[95 140]
[96 139]
[97 138]
[99 136]
[101 134]
[102 133]
[103 132]
[106 129]
[107 128]
[108 127]
[110 125]
[111 124]
[113 122]
[114 121]
[161 199]
[162 198]
[163 197]
[164 196]
[165 195]
[168 194]
[169 193]
[174 187]
[175 186]
[176 185]
[177 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
