%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:25:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGCAGGCGGGGGAGCGGGCGGGAAGCAGUGGGAGCGCGCGUGCGCGCGGCCGUGCAGCCUGGGCAGUGGGUCCUGCCUGUGACGCGCGGCGGCGGUCGGUCCUGCCUGUAACGGCGGCGGCGGCUGCUGCUCCGGACACCUGCGGCGGCGGCGGCGACCCCGCGGCGGGCGCGGAG\
) } def
/len { sequence length } bind def

/coor [
[91.15538025 104.89431000]
[77.42287445 112.75108337]
[64.62892914 105.12452698]
[53.59077454 116.11528778]
[38.37735748 116.03363037]
[27.96737289 105.44269562]
[12.96793842 105.57287598]
[-2.03149676 105.70304871]
[-17.03093147 105.83322144]
[-32.03036880 105.96339417]
[-47.02980042 106.09357452]
[-62.02923584 106.22374725]
[-77.02867126 106.35391998]
[-92.02810669 106.48409271]
[-107.02754211 106.61427307]
[-119.04454803 119.30915833]
[-136.18740845 119.39707947]
[-147.86485291 107.31123352]
[-162.85977173 107.70172119]
[-172.23992920 121.76136017]
[-187.99224854 127.41297913]
[-203.85316467 122.61938477]
[-213.64027405 109.45561981]
[-228.62615967 110.10630035]
[-243.61204529 110.75698090]
[-258.59793091 111.40765381]
[-269.24798584 122.77489471]
[-284.45504761 123.22129059]
[-295.22634888 112.99803925]
[-310.21221924 113.64871979]
[-325.19812012 114.29940033]
[-333.66250610 117.80606842]
[-340.44927979 114.82903290]
[-355.44418335 115.21952057]
[-370.43911743 115.61000824]
[-381.28485107 126.79068756]
[-396.49737549 126.97309113]
[-407.08963013 116.56443024]
[-422.08453369 116.95491028]
[-437.07943726 117.34539795]
[-452.07437134 117.73588562]
[-467.06927490 118.12637329]
[-480.76281738 127.14960480]
[-495.30072021 119.56136322]
[-495.72763062 103.16777039]
[-481.60440063 94.83315277]
[-467.45977783 103.13145447]
[-452.46484375 102.74096680]
[-437.46994019 102.35047913]
[-422.47500610 101.95999908]
[-407.48010254 101.56951141]
[-397.44396973 90.62366486]
[-382.24255371 90.01405334]
[-370.82958984 100.61508942]
[-355.83468628 100.22460175]
[-340.83975220 99.83412170]
[-325.84878540 99.31351471]
[-310.86291504 98.66284180]
[-295.87704468 98.01216125]
[-286.03237915 86.89377594]
[-270.84384155 86.02041626]
[-259.24859619 96.42177582]
[-244.26272583 95.77109528]
[-229.27684021 95.12042236]
[-214.29095459 94.46974182]
[-207.97444153 82.69087982]
[-196.56742859 75.51955414]
[-182.99822998 74.92324829]
[-170.81327820 81.16504669]
[-163.25025940 92.70680237]
[-148.25534058 92.31631470]
[-140.76705933 81.81114960]
[-128.40823364 77.48036957]
[-115.62595367 81.12014008]
[-107.15771484 91.61483765]
[-92.15827942 91.48466492]
[-77.15884399 91.35448456]
[-62.15941238 91.22431183]
[-47.15997696 91.09413910]
[-32.16054153 90.96395874]
[-17.16110611 90.83378601]
[-2.16167164 90.70361328]
[12.83776379 90.57344055]
[27.83719826 90.44326019]
[38.06179810 79.67325592]
[53.27150726 79.32756042]
[64.49875641 90.12509155]
[77.15840149 82.27762604]
[91.02519989 89.89487457]
[104.74246979 83.82555389]
[114.92686462 72.81292725]
[125.11126709 61.80029678]
[135.29566956 50.78767014]
[145.48007202 39.77504349]
[155.66447449 28.76241302]
[165.84887695 17.74978447]
[176.03327942 6.73715734]
[179.72250366 -8.64790535]
[194.04434204 -12.73863506]
[204.22874451 -23.75126266]
[214.41314697 -34.76389313]
[224.59754944 -45.77651978]
[225.75808716 -50.92101669]
[228.51289368 -54.71265411]
[232.07240295 -56.76898956]
[235.61018372 -57.07966232]
[246.35394287 -67.54729462]
[257.09771729 -78.01493073]
[267.84149170 -88.48256683]
[278.58526611 -98.95020294]
[278.54034424 -114.75442505]
[289.74298096 -125.90238953]
[305.54678345 -125.78020477]
[316.57568359 -114.46035767]
[316.28640747 -98.65871429]
[304.85058594 -87.75011444]
[289.05288696 -88.20642853]
[278.30914307 -77.73879242]
[267.56536865 -67.27115631]
[256.82159424 -56.80352402]
[246.07780457 -46.33589172]
[235.61018372 -35.59211731]
[225.42578125 -24.57949066]
[215.24137878 -13.56686306]
[205.05697632 -2.55423427]
[202.09620667 12.04313087]
[187.04589844 16.92155838]
[176.86149597 27.93418694]
[166.67709351 38.94681549]
[156.49269104 49.95944214]
[146.30830383 60.97207260]
[136.12390137 71.98470306]
[125.93949890 82.99732971]
[115.75509644 94.00995636]
[116.40577698 108.99583435]
[127.50637054 119.08428192]
[138.60696411 129.17272949]
[149.70756531 139.26116943]
[161.27696228 136.38876343]
[172.67654419 139.43894958]
[181.09252930 147.53872681]
[184.50593567 158.58383179]
[182.17607117 169.78456116]
[192.91984558 180.25219727]
[203.66360474 190.71983337]
[214.40737915 201.18746948]
[225.15115356 211.65510559]
[240.43496704 215.74359131]
[244.15147400 230.16706848]
[254.89524841 240.63470459]
[265.63900757 251.10234070]
[276.38278198 261.56997681]
[284.73724365 265.33108521]
[287.22021484 272.31375122]
[297.78070068 282.96627808]
[313.58392334 282.78421021]
[324.82870483 293.88964844]
[324.84365845 309.69393921]
[313.61996460 320.82064819]
[297.81640625 320.66854858]
[286.80895996 309.32781982]
[287.12817383 293.52676392]
[276.56768799 282.87423706]
[265.91516113 272.31375122]
[255.17138672 261.84609985]
[244.42761230 251.37847900]
[233.68383789 240.91084290]
[219.16850281 237.57107544]
[214.68351746 222.39888000]
[203.93974304 211.93124390]
[193.19598389 201.46360779]
[182.45220947 190.99597168]
[171.70843506 180.52833557]
[153.47215271 181.88481140]
[139.78251648 169.28509521]
[139.61912537 150.36177063]
[128.51852417 140.27333069]
[117.41792297 130.18487549]
[106.31732941 120.09643555]
[97.36199951 117.21250153]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 89]
[3 87]
[6 84]
[7 83]
[8 82]
[9 81]
[10 80]
[11 79]
[12 78]
[13 77]
[14 76]
[15 75]
[18 71]
[19 70]
[23 65]
[24 64]
[25 63]
[26 62]
[29 59]
[30 58]
[31 57]
[33 56]
[34 55]
[35 54]
[38 51]
[39 50]
[40 49]
[41 48]
[42 47]
[90 134]
[91 133]
[92 132]
[93 131]
[94 130]
[95 129]
[96 128]
[97 127]
[99 125]
[100 124]
[101 123]
[102 122]
[106 121]
[107 120]
[108 119]
[109 118]
[110 117]
[135 179]
[136 178]
[137 177]
[138 176]
[143 173]
[144 172]
[145 171]
[146 170]
[147 169]
[149 167]
[150 166]
[151 165]
[152 164]
[154 163]
[155 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
