%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:37:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGGGCCCGAGUUUCUGCGAAGCCGCGACCUCGGCGUCCGGACGCGGGGAACACCGGGCUGAGGGAGUCUGCAGUCGGCUCCGGGAAGCCGCGCGGCGACGGGGGAGGCCUUCACUAAAGGGGAAAAGGAAGAGGGGGUCGGCCAGUAUCCCCGAAAGAGGGCUAGGGCGC\
) } def
/len { sequence length } bind def

/coor [
[109.57035828 219.84996033]
[94.67810822 225.81658936]
[80.79977417 217.76850891]
[78.58162689 201.87954712]
[89.72522736 190.33833313]
[82.92646790 177.08593750]
[91.63938904 163.88003540]
[92.72175598 148.91914368]
[93.80412292 133.95823669]
[94.88648987 118.99734497]
[84.01091766 129.32797241]
[69.29055786 126.44508362]
[63.11534119 112.77516174]
[70.68286133 99.82399750]
[85.62371826 98.49243927]
[73.68231964 89.41482544]
[61.74092484 80.33721161]
[49.79952621 71.25960541]
[34.13088989 69.06770325]
[28.68121338 55.20587540]
[16.73981667 46.12826538]
[1.28371096 48.06386185]
[-10.69724846 38.68775940]
[-12.44729519 23.94079781]
[-24.38869095 14.86318493]
[-36.33008575 5.78557158]
[-48.27148438 -3.29204178]
[-60.21287918 -12.36965466]
[-72.15427399 -21.44726753]
[-76.55751038 -21.84166145]
[-80.22397614 -23.47055817]
[-82.85271454 -25.94440842]
[-84.30277252 -28.81552887]
[-84.59815979 -31.63622475]
[-95.85340881 -41.55184174]
[-107.10865784 -51.46745300]
[-118.36390686 -61.38306808]
[-136.48237610 -64.57895660]
[-141.46620178 -81.39001465]
[-152.89862061 -91.10081482]
[-164.33105469 -100.81160736]
[-175.76348877 -110.52239990]
[-187.19592285 -120.23319244]
[-198.62835693 -129.94398499]
[-207.22683716 -133.13023376]
[-210.17747498 -139.93478394]
[-221.43272400 -149.85038757]
[-236.90234375 -153.16719055]
[-241.33758545 -167.38612366]
[-252.59283447 -177.30172729]
[-263.22875977 -172.86976624]
[-274.69900513 -172.74426270]
[-285.33355713 -176.90496826]
[-293.59848022 -184.71035767]
[-298.31716919 -194.99630737]
[-298.83779907 -206.24948120]
[-295.12301636 -216.83009338]
[-305.82492065 -227.34051514]
[-316.52685547 -237.85093689]
[-327.22875977 -248.36134338]
[-337.93069458 -258.87176514]
[-348.63259888 -269.38220215]
[-364.62341309 -270.67575073]
[-373.46228027 -284.06433105]
[-368.36880493 -299.27734375]
[-353.25021362 -304.64468384]
[-339.70425415 -296.04895020]
[-338.12219238 -280.08410645]
[-327.42025757 -269.57369995]
[-316.71835327 -259.06326294]
[-306.01641846 -248.55285645]
[-295.31451416 -238.04243469]
[-284.61257935 -227.53201294]
[-266.43020630 -231.70317078]
[-249.25422668 -224.04931641]
[-240.05294800 -207.47897339]
[-242.67721558 -188.55697632]
[-231.42196655 -178.64137268]
[-216.75738525 -176.03379822]
[-211.51710510 -161.10563660]
[-200.26185608 -151.19001770]
[-188.91755676 -141.37641907]
[-177.48512268 -131.66561890]
[-166.05268860 -121.95483398]
[-154.62026978 -112.24403381]
[-143.18783569 -102.53324127]
[-131.75540161 -92.82244873]
[-119.65538788 -93.48645020]
[-110.04761505 -85.45973206]
[-108.44828796 -72.63831329]
[-97.19304657 -62.72270203]
[-85.93779755 -52.80708694]
[-74.68254852 -42.89147186]
[-63.07666016 -33.38866425]
[-51.13526535 -24.31105042]
[-39.19387054 -15.23343754]
[-27.25247383 -6.15582466]
[-15.31107712 2.92178869]
[-3.36968160 11.99940205]
[11.30794144 9.74042797]
[23.54752922 18.77630997]
[25.81743050 34.18686676]
[37.75882721 43.26448059]
[52.57333374 44.80708694]
[58.87714005 59.31820679]
[70.81853485 68.39582062]
[82.75993347 77.47343445]
[94.70133209 86.55104828]
[108.19902802 93.09413910]
[122.72237396 96.84546661]
[137.24571228 100.59679413]
[151.76905823 104.34812927]
[166.29240417 108.09945679]
[180.81575012 111.85078430]
[195.33909607 115.60211945]
[203.49896240 105.54311371]
[214.82189941 99.35055542]
[227.60069275 97.91766357]
[239.92390442 101.42307281]
[249.96173096 109.30940247]
[256.23773193 120.37155914]
[257.84597778 132.94075012]
[272.22442627 137.21397400]
[286.60287476 141.48718262]
[300.98132324 145.76039124]
[315.35974121 150.03359985]
[328.62960815 139.57180786]
[345.35403442 139.07296753]
[358.95135498 148.53565979]
[364.18801880 164.07705688]
[378.64126587 168.08998108]
[392.28320312 160.57096863]
[406.88366699 164.84654236]
[413.96783447 177.89836121]
[428.42108154 181.91128540]
[443.03808594 175.29896545]
[457.25518799 182.73225403]
[460.16622925 198.50900269]
[449.53811646 210.52661133]
[433.52383423 209.56620789]
[424.40817261 196.36453247]
[409.95492554 192.35160828]
[397.15588379 199.88288879]
[382.44107056 196.01910400]
[374.62835693 182.54324341]
[360.17507935 178.53031921]
[350.52365112 187.78247070]
[337.45388794 191.07536316]
[324.36193848 187.44281006]
[314.70458984 177.73271179]
[311.08654785 164.41204834]
[296.70809937 160.13883972]
[282.32965088 155.86561584]
[267.95120239 151.59240723]
[253.57276917 147.31919861]
[241.54034424 159.59437561]
[224.86802673 164.12803650]
[208.10482788 159.59013367]
[195.87170410 147.13859558]
[191.58776855 130.12545776]
[177.06442261 126.37413025]
[162.54107666 122.62280273]
[148.01773071 118.87147522]
[133.49438477 115.12014008]
[118.97104645 111.36881256]
[104.44770050 107.61748505]
[107.36877441 113.74160004]
[109.84738922 120.07971191]
[108.76502228 135.04060364]
[107.68265533 150.00151062]
[106.60028839 164.96240234]
[113.32163239 179.28491211]
[104.68612671 191.42070007]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 173]
[7 171]
[8 170]
[9 169]
[10 168]
[15 108]
[16 107]
[17 106]
[18 105]
[20 103]
[21 102]
[24 99]
[25 98]
[26 97]
[27 96]
[28 95]
[29 94]
[34 93]
[35 92]
[36 91]
[37 90]
[39 87]
[40 86]
[41 85]
[42 84]
[43 83]
[44 82]
[46 81]
[47 80]
[49 78]
[50 77]
[57 73]
[58 72]
[59 71]
[60 70]
[61 69]
[62 68]
[109 166]
[110 165]
[111 164]
[112 163]
[113 162]
[114 161]
[115 160]
[122 155]
[123 154]
[124 153]
[125 152]
[126 151]
[130 146]
[131 145]
[134 142]
[135 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
