%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:38:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGACUCCUAGUCUUUCAACGGCAUUGUUAACAGUGGGAAACGAGAGCCCCAGCUGCUCCAGGUUGGGGCCGUGGGGGCUCCCUAAGGAGGGGACACCAGGGCCCCAAUGUUUCACAGAGGGGCGGGGGGCAGCGACCCUGGGCAGCAUGGCCUCAGGCUGAAGCCCGAUCUGGCAUUUCCUUGUGCUCAUA\
) } def
/len { sequence length } bind def

/coor [
[50.50051498 170.30770874]
[49.65079498 155.33178711]
[48.80107880 140.35588074]
[41.31312180 140.78074646]
[37.00245285 155.14799500]
[32.69178772 169.51525879]
[28.38112259 183.88252258]
[29.62059593 200.79109192]
[13.71593189 206.66288757]
[3.67075896 193.00526428]
[14.01386166 179.57185364]
[18.32452774 165.20458984]
[22.63519478 150.83734131]
[26.94586182 136.47007751]
[21.57732773 122.46369171]
[21.87497520 107.46664429]
[27.79503822 93.68430328]
[38.46694565 83.14340973]
[52.32136154 77.39404297]
[67.32093811 77.28166962]
[81.25994110 82.82280731]
[92.08688354 93.20019531]
[87.77622223 78.83293152]
[83.46555328 64.46567535]
[69.83114624 56.93302536]
[65.66418457 42.30117416]
[72.92944336 29.34927368]
[68.61877441 14.98201370]
[64.30810547 0.61475360]
[59.99744034 -13.75250626]
[46.36303711 -21.28515434]
[42.19607544 -35.91700363]
[49.46133041 -48.86890411]
[36.93852234 -53.85126495]
[29.68152809 -64.97650146]
[30.15472031 -78.05613708]
[37.96103668 -88.31791687]
[33.88358688 -102.75309753]
[29.80613518 -117.18827820]
[20.00727272 -121.95082092]
[14.56604767 -131.13517761]
[15.07527828 -141.57818604]
[21.12478828 -149.83485413]
[17.51691437 -164.39450073]
[5.25083923 -169.97911072]
[-1.45732820 -181.44363403]
[-0.34951857 -194.48486328]
[7.94592381 -204.35543823]
[4.57428741 -218.97160339]
[1.20265162 -233.58776855]
[-2.16898441 -248.20391846]
[-5.54062033 -262.82006836]
[-9.77670765 -267.92614746]
[-10.65531158 -273.55902100]
[-8.77664852 -277.96398926]
[-11.67321777 -292.68164062]
[-14.56978607 -307.39932251]
[-17.46635628 -322.11700439]
[-20.36292458 -336.83468628]
[-23.25949287 -351.55233765]
[-26.15606308 -366.27001953]
[-29.99922943 -380.76931763]
[-41.72607040 -391.38967896]
[-38.44140244 -405.91760254]
[-43.21504593 -420.13772583]
[-47.98868942 -434.35787964]
[-52.76233673 -448.57800293]
[-57.53598022 -462.79815674]
[-62.30962372 -477.01828003]
[-67.08326721 -491.23840332]
[-71.85691833 -505.45855713]
[-76.63056183 -519.67871094]
[-88.35739899 -530.29907227]
[-85.07273102 -544.82696533]
[-89.84637451 -559.04711914]
[-94.62001801 -573.26721191]
[-105.80715179 -579.70550537]
[-109.48562622 -591.65875244]
[-104.20288849 -602.55078125]
[-109.79200745 -609.79412842]
[-108.70142365 -617.11474609]
[-113.01209259 -631.48199463]
[-117.32276154 -645.84924316]
[-121.63342285 -660.21649170]
[-125.94409180 -674.58380127]
[-139.33126831 -683.42474365]
[-140.62231445 -699.41577148]
[-128.82684326 -710.28991699]
[-112.99333191 -707.70544434]
[-105.26789856 -693.64495850]
[-111.57683563 -678.89447021]
[-107.26616669 -664.52716064]
[-102.95549774 -650.15991211]
[-98.64483643 -635.79266357]
[-94.33416748 -621.42541504]
[-89.90731049 -607.09350586]
[-76.32418823 -595.99157715]
[-80.39988708 -578.04089355]
[-75.62623596 -563.82073975]
[-70.85259247 -549.60058594]
[-59.46719742 -539.99737549]
[-62.41042328 -524.45233154]
[-57.63677597 -510.23220825]
[-52.86313248 -496.01205444]
[-48.08948898 -481.79193115]
[-43.31584167 -467.57177734]
[-38.54219818 -453.35165405]
[-33.76855469 -439.13150024]
[-28.99490929 -424.91137695]
[-24.22126389 -410.69122314]
[-12.83586693 -401.08801270]
[-15.77909088 -385.54296875]
[-9.90147018 -399.34347534]
[2.90056324 -407.16061401]
[17.86193466 -406.08480835]
[29.41383362 -396.51644897]
[33.25650024 -382.01699829]
[27.95964813 -367.98333740]
[15.49482822 -359.63897705]
[0.50160444 -360.08978271]
[-11.43838978 -369.16659546]
[-8.54182053 -354.44891357]
[-5.64525175 -339.73123169]
[-2.74868274 -325.01358032]
[0.14788625 -310.29589844]
[3.04445529 -295.57821655]
[5.94102430 -280.86056519]
[9.07553768 -266.19171143]
[12.44717312 -251.57556152]
[15.81880951 -236.95939636]
[19.19044495 -222.34324646]
[22.56208229 -207.72708130]
[37.18719101 -199.43678284]
[41.38050461 -182.80836487]
[32.07656097 -168.00236511]
[35.68443298 -153.44271851]
[50.08336258 -140.54934692]
[44.24131393 -121.26573181]
[48.31876373 -106.83055115]
[52.39621735 -92.39537048]
[67.40666199 -84.82508087]
[72.40254211 -68.41992188]
[63.82859039 -53.17956924]
[77.02398682 -46.36656189]
[81.60028076 -31.85752487]
[74.36470032 -18.06317329]
[78.67536926 -3.69591260]
[82.98603058 10.67134762]
[87.29669952 25.03860664]
[100.49209595 31.85161591]
[105.06838989 46.36065292]
[97.83281708 60.15500641]
[102.14347839 74.52226257]
[106.45414734 88.88952637]
[115.60161591 100.77748871]
[128.38487244 108.62532043]
[144.19367981 109.25156403]
[150.99200439 122.50418091]
[163.77525330 130.35202026]
[176.55851746 138.19984436]
[192.95736694 138.10127258]
[201.00752258 152.38858032]
[192.42767334 166.36419678]
[176.04402161 165.65122986]
[168.71067810 150.98309326]
[155.92742920 143.13526917]
[143.14418030 135.28742981]
[128.24971008 135.22253418]
[120.53704071 121.40857697]
[107.75378418 113.56074524]
[102.07843781 118.46385193]
[104.89555359 133.19694519]
[90.72775269 128.27006531]
[85.05240631 133.17317200]
[90.96054077 146.96061707]
[96.86867523 160.74807739]
[102.77680969 174.53553772]
[108.68495178 188.32298279]
[123.44982910 193.95980835]
[129.82800293 208.41990662]
[124.03538513 223.12437439]
[109.50865936 229.34930420]
[94.86626434 223.40155029]
[88.79526520 208.80981445]
[94.89749146 194.23112488]
[88.98935699 180.44366455]
[83.08122253 166.65621948]
[77.17308044 152.86875916]
[71.26494598 139.08129883]
[63.77698898 139.50616455]
[64.62670898 154.48207092]
[65.47642517 169.45799255]
[66.32591248 184.43391418]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 14]
[5 13]
[6 12]
[7 11]
[22 154]
[23 153]
[24 152]
[27 149]
[28 148]
[29 147]
[30 146]
[33 143]
[37 140]
[38 139]
[39 138]
[43 136]
[44 135]
[48 132]
[49 131]
[50 130]
[51 129]
[52 128]
[55 127]
[56 126]
[57 125]
[58 124]
[59 123]
[60 122]
[61 121]
[62 112]
[64 110]
[65 109]
[66 108]
[67 107]
[68 106]
[69 105]
[70 104]
[71 103]
[72 102]
[74 100]
[75 99]
[76 98]
[79 96]
[81 95]
[82 94]
[83 93]
[84 92]
[85 91]
[155 170]
[156 169]
[158 167]
[159 166]
[160 165]
[174 189]
[175 188]
[176 187]
[177 186]
[178 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
