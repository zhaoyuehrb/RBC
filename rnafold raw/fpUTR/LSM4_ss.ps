%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:57:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGCCCUACUCCGCGUGGAUUGGUUGACCGCCCUUCGAGCCCGGUGCUGACUGGCUUGCGUCUCUGCCACUUUCUUUCAGCUUAGUGGCGCGCGGCGCGGCGACGACCGCCGGGAGCGUGUGCAGCGGCGGCGGCGGAAGUGGCCGGCGAGCCCGGUCCCCGCCGGCACC\
) } def
/len { sequence length } bind def

/coor [
[172.08810425 299.28012085]
[166.72964478 313.29034424]
[161.49935913 327.34893799]
[156.39767456 341.45471191]
[151.29598999 355.56048584]
[160.11027527 368.33108521]
[159.70115662 383.84277344]
[150.22596741 396.13098145]
[135.32809448 400.47064209]
[120.73606873 395.19311523]
[112.06082916 382.32766724]
[112.63819122 366.82131958]
[122.24613190 354.63662720]
[137.19021606 350.45880127]
[142.29190063 336.35302734]
[147.39358521 322.24725342]
[146.70904541 314.86044312]
[152.71940613 307.93188477]
[158.07786560 293.92166138]
[153.52868652 286.20285034]
[153.60862732 276.90347290]
[158.64382935 268.68310547]
[167.49430847 264.07098389]
[177.79595947 264.69271851]
[172.18251038 250.78268433]
[166.56904602 236.87265015]
[160.95559692 222.96261597]
[155.21534729 209.10441589]
[149.34877014 195.29922485]
[143.35636902 181.54818726]
[137.23864746 167.85243225]
[131.12091064 154.15669250]
[124.87835693 140.51739502]
[118.51151276 126.93566895]
[112.14466095 113.35395050]
[101.50711823 120.83493042]
[86.72789764 119.66927338]
[74.71073151 108.14023590]
[59.96024323 105.41567993]
[45.20975876 102.69113159]
[30.45927429 99.96657562]
[15.70878887 97.24202728]
[6.66359186 98.76307678]
[0.71485162 94.33065796]
[-13.98341179 91.33715057]
[-28.68167496 88.34365082]
[-44.05437851 94.05435181]
[-56.51206970 83.38954926]
[-53.23934174 67.32028198]
[-37.60290146 62.37723541]
[-25.68817329 73.64538574]
[-10.98991013 76.63889313]
[3.70835352 79.63239288]
[18.43334198 82.49153900]
[33.18382645 85.21609497]
[47.93431091 87.94064331]
[62.68479919 90.66519928]
[77.43527985 93.38974762]
[87.64743042 82.40284729]
[83.85343170 67.89059448]
[80.05943298 53.37833786]
[76.26543427 38.86608505]
[72.47142792 24.35382843]
[61.49519348 12.95940781]
[65.76175690 -1.31104183]
[61.83538055 -15.78804398]
[57.77695847 -30.22858429]
[53.71854019 -44.66912460]
[49.66011810 -59.10966492]
[45.60169601 -73.55020905]
[41.54327774 -87.99074554]
[37.48485565 -102.43128967]
[22.44551468 -105.03530884]
[10.03036976 -113.91376495]
[2.70445967 -127.30382538]
[1.92234874 -142.54689026]
[7.83932543 -156.61643982]
[19.28057098 -166.71894836]
[33.97441483 -170.84855652]
[49.00338745 -168.18533325]
[61.38347244 -159.25805664]
[68.65659332 -145.83924866]
[69.37866974 -130.59321594]
[63.40633774 -116.54708099]
[51.92539597 -106.48970795]
[55.98381805 -92.04917145]
[60.04224014 -77.60862732]
[64.10066223 -63.16808701]
[68.15908051 -48.72754669]
[72.21749878 -34.28700638]
[76.27592468 -19.84646416]
[81.13074493 -14.23713970]
[80.27400970 -5.10504246]
[90.97887421 5.25136423]
[86.98368835 20.55982780]
[90.77768707 35.07208252]
[94.57168579 49.58433914]
[98.36568451 64.09659576]
[102.15969086 78.60884857]
[116.73881531 82.13716125]
[126.74859619 70.96558380]
[136.75837708 59.79399872]
[146.76815796 48.62241745]
[147.32876587 32.58916092]
[160.29893494 23.14699745]
[175.72904968 27.53914452]
[181.78245544 42.39632416]
[173.81550598 56.32138062]
[157.93974304 58.63219833]
[147.92996216 69.80377960]
[137.92018127 80.97536469]
[127.91040039 92.14694977]
[125.72637939 106.98709869]
[132.09323120 120.56881714]
[138.46008301 134.15054321]
[144.96017456 140.62187195]
[144.81665039 148.03897095]
[150.93438721 161.73471069]
[157.05210876 175.43045044]
[163.43292236 182.01942444]
[163.15396118 189.43264771]
[169.02053833 203.23783875]
[175.27993774 209.94224548]
[174.86563110 217.34915161]
[180.47908020 231.25918579]
[186.09254456 245.16923523]
[191.70599365 259.07925415]
[200.20960999 271.43597412]
[211.19651794 281.64813232]
[226.57221985 285.37615967]
[230.62680054 299.70828247]
[246.00251770 303.43630981]
[250.05709839 317.76843262]
[261.04400635 327.98059082]
[272.03088379 338.19274902]
[283.01779175 348.40487671]
[294.00469971 358.61703491]
[304.99160767 368.82919312]
[311.39730835 370.69216919]
[315.29162598 374.89477539]
[316.18460083 379.62060547]
[324.49816895 383.49539185]
[326.88583374 390.51910400]
[337.29696655 401.31765747]
[347.70806885 412.11621094]
[358.11917114 422.91476440]
[368.53030396 433.71331787]
[378.94140625 444.51187134]
[394.89096069 446.24133301]
[403.36117554 459.86614990]
[397.85443115 474.93447876]
[382.59500122 479.88723755]
[369.28866577 470.92507935]
[368.14285278 454.92300415]
[357.73175049 444.12445068]
[347.32061768 433.32589722]
[336.90951538 422.52734375]
[326.49841309 411.72879028]
[316.08728027 400.93023682]
[305.57800293 390.22720337]
[294.77944946 379.81610107]
[283.79254150 369.60394287]
[272.80563354 359.39178467]
[261.81875610 349.17962646]
[250.83184814 338.96749878]
[239.84494019 328.75534058]
[225.25509644 325.75775146]
[220.41465759 310.69519043]
[205.82479858 307.69760132]
[200.98435974 292.63504028]
[189.99746704 282.42288208]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 19]
[2 18]
[3 16]
[4 15]
[5 14]
[24 127]
[25 126]
[26 125]
[27 124]
[28 122]
[29 121]
[30 119]
[31 118]
[32 117]
[33 115]
[34 114]
[35 113]
[38 58]
[39 57]
[40 56]
[41 55]
[42 54]
[44 53]
[45 52]
[46 51]
[59 99]
[60 98]
[61 97]
[62 96]
[63 95]
[65 93]
[66 91]
[67 90]
[68 89]
[69 88]
[70 87]
[71 86]
[72 85]
[100 112]
[101 111]
[102 110]
[103 109]
[128 171]
[129 170]
[131 168]
[133 166]
[134 165]
[135 164]
[136 163]
[137 162]
[138 161]
[141 160]
[143 159]
[144 158]
[145 157]
[146 156]
[147 155]
[148 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
