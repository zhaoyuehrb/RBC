%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:46:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGACGUCAAACGCCGUGUGCUCACCCACGUGUGGUGCCCCUCUCCCGGUGUAGGCGCUGGAGCUGAGGACGCCUUUCCUGCGGGCGUAGUUGCUGGCUGCUCGGGCACUGGGACCUCGGCGGCUUGGGGACGCUGGCCGCGAAGUAGGGAGCGCAGGUGGCCGCUCGGGGUGAGGGCCCUGGGUC\
) } def
/len { sequence length } bind def

/coor [
[196.04223633 535.08081055]
[189.53561401 531.85180664]
[183.76974487 527.41796875]
[178.96519470 521.94421387]
[175.30668640 515.63531494]
[172.93595886 508.72814941]
[171.94633484 501.48303223]
[172.37899780 494.17370605]
[174.22132874 487.07711792]
[177.40722656 480.46286011]
[181.81948853 474.58297729]
[187.29406738 469.66229248]
[193.62623596 465.88989258]
[190.14894104 451.29852295]
[186.67163086 436.70715332]
[183.19433594 422.11575317]
[178.57615662 416.32644653]
[179.78298950 407.25152588]
[176.55000305 392.60409546]
[173.31700134 377.95663452]
[170.08399963 363.30917358]
[166.85099792 348.66174316]
[163.61801147 334.01428223]
[160.38500977 319.36685181]
[155.86421204 313.50115967]
[157.22253418 304.44769287]
[154.23474121 289.74826050]
[144.11738586 278.81716919]
[148.95085144 263.75238037]
[145.96305847 249.05296326]
[133.64498901 236.56556702]
[139.60955811 219.15388489]
[136.37657166 204.50642395]
[133.14356995 189.85897827]
[129.91056824 175.21153259]
[126.67757416 160.56408691]
[123.44457245 145.91664124]
[119.96726990 131.32525635]
[116.24663544 116.79402161]
[91.69889832 124.55072021]
[71.85324097 104.24987030]
[57.45444870 100.04575348]
[43.05564880 95.84162903]
[28.65685081 91.63751221]
[10.88565826 96.42579651]
[-0.75109154 83.30117035]
[-15.25073528 79.45925140]
[-29.78197289 75.73861694]
[-44.31320953 72.01798248]
[-58.84444809 68.29734039]
[-73.37568665 64.57670593]
[-87.90692139 60.85607147]
[-103.54456329 65.79533386]
[-115.45655823 54.52429199]
[-111.38887787 38.63763046]
[-95.52599335 34.47818375]
[-84.18628693 46.32483292]
[-69.65505219 50.04546738]
[-55.12381363 53.76610565]
[-40.59257507 57.48674011]
[-26.06133652 61.20737839]
[-11.53009892 64.92801666]
[-4.25594378 63.53860474]
[3.21183944 68.83412933]
[13.88566494 63.11592865]
[25.98010635 66.31386566]
[32.86096954 77.23871613]
[47.25976944 81.44283295]
[61.65856552 85.64694977]
[76.05736542 89.85107422]
[85.64573669 78.31577301]
[78.88058472 64.92799377]
[72.11543274 51.54020691]
[65.35028076 38.15242386]
[58.58512878 24.76464272]
[51.81997681 11.37686062]
[36.55475616 7.98466206]
[27.08246040 -4.45759010]
[27.87562180 -20.07504463]
[38.55973053 -31.49361801]
[54.09008026 -33.32180786]
[67.13371277 -24.69640160]
[71.53182220 -9.69004726]
[65.20776367 4.61170864]
[71.97291565 17.99949074]
[78.73806763 31.38727379]
[85.50321198 44.77505493]
[92.26836395 58.16283798]
[99.03351593 71.55062103]
[113.38878632 77.81021881]
[121.02968597 89.81449127]
[129.51889038 77.44786072]
[138.00810242 65.08123779]
[139.43931580 49.32490158]
[153.02122498 43.21091461]
[161.51043701 30.84428978]
[169.99964905 18.47766685]
[178.38522339 6.04054546]
[186.66661072 -6.46620417]
[194.94798279 -18.97295380]
[203.22935486 -31.47970390]
[211.51074219 -43.98645401]
[219.79211426 -56.49320221]
[220.95983887 -72.27125549]
[234.43769836 -78.61134338]
[242.71907043 -91.11809540]
[251.00045776 -103.62484741]
[245.44300842 -118.11257935]
[249.49513245 -133.09123230]
[261.59869385 -142.80119324]
[277.09963989 -143.50878906]
[290.03750610 -134.94194031]
[295.43746948 -120.39477539]
[291.22308350 -105.46096039]
[279.01489258 -95.88287354]
[263.50720215 -95.34346771]
[255.22583008 -82.83671570]
[246.94444275 -70.32997131]
[246.36904907 -55.44647980]
[232.29885864 -48.21182632]
[224.01748657 -35.70507812]
[215.73611450 -23.19832611]
[207.45472717 -10.69157696]
[199.17335510 1.81517291]
[190.89198303 14.32192326]
[189.81840515 21.64935303]
[182.36627197 26.96687317]
[173.87705994 39.33349609]
[165.38784790 51.70011902]
[164.56384277 66.57191467]
[150.37472534 73.57044983]
[141.88551331 85.93707275]
[133.39631653 98.30369568]
[130.77787781 113.07338715]
[134.49850464 127.60462189]
[138.86166382 132.61468506]
[139.87249756 138.23255920]
[138.09202576 142.68363953]
[141.32502747 157.33108521]
[144.55801392 171.97853088]
[147.79101562 186.62599182]
[151.02401733 201.27343750]
[154.25700378 215.92088318]
[164.69787598 223.51608276]
[167.08084106 235.79710388]
[160.66247559 246.06517029]
[163.65026855 260.76458740]
[173.98132324 272.74707031]
[168.93415833 286.76046753]
[171.92195129 301.45989990]
[175.03245544 316.13385010]
[178.26545715 330.78128052]
[181.49845886 345.42874146]
[184.73144531 360.07620239]
[187.96444702 374.72363281]
[191.19744873 389.37109375]
[194.43043518 404.01852417]
[197.78570557 418.63845825]
[201.26301575 433.22982788]
[204.74031067 447.82122803]
[208.21762085 462.41259766]
[230.96104431 469.25216675]
[245.06994629 488.21023560]
[245.09124756 511.72451782]
[231.15684509 530.51910400]
[237.24263000 544.22906494]
[243.32839966 557.93902588]
[249.41418457 571.64898682]
[255.49996948 585.35894775]
[261.58575439 599.06890869]
[267.67153931 612.77893066]
[273.75729370 626.48889160]
[279.84307861 640.19885254]
[293.41082764 649.41015625]
[291.94778442 665.74389648]
[276.95901489 672.39733887]
[263.86364746 662.52600098]
[266.13311768 646.28460693]
[260.04733276 632.57464600]
[253.96154785 618.86468506]
[247.87577820 605.15472412]
[241.78999329 591.44476318]
[235.70420837 577.73480225]
[229.61843872 564.02478027]
[223.53265381 550.31481934]
[217.44686890 536.60485840]
[210.26776123 537.49945068]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 161]
[14 160]
[15 159]
[16 158]
[18 157]
[19 156]
[20 155]
[21 154]
[22 153]
[23 152]
[24 151]
[26 150]
[27 149]
[29 147]
[30 146]
[32 143]
[33 142]
[34 141]
[35 140]
[36 139]
[37 138]
[38 135]
[39 134]
[41 70]
[42 69]
[43 68]
[44 67]
[46 64]
[47 62]
[48 61]
[49 60]
[50 59]
[51 58]
[52 57]
[71 89]
[72 88]
[73 87]
[74 86]
[75 85]
[76 84]
[91 133]
[92 132]
[93 131]
[95 129]
[96 128]
[97 127]
[98 125]
[99 124]
[100 123]
[101 122]
[102 121]
[103 120]
[105 118]
[106 117]
[107 116]
[165 186]
[166 185]
[167 184]
[168 183]
[169 182]
[170 181]
[171 180]
[172 179]
[173 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
