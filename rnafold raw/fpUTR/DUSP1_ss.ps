%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:58:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUGCGAAGGACAUUUGGGCUGUGUGUGCGACGCGGGUCGGAGGGGCAGUCGGGGGAACCGCGAAGAAGCCGAGGAGCCCGGAGCCCCGCGUGACGCUCCUCUCUCAGUCCAAAAGCGGCUUUUGGUUCGGCGCAGAGAGACCCGGGGGUCUAGCUUUUCCUCGAAAAGCGCCGCCCUGCCCUUGGCCCCGAGAACAGACAAAGAGCACCGCAGGGCCGAUCACGCUGGGGGCGCUGAGGCCGGCC\
) } def
/len { sequence length } bind def

/coor [
[75.44217682 104.99976349]
[77.25386047 86.56386566]
[62.09420013 91.09101868]
[51.37040710 80.75421906]
[36.73455048 77.46913910]
[22.09869576 74.18406677]
[7.46283913 70.89898682]
[-7.17301655 67.61391449]
[-20.42183304 75.80577850]
[-35.21787643 72.26574707]
[-42.94591522 59.58454514]
[-57.58177185 56.29946899]
[-72.21762848 53.01439285]
[-86.85348511 49.72931671]
[-96.48300934 59.57186890]
[-109.61246490 63.34729767]
[-122.78903961 60.17384338]
[-132.60211182 50.98274231]
[-136.56602478 38.24841309]
[-151.15927124 34.77894592]
[-165.75251770 31.30947685]
[-180.34574890 27.84000969]
[-194.93899536 24.37054062]
[-209.53224182 20.90107346]
[-224.12548828 17.43160629]
[-235.90240479 27.36188698]
[-251.09086609 28.44083786]
[-263.85134888 20.46374130]
[-269.40130615 6.66751480]
[-283.99456787 3.19804716]
[-293.04180908 4.25732136]
[-298.74945068 -0.40834537]
[-313.29779053 -4.06165266]
[-327.84609985 -7.71496010]
[-339.27774048 -1.77682424]
[-351.30813599 -5.10187340]
[-357.64657593 -15.38654995]
[-372.14764404 -19.22311592]
[-386.64868164 -23.05968094]
[-393.07968140 -21.70808029]
[-398.43365479 -23.51883888]
[-401.46484375 -27.18031120]
[-415.86450195 -31.38153076]
[-430.26412964 -35.58275223]
[-444.66378784 -39.78396988]
[-459.06341553 -43.98519135]
[-473.46307373 -48.18641281]
[-487.86270142 -52.38763046]
[-502.26235962 -56.58885193]
[-511.35150146 -55.98732376]
[-516.81652832 -60.93497849]
[-531.16204834 -65.31753540]
[-545.50756836 -69.70009613]
[-559.85302734 -74.08265686]
[-574.27886963 -78.19295502]
[-588.77996826 -82.02951813]
[-603.28100586 -85.86608124]
[-617.78210449 -89.70265198]
[-631.33142090 -82.01801300]
[-645.98284912 -86.11540222]
[-653.22552490 -99.07997131]
[-667.72656250 -102.91653442]
[-682.22766113 -106.75309753]
[-691.29870605 -105.92243195]
[-696.88684082 -110.73062134]
[-691.76055908 -96.63378143]
[-699.47473145 -83.76943207]
[-714.32440186 -81.65131378]
[-725.32769775 -91.84585571]
[-724.34710693 -106.81377411]
[-712.10748291 -115.48571777]
[-726.27685547 -120.40799713]
[-740.38946533 -113.29400635]
[-755.37261963 -118.32208252]
[-762.33697510 -132.50915527]
[-757.15081787 -147.43827820]
[-742.89086914 -154.25227356]
[-728.01745605 -148.90852356]
[-721.35455322 -134.57737732]
[-707.18518066 -129.65509033]
[-692.86761475 -125.18212891]
[-678.39105225 -121.25415802]
[-663.89001465 -117.41759491]
[-649.38891602 -113.58103180]
[-636.68261719 -121.26766205]
[-621.92181396 -117.58341217]
[-613.94549561 -104.20371246]
[-599.44445801 -100.36714935]
[-584.94335938 -96.53057861]
[-570.44232178 -92.69401550]
[-567.24395752 -94.12191772]
[-563.19970703 -94.08633423]
[-558.99816895 -92.20840454]
[-555.47045898 -88.42814636]
[-541.12500000 -84.04559326]
[-526.77947998 -79.66303253]
[-512.43402100 -75.28047180]
[-498.06112671 -70.98849487]
[-483.66149902 -66.78727722]
[-469.26184082 -62.58605576]
[-454.86221313 -58.38483429]
[-440.46255493 -54.18361664]
[-426.06292725 -49.98239517]
[-411.66326904 -45.78117371]
[-397.26364136 -41.57995605]
[-382.81213379 -37.56074142]
[-368.31106567 -33.72417450]
[-353.80999756 -29.88761139]
[-337.13195801 -35.38121033]
[-324.19277954 -22.26327133]
[-309.64447021 -18.60996437]
[-295.09616089 -14.95665646]
[-280.52508545 -11.39519787]
[-265.93185425 -7.92572975]
[-254.76669312 -17.74802399]
[-239.78144836 -19.12871933]
[-226.70370483 -11.32962418]
[-220.65602112 2.83836079]
[-206.06277466 6.30782843]
[-191.46952820 9.77729607]
[-176.87628174 13.24676418]
[-162.28305054 16.71623230]
[-147.68980408 20.18569946]
[-133.09655762 23.65516853]
[-120.97424316 12.56916237]
[-104.46643829 10.88525009]
[-90.06956482 19.46556854]
[-83.56840515 35.09346008]
[-68.93254852 38.37853622]
[-54.29669571 41.66361237]
[-39.66083908 44.94868851]
[-27.25446892 36.78673172]
[-12.36483192 39.90977478]
[-3.88794065 52.97805786]
[10.74791527 56.26313400]
[25.38377190 59.54821014]
[40.01962662 62.83328629]
[54.65548325 66.11836243]
[68.76829529 61.35623169]
[80.53894043 71.92800903]
[94.44196320 66.29721069]
[102.66702271 53.75335312]
[110.89208221 41.20949173]
[119.11714172 28.66563225]
[127.34220123 16.12177086]
[127.73204803 -0.27274126]
[142.25276184 -7.89382553]
[155.96667480 1.09843695]
[154.76608276 17.45357704]
[139.88606262 24.34683037]
[131.66099548 36.89068985]
[123.43594360 49.43455124]
[115.21088409 61.97840881]
[106.98582458 74.52227020]
[118.89752197 85.68859863]
[120.99163055 100.14370728]
[134.96458435 105.59864807]
[148.93754578 111.05358887]
[160.55415344 104.26619720]
[173.76664734 105.38422394]
[183.77943420 113.77738190]
[187.08760071 126.21579742]
[200.99063110 131.84658813]
[214.89366150 137.47738647]
[228.79667664 143.10818481]
[233.01867676 142.36874390]
[236.87440491 142.93962097]
[240.00021362 144.54829407]
[242.15678406 146.83285522]
[243.24739075 149.38972473]
[256.84866333 155.71469116]
[270.44995117 162.03967285]
[284.05120850 168.36465454]
[297.65249634 174.68963623]
[311.25375366 181.01460266]
[320.32968140 181.79081726]
[324.98596191 187.50613403]
[338.50634766 194.00221252]
[352.02676392 200.49829102]
[367.81646729 199.50065613]
[375.93753052 211.98657227]
[389.45791626 218.48265076]
[407.10568237 211.54008484]
[423.92379761 219.58709717]
[429.39886475 237.07400513]
[443.07885742 243.22688293]
[456.75885010 249.37976074]
[470.43884277 255.53262329]
[484.11883545 261.68551636]
[497.79882812 267.83837891]
[511.47882080 273.99124146]
[527.23834229 272.59555054]
[535.67181396 284.87258911]
[551.43133545 283.47686768]
[559.86486816 295.75390625]
[570.41809082 284.87252808]
[584.05792236 278.25961304]
[599.13726807 276.71368408]
[613.83514404 280.42141724]
[626.37683105 288.93508911]
[635.24774170 301.22665405]
[639.37677002 315.81182861]
[638.26519775 330.92938232]
[632.04742432 344.75378418]
[621.47412109 355.61569214]
[607.82208252 362.20346069]
[592.73992920 363.72161865]
[578.04888916 359.98678589]
[565.52294922 351.45001221]
[556.67468262 339.14212036]
[552.57257080 324.54937744]
[553.71197510 309.43389893]
[538.93090820 311.26971436]
[529.51898193 298.55258179]
[514.73791504 300.38836670]
[505.32595825 287.67123413]
[491.64596558 281.51837158]
[477.96597290 275.36547852]
[464.28598022 269.21261597]
[450.60598755 263.05975342]
[436.92599487 256.90686035]
[423.24600220 250.75399780]
[413.73669434 257.00534058]
[402.27261353 257.91058350]
[391.68179321 253.13076782]
[384.63262939 243.74365234]
[382.96182251 232.00303650]
[369.44143677 225.50695801]
[354.61877441 226.96923828]
[345.53067017 214.01867676]
[332.01028442 207.52261353]
[318.48989868 201.02653503]
[304.92880249 194.61587524]
[291.32751465 188.29090881]
[277.72622681 181.96592712]
[264.12496948 175.64094543]
[250.52369690 169.31597900]
[236.92242432 162.99099731]
[223.16589355 157.01119995]
[209.26286316 151.38041687]
[195.35983276 145.74961853]
[181.45680237 140.11882019]
[166.25151062 147.33085632]
[150.22341919 141.18190002]
[143.48260498 125.02655029]
[129.50964355 119.57160950]
[115.53668976 114.11666870]
[102.20555115 122.23951721]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 140]
[4 138]
[5 137]
[6 136]
[7 135]
[8 134]
[11 131]
[12 130]
[13 129]
[14 128]
[19 124]
[20 123]
[21 122]
[22 121]
[23 120]
[24 119]
[25 118]
[29 114]
[30 113]
[32 112]
[33 111]
[34 110]
[37 108]
[38 107]
[39 106]
[42 105]
[43 104]
[44 103]
[45 102]
[46 101]
[47 100]
[48 99]
[49 98]
[51 97]
[52 96]
[53 95]
[54 94]
[55 90]
[56 89]
[57 88]
[58 87]
[61 84]
[62 83]
[63 82]
[65 81]
[71 80]
[72 79]
[141 154]
[142 153]
[143 152]
[144 151]
[145 150]
[156 247]
[157 246]
[158 245]
[162 242]
[163 241]
[164 240]
[165 239]
[170 238]
[171 237]
[172 236]
[173 235]
[174 234]
[175 233]
[177 232]
[178 231]
[179 230]
[181 228]
[182 227]
[185 222]
[186 221]
[187 220]
[188 219]
[189 218]
[190 217]
[191 216]
[193 214]
[195 212]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
