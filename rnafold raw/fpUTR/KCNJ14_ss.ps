%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:34:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAACUCUGGGAAGGAAAGAAAGGCUUAGGACCCAACCAGCAUUCCCCCUGGCACUGCGGGGGCCUGGCCAGCUCAUGGCGUUCCCUGAGCCUGUUCCCCAACUGUGAAAGGGGGUGAUGAUCUUCACCUCCCGGCAUCCUGAGCGGCCAAGCAGGUUGGGGGCGCCUGCCCCCCACUAGGCCAAGUGGAGGGGGUCCCUCCGUCCA\
) } def
/len { sequence length } bind def

/coor [
[89.73288727 183.42732239]
[88.40370941 198.54676819]
[81.69900513 212.16336060]
[70.52552795 222.43554688]
[56.39440155 227.97410583]
[41.21674347 228.03001404]
[27.04520607 222.59567261]
[15.79637623 212.40605164]
[8.99156284 198.83921814]
[7.55106306 183.72998047]
[11.66969109 169.12171936]
[20.79043770 156.99008179]
[33.67979813 148.97579956]
[48.59458542 146.16270447]
[51.29841232 131.40840149]
[54.00223923 116.65410614]
[45.14036560 128.75646973]
[30.72456169 132.90190125]
[16.78760910 127.35561371]
[9.16189480 114.43862915]
[11.03865719 99.55650330]
[21.63250160 88.93715668]
[36.51007462 87.02462006]
[49.44617844 94.62021637]
[41.11262512 82.14817047]
[32.77907181 69.67613220]
[24.44551849 57.20408630]
[16.11196518 44.73204041]
[7.77841187 32.25999451]
[-0.55514157 19.78795242]
[-8.88869476 7.31590796]
[-25.58785820 -0.44164258]
[-26.05420685 -17.98343468]
[-34.57518005 -30.32819176]
[-50.81492233 -27.23251915]
[-67.21580505 -33.34879303]
[-78.67755890 -47.84092712]
[-93.29424286 -44.47156906]
[-107.91092682 -41.10220718]
[-122.52760315 -37.73284912]
[-128.47123718 -23.39921951]
[-141.72236633 -15.32537746]
[-157.18568420 -16.61587906]
[-168.91522217 -26.77450180]
[-172.40074158 -41.89504623]
[-166.30197144 -56.16335678]
[-152.96401978 -64.09297180]
[-137.51560974 -62.63479614]
[-125.89696503 -52.34952927]
[-111.28028107 -55.71889114]
[-96.66359711 -59.08824921]
[-82.04692078 -62.45761108]
[-77.47634888 -76.74431610]
[-87.42318726 -87.97197723]
[-97.37003326 -99.19963837]
[-112.31269073 -104.39843750]
[-114.96098328 -119.05571747]
[-130.49829102 -120.16455078]
[-140.42587280 -131.69268799]
[-139.27301025 -146.49832153]
[-149.21984863 -157.72598267]
[-159.16668701 -168.95364380]
[-169.11352539 -180.18130493]
[-174.06983948 -181.83384705]
[-177.54757690 -184.91511536]
[-179.25001526 -188.62203979]
[-179.24249268 -192.15019226]
[-188.67054749 -203.81687927]
[-198.09861755 -215.48356628]
[-213.56976318 -217.29504395]
[-222.96496582 -229.26103210]
[-221.14265442 -243.99923706]
[-230.57070923 -255.66592407]
[-239.99877930 -267.33261108]
[-249.42683411 -278.99929810]
[-258.85491943 -290.66598511]
[-273.54675293 -296.53631592]
[-275.52841187 -311.29849243]
[-284.95645142 -322.96517944]
[-300.44653320 -328.34936523]
[-303.26257324 -344.50491333]
[-290.50765991 -354.81240845]
[-275.30294800 -348.66836548]
[-273.28976440 -332.39324951]
[-263.86172485 -320.72656250]
[-249.84423828 -315.69073486]
[-247.18821716 -300.09405518]
[-237.76014709 -288.42736816]
[-228.33209229 -276.76068115]
[-218.90402222 -265.09399414]
[-209.47596741 -253.42730713]
[-194.68354797 -252.11575317]
[-184.95596313 -240.41838074]
[-186.43193054 -224.91163635]
[-177.00386047 -213.24494934]
[-167.57580566 -201.57826233]
[-157.88586426 -190.12814331]
[-147.93902588 -178.90048218]
[-137.99218750 -167.67282104]
[-128.04534912 -156.44515991]
[-113.20870972 -155.80499268]
[-102.96125793 -144.56024170]
[-103.73332214 -129.00254822]
[-89.50212097 -124.60683441]
[-86.14237213 -109.14647675]
[-76.19552612 -97.91881561]
[-66.24868774 -86.69115448]
[-58.62983322 -89.32870483]
[-50.96280289 -90.05989838]
[-43.69692230 -89.00598907]
[-37.22320557 -86.38837433]
[-29.65789986 -99.34082794]
[-22.09259224 -112.29328918]
[-14.52728748 -125.24574280]
[-6.96198082 -138.19819641]
[0.60332519 -151.15065002]
[8.16863155 -164.10311890]
[15.73393726 -177.05557251]
[11.47848320 -192.27616882]
[19.30470657 -206.00663757]
[34.56944656 -210.10093689]
[48.21640396 -202.12998962]
[52.14908218 -186.82281494]
[44.03429031 -173.26087952]
[28.68639374 -169.49026489]
[21.12108803 -156.53781128]
[13.55578232 -143.58535767]
[5.99047613 -130.63288879]
[-1.57482994 -117.68043518]
[-9.14013577 -104.72798157]
[-16.70544243 -91.77552032]
[-24.27074814 -78.82306671]
[-15.42557144 -59.42279434]
[-22.23042107 -38.84916306]
[-13.70944977 -26.50440598]
[-1.87020576 -24.01554108]
[5.32950592 -13.79862022]
[3.58334923 -1.01764548]
[11.91690254 11.45439911]
[20.25045586 23.92644310]
[28.58400917 36.39848709]
[36.91756439 48.87053299]
[45.25111771 61.34257507]
[53.58467102 73.81462097]
[61.91822433 86.28666687]
[135.98004150 73.33862305]
[150.48828125 77.14791107]
[164.99653625 80.95720673]
[179.50479126 84.76649475]
[185.81172180 79.28977203]
[193.68057251 76.78132629]
[201.80654907 77.57917023]
[208.87272644 81.47942352]
[213.76344299 87.78148651]
[215.74031067 95.41281891]
[229.99208069 100.09114838]
[244.24386597 104.76947021]
[259.76882935 101.72223663]
[269.44808960 113.04307556]
[283.69985962 117.72140503]
[297.95166016 122.39973450]
[312.20343018 127.07806396]
[326.45520020 131.75639343]
[340.70700073 136.43470764]
[356.63836670 132.54583740]
[367.77481079 144.58377075]
[362.66009521 160.16490173]
[346.55581665 163.26071167]
[336.02865601 150.68649292]
[321.77688599 146.00816345]
[307.52511597 141.32983398]
[293.27331543 136.65151978]
[279.02154541 131.97319031]
[264.76974487 127.29486084]
[250.26416016 130.67672729]
[239.56553650 119.02125549]
[225.31375122 114.34292603]
[211.06198120 109.66459656]
[190.41891479 116.16585541]
[175.69549561 99.27474213]
[161.18724060 95.46545410]
[146.67900085 91.65616608]
[132.17074585 87.84687042]
[127.23986053 93.49810028]
[138.54217529 103.36003876]
[128.68005371 114.66219330]
[117.37809753 104.80056000]
[112.44721222 110.45178986]
[118.18746185 124.30998230]
[123.92771912 138.16816711]
[129.66796875 152.02636719]
[135.40821838 165.88455200]
[141.14846802 179.74275208]
[152.79592896 192.06236267]
[144.18211365 206.66505432]
[127.76556396 202.43028259]
[127.29027557 185.48300171]
[121.55002594 171.62481689]
[115.80977631 157.76661682]
[110.06952667 143.90843201]
[104.32926941 130.05023193]
[98.58901978 116.19203949]
[91.13089752 116.98351288]
[68.75653839 119.35793304]
[66.05271149 134.11222839]
[63.34888458 148.86653137]
[76.29692078 156.78567505]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 206]
[15 205]
[16 204]
[24 145]
[25 144]
[26 143]
[27 142]
[28 141]
[29 140]
[30 139]
[31 138]
[33 135]
[34 134]
[37 52]
[38 51]
[39 50]
[40 49]
[53 107]
[54 106]
[55 105]
[57 103]
[60 100]
[61 99]
[62 98]
[63 97]
[67 96]
[68 95]
[69 94]
[72 91]
[73 90]
[74 89]
[75 88]
[76 87]
[78 85]
[79 84]
[111 132]
[112 131]
[113 130]
[114 129]
[115 128]
[116 127]
[117 126]
[118 125]
[146 183]
[147 182]
[148 181]
[149 180]
[155 178]
[156 177]
[157 176]
[159 174]
[160 173]
[161 172]
[162 171]
[163 170]
[164 169]
[188 202]
[189 201]
[190 200]
[191 199]
[192 198]
[193 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
