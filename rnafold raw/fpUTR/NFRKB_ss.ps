%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:53:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGCGUGCGCGCACCCAGACUCCUUGCGGGAGCGAGUGCGUCUGGGAGCCCGCGGCCGGAGAAGGGCUGCGGGUUAGGGGGCCGGCGCCCGCGGUUCAGGAUUCCAGAAUUGGAAAUAACGGGAGGGAGGACCUGGUCCAGCUUCCCUUCCUCAAAUAAGGAAAUUGACACCUGGCGUGAGUACCUGUGGAGAAGAAACA\
) } def
/len { sequence length } bind def

/coor [
[146.95657349 285.68756104]
[136.99211121 274.61691284]
[142.03446960 259.62075806]
[139.25125122 244.88121033]
[134.91790771 238.88749695]
[136.54122925 229.89093018]
[133.98757935 215.10989380]
[131.43392944 200.32887268]
[128.88027954 185.54783630]
[126.09706116 170.80830383]
[123.08495331 156.11384583]
[120.07284546 141.41938782]
[117.06073761 126.72492218]
[96.35481262 132.69044495]
[75.78508759 123.98058319]
[63.46075058 132.53106689]
[51.13641739 141.08155823]
[38.81208038 149.63203430]
[26.48774719 158.18252563]
[14.16341305 166.73300171]
[1.83907795 175.28349304]
[-5.08894062 189.50717163]
[-19.95646286 190.40498352]
[-32.21393585 199.05104065]
[-44.40380478 207.79216003]
[-56.59366989 216.53327942]
[-68.78353882 225.27439880]
[-80.97341156 234.01550293]
[-87.24000549 249.17010498]
[-103.53083038 251.05183411]
[-113.08728790 237.72494507]
[-106.07850647 222.89898682]
[-89.71452332 221.82563782]
[-77.52465820 213.08451843]
[-65.33478546 204.34341431]
[-53.14492035 195.60229492]
[-40.95505142 186.86117554]
[-37.34865952 180.40390015]
[-28.50694656 178.08065796]
[-22.46044540 164.46855164]
[-6.71140575 162.95915222]
[5.61292887 154.40867615]
[17.93726349 145.85818481]
[30.26159859 137.30769348]
[42.58593369 128.75721741]
[54.91026688 120.20673370]
[67.23460388 111.65625000]
[65.37312317 96.77220154]
[51.32258606 91.52030182]
[37.27204895 86.26840973]
[23.22151184 81.01651001]
[9.17097473 75.76461792]
[-4.87956238 70.51271820]
[-18.93009949 65.26081848]
[-32.98063660 60.00892258]
[-47.03117371 54.75702667]
[-61.08171082 49.50513077]
[-75.13224792 44.25323486]
[-88.65181732 52.11167526]
[-104.05081177 49.39045334]
[-114.05828857 37.37444687]
[-113.94902802 21.73724556]
[-103.77461243 9.86225796]
[-88.33909607 7.35649014]
[-74.93065643 15.40308952]
[-69.88034821 30.20269775]
[-55.82981110 35.45459366]
[-41.77927399 40.70648956]
[-27.72873878 45.95838547]
[-13.67820263 51.21028519]
[0.37233439 56.46218109]
[14.42287064 61.71407700]
[28.47340775 66.96597290]
[42.52394485 72.21787262]
[56.57448196 77.46976471]
[70.62501526 82.72166443]
[76.05056000 81.04685974]
[81.32689667 80.49321747]
[68.07292175 71.85361481]
[69.02708435 56.98960495]
[62.07213593 43.69943237]
[55.11717987 30.40926170]
[48.16222763 17.11909294]
[34.03012848 8.79948711]
[34.43962097 -7.59454679]
[48.96945190 -15.19823360]
[62.67257690 -6.18955135]
[61.45240021 10.16413879]
[68.40734863 23.45430946]
[75.36230469 36.74448013]
[82.31726074 50.03464890]
[95.07376862 57.72365570]
[94.61706543 73.53826904]
[103.71929932 72.30440521]
[113.02150726 74.21689606]
[121.43373871 79.26015472]
[127.90357971 87.04145050]
[131.54605103 96.81605530]
[144.94276428 90.06862640]
[158.33949280 83.32119751]
[171.73622131 76.57377625]
[171.34619141 42.49665451]
[205.95239258 18.49929619]
[209.87220764 4.02052021]
[213.79203796 -10.45825481]
[217.71186829 -24.93703079]
[221.63169861 -39.41580582]
[216.90763855 -55.11979675]
[228.34120178 -66.87590027]
[244.17050171 -62.59044266]
[248.11172485 -46.67193604]
[236.11047363 -35.49597931]
[232.19064331 -21.01720238]
[228.27081299 -6.53842640]
[224.35098267 7.94034910]
[220.43116760 22.41912460]
[226.35159302 27.02329826]
[231.45039368 12.91648197]
[246.44238281 13.40667152]
[250.60879517 27.81642723]
[238.19247437 36.23164368]
[244.11291504 40.83581543]
[257.18035889 33.47090530]
[270.24780273 26.10599327]
[283.31524658 18.74108124]
[296.38269043 11.37617016]
[309.45013428 4.01125908]
[313.79974365 -10.94596958]
[327.15689087 -18.22888565]
[341.38952637 -13.99002743]
[354.45697021 -21.35493851]
[367.52441406 -28.71984863]
[380.59185791 -36.08475876]
[391.42160034 -49.12902832]
[406.95407104 -42.33352280]
[404.72393799 -25.52688980]
[387.95675659 -23.01731682]
[374.88931274 -15.65240574]
[361.82186890 -8.28749466]
[348.75442505 -0.92258334]
[345.01031494 13.44811726]
[331.86297607 21.10333443]
[316.81503296 17.07870293]
[303.74758911 24.44361496]
[290.68014526 31.80852509]
[277.61270142 39.17343521]
[264.54525757 46.53834915]
[251.47782898 53.90325928]
[254.14634705 68.66398621]
[268.96530151 70.98745728]
[283.78424072 73.31092834]
[298.60321045 75.63439941]
[313.42218018 77.95787811]
[326.04440308 68.44710541]
[341.68295288 70.72994995]
[351.05975342 83.45203400]
[348.61169434 99.06557465]
[335.79116821 108.30732727]
[320.20437622 105.69433594]
[311.09869385 92.77683258]
[296.27975464 90.45336151]
[281.46078491 88.12989044]
[266.64181519 85.80641174]
[251.82287598 83.48294067]
[244.30223083 94.68708801]
[234.46519470 103.01219177]
[223.27317810 108.06742859]
[211.72056580 109.75724030]
[200.74946594 108.26889038]
[191.17396545 104.03667450]
[183.61975098 97.68708038]
[178.48364258 89.97049713]
[165.08691406 96.71792603]
[151.69020081 103.46535492]
[138.29347229 110.21277618]
[131.75520325 123.71281433]
[134.76730347 138.40727234]
[137.77941895 153.10174561]
[140.79151917 167.79620361]
[144.89404297 172.99578857]
[145.63763428 178.63917542]
[143.66130066 182.99418640]
[146.21496582 197.77522278]
[148.76861572 212.55624390]
[151.32226562 227.33728027]
[153.99078369 242.09800720]
[156.77400208 256.83752441]
[166.93753052 268.96243286]
[161.69610596 282.90432739]
[176.52580261 286.36843872]
[188.66049194 295.57003784]
[195.99777222 308.91485596]
[197.26641846 324.09085083]
[192.24662781 338.46865845]
[181.80810547 349.55725098]
[167.75938416 355.43548584]
[152.53450012 355.08489990]
[138.77125549 348.56622314]
[128.85421753 337.00888062]
[124.50156403 322.41525269]
[126.46742249 307.31375122]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 189]
[3 187]
[4 186]
[6 185]
[7 184]
[8 183]
[9 182]
[10 179]
[11 178]
[12 177]
[13 176]
[15 47]
[16 46]
[17 45]
[18 44]
[19 43]
[20 42]
[21 41]
[23 39]
[24 37]
[25 36]
[26 35]
[27 34]
[28 33]
[48 76]
[49 75]
[50 74]
[51 73]
[52 72]
[53 71]
[54 70]
[55 69]
[56 68]
[57 67]
[58 66]
[78 93]
[80 91]
[81 90]
[82 89]
[83 88]
[98 175]
[99 174]
[100 173]
[101 172]
[103 116]
[104 115]
[105 114]
[106 113]
[107 112]
[122 148]
[123 147]
[124 146]
[125 145]
[126 144]
[127 143]
[130 140]
[131 139]
[132 138]
[133 137]
[149 164]
[150 163]
[151 162]
[152 161]
[153 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
