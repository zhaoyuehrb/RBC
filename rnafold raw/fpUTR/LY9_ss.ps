%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:20:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUACACAUACACAUGCACACACACACUCAUAUACACAUGCAGAAGCUGUGACACGUGCGGAAGCUGUGGUAAGUGCAUCCUCCUUCAGUCUCAGUUCUGAAAAUAGAUCAUC\
) } def
/len { sequence length } bind def

/coor [
[165.04911804 321.74688721]
[158.93728638 316.21063232]
[153.58650208 309.93301392]
[149.08593750 303.01791382]
[145.51072693 295.57974243]
[142.92068481 287.74172974]
[141.35929871 279.63372803]
[140.85301208 271.39019775]
[141.41076660 263.14785767]
[143.02383423 255.04357910]
[145.66598511 247.21189880]
[149.29388428 239.78295898]
[153.84780884 232.88026428]
[159.25265503 226.61865234]
[165.41914368 221.10238647]
[157.62538147 208.28610229]
[149.83161926 195.46980286]
[142.03785706 182.65351868]
[134.24409485 169.83721924]
[126.45034027 157.02093506]
[111.96349335 153.75491333]
[103.87694550 140.86839294]
[107.40086365 125.69540405]
[99.60710907 112.87911224]
[106.82742310 126.02700043]
[108.16363525 140.96737671]
[103.39105988 155.18786621]
[93.31223297 166.29719543]
[79.62199402 172.42724609]
[64.62247467 172.54718018]
[50.83596420 166.63684082]
[40.58077240 155.69009399]
[35.58140182 141.54774475]
[36.67853546 126.58792114]
[43.68767548 113.32624817]
[55.43002319 103.99286652]
[45.34241486 92.89151001]
[35.25480652 81.79015350]
[25.16719818 70.68879700]
[16.96335983 66.36460876]
[14.96076202 59.14369202]
[5.18014908 47.77093506]
[-10.46741867 42.86322021]
[-13.77643394 26.80138969]
[-1.34286618 16.10847473]
[14.04269695 21.78443336]
[16.55290604 37.99032211]
[26.33351898 49.36307907]
[36.26855850 60.60118484]
[46.35616684 71.70254517]
[56.44377518 82.80390167]
[66.53137970 93.90525818]
[73.80583954 92.07980347]
[95.62920380 86.60343170]
[99.28012085 72.05451965]
[102.93103027 57.50561142]
[106.58194733 42.95669937]
[105.63531494 33.73143768]
[110.53639221 28.06297302]
[114.58334351 13.61921406]
[109.99750519 -2.12569547]
[121.53395844 -13.78083706]
[137.32498169 -9.35639954]
[141.12612915 6.59613419]
[129.02709961 17.66616631]
[124.98014832 32.10992432]
[121.13085938 46.60761261]
[117.47994232 61.15652466]
[113.82903290 75.70543671]
[110.17811584 90.25434875]
[112.42340088 105.08535004]
[120.21715546 117.90164185]
[135.31027222 121.75336456]
[143.03167725 134.86193848]
[139.26663208 149.22717285]
[147.06039429 162.04345703]
[154.85415649 174.85975647]
[162.64790344 187.67604065]
[170.44166565 200.49234009]
[178.23542786 213.30862427]
[202.37786865 207.60423279]
[226.85270691 211.47418213]
[248.00904846 224.31948853]
[262.69927979 244.20390320]
[268.74731445 268.14584351]
[265.27093506 292.56536865]
[278.77273560 299.09997559]
[292.27453613 305.63458252]
[305.77636719 312.16921997]
[319.27816772 318.70382690]
[332.89266968 311.25900269]
[348.27862549 313.27182007]
[359.51986694 323.96826172]
[362.29388428 339.23538208]
[355.53399658 353.20260620]
[341.83956909 360.49929810]
[326.47631836 358.31970215]
[315.35177612 347.50192261]
[312.74356079 332.20562744]
[299.24172974 325.67102051]
[285.73992920 319.13641357]
[272.23812866 312.60177612]
[258.73632812 306.06716919]
[253.88697815 312.70343018]
[248.22334290 318.66275024]
[241.83900452 323.84591675]
[234.83956909 328.16647339]
[227.34088135 331.55230713]
[219.46717834 333.94668579]
[211.34893799 335.30941772]
[203.12077332 335.61730957]
[194.91921997 334.86474609]
[186.88040161 333.06369019]
[179.13783264 330.24346924]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 80]
[16 79]
[17 78]
[18 77]
[19 76]
[20 75]
[23 72]
[24 71]
[36 52]
[37 51]
[38 50]
[39 49]
[41 48]
[42 47]
[54 70]
[55 69]
[56 68]
[57 67]
[59 66]
[60 65]
[86 103]
[87 102]
[88 101]
[89 100]
[90 99]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
