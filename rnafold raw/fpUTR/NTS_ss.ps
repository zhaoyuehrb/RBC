%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGUUCACUCACUUUCAAAGCCAGCUGAAGGAAAGAGGAAGUGCUAGAGAGAGCCCCCUUCAGUGUGCUUCUGACUUUUACGGACUUGGCUUGUUAGAAGGCUGAAAG\
) } def
/len { sequence length } bind def

/coor [
[91.80586243 402.18933105]
[78.14375305 408.91738892]
[62.92600632 409.50039673]
[48.78917313 403.83737183]
[38.18255615 392.90942383]
[32.94381332 378.60995483]
[33.98058319 363.41635132]
[41.11324692 349.96105957]
[53.10602570 340.57525635]
[67.88109589 336.88513184]
[70.43892670 322.10479736]
[72.99675751 307.32449341]
[75.34327698 292.50918579]
[77.47799683 277.66186523]
[79.61272430 262.81454468]
[81.74744415 247.96720886]
[83.88216400 233.11988831]
[74.37995148 214.89311218]
[87.34172058 197.95538330]
[88.19805145 182.97984314]
[89.05438995 168.00430298]
[89.91072083 153.02876282]
[90.76705170 138.05323792]
[91.62338257 123.07769775]
[92.26578522 108.09146118]
[92.47998047 93.09298706]
[92.47998047 78.09298706]
[92.47998047 63.09298706]
[84.22729492 55.72244644]
[81.53204346 45.21933746]
[85.06873322 35.20346069]
[93.40663910 28.98658180]
[94.26297760 14.01104450]
[95.11930847 -0.96449226]
[95.97563934 -15.94002914]
[96.83197021 -30.91556549]
[88.14739990 -47.07429504]
[98.16509247 -61.40498734]
[98.59342957 -76.39887238]
[99.02177429 -91.39275360]
[99.45011139 -106.38663483]
[99.87845612 -121.38051605]
[100.30679321 -136.37440491]
[100.73513794 -151.36828613]
[101.16347504 -166.36216736]
[88.19526672 -174.47221375]
[81.07464600 -187.89582825]
[81.62548065 -202.98101807]
[89.59976196 -215.68009949]
[102.77108765 -222.63581848]
[103.19942474 -237.62969971]
[103.62776947 -252.62358093]
[92.59527588 -263.93994141]
[92.87953949 -279.74166870]
[104.31189728 -290.65390015]
[120.10974121 -290.20257568]
[130.90048218 -278.65548706]
[130.28218079 -262.86331177]
[118.62165070 -252.19523621]
[118.19330597 -237.20135498]
[117.76496887 -222.20747375]
[130.51771545 -214.51116943]
[137.75401306 -201.37756348]
[137.44276428 -186.28552246]
[129.56741333 -173.29029846]
[116.15735626 -165.93382263]
[115.72901917 -150.93994141]
[115.30067444 -135.94606018]
[114.87233734 -120.95217896]
[114.44400024 -105.95829773]
[114.01565552 -90.96440887]
[113.58731842 -75.97052765]
[113.15897369 -60.97664642]
[121.27666473 -51.88280106]
[120.95085907 -39.29423904]
[111.80751038 -30.05923271]
[110.95117188 -15.08369637]
[110.09484100 -0.10816008]
[109.23851013 14.86737633]
[108.38217926 29.84291267]
[118.40850067 46.27281189]
[107.47998047 63.09298706]
[107.47998047 78.09298706]
[107.47998047 93.09298706]
[110.66817474 100.63815308]
[107.25966644 108.51979828]
[110.17599487 117.33770752]
[106.59892273 123.93402863]
[105.74259186 138.90956116]
[104.88625336 153.88510132]
[104.02992249 168.86064148]
[103.17359161 183.83616638]
[102.31726074 198.81170654]
[109.67276764 205.12771606]
[113.15969849 214.02485657]
[112.08602905 223.38040161]
[106.83161163 231.02696228]
[98.72949219 235.25460815]
[96.59476471 250.10192871]
[94.46004486 264.94924927]
[92.32531738 279.79656982]
[90.19059753 294.64389038]
[92.08274841 303.73675537]
[87.77706909 309.88232422]
[85.21923065 324.66262817]
[82.66139984 339.44296265]
[95.33714294 347.88366699]
[103.47837830 360.75378418]
[105.67459869 375.82348633]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 106]
[11 105]
[12 104]
[13 102]
[14 101]
[15 100]
[16 99]
[17 98]
[19 93]
[20 92]
[21 91]
[22 90]
[23 89]
[24 88]
[25 86]
[26 84]
[27 83]
[28 82]
[32 80]
[33 79]
[34 78]
[35 77]
[36 76]
[38 73]
[39 72]
[40 71]
[41 70]
[42 69]
[43 68]
[44 67]
[45 66]
[50 61]
[51 60]
[52 59]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
