%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:20:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCCCUGCCUGCGCCCGCCCCCGAAGCGGCGCGGGACGCCUGGCGCCGUCCGCGAUCCGCAGGGCUGCCCGCUUAGGCUUAGGCCCGGCCCGCUGGCAAAGCCGAGCCGCAGCAUUUUAUUUCGUUCGUGGUUUCCGCACAGGCUGGAGUUUCGUGGGUUGGGUCGUACUUGGGACCUCGGCGAAGAGGACCCGUUUAUUUUUUUUUCUUUCCAAA\
) } def
/len { sequence length } bind def

/coor [
[85.50323486 131.97914124]
[92.62022400 118.77503204]
[80.04409027 126.95066071]
[67.46795654 135.12629700]
[54.89182663 143.30191040]
[42.31569290 151.47753906]
[29.73956108 159.65316772]
[17.16342926 167.82879639]
[4.58729601 176.00442505]
[13.57021236 185.86325073]
[15.83950043 202.11648560]
[8.10538101 220.41926575]
[-2.11229205 231.40103149]
[-12.32996464 242.38278198]
[-22.46824455 253.43789673]
[-32.52660370 264.56576538]
[-42.58496475 275.69363403]
[-52.64332199 286.82150269]
[-62.70168304 297.94937134]
[-66.21551514 313.37542725]
[-80.48985291 317.62893677]
[-90.54821014 328.75680542]
[-89.50119019 344.52636719]
[-99.97432709 356.36230469]
[-115.75408173 357.24255371]
[-127.47861481 346.64486694]
[-128.19197083 330.85668945]
[-117.47091675 319.24484253]
[-101.67607880 318.69845581]
[-91.61772156 307.57058716]
[-88.82333374 292.94046021]
[-73.82955170 287.89099121]
[-63.77118683 276.76312256]
[-53.71282959 265.63525391]
[-43.65446854 254.50740051]
[-33.59611130 243.37953186]
[-31.44394302 236.31329346]
[-23.31172943 232.16511536]
[-13.09405708 221.18334961]
[-2.87638402 210.20158386]
[-6.21372938 203.48503113]
[-12.88842010 190.05192566]
[-16.22576523 183.33535767]
[-31.14950943 184.84594727]
[-46.04993439 186.57144165]
[-60.92394638 188.51147461]
[-75.79795837 190.45150757]
[-86.67995453 202.23971558]
[-102.67010498 200.93798828]
[-111.50215149 187.54490662]
[-106.40088654 172.33448792]
[-91.27957916 166.97486877]
[-77.73799133 175.57748413]
[-62.86397934 173.63745117]
[-47.98996735 171.69741821]
[-44.42236710 168.52946472]
[-38.82830429 167.56564331]
[-32.66009521 169.92221069]
[-17.73635292 168.41162109]
[-3.58833170 163.42829895]
[8.98780155 155.25267029]
[21.56393433 147.07704163]
[34.14006805 138.90141296]
[46.71619797 130.72578430]
[59.29233170 122.55015564]
[71.86846161 114.37452698]
[84.44459534 106.19889832]
[84.22843933 91.20046234]
[71.42192841 83.39064789]
[58.61540985 75.58083344]
[43.31677628 79.54659271]
[29.73734093 71.46114349]
[25.93354797 56.12143326]
[34.16211700 42.62824249]
[49.54118729 38.98684311]
[62.94662476 47.35760880]
[66.42522430 62.77431870]
[79.23174286 70.58412933]
[92.03825378 78.39394379]
[94.94583130 77.73407745]
[97.88951874 77.46021271]
[100.81872559 77.57053375]
[103.68394470 78.05664825]
[110.16436768 64.52874756]
[116.64479065 51.00084686]
[123.12520599 37.47294235]
[129.60562134 23.94503975]
[136.08604431 10.41713619]
[142.56646729 -3.11076689]
[149.04689026 -16.63866997]
[155.52731323 -30.16657257]
[162.00772095 -43.69447708]
[168.48814392 -57.22237778]
[174.96856689 -70.75028229]
[173.13096619 -89.07495117]
[187.99108887 -98.41421509]
[194.27587891 -112.03409576]
[200.56068420 -125.65398407]
[194.21273804 -141.95765686]
[201.47946167 -157.50091553]
[217.42001343 -162.86904907]
[223.50788879 -176.57807922]
[229.59577942 -190.28710938]
[235.68365479 -203.99615479]
[241.07263184 -217.99468994]
[245.74897766 -232.24711609]
[250.42532349 -246.49954224]
[255.10168457 -260.75198364]
[259.77804565 -275.00439453]
[264.45437622 -289.25683594]
[269.13073730 -303.50927734]
[273.70428467 -317.79501343]
[278.17477417 -332.11334229]
[282.64523315 -346.43170166]
[272.17837524 -357.67181396]
[268.74948120 -372.64306641]
[273.28097534 -387.31826782]
[284.55383301 -397.74984741]
[299.53576660 -401.13177490]
[314.19668579 -396.55432129]
[324.59286499 -385.24880981]
[327.92782593 -370.25637817]
[323.30444336 -355.60986328]
[311.96640015 -345.24914551]
[296.96359253 -341.96121216]
[292.49310303 -327.64288330]
[288.02261353 -313.32452393]
[289.02911377 -306.00671387]
[283.38317871 -298.83291626]
[278.70681763 -284.58047485]
[274.03045654 -270.32806396]
[269.35412598 -256.07562256]
[264.67776489 -241.82319641]
[260.00140381 -227.57077026]
[255.32505798 -213.31834412]
[268.65206909 -220.20242310]
[283.31234741 -217.02816772]
[292.59817505 -205.24794006]
[292.26083374 -190.25173950]
[282.45465088 -178.90100098]
[267.66644287 -176.38922119]
[254.66249084 -183.86564636]
[249.39268494 -197.90827942]
[243.30480957 -184.19923401]
[237.21693420 -170.49020386]
[231.12904358 -156.78115845]
[237.39433289 -145.52516174]
[236.01358032 -132.52148438]
[227.26797485 -122.53936768]
[214.18057251 -119.36917877]
[207.89576721 -105.74929047]
[201.61096191 -92.12940979]
[205.49789429 -80.67780304]
[200.37759399 -69.28118896]
[188.49647522 -64.26985931]
[182.01605225 -50.74195862]
[175.53562927 -37.21405792]
[169.05520630 -23.68615341]
[162.57478333 -10.15824986]
[156.09437561 3.36965299]
[149.61395264 16.89755630]
[143.13352966 30.42545891]
[136.65310669 43.95336151]
[130.17268372 57.48126602]
[123.69226837 71.00917053]
[117.21185303 84.53707123]
[126.44194031 72.71313477]
[141.21801758 70.13095093]
[153.91114807 78.12371063]
[157.96786499 92.56473541]
[151.29365540 105.99808502]
[137.33444214 111.48809814]
[123.29585266 106.19889832]
[135.87197876 114.37452698]
[148.44812012 122.55015564]
[164.23545837 123.58480835]
[170.68896484 137.00872803]
[183.26509094 145.18435669]
[195.84123230 153.35998535]
[208.41735840 161.53561401]
[223.82392883 158.01237488]
[237.16471863 166.48579407]
[240.52487183 181.92875671]
[231.91087341 195.17919922]
[216.43325806 198.37590027]
[203.27461243 189.62228394]
[200.24172974 174.11174011]
[187.66560364 165.93611145]
[175.08946228 157.76048279]
[162.51333618 149.58485413]
[147.62551880 149.13497925]
[140.27249146 135.12629700]
[127.69635773 126.95066071]
[115.12022400 118.77503204]
[122.23721313 131.97914124]
[129.35420227 145.18324280]
[136.47119141 158.38735962]
[147.80175781 168.21681213]
[156.28067017 180.59049988]
[161.35752869 194.70523071]
[162.70278931 209.64479065]
[160.22915649 224.43942261]
[154.09716797 238.12878418]
[144.70487976 249.82427979]
[132.66194153 258.76675415]
[118.75009155 264.37573242]
[103.87236786 266.28707886]
[88.99450684 264.37680054]
[75.08225250 258.76885986]
[63.03866577 249.82725525]
[53.64551926 238.13244629]
[47.51253510 224.44352722]
[45.03781509 209.64906311]
[46.38199997 194.70942688]
[51.45783234 180.59432983]
[59.93583298 168.22001648]
[71.26925659 158.38735962]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 67]
[3 66]
[4 65]
[5 64]
[6 63]
[7 62]
[8 61]
[9 60]
[12 40]
[13 39]
[14 38]
[15 36]
[16 35]
[17 34]
[18 33]
[19 32]
[21 30]
[22 29]
[43 59]
[44 58]
[45 55]
[46 54]
[47 53]
[68 79]
[69 78]
[70 77]
[83 166]
[84 165]
[85 164]
[86 163]
[87 162]
[88 161]
[89 160]
[90 159]
[91 158]
[92 157]
[93 156]
[94 155]
[96 152]
[97 151]
[98 150]
[101 146]
[102 145]
[103 144]
[104 143]
[105 135]
[106 134]
[107 133]
[108 132]
[109 131]
[110 130]
[111 129]
[112 127]
[113 126]
[114 125]
[173 194]
[174 193]
[175 192]
[177 190]
[178 189]
[179 188]
[180 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
