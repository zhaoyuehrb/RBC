%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:17:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAGAAGUGCUUCCAAGCGUCCAUUUUGAGCCUUGGAAACUACGACGACCAAAGGGCCACGGGUUCAUGGGUCGUUUCUCAUUUCCGUCGAGUUAAACGUCUGGGGCUGCUUCUGAGGAAUCAGCUUGACUGGCCAGCAAGUUCAGCUCCGGCAAGUCAUUUGAUUCACCCGGUGAUGAA\
) } def
/len { sequence length } bind def

/coor [
[143.41564941 152.90066528]
[156.39297485 145.37808228]
[171.29684448 143.68997192]
[157.85577393 137.03134155]
[144.41470337 130.37269592]
[130.97363281 123.71405029]
[117.53255463 117.05540466]
[104.09147644 110.39676666]
[90.59312439 103.85501862]
[77.03850555 97.43066406]
[63.48389053 91.00630188]
[54.36164856 90.15334320]
[49.75124741 84.35101318]
[36.31017303 77.69237518]
[22.86910057 71.03372955]
[7.06849670 71.84088135]
[-0.90138942 59.25794601]
[-14.34246349 52.59930420]
[-27.78353691 45.94065857]
[-41.22461319 39.28201675]
[-54.01416397 47.67097473]
[-69.18536377 48.52626801]
[-82.65815735 41.71817398]
[-90.85942078 29.16447639]
[-91.67040253 14.29141808]
[-105.11148071 7.63277483]
[-118.55255127 0.97413212]
[-131.99362183 -5.68451071]
[-145.43470764 -12.34315300]
[-149.81593323 -11.90189552]
[-153.71034241 -12.80261135]
[-156.75234985 -14.72313786]
[-158.72045898 -17.25500298]
[-159.55296326 -19.95858383]
[-172.49974060 -27.53361511]
[-185.44650269 -35.10864639]
[-198.39328003 -42.68367767]
[-211.34005737 -50.25870895]
[-224.28681946 -57.83374023]
[-238.55543518 -49.50449753]
[-254.98342896 -49.49957657]
[-269.09494019 -57.72579575]
[-277.09289551 -71.86025238]
[-276.88046265 -88.00543976]
[-289.95675659 -95.35462189]
[-303.03305054 -102.70381165]
[-316.10934448 -110.05299377]
[-329.18563843 -117.40218353]
[-342.26193237 -124.75137329]
[-355.33822632 -132.10055542]
[-369.39205933 -125.79216766]
[-384.29156494 -128.93203735]
[-394.36605835 -140.11096191]
[-395.90768433 -154.90155029]
[-408.98397827 -162.25073242]
[-422.06027222 -169.59991455]
[-435.13656616 -176.94911194]
[-448.21286011 -184.29829407]
[-464.98306274 -186.78768921]
[-467.23339844 -203.59162903]
[-451.70910645 -210.40582275]
[-440.86367798 -197.37458801]
[-427.78738403 -190.02540588]
[-414.71109009 -182.67620850]
[-401.63479614 -175.32702637]
[-388.55850220 -167.97784424]
[-375.12252808 -174.35066223]
[-360.33544922 -171.55679321]
[-349.90695190 -160.46174622]
[-347.98904419 -145.17684937]
[-334.91275024 -137.82766724]
[-321.83645630 -130.47846985]
[-308.76016235 -123.12928772]
[-295.68386841 -115.78010559]
[-282.60757446 -108.43091583]
[-269.53128052 -101.08173370]
[-258.25500488 -108.81190491]
[-244.68215942 -110.93395233]
[-231.45764160 -106.97654724]
[-221.18341064 -97.65872192]
[-215.90661621 -84.75994873]
[-216.71179199 -70.78050995]
[-203.76501465 -63.20548248]
[-190.81825256 -55.63045120]
[-177.87147522 -48.05541611]
[-164.92471313 -40.48038483]
[-151.97793579 -32.90535355]
[-138.77606201 -25.78422737]
[-125.33498383 -19.12558556]
[-111.89391327 -12.46694183]
[-98.45283508 -5.80829954]
[-85.01176453 0.85034341]
[-72.68814087 -7.51589537]
[-57.73200226 -8.59753323]
[-44.15281296 -2.00420284]
[-35.64118576 10.58344841]
[-34.56596756 25.84094238]
[-21.12489510 32.49958420]
[-7.68382072 39.15822983]
[5.75725317 45.81687164]
[20.59646225 44.53345490]
[29.52774239 57.59265518]
[42.96881866 64.25129700]
[56.40989304 70.90994263]
[69.90824890 77.45169067]
[83.46286011 83.87604523]
[97.01747894 90.30039978]
[105.09455109 90.63580322]
[110.75012207 96.95568848]
[124.19119263 103.61433411]
[137.63226318 110.27297211]
[151.07334900 116.93161774]
[164.51441956 123.59026337]
[177.95549011 130.24890137]
[192.06074524 135.35202026]
[205.41912842 127.34005737]
[220.16593933 131.07984924]
[227.72180176 143.86439514]
[242.31188965 147.34707642]
[256.90197754 150.82977295]
[271.49209595 154.31246948]
[286.08218384 157.79515076]
[300.67227173 161.27784729]
[315.26235962 164.76052856]
[326.65682983 158.67912292]
[338.75015259 161.89889526]
[345.18505859 172.16181946]
[359.71252441 175.89721680]
[374.23995972 179.63261414]
[388.76742554 183.36799622]
[403.29486084 187.10339355]
[418.58706665 183.04644775]
[428.98660278 193.70941162]
[443.51406860 197.44480896]
[458.04150391 201.18020630]
[472.63162231 204.66288757]
[487.27996826 207.89183044]
[501.92828369 211.12077332]
[514.21179199 201.44349670]
[529.84027100 201.97761536]
[541.43438721 212.47094727]
[543.51983643 227.96885681]
[535.11181641 241.15370178]
[520.18048096 245.80000305]
[505.77581787 239.71391296]
[498.69937134 225.76911926]
[484.05102539 222.54017639]
[469.40267944 219.31123352]
[464.94677734 221.09698486]
[459.32034302 220.08343506]
[454.30612183 215.70765686]
[439.77868652 211.97225952]
[425.25122070 208.23686218]
[410.99810791 212.56098938]
[399.55947876 201.63084412]
[385.03201294 197.89544678]
[370.50457764 194.16006470]
[355.97711182 190.42466736]
[341.44967651 186.68927002]
[324.83898926 192.31507874]
[311.77966309 179.35063171]
[297.18957520 175.86793518]
[282.59948730 172.38525391]
[268.00939941 168.90255737]
[253.41929626 165.41986084]
[238.82920837 161.93717957]
[224.23910522 158.45448303]
[211.72349548 166.44793701]
[196.87745667 163.12382507]
[188.57806396 149.94210815]
[198.95230103 160.77607727]
[204.11212158 174.86068726]
[203.19163513 189.83242798]
[196.34532166 203.17887878]
[184.72203064 212.66041565]
[170.27229309 216.68592834]
[155.42086792 214.57991028]
[142.65997314 206.69577026]
[134.13101196 194.35653687]
[131.26519775 179.63284302]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 114]
[4 113]
[5 112]
[6 111]
[7 110]
[8 109]
[9 107]
[10 106]
[11 105]
[13 104]
[14 103]
[15 102]
[17 100]
[18 99]
[19 98]
[20 97]
[25 92]
[26 91]
[27 90]
[28 89]
[29 88]
[34 87]
[35 86]
[36 85]
[37 84]
[38 83]
[39 82]
[44 76]
[45 75]
[46 74]
[47 73]
[48 72]
[49 71]
[50 70]
[54 66]
[55 65]
[56 64]
[57 63]
[58 62]
[115 170]
[118 167]
[119 166]
[120 165]
[121 164]
[122 163]
[123 162]
[124 161]
[127 159]
[128 158]
[129 157]
[130 156]
[131 155]
[133 153]
[134 152]
[135 151]
[136 148]
[137 147]
[138 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
