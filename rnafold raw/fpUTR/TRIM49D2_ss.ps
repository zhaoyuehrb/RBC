%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:04:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGACCUCUGAAACUCAGUACUGCGGCGAAUGAGCUCCUGACCUUGAGGAGUACUUAACAGAAUUAUUUCUCGAAGAAUCAUUGUGGGAACCCUUCAAAGAACCCAGCGAAAC\
) } def
/len { sequence length } bind def

/coor [
[129.10142517 246.62368774]
[118.69408417 257.42587280]
[105.15610504 263.88522339]
[90.21199036 265.17889404]
[75.76538086 261.14215088]
[63.65652084 252.28915405]
[55.42786789 239.74765015]
[52.12762070 225.11520386]
[54.17543030 210.25799561]
[43.78835297 221.07968140]
[33.40127563 231.90135193]
[23.01420212 242.72302246]
[16.40815163 258.33700562]
[-0.42436644 256.31149292]
[-3.13772655 239.57609558]
[12.19252682 232.33595276]
[22.57960320 221.51428223]
[32.96667862 210.69259644]
[43.35375214 199.87092590]
[43.73305511 194.29571533]
[47.00438690 189.02136230]
[52.88563156 185.55259705]
[58.86164474 171.79443359]
[64.83766174 158.03627014]
[64.61314392 150.54615784]
[71.16940308 143.98742676]
[77.51899719 130.39762878]
[72.03111267 125.43919373]
[67.61358643 119.50720978]
[64.43547058 112.82869720]
[62.61839676 105.65924072]
[62.23189926 98.27320099]
[63.29077148 90.95324707]
[65.75448608 83.97950745]
[69.52876282 77.61886597]
[59.44115448 66.51750946]
[49.35354614 55.41614914]
[39.26593781 44.31479263]
[29.17833138 33.21343231]
[19.09072304 22.11207390]
[3.47349572 22.90971756]
[-8.97147465 13.44099331]
[-12.36805344 -1.82325494]
[-5.11248016 -15.67571545]
[9.36938477 -21.57568169]
[24.23964882 -16.73736763]
[32.47702789 -3.44527936]
[30.19208145 12.02446651]
[40.27968979 23.12582397]
[50.36729813 34.22718430]
[60.45490646 45.32854080]
[70.54251099 56.42990112]
[80.63011932 67.53125763]
[94.85187531 62.54458618]
[109.89162445 63.50935745]
[116.61004639 50.09806442]
[123.32846832 36.68676758]
[117.61595917 24.39962959]
[120.03151703 11.26517773]
[129.46185303 2.08715701]
[142.27081299 0.08897884]
[149.35305786 -13.13379860]
[156.43530273 -26.35657692]
[163.51754761 -39.57935333]
[162.45443726 -55.94400787]
[176.24343872 -64.82070160]
[190.69958496 -57.07785034]
[190.95164490 -40.68064117]
[176.74032593 -32.49711227]
[169.65808105 -19.27433395]
[162.57583618 -6.05155706]
[155.49359131 7.17122078]
[161.06294250 22.97486687]
[153.38696289 38.24652100]
[136.73976135 43.40518951]
[130.02134705 56.81648636]
[123.30292511 70.22777557]
[131.53068542 79.13789368]
[136.51393127 90.19470978]
[137.73991394 102.26049805]
[152.23760986 106.10978699]
[167.56118774 102.17298126]
[177.87670898 112.91724396]
[192.37440491 116.76653290]
[206.87208557 120.61582947]
[222.19566345 116.67902374]
[232.51119995 127.42328644]
[247.00888062 131.27258301]
[261.50656128 135.12187195]
[278.36691284 133.34263611]
[284.74401855 149.05151367]
[271.41439819 159.52804565]
[257.65728760 149.61955261]
[243.15959167 145.77026367]
[228.66191101 141.92097473]
[214.37528992 146.13310242]
[203.02279663 135.11351013]
[188.52511597 131.26422119]
[174.02742004 127.41493225]
[159.74081421 131.62705994]
[148.38832092 120.60747528]
[133.89062500 116.75818634]
[116.00415802 134.25314331]
[91.10879517 136.74722290]
[84.75920868 150.33702087]
[78.59583282 164.01228333]
[72.61981201 177.77044678]
[66.64379883 191.52862549]
[79.56267548 183.90611267]
[94.33559418 181.30592346]
[109.08072662 184.05928040]
[121.91980743 191.81544495]
[131.21734619 203.58641052]
[135.78900146 217.87277222]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 19]
[10 18]
[11 17]
[12 16]
[22 108]
[23 107]
[24 106]
[26 105]
[27 104]
[35 53]
[36 52]
[37 51]
[38 50]
[39 49]
[40 48]
[55 77]
[56 76]
[57 75]
[61 72]
[62 71]
[63 70]
[64 69]
[80 102]
[81 101]
[83 99]
[84 98]
[85 97]
[87 95]
[88 94]
[89 93]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
