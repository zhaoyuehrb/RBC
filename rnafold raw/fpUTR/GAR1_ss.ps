%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:52:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGCUGUUAUACGUCACUUCCACGGCUCAGCGUCAGGCAAGUUGGCCUCUCUGUUGUAAAUUAGUGGUUAAGGUUAUCUAUUAUUGCCACUUUUCCAGCGCUAAAGGCUGUUUUGGAACCAGUGUUGCUUGUUCCGCGGGUGAUUGGCUUUUUUUUUUGGCAAACCAGUUAUUCAAGUUUCUGGUCUUUAAAAAACUCUGUGGCGGUACGGUAACCGAGGAGGUUCCAGCGCGGCGGAAGUACCCCGCGGGUGGG\
UGUGUGCGCAAGGCCAGGGCCAGAGGGGCACGUGGCGCCGGGAGGAGAGAGA\
) } def
/len { sequence length } bind def

/coor [
[-385.12863159 694.33087158]
[-384.20410156 710.30590820]
[-389.30242920 724.41290283]
[-394.40075684 738.51989746]
[-399.49911499 752.62689209]
[-404.59744263 766.73388672]
[-396.31521606 776.01885986]
[-392.76745605 787.86932373]
[-394.56402588 800.03552246]
[-401.30615234 810.23468018]
[-411.67300415 816.57922363]
[-423.67990112 817.92602539]
[-429.06494141 831.92608643]
[-434.44998169 845.92608643]
[-426.72021484 859.51965332]
[-429.58749390 874.89215088]
[-441.69796753 884.78509521]
[-457.33343506 884.52740479]
[-469.11129761 874.24072266]
[-471.47042847 858.78210449]
[-463.29690552 845.45068359]
[-448.45001221 840.54107666]
[-443.06497192 826.54101562]
[-437.67993164 812.54095459]
[-447.96954346 798.13922119]
[-447.51113892 780.28729248]
[-436.29940796 766.18530273]
[-418.70443726 761.63549805]
[-413.60607910 747.52856445]
[-408.50775146 733.42156982]
[-403.40942383 719.31457520]
[-398.31106567 705.20758057]
[-404.51504517 700.99322510]
[-416.92297363 692.56451416]
[-423.12692261 688.35015869]
[-434.36239624 698.28820801]
[-445.59783936 708.22619629]
[-456.83331299 718.16424561]
[-457.54965210 733.95227051]
[-469.27618408 744.54772949]
[-485.05575562 743.66455078]
[-495.52667236 731.82666016]
[-494.47668457 716.05725098]
[-482.52871704 705.71209717]
[-466.77133179 706.92877197]
[-455.53588867 696.99072266]
[-444.30041504 687.05273438]
[-433.06494141 677.11468506]
[-423.83270264 665.29241943]
[-416.91403198 651.98333740]
[-409.99533081 638.67425537]
[-403.07666016 625.36517334]
[-404.07135010 610.50384521]
[-390.84097290 601.82812500]
[-383.92227173 588.51904297]
[-387.81491089 582.10827637]
[-400.26733398 590.47113037]
[-410.49896240 601.43988037]
[-424.25552368 595.46014404]
[-423.21472168 580.49627686]
[-408.76385498 576.47821045]
[-395.60012817 569.28680420]
[-399.49273682 562.87609863]
[-414.49273682 562.87609863]
[-429.49273682 562.87609863]
[-444.49273682 562.87609863]
[-459.49273682 562.87609863]
[-474.49273682 562.87609863]
[-483.65344238 575.26104736]
[-498.18048096 579.82379150]
[-512.44000244 575.01452637]
[-521.03051758 562.87609863]
[-536.03051758 562.87609863]
[-551.03051758 562.87609863]
[-563.34576416 573.15783691]
[-579.03326416 569.79895020]
[-586.05889893 555.37609863]
[-579.03326416 540.95318604]
[-563.34576416 537.59429932]
[-551.03051758 547.87609863]
[-536.03051758 547.87609863]
[-521.03051758 547.87609863]
[-512.44000244 535.73767090]
[-498.18048096 530.92834473]
[-483.65344238 535.49108887]
[-474.49273682 547.87609863]
[-459.49273682 547.87609863]
[-444.49273682 547.87609863]
[-429.49273682 547.87609863]
[-414.49273682 547.87609863]
[-399.49273682 547.87609863]
[-385.46542358 542.56250000]
[-374.22994995 532.62451172]
[-362.99450684 522.68646240]
[-351.75903320 512.74841309]
[-340.52355957 502.81039429]
[-336.11669922 488.58267212]
[-320.65368652 485.23504639]
[-309.41824341 475.29699707]
[-298.18276978 465.35897827]
[-286.94729614 455.42095947]
[-275.71185303 445.48294067]
[-264.47637939 435.54489136]
[-266.08395386 420.76132202]
[-258.58944702 407.71157837]
[-244.68528748 401.50454712]
[-229.61814880 404.71197510]
[-218.38269043 394.77395630]
[-207.14721680 384.83593750]
[-202.74034119 370.60818481]
[-187.27734375 367.26055908]
[-176.04188538 357.32254028]
[-164.80642700 347.38449097]
[-153.57096863 337.44647217]
[-142.33549500 327.50845337]
[-131.10003662 317.57043457]
[-130.44822693 302.73428345]
[-119.19544983 292.49566650]
[-103.63836670 293.27993774]
[-102.98656464 278.44381714]
[-91.73377228 268.20516968]
[-76.17669678 268.98944092]
[-64.94123840 259.05142212]
[-60.53435135 244.82368469]
[-45.07136154 241.47605896]
[-33.83589935 231.53802490]
[-22.60043716 221.60000610]
[-11.36497593 211.66197205]
[-15.53417015 207.08047485]
[-17.30527306 200.36021423]
[-15.64653587 192.83045959]
[-10.27262688 186.27729797]
[-1.82351637 182.53125000]
[8.17767048 182.99839783]
[18.67553520 172.28416443]
[29.17339897 161.56993103]
[39.67126465 150.85569763]
[50.16912842 140.14146423]
[60.66699600 129.42723083]
[71.16485596 118.71299744]
[64.13235474 112.13182831]
[58.76884079 103.16742706]
[55.82649612 92.28911591]
[55.91572952 80.19110870]
[59.44089127 67.74823761]
[66.54983521 55.95399857]
[77.10211945 45.84521866]
[77.10211945 30.84521866]
[77.10211945 15.84521866]
[64.06848907 7.59124613]
[57.58707047 -6.40856504]
[59.72605133 -21.68692589]
[69.80289459 -33.36856461]
[84.60211945 -37.72591782]
[99.40134430 -33.36856461]
[109.47818756 -21.68692589]
[111.61717224 -6.40856504]
[105.13574982 7.59124613]
[92.10211945 15.84521866]
[92.10211945 30.84521866]
[92.10211945 45.84521866]
[99.43875885 47.40206146]
[114.11203003 50.51574707]
[121.44866943 52.07259369]
[127.54039764 38.36526489]
[133.63212585 24.65793610]
[139.72386169 10.95060921]
[145.81558228 -2.75671768]
[140.38124084 -17.35485458]
[146.75437927 -31.16925621]
[160.70497131 -36.26011276]
[166.79670715 -49.96743774]
[164.53428650 -66.20977783]
[177.63392639 -76.07545471]
[192.61982727 -69.41551208]
[194.07577515 -53.08112335]
[180.50402832 -43.87570953]
[174.41229248 -30.16838264]
[179.98254395 -16.40219307]
[173.99992371 -2.41423488]
[159.52291870 3.33501244]
[153.43118286 17.04233932]
[147.33946228 30.74966621]
[141.24772644 44.45699310]
[135.15599060 58.16432190]
[140.03848267 63.85741806]
[151.42466736 54.09244919]
[162.81086731 44.32748032]
[170.62239075 31.52201462]
[185.21496582 34.99429703]
[186.42179871 49.94567108]
[172.57583618 55.71367264]
[161.18963623 65.47864532]
[149.80345154 75.24361420]
[154.68592834 80.93670654]
[169.16152954 77.00518036]
[183.63714600 73.07365417]
[198.09249878 69.06835938]
[212.52725220 64.98938751]
[226.96200562 60.91041946]
[241.39675903 56.83145142]
[252.57287598 45.63301849]
[266.92456055 49.61780930]
[281.35931396 45.53884125]
[295.79406738 41.45986938]
[306.97018433 30.26144028]
[321.32186890 34.24623108]
[326.13818359 29.83804512]
[331.63247681 28.66153908]
[336.09277344 30.23450279]
[350.60772705 26.45083046]
[358.07632446 21.28330612]
[365.29000854 22.70339584]
[379.84280396 19.06796837]
[394.39559937 15.43254280]
[408.94839478 11.79711723]
[418.40454102 -1.16285026]
[434.43838501 -1.70615804]
[444.75015259 10.58397293]
[441.42950439 26.27960587]
[427.02377319 33.34039688]
[412.58380127 26.34990692]
[398.03103638 29.98533249]
[383.47824097 33.62075806]
[368.92544556 37.25618362]
[354.39138794 40.96578217]
[339.87643433 44.74945450]
[325.40081787 48.68098068]
[315.25717163 59.58765793]
[299.87301636 55.89462280]
[285.43826294 59.97359085]
[271.00354004 64.05255890]
[260.85986328 74.95923615]
[245.47572327 71.26619720]
[231.04096985 75.34516907]
[216.60623169 79.42414093]
[202.17147827 83.50310516]
[196.61787415 88.32092285]
[187.56866455 87.54926300]
[173.09306335 91.48078918]
[158.61746216 95.41230774]
[140.12300110 130.92233276]
[107.58934021 141.83271790]
[81.87909698 129.21086121]
[71.38122559 139.92509460]
[60.88336563 150.63932800]
[50.38549805 161.35356140]
[39.88763428 172.06779480]
[29.38977051 182.78202820]
[18.89190483 193.49627686]
[20.95088005 208.35427856]
[33.96668625 215.81007385]
[46.98249054 223.26586914]
[62.16665649 218.88218689]
[75.96264648 226.59231567]
[80.18554688 241.82197571]
[72.32998657 255.53569031]
[57.05652237 259.59732056]
[43.42663956 251.59721375]
[39.52670288 236.28167725]
[26.51089668 228.82588196]
[13.49508953 221.37008667]
[-1.42694807 222.89743042]
[-12.66240978 232.83546448]
[-23.89787292 242.77349854]
[-35.13333511 252.71151733]
[-40.34385681 267.65008545]
[-55.00320816 270.28689575]
[-66.23867035 280.22491455]
[-67.35969543 295.76135254]
[-78.89562988 305.67987061]
[-93.70034027 304.51541138]
[-94.82137299 320.05184937]
[-106.35729980 329.97036743]
[-121.16201019 328.80587769]
[-132.39747620 338.74389648]
[-143.63293457 348.68194580]
[-154.86839294 358.61996460]
[-166.10386658 368.55798340]
[-177.33932495 378.49603271]
[-182.54985046 393.43460083]
[-197.20919800 396.07138062]
[-208.44465637 406.00939941]
[-219.68011475 415.94744873]
[-218.33628845 431.29345703]
[-226.19450378 444.33578491]
[-240.06167603 450.18090820]
[-254.53836060 446.78036499]
[-265.77383423 456.71838379]
[-277.00927734 466.65640259]
[-288.24475098 476.59445190]
[-299.48019409 486.53247070]
[-310.71566772 496.47048950]
[-315.92617798 511.40908813]
[-330.58554077 514.04583740]
[-341.82101440 523.98388672]
[-353.05645752 533.92193604]
[-364.29193115 543.85992432]
[-375.52740479 553.79797363]
[-370.61318970 595.43774414]
[-377.53189087 608.74682617]
[-377.03207397 624.56011963]
[-389.76754761 632.28387451]
[-396.68624878 645.59295654]
[-403.60494995 658.90203857]
[-410.52362061 672.21112061]
[-400.53106689 674.33215332]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 32]
[3 31]
[4 30]
[5 29]
[6 28]
[12 24]
[13 23]
[14 22]
[35 48]
[36 47]
[37 46]
[38 45]
[49 306]
[50 305]
[51 304]
[52 303]
[54 301]
[55 300]
[63 91]
[64 90]
[65 89]
[66 88]
[67 87]
[68 86]
[72 82]
[73 81]
[74 80]
[92 299]
[93 298]
[94 297]
[95 296]
[96 295]
[98 293]
[99 292]
[100 291]
[101 290]
[102 289]
[103 288]
[107 284]
[108 283]
[109 282]
[111 280]
[112 279]
[113 278]
[114 277]
[115 276]
[116 275]
[119 272]
[122 269]
[123 268]
[125 266]
[126 265]
[127 264]
[128 263]
[134 250]
[135 249]
[136 248]
[137 247]
[138 246]
[139 245]
[140 244]
[147 161]
[148 160]
[149 159]
[164 185]
[165 184]
[166 183]
[167 182]
[168 181]
[171 178]
[172 177]
[195 241]
[196 240]
[197 239]
[198 237]
[199 236]
[200 235]
[201 234]
[203 232]
[204 231]
[205 230]
[207 228]
[210 227]
[211 226]
[213 225]
[214 224]
[215 223]
[216 222]
[251 262]
[252 261]
[253 260]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
