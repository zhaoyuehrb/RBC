%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:58:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGACCCCCAGGGGGCGCCGGAAGGGGCGCGCCGGGCGGUCGGCGGCGGCCGUUGGCGAGCUGAGGCCUGCCAGGCGAAGUCUGGAGACCAGCCGGGCCGCGGCCGCA\
) } def
/len { sequence length } bind def

/coor [
[-32.85721588 170.91427612]
[-47.45916748 167.50270081]
[-58.31978226 157.30894470]
[-72.63812256 161.77941895]
[-86.95645905 166.24990845]
[-101.27479553 170.72039795]
[-115.52722168 175.39674377]
[-129.71078491 180.27799988]
[-143.89434814 185.15924072]
[-148.68618774 190.06758118]
[-154.38914490 191.48464966]
[-159.03793335 189.88739014]
[-173.47915649 193.94338989]
[-184.67308044 205.12402344]
[-199.01840210 201.11640930]
[-213.45962524 205.17240906]
[-227.90083313 209.22840881]
[-242.34205627 213.28440857]
[-256.78329468 217.34040833]
[-264.30096436 231.24220276]
[-279.47048950 235.67631531]
[-293.29202271 228.01206970]
[-297.56549072 212.79652405]
[-289.75555420 199.05679321]
[-274.49566650 194.94441223]
[-260.83929443 202.89920044]
[-246.39805603 198.84320068]
[-231.95683289 194.78718567]
[-217.51562500 190.73118591]
[-203.07440186 186.67518616]
[-192.91340637 175.78466797]
[-177.53515625 179.50216675]
[-163.09393311 175.44616699]
[-148.77558899 170.97569275]
[-134.59204102 166.09443665]
[-120.40847778 161.21318054]
[-115.02633667 155.98133850]
[-105.74527740 156.40205383]
[-91.42694092 151.93156433]
[-77.10860443 147.46109009]
[-62.79026413 142.99060059]
[-59.65901184 128.42829895]
[-49.59214783 117.31459808]
[-35.21906662 112.70148468]
[-20.36924171 115.92321014]
[-9.05201054 126.21240234]
[5.26632690 121.74192047]
[19.58466530 117.27143860]
[33.90299988 112.80095673]
[48.22134018 108.33047485]
[62.53967667 103.85999298]
[76.85801697 99.38951111]
[91.17635345 94.91902924]
[97.43052673 89.62557983]
[105.97210693 90.53245544]
[120.41333008 86.47645569]
[134.85455322 82.42045593]
[143.06579590 67.05688477]
[159.50424194 62.40307999]
[173.97035217 70.84422302]
[188.28869629 66.37374115]
[202.60702515 61.90325546]
[216.92536926 57.43277359]
[224.31829834 51.80607986]
[231.72113037 53.04620361]
[238.77571106 42.12982178]
[251.00199890 39.10622787]
[261.62869263 45.08214951]
[276.18081665 41.44400024]
[283.88562012 36.25257874]
[291.20471191 37.91713333]
[305.85562134 34.69985580]
[320.50653076 31.48257828]
[335.15744019 28.26530266]
[349.80834961 25.04802704]
[364.45925903 21.83074951]
[378.63290405 12.52786732]
[391.49588013 23.57232285]
[384.44387817 38.99002457]
[367.67651367 36.48165894]
[353.02560425 39.69893646]
[338.37469482 42.91621017]
[323.72378540 46.13348770]
[309.07287598 49.35076523]
[294.42196655 52.56804276]
[279.81893921 55.99610901]
[265.26684570 59.63425827]
[253.42350769 72.49563599]
[235.77713013 67.48742676]
[221.39585876 71.75110626]
[207.07751465 76.22159576]
[192.75917053 80.69207764]
[178.44084167 85.16255951]
[174.06520081 97.37574768]
[163.26597595 104.91209412]
[149.90200806 104.80269623]
[138.91055298 96.86167908]
[124.46932983 100.91767883]
[110.02810669 104.97367859]
[95.64683533 109.23736572]
[81.32849884 113.70784760]
[67.01016235 118.17832947]
[52.69182205 122.64881134]
[38.37348557 127.11929321]
[24.05514717 131.58978271]
[9.73680973 136.06025696]
[-4.58152771 140.53074646]
[-8.03398132 155.43133545]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 41]
[4 40]
[5 39]
[6 38]
[7 36]
[8 35]
[9 34]
[12 33]
[13 32]
[15 30]
[16 29]
[17 28]
[18 27]
[19 26]
[46 107]
[47 106]
[48 105]
[49 104]
[50 103]
[51 102]
[52 101]
[53 100]
[55 99]
[56 98]
[57 97]
[60 93]
[61 92]
[62 91]
[63 90]
[65 89]
[68 87]
[69 86]
[71 85]
[72 84]
[73 83]
[74 82]
[75 81]
[76 80]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
