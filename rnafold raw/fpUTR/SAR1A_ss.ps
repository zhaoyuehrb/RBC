%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:14:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGGGGUGUGACGUACAUCCGGCGAGUAGCUGGCGGUCCCGGGUGCUGCUGGUUAGUGUGCUCUGAGGGAGGGUCCGAGCCAGCCGCUGUUUUGCCGGAGGAGCCCCUCAGGCCGGCUGCUUCCAACCUUCAAUUUGUAAAAAAACCAGAAAACCUCAGGAUCCACAAAGUAUCAUCAAAUGAGGUAGUAAGCAUUAAUA\
) } def
/len { sequence length } bind def

/coor [
[112.62958527 198.08871460]
[113.10833740 190.73162842]
[114.75070953 183.53898621]
[117.51659393 176.69378662]
[121.33727264 170.37043762]
[126.11711884 164.73030090]
[131.73600769 159.91766357]
[125.04993439 146.49020386]
[118.36386108 133.06275940]
[111.67778778 119.63530731]
[113.48177338 134.52644348]
[103.70439911 145.90197754]
[88.71127319 146.35583496]
[78.26372528 135.59252930]
[79.16369629 120.61955261]
[90.82481384 111.18524933]
[76.67749786 116.17057037]
[62.53018188 121.15589142]
[48.38286591 126.14121246]
[34.23554611 131.12654114]
[20.08823013 136.11186218]
[6.05983925 141.42262268]
[-7.84214211 147.05599976]
[-21.74412346 152.68937683]
[-35.64610672 158.32275391]
[-49.54808807 163.95611572]
[-56.33090210 170.08274841]
[-63.70778275 169.56738281]
[-77.69486237 174.98600769]
[-91.68194580 180.40463257]
[-105.66902924 185.82325745]
[-115.74227142 198.02328491]
[-130.40513611 195.40608215]
[-144.39222717 200.82470703]
[-158.37930298 206.24333191]
[-172.36639404 211.66195679]
[-180.13578796 225.69819641]
[-195.97731018 228.23310852]
[-207.73869324 217.32212830]
[-206.39761353 201.33522034]
[-192.98281860 192.53617859]
[-177.78501892 197.67486572]
[-163.79792786 192.25624084]
[-149.81085205 186.83761597]
[-135.82376099 181.41899109]
[-126.75096893 169.60655212]
[-111.08765411 171.83618164]
[-97.10057068 166.41755676]
[-83.11348724 160.99893188]
[-69.12640381 155.58030701]
[-55.18146133 150.05413818]
[-41.27947998 144.42076111]
[-27.37749863 138.78738403]
[-13.47551632 133.15402222]
[0.42646483 127.52064514]
[2.13056421 124.42783356]
[5.42020416 122.00880432]
[9.96140480 121.00104523]
[15.10290909 121.96454620]
[29.25022507 116.97921753]
[43.39754105 111.99389648]
[57.54485703 107.00857544]
[71.69217682 102.02325439]
[85.83949280 97.03793335]
[96.60816956 86.59592438]
[102.02679443 72.60884094]
[107.44541931 58.62175751]
[112.86404419 44.63467407]
[118.28266907 30.64758873]
[123.70129395 16.66050529]
[129.11991882 2.67342257]
[132.10289001 -12.02698135]
[132.56481934 -27.01986694]
[133.02674866 -42.01275253]
[133.48867798 -57.00563812]
[133.95059204 -71.99852753]
[134.41252136 -86.99140930]
[123.86598206 -98.45475006]
[124.54801941 -113.65309143]
[135.54156494 -123.63696289]
[136.00347900 -138.62985229]
[136.46540833 -153.62272644]
[129.15675354 -167.65463257]
[137.28233337 -180.13758850]
[137.74424744 -195.13047791]
[138.20617676 -210.12336731]
[138.66810608 -225.11625671]
[139.13003540 -240.10914612]
[139.59194946 -255.10202026]
[128.69525146 -244.79368591]
[113.73011780 -243.77157593]
[101.53304291 -252.50262451]
[97.67599487 -266.99826050]
[103.92097473 -280.63644409]
[117.41511536 -287.18688965]
[131.99389648 -283.65716553]
[140.99766541 -271.65866089]
[143.07000732 -286.51483154]
[145.14234924 -301.37097168]
[139.38583374 -316.10778809]
[148.80729675 -327.64404297]
[150.87963867 -342.50018311]
[152.95198059 -357.35635376]
[155.02432251 -372.21252441]
[148.36737061 -387.19973755]
[158.23565674 -400.29739380]
[174.47753906 -398.03176880]
[180.38476562 -382.73348999]
[169.88047791 -370.14016724]
[167.80813599 -355.28399658]
[165.73579407 -340.42785645]
[163.66345215 -325.57168579]
[169.56819153 -311.89752197]
[159.99850464 -299.29864502]
[157.92616272 -284.44247437]
[155.85382080 -269.58633423]
[154.58483887 -254.64009094]
[154.12290955 -239.64721680]
[153.66099548 -224.65432739]
[153.19906616 -209.66143799]
[152.73713684 -194.66854858]
[152.27520752 -179.67567444]
[159.61691284 -166.71615601]
[151.45829773 -153.16081238]
[150.99636841 -138.16792297]
[150.53443909 -123.17503357]
[160.89251709 -112.53332520]
[160.63763428 -97.32183075]
[149.40541077 -86.52948761]
[148.94348145 -71.53659821]
[148.48155212 -56.54371262]
[148.01963806 -41.55082703]
[147.55770874 -26.55794144]
[147.09577942 -11.56505489]
[152.93888855 -6.86312675]
[164.62509155 2.54073048]
[170.46820068 7.24265909]
[185.01515198 3.58395314]
[199.56210327 -0.07475264]
[214.10905457 -3.73345852]
[218.93466187 -18.38668823]
[230.93072510 -28.08709908]
[246.26934814 -29.73932266]
[260.05606079 -22.81614113]
[267.89154053 -9.52671719]
[267.27551270 5.88834333]
[258.40457153 18.51014900]
[244.10940552 24.31112862]
[228.95152283 21.44021225]
[217.76776123 10.81349564]
[203.22080994 14.47220135]
[188.67385864 18.13090706]
[174.12690735 21.78961372]
[163.95417786 21.57777214]
[155.06517029 18.88752365]
[147.98571777 14.19850349]
[143.10700989 8.09204769]
[137.68838501 22.07913017]
[132.26976013 36.06621552]
[126.85112762 50.05329895]
[121.43250275 64.04038239]
[116.01387787 78.02746582]
[110.59525299 92.01454926]
[125.10523224 112.94923401]
[131.79130554 126.37668610]
[138.47738647 139.80413818]
[145.16346741 153.23158264]
[168.99382019 152.39891052]
[190.03364563 163.48585510]
[202.75190735 183.50744629]
[203.84016418 207.13929749]
[193.07302856 228.13351440]
[207.75267029 234.03427124]
[209.70372009 248.80053711]
[219.10757446 260.48675537]
[228.51142883 272.17294312]
[237.91529846 283.85916138]
[245.73797607 288.58651733]
[247.37231445 295.79849243]
[256.59509277 307.62814331]
[271.98873901 313.28213501]
[274.52206421 329.48443604]
[261.58898926 339.56750488]
[246.49397278 333.15872192]
[244.76545715 316.85092163]
[235.54267883 305.02130127]
[226.22908020 293.26300049]
[216.82522583 281.57681274]
[207.42137146 269.89059448]
[198.01751709 258.20437622]
[184.01049805 253.13951111]
[181.38682556 237.53736877]
[174.76988220 240.63520813]
[167.73997498 242.64411926]
[160.47514343 243.51155090]
[153.15966797 243.21383667]
[145.97932434 241.75694275]
[139.11676025 239.17625427]
[132.74679565 235.53576660]
[127.03193665 230.92652893]
[122.11832428 225.46426392]
[118.13191223 219.28660583]
[115.17528534 212.54951477]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 167]
[8 166]
[9 165]
[10 164]
[16 64]
[17 63]
[18 62]
[19 61]
[20 60]
[21 59]
[22 55]
[23 54]
[24 53]
[25 52]
[26 51]
[28 50]
[29 49]
[30 48]
[31 47]
[33 45]
[34 44]
[35 43]
[36 42]
[65 163]
[66 162]
[67 161]
[68 160]
[69 159]
[70 158]
[71 157]
[72 134]
[73 133]
[74 132]
[75 131]
[76 130]
[77 129]
[80 126]
[81 125]
[82 124]
[84 122]
[85 121]
[86 120]
[87 119]
[88 118]
[89 117]
[97 116]
[98 115]
[99 114]
[101 112]
[102 111]
[103 110]
[104 109]
[137 153]
[138 152]
[139 151]
[140 150]
[172 192]
[174 190]
[175 189]
[176 188]
[177 187]
[179 186]
[180 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
