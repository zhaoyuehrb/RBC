%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:17:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGAAUAAACUUACCAUUUAUAUAAAAGGGCUACUGGACUGAUACACAGCUGAAAACCCUCAGUUCUGGACUGAACUCCCAGCAGGUGUGGAGUUGCAAGAGCUCUGGAAAAG\
) } def
/len { sequence length } bind def

/coor [
[28.65378380 399.15621948]
[18.98807144 410.67773438]
[7.46839190 420.34561157]
[-5.55518389 427.86608887]
[-19.68688393 433.01062012]
[-34.49726486 435.62286377]
[-49.53625107 435.62344360]
[-64.34682465 433.01229858]
[-78.47891998 427.86886597]
[-91.50305939 420.34936523]
[-103.02346802 410.68234253]
[-112.69005585 399.16156006]
[-120.20905304 386.13714600]
[-125.35198212 372.00485229]
[-127.96253967 357.19418335]
[-127.96140289 342.15518188]
[-125.34860229 327.34490967]
[-120.20354462 313.21340942]
[-112.68257141 300.19012451]
[-103.01424408 288.67080688]
[-91.49237823 279.00552368]
[-78.46709442 271.48800659]
[-64.33422852 266.34667969]
[-49.52325439 263.73779297]
[-34.48426819 263.74063110]
[-19.67428398 266.35510254]
[-5.54336166 271.50177002]
[1.95663822 258.51141357]
[9.45663834 245.52101135]
[16.95663834 232.53063965]
[24.45663834 219.54025269]
[31.95663834 206.54988098]
[27.86557198 192.27406311]
[35.28658676 178.99313354]
[50.28810883 174.79884338]
[57.78810883 161.80845642]
[65.10840607 148.71597290]
[72.24761963 135.52386475]
[79.38683319 122.33175659]
[86.52603912 109.13964844]
[83.88074493 97.70864105]
[89.60672760 87.46761322]
[100.73030090 83.73508453]
[108.23030090 70.74470520]
[115.73030090 57.75432205]
[123.23030090 44.76394272]
[130.73030090 31.77356148]
[130.24542236 13.43017769]
[145.64799500 5.14467716]
[152.78720093 -8.04742908]
[159.92642212 -21.23953629]
[167.06562805 -34.43164062]
[158.49371338 -44.68157578]
[153.96707153 -57.21910858]
[154.01380920 -70.51653290]
[158.60621643 -82.96156311]
[167.16674805 -93.05284119]
[178.64059448 -99.58103180]
[191.62556458 -101.77375031]
[204.54356384 -99.38687134]
[212.39865112 -112.16566467]
[220.25373840 -124.94445038]
[228.10884094 -137.72323608]
[235.96392822 -150.50202942]
[243.81903076 -163.28082275]
[246.96255493 -179.94079590]
[263.84167480 -181.53205872]
[270.04333496 -165.75309753]
[256.59780884 -155.42573547]
[248.74272156 -142.64694214]
[240.88763428 -129.86814880]
[233.03253174 -117.08935547]
[225.17744446 -104.31056976]
[217.32234192 -91.53177643]
[226.82736206 -77.70616913]
[229.40916443 -61.07283783]
[224.51060486 -44.91165161]
[213.05433655 -32.43020630]
[197.26942444 -26.12723351]
[180.25773621 -27.29243088]
[173.11851501 -14.10032463]
[165.97930908 -0.90821844]
[158.84010315 12.28388786]
[161.98887634 24.05306625]
[156.03424072 35.14110184]
[143.72067261 39.27355957]
[136.22067261 52.26394272]
[128.72067261 65.25432587]
[121.22068024 78.24470520]
[113.72068024 91.23508453]
[114.21084595 107.94560242]
[99.71814728 116.27886200]
[92.57893372 129.47096252]
[85.43972778 142.66307068]
[78.30051422 155.85517883]
[76.93305206 165.03022766]
[70.77848816 169.30845642]
[63.27848816 182.29884338]
[67.14688873 197.38768005]
[59.35576630 210.45494080]
[44.94701767 214.04988098]
[37.44701767 227.04025269]
[29.94701958 240.03063965]
[22.44701958 253.02101135]
[14.94701958 266.01141357]
[7.44701910 279.00177002]
[18.96962166 288.66619873]
[28.63881874 300.18478394]
[36.16077423 313.20748901]
[41.30690384 327.33862305]
[43.92082214 342.14868164]
[43.92309570 357.18768311]
[41.31365585 371.99856567]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 106]
[28 105]
[29 104]
[30 103]
[31 102]
[32 101]
[35 98]
[36 97]
[37 95]
[38 94]
[39 93]
[40 92]
[43 90]
[44 89]
[45 88]
[46 87]
[47 86]
[49 83]
[50 82]
[51 81]
[52 80]
[60 74]
[61 73]
[62 72]
[63 71]
[64 70]
[65 69]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
