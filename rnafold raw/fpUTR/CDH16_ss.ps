%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:51:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCCUGCUGCUGUGGGCCCAGUGGCCUUUUCCACUCCUGAGCAAGCGUGGCUGAACCCUCCUACCUGCUCAAGUGCCCUGCCUUGCCCCACCCAGCCCAGCCUGGCCAGAGCCCCCUGGAGAAGGAGCUCUCUUCUUGCUUGGCAGCUGGACCAAGGGAGCCAGUCUUGGGCGCUGGAGGGCCUGUCCUGACC\
) } def
/len { sequence length } bind def

/coor [
[54.27078629 345.95770264]
[45.46846771 333.81182861]
[40.48985291 347.96151733]
[35.51123428 362.11120605]
[30.53261566 376.26086426]
[25.55399704 390.41055298]
[20.57538033 404.56021118]
[15.59676170 418.70989990]
[19.14791489 434.71994019]
[6.87721539 445.59936523]
[-8.59229469 440.15637207]
[-11.34690762 423.99023438]
[1.44708478 413.73129272]
[6.42570257 399.58160400]
[11.40432072 385.43191528]
[16.38293839 371.28225708]
[21.36155510 357.13256836]
[26.34017372 342.98291016]
[31.31879234 328.83322144]
[35.72362137 314.49453735]
[39.54751968 299.99014282]
[43.37141800 285.48574829]
[42.03482056 278.20672607]
[47.37551498 270.77944946]
[51.43258286 256.33850098]
[55.48965073 241.89759827]
[46.62563705 233.58082581]
[42.11700439 222.21540833]
[42.87815475 209.93971252]
[48.82571411 199.09164429]
[58.88271332 191.76341248]
[71.17312622 189.39805603]
[75.69331360 175.09532166]
[74.70995331 167.76023865]
[80.40324402 160.59965515]
[85.15326691 146.37159729]
[89.90328979 132.14355469]
[94.65330505 117.91551208]
[87.25819397 104.86513519]
[72.61157227 101.62837219]
[57.96495819 98.39160919]
[43.31834412 95.15484619]
[28.67172623 91.91808319]
[14.02511024 88.68132019]
[4.95663643 89.88562775]
[-0.83049536 85.27263641]
[-9.91719341 86.33069611]
[-15.62925911 81.62506866]
[-30.16399765 77.91812897]
[-44.69873428 74.21119690]
[-59.23347473 70.50425720]
[-72.71363831 78.30957031]
[-87.40112305 74.34315491]
[-94.75922394 61.44377899]
[-110.39219666 66.39778137]
[-122.31481934 55.13797379]
[-118.26210785 39.24748611]
[-102.40315247 35.07308578]
[-91.05228424 46.90904236]
[-78.41507721 39.10926056]
[-63.62197876 42.66156769]
[-55.52653885 55.96952057]
[-40.99179840 59.67645645]
[-26.45705986 63.38339233]
[-11.92232227 67.09033203]
[2.64180493 70.68006134]
[17.26187325 74.03470612]
[31.90848923 77.27146912]
[46.55510712 80.50823212]
[61.20172119 83.74499512]
[75.84833527 86.98175812]
[90.49495697 90.21852112]
[105.05908203 86.62878418]
[116.52381897 76.95615387]
[127.98855591 67.28351593]
[139.45329285 57.61088562]
[150.91802979 47.93825150]
[162.38276672 38.26561737]
[173.84748840 28.59298515]
[179.68800354 11.13609695]
[197.06196594 8.70440674]
[202.38096619 -6.19588947]
[217.05911255 -8.72602558]
[228.36653137 -18.58209991]
[233.68551636 -33.48239899]
[248.36366272 -36.01253128]
[259.67108154 -45.86860657]
[270.89874268 -55.81544876]
[282.04592896 -65.85240936]
[293.19308472 -75.88936615]
[293.16500854 -95.96875763]
[307.67459106 -109.40414429]
[327.08489990 -107.88223267]
[337.73416138 -118.44602966]
[348.38339233 -129.00982666]
[359.03262329 -139.57362366]
[369.68185425 -150.13742065]
[369.09741211 -161.01551819]
[374.49182129 -170.22613525]
[383.87118530 -174.84344482]
[394.02450562 -173.55630493]
[405.00854492 -183.77154541]
[415.99255371 -193.98678589]
[420.82876587 -209.05070496]
[435.41778564 -212.05239868]
[446.40182495 -222.26763916]
[457.38583374 -232.48286438]
[462.27932739 -255.15321350]
[484.29931641 -259.53109741]
[494.42572021 -270.59704590]
[504.55215454 -281.66302490]
[514.67858887 -292.72897339]
[524.80499268 -303.79495239]
[525.01641846 -316.70010376]
[533.68969727 -325.70959473]
[545.77679443 -326.36672974]
[556.08020020 -337.26809692]
[566.38354492 -348.16949463]
[567.37042236 -364.18215942]
[580.58715820 -373.27600098]
[595.89495850 -368.47500610]
[601.55108643 -353.46206665]
[593.21655273 -339.75384521]
[577.28497314 -337.86611938]
[566.98156738 -326.96472168]
[556.67816162 -316.06332397]
[553.54888916 -298.80136108]
[535.87097168 -293.66851807]
[525.74456787 -282.60253906]
[515.61810303 -271.53659058]
[505.49169922 -260.47064209]
[495.36526489 -249.40467834]
[497.45410156 -242.57954407]
[497.03622437 -235.38589478]
[494.11651611 -228.72366333]
[489.01568604 -223.44274902]
[482.33584595 -220.23468018]
[474.88958740 -219.54220581]
[467.60107422 -221.49884033]
[456.61703491 -211.28359985]
[445.63302612 -201.06835938]
[441.58245850 -186.73510742]
[426.20779419 -183.00276184]
[415.22378540 -172.78752136]
[404.23974609 -162.57228088]
[399.94445801 -143.72714233]
[380.24563599 -139.48817444]
[369.59640503 -128.92437744]
[358.94717407 -118.36058807]
[348.29794312 -107.79679108]
[337.64871216 -97.23299408]
[340.37832642 -87.31378174]
[338.72448730 -77.07775879]
[332.92019653 -68.38843536]
[323.96020508 -62.85593414]
[313.43099976 -61.53883362]
[303.23004150 -64.74219513]
[292.08288574 -54.70523453]
[280.93569946 -44.66827393]
[278.06472778 -37.84712219]
[269.52716064 -34.56118774]
[258.21972656 -24.70511055]
[253.70951843 -10.50978661]
[238.22259521 -7.27467871]
[226.91517639 2.58139634]
[222.40496826 16.77672005]
[206.91804504 20.01182938]
[205.77476501 32.06263351]
[196.42333984 40.36614227]
[183.52012634 40.05772018]
[172.05538940 49.73035431]
[160.59065247 59.40298843]
[149.12591553 69.07562256]
[137.66117859 78.74825287]
[126.19644928 88.42089081]
[114.73171234 98.09352112]
[108.88135529 122.66552734]
[104.13133240 136.89356995]
[99.38130951 151.12162781]
[94.63129425 165.34967041]
[89.99604034 179.61552429]
[85.47585297 193.91824341]
[96.67937469 208.16040039]
[97.09761810 226.11909485]
[86.75177765 240.61164856]
[69.93057251 245.95466614]
[65.87350464 260.39556885]
[61.81643295 274.83651733]
[57.87582397 289.30963135]
[54.05192566 303.81405640]
[50.22802734 318.31845093]
[64.33102417 313.20910645]
[77.20444489 320.90814209]
[79.37537384 335.75021362]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 19]
[3 18]
[4 17]
[5 16]
[6 15]
[7 14]
[8 13]
[20 191]
[21 190]
[22 189]
[24 188]
[25 187]
[26 186]
[32 182]
[33 181]
[35 180]
[36 179]
[37 178]
[38 177]
[39 72]
[40 71]
[41 70]
[42 69]
[43 68]
[44 67]
[46 66]
[48 65]
[49 64]
[50 63]
[51 62]
[54 59]
[73 176]
[74 175]
[75 174]
[76 173]
[77 172]
[78 171]
[79 170]
[81 167]
[83 165]
[84 164]
[86 162]
[87 161]
[88 159]
[89 158]
[90 157]
[93 151]
[94 150]
[95 149]
[96 148]
[97 147]
[101 145]
[102 144]
[103 143]
[105 141]
[106 140]
[107 139]
[109 132]
[110 131]
[111 130]
[112 129]
[113 128]
[116 126]
[117 125]
[118 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
