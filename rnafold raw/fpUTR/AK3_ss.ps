%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:28:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGUGCGCCGGGGUAGCCGAGAGGCGGACGCAACAGCGGGGUCCCGCGCUGUCUGGGCGGCCCCAGGGGCUGUCGGCUCACUUCCGGGAACGCCGGGGAACCGCAGUAGCCGCCUGCUAGUGGCGCUGCUAGCCGGCCGGCGCAGGCUGCCGAGCGGGUGAGCGCGCAGGCCAGGCCAAAGCCCUGGUACCCGCGCGGUGCGGGCCUCAGUCUGCGGCC\
) } def
/len { sequence length } bind def

/coor [
[161.32948303 342.59082031]
[168.51242065 331.20315552]
[156.99150085 321.76293945]
[159.71318054 306.17758179]
[154.73762512 292.02682495]
[149.76206970 277.87606812]
[144.78652954 263.72531128]
[140.95205688 260.89157104]
[138.85203552 255.62260437]
[139.87626648 249.10523987]
[135.30133057 234.81993103]
[130.72640991 220.53462219]
[126.15149689 206.24931335]
[121.57657623 191.96400452]
[117.00165558 177.67869568]
[112.42673492 163.39338684]
[107.85181427 149.10807800]
[74.61088562 154.48419189]
[39.54664612 136.24626160]
[30.32468033 148.07653809]
[21.10271454 159.90681458]
[19.37532425 176.21472168]
[4.28074455 182.62454224]
[-8.65301514 172.54238892]
[-6.12081146 156.33992004]
[9.27244186 150.68484497]
[18.49440575 138.85456848]
[27.71637154 127.02429962]
[23.53313637 120.79930878]
[14.27772903 132.60343933]
[0.19132268 127.44851685]
[0.74118739 112.45860291]
[15.16666794 108.34931946]
[10.98343372 102.12432861]
[-3.45411158 106.19338989]
[-17.86263657 110.36405182]
[-32.24142838 114.63610077]
[-46.62021637 118.90814209]
[-60.99900818 123.18019104]
[-75.37779999 127.45223999]
[-89.75658417 131.72428894]
[-100.78163147 143.07148743]
[-115.18542480 139.27938843]
[-126.06513977 151.54983521]
[-142.07508850 147.99830627]
[-146.74562073 132.27832031]
[-135.27207947 120.56124115]
[-119.45747375 124.90059662]
[-109.46089935 113.85896301]
[-94.02863312 117.34549713]
[-79.64984894 113.07344818]
[-65.27105713 108.80139923]
[-50.89226532 104.52935791]
[-36.51347351 100.25730896]
[-22.13468552 95.98526001]
[-16.62295341 91.07147980]
[-7.52317619 91.75584412]
[6.91436911 87.68678284]
[7.44255495 72.69608307]
[-6.67280293 67.62097931]
[-20.78816032 62.54587555]
[-34.90351868 57.47077179]
[-49.01887512 52.39566803]
[-63.13423538 47.32056427]
[-77.24958801 42.24546051]
[-91.36495209 37.17035675]
[-108.31567383 37.50109100]
[-113.32590485 21.30436707]
[-99.14912415 12.00623322]
[-86.28984833 23.05499840]
[-72.17448425 28.13010216]
[-58.05913162 33.20520782]
[-43.94377136 38.28031158]
[-29.82841492 43.35541534]
[-15.71305656 48.43051529]
[-1.59769928 53.50561905]
[12.51765823 58.58072281]
[21.90536690 46.88153839]
[13.89295864 34.20079041]
[-0.01953093 26.66732025]
[-0.27695382 11.77493954]
[-8.28936100 -0.90580714]
[-12.89543343 -3.32440662]
[-15.82556915 -6.90703392]
[-16.91696167 -10.82273293]
[-16.35924149 -14.29595566]
[-23.82872009 -27.30391121]
[-31.29819679 -40.31186676]
[-38.76767731 -53.31982040]
[-46.23715591 -66.32777405]
[-61.28602600 -71.88753510]
[-66.18504333 -87.16429138]
[-57.17609024 -100.43901825]
[-41.17007446 -101.52848816]
[-30.44543457 -89.59694672]
[-33.22919846 -73.79725647]
[-25.75972176 -60.78929901]
[-18.29024315 -47.78134537]
[-10.82076454 -34.77338791]
[-3.35128617 -21.76543427]
[4.39138508 -8.91821480]
[12.40379238 3.76253200]
[25.74318123 10.38899231]
[26.57370567 26.18838501]
[34.58611298 38.86913300]
[49.35413361 36.24128723]
[52.50036240 21.57495880]
[55.64659119 6.90862846]
[58.79282379 -7.75770140]
[61.93905258 -22.42403221]
[60.67956924 -31.46217155]
[65.23429108 -37.27413559]
[68.58681488 -51.89468765]
[71.93934631 -66.51523590]
[75.29187012 -81.13579559]
[78.64440155 -95.75634766]
[70.03818512 -109.01185608]
[73.40740967 -124.45283508]
[86.75317383 -132.91842651]
[102.15766907 -129.38613892]
[110.48168945 -115.95161438]
[106.78672791 -100.58532715]
[93.26495361 -92.40381622]
[89.91242981 -77.78326416]
[86.55989838 -63.16271210]
[83.20736694 -48.54216003]
[79.85484314 -33.92160797]
[76.60538483 -19.27780151]
[73.45915222 -4.61147165]
[70.31291962 10.05485821]
[67.16669464 24.72118950]
[64.02046204 39.38751984]
[101.25452423 36.44385529]
[130.81652832 52.46492767]
[144.99096680 78.80881500]
[159.36976624 74.53676605]
[173.74855042 70.26471710]
[188.09689331 65.89149475]
[202.41407776 61.41731262]
[216.73126221 56.94312668]
[231.04843140 52.46894455]
[241.91253662 40.96755600]
[256.36831665 44.55636597]
[270.68548584 40.08218384]
[285.00268555 35.60799789]
[299.31985474 31.13381577]
[304.06213379 26.54732704]
[309.58020020 25.23460388]
[314.10375977 26.74140358]
[328.54132080 22.67234039]
[342.97885132 18.60327530]
[357.38739014 14.43261528]
[371.76617432 10.16056728]
[386.14495850 5.88851976]
[395.02188110 -7.47485590]
[411.01632690 -8.72292709]
[421.85870361 3.10172033]
[419.23168945 18.92822838]
[405.15051270 26.61585426]
[390.41702271 20.26730919]
[376.03823853 24.53935814]
[361.65942383 28.81140518]
[356.14770508 33.72518158]
[347.04791260 33.04082108]
[332.61038208 37.10988617]
[318.17285156 41.17894745]
[303.79403687 45.45099640]
[289.47686768 49.92518234]
[275.15969849 54.39936447]
[260.84249878 58.87354660]
[251.00247192 70.05491638]
[235.52261353 66.78612518]
[221.20544434 71.26030731]
[206.88825989 75.73448944]
[192.57107544 80.20867920]
[187.12911987 85.19960785]
[178.02059937 84.64350891]
[163.64181519 88.91555786]
[149.26301575 93.18760681]
[149.42042542 105.55653381]
[146.52029419 117.58168030]
[140.74205017 128.51908875]
[132.44319153 137.69209290]
[122.13712311 144.53315735]
[126.71204376 158.81846619]
[131.28695679 173.10377502]
[135.86187744 187.38908386]
[140.43681335 201.67439270]
[145.01173401 215.95970154]
[149.58665466 230.24501038]
[154.16157532 244.53031921]
[158.93728638 258.74975586]
[163.91282654 272.90051270]
[168.88838196 287.05126953]
[173.86393738 301.20202637]
[185.74073792 311.65441895]
[182.66317749 326.22760010]
[198.57431030 333.50778198]
[204.18272400 349.72506714]
[196.47770691 364.67843628]
[208.50057983 374.96246338]
[205.62861633 389.57757568]
[210.80302429 403.65682983]
[215.97743225 417.73608398]
[221.15182495 431.81533813]
[226.32623291 445.89459229]
[231.50064087 459.97387695]
[236.67504883 474.05313110]
[249.61010742 484.13360596]
[247.07998657 500.33639526]
[231.68746948 505.99346924]
[219.26704407 495.28527832]
[222.59577942 479.22753906]
[217.42138672 465.14825439]
[212.24697876 451.06900024]
[207.07257080 436.98974609]
[201.89816284 422.91049194]
[196.72375488 408.83123779]
[191.54936218 394.75198364]
[179.89659119 385.47500610]
[182.39843750 369.85284424]
[170.06622314 366.13601685]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 197]
[4 195]
[5 194]
[6 193]
[7 192]
[10 191]
[11 190]
[12 189]
[13 188]
[14 187]
[15 186]
[16 185]
[17 184]
[19 28]
[20 27]
[21 26]
[34 58]
[35 57]
[36 55]
[37 54]
[38 53]
[39 52]
[40 51]
[41 50]
[43 48]
[59 77]
[60 76]
[61 75]
[62 74]
[63 73]
[64 72]
[65 71]
[66 70]
[78 105]
[79 104]
[81 102]
[82 101]
[86 100]
[87 99]
[88 98]
[89 97]
[90 96]
[106 132]
[107 131]
[108 130]
[109 129]
[110 128]
[112 127]
[113 126]
[114 125]
[115 124]
[116 123]
[135 179]
[136 178]
[137 177]
[138 175]
[139 174]
[140 173]
[141 172]
[143 170]
[144 169]
[145 168]
[146 167]
[149 166]
[150 165]
[151 164]
[152 162]
[153 161]
[154 160]
[200 221]
[202 219]
[203 218]
[204 217]
[205 216]
[206 215]
[207 214]
[208 213]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
