%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:47:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCGCGCCCCCGCGGCGGUGGGCGGGGUCCGGGGCGGGGCCGCAGGAGCAGUAGGUGUUAGCAGCUUGGUCGCGACAGGUGCGCUAGGUAGAGCGCCGGGACCUGUGACAGGGCUGGUAGCAGCGCAGAGGAAAGGCGGCUUUUAGCCAGGUAUUUCAGUGUCUGUAGACAAG\
) } def
/len { sequence length } bind def

/coor [
[83.92060089 167.43908691]
[85.80078125 152.55789185]
[87.68078613 137.67616272]
[80.23992157 136.73616028]
[79.52007294 152.54098511]
[66.22741699 159.26071167]
[58.30401993 171.99726868]
[50.38062286 184.73381042]
[42.45722198 197.47036743]
[34.53382111 210.20690918]
[26.72506332 223.01406860]
[19.03157425 235.89080811]
[11.33808422 248.76753235]
[8.40467834 265.46578979]
[-8.45304298 267.26956177]
[-14.85299969 251.56996155]
[-1.53864717 241.07405090]
[6.15484190 228.19731140]
[13.84833145 215.32058716]
[14.58223343 207.94108582]
[21.79726982 202.28352356]
[29.72067070 189.54696655]
[37.64406967 176.81040955]
[45.56747055 164.07386780]
[53.49086761 151.33731079]
[53.64398575 136.44349670]
[67.50337219 128.81277466]
[60.16062164 99.81441498]
[73.10198975 75.69984436]
[96.54293823 67.52500916]
[98.42293549 52.64329147]
[91.14009094 41.97147751]
[93.03363037 29.59674454]
[102.54518127 22.08911324]
[104.69201660 7.24353933]
[106.83885193 -7.60203552]
[108.71885681 -22.48375511]
[110.33140564 -37.39682770]
[111.94396210 -52.30989838]
[113.55651855 -67.22296906]
[115.16906738 -82.13603973]
[116.78162384 -97.04911041]
[118.39418030 -111.96218109]
[120.00672913 -126.87525177]
[105.40634918 -132.47361755]
[92.75521088 -141.64497375]
[82.90765381 -153.76284790]
[76.52687073 -168.00209045]
[74.04021454 -183.39492798]
[75.61060333 -198.89686584]
[81.12586212 -213.45748901]
[90.20668793 -226.09164429]
[102.23276520 -235.94613647]
[116.38510895 -242.35726929]
[131.70185852 -244.89562988]
[125.23274231 -259.33383179]
[134.07975769 -271.31628418]
[135.42434692 -286.25588989]
[136.76893616 -301.19552612]
[138.11352539 -316.13513184]
[139.45811462 -331.07473755]
[132.98899841 -345.51293945]
[141.83601379 -357.49539185]
[143.18060303 -372.43502808]
[144.52519226 -387.37463379]
[145.86978149 -402.31423950]
[147.21437073 -417.25384521]
[148.55895996 -432.19348145]
[142.08984375 -446.63165283]
[150.93685913 -458.61413574]
[152.28144836 -473.55374146]
[153.62603760 -488.49334717]
[151.39889526 -493.28817749]
[151.26956177 -497.98382568]
[152.84313965 -501.79058838]
[155.46643066 -504.19360352]
[157.61326599 -519.03918457]
[159.76010132 -533.88476562]
[161.90693665 -548.73034668]
[164.05377197 -563.57586670]
[166.20062256 -578.42144775]
[167.81317139 -593.33453369]
[168.88935852 -608.29589844]
[169.96556091 -623.25720215]
[171.04174805 -638.21856689]
[172.11793518 -653.17993164]
[161.58502197 -664.96264648]
[162.55220032 -680.73730469]
[174.44564819 -691.14508057]
[190.20921326 -690.01116943]
[200.49063110 -678.00836182]
[199.19013977 -662.25769043]
[187.07928467 -652.10369873]
[186.00309753 -637.14239502]
[184.92689514 -622.18103027]
[183.85070801 -607.21966553]
[182.77452087 -592.25836182]
[184.53994751 -590.04010010]
[185.51786804 -586.97729492]
[185.37782288 -583.37213135]
[183.90676880 -579.64184570]
[181.04618835 -576.27465820]
[178.89935303 -561.42907715]
[176.75251770 -546.58349609]
[174.60568237 -531.73791504]
[172.45884705 -516.89233398]
[170.31201172 -502.04675293]
[168.56565857 -487.14877319]
[167.22106934 -472.20913696]
[165.87648010 -457.26953125]
[172.44177246 -443.89993286]
[163.49858093 -430.84887695]
[162.15399170 -415.90927124]
[160.80940247 -400.96966553]
[159.46481323 -386.03002930]
[158.12022400 -371.09042358]
[156.77563477 -356.15081787]
[163.34091187 -342.78121948]
[154.39772034 -329.73016357]
[153.05313110 -314.79055786]
[151.70854187 -299.85092163]
[150.36395264 -284.91131592]
[149.01936340 -269.97171021]
[155.58465576 -256.60211182]
[146.64146423 -243.55104065]
[160.25798035 -238.82002258]
[172.34912109 -230.95428467]
[182.20568848 -220.40979004]
[189.24829102 -207.79972839]
[193.06130981 -193.85891724]
[193.41751099 -179.40095520]
[190.29153442 -165.27079773]
[183.86163330 -152.29528809]
[174.49957275 -141.23483276]
[162.74905396 -132.73884583]
[149.29423523 -127.30758667]
[134.91979980 -125.26269531]
[133.30725098 -110.34962463]
[131.69468689 -95.43655396]
[130.08213806 -80.52348328]
[128.46958923 -65.61041260]
[126.85703278 -50.69734192]
[125.24447632 -35.78427124]
[123.63192749 -20.87120247]
[125.89710236 -16.63212204]
[125.49996948 -10.92070103]
[121.68443298 -5.45519829]
[119.53759003 9.39037609]
[117.39075470 24.23595047]
[124.77679443 40.13920593]
[113.30465698 54.52328873]
[111.42465210 69.40500641]
[119.13652802 72.07189178]
[126.19656372 76.71050262]
[132.09616089 83.15254211]
[136.37252808 91.09804535]
[138.64271545 100.12836456]
[138.63391113 109.72789764]
[136.20770264 119.31352997]
[131.37646484 128.27000427]
[124.31024170 135.98915100]
[128.81726074 150.29602051]
[133.32427979 164.60290527]
[137.83129883 178.90977478]
[150.27833557 189.58702087]
[146.98954773 205.65301514]
[131.34817505 210.58042908]
[119.44470978 199.30036926]
[123.52442169 183.41679382]
[119.01740265 169.10992432]
[114.51038361 154.80303955]
[110.00336456 140.49617004]
[102.56250763 139.55616760]
[100.68250275 154.43788147]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 27]
[6 25]
[7 24]
[8 23]
[9 22]
[10 21]
[11 19]
[12 18]
[13 17]
[30 152]
[31 151]
[34 149]
[35 148]
[36 147]
[37 144]
[38 143]
[39 142]
[40 141]
[41 140]
[42 139]
[43 138]
[44 137]
[55 125]
[57 123]
[58 122]
[59 121]
[60 120]
[61 119]
[63 117]
[64 116]
[65 115]
[66 114]
[67 113]
[68 112]
[70 110]
[71 109]
[72 108]
[76 107]
[77 106]
[78 105]
[79 104]
[80 103]
[81 102]
[82 97]
[83 96]
[84 95]
[85 94]
[86 93]
[161 172]
[162 171]
[163 170]
[164 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
