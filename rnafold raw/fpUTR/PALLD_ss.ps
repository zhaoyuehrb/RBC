%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:44:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGACCACGGACCAGGCAGUCUCUAAUGAAUAGGCAAGGCCACAACCUCCAUUCUCCCAGAAAAGAAGAAAUGCUCAUCUGAAAUUCAUCACCUCUCUGGAGUCUUCAAACUGACCAAGCAUUGAAAAGAACACAGUUUCAGAAAACAGUUUCCAGUGCCUCUGGCCUUCCUACUGAAAGCAGACACAGAGUGCAUGAAGACCGUUCAAAU\
) } def
/len { sequence length } bind def

/coor [
[83.71551514 618.76947021]
[93.62783051 606.15496826]
[93.18332672 591.16156006]
[92.73883057 576.16815186]
[89.93981934 572.29931641]
[89.54096222 566.63122559]
[92.50996399 560.72528076]
[92.50996399 545.72528076]
[92.50996399 530.72528076]
[92.50996399 515.72528076]
[78.80980682 503.58273315]
[78.32846069 484.96276855]
[91.83840179 471.68051147]
[91.39389801 456.68710327]
[83.28284454 444.19470215]
[90.60780334 430.17129517]
[90.16329956 415.17788696]
[89.71880341 400.18447876]
[81.60774994 387.69207764]
[88.93270874 373.66867065]
[88.48820496 358.67526245]
[88.04370880 343.68185425]
[73.25551605 341.16998291]
[61.49192429 331.86312866]
[55.64520264 318.04949951]
[57.15287399 303.12545776]
[65.64424896 290.76034546]
[79.03157806 283.99429321]
[94.02336121 284.49087524]
[106.93359375 292.12802124]
[114.58769226 305.02661133]
[112.81359100 290.13189697]
[111.03949738 275.23718262]
[109.26539612 260.34246826]
[105.35317230 254.07287598]
[107.57705688 245.21409607]
[106.02386475 230.29473877]
[104.47068024 215.37536621]
[102.91748810 200.45599365]
[101.36430359 185.53662109]
[99.81111145 170.61724854]
[98.25792694 155.69787598]
[90.28208160 154.87121582]
[82.50746155 152.90841675]
[75.09503937 149.85009766]
[68.19828796 145.75959778]
[61.96001816 140.72160339]
[56.50939560 134.84043884]
[51.95927811 128.23788452]
[48.40387726 121.05063629]
[45.91681671 113.42752075]
[44.54958725 105.52637482]
[44.33050537 97.51080322]
[45.26409912 89.54677582]
[47.33103943 81.79918671]
[50.48853302 74.42845917]
[54.67119980 67.58721161]
[43.75494766 57.29957962]
[32.83869171 47.01194382]
[21.92244148 36.72431183]
[11.00618839 26.43667603]
[-6.70275831 30.33204842]
[-23.06125832 22.88211823]
[-31.59694862 7.24195576]
[-29.05748940 -10.23500252]
[-40.27380371 -20.19463539]
[-55.73032379 -23.57201004]
[-60.10981750 -37.80820847]
[-71.32613373 -47.76783752]
[-82.54244995 -57.72747040]
[-97.61573029 -54.54903412]
[-111.50793457 -60.78281021]
[-118.97730255 -73.84697723]
[-117.34128571 -88.62741852]
[-133.10098267 -87.44108582]
[-145.02899170 -97.80921936]
[-146.04862976 -113.58058167]
[-135.55497742 -125.39830780]
[-119.77371979 -126.25115204]
[-108.06759644 -115.63313293]
[-107.38165283 -99.84373474]
[-92.89845276 -103.21640015]
[-79.04254913 -97.34460449]
[-71.20944977 -84.28719330]
[-72.58281708 -68.94378662]
[-61.36650085 -58.98415375]
[-50.15018463 -49.02452087]
[-35.49593353 -46.35952759]
[-30.31417274 -31.41094971]
[-19.09785843 -21.45131874]
[-7.75929737 -25.78622055]
[4.41845608 -24.88392448]
[15.12009907 -18.85445213]
[22.28484917 -8.78845215]
[24.50319290 3.43961787]
[21.29382324 15.52042294]
[32.21007538 25.80805779]
[43.12632751 36.09569168]
[54.04257965 46.38332748]
[64.95883179 56.67096329]
[79.82447815 48.05544281]
[96.60817719 44.37820053]
[97.71856689 29.41935730]
[98.82896423 14.46051311]
[86.89845276 4.53869963]
[83.11099243 -10.50905132]
[88.92295074 -24.89657211]
[102.09951019 -33.09156799]
[117.57401276 -31.94289398]
[129.39619446 -21.89224052]
[133.02018738 -6.80428886]
[127.05249023 7.51933622]
[113.78781128 15.57090950]
[112.67741394 30.52975273]
[111.56701660 45.48859787]
[120.02531433 47.99734879]
[127.98166656 51.80959320]
[135.23663330 56.82976913]
[141.60835266 62.93204117]
[154.04943848 54.55234146]
[166.49052429 46.17263794]
[178.93161011 37.79293823]
[191.37269592 29.41323662]
[203.81378174 21.03353500]
[205.57911682 17.06837082]
[208.24591064 14.16301346]
[211.37045288 12.47069263]
[214.50485229 11.98485374]
[217.24946594 12.55161572]
[230.16511536 4.92364883]
[243.08076477 -2.70431805]
[248.87797546 -9.76235294]
[256.24481201 -10.34799385]
[269.27209473 -17.78373528]
[277.42181396 -31.34442902]
[292.31076050 -30.93381691]
[305.33801270 -38.36955643]
[318.36529541 -45.80529785]
[331.39257812 -53.24103928]
[339.19042969 -67.66758728]
[355.58850098 -67.85717010]
[363.71780396 -53.61476135]
[355.21566772 -39.59173203]
[338.82830811 -40.21377182]
[325.80102539 -32.77803040]
[312.77377319 -25.34228897]
[299.74649048 -17.90654755]
[292.52856445 -4.87770700]
[276.70782471 -4.75646591]
[263.68054199 2.67927527]
[250.70874023 10.21133614]
[237.79307556 17.83930206]
[224.87742615 25.46726990]
[212.19348145 33.47462082]
[199.75239563 41.85432053]
[187.31130981 50.23402405]
[174.87022400 58.61372375]
[162.42913818 66.99342346]
[149.98805237 75.37313080]
[155.72216797 99.42607117]
[150.48471069 123.59202576]
[135.30693054 143.11276245]
[113.17729187 154.14469910]
[114.73048401 169.06405640]
[116.28366852 183.98342896]
[117.83686066 198.90280151]
[119.39004517 213.82217407]
[120.94323730 228.74154663]
[122.49642181 243.66091919]
[124.16011047 258.56835938]
[125.93421173 273.46307373]
[127.70830536 288.35778809]
[129.48240662 303.25250244]
[137.39555359 315.99542236]
[149.95944214 324.18984985]
[162.52334595 332.38427734]
[178.91876221 332.73413086]
[186.57525635 347.23620605]
[177.61647034 360.97201538]
[161.25845337 359.81134033]
[154.32891846 344.94818115]
[141.76502991 336.75375366]
[129.20112610 328.55932617]
[122.66012573 332.22885132]
[129.99894714 345.31094360]
[116.91670990 352.64956665]
[109.57812500 339.56784058]
[103.03711700 343.23736572]
[103.48162079 358.23077393]
[103.92611694 373.22418213]
[112.06896973 386.78900146]
[104.71221924 399.73999023]
[105.15671539 414.73339844]
[105.60121918 429.72680664]
[113.74406433 443.29162598]
[106.38731384 456.24258423]
[106.83181000 471.23602295]
[116.90452576 477.54910278]
[122.62088013 487.83517456]
[122.66204834 499.48297119]
[117.13346863 509.59878540]
[107.50996399 515.72528076]
[107.50996399 530.72528076]
[107.50996399 545.72528076]
[107.50996399 560.72528076]
[107.73223877 575.72363281]
[108.17674255 590.71704102]
[108.62123871 605.71044922]
[119.26343536 617.71557617]
[116.37090302 633.49572754]
[102.16254425 640.94567871]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 208]
[3 207]
[4 206]
[7 205]
[8 204]
[9 203]
[10 202]
[13 197]
[14 196]
[16 194]
[17 193]
[18 192]
[20 190]
[21 189]
[22 188]
[31 173]
[32 172]
[33 171]
[34 170]
[36 169]
[37 168]
[38 167]
[39 166]
[40 165]
[41 164]
[42 163]
[57 100]
[58 99]
[59 98]
[60 97]
[61 96]
[65 90]
[66 89]
[68 87]
[69 86]
[70 85]
[74 81]
[102 115]
[103 114]
[104 113]
[119 159]
[120 158]
[121 157]
[122 156]
[123 155]
[124 154]
[129 153]
[130 152]
[131 151]
[133 150]
[134 149]
[136 147]
[137 146]
[138 145]
[139 144]
[174 183]
[175 182]
[176 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
