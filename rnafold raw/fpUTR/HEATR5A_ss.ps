%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:02:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGCCUCGCUGUCGCCGCCGCCGGCAAUUCCAGACUCUGCUAGGGUUAGCAGAGCAGCCGGUAACGUUGCUGGACCGGGACGCACGCUCAGCUGAGGAGGACCCCCAAAGAUUUUUAUUGUUAGGUAUAUUGACCAAAGUUUAACGAGAAGAACUGUGAUCAGCUGGGAGGAUUGCUGCAAGGA\
) } def
/len { sequence length } bind def

/coor [
[101.69305420 222.63311768]
[85.90904999 221.83264160]
[75.37623596 210.04978943]
[76.34354401 194.27513123]
[88.23708344 183.86749268]
[88.99681854 168.88673401]
[89.75656128 153.90599060]
[82.67381287 140.80316162]
[91.10015106 127.41259766]
[91.85988617 112.43184662]
[83.66467285 101.35588837]
[87.84387207 86.82913971]
[72.84600830 86.57579803]
[57.84815216 86.32245636]
[49.19297028 89.31161499]
[42.59969711 85.93605042]
[27.60825348 85.42943573]
[12.61681080 84.92282104]
[3.89025402 95.19972229]
[-8.97588634 98.51890564]
[-21.22065163 93.88388824]
[-28.44564819 83.19950867]
[-43.42639542 82.43976593]
[-58.40714264 81.68003082]
[-73.38789368 80.92029572]
[-88.36863708 80.16055298]
[-103.34938812 79.40081787]
[-118.33013153 78.64108276]
[-133.31088257 77.88134003]
[-151.72827148 88.80873871]
[-168.60391235 76.94705963]
[-183.60391235 76.94705963]
[-197.40408325 84.68435669]
[-210.13134766 76.94705963]
[-227.09248352 87.81474304]
[-243.42076111 77.48105621]
[-258.41220093 77.98767090]
[-273.40365601 78.49428558]
[-288.39508057 79.00089264]
[-303.38653564 79.50750732]
[-318.37796021 80.01412201]
[-333.36941528 80.52072906]
[-348.36087036 81.02734375]
[-361.98410034 90.15636444]
[-376.58035278 82.68094635]
[-377.13421631 66.29116058]
[-363.07592773 57.84740448]
[-348.86746216 66.03590393]
[-333.87603760 65.52928925]
[-318.88458252 65.02267456]
[-303.89315796 64.51606750]
[-288.90170288 64.00945282]
[-273.91024780 63.50284195]
[-258.91882324 62.99622726]
[-243.92736816 62.48961639]
[-237.63056946 54.40818024]
[-227.71321106 51.06779861]
[-217.38514709 53.80513382]
[-210.13134766 61.94705582]
[-197.40408325 54.20975494]
[-183.60391235 61.94705582]
[-168.60391235 61.94705582]
[-163.40789795 54.70062637]
[-155.33161926 50.60682678]
[-146.13973999 50.70257187]
[-137.90728760 55.09329605]
[-132.55114746 62.90059662]
[-117.57039642 63.66033173]
[-102.58964539 64.42006683]
[-87.60890198 65.17980957]
[-72.62815094 65.93954468]
[-57.64740753 66.69927979]
[-42.66666031 67.45902252]
[-27.68591118 68.21875763]
[-15.71159935 56.42370224]
[1.42614186 56.93801880]
[13.12342262 69.93138123]
[28.11486435 70.43799591]
[43.10630798 70.94460297]
[58.10149384 71.32460022]
[73.09935760 71.57794189]
[88.09721375 71.83128357]
[102.92424011 69.55986786]
[117.15844727 64.82833099]
[131.39265442 60.09680557]
[145.50242615 55.00620270]
[155.55140686 42.78619385]
[170.21943665 45.37424850]
[184.19572449 39.92784119]
[198.17201233 34.48143387]
[212.14830017 29.03502655]
[226.12458801 23.58861732]
[240.10089111 18.14221001]
[254.07717896 12.69580269]
[268.05346680 7.24939442]
[282.02975464 1.80298662]
[292.17916870 -9.24189854]
[296.42724609 -23.62778664]
[288.65515137 -37.38896942]
[292.97052002 -52.59269333]
[306.81307983 -60.21886063]
[321.97033691 -55.74299622]
[329.44973755 -41.82055664]
[324.81387329 -26.71147728]
[310.81314087 -19.37970543]
[306.56503296 -4.99381638]
[316.80737305 5.96496344]
[331.44723511 2.69775987]
[343.23077393 -7.85963583]
[357.33776855 -3.08027720]
[371.97760010 -6.34748077]
[379.69168091 -11.28107548]
[386.89227295 -9.54402637]
[401.58520508 -12.56350422]
[416.27816772 -15.58298206]
[430.97109985 -18.60245895]
[445.66406250 -21.62193680]
[457.62423706 -31.97880936]
[471.64849854 -26.96187210]
[486.34143066 -29.98134995]
[501.03439331 -33.00082779]
[515.72735596 -36.02030563]
[530.42028809 -39.03978348]
[545.11322021 -42.05926132]
[559.63439941 -45.81904984]
[573.94647217 -50.30949783]
[588.25854492 -54.79994202]
[595.35284424 -68.92251587]
[610.38146973 -73.81290436]
[624.42822266 -66.56972504]
[629.15942383 -51.49023056]
[621.76818848 -37.52081680]
[606.63952637 -32.94929123]
[592.74902344 -40.48785400]
[578.43695068 -35.99740982]
[564.12481689 -31.50696182]
[576.80712891 -23.49697113]
[580.26330566 -8.90058041]
[572.51959229 3.94599104]
[557.99841309 7.70587206]
[544.99316406 0.23173846]
[540.93121338 -14.20781994]
[548.13269043 -27.36631203]
[533.43975830 -24.34683418]
[518.74682617 -21.32735634]
[504.05386353 -18.30787849]
[489.36090088 -15.28840160]
[474.66796875 -12.26892376]
[463.75872803 -2.12802553]
[448.68353271 -6.92898846]
[433.99060059 -3.90951085]
[419.29763794 -0.89003295]
[404.60467529 2.12944484]
[389.91174316 5.14892244]
[375.24481201 8.29237556]
[360.60494995 11.55957890]
[349.86856079 21.88328171]
[334.71441650 17.33761597]
[320.07458496 20.60481834]
[300.66156006 25.30756569]
[287.47616577 15.77927494]
[273.49987793 21.22568321]
[259.52359009 26.67209053]
[245.54728699 32.11849976]
[231.57099915 37.56490707]
[217.59471130 43.01131439]
[203.61842346 48.45772171]
[189.64213562 53.90412903]
[175.66584778 59.35054016]
[166.61654663 71.18098450]
[150.94883728 68.98249054]
[149.20190430 72.06897736]
[145.86210632 74.45445251]
[141.27917480 75.39452362]
[136.12417603 74.33100891]
[121.88997650 79.06253815]
[107.65576935 83.79406738]
[116.38868713 99.69631195]
[106.84063721 113.19158173]
[106.08090210 128.17233276]
[113.10929871 142.34667969]
[104.73730469 154.66572571]
[103.97756958 169.64646912]
[103.21783447 184.62722778]
[113.99742889 196.18472290]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 184]
[6 183]
[7 182]
[9 180]
[10 179]
[12 82]
[13 81]
[14 80]
[16 79]
[17 78]
[18 77]
[22 74]
[23 73]
[24 72]
[25 71]
[26 70]
[27 69]
[28 68]
[29 67]
[31 62]
[32 61]
[34 59]
[36 55]
[37 54]
[38 53]
[39 52]
[40 51]
[41 50]
[42 49]
[43 48]
[83 177]
[84 176]
[85 175]
[86 171]
[88 169]
[89 168]
[90 167]
[91 166]
[92 165]
[93 164]
[94 163]
[95 162]
[96 161]
[97 106]
[98 105]
[107 159]
[108 158]
[110 156]
[111 155]
[113 154]
[114 153]
[115 152]
[116 151]
[117 150]
[119 148]
[120 147]
[121 146]
[122 145]
[123 144]
[124 143]
[125 136]
[126 135]
[127 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
