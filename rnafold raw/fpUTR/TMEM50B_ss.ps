%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:52:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGUGCACACGGCGCCUCGCCCCGCCUCACCGGCGCUCUAUCCUCGCGUCUGCUCCCAGCUCCGGGCUCCCGGGGCUGAGGUGGAGCCGCGGGACGCCGGCAGGGUUGUGGCGCAGCAGUCUCCUUCCUGCGCGCGCGCCUGAAGUCGGCGUGGGCGUUUGAGGAAGCUGGGAUACAGCAUUUAAUGAAAAAUUUAUGCUUAAGAAGUAAAA\
) } def
/len { sequence length } bind def

/coor [
[105.27893829 160.38438416]
[102.20497131 145.70272827]
[94.87425232 147.28718567]
[90.53314972 161.64527893]
[86.19205475 176.00337219]
[81.85095978 190.36148071]
[77.50985718 204.71957397]
[83.78752899 219.48338318]
[76.03231812 233.52748108]
[60.19337082 236.07839966]
[48.42096329 225.17932129]
[49.74588394 209.19107056]
[63.15176392 200.37846375]
[67.49285889 186.02037048]
[71.83396149 171.66227722]
[76.17505646 157.30418396]
[80.51615906 142.94609070]
[62.31959915 119.67938232]
[62.76659393 93.13711548]
[48.84603882 87.54978943]
[34.92548752 81.96247101]
[21.00493240 76.37514496]
[7.04374313 70.89015198]
[-8.61374092 73.16033936]
[-17.71710396 61.37144470]
[-31.71817780 55.98907471]
[-45.71925354 50.60670090]
[-59.72032547 45.22433090]
[-74.02127838 51.39852142]
[-88.14368439 45.74058151]
[-93.94169617 32.06875992]
[-107.94277191 26.68638992]
[-121.94384766 21.30401802]
[-135.94491577 15.92164803]
[-149.94599915 10.53927612]
[-163.94706726 5.15690517]
[-160.31819153 19.71132851]
[-169.31455994 31.71404839]
[-184.30253601 32.31462479]
[-194.23042297 21.07020950]
[-191.77772522 6.27209377]
[-178.75350952 -1.16799867]
[-192.32215881 -7.56265688]
[-205.89080811 -13.95731544]
[-214.98536682 -14.78451920]
[-219.61065674 -20.54673004]
[-233.08398438 -27.13988495]
[-246.55729675 -33.73303986]
[-260.03060913 -40.32619476]
[-275.82711792 -39.44216537]
[-283.85812378 -51.98616409]
[-297.33145142 -58.57931900]
[-313.12792969 -57.69528580]
[-321.15896606 -70.23928833]
[-336.95544434 -69.35525513]
[-344.98648071 -81.89925385]
[-358.45980835 -88.49240875]
[-371.98114014 -94.98648834]
[-385.54980469 -101.38114929]
[-399.11843872 -107.77581024]
[-412.68710327 -114.17046356]
[-426.25576782 -120.56512451]
[-439.82440186 -126.95978546]
[-453.39306641 -133.35444641]
[-466.96173096 -139.74909973]
[-480.53036499 -146.14375305]
[-496.81893921 -144.24263000]
[-506.39126587 -157.55815125]
[-499.40011597 -172.39244080]
[-483.03744507 -173.48526001]
[-474.13571167 -159.71240234]
[-460.56704712 -153.31774902]
[-446.99841309 -146.92309570]
[-433.42974854 -140.52844238]
[-419.86108398 -134.13377380]
[-406.29244995 -127.73912048]
[-392.72378540 -121.34445953]
[-379.15515137 -114.94979858]
[-365.58648682 -108.55514526]
[-358.19754028 -108.54711914]
[-351.86663818 -101.96572876]
[-338.39331055 -95.37257385]
[-323.56054688 -96.72818756]
[-314.56579590 -83.71260834]
[-299.73303223 -85.06822205]
[-290.73828125 -72.05263519]
[-277.26498413 -65.45948029]
[-262.43218994 -66.81509399]
[-253.43745422 -53.79951096]
[-239.96414185 -47.20635986]
[-226.49082947 -40.61320496]
[-213.01750183 -34.02005005]
[-199.49615479 -27.52596855]
[-185.92750549 -21.13130951]
[-172.35885620 -14.73665142]
[-158.56469727 -8.84416866]
[-144.56362915 -3.46179771]
[-130.56254578 1.92057347]
[-116.56147003 7.30294466]
[-102.56040192 12.68531609]
[-88.55932617 18.06768799]
[-75.09619141 11.80034733]
[-60.82043457 17.05938721]
[-54.33795547 31.22325706]
[-40.33688354 36.60562897]
[-26.33580780 41.98799896]
[-12.33473301 47.37037277]
[2.32130027 44.71519852]
[12.42611408 56.88907623]
[19.79574013 56.35520172]
[26.59225845 62.45458984]
[40.51280975 68.04191589]
[54.43336487 73.62924194]
[68.35391998 79.21656036]
[76.79313660 70.08567047]
[87.73519135 64.18100739]
[100.00000000 62.13938904]
[112.26480865 64.18100739]
[123.20686340 70.08567047]
[131.64608765 79.21656036]
[145.56663513 73.62924194]
[159.48718262 68.04191589]
[173.40774536 62.45458984]
[187.32829285 56.86726761]
[201.16532898 51.07619476]
[214.91586304 45.08261871]
[228.66638184 39.08904266]
[242.41691589 33.09547043]
[256.16744995 27.10189438]
[269.91796875 21.10832024]
[283.53320312 14.81342983]
[297.00653076 8.22027588]
[310.47982788 1.62712121]
[323.95315552 -4.96603298]
[332.94787598 -17.98161888]
[347.78067017 -16.62600136]
[361.25399780 -23.21915627]
[374.72729492 -29.81231117]
[388.20062256 -36.40546417]
[401.67395020 -42.99861908]
[415.14727783 -49.59177399]
[418.73468018 -64.81230164]
[431.29721069 -74.12448883]
[446.90322876 -73.13139343]
[458.18405151 -62.30193710]
[459.81320190 -46.74945068]
[451.02145386 -33.81734467]
[435.96002197 -29.61176491]
[421.74041748 -36.11845398]
[408.26708984 -29.52530098]
[394.79379272 -22.93214607]
[381.32046509 -16.33899307]
[367.84713745 -9.74583817]
[354.37384033 -3.15268350]
[346.34280396 9.39131546]
[330.54632568 8.50728512]
[317.07299805 15.10044003]
[303.59967041 21.69359398]
[290.12634277 28.28674889]
[288.64312744 31.48318672]
[285.53918457 34.12076569]
[281.09371948 35.44611359]
[275.91156006 34.85884857]
[262.16101074 40.85242462]
[248.41049194 46.84600067]
[234.65995789 52.83957291]
[220.90943909 58.83314896]
[207.15890503 64.82672119]
[204.61036682 68.86333466]
[199.50004578 71.34305573]
[192.91561890 70.78781891]
[178.99507141 76.37514496]
[165.07450867 81.96247101]
[151.15396118 87.54978943]
[137.23341370 93.13711548]
[140.67431641 104.83029938]
[140.25407410 117.91260529]
[135.48078918 131.06607056]
[145.36407471 142.34971619]
[155.24736023 153.63336182]
[165.13064575 164.91700745]
[175.01393127 176.20065308]
[187.80743408 177.82878113]
[195.80696106 187.42851257]
[195.14387512 199.50543213]
[204.86045837 210.93295288]
[214.57704163 222.36045837]
[230.38749695 225.08238220]
[237.99050903 239.20944214]
[231.55368042 253.90457153]
[216.01481628 257.89492798]
[203.29397583 248.11944580]
[203.14952087 232.07704163]
[193.43295288 220.64953613]
[183.71636963 209.22201538]
[166.89266968 204.22558594]
[163.73028564 186.08393860]
[153.84700012 174.80029297]
[143.96371460 163.51664734]
[134.08042908 152.23300171]
[124.19714355 140.94935608]
[116.86641693 142.53381348]
[120.13014984 157.17445374]
[123.39388275 171.81507874]
[126.65761566 186.45570374]
[129.92135620 201.09634399]
[133.18508911 215.73696899]
[140.36184692 228.90869141]
[130.25878906 239.99598694]
[116.47853088 234.07107544]
[117.57479858 219.11096191]
[114.50083160 204.42932129]
[111.42686462 189.74766541]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 17]
[4 16]
[5 15]
[6 14]
[7 13]
[19 114]
[20 113]
[21 112]
[22 111]
[23 109]
[25 107]
[26 106]
[27 105]
[28 104]
[31 101]
[32 100]
[33 99]
[34 98]
[35 97]
[36 96]
[42 95]
[43 94]
[44 93]
[46 92]
[47 91]
[48 90]
[49 89]
[51 87]
[52 86]
[54 84]
[56 82]
[57 81]
[58 79]
[59 78]
[60 77]
[61 76]
[62 75]
[63 74]
[64 73]
[65 72]
[66 71]
[120 175]
[121 174]
[122 173]
[123 172]
[124 171]
[125 168]
[126 167]
[127 166]
[128 165]
[129 164]
[130 163]
[131 159]
[132 158]
[133 157]
[134 156]
[136 154]
[137 153]
[138 152]
[139 151]
[140 150]
[141 149]
[178 201]
[179 200]
[180 199]
[181 198]
[182 197]
[185 195]
[186 194]
[187 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
