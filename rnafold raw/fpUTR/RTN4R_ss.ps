%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:21:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGUGCGCCCUGCGCGCCCUGCGCACCCGCGGCCCGAGCCCAGCCAGAGCCGGGCGGAGCGGAGCGCGCCGAGCCUCGUCCCGCGGCCGGGCCGGGGCCGGGCCGUAGCGGCGGCGCCUGGAUGCGGACCCGGCCGCGGGGAGACGGGCGCCCGCCCCGAAACGACUUUCAGUCCCCGACGCGCCCCGCCCAACCCCUACG\
) } def
/len { sequence length } bind def

/coor [
[153.22404480 148.97741699]
[138.23797607 149.51428223]
[135.42054749 134.78125000]
[130.82969666 149.06144714]
[126.23883057 163.34164429]
[121.64797211 177.62184143]
[117.05711365 191.90203857]
[112.46625519 206.18223572]
[113.37477112 223.11181641]
[97.35829926 228.67140198]
[87.58218384 214.81991577]
[98.18605804 201.59136963]
[102.77691650 187.31117249]
[107.36777496 173.03097534]
[111.95863342 158.75079346]
[116.54949188 144.47059631]
[121.14035034 130.19039917]
[114.81665802 126.15791321]
[106.75150299 138.80517578]
[94.10436249 130.73982239]
[102.16927338 118.09295654]
[95.84557343 114.06047821]
[84.83470154 124.24676514]
[73.82382202 134.43305969]
[69.48633575 150.24818420]
[53.55495834 154.13705444]
[42.41852188 142.09912109]
[47.53324127 126.51798248]
[63.63752747 123.42218018]
[74.64840698 113.23589325]
[85.65928650 103.04959869]
[78.70433044 89.75942993]
[64.05848694 92.99969482]
[49.41264725 96.23995972]
[34.76680756 99.48023224]
[20.12096405 102.72049713]
[12.41128159 107.63314819]
[5.22220802 105.89540100]
[-9.47225380 108.90750122]
[-21.43762398 119.25837708]
[-35.45935440 114.23440552]
[-45.45907974 126.77972412]
[-61.50151825 126.63941956]
[-71.28028870 113.92111969]
[-67.29395294 98.38121033]
[-52.60048676 91.94058990]
[-38.47146225 99.53993988]
[-27.55713844 89.40451813]
[-12.48435974 94.21304321]
[2.21010208 91.20093536]
[16.88069725 88.07465363]
[31.52653885 84.83438873]
[46.17237854 81.59412384]
[60.81822205 78.35385132]
[75.46406555 75.11358643]
[88.29613495 67.34584045]
[97.95779419 55.87185287]
[101.09479523 47.28508377]
[107.86002350 44.29607010]
[117.69895172 32.97372437]
[127.53787994 21.65138245]
[137.37681580 10.32903767]
[140.58845520 -5.16276550]
[154.77691650 -9.69448566]
[164.61584473 -21.01683044]
[174.45477295 -32.33917236]
[184.29370117 -43.66151810]
[194.13264465 -54.98386002]
[197.34426880 -70.47566223]
[211.53274536 -75.00738525]
[221.37167358 -86.32972717]
[214.66828918 -101.65193939]
[215.43499756 -118.28864288]
[223.45152283 -132.80673218]
[237.00796509 -142.23777771]
[253.26911926 -144.68487549]
[257.41363525 -159.10093689]
[253.79055786 -174.50170898]
[264.74322510 -184.59568787]
[268.88775635 -199.01176453]
[273.03228760 -213.42782593]
[277.17678833 -227.84388733]
[281.32131958 -242.25994873]
[285.46585083 -256.67602539]
[289.61038208 -271.09207153]
[293.75491333 -285.50814819]
[297.89941406 -299.92419434]
[302.04394531 -314.34027100]
[306.18847656 -328.75634766]
[310.33300781 -343.17239380]
[314.47753906 -357.58847046]
[318.50982666 -372.03631592]
[322.42965698 -386.51510620]
[326.34948730 -400.99386597]
[322.48733521 -416.33642578]
[333.28167725 -426.59951782]
[329.41952515 -441.94210815]
[340.21389771 -452.20520020]
[344.13372803 -466.68395996]
[347.94085693 -481.19277954]
[351.63504028 -495.73077393]
[355.21606445 -510.29705811]
[358.68368530 -524.89074707]
[362.15133667 -539.48437500]
[365.61898804 -554.07806396]
[369.08663940 -568.67175293]
[363.87646484 -584.22125244]
[374.93887329 -596.32720947]
[390.89379883 -592.53613281]
[395.32818604 -576.74792480]
[383.68029785 -565.20410156]
[380.21267700 -550.61041260]
[376.74502563 -536.01678467]
[373.27737427 -521.42309570]
[369.80972290 -506.82940674]
[371.32305908 -499.58975220]
[366.17300415 -492.03659058]
[362.47882080 -477.49859619]
[363.87939453 -470.23629761]
[358.61248779 -462.76412964]
[354.69265747 -448.28536987]
[358.83520508 -433.97842407]
[347.76046753 -422.67971802]
[351.90298462 -408.37274170]
[340.82827759 -397.07403564]
[336.90844727 -382.59527588]
[332.98861694 -368.11648560]
[334.27606201 -360.83328247]
[328.89358521 -353.44393921]
[324.74908447 -339.02786255]
[320.60455322 -324.61181641]
[316.46002197 -310.19573975]
[312.31549072 -295.77969360]
[308.17095947 -281.36361694]
[304.02642822 -266.94754028]
[299.88192749 -252.53149414]
[295.73739624 -238.11541748]
[291.59286499 -223.69935608]
[287.44833374 -209.28329468]
[283.30380249 -194.86723328]
[279.15927124 -180.45117188]
[283.07882690 -166.08152771]
[271.82971191 -154.95640564]
[267.68518066 -140.54034424]
[281.06442261 -136.75599670]
[293.41375732 -127.32322693]
[308.41375732 -127.32322693]
[323.41375732 -127.32322693]
[338.41375732 -127.32322693]
[352.33755493 -135.98693848]
[366.67297363 -128.02279663]
[366.67297363 -111.62365723]
[352.33755493 -103.65952301]
[338.41375732 -112.32322693]
[323.41375732 -112.32322693]
[308.41375732 -112.32322693]
[293.41375732 -112.32322693]
[291.39761353 -105.09929657]
[305.84545898 -101.06700134]
[320.29324341 -97.03446198]
[316.26046753 -82.58673859]
[301.81317139 -86.61914062]
[287.36529541 -90.65144348]
[285.34915161 -83.42751312]
[298.18121338 -75.65976715]
[311.01330566 -67.89202881]
[323.84536743 -60.12428284]
[340.52639771 -57.09446716]
[342.23275757 -40.22660446]
[326.49645996 -33.91744614]
[316.07763672 -47.29220581]
[303.24554443 -55.05995178]
[290.41348267 -62.82769775]
[277.58142090 -70.59544373]
[261.00064087 -66.54708099]
[245.29512024 -68.91643524]
[232.69401550 -76.49079895]
[222.85508728 -65.16845703]
[220.34719849 -50.48650360]
[205.45498657 -45.14493179]
[195.61605835 -33.82258987]
[185.77713013 -22.50024414]
[175.93820190 -11.17790031]
[166.09925842 0.14444347]
[163.59136963 14.82639694]
[148.69915771 20.16796684]
[138.86022949 31.49031067]
[129.02130127 42.81265640]
[119.18236542 54.13499832]
[109.43177795 65.53350830]
[99.77012634 77.00749969]
[113.74994659 71.57016754]
[126.35443878 63.43833160]
[140.92974854 59.89427948]
[155.86080933 61.33073044]
[169.49313354 67.58850861]
[180.31613159 77.97420502]
[187.13053894 91.33699036]
[189.18122864 106.19615173]
[186.24099731 120.90515900]
[178.63563538 133.83413696]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 17]
[4 16]
[5 15]
[6 14]
[7 13]
[8 12]
[22 31]
[23 30]
[24 29]
[32 55]
[33 54]
[34 53]
[35 52]
[36 51]
[38 50]
[39 49]
[41 47]
[56 191]
[57 190]
[59 189]
[60 188]
[61 187]
[62 186]
[64 184]
[65 183]
[66 182]
[67 181]
[68 180]
[70 178]
[71 177]
[76 144]
[77 143]
[79 141]
[80 140]
[81 139]
[82 138]
[83 137]
[84 136]
[85 135]
[86 134]
[87 133]
[88 132]
[89 131]
[90 130]
[91 129]
[92 127]
[93 126]
[94 125]
[96 123]
[98 121]
[99 120]
[100 118]
[101 117]
[102 115]
[103 114]
[104 113]
[105 112]
[106 111]
[146 157]
[147 156]
[148 155]
[149 154]
[164 174]
[165 173]
[166 172]
[167 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
