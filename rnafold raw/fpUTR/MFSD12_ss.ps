%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:52:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGUCGAGCGUGGGGCGGACGCGGCGGACGUGGGUGAGGGCGCGGCCGUAAGAGAGCGGGACGCGGGGUGCCCGGCGCGUGGUGGGGGUCCCCGGCGCCUGCCCCCACGGCACCCAAGAAGGCCUGGCCAGGGUACCCUCCGCGGAGCCCGGGGGUGGGGGGCGCGGGCCCGGCGCCGCG\
) } def
/len { sequence length } bind def

/coor [
[109.70325470 191.53324890]
[98.62103271 201.64187622]
[83.78129578 199.45509338]
[76.08614349 186.58041382]
[69.81212616 200.20526123]
[63.53811264 213.83012390]
[67.26890564 226.19464111]
[61.74272537 237.42228699]
[50.41882706 241.72216797]
[43.91057205 255.23670959]
[47.83074951 270.79342651]
[37.99795151 283.47000122]
[21.95506096 283.54205322]
[12.00880814 270.95431519]
[15.78910828 255.36299133]
[30.39603806 248.72845459]
[36.90429306 235.21391296]
[34.64107513 217.82260132]
[49.91325378 207.55610657]
[56.18727112 193.93124390]
[62.46128845 180.30639648]
[68.14168549 166.42355347]
[73.21788025 152.30859375]
[78.29407501 138.19363403]
[83.37026978 124.07866669]
[88.44646454 109.96369934]
[85.87007904 95.18661499]
[76.31670380 83.62231445]
[57.13711929 77.47231293]
[54.69490814 58.30613708]
[44.74806976 47.07847595]
[34.80122757 35.85081482]
[24.85438728 24.62315559]
[14.90754795 13.39549351]
[4.96070862 2.16783237]
[-9.98195076 -3.03096581]
[-12.63024139 -17.68824387]
[-27.57290077 -22.88704300]
[-30.22118950 -37.54432297]
[-40.16802979 -48.77198410]
[-50.11486816 -59.99964523]
[-60.06171036 -71.22730255]
[-70.00855255 -82.45496368]
[-79.95539093 -93.68262482]
[-85.91413879 -83.09917450]
[-98.06502533 -75.66049957]
[-114.70667267 -74.12403107]
[-129.13821411 -78.21432495]
[-143.56976318 -82.30461884]
[-158.00131226 -86.39491272]
[-171.67655945 -78.47259521]
[-186.92662048 -82.62120819]
[-194.70391846 -96.37944794]
[-190.39430237 -111.58480072]
[-176.55461121 -119.21620178]
[-161.39566040 -114.74607086]
[-153.91101074 -100.82646179]
[-139.47947693 -96.73616791]
[-125.04792786 -92.64587402]
[-110.61637878 -88.55558014]
[-105.59469604 -94.12627411]
[-116.73593903 -104.16982269]
[-106.69222260 -115.31090546]
[-95.55132294 -105.26766968]
[-90.52964020 -110.83837128]
[-96.09000397 -124.76971436]
[-101.65036774 -138.70104980]
[-107.21073914 -152.63240051]
[-112.77110291 -166.56373596]
[-127.01643372 -172.86518860]
[-132.45698547 -187.07276917]
[-126.36172485 -200.61466980]
[-131.92208862 -214.54602051]
[-137.48245239 -228.47737122]
[-149.78411865 -238.42620850]
[-147.31594849 -253.11489868]
[-152.87631226 -267.04623413]
[-166.99070740 -274.67272949]
[-169.68634033 -290.48767090]
[-158.89533997 -302.35925293]
[-142.89564514 -301.18054199]
[-133.96084595 -287.85580444]
[-138.94496155 -272.60659790]
[-133.38459778 -258.67526245]
[-121.48064423 -249.72286987]
[-123.55110931 -234.03773499]
[-117.99074554 -220.10638428]
[-112.43038177 -206.17504883]
[-98.68578339 -200.55174255]
[-92.84832001 -186.50257874]
[-98.83975983 -172.12411499]
[-93.27939606 -158.19276428]
[-87.71902466 -144.26142883]
[-82.15866089 -130.33007812]
[-76.59829712 -116.39873505]
[-68.72772980 -103.62947083]
[-58.78088760 -92.40180969]
[-48.83404922 -81.17414856]
[-38.88720703 -69.94648743]
[-28.94036865 -58.71882248]
[-18.99352837 -47.49116135]
[-4.76233435 -43.09543991]
[-1.40257978 -27.63508415]
[12.82861519 -23.23936462]
[16.18836975 -7.77900743]
[26.13521004 3.44865370]
[36.08205032 14.67631531]
[46.02888870 25.90397644]
[55.97573090 37.13163757]
[65.92256927 48.35929871]
[76.16811371 48.05978394]
[85.06648254 53.57666016]
[89.53852844 63.28597260]
[87.88100433 74.06893921]
[97.43437958 85.63323975]
[93.34662628 71.20097351]
[98.62048340 57.15866089]
[111.19816589 48.98541641]
[126.17203522 49.87031555]
[137.69952393 59.46808243]
[141.28274536 74.03381348]
[135.52360535 87.88416290]
[122.66873932 95.61503601]
[136.29359436 101.88905334]
[149.91845703 108.16307068]
[165.68974304 106.90726471]
[174.01396179 119.25865173]
[187.63882446 125.53266144]
[201.26367188 131.80668640]
[214.88853455 138.08070374]
[230.65982056 136.82489014]
[238.98403931 149.17626953]
[254.75532532 147.92047119]
[263.07955933 160.27185059]
[276.70440674 166.54586792]
[294.98318481 164.41830444]
[304.56964111 179.10433960]
[318.30078125 185.14225769]
[332.03189087 191.18016052]
[345.81460571 197.09933472]
[359.64791870 202.89933777]
[373.48120117 208.69934082]
[389.19973755 206.89991760]
[397.94534302 218.95661926]
[411.77862549 224.75662231]
[425.61190796 230.55662537]
[442.55697632 231.10504150]
[446.72088623 247.53970337]
[432.08114624 256.09042358]
[419.81192017 244.38990784]
[405.97860718 238.58992004]
[392.14532471 232.78991699]
[377.41622925 235.00418091]
[367.68121338 222.53263855]
[353.84790039 216.73263550]
[340.01461792 210.93263245]
[332.61108398 211.24668884]
[325.99398804 204.91128540]
[312.26287842 198.87336731]
[298.53173828 192.83546448]
[287.13195801 196.92993164]
[275.63378906 191.99124146]
[270.43038940 180.17073059]
[256.80554199 173.89671326]
[242.00878906 175.60127258]
[232.71002197 162.80113220]
[217.91326904 164.50569153]
[208.61451721 151.70555115]
[194.98965454 145.43153381]
[181.36480713 139.15751648]
[167.73994446 132.88349915]
[152.94320679 134.58807373]
[143.64443970 121.78792572]
[130.01957703 115.51390839]
[116.39472198 109.23989105]
[102.56143188 115.03989410]
[97.48523712 129.15486145]
[92.40904236 143.26982117]
[87.33284760 157.38479614]
[82.25664520 171.49975586]
[96.77055359 167.71206665]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 21]
[5 20]
[6 19]
[9 17]
[10 16]
[22 180]
[23 179]
[24 178]
[25 177]
[26 176]
[27 115]
[28 114]
[30 110]
[31 109]
[32 108]
[33 107]
[34 106]
[35 105]
[37 103]
[39 101]
[40 100]
[41 99]
[42 98]
[43 97]
[44 96]
[47 60]
[48 59]
[49 58]
[50 57]
[65 95]
[66 94]
[67 93]
[68 92]
[69 91]
[72 88]
[73 87]
[74 86]
[76 84]
[77 83]
[123 175]
[124 174]
[125 173]
[127 171]
[128 170]
[129 169]
[130 168]
[132 166]
[134 164]
[135 163]
[137 160]
[138 159]
[139 158]
[140 156]
[141 155]
[142 154]
[144 152]
[145 151]
[146 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
