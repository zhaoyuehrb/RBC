%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:24:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUUCUAGGGGCUGCCAUGGCUUGGCUAAGCUUCCCUUGACCACUGAGCAUUUCUAAGGGAGUUGAGGCUGGUGGCUCCUCCUUCCUUCCUACUGGUGCUUCCACCUGCCUUGGUCUGAGUUGCAGUCCAUGGGGCAGCGCCUAAGUGUCUGAGCACACUUAAGAAUCUCUAGUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[-9.39415264 329.93243408]
[-12.03141117 335.62820435]
[-16.13803673 340.32147217]
[-21.36512756 343.64797974]
[-27.27814865 345.35818481]
[-33.39303970 345.33578491]
[-39.21582413 343.60528564]
[-49.63570023 354.39538574]
[-60.05557632 365.18548584]
[-70.47544861 375.97555542]
[-80.70542908 386.94586182]
[-90.74238586 398.09304810]
[-100.77934265 409.24023438]
[-110.62023163 420.56085205]
[-120.26204681 432.05154419]
[-129.90385437 443.54220581]
[-139.54566956 455.03286743]
[-139.58544922 471.07586670]
[-152.24223328 480.93414307]
[-167.80680847 477.04525757]
[-174.33938599 462.39242554]
[-166.82870483 448.21606445]
[-151.03634644 445.39105225]
[-141.39453125 433.90039062]
[-131.75271606 422.40972900]
[-122.11090088 410.91903687]
[-121.63178253 406.14166260]
[-118.12816620 401.62234497]
[-111.92651367 399.20324707]
[-101.88955688 388.05609131]
[-91.85260010 376.90890503]
[-91.20704651 372.15115356]
[-87.54784393 367.75689697]
[-81.26554871 365.55569458]
[-70.84567261 354.76559448]
[-60.42579651 343.97549438]
[-50.00592041 333.18539429]
[-47.29380417 309.62179565]
[-23.92679214 302.52246094]
[-14.89956760 290.54293823]
[-5.87234211 278.56341553]
[3.15488338 266.58386230]
[12.18210888 254.60433960]
[21.20933342 242.62480164]
[30.23655891 230.64527893]
[39.15890121 218.58741760]
[47.97568130 206.45216370]
[56.79245758 194.31690979]
[54.28889465 184.37480164]
[57.75795364 174.49368286]
[66.27725220 168.03245544]
[77.16674042 167.32792664]
[86.40166473 155.50776672]
[95.63658905 143.68760681]
[104.87150574 131.86744690]
[75.44309235 113.83592224]
[81.48313141 84.51991272]
[73.53433990 71.79919434]
[65.58555603 59.07847214]
[57.63676453 46.35774994]
[49.68797684 33.63703156]
[41.73918533 20.91630745]
[29.35369110 17.25093079]
[22.99908638 6.46894312]
[25.61926842 -5.35840321]
[17.89369583 -18.21591187]
[10.16812515 -31.07342148]
[2.44255447 -43.93093109]
[-9.87708569 -47.81190872]
[-16.04255104 -58.70315552]
[-13.21635246 -70.48297119]
[-20.71635246 -83.47335052]
[-35.77824020 -88.99776459]
[-40.71310806 -104.26297760]
[-31.73535156 -117.55882263]
[-15.73193550 -118.68586731]
[-4.97931099 -106.77953339]
[-7.72597170 -90.97335052]
[-0.22597155 -77.98297119]
[15.41797256 -70.05734253]
[15.30006409 -51.65650177]
[23.02563477 -38.79899216]
[30.75120544 -25.94148445]
[38.47677612 -13.08397388]
[54.25666046 -5.43257570]
[54.45990753 12.96751976]
[62.40869904 25.68824005]
[70.35748291 38.40896225]
[78.30627441 51.12968445]
[86.25506592 63.85040665]
[94.20384979 76.57112885]
[105.27954102 74.37746429]
[117.03417969 77.54312897]
[126.85173035 86.15255737]
[132.22274780 99.02017975]
[144.80281067 90.85059357]
[157.38287354 82.68100739]
[169.96293640 74.51142120]
[182.54298401 66.34183502]
[195.12304688 58.17224884]
[202.48280334 44.16709137]
[217.37083435 43.72436523]
[229.95089722 35.55478287]
[216.10665894 29.78096008]
[211.81703186 15.40740395]
[220.23243713 2.99044371]
[235.17236328 1.64943242]
[245.66453552 12.36924553]
[244.00283813 27.27754974]
[257.24707031 20.23547745]
[265.79943848 6.92505789]
[280.66940308 7.78159618]
[293.91360474 0.73952299]
[307.15783691 -6.30255032]
[315.71020508 -19.61297035]
[330.58016968 -18.75643158]
[343.82437134 -25.79850388]
[357.06860352 -32.84057617]
[363.11529541 -47.70048904]
[378.54342651 -52.09960556]
[391.51785278 -42.66329956]
[392.08569336 -26.63029861]
[379.81137085 -16.29974937]
[364.11065674 -19.59636497]
[350.86645508 -12.55429077]
[337.62225342 -5.51221752]
[330.01718140 7.29450560]
[314.19989014 6.94166327]
[300.95568848 13.98373699]
[287.71148682 21.02581024]
[280.10641479 33.83253479]
[264.28912354 33.47969055]
[251.04492188 40.52176285]
[238.12048340 48.13483810]
[225.54042053 56.30442429]
[219.08045959 69.72524261]
[203.29263306 70.75230408]
[190.71257019 78.92189026]
[178.13252258 87.09147644]
[165.55245972 95.26106262]
[152.97239685 103.43064880]
[140.39233398 111.60023499]
[140.13055420 126.59795380]
[152.41783142 135.20159912]
[164.70510864 143.80523682]
[176.99240112 152.40888977]
[189.27967834 161.01254272]
[201.56695557 169.61618042]
[213.85423279 178.21983337]
[229.37294006 175.22895813]
[242.41418457 184.15655518]
[245.24079895 199.70600891]
[236.17584229 212.65213013]
[220.59735107 215.31419373]
[207.74780273 206.11285400]
[205.25059509 190.50711060]
[192.96331787 181.90345764]
[180.67602539 173.29981995]
[168.38874817 164.69616699]
[156.10147095 156.09252930]
[143.81419373 147.48887634]
[131.52690125 138.88522339]
[116.69166565 141.10237122]
[107.45674896 152.92253113]
[98.22182465 164.74269104]
[88.98690033 176.56285095]
[87.11496735 196.61576843]
[68.92771149 203.13369751]
[60.11093521 215.26895142]
[51.29415512 227.40420532]
[48.77100754 236.21307373]
[42.21609116 239.67250061]
[33.18886566 251.65203857]
[24.16164207 263.63156128]
[15.13441563 275.61108398]
[6.10719061 287.59063721]
[-2.92003465 299.57015991]
[-11.94725990 311.54968262]
[-9.32684135 317.38650513]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 37]
[8 36]
[9 35]
[10 34]
[11 31]
[12 30]
[13 29]
[14 26]
[15 25]
[16 24]
[17 23]
[39 178]
[40 177]
[41 176]
[42 175]
[43 174]
[44 173]
[45 172]
[46 170]
[47 169]
[48 168]
[52 166]
[53 165]
[54 164]
[55 163]
[57 91]
[58 90]
[59 89]
[60 88]
[61 87]
[62 86]
[65 84]
[66 83]
[67 82]
[68 81]
[71 79]
[72 78]
[95 142]
[96 141]
[97 140]
[98 139]
[99 138]
[100 137]
[102 135]
[103 134]
[109 133]
[110 132]
[112 130]
[113 129]
[114 128]
[116 126]
[117 125]
[118 124]
[143 162]
[144 161]
[145 160]
[146 159]
[147 158]
[148 157]
[149 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
