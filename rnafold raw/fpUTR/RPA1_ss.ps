%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCACGUCGGGGGCGGGAGCGGUGCGCGCAACUUCUCGGGCCAAUAACUGCGCAGCGCGCGGGACCCGGGUGGGGAAGCUGGAGCUGUUGCGGGGUCCGCGGGGAAGUCUUGGCGGUGGAGCCAUGGUCGGCCAACUGAGCGAGGGGGCCAUUGCGGUGAGGAGGCCAUC\
) } def
/len { sequence length } bind def

/coor [
[512.43811035 447.95550537]
[499.88079834 439.75100708]
[496.63674927 425.10601807]
[504.55462646 412.36602783]
[519.12152100 408.79086304]
[507.03503418 399.90731812]
[494.94854736 391.02380371]
[482.86206055 382.14025879]
[470.77560425 373.25674438]
[458.68911743 364.37319946]
[446.60263062 355.48968506]
[434.51617432 346.60617065]
[421.10388184 355.01345825]
[405.45550537 357.64416504]
[389.95642090 354.06735229]
[376.98071289 344.80059814]
[368.52758789 331.23541260]
[365.91323853 315.42825317]
[369.56613159 299.78878784]
[357.31848145 291.12878418]
[345.07086182 282.46881104]
[332.82321167 273.80880737]
[318.23233032 276.57312012]
[305.68811035 267.96511841]
[302.88760376 252.64210510]
[288.02865601 251.61180115]
[281.22769165 237.32693481]
[268.98007202 228.66694641]
[256.73242188 220.00695801]
[244.48478699 211.34696960]
[232.23715210 202.68696594]
[219.98951721 194.02697754]
[205.39862061 196.79127502]
[192.85441589 188.18328857]
[190.05390930 172.86027527]
[177.80627441 164.20027161]
[165.55863953 155.54028320]
[150.69970703 154.50999451]
[143.89874268 140.22512817]
[131.65110779 131.56513977]
[119.40346527 122.90514374]
[111.92314911 129.41165161]
[102.25525665 133.37794495]
[91.29113770 134.07630920]
[80.15898132 131.09886169]
[70.10782623 124.43212891]
[62.36905670 114.48960114]
[58.01060104 102.09573364]
[44.50461960 95.56974792]
[30.99864006 89.04376221]
[17.49265862 82.51777649]
[3.98667860 75.99179077]
[-9.51930237 69.46580505]
[-26.41139221 68.01885986]
[-29.69718742 51.38636780]
[-14.62429619 43.62464905]
[-2.99331689 55.95982742]
[10.51266384 62.48581314]
[24.01864433 69.01179504]
[37.52462387 75.53778076]
[51.03060532 82.06376648]
[64.53659058 88.58975220]
[69.51396942 82.97943878]
[79.46874237 71.75881195]
[84.44612885 66.14849091]
[76.35760498 53.51616287]
[68.26908112 40.88383484]
[52.96942902 36.05678940]
[47.33888626 21.03425789]
[55.69671249 7.34023571]
[71.63150787 5.47960615]
[82.91945648 16.87968636]
[80.90140533 32.79530716]
[88.98993683 45.42763901]
[97.07846069 58.05996704]
[121.41957855 68.57079315]
[132.45796204 89.78788757]
[128.06346130 110.65750885]
[140.31109619 119.31749725]
[152.55873108 127.97749329]
[168.29368591 129.62721252]
[174.21862793 143.29264832]
[186.46626282 151.95263672]
[198.71389771 160.61264038]
[214.09397888 158.14465332]
[226.39144897 167.10157776]
[228.64952087 181.77934265]
[240.89715576 190.43933105]
[253.14479065 199.09933472]
[265.39242554 207.75932312]
[277.64004517 216.41931152]
[289.88769531 225.07929993]
[305.62265015 226.72901917]
[311.54757690 240.39447021]
[326.92767334 237.92648315]
[339.22512817 246.88340759]
[341.48321533 261.56118774]
[353.73083496 270.22116089]
[365.97848511 278.88116455]
[378.22610474 287.54113770]
[390.06375122 279.58624268]
[403.87823486 276.16308594]
[418.00109863 277.66406250]
[430.73379517 283.88809204]
[440.55197144 294.06729126]
[446.28802490 306.96170044]
[447.26986694 321.01022339]
[443.39968872 334.51968384]
[455.48617554 343.40319824]
[467.57266235 352.28674316]
[479.65911865 361.17025757]
[491.74560547 370.05380249]
[503.83206177 378.93731689]
[515.91857910 387.82086182]
[528.00500488 396.70437622]
[540.56250000 404.90859985]
[553.55291748 412.40859985]
[566.54327393 419.90859985]
[579.53369141 427.40859985]
[597.59698486 421.79559326]
[613.76989746 430.97628784]
[618.05975342 448.74438477]
[631.38079834 455.64001465]
[644.76458740 462.41302490]
[658.14843750 469.18603516]
[673.95532227 468.51364136]
[681.81762695 481.16406250]
[695.20147705 487.93704224]
[715.22998047 485.88375854]
[725.16241455 502.44815063]
[738.78601074 508.72491455]
[752.40960693 515.00170898]
[766.03320312 521.27844238]
[780.70361328 516.04223633]
[794.43041992 522.60186768]
[799.33190918 536.62011719]
[812.95550537 542.89685059]
[828.44311523 538.71191406]
[841.28558350 548.32702637]
[841.63128662 564.36633301]
[829.21502686 574.52587891]
[813.56152344 571.01208496]
[806.67877197 556.52044678]
[793.05517578 550.24371338]
[779.21484375 555.62701416]
[765.30914307 549.45556641]
[759.75646973 534.90203857]
[746.13287354 528.62530518]
[732.50927734 522.34851074]
[718.88568115 516.07171631]
[709.61224365 520.47265625]
[699.23260498 518.99139404]
[691.23120117 511.88012695]
[688.42846680 501.32086182]
[675.04467773 494.54788208]
[660.19506836 495.70471191]
[651.37542725 482.56985474]
[637.99163818 475.79684448]
[624.60778809 469.02383423]
[617.19158936 468.80844116]
[611.04205322 462.00149536]
[601.08264160 467.65756226]
[589.50988770 467.78759766]
[579.21441650 462.24285889]
[572.82409668 452.30661011]
[572.03369141 440.39898682]
[559.04327393 432.89898682]
[546.05291748 425.39898682]
[533.06250000 417.89898682]
[535.63977051 432.67593384]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 115]
[6 114]
[7 113]
[8 112]
[9 111]
[10 110]
[11 109]
[12 108]
[19 100]
[20 99]
[21 98]
[22 97]
[25 94]
[27 92]
[28 91]
[29 90]
[30 89]
[31 88]
[32 87]
[35 84]
[36 83]
[37 82]
[39 80]
[40 79]
[41 78]
[48 62]
[49 61]
[50 60]
[51 59]
[52 58]
[53 57]
[65 75]
[66 74]
[67 73]
[116 169]
[117 168]
[118 167]
[119 166]
[122 161]
[123 159]
[124 158]
[125 157]
[127 155]
[128 154]
[130 150]
[131 149]
[132 148]
[133 147]
[136 144]
[137 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
