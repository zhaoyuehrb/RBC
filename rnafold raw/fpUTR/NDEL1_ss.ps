%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:17:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCGUCACAGAAUGGCCUCGGACACCCAGGCAGUCCCUGACGUGUCGGGGAGGAGCCGGGCGCGGAGGUACGCUGAGUGGAGCUCGGGGCUGCGUAGGGGAGCUGAGCCGAGCGGCUGGGCGGGCCUGGCCGGGCCGGCGGAGGGGAGACGUCGGUUGAGCGGCGGCGAACAUGCGCUUUUGACACAUUGGAGGCUUUCUUGAUC\
) } def
/len { sequence length } bind def

/coor [
[96.53377533 444.29760742]
[80.74586487 443.57827759]
[70.15261841 431.84973145]
[71.03881836 416.07031250]
[82.87870789 405.60165405]
[83.56142426 390.61721802]
[84.24414825 375.63275146]
[84.92686462 360.64828491]
[82.09008789 353.82116699]
[85.73535919 345.44213867]
[86.64540100 330.46975708]
[87.55545044 315.49737549]
[88.46549988 300.52502441]
[85.73265839 293.65563965]
[89.50466919 285.33285522]
[90.64183807 270.37603760]
[91.77899933 255.41920471]
[92.91616821 240.46237183]
[94.05333710 225.50553894]
[95.19049835 210.54870605]
[88.44033813 197.27148438]
[97.20157623 184.09759521]
[98.33873749 169.14076233]
[86.84807587 159.49894714]
[75.39570618 170.41471863]
[61.14804077 166.07266235]
[46.61590195 169.78977966]
[32.08376312 173.50689697]
[24.54243851 178.66683960]
[17.30286789 177.16836548]
[2.71599150 180.66452026]
[-11.87088490 184.16065979]
[-20.74069977 199.23690796]
[-37.44068909 203.15802002]
[-51.52741241 193.97351074]
[-66.05954742 197.69062805]
[-80.59169006 201.40774536]
[-95.12382507 205.12486267]
[-109.65596771 208.84197998]
[-124.18810272 212.55908203]
[-138.72024536 216.27619934]
[-150.06282043 228.12010193]
[-165.92469788 223.95681763]
[-169.98852539 208.06916809]
[-158.07380676 196.80102539]
[-142.43736267 201.74406433]
[-127.90522003 198.02694702]
[-113.37308502 194.30982971]
[-98.84094238 190.59271240]
[-84.30880737 186.87559509]
[-69.77666473 183.15847778]
[-55.24452972 179.44136047]
[-50.28974533 167.54487610]
[-39.22195435 160.57104492]
[-25.96334839 161.25613403]
[-15.36703110 169.57377625]
[-0.78015471 166.07763672]
[13.80672169 162.58149719]
[28.36664772 158.97476196]
[42.89878464 155.25764465]
[57.43092346 151.54052734]
[67.84385681 140.89064026]
[83.13095856 144.96681213]
[63.99161148 125.67423248]
[59.59329987 101.08741760]
[69.08398438 80.37554932]
[86.83787537 69.93947601]
[84.12113190 55.18754959]
[81.40438843 40.43562698]
[78.68764496 25.68370056]
[68.57887268 13.51310921]
[73.88309479 -0.40502533]
[71.16635132 -15.15695095]
[68.44960785 -29.90887642]
[65.73286438 -44.66080093]
[55.62409210 -56.83139420]
[60.92831421 -70.74952698]
[58.21157074 -85.50144958]
[55.49482727 -100.25337982]
[46.19293976 -105.89870453]
[41.62912369 -115.53381348]
[43.09269333 -125.87244415]
[49.86098862 -133.53283691]
[47.59320068 -148.36042786]
[45.32541275 -163.18800354]
[43.05762482 -178.01557922]
[40.78983688 -192.84317017]
[38.52205276 -207.67074585]
[35.91732788 -222.44285583]
[32.97702026 -237.15185547]
[30.03671265 -251.86085510]
[27.09640312 -266.56985474]
[16.80409050 -278.58563232]
[21.89647865 -292.58267212]
[9.40014076 -302.64352417]
[9.61878872 -318.68508911]
[22.38469505 -328.40164185]
[37.90494919 -324.33944702]
[44.27373886 -309.61471558]
[36.60547638 -295.52297974]
[46.68747711 -284.55926514]
[41.80540085 -269.51016235]
[44.74570847 -254.80116272]
[47.68601608 -240.09216309]
[50.62632370 -225.38316345]
[53.34439468 -223.13253784]
[55.10596848 -219.45222473]
[55.25034714 -214.80677795]
[53.34963226 -209.93853760]
[55.61742020 -195.11094666]
[57.88520432 -180.28337097]
[60.15299225 -165.45579529]
[62.42078018 -150.62820435]
[64.68856812 -135.80062866]
[77.84997559 -121.63749695]
[70.24674988 -102.97012329]
[72.96349335 -88.21819305]
[75.68023682 -73.46627045]
[85.59469604 -62.35083771]
[80.48478699 -47.37754440]
[83.20153046 -32.62561798]
[85.91827393 -17.87369347]
[88.63501740 -3.12176847]
[98.54946899 7.99366570]
[93.43956757 22.96695709]
[96.15631104 37.71888351]
[98.87305450 52.47080612]
[101.58979797 67.22273254]
[133.01811218 76.68287659]
[145.98568726 113.85263062]
[160.57257080 110.35649109]
[175.15943909 106.86034393]
[189.74632263 103.36419678]
[204.24983215 99.53691101]
[218.66246033 95.38047028]
[233.07510376 91.22402954]
[247.48773193 87.06759644]
[261.90036011 82.91115570]
[276.31298828 78.75471497]
[290.72564697 74.59827423]
[305.13827515 70.44184113]
[309.45745850 55.63143539]
[321.11309814 45.52452087]
[336.38589478 43.34617233]
[350.40237427 49.79149628]
[358.68991089 62.80381393]
[358.60397339 78.23093414]
[350.17202759 91.15013123]
[336.08462524 97.43892670]
[320.83703613 95.09059143]
[309.29470825 84.85446930]
[294.88208008 89.01091003]
[280.46945190 93.16735077]
[266.05679321 97.32379150]
[251.64416504 101.48022461]
[237.23153687 105.63666534]
[222.81890869 109.79310608]
[208.40626526 113.94954681]
[206.39010620 116.84580231]
[202.86946106 118.90808105]
[198.25222778 119.43927765]
[193.24246216 117.95107269]
[178.65559387 121.44721985]
[164.06871033 124.94336700]
[149.48184204 128.43951416]
[147.32662964 143.28387451]
[160.31701660 150.78387451]
[173.30738831 158.28387451]
[186.29777527 165.78387451]
[201.49674988 161.45184326]
[215.26644897 169.20883179]
[219.43754578 184.45277405]
[211.53540039 198.13969421]
[196.24821472 202.14938354]
[182.64561462 194.10296631]
[178.79777527 178.77424622]
[165.80738831 171.27424622]
[152.81701660 163.77424622]
[139.82662964 156.27424622]
[133.19386292 159.77517700]
[140.99830627 172.58496094]
[148.80274963 185.39476013]
[158.39108276 196.93008423]
[151.30178833 210.14907837]
[136.38792419 208.54400635]
[132.27380371 194.11909485]
[126.10106659 180.44805908]
[119.92833710 166.77700806]
[113.29557037 170.27793884]
[112.15840912 185.23477173]
[118.82723236 199.58180237]
[110.14733124 211.68586731]
[109.01016998 226.64270020]
[107.87300110 241.59953308]
[106.73583221 256.55636597]
[105.59867096 271.51321411]
[104.46150208 286.47003174]
[103.43786621 301.43505859]
[102.52781677 316.40744019]
[101.61777496 331.37979126]
[100.70772552 346.35217285]
[99.91131592 361.33102417]
[99.22859955 376.31546021]
[98.54588318 391.29992676]
[97.86315918 406.28439331]
[108.70202637 417.78631592]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 205]
[6 204]
[7 203]
[8 202]
[10 201]
[11 200]
[12 199]
[13 198]
[15 197]
[16 196]
[17 195]
[18 194]
[19 193]
[20 192]
[22 190]
[23 189]
[24 63]
[26 61]
[27 60]
[28 59]
[30 58]
[31 57]
[32 56]
[35 52]
[36 51]
[37 50]
[38 49]
[39 48]
[40 47]
[41 46]
[67 128]
[68 127]
[69 126]
[70 125]
[72 123]
[73 122]
[74 121]
[75 120]
[77 118]
[78 117]
[79 116]
[83 114]
[84 113]
[85 112]
[86 111]
[87 110]
[88 109]
[89 105]
[90 104]
[91 103]
[92 102]
[94 100]
[130 165]
[131 164]
[132 163]
[133 162]
[134 158]
[135 157]
[136 156]
[137 155]
[138 154]
[139 153]
[140 152]
[141 151]
[166 179]
[167 178]
[168 177]
[169 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
