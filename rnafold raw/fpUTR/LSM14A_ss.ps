%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:37:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGCCGCCGCCGCCGCCGCCGCGCCGCGGCUUGAGGGCGGGAGGCUGGGGGAGGGUAGCGGAGCCGGCGCCGCCGCCAUGUUGGGUCUGAAGCGGCUGCUGUAGGCGCCGACGGAGCGAGCGGGCGUGCGGAGCGGGCGACAGUGGCGUGGGAUCUGCCUCUCUGCGAGCAGCUGGGAGCGGCGGCGGCGGCGCC\
) } def
/len { sequence length } bind def

/coor [
[46.20096970 844.88623047]
[33.83763504 853.90881348]
[18.69575882 856.14086914]
[4.25483370 851.06958008]
[-6.16672134 839.86022949]
[-10.17410851 825.08862305]
[-6.84646082 810.14923096]
[3.05155325 798.47497559]
[17.24544334 792.74859619]
[18.67849922 777.81719971]
[20.11155510 762.88580322]
[21.54461098 747.95440674]
[22.97766876 733.02301025]
[24.41072464 718.09161377]
[25.84378052 703.16021729]
[27.27683830 688.22888184]
[28.70989418 673.29748535]
[30.14295006 658.36608887]
[31.57600594 643.43469238]
[33.00906372 628.50329590]
[34.44211960 613.57189941]
[35.87517548 598.64050293]
[37.30823135 583.70910645]
[30.82225037 570.30090332]
[39.84258652 557.30303955]
[41.27564240 542.37164307]
[38.78237152 535.40496826]
[42.85245895 527.21423340]
[44.52343750 512.30761719]
[46.19441605 497.40097046]
[47.86539078 482.49432373]
[49.53636932 467.58767700]
[47.15450668 460.58215332]
[51.35469437 452.45733643]
[40.40790939 442.39227295]
[37.45194626 427.63671875]
[43.82591248 413.80825806]
[57.27576828 406.29776001]
[59.18424225 391.41967773]
[61.09271622 376.54159546]
[63.00119019 361.66348267]
[64.79096985 346.77066040]
[66.46195221 331.86401367]
[68.13292694 316.95736694]
[69.80390930 302.05072021]
[71.47488403 287.14410400]
[65.20353699 273.63412476]
[74.43000031 260.78176880]
[76.10097504 245.87512207]
[64.03080750 237.14721680]
[57.90921402 223.45845032]
[59.47166061 208.44429016]
[68.39812469 196.14733887]
[82.37233734 189.92892456]
[76.10099030 176.41894531]
[85.32745361 163.56658936]
[86.99842834 148.65995789]
[80.72708893 135.14997864]
[89.95354462 122.29761505]
[91.62452698 107.39098358]
[93.17658997 92.47149658]
[83.39550018 80.34845734]
[85.06152344 65.22632599]
[96.67926025 55.97625351]
[98.11231995 41.04486847]
[99.54537201 26.11347961]
[93.16189575 11.63723087]
[102.07972717 -0.29262531]
[103.51278687 -15.22401333]
[97.12930298 -29.70026016]
[106.04714203 -41.63011932]
[107.48019409 -56.56150436]
[108.91325378 -71.49289703]
[110.34631348 -86.42427826]
[111.66026306 -101.36662292]
[112.85503387 -116.31896210]
[114.04980469 -131.27130127]
[115.24457550 -146.22364807]
[112.80667114 -155.03901672]
[116.57949066 -161.40426636]
[118.01254272 -176.33566284]
[119.44560242 -191.26704407]
[120.87865448 -206.19844055]
[114.49517822 -220.67468262]
[123.41300964 -232.60453796]
[117.02953339 -247.08079529]
[125.94736481 -259.01065063]
[127.38042450 -273.94204712]
[128.81347656 -288.87341309]
[130.24653625 -303.80480957]
[122.84291077 -311.79302979]
[121.10019684 -322.32159424]
[125.35636139 -331.86788940]
[133.98236084 -337.37185669]
[135.89083862 -352.24996948]
[137.79931641 -367.12805176]
[139.70777893 -382.00616455]
[137.69424438 -390.92800903]
[141.76715088 -397.10556030]
[143.91264343 -411.95132446]
[146.05812073 -426.79711914]
[142.33946228 -443.33819580]
[157.20469666 -451.49057007]
[169.15356445 -439.46307373]
[160.90388489 -424.65161133]
[158.75840759 -409.80584717]
[156.61291504 -394.96008301]
[154.58587646 -380.09768677]
[152.67739868 -365.21957397]
[150.76893616 -350.34149170]
[148.86045837 -335.46337891]
[157.61233521 -318.22872925]
[145.17791748 -302.37176514]
[143.74487305 -287.44036865]
[142.31181335 -272.50897217]
[140.87875366 -257.57757568]
[147.36473083 -244.16932678]
[138.34440613 -231.17147827]
[144.83038330 -217.76322937]
[135.81004333 -204.76538086]
[134.37698364 -189.83399963]
[132.94393921 -174.90260315]
[131.51087952 -159.97122192]
[130.19691467 -145.02886963]
[129.00215149 -130.07653809]
[127.80738068 -115.12419128]
[126.61260986 -100.17185211]
[129.21665955 -93.24584198]
[125.27769470 -84.99122620]
[123.84464264 -70.05983734]
[122.41158295 -55.12844849]
[120.97853088 -40.19705963]
[127.46450806 -26.78880692]
[118.44417572 -13.79095745]
[117.01111603 1.14043105]
[123.49710083 14.54868603]
[114.47676086 27.54653549]
[113.04370880 42.47792435]
[111.61064911 57.40931320]
[121.25694275 68.70021820]
[120.01632690 83.86318207]
[108.10797882 93.90454865]
[110.53598022 101.60128021]
[106.53116608 109.06195831]
[104.86018372 123.96859741]
[111.01200867 138.54479980]
[101.90506744 150.33093262]
[100.23409271 165.23756409]
[106.38591003 179.81376648]
[97.27897644 191.59989929]
[109.52953339 200.75801086]
[115.51177979 214.72616577]
[113.71115112 229.71363831]
[104.71066284 241.70727539]
[91.00761414 247.54611206]
[89.33663940 262.45272827]
[95.48846436 277.02893066]
[86.38152313 288.81506348]
[84.71054077 303.72171021]
[83.03956604 318.62835693]
[81.36859131 333.53497314]
[79.69760895 348.44161987]
[81.85316467 357.33026123]
[77.87928772 363.57196045]
[75.97080994 378.45004272]
[74.06233978 393.32815552]
[72.15386200 408.20623779]
[83.27265930 418.86825562]
[85.95003510 433.85775757]
[79.36553955 447.38952637]
[66.23278809 454.36581421]
[64.44300842 469.25866699]
[62.77202988 484.16531372]
[61.10105133 499.07192993]
[59.43007660 513.97857666]
[57.75909805 528.88519287]
[56.20703125 543.80468750]
[54.77397537 558.73608398]
[61.15745544 573.21234131]
[52.23962021 585.14221191]
[50.80656433 600.07360840]
[49.37350845 615.00494385]
[47.94045258 629.93634033]
[46.50739288 644.86773682]
[45.07433701 659.79913330]
[43.64128113 674.73052979]
[42.20822525 689.66192627]
[40.77516937 704.59332275]
[39.34211349 719.52465820]
[37.90905762 734.45605469]
[36.47600174 749.38745117]
[35.04294205 764.31884766]
[33.60988617 779.25024414]
[32.17683029 794.18164062]
[45.02244568 802.50323486]
[52.51933289 815.84692383]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 194]
[10 193]
[11 192]
[12 191]
[13 190]
[14 189]
[15 188]
[16 187]
[17 186]
[18 185]
[19 184]
[20 183]
[21 182]
[22 181]
[23 180]
[25 178]
[26 177]
[28 176]
[29 175]
[30 174]
[31 173]
[32 172]
[34 171]
[38 167]
[39 166]
[40 165]
[41 164]
[42 162]
[43 161]
[44 160]
[45 159]
[46 158]
[48 156]
[49 155]
[54 150]
[56 148]
[57 147]
[59 145]
[60 144]
[61 142]
[64 139]
[65 138]
[66 137]
[68 135]
[69 134]
[71 132]
[72 131]
[73 130]
[74 129]
[75 127]
[76 126]
[77 125]
[78 124]
[80 123]
[81 122]
[82 121]
[83 120]
[85 118]
[87 116]
[88 115]
[89 114]
[90 113]
[94 111]
[95 110]
[96 109]
[97 108]
[99 107]
[100 106]
[101 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
