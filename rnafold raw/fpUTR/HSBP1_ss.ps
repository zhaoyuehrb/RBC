%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:44:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCGCGGCCUCGAGGCCCUUCCGGUGCGGGAGAAACUACUACUCCCAUAAUGCCCCGCGGUCCCGCGAGCUGCCAGUCUCGUCGCGAGAAGCAGCGGCCCGGGGCGACUGAGCGGACAAACGGAAGUGUAGGUUACGGUCUGAGACAUCACCGCCAAGCUGGGCAUCGGGGAG\
) } def
/len { sequence length } bind def

/coor [
[92.46589661 431.93353271]
[79.99492645 440.80670166]
[64.82729340 442.85650635]
[50.44841766 437.61184692]
[40.16244507 426.27795410]
[36.33302689 411.45922852]
[39.84012985 396.56094360]
[49.87785339 385.00662231]
[64.13959503 379.45132446]
[65.75215149 364.53823853]
[67.36470032 349.62518311]
[68.97725677 334.71209717]
[70.58981323 319.79904175]
[72.20236206 304.88595581]
[65.87813568 291.40066528]
[75.05416107 278.51226807]
[76.66671753 263.59918213]
[78.27926636 248.68611145]
[79.89182281 233.77304077]
[66.62762451 224.57106018]
[59.76571274 209.85487366]
[61.26046371 193.59226990]
[70.79888153 180.22077942]
[85.86025238 173.43676758]
[87.20484924 158.49716187]
[88.54943848 143.55754089]
[89.89402771 128.61793518]
[79.82727814 122.67549133]
[72.75325012 113.36904144]
[58.07177353 116.44380188]
[43.39029312 119.51856232]
[28.70881271 122.59332275]
[14.02733326 125.66809082]
[8.62031937 140.11688232]
[-3.75362110 149.33041382]
[-19.14600754 150.36868286]
[-32.64518738 142.90036011]
[-39.94361877 129.30857849]
[-38.71239853 113.93042755]
[-29.34440804 101.67301178]
[-14.82893562 96.44762421]
[0.20218201 99.92167664]
[10.95257092 110.98661041]
[25.63405037 107.91184998]
[40.31552887 104.83708191]
[54.99700928 101.76232147]
[69.67848969 98.68756104]
[70.32215118 88.44797516]
[74.47891235 78.54102325]
[81.97653961 70.18322754]
[92.22054291 64.50466919]
[104.23573303 62.40303040]
[116.75773621 64.41673279]
[112.50826263 50.03125000]
[108.25878906 35.64577103]
[104.00932312 21.26029396]
[99.75984955 6.87481451]
[95.51037598 -7.51066399]
[90.06047058 -14.88382244]
[91.31623840 -22.19262314]
[87.32568359 -36.65206528]
[83.33512878 -51.11151123]
[79.34457397 -65.57095337]
[70.83539581 -53.21806335]
[56.11473083 -50.33675385]
[43.57619095 -58.56992722]
[40.36916733 -73.22308350]
[48.32228088 -85.94110107]
[62.90071869 -89.47225952]
[75.79296112 -81.80181122]
[73.37997437 -96.60645294]
[70.96698761 -111.41110229]
[68.55400848 -126.21574402]
[66.14102173 -141.02038574]
[56.92656326 -146.87878418]
[52.56454468 -156.64833069]
[54.28207397 -166.98573303]
[61.26946640 -174.49746704]
[59.38946533 -189.37918091]
[57.50946808 -204.26091003]
[55.62947083 -219.14262390]
[53.74946976 -234.02435303]
[45.76564026 -248.98077393]
[57.92741776 -260.79293823]
[72.64468384 -252.37638855]
[68.63118744 -235.90434265]
[70.51119232 -221.02262878]
[72.39118958 -206.14089966]
[74.27118683 -191.25918579]
[76.15118408 -176.37745667]
[88.95100403 -161.91021729]
[80.94566345 -143.43338013]
[83.35865021 -128.62872314]
[85.77163696 -113.82408142]
[88.18461609 -99.01943970]
[90.59760284 -84.21479797]
[93.80402374 -69.56150818]
[97.79457092 -55.10206223]
[101.78512573 -40.64262009]
[105.77568054 -26.18317604]
[109.89585876 -11.76013470]
[114.14532471 2.62534356]
[118.39479828 17.01082230]
[122.64427185 31.39630127]
[126.89373779 45.78178024]
[131.14321899 60.16725922]
[144.22242737 67.51125336]
[158.71710205 63.65065002]
[173.21177673 59.79004288]
[187.70645142 55.92943954]
[202.20114136 52.06883240]
[216.66058350 48.07828140]
[231.08361816 43.95810318]
[245.50666809 39.83792496]
[253.21907043 26.30438805]
[267.90478516 22.33140182]
[280.75939941 29.76740265]
[295.18243408 25.64722443]
[309.60549927 21.52704620]
[314.80047607 6.90542984]
[327.61669922 -1.84237969]
[343.12603760 -1.35267079]
[355.36486816 8.18625355]
[359.62707520 23.10648155]
[354.27377319 37.67088318]
[341.36340332 46.27914429]
[325.86029053 45.62121964]
[313.72567749 35.95008850]
[299.30261230 40.07026672]
[284.87957764 44.19044495]
[277.89257812 57.29453278]
[263.32424927 61.67844009]
[249.62684631 54.26096725]
[235.20379639 58.38114166]
[220.78076172 62.50131989]
[215.19415283 67.37834930]
[206.06173706 66.56351471]
[191.56706238 70.42411804]
[177.07238770 74.28472137]
[162.57769775 78.14533234]
[148.08302307 82.00593567]
[145.93618774 96.85150909]
[158.74334717 104.66027069]
[171.55050659 112.46902466]
[187.94897461 112.32037354]
[196.04272461 126.58303070]
[187.50558472 140.58479309]
[171.11984253 139.92185974]
[163.74174500 125.27618408]
[150.93458557 117.46743011]
[138.12742615 109.65866852]
[123.52664185 125.69790649]
[104.83364105 129.96252441]
[103.48905182 144.90213013]
[102.14446259 159.84175110]
[100.79987335 174.78135681]
[112.65433502 182.24081421]
[120.09664917 194.02780151]
[121.71938324 207.80624390]
[117.26185608 220.87435913]
[107.65004730 230.69444275]
[94.80489349 235.38560486]
[93.19233704 250.29867554]
[91.57978821 265.21173096]
[89.96723175 280.12481689]
[96.17612457 294.67678833]
[87.11543274 306.49850464]
[85.50288391 321.41159058]
[83.89032745 336.32464600]
[82.27777100 351.23773193]
[80.66522217 366.15078735]
[79.05266571 381.06387329]
[91.79725647 389.53936768]
[99.13309479 402.97232056]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 172]
[10 171]
[11 170]
[12 169]
[13 168]
[14 167]
[16 165]
[17 164]
[18 163]
[19 162]
[24 156]
[25 155]
[26 154]
[27 153]
[29 47]
[30 46]
[31 45]
[32 44]
[33 43]
[53 106]
[54 105]
[55 104]
[56 103]
[57 102]
[58 101]
[60 100]
[61 99]
[62 98]
[63 97]
[70 96]
[71 95]
[72 94]
[73 93]
[74 92]
[78 90]
[79 89]
[80 88]
[81 87]
[82 86]
[107 141]
[108 140]
[109 139]
[110 138]
[111 137]
[112 135]
[113 134]
[114 133]
[117 130]
[118 129]
[119 128]
[142 151]
[143 150]
[144 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
