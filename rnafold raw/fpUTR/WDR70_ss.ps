%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:25:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGCUUGAAGGCGGUACUUCCUCCAGCAUUUGCCGCAAGUUAUUGGCAAGUUCCCCUGCAGUUGUUUGGGCUGUCCCUGUGGCUGGUUCUGGGGUGUGCGGCCAGCC\
) } def
/len { sequence length } bind def

/coor [
[57.14841461 437.03323364]
[43.15424347 429.18832397]
[40.70473099 413.33337402]
[51.67892456 401.63095093]
[52.54310608 386.65588379]
[53.40728378 371.68078613]
[51.48178864 369.44647217]
[50.39673615 366.25756836]
[50.54315948 362.45837402]
[52.16911316 358.53622437]
[55.33159256 355.06347656]
[57.91265869 340.28720093]
[60.49372482 325.51092529]
[55.06182480 311.64212036]
[65.05832672 299.37915039]
[67.63939667 284.60290527]
[70.22045898 269.82662964]
[72.80152893 255.05035400]
[67.36962891 241.18154907]
[77.36613464 228.91857910]
[79.94719696 214.14231873]
[82.52826691 199.36604309]
[85.10932922 184.58978271]
[86.83481598 169.68934631]
[87.69899750 154.71426392]
[88.56317902 139.73918152]
[89.42736053 124.76409149]
[90.29153442 109.78900909]
[84.80184174 95.82966614]
[73.96846008 85.45480347]
[63.13507462 75.07993317]
[52.30169296 64.70507050]
[41.46831131 54.33020782]
[30.63492584 43.95534515]
[19.80154228 33.58047867]
[8.96815968 23.20561409]
[-6.27731466 26.09613991]
[-20.29576874 19.44312668]
[-27.69681931 5.80479574]
[-25.63461304 -9.57463646]
[-14.90211010 -20.78146362]
[0.37382403 -23.50643349]
[14.31928062 -16.70174026]
[21.57194710 -2.98392415]
[19.34302521 12.37223148]
[30.17640686 22.74709702]
[41.00979233 33.12195969]
[51.84317398 43.49682617]
[62.67655563 53.87168884]
[73.50994110 64.24655151]
[84.34332275 74.62142181]
[95.17670441 84.99628448]
[102.66970062 84.67213440]
[94.61518860 72.01808929]
[101.54658508 58.71561432]
[116.53255463 58.06704712]
[124.58729553 70.72094727]
[117.65568542 84.02384186]
[125.14867401 83.69969940]
[135.04562378 72.42803955]
[144.94258118 61.15638733]
[154.83953857 49.88472748]
[164.73649597 38.61307144]
[174.63345337 27.34141731]
[175.03283691 11.30333519]
[187.90740967 1.73124683]
[203.38090515 5.96803808]
[209.58338928 20.76360512]
[201.75683594 34.76805496]
[185.90512085 37.23837280]
[176.00816345 48.51002884]
[166.11120605 59.78168488]
[156.21424866 71.05334473]
[146.31729126 82.32499695]
[136.42033386 93.59665680]
[149.11601257 101.58537292]
[155.16593933 115.31120300]
[152.49752808 130.07194519]
[142.02493286 140.81088257]
[127.33583069 143.84904480]
[113.46243286 138.14564514]
[105.15747833 125.65454102]
[105.26662445 110.65319061]
[104.40244293 125.62827301]
[103.53826141 140.60336304]
[102.67408752 155.57844543]
[101.80990601 170.55352783]
[104.09503937 174.65711975]
[104.78159332 178.84706116]
[104.05587769 182.57917786]
[102.27076721 185.43569946]
[99.88559723 187.17083740]
[97.30453491 201.94711304]
[94.72346497 216.72337341]
[92.14240265 231.49964905]
[97.38968658 246.42535400]
[87.57779694 257.63140869]
[84.99672699 272.40768433]
[82.41566467 287.18395996]
[79.83459473 301.96023560]
[85.08187866 316.88592529]
[75.26998901 328.09201050]
[72.68892670 342.86825562]
[70.10785675 357.64453125]
[68.38237000 372.54495239]
[67.51818848 387.52005005]
[66.65401459 402.49514771]
[76.20919800 415.38226318]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 107]
[5 106]
[6 105]
[11 104]
[12 103]
[13 102]
[15 100]
[16 99]
[17 98]
[18 97]
[20 95]
[21 94]
[22 93]
[23 92]
[24 87]
[25 86]
[26 85]
[27 84]
[28 83]
[29 52]
[30 51]
[31 50]
[32 49]
[33 48]
[34 47]
[35 46]
[36 45]
[59 75]
[60 74]
[61 73]
[62 72]
[63 71]
[64 70]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
