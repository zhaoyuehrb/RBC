%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:45:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCGGGAUUUGGCGUCGGCGGCUCCGGGCGCCUCCAGCUCCGGCUCGGGCUCCGGCUCCGGCUCCGGGCGCCGACCAGGUCCCCUUGGCCCCCGCCGCGCGCCCUCCAACCUGCUGCUGCCGCCGCCGCGCCCCCCAGGCUCUGCCAGCUACCCGCGCUCUGAGCCCGGGGCCAGAUUCCCAUGGAAGCGCCGCG\
) } def
/len { sequence length } bind def

/coor [
[119.41280365 275.09835815]
[117.97974396 260.16696167]
[116.54669189 245.23556519]
[114.99462128 230.31608582]
[112.84913635 215.47030640]
[110.23133087 200.70051575]
[107.61351776 185.93070984]
[104.99571228 171.16090393]
[102.37789917 156.39109802]
[99.76009369 141.62129211]
[97.14228058 126.85149384]
[94.52447510 112.08168793]
[87.09363556 99.05162811]
[75.71477509 89.27811432]
[64.33591461 79.50460052]
[48.82586288 76.38229370]
[44.21244812 62.22017288]
[32.83358765 52.44665909]
[21.45473099 42.67314529]
[10.07587242 32.89963150]
[-1.30298579 23.12611580]
[-12.68184376 13.35260201]
[-24.06070328 3.57908773]
[-53.77831268 11.71078300]
[-80.21632385 -3.57279778]
[-93.58684540 3.22640085]
[-106.95736694 10.02559948]
[-120.32789612 16.82479858]
[-133.64378357 23.73039055]
[-146.90417480 30.74193764]
[-150.01353455 46.06727600]
[-162.27850342 55.76801682]
[-177.90795898 55.26377487]
[-189.52214050 44.79262924]
[-191.63717651 29.29874039]
[-183.25444031 16.09784698]
[-168.33197021 11.42300701]
[-153.91572571 17.48153687]
[-140.65531921 10.46999073]
[-136.20658875 4.55733919]
[-127.12709045 3.45427442]
[-113.75656891 -3.34492421]
[-100.38604736 -10.14412308]
[-87.01551819 -16.94332123]
[-88.51096344 -26.23824310]
[-87.76123810 -35.62279510]
[-84.80906677 -44.56240463]
[-79.82260132 -52.54783630]
[-89.50507355 -64.00426483]
[-99.18755341 -75.46068573]
[-108.87002563 -86.91711426]
[-123.68746948 -92.46274567]
[-125.99344635 -107.17775726]
[-135.76696777 -118.55661774]
[-145.63088989 -129.85719299]
[-155.49482727 -141.15776062]
[-165.35876465 -152.45832825]
[-180.71328735 -151.21542358]
[-193.70364380 -159.15922546]
[-199.45745850 -173.06454468]
[-195.96180725 -187.51855469]
[-205.82572937 -198.81912231]
[-215.68966675 -210.11968994]
[-225.55360413 -221.42025757]
[-241.08233643 -222.64341736]
[-250.92478943 -234.24430847]
[-249.66297913 -249.04104614]
[-259.52691650 -260.34161377]
[-269.39083862 -271.64218140]
[-284.29483032 -276.95083618]
[-286.83517456 -291.62719727]
[-296.69912720 -302.92776489]
[-306.56304932 -314.22833252]
[-322.40747070 -316.74502563]
[-330.19302368 -330.77230835]
[-323.94726562 -345.54968262]
[-308.46142578 -349.74118042]
[-295.61492920 -340.13143921]
[-295.26248169 -324.09225464]
[-285.39855957 -312.79168701]
[-275.53460693 -301.49111938]
[-261.33615112 -296.99078369]
[-258.09027100 -281.50613403]
[-248.22634888 -270.20556641]
[-238.36241150 -258.90499878]
[-223.53089905 -258.15563965]
[-213.36648560 -246.83576965]
[-214.25303650 -231.28417969]
[-204.38909912 -219.98361206]
[-194.52516174 -208.68304443]
[-184.66123962 -197.38247681]
[-169.86741638 -198.89280701]
[-156.86721802 -191.31266785]
[-150.75173950 -177.36796570]
[-154.05819702 -162.32225037]
[-144.19425964 -151.02168274]
[-134.33032227 -139.72111511]
[-124.46639252 -128.42054749]
[-117.69155884 -125.44528198]
[-114.53701782 -116.86023712]
[-100.41213226 -112.13404846]
[-97.41359711 -96.59958649]
[-87.73112488 -85.14316559]
[-78.04865265 -73.68673706]
[-68.36618042 -62.23031235]
[-62.14968109 -65.08487701]
[-55.52576828 -66.82526398]
[-48.69270325 -67.39645386]
[-41.85550690 -66.77848816]
[-35.21982574 -64.98712158]
[-28.98572540 -62.07344055]
[-23.34166527 -58.12241364]
[-18.45880890 -53.25042343]
[-14.48582554 -47.60182571]
[-11.54436684 -41.34467316]
[-9.72534561 -34.66573334]
[-9.08612251 -27.76489258]
[-9.64870930 -20.84918976]
[-11.39901352 -14.12659931]
[-14.28718853 -7.79977083]
[-2.90832973 1.97374380]
[8.47052860 11.74725819]
[19.84938622 21.52077293]
[31.22824478 31.29428673]
[42.60710526 41.06780243]
[53.98596191 50.84131622]
[68.68212128 53.26454926]
[74.10942841 68.12574005]
[85.48828888 77.89925385]
[96.86714935 87.67276764]
[121.71439362 83.78556824]
[136.57679749 85.81260681]
[151.43920898 87.83965302]
[166.30162048 89.86669159]
[181.16401672 91.89373779]
[189.44099426 84.81438446]
[200.03065491 83.49269867]
[209.39970398 88.12597656]
[214.55549622 96.96449280]
[229.34570312 99.46445465]
[244.13591003 101.96440887]
[258.92611694 104.46437073]
[273.71633911 106.96432495]
[282.58169556 94.58827209]
[295.88711548 87.31827545]
[310.96783447 86.54929352]
[324.83001709 92.38036346]
[334.74487305 103.60554504]
[338.78604126 117.96292877]
[353.57626343 120.46289062]
[367.43283081 112.37742615]
[382.34112549 118.30387115]
[386.86474609 133.69595337]
[377.53356934 146.74620056]
[361.50567627 147.44357300]
[351.07629395 135.25309753]
[336.28607178 132.75314331]
[327.75064087 144.98472595]
[314.69723511 152.32762146]
[299.68869019 153.27873230]
[285.69848633 147.59594727]
[275.52163696 136.35679626]
[271.21636963 121.75453186]
[256.42614746 119.25457764]
[241.63595581 116.75461578]
[226.84574890 114.25465393]
[212.05554199 111.75469971]
[194.48574829 119.81269073]
[179.13697815 106.75614166]
[164.27456665 104.72910309]
[149.41217041 102.70205688]
[134.54975891 100.67501068]
[119.68735504 98.64797211]
[109.29427338 109.46388245]
[111.91208649 124.23368835]
[114.52989197 139.00349426]
[117.14770508 153.77328491]
[119.76551056 168.54309082]
[122.38332367 183.31289673]
[125.00112915 198.08270264]
[127.61894226 212.85250854]
[130.54862976 216.09272766]
[132.12870789 219.73193359]
[132.40008545 223.29458618]
[131.55458069 226.36776733]
[129.90126038 228.64511108]
[133.97134399 236.83586121]
[131.47807312 243.80250549]
[132.91113281 258.73388672]
[134.34419250 273.66528320]
[147.33044434 282.37683105]
[151.62915039 297.41195679]
[145.21055603 311.67156982]
[131.10536194 318.42266846]
[115.97358704 314.47760010]
[106.95999908 301.69912720]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 190]
[2 189]
[3 188]
[4 186]
[5 181]
[6 180]
[7 179]
[8 178]
[9 177]
[10 176]
[11 175]
[12 174]
[13 130]
[14 129]
[15 128]
[17 126]
[18 125]
[19 124]
[20 123]
[21 122]
[22 121]
[23 120]
[25 44]
[26 43]
[27 42]
[28 41]
[29 39]
[30 38]
[48 105]
[49 104]
[50 103]
[51 102]
[53 100]
[54 98]
[55 97]
[56 96]
[57 95]
[61 91]
[62 90]
[63 89]
[64 88]
[67 85]
[68 84]
[69 83]
[71 81]
[72 80]
[73 79]
[131 173]
[132 172]
[133 171]
[134 170]
[135 169]
[139 167]
[140 166]
[141 165]
[142 164]
[143 163]
[149 157]
[150 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
