%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:45:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAAGCCUAGUGGCCAUUGUGUUCGUUGCUCUUAUCGGUUCCCAUCCCAGUUGUUGAUCUUAUGCAAGACGCUGCACGACCCCGCGCCCGCUUGUCGCCACGGCACUUGAGGCAGCCGGAGAUACUCUGAGUUACUCGGAGCCCGACGCCUGAGGGUGAGAUGAACGCGCUGGCCUCCCUAACCGUCCGGACCUGUGAUCGCUUCUGGCAGACCGAACCGGCGCUCCUGCCCCCGGGGUGACGCGCAGCUCCC\
AGCCGCCCAGACAC\
) } def
/len { sequence length } bind def

/coor [
[295.96975708 675.13116455]
[299.00320435 686.62829590]
[298.00036621 698.44183350]
[293.10095215 709.20031738]
[284.89572144 717.66247559]
[274.35528564 722.86059570]
[262.71542358 724.21118164]
[258.74890137 738.67724609]
[254.78237915 753.14331055]
[259.45574951 768.86242676]
[247.98434448 780.58160400]
[232.16894531 776.24511719]
[228.27909851 760.31396484]
[240.31632996 749.17675781]
[244.28283691 734.71069336]
[248.24935913 720.24462891]
[234.91862488 707.91357422]
[229.70045471 690.43084717]
[234.13275146 672.64434814]
[247.06460571 659.53271484]
[264.95361328 654.81170654]
[268.41284180 640.21606445]
[271.87207031 625.62036133]
[275.33132935 611.02471924]
[278.79055786 596.42901611]
[271.93301392 578.32794189]
[286.07464600 563.92987061]
[289.19332886 549.25769043]
[284.27127075 535.19982910]
[294.70870972 523.30993652]
[297.82736206 508.63769531]
[300.94604492 493.96548462]
[291.47467041 487.74047852]
[284.49819946 478.75238037]
[280.78878784 467.94955444]
[280.77191162 456.48364258]
[284.47790527 445.58663940]
[291.53543091 436.43872070]
[284.03543091 423.44833374]
[276.53543091 410.45794678]
[269.03543091 397.46755981]
[261.53543091 384.47717285]
[245.84098816 386.78527832]
[230.42681885 382.87738037]
[217.66590881 373.32455444]
[209.53456116 359.56921387]
[207.30622864 343.70736694]
[211.35231018 328.16934204]
[221.08049011 315.34732056]
[213.42985535 302.44506836]
[205.77922058 289.54284668]
[198.12857056 276.64059448]
[190.47793579 263.73837280]
[182.75236511 250.88085938]
[174.95211792 238.06851196]
[167.15188599 225.25616455]
[159.35163879 212.44381714]
[146.12438965 205.59625244]
[145.55694580 189.78523254]
[137.75669861 176.97288513]
[129.95645142 164.16053772]
[122.15621185 151.34819031]
[114.35597229 138.53584290]
[106.55573273 125.72349548]
[98.75548553 112.91114807]
[87.04357910 103.53932190]
[72.83262634 98.73839569]
[58.62167740 93.93746948]
[44.41072845 89.13654327]
[30.19977951 84.33560944]
[21.10438538 84.55660248]
[15.85197830 79.39526367]
[1.69785035 74.42931366]
[-10.22104931 79.29792023]
[-21.89337730 74.89657593]
[-27.27255440 64.08674622]
[-41.36794281 58.95644760]
[-56.98217773 61.50719452]
[-66.29558563 49.88352585]
[-80.39097595 44.75322342]
[-96.43823242 48.13222122]
[-107.18524170 35.74538040]
[-101.57640076 20.33522224]
[-85.38160706 17.75439644]
[-75.26067352 30.65783501]
[-61.16528320 35.78813934]
[-46.55924988 32.87043762]
[-36.23764038 44.86105728]
[-22.14225197 49.99135971]
[-5.03072453 46.03009415]
[6.66380167 60.27518845]
[20.81792831 65.24114227]
[35.00070953 70.12466431]
[49.21165848 74.92559052]
[63.42260742 79.72651672]
[77.63356018 84.52744293]
[91.84450531 89.32837677]
[95.89263916 83.01468658]
[108.03702545 64.07362366]
[97.74340057 53.16302109]
[81.88655853 48.98060608]
[77.84188080 33.08807373]
[89.77019501 21.83429527]
[105.40066528 26.79619598]
[108.65400696 42.86939621]
[118.94763184 53.78000259]
[125.83425140 50.80940247]
[146.49411011 41.89760971]
[145.62194824 26.92298508]
[144.74977112 11.94836330]
[136.22314453 -1.37857699]
[143.20733643 -14.53420067]
[142.33515930 -29.50882339]
[141.46299744 -44.48344421]
[140.59082031 -59.45806885]
[136.97872925 -67.80838776]
[139.79664612 -74.61180115]
[131.42565918 -88.03704834]
[138.56245422 -101.11051941]
[137.86456299 -116.09427643]
[137.16668701 -131.07803345]
[133.65199280 -139.46981812]
[136.54888916 -146.23999023]
[133.82168579 -150.60787964]
[133.09155273 -155.13410950]
[134.08929443 -159.03945923]
[136.27795410 -161.76119995]
[136.27795410 -176.76119995]
[136.27795410 -191.76119995]
[136.27795410 -206.76119995]
[136.27795410 -221.76119995]
[136.27795410 -236.76119995]
[136.27795410 -251.76119995]
[130.23162842 -267.60031128]
[143.77795410 -277.79507446]
[157.32429504 -267.60031128]
[151.27795410 -251.76119995]
[151.27795410 -236.76119995]
[151.27795410 -221.76119995]
[151.27795410 -206.76119995]
[151.27795410 -191.76119995]
[151.27795410 -176.76119995]
[151.27795410 -161.76119995]
[151.53974915 -146.76347351]
[152.15045166 -131.77590942]
[152.84832764 -116.79216003]
[153.54620361 -101.80840302]
[161.86726379 -89.45489502]
[154.78039551 -75.30968475]
[155.56544495 -60.33023834]
[156.43760681 -45.35561752]
[157.30978394 -30.38099480]
[158.18196106 -15.40637302]
[166.64619446 -3.15051746]
[159.72439575 11.07619095]
[160.59655762 26.05081367]
[161.46873474 41.02543640]
[111.56783295 105.11090851]
[119.36808014 117.92325592]
[127.16831970 130.73559570]
[134.96856689 143.54794312]
[142.76879883 156.36029053]
[150.56904602 169.17263794]
[158.36929321 181.98498535]
[172.15446472 189.74897766]
[172.16398621 204.64356995]
[179.96423340 217.45591736]
[187.76446533 230.26826477]
[195.56471252 243.08061218]
[202.67424011 248.75773621]
[203.38017273 256.08773804]
[211.03080750 268.98995972]
[218.68145752 281.89221191]
[226.33209229 294.79443359]
[233.98272705 307.69668579]
[247.99719238 305.26290894]
[261.97235107 307.74801636]
[274.23696899 314.83416748]
[283.33145142 325.65454102]
[288.18151855 338.89932251]
[288.22497559 352.97430420]
[283.47705078 366.19265747]
[274.52581787 376.97717285]
[282.02581787 389.96755981]
[289.52581787 402.95794678]
[297.02581787 415.94833374]
[304.52581787 428.93872070]
[323.02023315 428.32342529]
[339.18002319 437.11993408]
[348.59390259 452.80474854]
[348.75415039 470.99124146]
[362.15866089 477.72323608]
[375.56314087 484.45523071]
[391.36791992 483.73440552]
[399.26892090 496.36071777]
[412.67343140 503.09271240]
[426.07791138 509.82467651]
[439.48239136 516.55670166]
[452.88690186 523.28863525]
[471.25765991 521.80554199]
[480.29483032 536.86627197]
[493.77673340 543.44183350]
[507.25863647 550.01739502]
[520.74053955 556.59295654]
[534.22247314 563.16851807]
[547.70434570 569.74407959]
[561.18627930 576.31964111]
[581.23858643 574.04022217]
[591.28051758 590.58819580]
[604.91174316 596.84826660]
[618.54302979 603.10833740]
[632.17431641 609.36840820]
[645.80554199 615.62847900]
[667.93505859 611.99981689]
[679.59948730 630.24407959]
[693.50726318 635.86322021]
[707.41497803 641.48229980]
[724.36578369 641.80969238]
[728.74365234 658.18865967]
[714.21667480 666.92956543]
[701.79589844 655.39007568]
[687.88812256 649.77093506]
[673.98040771 644.15185547]
[667.61529541 648.66143799]
[659.89886475 650.32781982]
[652.05621338 648.81121826]
[645.36212158 644.28332520]
[640.93402100 637.41119385]
[639.54547119 629.25976562]
[625.91424561 622.99969482]
[612.28295898 616.73962402]
[598.65167236 610.47955322]
[585.02038574 604.21942139]
[575.83886719 608.60424805]
[565.54010010 607.20068359]
[557.53607178 600.23126221]
[554.61071777 589.80157471]
[541.12878418 583.22601318]
[527.64691162 576.65045166]
[514.16497803 570.07489014]
[500.68307495 563.49932861]
[487.20117188 556.92370605]
[473.71923828 550.34814453]
[462.20663452 553.98785400]
[450.93228149 548.64892578]
[446.15490723 536.69317627]
[432.75039673 529.96118164]
[419.34591675 523.22918701]
[405.94143677 516.49719238]
[392.53692627 509.76519775]
[377.69094849 510.96752930]
[368.83114624 497.85971069]
[355.42666626 491.12771606]
[342.02218628 484.39572144]
[330.23336792 493.68060303]
[315.61825562 497.08416748]
[312.49957275 511.75637817]
[309.38092041 526.42858887]
[314.07992554 541.53588867]
[303.86553955 552.37634277]
[300.74685669 567.04858398]
[307.16458130 575.77496338]
[307.72875977 586.37298584]
[302.49423218 595.35266113]
[293.38623047 599.88824463]
[289.92700195 614.48394775]
[286.46774292 629.07958984]
[283.00851440 643.67529297]
[279.54928589 658.27093506]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 16]
[8 15]
[9 14]
[21 269]
[22 268]
[23 267]
[24 266]
[25 265]
[27 261]
[28 260]
[30 258]
[31 257]
[32 256]
[38 187]
[39 186]
[40 185]
[41 184]
[42 183]
[49 175]
[50 174]
[51 173]
[52 172]
[53 171]
[54 169]
[55 168]
[56 167]
[57 166]
[59 164]
[60 163]
[61 162]
[62 161]
[63 160]
[64 159]
[65 158]
[66 97]
[67 96]
[68 95]
[69 94]
[70 93]
[72 92]
[73 91]
[76 89]
[77 88]
[79 86]
[80 85]
[99 106]
[100 105]
[108 157]
[109 156]
[110 155]
[112 153]
[113 152]
[114 151]
[115 150]
[117 149]
[119 147]
[120 146]
[121 145]
[123 144]
[127 143]
[128 142]
[129 141]
[130 140]
[131 139]
[132 138]
[133 137]
[191 254]
[192 253]
[193 252]
[195 250]
[196 249]
[197 248]
[198 247]
[199 246]
[201 243]
[202 242]
[203 241]
[204 240]
[205 239]
[206 238]
[207 237]
[209 233]
[210 232]
[211 231]
[212 230]
[213 229]
[215 223]
[216 222]
[217 221]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
