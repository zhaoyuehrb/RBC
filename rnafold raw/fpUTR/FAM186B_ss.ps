%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:35:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAGAGGAUCAGUUGGAACCUGGUGUUUGGCAGUUACCAGAGGAGCUGUGCCUGGGCAGAGGGUACCCAGGAGACACCCUGGUGCCCUUAACCUCCAAAGCAGGCAACAUUGUGUGUCCAGGCCUGUGGACCAGAAACACAGGAUGUUUUGUGACUGACAGAGUGAUCCAAA\
) } def
/len { sequence length } bind def

/coor [
[70.36269379 325.24844360]
[55.02632523 324.41693115]
[42.16917038 316.01519775]
[35.24973679 302.30328369]
[36.12931824 286.96957397]
[44.57131195 274.13882446]
[58.30486298 267.26242065]
[59.11694717 252.28440857]
[59.92902756 237.30641174]
[60.74111176 222.32839966]
[61.55319595 207.35040283]
[62.36528015 192.37240601]
[55.32836914 179.24490356]
[63.80144882 165.88386536]
[64.61353302 150.90586853]
[58.17477417 129.18560791]
[61.28911591 110.09723663]
[71.13118744 97.13426971]
[83.80204010 92.11470795]
[95.14521027 94.92944336]
[87.18111420 82.21829987]
[79.21702576 69.50715637]
[71.25292969 56.79601288]
[63.28883362 44.08486557]
[66.01548767 58.83496475]
[58.14732742 71.60571289]
[43.74669647 75.80355072]
[30.24867439 69.26111603]
[24.62231827 55.35629654]
[29.77252960 41.26816940]
[43.04228210 34.27022934]
[28.13021088 35.89201355]
[13.21814156 37.51379776]
[-1.69392765 39.13558578]
[-16.60599709 40.75737000]
[-31.51806641 42.37915421]
[-39.74443436 46.43044281]
[-46.71365738 43.89310455]
[-61.65257645 45.24540329]
[-76.88211823 52.69506836]
[-88.25659943 40.12297821]
[-79.32460022 25.71271133]
[-63.00487137 30.30648232]
[-48.06595230 28.95418739]
[-33.13985062 27.46708488]
[-18.22778320 25.84530067]
[-3.31571293 24.22351456]
[11.59635639 22.60172844]
[26.50842667 20.97994423]
[41.42049408 19.35815811]
[49.61278152 6.79287100]
[45.08067322 -7.50608063]
[40.54856873 -21.80503273]
[36.01646042 -36.10398483]
[31.48435593 -50.40293503]
[26.05830383 -64.38713837]
[19.75996780 -78.00077057]
[5.19766092 -83.53041840]
[-0.99581641 -97.42630005]
[4.36559868 -111.27515411]
[-1.93273771 -124.88878632]
[-8.23107433 -138.50241089]
[-14.52941036 -152.11604309]
[-20.82774734 -165.72967529]
[-27.12608337 -179.34330750]
[-33.42441940 -192.95693970]
[-39.72275543 -206.57057190]
[-46.02109528 -220.18420410]
[-52.48700333 -226.68637085]
[-52.30776978 -234.10095215]
[-58.35929489 -247.82606506]
[-64.41082764 -261.55120850]
[-79.23365784 -267.03381348]
[-85.76219940 -281.42663574]
[-80.12317657 -296.19067383]
[-65.66212463 -302.56668091]
[-50.95852661 -296.77188110]
[-44.73576736 -282.24423218]
[-50.68569946 -267.60272217]
[-44.63417435 -253.87759399]
[-38.58264542 -240.15248108]
[-32.40746307 -226.48254395]
[-26.10912514 -212.86891174]
[-19.81078911 -199.25527954]
[-13.51245213 -185.64164734]
[-7.21411610 -172.02801514]
[-0.91577947 -158.41438293]
[5.38255692 -144.80075073]
[11.68089390 -131.18711853]
[17.97923088 -117.57348633]
[32.00521088 -112.69419861]
[38.58654785 -98.97776031]
[33.37360001 -84.29911041]
[39.67193604 -70.68547821]
[45.00516129 -84.70534515]
[58.02766418 -92.14942932]
[72.81473541 -89.63097382]
[82.63885498 -78.29577637]
[83.03044891 -63.30089188]
[73.81135559 -51.46837997]
[59.17589188 -48.18155289]
[45.78330612 -54.93503952]
[50.31541443 -40.63608932]
[54.84751892 -26.33713722]
[59.37962723 -12.03818703]
[63.91173172 2.26076484]
[67.51598358 5.51931000]
[69.96611786 9.28617859]
[82.06945038 0.42563665]
[94.17279053 -8.43490505]
[106.27613068 -17.29544640]
[115.48496246 -31.53039360]
[131.71286011 -26.62206841]
[131.48869324 -9.66960239]
[115.13667297 -5.19210911]
[103.03333282 3.66843295]
[90.92999268 12.52897453]
[78.82666016 21.38951683]
[75.99997711 36.12077332]
[83.96407318 48.83191681]
[91.92816925 61.54306030]
[99.89225769 74.25420380]
[107.85635376 86.96534729]
[120.49508667 95.04386902]
[135.37544250 96.93461609]
[150.25579834 98.82536316]
[165.13616943 100.71610260]
[180.01652527 102.60684967]
[194.89688110 104.49759674]
[204.72790527 92.60833740]
[219.43302917 87.94328308]
[234.31991577 91.99103546]
[244.63819885 103.45997620]
[247.09535217 118.69040680]
[240.90731812 132.82234192]
[228.04867554 141.34634399]
[212.62255859 141.54243469]
[199.55139160 133.34803772]
[193.00613403 119.37796021]
[178.12577820 117.48721313]
[163.24542236 115.59646606]
[148.36506653 113.70571899]
[133.48469543 111.81497192]
[118.60433960 109.92422485]
[111.69783783 123.24039459]
[104.79193878 136.55535889]
[114.90914154 147.62976074]
[125.02634430 158.70416260]
[135.14353943 169.77854919]
[150.54786682 167.91140747]
[164.09132385 175.48469543]
[170.56614685 189.58633423]
[167.48265076 204.79396057]
[156.02650452 215.25991821]
[140.60282898 216.95983887]
[127.14233398 209.24008179]
[120.82086182 195.06903076]
[124.06914520 179.89575195]
[113.95194244 168.82135010]
[103.83474731 157.74696350]
[93.71754456 146.67256165]
[79.59152985 151.71794128]
[78.77944946 166.69595337]
[85.75827789 180.89477539]
[77.34328461 193.18449402]
[76.53119659 208.16249084]
[75.71911621 223.14048767]
[74.90702820 238.11848450]
[74.09494781 253.09649658]
[73.28285980 268.07449341]
[86.19243622 276.39544678]
[93.19769287 290.06375122]
[92.41425323 305.40264893]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 170]
[8 169]
[9 168]
[10 167]
[11 166]
[12 165]
[14 163]
[15 162]
[20 123]
[21 122]
[22 121]
[23 120]
[24 119]
[31 50]
[32 49]
[33 48]
[34 47]
[35 46]
[36 45]
[38 44]
[39 43]
[51 106]
[52 105]
[53 104]
[54 103]
[55 102]
[56 94]
[57 93]
[60 90]
[61 89]
[62 88]
[63 87]
[64 86]
[65 85]
[66 84]
[67 83]
[68 82]
[70 81]
[71 80]
[72 79]
[108 118]
[109 117]
[110 116]
[111 115]
[124 144]
[125 143]
[126 142]
[127 141]
[128 140]
[129 139]
[146 161]
[147 160]
[148 159]
[149 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
