%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:29:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAGGGAGACCCUGUCUCUUAAAAAAAAAAAAAAAAAAGGACUGAGUGAGCCGAGCCCAGUCCUCUGAUGCACUGUGUCAUUCAUCCCCUUUCUUAGGCUGUGUUGGUUCUAGGCUAGCUGCUGUCUUUCUUUGGUAGGCUGCUAACCUCUUUGGAUUGUGAAUUUAAAACAUGUUUUACAGUAAAUUUGCUGCCAAGACAAGAGGUGUAUUUCUCCAGCA\
) } def
/len { sequence length } bind def

/coor [
[-18.62823486 331.36129761]
[-31.47086143 323.61102295]
[-40.51632309 311.64523315]
[-44.47056198 297.17584229]
[-42.76734924 282.27108765]
[-48.13957977 296.27606201]
[-53.51181412 310.28100586]
[-58.88404465 324.28598022]
[-64.25627136 338.29095459]
[-69.62850952 352.29592896]
[-75.00074005 366.30090332]
[-75.02825165 383.25482178]
[-91.32722473 387.92169189]
[-100.32372284 373.55160522]
[-89.00570679 360.92864990]
[-83.63347626 346.92370605]
[-78.26124573 332.91873169]
[-72.88901520 318.91375732]
[-67.51677704 304.90878296]
[-62.14455032 290.90380859]
[-56.77231979 276.89886475]
[-61.34152222 270.95138550]
[-72.77043915 280.66632080]
[-84.19935608 290.38125610]
[-95.62826538 300.09619141]
[-107.05718231 309.81109619]
[-118.48609924 319.52603149]
[-124.44068146 333.29348755]
[-138.62524414 338.17184448]
[-151.78837585 330.97937012]
[-155.34489441 316.40710449]
[-146.97515869 303.95928955]
[-132.13946533 301.75424194]
[-119.80755615 293.21469116]
[-107.47564697 284.67510986]
[-95.14373779 276.13555908]
[-82.81183624 267.59600830]
[-70.47992706 259.05645752]
[-75.04912567 253.10897827]
[-89.96547699 254.69091797]
[-104.88182831 256.27285767]
[-119.79817963 257.85479736]
[-134.71452332 259.43673706]
[-149.63087463 261.01867676]
[-164.54722595 262.60058594]
[-177.45443726 271.75015259]
[-190.92672729 265.39825439]
[-205.84307861 266.98019409]
[-214.42465210 280.05270386]
[-229.41615295 284.50115967]
[-243.73905945 278.22515869]
[-250.63053894 264.18801880]
[-246.83663940 249.01763916]
[-234.14871216 239.87701416]
[-218.55763245 241.08209229]
[-207.42501831 252.06384277]
[-192.50866699 250.48190308]
[-180.66836548 241.44549561]
[-166.12916565 247.68424988]
[-151.21281433 246.10231018]
[-136.29646301 244.52037048]
[-121.38011169 242.93844604]
[-106.46376801 241.35650635]
[-91.54741669 239.77456665]
[-76.63106537 238.19262695]
[-60.18504715 237.48652649]
[-47.44469452 243.27224731]
[-40.48277283 252.65867615]
[-29.54535103 242.39355469]
[-18.60792732 232.12843323]
[-7.67050600 221.86331177]
[3.26691628 211.59817505]
[14.20433807 201.33305359]
[25.14175987 191.06793213]
[36.07918167 180.80281067]
[40.31446075 161.93101501]
[60.02048874 157.65733337]
[70.66438293 147.08815002]
[81.30827332 136.51896667]
[91.95216370 125.94979095]
[78.95365143 120.52008820]
[69.57212830 108.59849548]
[66.98541260 92.55043793]
[72.86493683 76.23616791]
[65.76488495 63.02294540]
[58.66482925 49.80972290]
[43.79829788 45.15955353]
[36.78606415 31.65832329]
[41.31090546 17.51401711]
[34.21085358 4.30079556]
[27.11079788 -8.91242695]
[12.22452736 -14.89393997]
[7.75783539 -30.30264664]
[17.13718605 -43.31830215]
[33.16754150 -43.95641327]
[43.55178833 -31.72747421]
[40.32402039 -16.01247978]
[47.42407227 -2.79925823]
[54.52412796 10.41396427]
[68.81645203 14.44696712]
[76.20513916 27.74591064]
[71.87805176 42.70966721]
[78.97810364 55.92288971]
[86.07815552 69.13611603]
[93.57350922 69.40020752]
[93.67737579 54.40056610]
[86.92884827 41.00439835]
[95.01950073 28.37343216]
[110.01018524 28.90213394]
[117.19089508 42.07169724]
[109.51628113 54.95863724]
[108.56420135 69.92839050]
[116.05955505 70.19248199]
[124.07196045 57.51173782]
[132.08436584 44.83098984]
[132.91488647 29.03159904]
[146.25427246 22.40513802]
[154.26669312 9.72439098]
[162.27909851 -2.95635509]
[170.29150391 -15.63710117]
[171.12202454 -31.43649292]
[184.46141052 -38.06295395]
[192.47381592 -50.74370193]
[200.48622131 -63.42444611]
[197.22303772 -78.65563965]
[205.52938843 -91.40158081]
[220.07012939 -94.41867828]
[228.08253479 -107.09942627]
[224.36047363 -122.45916748]
[232.66076660 -135.90835571]
[248.05900574 -139.46781921]
[261.41967773 -131.02578735]
[264.81613159 -115.59078217]
[256.23333740 -102.32009888]
[240.76327515 -99.08701324]
[232.75086975 -86.40626526]
[236.26899719 -71.97857666]
[228.32392883 -59.00435638]
[213.16697693 -55.41204071]
[205.15457153 -42.73129272]
[197.14216614 -30.05054665]
[196.88473511 -15.15816593]
[182.97224426 -7.62469387]
[174.95983887 5.05605221]
[166.94743347 17.73679924]
[158.93502808 30.41754532]
[158.67759705 45.30992508]
[144.76510620 52.84339905]
[136.75270081 65.52414703]
[128.74029541 78.20488739]
[132.49252319 93.67240143]
[129.09066772 107.86834717]
[120.41432190 117.92803955]
[135.01089478 121.38346863]
[149.60746765 124.83890533]
[164.20404053 128.29432678]
[174.77067566 119.95048523]
[188.01998901 119.22363281]
[199.10595703 126.15536499]
[204.10267639 138.02682495]
[218.64912415 141.68754578]
[233.19557190 145.34825134]
[247.74201965 149.00897217]
[262.28845215 152.66967773]
[276.83489990 156.33039856]
[291.38134766 159.99111938]
[305.92779541 163.65182495]
[320.47424316 167.31254578]
[329.22131348 154.90878296]
[341.86065674 146.50569153]
[356.68286133 143.23970032]
[371.68334961 145.55252075]
[384.83346558 153.13134766]
[394.35476685 164.95123291]
[398.95953369 179.41362000]
[398.02502441 194.56257629]
[391.67764282 208.34934998]
[380.77581787 218.90939331]
[366.79391479 224.81452942]
[351.62286377 225.26615906]
[337.31445312 220.20318604]
[325.80377197 210.31033325]
[318.64752197 196.92553711]
[316.81353760 181.85899353]
[302.26708984 178.19827271]
[287.72064209 174.53756714]
[273.17419434 170.87684631]
[258.62774658 167.21612549]
[244.08129883 163.55541992]
[229.53485107 159.89469910]
[214.98840332 156.23399353]
[200.44195557 152.57327271]
[186.38453674 161.81234741]
[169.66622925 157.94552612]
[160.74861145 142.89089966]
[146.15203857 139.43547058]
[131.55546570 135.98004150]
[116.95889282 132.52461243]
[102.52134705 136.59367371]
[91.87745667 147.16285706]
[81.23355865 157.73204041]
[70.58966827 168.30122375]
[71.18034363 179.15110779]
[65.81704712 188.34799194]
[56.47612381 192.98156738]
[46.34430695 191.74021912]
[35.40688705 202.00535583]
[24.46946335 212.27047729]
[13.53204155 222.53559875]
[2.59461927 232.80072021]
[-8.34280300 243.06585693]
[-19.28022575 253.33097839]
[-30.21764755 263.59609985]
[-17.06267738 256.38870239]
[-2.17179465 254.58270264]
[12.32469463 258.43649292]
[24.35290527 267.39877319]
[32.19206619 280.18734741]
[34.72069931 294.97265625]
[31.57705498 309.63955688]
[23.21086502 322.08972168]
[10.81900692 330.54205322]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 21]
[6 20]
[7 19]
[8 18]
[9 17]
[10 16]
[11 15]
[39 65]
[40 64]
[41 63]
[42 62]
[43 61]
[44 60]
[45 59]
[47 57]
[48 56]
[68 213]
[69 212]
[70 211]
[71 210]
[72 209]
[73 208]
[74 207]
[75 206]
[77 202]
[78 201]
[79 200]
[80 199]
[84 104]
[85 103]
[86 102]
[89 99]
[90 98]
[91 97]
[113 150]
[114 149]
[115 148]
[117 146]
[118 145]
[119 144]
[120 143]
[122 141]
[123 140]
[124 139]
[127 136]
[128 135]
[153 198]
[154 197]
[155 196]
[156 195]
[160 192]
[161 191]
[162 190]
[163 189]
[164 188]
[165 187]
[166 186]
[167 185]
[168 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
