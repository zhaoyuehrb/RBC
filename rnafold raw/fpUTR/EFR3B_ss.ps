%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:01:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCGCUGCAGCCCGGCGCUGAAUGGGCUGGCGGCGCCCGGCUCCGUCCUGCCCGCGGCCGGCCCCCGCGUCUGCUCCCUCCCCGCCCGGGCCCCUGUCGGCCGCCGCCAGUCCCCGCCCCGACUGUGAAUGAAAGGCGGGCGCCGCCGAGGGCUGGCUGGGAACGCCGCAGCGACGCCGGCCUCUCGAGAGGCGCGCGCCCCGCCGAG\
) } def
/len { sequence length } bind def

/coor [
[95.95973206 177.20516968]
[95.28675842 162.22027588]
[94.61378479 147.23538208]
[78.76351929 142.53474426]
[65.48139954 132.69035339]
[56.37363815 118.89268494]
[52.54164886 102.81031036]
[54.44883347 86.38808441]
[40.93429947 79.87982941]
[27.41976738 73.37157440]
[13.90523529 66.86331940]
[1.49489713 70.37890625]
[-9.62765121 64.67934418]
[-13.74813080 53.30569077]
[-27.16379166 46.59599304]
[-40.57945251 39.88629532]
[-56.38301086 40.63336182]
[-64.30500031 28.02021980]
[-77.72065735 21.31052399]
[-86.79649353 20.27054214]
[-91.28569794 14.39879131]
[-101.44899750 18.27658463]
[-111.85433197 15.96793365]
[-119.11811829 8.47089195]
[-121.01500702 -1.57072902]
[-134.11613464 -8.87556171]
[-147.21725464 -16.18039322]
[-160.31837463 -23.48522568]
[-173.41949463 -30.79005814]
[-186.52061462 -38.09489059]
[-199.62174988 -45.39972305]
[-212.72286987 -52.70455551]
[-225.82398987 -60.00938797]
[-238.92510986 -67.31421661]
[-252.02622986 -74.61904907]
[-265.12734985 -81.92388153]
[-280.94851685 -81.88659668]
[-288.29663086 -94.84245300]
[-301.39776611 -102.14728546]
[-314.49890137 -109.45211792]
[-327.60000610 -116.75695038]
[-340.70114136 -124.06178284]
[-349.36230469 -116.86209869]
[-359.77957153 -112.65106201]
[-370.95785522 -111.81345367]
[-381.83465576 -114.41266632]
[-391.38101196 -120.18617249]
[-398.69897461 -128.57196045]
[-403.10589600 -138.76319885]
[-404.19827271 -149.78587341]
[-401.88848877 -160.59185791]
[-414.52929688 -168.66711426]
[-427.17013550 -176.74237061]
[-439.81094360 -184.81764221]
[-452.45175171 -192.89289856]
[-461.36917114 -194.87585449]
[-465.22000122 -201.18469238]
[-477.73861694 -209.44815063]
[-490.25720215 -217.71160889]
[-506.03692627 -218.85673523]
[-512.39630127 -232.32550049]
[-524.91491699 -240.58894348]
[-538.81451416 -232.13188171]
[-554.95300293 -230.58833313]
[-570.09460449 -236.21679688]
[-581.22589111 -247.84294128]
[-586.15502930 -263.10418701]
[-583.94360352 -278.92974854]
[-596.58441162 -287.00500488]
[-612.98242188 -287.19982910]
[-620.77569580 -301.62884521]
[-611.94720459 -315.44876099]
[-595.57891846 -314.44281006]
[-588.50915527 -299.64584351]
[-575.86834717 -291.57055664]
[-564.43927002 -299.43536377]
[-550.83282471 -302.35913086]
[-537.09655762 -299.86810303]
[-525.31030273 -292.30596924]
[-517.27148438 -280.78665161]
[-514.22088623 -267.03057861]
[-516.65142822 -253.10754395]
[-504.13284302 -244.84410095]
[-489.24853516 -244.29002380]
[-481.99374390 -230.23020935]
[-469.47515869 -221.96675110]
[-456.95654297 -213.70329285]
[-444.37649536 -205.53370667]
[-431.73568726 -197.45845032]
[-419.09487915 -189.38319397]
[-406.45404053 -181.30793762]
[-393.81323242 -173.23266602]
[-377.53002930 -182.83598328]
[-358.54409790 -182.83494568]
[-342.12100220 -173.14674377]
[-332.85781860 -156.38671875]
[-333.39630127 -137.16290283]
[-320.29519653 -129.85807800]
[-307.19406128 -122.55323792]
[-294.09292603 -115.24841309]
[-280.99182129 -107.94358063]
[-266.10772705 -108.50335693]
[-257.82254028 -95.02500916]
[-244.72140503 -87.72017670]
[-231.62028503 -80.41534424]
[-218.51914978 -73.11051178]
[-205.41802979 -65.80567932]
[-192.31690979 -58.50084686]
[-179.21578979 -51.19601440]
[-166.11466980 -43.89118195]
[-153.01353455 -36.58634949]
[-139.91241455 -29.28151703]
[-126.81129456 -21.97668457]
[-113.71017456 -14.67185211]
[-94.44965363 -16.37537766]
[-84.37606049 1.08500445]
[-71.01096344 7.89486217]
[-57.59530258 14.60455894]
[-42.75132370 13.37756824]
[-33.86975479 26.47063446]
[-20.45409393 33.18033218]
[-7.03843355 39.89002991]
[10.39676952 37.89777756]
[20.41349220 53.34878540]
[33.92802429 59.85704041]
[47.44255829 66.36529541]
[60.95708847 72.87355042]
[70.73842621 62.53063965]
[83.14336395 55.54725266]
[97.05968475 52.54952621]
[111.23963928 53.80624008]
[124.41183472 59.20471573]
[135.39524841 68.26092529]
[143.20510864 80.16287231]
[147.14117432 93.84343719]
[146.85052490 108.07599640]
[161.04542542 112.92414856]
[175.24034119 117.77229309]
[189.43525696 122.62043762]
[204.99549866 119.75876617]
[214.53889465 131.19436646]
[228.73381042 136.04251099]
[242.92872620 140.89065552]
[257.12362671 145.73880005]
[271.31854248 150.58694458]
[286.87878418 147.72526550]
[296.42218018 159.16087341]
[310.65295410 163.90269470]
[324.91882324 168.53794861]
[339.18466187 173.17320251]
[353.45050049 177.80845642]
[367.75064087 182.33688354]
[382.08422852 186.75820923]
[396.41781616 191.17953491]
[410.75140381 195.60086060]
[425.08499146 200.02218628]
[439.41857910 204.44352722]
[453.75216675 208.86485291]
[460.65237427 202.04197693]
[469.51058960 198.22421265]
[479.09304810 197.89738464]
[488.08160400 201.06425476]
[495.25521851 207.24992371]
[499.65570068 215.57247925]
[500.71569824 224.86866760]
[514.75921631 230.13929749]
[528.80273438 235.40991211]
[544.88293457 232.19113159]
[555.50585938 244.68452454]
[549.74359131 260.03799438]
[533.52386475 262.45718384]
[523.53210449 249.45343018]
[509.48861694 244.18281555]
[495.44506836 238.91218567]
[477.61227417 248.89999390]
[457.92840576 242.38757324]
[449.33084106 223.19844055]
[434.99725342 218.77711487]
[420.66366577 214.35578918]
[406.33007812 209.93446350]
[391.99649048 205.51312256]
[377.66290283 201.09179688]
[363.32931519 196.67047119]
[356.01052856 197.70285034]
[348.81524658 192.07431030]
[334.54940796 187.43905640]
[320.28356934 182.80380249]
[306.01770020 178.16854858]
[298.68429565 179.09132385]
[291.57403564 173.35577393]
[277.02911377 176.56422424]
[266.47039795 164.78184509]
[252.27548218 159.93370056]
[238.08058167 155.08555603]
[223.88566589 150.23741150]
[209.69075012 145.38926697]
[195.14581299 148.59771729]
[184.58711243 136.81533813]
[170.39219666 131.96719360]
[156.19728088 127.11905670]
[142.00238037 122.27091217]
[133.76919556 133.46392822]
[122.65139008 141.79841614]
[109.59867859 146.56240845]
[110.27165222 161.54730225]
[110.94462585 176.53221130]
[120.22429657 190.05329895]
[112.91133881 204.73159790]
[96.52870178 205.46734619]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 206]
[2 205]
[3 204]
[8 127]
[9 126]
[10 125]
[11 124]
[14 122]
[15 121]
[16 120]
[18 118]
[19 117]
[21 116]
[25 114]
[26 113]
[27 112]
[28 111]
[29 110]
[30 109]
[31 108]
[32 107]
[33 106]
[34 105]
[35 104]
[36 103]
[38 101]
[39 100]
[40 99]
[41 98]
[42 97]
[51 92]
[52 91]
[53 90]
[54 89]
[55 88]
[57 87]
[58 86]
[59 85]
[61 83]
[62 82]
[68 75]
[69 74]
[136 201]
[137 200]
[138 199]
[139 198]
[141 196]
[142 195]
[143 194]
[144 193]
[145 192]
[147 190]
[148 188]
[149 187]
[150 186]
[151 185]
[152 183]
[153 182]
[154 181]
[155 180]
[156 179]
[157 178]
[158 177]
[165 174]
[166 173]
[167 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
