%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:35:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCCACCACCUAACCUGGUGGUUACAGAAGGAGGAACACAGUCCUCCUGUGUUCCAGGUGCCAGGAGGUGACUGACUAUAGCAUCAGUCAUCACUGCACACCCUACCUGGAAUUAGUAUAUAAAGCUACGCGGAGCGAUCUCUGCCCCUGACCCUGGAAAAAUCUGUCUCACCCACAAAG\
) } def
/len { sequence length } bind def

/coor [
[-10.11889267 462.60623169]
[-22.59466171 454.27825928]
[-31.97761536 442.57525635]
[-37.39383316 428.58724976]
[-38.33878326 413.61627197]
[-45.11381912 426.99905396]
[-51.88885880 440.38183594]
[-58.66389465 453.76461792]
[-65.43893433 467.14739990]
[-72.21397400 480.53018188]
[-67.05352020 495.46823120]
[-74.04235077 509.64328003]
[-89.03412628 514.64550781]
[-103.13448334 507.50720215]
[-107.97792816 492.46337891]
[-100.69094086 478.43927002]
[-85.59675598 473.75515747]
[-78.82171631 460.37237549]
[-72.04667664 446.98959351]
[-65.27163696 433.60681152]
[-58.49660110 420.22402954]
[-51.72156525 406.84124756]
[-52.55741501 397.69152832]
[-46.01212311 389.67581177]
[-43.42164612 374.90121460]
[-40.83116913 360.12658691]
[-38.24069214 345.35195923]
[-35.65021515 330.57733154]
[-46.57404327 320.29776001]
[-61.16413879 323.78042603]
[-75.75423431 327.26312256]
[-90.34432983 330.74581909]
[-104.93442535 334.22851562]
[-119.52452087 337.71121216]
[-134.11460876 341.19387817]
[-142.17529297 354.78805542]
[-157.50804138 358.61978149]
[-171.01622009 350.41583252]
[-174.68563843 335.04342651]
[-166.33932495 321.62274170]
[-150.92898560 318.11605835]
[-137.59730530 326.60379028]
[-123.00720978 323.12109375]
[-108.41711426 319.63842773]
[-93.82701874 316.15573120]
[-79.23692322 312.67303467]
[-64.64682770 309.19033813]
[-50.05673599 305.70764160]
[-47.78061295 288.84320068]
[-37.96822357 275.77844238]
[-23.64459038 269.44500732]
[-8.72746944 270.85583496]
[-1.26507998 257.84381104]
[6.19730997 244.83177185]
[13.65970039 231.81976318]
[21.12208939 218.80773926]
[28.58448029 205.79571533]
[36.04687119 192.78369141]
[36.64866638 185.39717102]
[43.75337982 179.61219788]
[43.63172531 164.71809387]
[57.34799194 156.83300781]
[65.03509521 143.95246887]
[72.72219849 131.07191467]
[80.40930176 118.19136810]
[54.01654053 90.60512543]
[72.66613770 38.68417358]
[67.07656097 24.76452637]
[61.48697662 10.84488010]
[55.89739227 -3.07476664]
[50.30781174 -16.99441338]
[44.71822739 -30.91406059]
[39.12864685 -44.83370590]
[33.53906250 -58.75335312]
[27.94948196 -72.67300415]
[12.86903763 -76.32811737]
[2.84279585 -88.17100525]
[1.72605026 -103.64784241]
[9.94821262 -116.80746460]
[24.34769249 -122.58972931]
[39.38759613 -118.77124023]
[49.28477859 -106.82028198]
[50.23356247 -91.33223724]
[41.86912918 -78.26258087]
[47.45870972 -64.34293365]
[53.04829407 -50.42329025]
[58.63787460 -36.50364304]
[64.22745514 -22.58399582]
[69.81703949 -8.66434860]
[75.40662384 5.25529766]
[80.99620819 19.17494392]
[86.58578491 33.09459305]
[94.06291962 33.67979050]
[95.23332214 18.72552109]
[96.40371704 3.77125168]
[92.89588928 -10.81282043]
[105.68228912 -18.65552902]
[117.09223938 -8.91833115]
[111.35798645 4.94164944]
[110.18759155 19.89591789]
[109.01718903 34.85018921]
[116.49432373 35.43538666]
[124.18142700 22.55484009]
[121.66366577 6.71058512]
[132.58737183 -5.03897524]
[148.57281494 -3.68058324]
[157.35733032 9.74371910]
[152.20219421 24.93595695]
[137.06198120 30.24194336]
[129.37487793 43.12248993]
[134.60868835 48.49437332]
[149.14688110 44.80099487]
[145.07632446 59.23814774]
[150.31013489 64.61003113]
[163.38642883 57.26084518]
[176.46272278 49.91165924]
[189.53901672 42.56247330]
[192.25447083 27.16246223]
[204.26672363 17.15048218]
[219.90396118 17.25388527]
[231.78276062 27.42384529]
[234.29432678 42.85842133]
[226.25274658 56.26987457]
[211.45503235 61.32573318]
[196.88821411 55.63876724]
[183.81192017 62.98795319]
[170.73562622 70.33714294]
[157.65933228 77.68632507]
[161.01542664 92.30674744]
[164.37121582 106.92586517]
[179.34353638 107.83654022]
[194.31587219 108.74721527]
[209.28819275 109.65789032]
[224.26052856 110.56856537]
[239.23286438 111.47924042]
[253.65696716 103.67685699]
[267.48245239 112.49662018]
[266.48681641 128.86552429]
[251.69432068 135.94462585]
[238.32218933 126.45156860]
[223.34985352 125.54089355]
[208.37751770 124.63021851]
[193.40519714 123.71954346]
[178.43286133 122.80886841]
[163.46054077 121.89819336]
[122.18769073 141.35757446]
[93.28984070 125.87847137]
[85.60274506 138.75901794]
[77.91564178 151.63955688]
[70.22853851 164.52011108]
[69.80035400 180.33552551]
[56.63392258 187.29930115]
[49.05889130 200.24607849]
[41.59650421 213.25810242]
[34.13411331 226.27012634]
[26.67172241 239.28215027]
[19.20933342 252.29417419]
[11.74694252 265.30618286]
[4.28455305 278.31820679]
[13.82712650 293.95706177]
[12.31274414 313.04821777]
[-0.65056950 328.25466919]
[-20.87559319 333.16781616]
[-23.46607018 347.94244385]
[-26.05654907 362.71704102]
[-28.64702606 377.49166870]
[-31.23750305 392.26629639]
[-21.51435089 380.84436035]
[-8.79900265 372.88699341]
[5.72424746 369.13528442]
[20.70271683 369.93872070]
[34.74132156 375.22241211]
[46.53252411 384.49429321]
[54.97809601 396.89074707]
[59.29143143 411.25720215]
[59.07078552 426.25558472]
[54.33670807 440.48895264]
[45.53013229 452.63162231]
[33.47129059 461.55261230]
[19.28333092 466.42108154]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 22]
[6 21]
[7 20]
[8 19]
[9 18]
[10 17]
[24 167]
[25 166]
[26 165]
[27 164]
[28 163]
[29 48]
[30 47]
[31 46]
[32 45]
[33 44]
[34 43]
[35 42]
[52 159]
[53 158]
[54 157]
[55 156]
[56 155]
[57 154]
[58 153]
[60 152]
[62 150]
[63 149]
[64 148]
[65 147]
[67 92]
[68 91]
[69 90]
[70 89]
[71 88]
[72 87]
[73 86]
[74 85]
[75 84]
[102 110]
[103 109]
[114 128]
[115 127]
[116 126]
[117 125]
[130 145]
[131 144]
[132 143]
[133 142]
[134 141]
[135 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
