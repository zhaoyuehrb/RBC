%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:57:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCCCGGCAAGGCCCAAUGGGGCGGCAGGCCCGGCAGCCCCGCCCCGGUGGUGCCCGCGCGGCCAGCGCCCGCCAGGCCCAGCGUUAGCCCGCGGCCAGGCAGCCGGGAGGAGCGGCGCGCGCUCGGACCUCUCCCGCCCUGCUCGUUCGCUCUCCAGCUUGGG\
) } def
/len { sequence length } bind def

/coor [
[184.26383972 176.67076111]
[182.80529785 167.91442871]
[184.44464111 159.68009949]
[171.59941101 151.93414307]
[158.75418091 144.18818665]
[145.90893555 136.44221497]
[133.06370544 128.69625854]
[120.21846771 120.95029449]
[105.20433044 128.64640808]
[88.44260406 126.72317505]
[75.56179810 115.82642365]
[61.29594803 120.46167755]
[47.03009796 125.09693146]
[32.80902481 129.86778259]
[18.63401222 134.77380371]
[4.45900011 139.67982483]
[-6.05155087 151.50517273]
[-20.60945702 148.35609436]
[-34.78446960 153.26211548]
[-48.95948029 158.16813660]
[-63.13449478 163.07415771]
[-77.30950928 167.98017883]
[-91.48451996 172.88619995]
[-105.65953064 177.79222107]
[-119.83454132 182.69824219]
[-124.49648285 187.48924255]
[-130.04725647 188.95182800]
[-134.64360046 187.50999451]
[-148.99511719 191.87280273]
[-163.34661865 196.23561096]
[-170.56637573 210.29444885]
[-185.63795471 215.05079651]
[-199.61967468 207.68281555]
[-204.21641541 192.56178284]
[-196.70101929 178.65875244]
[-181.53222656 174.22213745]
[-167.70942688 181.88409424]
[-153.35792542 177.52128601]
[-139.00640869 173.15847778]
[-124.74056244 168.52322388]
[-110.56555176 163.61720276]
[-96.39054108 158.71118164]
[-82.21552277 153.80516052]
[-68.04051208 148.89913940]
[-53.86550140 143.99313354]
[-39.69048691 139.08711243]
[-25.51547623 134.18109131]
[-16.01881599 122.70664978]
[-0.44701940 125.50481415]
[13.72799301 120.59879303]
[27.90300560 115.69277191]
[33.21959305 110.50984955]
[42.39484406 110.83108521]
[56.66069031 106.19583130]
[70.92653656 101.56056976]
[71.84121704 92.59835052]
[75.45178223 84.34475708]
[65.30915833 73.29364014]
[55.16653824 62.24252701]
[45.02391434 51.19140625]
[29.12166405 49.07054901]
[20.98880196 35.24173355]
[26.86416054 20.31324768]
[42.24066925 15.73694706]
[55.32278442 25.02337646]
[56.07503128 41.04878616]
[66.21765137 52.09990311]
[76.36027527 63.15102005]
[86.50289917 74.20213318]
[89.81373596 72.72470856]
[93.28251648 71.67021179]
[96.85545349 71.05499268]
[99.13142395 56.22866821]
[101.40739441 41.40233994]
[95.85359955 26.58795929]
[105.43244171 15.18203831]
[107.70841217 0.35571134]
[109.98438263 -14.47061539]
[112.26035309 -29.29694176]
[110.19859314 -35.65592194]
[111.49540710 -41.24774933]
[114.91558075 -44.64004898]
[117.75434875 -59.36898041]
[120.59311676 -74.09790802]
[111.52824402 -87.04409027]
[114.35498810 -102.59352875]
[127.39628601 -111.52101898]
[142.91496277 -108.53003693]
[151.70408630 -95.39508057]
[148.54919434 -79.90888977]
[135.32205200 -71.25914001]
[132.48327637 -56.53020859]
[129.64451599 -41.80128098]
[127.08667755 -27.02097130]
[124.81070709 -12.19464493]
[122.53473663 2.63168120]
[120.25876617 17.45800781]
[125.97535706 31.21191216]
[116.23371887 43.67831039]
[113.95775604 58.50463867]
[111.68178558 73.33096313]
[126.36788177 87.65348053]
[127.96443176 108.10506439]
[140.80966187 115.85102081]
[153.65490723 123.59698486]
[166.50013733 131.34294128]
[179.34536743 139.08891296]
[192.19061279 146.83486938]
[218.87251282 140.94062805]
[236.65612793 166.49403381]
[250.92198181 171.12930298]
[265.18783569 175.76455688]
[279.45367432 180.39981079]
[293.71951294 185.03506470]
[307.98538208 189.67031860]
[322.25122070 194.30557251]
[336.56054688 198.80480957]
[350.91204834 203.16761780]
[366.36602783 199.77865601]
[376.29266357 210.88322449]
[390.64416504 215.24603271]
[404.99566650 219.60885620]
[420.24981689 211.08993530]
[436.62994385 216.11820984]
[444.17385864 231.12622070]
[458.60583496 235.21499634]
[473.03781128 239.30378723]
[485.87161255 230.36917114]
[501.44122314 231.82575989]
[512.39508057 242.98579407]
[513.56121826 258.57983398]
[504.38891602 271.24487305]
[489.20910645 275.00085449]
[475.18920898 268.07431030]
[468.94900513 253.73576355]
[454.51702881 249.64697266]
[440.08508301 245.55819702]
[429.80020142 253.36393738]
[416.70147705 253.81333923]
[405.57989502 246.51716614]
[400.63287354 233.96035767]
[386.28134155 229.59754944]
[371.92984009 225.23474121]
[357.50238037 228.93576050]
[346.54925537 217.51913452]
[332.19772339 213.15631104]
[324.85006714 214.22438049]
[317.61596680 208.57141113]
[303.35012817 203.93615723]
[289.08425903 199.30090332]
[274.81842041 194.66564941]
[260.55258179 190.03039551]
[246.28672791 185.39514160]
[232.02087402 180.75988770]
[220.96975708 190.90251160]
[224.36720276 205.51269531]
[227.76466370 220.12286377]
[237.24137878 234.18089294]
[226.35615540 247.17890930]
[210.85278320 240.31730652]
[213.15447998 223.52032471]
[209.75703430 208.91014099]
[206.35957336 194.29995728]
[196.57983398 190.99346924]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 108]
[4 107]
[5 106]
[6 105]
[7 104]
[8 103]
[11 55]
[12 54]
[13 53]
[14 51]
[15 50]
[16 49]
[18 47]
[19 46]
[20 45]
[21 44]
[22 43]
[23 42]
[24 41]
[25 40]
[28 39]
[29 38]
[30 37]
[57 69]
[58 68]
[59 67]
[60 66]
[72 101]
[73 100]
[74 99]
[76 97]
[77 96]
[78 95]
[79 94]
[82 93]
[83 92]
[84 91]
[110 154]
[111 153]
[112 152]
[113 151]
[114 150]
[115 149]
[116 148]
[117 146]
[118 145]
[120 143]
[121 142]
[122 141]
[125 137]
[126 136]
[127 135]
[155 163]
[156 162]
[157 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
