%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:30:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGAGCCGGACCGGGGCCACCGCGCCCGCUCUGCUCCGACACCGCGCCCCCUGGACAGCCGCCCUCUCCUCCAGGCCCGUGGGGCUGGCCCUGCACCGCCGAGCUUCCCGGGAUGAGGGCCCCCGGUGUGGUCACCCGGCGCGCCCCAGGUCGCUGAGGGACCCCGGCCAGGCGCGGAG\
) } def
/len { sequence length } bind def

/coor [
[-1.06145883 280.04333496]
[-13.11017132 282.20559692]
[-24.86249352 279.04879761]
[-35.00164795 290.10308838]
[-45.14080429 301.15737915]
[-55.27995682 312.21166992]
[-65.41911316 323.26599121]
[-75.55826569 334.32028198]
[-79.06542206 342.78332520]
[-85.96910095 345.47595215]
[-96.29755402 356.35360718]
[-106.62599945 367.23123169]
[-110.51738739 382.56643677]
[-124.89182281 386.46832275]
[-135.22027588 397.34597778]
[-145.54872131 408.22360229]
[-155.87716675 419.10125732]
[-166.11135864 430.06762695]
[-176.25050354 441.12194824]
[-179.27746582 457.23928833]
[-194.83660889 462.42053223]
[-206.92201233 451.33563232]
[-203.10125732 435.38778687]
[-187.30480957 430.98278809]
[-177.16564941 419.92846680]
[-174.95573425 412.85546875]
[-166.75480652 408.77279663]
[-156.42636108 397.89517212]
[-146.09791565 387.01751709]
[-135.76947021 376.13986206]
[-132.61683655 361.58273315]
[-117.50364685 356.90280151]
[-107.17519379 346.02514648]
[-96.84674835 335.14752197]
[-86.61256409 324.18112183]
[-76.47341156 313.12683105]
[-66.33425903 302.07254028]
[-56.19510269 291.01821899]
[-46.05594635 279.96392822]
[-35.91679382 268.90963745]
[-40.23743820 251.80749512]
[-33.38494492 235.38328552]
[-17.92031097 226.26371765]
[0.08065669 228.25007629]
[9.83221817 216.85240173]
[19.58378029 205.45472717]
[29.33534050 194.05705261]
[39.08690262 182.65936279]
[48.83846283 171.26168823]
[58.59002686 159.86401367]
[58.67188644 156.31454468]
[60.49324036 152.63076782]
[64.09712982 149.63722229]
[69.15342712 148.14573669]
[79.48188019 137.26808167]
[89.81032562 126.39044189]
[81.68635559 120.64820862]
[76.23340607 112.62107849]
[74.00481415 103.42759705]
[75.11859894 94.27973938]
[79.26320648 86.32339478]
[85.75835419 80.49488068]
[93.66072083 77.41130829]
[94.43714142 62.43141174]
[95.21356201 47.45151901]
[95.98998260 32.47163010]
[96.76640320 17.49173546]
[97.54282379 2.51184368]
[90.55051422 -0.98715460]
[84.77877808 -6.22177172]
[80.64431763 -12.79447746]
[78.44029999 -20.21190071]
[78.31563568 -27.92185402]
[80.26502228 -35.35444260]
[84.13034821 -41.96418381]
[89.61348724 -47.27003860]
[96.29918671 -50.89041519]
[103.68654633 -52.57059860]
[106.26293182 -67.34768677]
[108.83932495 -82.12477112]
[111.41571045 -96.90185547]
[106.16369629 -111.82589722]
[115.97203827 -123.03507233]
[118.54842377 -137.81216431]
[121.12480927 -152.58924866]
[123.70119476 -167.36633301]
[126.27758026 -182.14341736]
[128.85395813 -196.92050171]
[131.30271912 -211.71926880]
[133.62365723 -226.53862000]
[135.94459534 -241.35797119]
[124.85880280 -252.21545410]
[122.30526733 -267.52096558]
[129.26588440 -281.38925171]
[143.06414795 -288.48767090]
[158.39434814 -286.08673096]
[169.36170959 -275.10964966]
[171.74905396 -259.77731323]
[164.63841248 -245.98535156]
[150.76394653 -239.03703308]
[148.44300842 -224.21768188]
[146.12207031 -209.39833069]
[148.19879150 -202.28507996]
[143.63104248 -194.34411621]
[141.05465698 -179.56703186]
[138.47827148 -164.78994751]
[135.90188599 -150.01286316]
[133.32550049 -135.23577881]
[130.74911499 -120.45868683]
[136.18540955 -106.59160614]
[126.19279480 -94.32546997]
[123.61640930 -79.54838562]
[121.04002380 -64.77130127]
[118.46363831 -49.99421310]
[133.39465332 -33.12816238]
[131.03492737 -10.45876312]
[112.52272034 3.28826404]
[111.74629974 18.26815605]
[110.96987915 33.24804688]
[110.19345856 48.22793961]
[109.41703796 63.20783234]
[108.64061737 78.18772888]
[121.44411469 87.01197052]
[126.53453064 102.78223419]
[120.63096619 119.35583496]
[134.65620422 124.67490387]
[148.68145752 129.99397278]
[162.70669556 135.31304932]
[167.90939331 134.46299744]
[172.45523071 135.59642029]
[175.69454956 138.12513733]
[177.30836487 141.28756714]
[191.03948975 147.32548523]
[204.77059937 153.36338806]
[218.50172424 159.40129089]
[227.64340210 159.99539185]
[232.41633606 165.66375732]
[246.04118347 171.93777466]
[259.71969604 178.09396362]
[273.45080566 184.13186646]
[287.18191528 190.16978455]
[300.91305542 196.20768738]
[314.64416504 202.24559021]
[323.78585815 202.83969116]
[328.55877686 208.50805664]
[342.18362427 214.78207397]
[355.80847168 221.05609131]
[372.72454834 222.18905640]
[376.31866455 238.75764465]
[361.39254761 246.79797363]
[349.53445435 234.68093872]
[335.90960693 228.40692139]
[322.28475952 222.13290405]
[308.60626221 215.97671509]
[294.87512207 209.93881226]
[281.14401245 203.90089417]
[267.41290283 197.86299133]
[253.68177795 191.82508850]
[246.27391052 192.01130676]
[239.76716614 185.56262207]
[226.14231873 179.28860474]
[212.46382141 173.13241577]
[198.73269653 167.09451294]
[185.00157166 161.05659485]
[171.27046204 155.01869202]
[157.38761902 149.33830261]
[143.36238098 144.01922607]
[129.33712769 138.70014954]
[115.31188965 133.38107300]
[100.68797302 136.71888733]
[90.35951996 147.59654236]
[80.03107452 158.47418213]
[69.98770142 169.61557007]
[60.23614120 181.01325989]
[50.48458099 192.41093445]
[40.73301697 203.80860901]
[30.98145676 215.20628357]
[21.22989464 226.60395813]
[11.47833443 238.00163269]
[15.97113705 249.69879150]
[15.05920982 262.12338257]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 40]
[4 39]
[5 38]
[6 37]
[7 36]
[8 35]
[10 34]
[11 33]
[12 32]
[14 30]
[15 29]
[16 28]
[17 27]
[18 25]
[19 24]
[44 179]
[45 178]
[46 177]
[47 176]
[48 175]
[49 174]
[50 173]
[54 172]
[55 171]
[56 170]
[63 122]
[64 121]
[65 120]
[66 119]
[67 118]
[68 117]
[78 114]
[79 113]
[80 112]
[81 111]
[83 109]
[84 108]
[85 107]
[86 106]
[87 105]
[88 104]
[89 102]
[90 101]
[91 100]
[125 169]
[126 168]
[127 167]
[128 166]
[132 165]
[133 164]
[134 163]
[135 162]
[137 161]
[138 160]
[139 158]
[140 157]
[141 156]
[142 155]
[143 154]
[145 153]
[146 152]
[147 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
