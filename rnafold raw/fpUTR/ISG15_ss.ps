%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:21:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAUAGGGCCGGUGCUGCCUGCCGAAGCCGGCGGCUGAGAGGCAGCGAACUCAUCUUUGCCAGUACAGGAGCUUGUGCCGUGGCCCACAGCCCACAGCCCACAGCC\
) } def
/len { sequence length } bind def

/coor [
[93.38456726 474.51473999]
[81.06984711 465.55551147]
[73.46944427 452.35879517]
[71.90019226 437.21093750]
[76.63396454 422.73641968]
[86.85060883 411.44305420]
[100.78002167 405.28747559]
[100.78002167 390.28747559]
[100.78002167 375.28747559]
[100.78002167 360.28747559]
[89.82906342 344.46313477]
[99.76413727 327.04229736]
[98.89196014 312.06765747]
[95.30570221 305.47131348]
[98.21864319 296.64602661]
[97.78237152 281.65237427]
[97.34609985 266.65872192]
[96.90982819 251.66506958]
[84.52669525 243.43124390]
[79.30467987 229.31761169]
[83.44298553 214.66401672]
[95.55628967 205.14697266]
[95.12001801 190.15332031]
[94.68374634 175.15966797]
[94.24747467 160.16601562]
[83.27103424 150.16334534]
[82.61500549 134.96386719]
[93.18114471 123.51858521]
[92.74487305 108.52492523]
[92.09058380 93.53920746]
[91.21841431 78.56458282]
[90.12854004 63.60422897]
[88.82120514 48.66130829]
[76.99779510 38.52007294]
[75.88483429 23.34720230]
[85.62582397 12.13788319]
[84.31848145 -2.80503774]
[83.01114655 -17.74795914]
[81.48662567 -32.67028427]
[69.37326050 -42.46335220]
[67.81947327 -57.59743118]
[77.23031616 -69.08531952]
[75.48892212 -83.98389435]
[73.74752808 -98.88246918]
[72.00613403 -113.78105164]
[70.26473999 -128.67962646]
[60.97765350 -141.48823547]
[67.18508911 -155.02769470]
[65.44369507 -169.92626953]
[53.80173874 -180.96458435]
[55.31670380 -196.93594360]
[68.82643890 -205.58850098]
[83.96743011 -200.28474426]
[89.12480927 -185.09326172]
[80.34227753 -171.66766357]
[82.08366394 -156.76908875]
[91.24620056 -145.02612305]
[85.16331482 -130.42102051]
[86.90470886 -115.52244568]
[88.64610291 -100.62386322]
[90.38749695 -85.72528839]
[92.12889099 -70.82671356]
[103.93535614 -61.81877136]
[105.91361237 -46.73430634]
[96.38520050 -34.41167831]
[100.34893799 -28.03502083]
[97.95407104 -19.05529404]
[99.26140594 -4.11237383]
[100.56874084 10.83054638]
[112.10821533 20.17806625]
[113.64690399 35.31369019]
[103.76412964 47.35397339]
[105.07146454 62.29689407]
[108.84806061 68.78614044]
[106.19303131 77.69241333]
[107.06520844 92.66703033]
[110.68851471 100.01882935]
[107.73853302 108.08866119]
[108.17480469 123.08231354]
[119.38854980 133.89385986]
[119.61740112 149.10577393]
[109.24113464 159.72973633]
[109.67740631 174.72338867]
[110.11367035 189.71705627]
[110.54994202 204.71070862]
[123.19612122 213.50732422]
[128.17945862 227.89550781]
[123.78691101 242.28889465]
[111.90348053 251.22880554]
[112.33975220 266.22247314]
[112.77602386 281.21612549]
[113.21229553 296.20977783]
[113.86658478 311.19549561]
[114.73876190 326.17010498]
[123.41133881 333.05334473]
[126.71121979 343.38998413]
[123.75417328 353.59945679]
[115.78002167 360.28747559]
[115.78002167 375.28747559]
[115.78002167 390.28747559]
[115.78002167 405.28747559]
[129.70944214 411.44305420]
[139.92608643 422.73641968]
[144.65985107 437.21093750]
[143.09059143 452.35879517]
[135.49020386 465.55551147]
[123.17547607 474.51473999]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 101]
[8 100]
[9 99]
[10 98]
[12 94]
[13 93]
[15 92]
[16 91]
[17 90]
[18 89]
[22 85]
[23 84]
[24 83]
[25 82]
[28 79]
[29 78]
[30 76]
[31 75]
[32 73]
[33 72]
[36 69]
[37 68]
[38 67]
[39 65]
[42 62]
[43 61]
[44 60]
[45 59]
[46 58]
[48 56]
[49 55]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
