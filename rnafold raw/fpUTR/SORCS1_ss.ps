%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:45:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACAAGCCCAGCCCGGGCAAGCGGCCGCCACCUGCCCGGCGCCGCCUCCGCCCGCCCCCACCGCGGCGCAACUUGGAUGGAGUUGGGGUCCUGAGCGCCGGCCCCCCACAGCCGCCAGCGCAGAGCUCGUGCCGCCACCUUCGUUCUGGGACCCCUCUCUCCGCUGCUCUUCGCUCCCGCG\
) } def
/len { sequence length } bind def

/coor [
[118.15042114 168.51611328]
[114.57992554 153.94726562]
[111.00942230 139.37840271]
[103.54917145 138.60725403]
[94.75349426 150.75781250]
[88.62867737 137.06494141]
[81.16842651 136.29377747]
[74.69333649 149.82423401]
[68.21823883 163.35469055]
[61.74314880 176.88514709]
[65.70146942 192.43220520]
[55.89978790 205.13285828]
[39.85712051 205.24424744]
[29.88002968 192.68092346]
[33.62208176 177.08039856]
[48.21269608 170.41004944]
[54.68778992 156.87959290]
[61.16287994 143.34913635]
[67.63797760 129.81867981]
[69.34160614 126.20685577]
[71.26544952 122.76656342]
[73.39897919 119.50904846]
[59.60316849 125.39765930]
[45.80736160 131.28627014]
[32.01155472 137.17488098]
[18.21574974 143.06349182]
[11.53117847 149.32611084]
[4.13221550 148.93251038]
[-9.76264381 154.58343506]
[-23.65750313 160.23434448]
[-27.24607086 175.33076477]
[-39.04462814 185.40914917]
[-54.51639175 186.59413147]
[-67.71215057 178.43009949]
[-73.55786133 164.05625916]
[-69.80574036 148.99964905]
[-57.89854431 139.04986572]
[-42.41483688 138.03277588]
[-29.30842209 146.33949280]
[-15.41356182 140.68856812]
[-1.51870263 135.03765869]
[12.32714081 129.26768494]
[26.12294769 123.37906647]
[39.91875458 117.49046326]
[53.71456146 111.60185242]
[67.51036835 105.71324158]
[67.15879822 96.88990021]
[69.16042328 88.28941345]
[56.71526718 79.91576385]
[44.27011108 71.54210663]
[31.47714615 63.71011734]
[18.35993195 56.43421936]
[5.18074751 49.27117920]
[-8.05943489 42.22153091]
[-21.29961586 35.17187881]
[-34.53979874 28.12222672]
[-48.97341156 34.13927460]
[-63.88236618 29.42154121]
[-72.22711945 16.19659615]
[-70.06752014 0.70885378]
[-58.42327881 -9.72884750]
[-42.79244232 -10.18814373]
[-30.55541420 -0.45216978]
[-27.49014664 14.88204575]
[-14.24996567 21.93169594]
[-1.00978339 28.98134804]
[12.23039818 36.03099823]
[19.63061523 36.40026093]
[25.63582802 43.31700516]
[38.75304413 50.59290314]
[37.33784103 35.65981293]
[48.00743866 25.11658287]
[62.92260742 26.70960045]
[71.12478638 39.26843262]
[66.58762360 53.56578064]
[52.64376450 59.09695053]
[65.08892059 67.47060394]
[77.53407288 75.84426117]
[100.84937286 67.02279663]
[123.67964172 77.03280640]
[136.53936768 69.31091309]
[149.39907837 61.58902359]
[162.25880432 53.86713028]
[166.17469788 36.82985306]
[180.90460205 28.05781555]
[197.09939575 32.55116272]
[209.82466125 24.60965538]
[222.54994202 16.66814804]
[235.27520752 8.72663879]
[248.00047302 0.78513044]
[260.72573853 -7.15637779]
[273.45101929 -15.09788609]
[286.17626953 -23.03939438]
[298.83291626 -31.08983803]
[311.41998291 -39.24862289]
[324.00704956 -47.40740585]
[336.59411621 -55.56618881]
[349.18118286 -63.72497559]
[352.29739380 -83.55020905]
[368.71374512 -94.55634308]
[387.64498901 -90.05021667]
[399.79534912 -98.84615326]
[411.94573975 -107.64208221]
[411.50665283 -119.55216217]
[416.82745361 -130.08236694]
[426.47769165 -136.65896606]
[437.98532104 -137.73774719]
[448.46963501 -133.16519165]
[460.91479492 -141.53884888]
[473.35995483 -149.91249084]
[485.73275757 -158.39266968]
[498.03234863 -166.97872925]
[510.33190918 -175.56478882]
[522.55737305 -184.25610352]
[534.63177490 -193.15600586]
[546.62933350 -202.15922546]
[552.56610107 -217.44606018]
[568.81231689 -219.68035889]
[578.65533447 -206.56367493]
[571.96948242 -191.58932495]
[555.63256836 -190.16163635]
[543.63500977 -181.15841675]
[540.16351318 -174.61256409]
[531.35327148 -172.10572815]
[527.76989746 -165.62043762]
[518.91796875 -163.26521301]
[506.61840820 -154.67915344]
[494.31881714 -146.09309387]
[490.62466431 -139.67025757]
[481.73361206 -137.46734619]
[469.28845215 -129.09368896]
[456.84329224 -120.72003174]
[454.43664551 -102.59090424]
[439.29821777 -91.77218628]
[420.74166870 -95.49171448]
[408.59127808 -86.69577789]
[396.44091797 -77.89984894]
[397.60958862 -67.65856934]
[394.38418579 -57.78332138]
[387.28610229 -50.08731461]
[377.55413818 -46.01296616]
[366.92852783 -46.36183929]
[357.33996582 -51.13790894]
[344.75289917 -42.97912598]
[332.16583252 -34.82033920]
[319.57876587 -26.66155624]
[306.99169922 -18.50277138]
[303.07922363 -12.21053696]
[294.11779785 -10.31412697]
[281.39251709 -2.37261844]
[268.66723633 5.56889009]
[255.94198608 13.51039886]
[243.21672058 21.45190620]
[230.49143982 29.39341545]
[217.76617432 37.33492279]
[205.04090881 45.27643204]
[203.91545105 58.12693024]
[195.46200562 68.12709808]
[182.60125732 71.47422028]
[169.98069763 66.72685242]
[157.12097168 74.44874573]
[144.26126099 82.17063904]
[131.40153503 89.89252472]
[136.44197083 103.99674225]
[134.80186462 120.38545227]
[125.57827759 135.80790710]
[129.14877319 150.37677002]
[132.71928406 164.94561768]
[141.40127563 168.73599243]
[147.26724243 175.99838257]
[149.09170532 185.01330566]
[146.58732605 193.72016907]
[140.44174194 200.18814087]
[143.25752258 214.92149353]
[146.07328796 229.65483093]
[157.19673157 241.70477295]
[152.06521606 257.28036499]
[135.95759583 260.35879517]
[125.44402313 247.77322388]
[131.33995056 232.47061157]
[128.52416992 217.73727417]
[125.70839691 203.00392151]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 168]
[2 167]
[3 166]
[7 19]
[8 18]
[9 17]
[10 16]
[22 46]
[23 45]
[24 44]
[25 43]
[26 42]
[28 41]
[29 40]
[30 39]
[48 78]
[49 77]
[50 76]
[51 70]
[52 69]
[53 67]
[54 66]
[55 65]
[56 64]
[80 163]
[81 162]
[82 161]
[83 160]
[86 156]
[87 155]
[88 154]
[89 153]
[90 152]
[91 151]
[92 150]
[93 149]
[94 147]
[95 146]
[96 145]
[97 144]
[98 143]
[101 137]
[102 136]
[103 135]
[108 132]
[109 131]
[110 130]
[111 128]
[112 127]
[113 126]
[114 124]
[115 122]
[116 121]
[173 182]
[174 181]
[175 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
