%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:27:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCCUUCAUUUUGAGCCAAAUCAGAUAGGCAUGUAAAAAGAUUUUCUGUUGGUAUAGCUGGCACUCUUGUUUCAGUAGGAGGACCACGCUGGGUAUCCAACUUGAGAGACGUUAAAGUGAAGCAGGCAGAAAUCCGCUUCUGAGAGAGGGCUUCCUGAGAGUGAUGGUGAAAGUUACUGGAAGUA\
) } def
/len { sequence length } bind def

/coor [
[72.43075562 90.34920502]
[60.02030182 81.92420959]
[47.60984421 73.49920654]
[29.22750854 72.59581757]
[22.18560410 56.53136063]
[9.63536549 48.31604004]
[-2.91487265 40.10071564]
[-15.46511078 31.88539314]
[-28.01534843 23.67007065]
[-40.56558609 15.45474815]
[-53.11582565 7.23942518]
[-65.66606140 -0.97589725]
[-78.21630096 -9.19122028]
[-90.76654053 -17.40654182]
[-103.31678009 -25.62186432]
[-118.24063873 -24.11242867]
[-128.89169312 -13.55046749]
[-139.54275513 -2.98850632]
[-135.55238342 11.84296513]
[-139.52786255 26.67843437]
[-150.39981079 37.52723312]
[-165.24371338 41.47109222]
[-180.06665039 37.44912720]
[-190.88131714 26.54323387]
[-194.77862549 11.68703842]
[-190.71022034 -3.12321687]
[-179.77047729 -13.90364647]
[-164.90214539 -17.75436974]
[-150.10470581 -13.63956165]
[-139.45365906 -24.20152283]
[-128.80259705 -34.76348495]
[-143.21345520 -30.60087967]
[-154.84768677 -21.13280487]
[-169.51136780 -17.97424698]
[-184.01188660 -21.81289291]
[-195.19213867 -31.81298637]
[-200.61795044 -45.79728317]
[-199.10800171 -60.72109222]
[-190.99104309 -73.33516693]
[-178.03430176 -80.89314270]
[-163.05877686 -81.74948883]
[-149.32493591 -75.71775055]
[-139.82392883 -64.11315918]
[-126.53844452 -57.14927292]
[-134.85890198 -69.63005829]
[-143.17935181 -82.11084747]
[-151.49980164 -94.59163666]
[-168.18640137 -102.35590363]
[-168.65513611 -119.88974762]
[-177.18408203 -132.22898865]
[-185.71302795 -144.56823730]
[-194.24197388 -156.90750122]
[-202.77091980 -169.24674988]
[-222.68310547 -171.77774048]
[-234.16516113 -187.86920166]
[-230.20587158 -206.92578125]
[-239.34561157 -218.81968689]
[-248.48536682 -230.71359253]
[-257.62512207 -242.60749817]
[-266.86444092 -254.42420959]
[-276.20272827 -266.16290283]
[-285.54098511 -277.90158081]
[-300.99777222 -279.83172607]
[-310.30087280 -291.86944580]
[-308.36553955 -306.59323120]
[-317.70379639 -318.33193970]
[-327.04208374 -330.07061768]
[-336.38034058 -341.80929565]
[-345.71859741 -353.54797363]
[-355.05688477 -365.28668213]
[-370.78604126 -366.82577515]
[-380.75521851 -379.08917236]
[-379.04989624 -394.80120850]
[-366.68179321 -404.64016724]
[-350.98867798 -402.76882935]
[-341.28103638 -390.29739380]
[-343.31817627 -374.62493896]
[-333.97991943 -362.88626099]
[-324.64166260 -351.14758301]
[-315.30337524 -339.40887451]
[-305.96511841 -327.67019653]
[-296.62686157 -315.93151855]
[-281.84494019 -314.50650024]
[-272.20739746 -302.73483276]
[-273.80230713 -287.23986816]
[-264.46401978 -275.50115967]
[-255.12576294 -263.76248169]
[-248.48727417 -260.47839355]
[-245.73121643 -251.74725342]
[-236.59146118 -239.85334778]
[-227.45170593 -227.95944214]
[-218.31196594 -216.06553650]
[-208.11517334 -217.52609253]
[-198.15760803 -214.58888245]
[-190.26387024 -207.72193909]
[-185.90940857 -198.11967468]
[-185.94506836 -187.49537659]
[-190.43167114 -177.77569580]
[-181.90272522 -165.43644714]
[-173.37377930 -153.09718323]
[-164.84483337 -140.75793457]
[-156.31588745 -128.41868591]
[-144.46434021 -125.93190765]
[-137.26025391 -115.70355988]
[-139.01901245 -102.91208649]
[-130.69856262 -90.43130493]
[-122.37810516 -77.95051575]
[-114.05765533 -65.46972656]
[-107.06272125 -63.37841797]
[-101.07686615 -59.07138062]
[-96.78656769 -52.98339844]
[-94.70298767 -45.75644302]
[-95.10145569 -38.17210388]
[-82.55121613 -29.95678139]
[-70.00097656 -21.74145699]
[-57.45074081 -13.52613544]
[-44.90050125 -5.31081247]
[-32.35026550 2.90451002]
[-19.80002594 11.11983299]
[-7.24978781 19.33515549]
[5.30044985 27.55047798]
[17.85068893 35.76580048]
[30.40092659 43.98112488]
[42.31583786 41.81824112]
[52.84339523 48.57757187]
[56.03484344 61.08875275]
[68.44529724 69.51374817]
[80.85575104 77.93875122]
[88.08496857 72.26271057]
[96.98959351 68.97900391]
[106.77172852 68.57607269]
[116.49426270 71.27494812]
[125.17060852 76.99098206]
[131.86437988 85.32566833]
[135.78895569 95.59088135]
[150.74610901 96.72380066]
[165.09124756 90.05089569]
[177.19778442 98.72735596]
[192.15493774 99.86027527]
[207.11210632 100.99319458]
[221.65048218 93.40587616]
[235.34346008 102.42997742]
[234.10487366 118.78228760]
[219.20886230 125.64093781]
[205.97918701 115.95034790]
[191.02203369 114.81742859]
[176.06486511 113.68451691]
[162.78956604 120.43845367]
[149.61320496 111.68095398]
[134.65603638 110.54803467]
[127.41207886 123.68291473]
[136.35072327 135.72868347]
[145.28938293 147.77444458]
[154.22802734 159.82022095]
[163.16668701 171.86598206]
[172.10533142 183.91174316]
[176.19410706 185.50854492]
[179.24458313 188.07334900]
[181.07908630 191.15669250]
[181.68568420 194.29780579]
[181.20732117 197.08003235]
[189.31692505 209.69883728]
[197.42654419 222.31764221]
[205.53616333 234.93644714]
[213.64576721 247.55525208]
[221.75538635 260.17404175]
[237.28901672 261.97402954]
[247.99385071 273.37319946]
[248.81535339 288.98919678]
[239.36566162 301.44860840]
[224.10662842 304.86853027]
[210.24308777 297.63412476]
[204.32099915 283.16131592]
[209.13658142 268.28366089]
[201.02696228 255.66485596]
[192.91735840 243.04605103]
[184.80773926 230.42726135]
[176.69813538 217.80845642]
[168.58851624 205.18965149]
[160.05957031 192.85040283]
[151.12092590 180.80462646]
[142.18226624 168.75886536]
[133.24362183 156.71310425]
[124.30496216 144.66732788]
[115.36631012 132.62156677]
[88.66090393 131.81600952]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 128]
[2 127]
[3 126]
[5 123]
[6 122]
[7 121]
[8 120]
[9 119]
[10 118]
[11 117]
[12 116]
[13 115]
[14 114]
[15 113]
[16 31]
[17 30]
[18 29]
[44 108]
[45 107]
[46 106]
[47 105]
[49 102]
[50 101]
[51 100]
[52 99]
[53 98]
[56 92]
[57 91]
[58 90]
[59 89]
[60 87]
[61 86]
[62 85]
[65 82]
[66 81]
[67 80]
[68 79]
[69 78]
[70 77]
[135 150]
[136 149]
[138 147]
[139 146]
[140 145]
[151 185]
[152 184]
[153 183]
[154 182]
[155 181]
[156 180]
[161 179]
[162 178]
[163 177]
[164 176]
[165 175]
[166 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
