%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:45:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCAGGCUGUAAAACGGAAAGGUUCGGAAUUUGCCUCUGCGCCGUCUUUUUUUGCCUGUUACCUGUGACGUCCUUGGAAGCAGAAUCUGAAACUUUCUGAGGAGAGCAUUUGAGCUUCAGAUUUCUAACAGCCUCUUUGCAACAAAAUAGACCAGUAGCUGAAGGCAACUGCAAUCCUUC\
) } def
/len { sequence length } bind def

/coor [
[156.69601440 240.29675293]
[160.37677002 223.77499390]
[167.34887695 208.34532166]
[177.32164001 194.65597534]
[167.13723755 183.64335632]
[156.95283508 172.63072205]
[146.76843262 161.61808777]
[136.58403015 150.60546875]
[126.39962769 139.59283447]
[116.21523285 128.58021545]
[102.07456970 132.79417419]
[87.51560974 130.39575195]
[75.47391510 121.86853790]
[68.37748718 108.93190002]
[67.65721130 94.19429779]
[53.88779449 88.24424744]
[40.11837387 82.29419708]
[26.34895515 76.34414673]
[12.57953453 70.39409637]
[-1.18988454 64.44404602]
[-14.95930386 58.49399948]
[-29.50062370 64.07859802]
[-43.38001251 57.84825516]
[-48.61446381 43.95091248]
[-62.38388443 38.00086212]
[-76.15330505 32.05081558]
[-89.92272186 26.10076523]
[-103.69213867 20.15071487]
[-119.42932129 21.77914429]
[-128.04330444 9.62807560]
[-141.81272888 3.67802596]
[-155.58215332 -2.27202344]
[-169.35156250 -8.22207260]
[-183.12098694 -14.17212200]
[-198.85816956 -12.54369354]
[-207.47215271 -24.69476128]
[-221.24157715 -30.64481163]
[-235.01098633 -36.59486008]
[-248.78041077 -42.54491043]
[-264.51757812 -40.91648102]
[-273.13159180 -53.06755066]
[-291.35440063 -50.50793839]
[-301.28622437 -64.96212006]
[-315.15682983 -70.67229462]
[-329.02743530 -76.38246155]
[-342.89807129 -82.09263611]
[-352.33999634 -70.30168915]
[-364.72216797 -61.64958572]
[-379.04077148 -56.83772278]
[-394.13510132 -56.25617218]
[-408.78149414 -59.95207596]
[-421.79263306 -67.62582397]
[-432.11380005 -78.65534210]
[-438.90829468 -92.14651489]
[-441.62527466 -107.00567627]
[-440.04452515 -122.02825928]
[-434.29418945 -135.99644470]
[-424.84042358 -147.77790833]
[-412.44955444 -156.41755676]
[-398.12612915 -161.21502686]
[-383.03121948 -161.78141785]
[-368.38854980 -158.07080078]
[-355.38510132 -150.38398743]
[-345.07504272 -139.34410095]
[-338.29412842 -125.84611511]
[-335.59204102 -110.98423004]
[-337.18789673 -95.96324921]
[-323.31726074 -90.25307465]
[-309.44665527 -84.54290771]
[-295.57604980 -78.83273315]
[-284.27603149 -83.19679260]
[-272.66342163 -78.53169250]
[-267.18151855 -66.83696747]
[-252.42922974 -68.89098358]
[-242.83036804 -56.31433105]
[-229.06094360 -50.36428070]
[-215.29151917 -44.41423035]
[-201.52210999 -38.46417999]
[-186.76980591 -40.51819611]
[-177.17094421 -27.94154167]
[-163.40151978 -21.99149132]
[-149.63209534 -16.04144287]
[-135.86268616 -10.09139347]
[-122.09326172 -4.14134407]
[-107.34096527 -6.19536018]
[-97.74208832 6.38129616]
[-83.97267151 12.33134556]
[-70.20325470 18.28139496]
[-56.43383408 24.23144341]
[-42.66441345 30.18149376]
[-28.95639992 24.46957970]
[-14.90749073 30.30762672]
[-9.00925446 44.72457886]
[4.76016474 50.67462921]
[18.52958488 56.62467957]
[32.29900360 62.57472992]
[46.06842422 68.52478027]
[59.83784103 74.47482300]
[73.60726166 80.42487335]
[82.85928345 71.96506500]
[94.60626984 67.58596039]
[107.13836670 67.92499542]
[118.63140869 72.93280792]
[129.73200989 62.84436417]
[140.83259583 52.75592041]
[151.93319702 42.66747284]
[156.19458008 34.55677032]
[163.31510925 32.50231934]
[174.58912659 22.60805321]
[185.86314392 12.71378899]
[197.13717651 2.81952477]
[208.41119385 -7.07473993]
[219.68521118 -16.96900368]
[227.60165405 -31.96121216]
[244.19944763 -28.50440598]
[245.47245789 -11.59831810]
[229.57948303 -5.69498444]
[218.30545044 4.19928026]
[207.03143311 14.09354496]
[195.75741577 23.98781013]
[184.48339844 33.88207245]
[173.20938110 43.77634048]
[162.02165222 53.76807022]
[150.92105103 63.85651779]
[139.82044983 73.94496155]
[128.71984863 84.03340912]
[132.82879639 101.42540741]
[127.22785950 118.39580536]
[137.41226196 129.40843201]
[147.59666443 140.42106628]
[157.78106689 151.43370056]
[167.96546936 162.44631958]
[178.14985657 173.45895386]
[188.33425903 184.47157288]
[199.45506287 177.28044128]
[211.57865906 171.95811462]
[224.39366150 168.64030457]
[237.57113647 167.41120911]
[250.77294922 168.30146790]
[263.66052246 171.28730774]
[275.90341187 176.29124451]
[287.18798828 183.18408203]
[297.22518921 191.78820801]
[305.75814819 201.88220215]
[312.56869507 213.20655823]
[317.48291016 225.47029114]
[320.37554932 238.35847473]
[321.17333984 251.54029846]
[319.85671997 264.67755127]
[316.46038818 277.43331909]
[311.07232666 289.48065186]
[303.83163452 300.51086426]
[294.92474365 310.24151611]
[304.11630249 322.09542847]
[313.30786133 333.94934082]
[322.49938965 345.80328369]
[337.07022095 351.96783447]
[338.75460815 366.76687622]
[347.94616699 378.62081909]
[357.13772583 390.47473145]
[371.62164307 399.28677368]
[367.16354370 415.64407349]
[350.21136475 415.88833618]
[345.28378296 399.66625977]
[336.09225464 387.81234741]
[326.90069580 375.95843506]
[312.98730469 370.64175415]
[310.64547729 354.99481201]
[301.45391846 343.14089966]
[292.26239014 331.28698730]
[283.07083130 319.43304443]
[268.00701904 327.03198242]
[251.70602417 331.40332031]
[234.85133362 332.36169434]
[218.15003967 329.86489868]
[202.30320740 324.01562500]
[187.97648621 315.05743408]
[175.77206421 303.36447144]
[166.20347595 289.42590332]
[159.67385864 273.82543945]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 134]
[5 133]
[6 132]
[7 131]
[8 130]
[9 129]
[10 128]
[15 99]
[16 98]
[17 97]
[18 96]
[19 95]
[20 94]
[21 93]
[24 90]
[25 89]
[26 88]
[27 87]
[28 86]
[30 84]
[31 83]
[32 82]
[33 81]
[34 80]
[36 78]
[37 77]
[38 76]
[39 75]
[41 73]
[43 70]
[44 69]
[45 68]
[46 67]
[103 126]
[104 125]
[105 124]
[106 123]
[108 122]
[109 121]
[110 120]
[111 119]
[112 118]
[113 117]
[153 171]
[154 170]
[155 169]
[156 168]
[158 166]
[159 165]
[160 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
