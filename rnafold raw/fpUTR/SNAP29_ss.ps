%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:35:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGUUCGCGCGACGACCGCGGGGUCGGCGGGCGGGGCGAGGCCCUGGACGGCGGCGGCAGUGGGGCUCCUCCUUCUGUUUCCCAGACCGAGAGCCGCGCCGGCACC\
) } def
/len { sequence length } bind def

/coor [
[129.74099731 163.48991394]
[115.64550018 168.61993408]
[100.82019806 166.33726501]
[88.92071533 157.20478821]
[82.88121033 143.47436523]
[84.19090271 128.53164673]
[92.52594757 116.06202698]
[86.92784882 130.85972595]
[72.20475006 133.11354065]
[60.71408081 142.75535583]
[49.22341537 152.39717102]
[37.73274994 162.03898621]
[34.90773392 177.83134460]
[20.73136711 185.34202576]
[6.07854700 178.80946350]
[2.18966150 163.24487305]
[12.04793072 150.58810425]
[28.09093475 150.54830933]
[39.58160019 140.90649414]
[51.07226944 131.26469421]
[62.56293488 121.62287140]
[67.33914948 107.51482391]
[82.88413239 104.57135773]
[83.32040405 89.57770538]
[72.40980530 79.28408051]
[61.49919891 68.99045563]
[50.58859253 58.69683075]
[35.24105453 54.85448837]
[31.29323006 40.49259567]
[20.38262367 30.19897079]
[4.80838728 30.48336792]
[-6.10988092 19.88874245]
[-6.28503132 5.03933573]
[-17.19563675 -5.25428915]
[-28.10624123 -15.54791355]
[-39.01684570 -25.84153748]
[-49.92744827 -36.13516235]
[-60.83805466 -46.42878723]
[-76.50827026 -52.90031052]
[-74.62760162 -69.74962616]
[-57.91614532 -72.60681152]
[-50.54442978 -57.33939362]
[-39.63382339 -47.04576874]
[-28.72322083 -36.75214386]
[-17.81261635 -26.45851898]
[-6.90201139 -16.16489410]
[4.00859356 -5.87126923]
[18.84306335 -6.55983162]
[30.05460358 3.72394204]
[30.67624855 19.28836632]
[41.58685303 29.58199120]
[56.15399170 32.68806839]
[60.88221741 47.78622818]
[71.79282379 58.07985306]
[82.70343018 68.37347412]
[93.61402893 78.66709900]
[107.53606415 82.85198975]
[113.66903687 93.36657715]
[128.66903687 93.36657715]
[144.30201721 83.77300262]
[159.18254089 92.94935608]
[174.17619324 92.51309204]
[189.16984558 92.07682037]
[202.73915100 83.94141388]
[215.68606567 91.30527496]
[230.67971802 90.86900330]
[245.67338562 90.43273163]
[260.66702271 89.99645996]
[275.66067505 89.56018829]
[284.30166626 86.13903809]
[291.09536743 89.33568573]
[306.09536743 89.33568573]
[317.22848511 78.44113159]
[332.44064331 78.65481567]
[342.75830078 89.33568573]
[357.75830078 89.33568573]
[372.75830078 89.33568573]
[387.75830078 89.33568573]
[400.07354736 79.05391693]
[415.76101685 82.41280365]
[422.78668213 96.83568573]
[415.76101685 111.25857544]
[400.07354736 114.61745453]
[387.75830078 104.33568573]
[372.75830078 104.33568573]
[357.75830078 104.33568573]
[342.75830078 104.33568573]
[332.44064331 115.01656342]
[317.22848511 115.23023987]
[306.09536743 104.33568573]
[291.09536743 104.33568573]
[276.09695435 104.55384827]
[261.10330200 104.99011993]
[246.10964966 105.42638397]
[231.11599731 105.86265564]
[216.12234497 106.29892731]
[203.62548828 114.40312195]
[189.60612488 107.07047272]
[174.61247253 107.50674438]
[159.61880493 107.94301605]
[151.00451660 116.57300568]
[138.41430664 116.96969604]
[128.66903687 108.36657715]
[113.66903687 108.36657715]
[128.07041931 112.56182098]
[138.67826843 123.16717529]
[142.87690735 137.56758118]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 23]
[9 21]
[10 20]
[11 19]
[12 18]
[24 56]
[25 55]
[26 54]
[27 53]
[29 51]
[30 50]
[33 47]
[34 46]
[35 45]
[36 44]
[37 43]
[38 42]
[58 104]
[59 103]
[61 100]
[62 99]
[63 98]
[65 96]
[66 95]
[67 94]
[68 93]
[69 92]
[71 91]
[72 90]
[75 87]
[76 86]
[77 85]
[78 84]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
