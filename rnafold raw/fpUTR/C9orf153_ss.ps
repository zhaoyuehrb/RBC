%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCUGGGCCUUGGGGCUGCUGGAUGAAUGAGACCCAGCCUCUGCCCUGGGAGUGCAGAGACUCAAGACAGAUAUGACCACGUGAAGAGACAACUGUAAAACAAGUGUGGUUGCCCUAGAGUUUGCAGUAUAUGUUUACAACUAACCCAAGACCACUUUCAAAUUACACUACACCUUGCAGGCAGUGAAUUAGAGAAUAAAAUCCCAGCACG\
) } def
/len { sequence length } bind def

/coor [
[174.36248779 349.99169922]
[166.61094666 336.41055298]
[169.45356750 321.03350830]
[181.54814148 311.12112427]
[181.54814148 296.12112427]
[181.54814148 281.12112427]
[181.54814148 266.12112427]
[181.54814148 251.12113953]
[181.54814148 236.12113953]
[161.00212097 211.07363892]
[168.19740295 184.41467285]
[157.98713684 173.42602539]
[147.77685547 162.43737793]
[137.56657410 151.44873047]
[127.35630798 140.46009827]
[117.14603424 129.47145081]
[103.88743591 136.39173889]
[87.91991425 137.18852234]
[72.11389160 130.87474060]
[59.65019989 117.81215668]
[48.08127975 127.35993195]
[36.51235962 136.90771484]
[24.94344139 146.45549011]
[13.37452126 156.00326538]
[16.57739830 170.96990967]
[12.44689560 185.70753479]
[1.93217230 196.82954407]
[-12.55056572 201.78018188]
[-27.67329025 199.42184448]
[-39.96091080 190.29644775]
[-46.58982086 176.50093079]
[-46.03674698 161.20541382]
[-38.42877960 147.92469788]
[-25.51417732 139.71058655]
[-10.26061726 138.45063782]
[3.82674193 144.43435669]
[15.39566231 134.88656616]
[26.96458244 125.33879089]
[38.53350067 115.79101562]
[50.10242081 106.24323273]
[44.51509857 92.32267761]
[29.55548668 93.42271423]
[14.59587765 94.52275848]
[-0.36373192 95.62279510]
[-15.32334137 96.72283173]
[-30.28295135 97.82286835]
[-43.47854233 106.55137634]
[-56.73896408 99.76828003]
[-71.69857788 100.86831665]
[-87.05164337 108.05995178]
[-98.21237946 95.29772186]
[-89.03850555 81.04022217]
[-72.79861450 85.90870667]
[-57.83900070 84.80867004]
[-45.71342087 76.15883636]
[-31.38298798 82.86325836]
[-16.42337799 81.76322174]
[-1.46376896 80.66318512]
[13.49584103 79.56314850]
[28.45545006 78.46311188]
[43.41505814 77.36306763]
[29.75938225 71.15642548]
[16.10370255 64.94978333]
[2.44802475 58.74313354]
[-12.54464340 58.27419281]
[-26.65989304 53.19879150]
[-38.51823807 44.01295090]
[-46.96075439 31.61440468]
[-51.16235733 17.21487236]
[-50.71241760 2.22162223]
[-45.65491104 -11.90004921]
[-36.48410797 -23.77002716]
[-24.09627342 -32.22825241]
[-9.70207787 -36.44810104]
[5.29173040 -36.01716614]
[19.41980171 -30.97756195]
[31.30139351 -21.82180977]
[39.77531433 -9.44470787]
[44.01340103 4.94412804]
[43.60157776 19.93790054]
[48.99610519 33.93429565]
[54.39063644 47.93069077]
[59.78516388 61.92708588]
[61.76124954 47.05781555]
[63.73733521 32.18854904]
[65.71341705 17.31928444]
[67.68950653 2.45001769]
[61.83765793 -12.24918270]
[71.18420410 -23.84622574]
[60.51911926 -32.57612991]
[55.59879303 -45.33441544]
[57.60842896 -58.75068665]
[65.91744232 -69.33701324]
[78.27172852 -74.39468384]
[80.46588135 -89.23333740]
[82.66003418 -104.07199860]
[84.85417938 -118.91065216]
[87.04833221 -133.74931335]
[89.24247742 -148.58796692]
[91.43663025 -163.42662048]
[93.63078308 -178.26527405]
[81.38785553 -189.93762207]
[78.54369354 -206.44361877]
[86.02409363 -221.24363708]
[100.70375061 -228.59341431]
[102.67984009 -243.46267700]
[96.82799530 -258.16189575]
[106.17453766 -269.75894165]
[108.15061951 -284.62820435]
[101.39673615 -299.57199097]
[111.17999268 -312.73330688]
[127.43621063 -310.57287598]
[133.44239807 -295.31320190]
[123.01988983 -282.65209961]
[121.04380798 -267.78283691]
[127.03699493 -254.14718628]
[117.54910278 -241.48660278]
[115.57302094 -226.61732483]
[126.05733490 -218.35369873]
[131.13055420 -205.88885498]
[129.36869812 -192.43780518]
[121.12587738 -181.52728271]
[108.46943665 -176.07112122]
[106.27528381 -161.23246765]
[104.08113861 -146.39381409]
[101.88698578 -131.55516052]
[99.69283295 -116.71649933]
[97.49868774 -101.87784576]
[95.30453491 -87.03919220]
[93.11038971 -72.20053864]
[105.19912720 -61.09314728]
[108.31562805 -44.80559921]
[101.03689575 -29.72060204]
[86.05346680 -21.87014008]
[92.04665375 -8.23448944]
[82.55876923 4.42610264]
[80.58268738 19.29536819]
[78.60659790 34.16463470]
[76.63051605 49.03390121]
[74.65442657 63.90316772]
[90.91350555 58.30212784]
[107.50821686 59.44274139]
[121.84250641 66.70965576]
[131.84289551 78.56311035]
[136.25656128 92.84255219]
[134.79885864 107.15221405]
[128.13467407 119.26117706]
[138.34495544 130.24981689]
[148.55522156 141.23846436]
[158.76550293 152.22709656]
[168.97576904 163.21574402]
[179.18605042 174.20439148]
[189.04878235 169.45289612]
[200.64945984 168.75173950]
[212.29423523 172.70353699]
[222.10014343 181.19729614]
[228.29510498 193.36022949]
[229.52340698 207.63444519]
[242.69338989 214.81439209]
[255.86337280 221.99435425]
[269.03335571 229.17430115]
[284.85345459 228.98658752]
[292.32440186 241.87200928]
[305.49438477 249.05195618]
[318.66436768 256.23190308]
[331.83435059 263.41186523]
[340.86468506 264.77136230]
[345.14382935 270.79510498]
[358.20697021 278.16760254]
[371.27014160 285.54010010]
[384.33331299 292.91262817]
[394.62265015 289.39474487]
[404.93740845 292.06414795]
[411.93383789 299.80621338]
[413.48181152 309.90371704]
[426.32293701 317.65655518]
[439.16403198 325.40936279]
[455.84857178 328.41976929]
[457.57452393 345.28564453]
[441.84558105 351.61309814]
[431.41119385 338.25045776]
[418.57009888 330.49765015]
[405.72900391 322.74481201]
[386.41921997 323.77917480]
[376.96078491 305.97576904]
[363.89764404 298.60327148]
[350.83447266 291.23077393]
[337.77133179 283.85824585]
[324.65438843 276.58181763]
[311.48440552 269.40188599]
[298.31445312 262.22192383]
[285.14447021 255.04199219]
[270.26635742 255.74325562]
[261.85339355 242.34426880]
[248.68342590 235.16432190]
[235.51344299 227.98437500]
[222.34346008 220.80442810]
[215.89463806 224.63360596]
[224.01013184 237.24862671]
[234.96545410 247.49464417]
[228.88967896 261.20904541]
[213.94021606 259.97866821]
[210.18835449 245.45570374]
[202.99697876 232.29196167]
[196.54814148 236.12113953]
[196.54814148 251.12113953]
[196.54814148 266.12112427]
[196.54814148 281.12112427]
[196.54814148 296.12112427]
[196.54814148 311.12112427]
[208.64273071 321.03350830]
[211.48535156 336.41055298]
[203.73381042 349.99169922]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 210]
[5 209]
[6 208]
[7 207]
[8 206]
[9 205]
[11 152]
[12 151]
[13 150]
[14 149]
[15 148]
[16 147]
[20 40]
[21 39]
[22 38]
[23 37]
[24 36]
[41 61]
[42 60]
[43 59]
[44 58]
[45 57]
[46 56]
[48 54]
[49 53]
[83 140]
[84 139]
[85 138]
[86 137]
[87 136]
[89 134]
[94 130]
[95 129]
[96 128]
[97 127]
[98 126]
[99 125]
[100 124]
[101 123]
[105 118]
[106 117]
[108 115]
[109 114]
[158 197]
[159 196]
[160 195]
[161 194]
[163 192]
[164 191]
[165 190]
[166 189]
[168 188]
[169 187]
[170 186]
[171 185]
[175 183]
[176 182]
[177 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
