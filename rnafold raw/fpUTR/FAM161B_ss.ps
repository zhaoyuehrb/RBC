%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:58:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCACCUGCGCCAGGACACCAGCGGGCCGCUGUGGGGAGCUGCACGCACAGCCCCGCAUCGGCUGACAAGCCGGGCCGCCAUGGUGCAGACCUGCGCCGUCGCACUCAGAACUCCCGCAGGCCCACCUACGUAGUGCGUCCGGAGCAGAGCACUCCAAUCCCGUCCCGCUUCCGCGGCGUCCUCAGAACCGGAAAUAAA\
) } def
/len { sequence length } bind def

/coor [
[14.64698887 184.68179321]
[13.05896187 169.76609802]
[18.33290482 155.72381592]
[29.34723854 145.54125977]
[43.76137924 141.38380432]
[56.32030869 133.18177795]
[41.36655045 134.35865784]
[26.41279030 135.53555298]
[11.45903015 136.71243286]
[-3.49472976 137.88932800]
[-18.44849014 139.06620789]
[-33.40224838 140.24310303]
[-48.35601044 141.41998291]
[-63.30006409 142.71427917]
[-78.23349762 144.12590027]
[-86.18801880 157.31800842]
[-100.22118378 163.22763062]
[-114.87004089 159.78160095]
[-124.56474304 148.50549316]
[-139.49816895 149.91711426]
[-139.17704773 170.59532166]
[-160.97016907 188.91423035]
[-175.16145325 193.77297974]
[-189.35272217 198.63174438]
[-203.54400635 203.49050903]
[-217.73529053 208.34927368]
[-222.37203979 213.08247375]
[-227.87715149 214.53810120]
[-232.44929504 213.13014221]
[-246.78619385 217.54074097]
[-261.12307739 221.95135498]
[-275.45999146 226.36195374]
[-289.79687500 230.77256775]
[-304.13375854 235.18316650]
[-315.04879761 246.63623047]
[-329.48852539 242.98330688]
[-334.38717651 257.70684814]
[-347.02410889 266.71170044]
[-362.54019165 266.53527832]
[-374.96914673 257.24545288]
[-379.53179932 242.41435242]
[-374.47369385 227.74481201]
[-361.73980713 218.87759399]
[-346.22656250 219.22230530]
[-333.89910889 228.64640808]
[-324.00955200 217.50881958]
[-308.54437256 220.84626770]
[-294.20748901 216.43566895]
[-279.87057495 212.02505493]
[-265.53369141 207.61445618]
[-251.19679260 203.20385742]
[-236.85989380 198.79324341]
[-222.59405518 194.15798950]
[-208.40277100 189.29922485]
[-194.21148682 184.44047546]
[-180.02020264 179.58171082]
[-165.82893372 174.72294617]
[-165.12312317 167.25622559]
[-163.71148682 152.32279968]
[-163.00567627 144.85609436]
[-176.03515625 137.42420959]
[-189.06462097 129.99232483]
[-202.09410095 122.56044769]
[-215.12356567 115.12856293]
[-231.51072693 115.75546265]
[-240.01704407 101.73495483]
[-231.89195251 87.49013519]
[-215.49383545 87.67485809]
[-207.69169617 102.09909058]
[-194.66221619 109.53097534]
[-181.63275146 116.96285248]
[-168.60327148 124.39473724]
[-155.57380676 131.82661438]
[-140.90980530 134.98368835]
[-125.97637177 133.57206726]
[-118.56631470 120.67907715]
[-104.82265472 114.54917145]
[-89.93070221 117.72455597]
[-79.64511871 129.19247437]
[-64.71169281 127.78084564]
[-58.34268951 124.01822662]
[-49.53289795 126.46622467]
[-34.57913589 125.28933716]
[-19.62537575 124.11244965]
[-4.67161608 122.93556213]
[10.28214359 121.75867462]
[25.23590469 120.58178711]
[40.18966293 119.40490723]
[55.14342499 118.22801971]
[62.47873306 85.44974518]
[86.19722748 71.05378723]
[107.31085968 77.25230408]
[116.12763977 65.11705017]
[124.94441986 52.98179245]
[133.76119995 40.84653854]
[135.61312866 25.13409233]
[149.35363770 19.38538551]
[158.17041016 7.25013018]
[166.98719788 -4.88512468]
[168.48233032 -23.23434830]
[184.77308655 -29.74930000]
[193.39816284 -42.02154541]
[202.02323914 -54.29378891]
[210.64833069 -66.56604004]
[219.27340698 -78.83827972]
[227.89848328 -91.11052704]
[213.21885681 -88.02695465]
[199.06823730 -93.00290680]
[189.54942322 -104.59567261]
[187.42225647 -119.44407654]
[193.30349731 -133.24302673]
[205.48794556 -141.99169922]
[220.44287109 -143.15353394]
[233.83232117 -136.39167786]
[241.77418518 -123.66662598]
[241.96644592 -108.67021179]
[252.06163025 -119.76467896]
[255.62657166 -135.17901611]
[269.91494751 -139.38520813]
[280.01013184 -150.47966003]
[290.10531616 -161.57412720]
[293.06826782 -177.70339966]
[308.60668945 -182.94636536]
[320.73602295 -171.90953064]
[316.97860718 -155.94664001]
[301.19976807 -151.47894287]
[291.10458374 -140.38447571]
[281.00939941 -129.29000854]
[278.16653442 -114.66922760]
[263.15609741 -109.66949463]
[253.06091309 -98.57502747]
[250.92823792 -88.01663971]
[240.17073059 -82.48545074]
[231.54565430 -70.21320343]
[222.92057800 -57.94095612]
[214.29548645 -45.66871262]
[205.67041016 -33.39646530]
[197.04533386 -21.12421989]
[198.81475830 -9.15211201]
[191.72184753 1.14437187]
[179.12245178 3.93165398]
[170.30566406 16.06690788]
[161.48889160 28.20216370]
[160.26759338 43.04661560]
[145.89645386 49.66331863]
[137.07966614 61.79857254]
[128.26289368 73.93383026]
[119.44611359 86.06908417]
[133.00151062 79.64638519]
[146.55691528 73.22368622]
[160.11231995 66.80098724]
[170.81518555 56.29152298]
[184.77931213 50.81402206]
[199.77314758 51.24382401]
[213.40058899 57.51224136]
[223.48385620 68.61754608]
[228.41157532 82.78502655]
[227.39628601 97.75062561]
[220.60020447 111.12274170]
[209.10942078 120.76441193]
[194.76023865 125.13483429]
[179.84573364 123.53559113]
[166.75056458 116.22329712]
[151.98083496 113.60514069]
[137.21109009 110.98698425]
[122.44134521 108.36882782]
[134.14779663 117.74746704]
[145.85426331 127.12610626]
[157.56071472 136.50474548]
[173.84419250 138.44908142]
[180.05249023 153.62765503]
[169.79904175 166.42605591]
[153.63171387 163.67837524]
[148.18206787 148.21119690]
[136.47561646 138.83256531]
[124.76916504 129.45391846]
[113.06270599 120.07527924]
[107.13654327 124.67208862]
[95.28421783 133.86569214]
[89.35805511 138.46249390]
[95.53076935 152.13354492]
[101.70348358 165.80459595]
[116.92489624 168.81927490]
[127.44256592 180.22796631]
[129.21223450 195.64379883]
[121.55342102 209.13906860]
[107.41110992 215.52456665]
[92.22329712 212.34494019]
[81.83000946 200.82283020]
[80.22768402 185.38870239]
[88.03244019 171.97731018]
[81.85971832 158.30625916]
[75.68700409 144.63520813]
[74.54981995 159.59204102]
[77.85070038 174.22433472]
[74.23464966 188.78195190]
[64.47067261 200.16900635]
[50.63522339 205.96385193]
[35.67060852 204.93415833]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 89]
[7 88]
[8 87]
[9 86]
[10 85]
[11 84]
[12 83]
[13 82]
[14 80]
[15 79]
[19 75]
[20 74]
[22 57]
[23 56]
[24 55]
[25 54]
[26 53]
[29 52]
[30 51]
[31 50]
[32 49]
[33 48]
[34 47]
[36 45]
[60 73]
[61 72]
[62 71]
[63 70]
[64 69]
[92 148]
[93 147]
[94 146]
[95 145]
[97 143]
[98 142]
[99 141]
[101 138]
[102 137]
[103 136]
[104 135]
[105 134]
[106 133]
[116 131]
[117 130]
[119 128]
[120 127]
[121 126]
[166 177]
[167 176]
[168 175]
[169 174]
[180 193]
[181 192]
[182 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
