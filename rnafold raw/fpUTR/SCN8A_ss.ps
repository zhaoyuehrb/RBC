%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:03:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCGCUCCAAGAUGGCGCCCACCGCAGUCCCGCCCGCCGCAUCCUCGGCGCCUUUGCAGUCCGGCCGCGCCUCCCGGGCCCCGCGUUAGGGCCGCCGCUGCCUCCCUCGCCGCCGCCGCUGCCAGCUGACCUGUCCUGGACGCAGCAUAACUAACGAAGCUGCUGCAGGAUGAGAAG\
) } def
/len { sequence length } bind def

/coor [
[102.22658539 114.43817139]
[104.19718170 130.13618469]
[92.23649597 139.01261902]
[86.58757019 152.90829468]
[80.93865204 166.80397034]
[75.28973389 180.69963074]
[69.64081573 194.59530640]
[77.11203003 208.33267212]
[73.95445251 223.64814758]
[61.65900803 233.31022644]
[46.03122330 232.75679016]
[34.45005798 222.24914551]
[32.38378906 206.74868774]
[40.80804062 193.57423401]
[55.74514389 188.94639587]
[61.39406204 175.05072021]
[67.04298401 161.15504456]
[72.69190216 147.25936890]
[78.34082031 133.36369324]
[75.96617889 118.65960693]
[88.33091736 108.78925323]
[76.09335327 117.46347809]
[61.19828796 115.69233704]
[51.33606720 104.39028168]
[51.59857559 89.39257812]
[61.85028839 78.44258118]
[76.79821777 77.19379425]
[88.72578430 86.29271698]
[83.56800842 72.20735931]
[78.41022491 58.12200546]
[67.04492188 51.98332977]
[63.04808426 40.12269592]
[68.04972076 29.08860207]
[63.13993454 14.91489601]
[49.20143509 7.96104956]
[44.42412186 -6.48304701]
[51.13945007 -19.72842216]
[46.22966003 -33.90213013]
[34.40151596 -44.40953445]
[37.54671860 -58.96827698]
[32.63692856 -73.14198303]
[17.52396202 -74.97491455]
[4.75753117 -83.15447235]
[-3.15911603 -96.01319885]
[-4.70136929 -110.97256470]
[0.38338959 -125.05995178]
[11.03624439 -135.49940491]
[6.12645626 -149.67311096]
[1.21666741 -163.84681702]
[-3.69312119 -178.02052307]
[-8.60291004 -192.19422913]
[-24.76679039 -193.93144226]
[-38.50949478 -202.50700378]
[-47.11174393 -216.16438293]
[-48.89746857 -232.14750671]
[-43.56018448 -247.25698853]
[-32.21416092 -258.49047852]
[-37.37194061 -272.57583618]
[-42.52972031 -286.66119385]
[-47.68750000 -300.74655151]
[-52.54151154 -305.30438232]
[-54.10747910 -310.80551147]
[-52.76962280 -315.41775513]
[-57.42990494 -329.67544556]
[-62.09019089 -343.93313599]
[-66.75048065 -358.19082642]
[-78.39239502 -368.90417480]
[-74.99217224 -383.40548706]
[-79.65245819 -397.66317749]
[-85.30917358 -404.87319946]
[-84.26704407 -412.21215820]
[-88.67639160 -426.54943848]
[-93.08573914 -440.88671875]
[-106.77160645 -448.32543945]
[-111.03907013 -462.92831421]
[-103.86304474 -475.92984009]
[-108.27239227 -490.26712036]
[-119.72449493 -501.18316650]
[-116.07030487 -515.62255859]
[-126.50552368 -528.98455811]
[-116.55448914 -542.71093750]
[-100.60983276 -536.94860840]
[-101.73302460 -520.03192139]
[-90.59629822 -510.14135742]
[-93.93511200 -494.67648315]
[-89.52576447 -480.33920288]
[-76.28383636 -473.61706543]
[-71.60788727 -459.13983154]
[-78.74845123 -445.29608154]
[-74.33910370 -430.95880127]
[-69.92976379 -416.62149048]
[-65.39476776 -402.32345581]
[-60.73448563 -388.06576538]
[-49.42589951 -378.37222290]
[-52.49278641 -362.85110474]
[-47.83250046 -348.59341431]
[-43.17221451 -334.33572388]
[-38.51193237 -320.07803345]
[-33.60214233 -305.90432739]
[-28.44436264 -291.81896973]
[-23.28658295 -277.73361206]
[-18.12880325 -263.64825439]
[-4.25689840 -262.97137451]
[8.34675503 -257.03488159]
[17.76145172 -246.70690918]
[22.53854752 -233.52751160]
[21.92429161 -219.47911072]
[15.97856236 -206.68833923]
[5.57079697 -197.10401917]
[10.48058605 -182.93031311]
[15.39037418 -168.75660706]
[20.30016327 -154.58290100]
[25.20995140 -140.40919495]
[40.03776169 -138.79627991]
[52.74711990 -130.87278748]
[60.78884888 -118.16484833]
[62.52265930 -103.16438293]
[57.55145264 -88.84048462]
[46.81063461 -78.05177307]
[51.72042465 -63.87806702]
[63.19738770 -54.38446045]
[60.40336609 -38.81191635]
[65.31315613 -24.63821030]
[78.78283691 -18.38494682]
[83.96396637 -4.08073330]
[77.31364441 10.00510693]
[82.22343445 24.17881393]
[96.08753967 34.91749191]
[92.49558258 52.96422577]
[97.65336609 67.04958344]
[102.81114197 81.13494110]
[140.64208984 95.18173218]
[152.34606934 104.56345367]
[164.13194275 113.84210968]
[175.99876404 123.01698303]
[187.86560059 132.19184875]
[199.73243713 141.36672974]
[211.59927368 150.54159546]
[223.46609497 159.71647644]
[239.11630249 162.03631592]
[244.45254517 175.94219971]
[253.18324280 178.72744751]
[256.44525146 185.38369751]
[268.14926147 194.76542664]
[279.85324097 204.14714050]
[291.55722046 213.52886963]
[303.26119995 222.91058350]
[317.00704956 216.27622986]
[332.27017212 216.27156067]
[346.02005005 222.89752197]
[355.52667236 234.83850098]
[358.90246582 249.72361755]
[355.47717285 264.59741211]
[345.93087769 276.50671387]
[332.15902710 283.08688354]
[316.89599609 283.03143311]
[303.17230225 276.35140991]
[293.71279907 264.37307739]
[290.39566040 249.47477722]
[293.87948608 234.61457825]
[282.17550659 225.23284912]
[270.47152710 215.85113525]
[258.76751709 206.46940613]
[247.06353760 197.08769226]
[235.27767944 187.80903625]
[220.47627258 186.14544678]
[214.29122925 171.58329773]
[202.42439270 162.40843201]
[190.55755615 153.23355103]
[178.69073486 144.05868530]
[166.82389832 134.88381958]
[154.95706177 125.70893860]
[147.72109985 124.10044861]
[142.96435547 116.26744080]
[131.26036072 106.88571930]
[124.00192261 108.77383423]
[127.77790833 123.29078674]
[113.26089478 127.06652832]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 21]
[3 19]
[4 18]
[5 17]
[6 16]
[7 15]
[28 131]
[29 130]
[30 129]
[33 127]
[34 126]
[37 123]
[38 122]
[40 120]
[41 119]
[47 113]
[48 112]
[49 111]
[50 110]
[51 109]
[57 102]
[58 101]
[59 100]
[60 99]
[63 98]
[64 97]
[65 96]
[66 95]
[68 93]
[69 92]
[71 91]
[72 90]
[73 89]
[76 86]
[77 85]
[79 83]
[132 175]
[133 174]
[134 172]
[135 171]
[136 170]
[137 169]
[138 168]
[139 167]
[141 165]
[143 164]
[144 163]
[145 162]
[146 161]
[147 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
