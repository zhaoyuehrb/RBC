%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:43:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGACCCGGUCUCACUUCGCUCCUGGGCAGCUGCGCGGAGAACUGGGGCUCACCGUCAUGGAUGCUCUAUCAGAAGCAAAUGGCACAUUUGCAUUAAACCUUUUGAAAAAGCUAGGGGAAAACAACUCAAACAACUUAUUUUUUUCCCC\
) } def
/len { sequence length } bind def

/coor [
[78.59112549 113.76431274]
[64.14369202 117.79811096]
[49.78389740 122.13358307]
[35.51804733 126.76884460]
[21.25220108 131.40409851]
[13.36268139 148.57119751]
[-4.24649000 154.48487854]
[-20.33868790 145.85945129]
[-34.39791870 151.08802795]
[-48.45714951 156.31661987]
[-62.51637650 161.54519653]
[-76.57560730 166.77377319]
[-90.63483429 172.00234985]
[-104.69406891 177.23094177]
[-106.45765686 189.68283081]
[-113.33069611 200.12814331]
[-123.94468689 206.59965515]
[-136.23387146 207.91027832]
[-147.83715820 203.87043762]
[-156.55175781 195.31253052]
[-170.81761169 199.94778442]
[-185.08345032 204.58303833]
[-199.34930420 209.21830750]
[-206.60157776 214.88265991]
[-213.96269226 213.79785156]
[-224.93753052 225.19361877]
[-239.35792542 221.46513367]
[-253.71771240 225.80061340]
[-264.54315186 238.11895752]
[-280.56863403 234.63813782]
[-285.30850220 218.93891907]
[-273.88681030 207.17131042]
[-258.05319214 211.44081116]
[-243.69340515 207.10534668]
[-233.74566650 196.01968384]
[-218.29817200 199.43806458]
[-203.98455811 194.95245361]
[-189.71871948 190.31719971]
[-175.45286560 185.68194580]
[-161.18701172 181.04669189]
[-156.56146240 164.05758667]
[-142.57162476 153.11036682]
[-124.65605164 152.69821167]
[-109.92264557 163.17170715]
[-95.86341858 157.94313049]
[-81.80419159 152.71455383]
[-67.74495697 147.48596191]
[-53.68572998 142.25738525]
[-39.62649918 137.02880859]
[-25.56726837 131.80021667]
[-23.15273285 120.57075500]
[-15.51563931 111.83097839]
[-4.48492146 107.85116577]
[7.21055365 109.73987579]
[16.61694527 117.13825226]
[30.88279343 112.50299072]
[45.14863968 107.86773682]
[48.10021973 104.03666687]
[53.51672745 102.05805206]
[60.10988998 103.35066986]
[74.55732727 99.31687164]
[79.33426666 85.14323425]
[91.24794769 76.10025787]
[106.18407440 75.31086731]
[113.95448303 62.48040390]
[121.72488403 49.64993668]
[115.87671661 35.39844513]
[119.49929810 20.60891151]
[130.99983215 10.90316200]
[145.83271790 9.84317780]
[153.60311890 -2.98728609]
[161.37353516 -15.81774998]
[169.14393616 -28.64821434]
[176.91433716 -41.47867966]
[184.68473816 -54.30914307]
[191.35427856 -67.74481964]
[196.87614441 -81.69146729]
[202.39801025 -95.63811493]
[207.91987610 -109.58476257]
[213.44174194 -123.53141022]
[218.96360779 -137.47805786]
[224.48547363 -151.42469788]
[224.69450378 -168.37736511]
[241.04251099 -172.86946106]
[249.88464355 -158.40388489]
[238.43212891 -145.90283203]
[232.91026306 -131.95619202]
[227.38839722 -118.00953674]
[221.86651611 -104.06288910]
[216.34465027 -90.11624146]
[210.82278442 -76.16959381]
[205.30091858 -62.22294998]
[218.88099670 -68.59329987]
[233.64154053 -65.92379761]
[244.13018799 -55.20053101]
[246.47251892 -40.38454437]
[239.80334473 -26.94869995]
[226.58615112 -19.85604286]
[211.70323181 -21.72651863]
[200.65216064 -31.86919785]
[197.51521301 -46.53873825]
[189.74479675 -33.70827103]
[181.97439575 -20.87780952]
[174.20399475 -8.04734516]
[166.43359375 4.78311920]
[158.66317749 17.61358261]
[164.59584045 31.24962425]
[161.32272339 45.93807983]
[149.89451599 56.00035477]
[134.55534363 57.42034149]
[126.78494263 70.25080872]
[119.01454163 83.08126831]
[124.22155762 92.18256378]
[125.31759644 102.61066437]
[122.11663055 112.59566498]
[132.38484192 123.53019714]
[142.65304565 134.46472168]
[152.92124939 145.39926147]
[163.18945312 156.33378601]
[173.45765686 167.26831055]
[183.72587585 178.20285034]
[193.99407959 189.13737488]
[207.56661987 182.48323059]
[222.49777222 180.12693787]
[237.45986938 182.27801514]
[251.12248230 188.74517822]
[262.27075195 198.95338440]
[269.91339111 211.99491882]
[273.37078857 226.71014404]
[272.33554077 241.79058838]
[266.89971924 255.89529419]
[257.54663086 267.77011108]
[245.10795593 276.35913086]
[230.68975830 280.89859009]
[215.57406616 280.98489380]
[201.10498047 276.61032104]
[188.56906128 268.16387939]
[179.08100891 256.39663696]
[173.48448181 242.35488892]
[172.27713013 227.28726196]
[175.56631470 212.53352356]
[183.05953979 199.40557861]
[172.79133606 188.47105408]
[162.52313232 177.53652954]
[152.25492859 166.60198975]
[141.98672485 155.66746521]
[131.71850586 144.73294067]
[121.45030975 133.79840088]
[111.18209839 122.86387634]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 61]
[2 60]
[3 57]
[4 56]
[5 55]
[8 50]
[9 49]
[10 48]
[11 47]
[12 46]
[13 45]
[14 44]
[20 40]
[21 39]
[22 38]
[23 37]
[25 36]
[27 34]
[28 33]
[64 112]
[65 111]
[66 110]
[70 106]
[71 105]
[72 104]
[73 103]
[74 102]
[75 101]
[76 92]
[77 91]
[78 90]
[79 89]
[80 88]
[81 87]
[82 86]
[115 149]
[116 148]
[117 147]
[118 146]
[119 145]
[120 144]
[121 143]
[122 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
