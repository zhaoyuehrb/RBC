%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:11:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGGACCGCUGGCGCCAGCGGGAGAACCAGGAAGCGCAGCUCUCCCCUUAGCUGACUCUGGUGCUCUCUACAGGUGGCCUUCACUAUCAACUGCACAGCGGGCAGAGGCAGAGGAACACAGAACCUUCUCACACAGCGGGAUAAAAGGGUGAAUUUGGAGCUGACAG\
) } def
/len { sequence length } bind def

/coor [
[156.67129517 196.71589661]
[146.74662781 185.46864319]
[143.45570374 170.83409119]
[147.61001587 156.42085266]
[158.18519592 145.78291321]
[172.57238770 141.54342651]
[158.93852234 135.28901672]
[145.30465698 129.03460693]
[131.67077637 122.78018951]
[118.03691864 116.52577972]
[104.40304565 110.27136993]
[90.71129608 104.14470673]
[76.96286774 98.14632416]
[62.54910660 93.99378967]
[47.71664429 91.75815582]
[32.88418198 89.52252197]
[18.05171776 87.28688812]
[3.25249767 92.88095856]
[-8.17943668 83.33317566]
[-23.08511925 81.65370941]
[-38.04317474 80.53276062]
[-53.00123215 79.41181183]
[-67.95928955 78.29085541]
[-82.91735077 77.16990662]
[-97.25714111 83.85428619]
[-109.37061310 75.18750763]
[-124.32867432 74.06655884]
[-139.28672791 72.94560242]
[-154.24478149 71.82465363]
[-169.20285034 70.70370483]
[-184.16090393 69.58274841]
[-190.30105591 78.39617920]
[-199.48735046 83.80509949]
[-210.01181030 84.88220215]
[-219.94998169 81.49841309]
[-227.51287842 74.33419800]
[-231.36894226 64.74392700]
[-246.24061584 62.78603745]
[-261.11230469 60.82814407]
[-275.98397827 58.87025070]
[-290.85562134 56.91235733]
[-301.43881226 68.26032257]
[-316.67730713 71.18733215]
[-330.71163940 64.56789398]
[-338.14532471 50.94731903]
[-336.11993408 35.56299591]
[-325.41430664 24.33050728]
[-310.14492798 21.56897736]
[-296.18322754 28.34026909]
[-288.89773560 42.04068375]
[-274.02606201 43.99857712]
[-259.15438843 45.95647049]
[-244.28273010 47.91436386]
[-229.41105652 49.87225723]
[-214.92489624 36.89948654]
[-195.26008606 38.72536850]
[-183.03994751 54.62469482]
[-168.08189392 55.74564743]
[-153.12384033 56.86659622]
[-138.16577148 57.98754883]
[-123.20771790 59.10850143]
[-108.24966431 60.22945023]
[-94.97977448 53.46489716]
[-81.79639435 62.21184921]
[-66.83834076 63.33280182]
[-51.88028336 64.45375061]
[-36.92222595 65.57470703]
[-21.96416855 66.69565582]
[-19.73745346 64.92831421]
[-16.66216850 63.95552444]
[-13.04444122 64.11043549]
[-9.30708981 65.60665131]
[-5.94380236 68.50071716]
[7.79450130 62.74673843]
[20.28735161 72.45442963]
[35.11981583 74.69006348]
[49.95227814 76.92569733]
[64.78473663 79.16133118]
[53.48899841 69.29187012]
[46.74378586 55.89403152]
[45.54309845 40.94216156]
[50.06388092 26.63962746]
[59.63992691 15.09409428]
[72.86007690 8.00695515]
[87.77617645 6.42259550]
[102.19011688 10.57449245]
[113.97782135 19.85080719]
[121.40220642 32.88455200]
[123.36919403 47.75502396]
[119.58892059 62.27086258]
[110.61846161 74.29296112]
[97.77973175 82.04969788]
[82.96124268 84.39788818]
[96.70967865 90.39627075]
[104.80606079 90.48092651]
[110.65746307 96.63750458]
[124.29132843 102.89191437]
[137.92520142 109.14632416]
[151.55906677 115.40073395]
[165.19293213 121.65515137]
[178.82679749 127.90956116]
[190.45588684 127.21266937]
[197.62162781 134.68406677]
[212.11051941 138.56634521]
[226.59941101 142.44863892]
[238.65344238 132.85662842]
[253.86640930 132.20922852]
[266.39532471 140.54530334]
[271.55145264 154.49349976]
[286.04034424 158.37577820]
[300.52923584 162.25807190]
[315.01812744 166.14035034]
[324.00051880 158.27682495]
[335.54971313 155.77061462]
[346.75338745 159.13470459]
[354.84371948 167.41659546]
[357.88104248 178.46426392]
[372.21463013 182.88558960]
[386.54824829 187.30691528]
[395.73327637 175.27110291]
[408.45803833 167.11929321]
[423.17636108 163.81909180]
[438.10760498 165.75000000]
[451.45211792 172.65979004]
[461.60818481 183.69738770]
[467.36425781 197.51754761]
[468.04342651 212.44483948]
[482.37701416 216.86618042]
[496.71060181 221.28750610]
[511.04418945 225.70883179]
[524.08111572 217.07330322]
[539.61285400 218.88943481]
[550.30584717 230.29971313]
[551.11114502 245.91653442]
[541.64849854 258.36614990]
[526.38592529 261.77020264]
[512.52990723 254.52139282]
[506.62286377 240.04241943]
[492.28927612 235.62109375]
[477.95568848 231.19976807]
[463.62207031 226.77844238]
[454.65209961 238.72937012]
[442.11102295 246.90560913]
[427.50198364 250.30416870]
[412.58380127 248.49607849]
[399.15933228 241.68040466]
[388.85754395 230.66253662]
[382.93591309 216.75906372]
[382.12692261 201.64050293]
[367.79330444 197.21917725]
[353.45971680 192.79785156]
[337.85964966 202.31884766]
[319.93618774 197.36953735]
[311.13583374 180.62924194]
[296.64694214 176.74696350]
[282.15805054 172.86466980]
[267.66918945 168.98239136]
[256.22973633 178.48381042]
[241.21133423 179.43859863]
[228.36021423 171.27145386]
[222.71711731 156.93751526]
[208.22824097 153.05523682]
[193.73934937 149.17294312]
[202.11363220 161.61769104]
[203.46928406 176.55630493]
[197.47204590 190.30523682]
[185.60070801 199.47427368]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 101]
[7 100]
[8 99]
[9 98]
[10 97]
[11 96]
[12 94]
[13 93]
[14 78]
[15 77]
[16 76]
[17 75]
[19 73]
[20 68]
[21 67]
[22 66]
[23 65]
[24 64]
[26 62]
[27 61]
[28 60]
[29 59]
[30 58]
[31 57]
[37 54]
[38 53]
[39 52]
[40 51]
[41 50]
[103 163]
[104 162]
[105 161]
[109 157]
[110 156]
[111 155]
[112 154]
[117 151]
[118 150]
[119 149]
[127 141]
[128 140]
[129 139]
[130 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
