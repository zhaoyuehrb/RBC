%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:14:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGGGCCGCGCACGCAGCCGCCGCCACCACUUCCCCCUCUCCCUCCCUCCUUGCGGGCCCUCCUCCCCUUCCCUCCCCUCCGCCCCCUUCCCCGUAGGCAGCCCGCCCGCCAGUCCGCCCGCACCGCCUCCUUCCCAGCCCCUAGCGCUCCGGCUGGGUCUCUCCCCCGCCCCCCAGGCUCCCCCGGUCGCUCUCCUCCGGCGGUCGCCCGCGCUCGGUGG\
) } def
/len { sequence length } bind def

/coor [
[-227.56192017 142.83738708]
[-233.30218506 156.69557190]
[-239.04243469 170.55377197]
[-244.78268433 184.41195679]
[-250.52293396 198.27015686]
[-256.16586304 212.16825867]
[-261.71118164 226.10559082]
[-267.25653076 240.04292297]
[-265.16912842 255.72583008]
[-277.06341553 264.69104004]
[-282.60876465 278.62838745]
[-279.70629883 294.76864624]
[-292.40588379 305.14425659]
[-307.64321899 299.08166504]
[-309.74349976 282.81756592]
[-296.54608154 273.08306885]
[-291.00076294 259.14572144]
[-293.48480225 244.45971680]
[-281.19384766 234.49760437]
[-275.64852905 220.56025696]
[-270.10321045 206.62292480]
[-270.55056763 199.25294495]
[-264.38113403 192.52990723]
[-258.64086914 178.67170715]
[-252.90061951 164.81352234]
[-247.16036987 150.95532227]
[-241.42012024 137.09713745]
[-253.10163879 146.50682068]
[-264.78314209 155.91650391]
[-276.46466064 165.32618713]
[-282.28259277 179.15194702]
[-291.21084595 191.20542908]
[-302.74090576 200.80009460]
[-316.21606445 207.38948059]
[-330.86883545 210.59826660]
[-345.86465454 210.24369812]
[-360.34939575 206.34597778]
[-373.49807739 199.12709045]
[-384.56179810 188.99821472]
[-392.91040039 176.53623962]
[-398.06835938 162.45095825]
[-399.74197388 147.54461670]
[-397.83584595 132.66621399]
[-392.45855713 118.66318512]
[-383.91638184 106.33308411]
[-372.69586182 96.37818146]
[-359.43609619 89.36547852]
[-344.89224243 85.69439697]
[-329.89273071 85.57401276]
[-315.29183960 89.01119232]
[-301.92120361 95.81016541]
[-290.54183960 105.58425140]
[-275.88809204 108.78846741]
[-261.23431396 111.99268341]
[-246.58053589 115.19690704]
[-257.90426636 105.35955048]
[-269.22796631 95.52218628]
[-280.55166626 85.68482971]
[-291.87539673 75.84747314]
[-303.19909668 66.01011658]
[-316.43130493 68.49427032]
[-328.50326538 62.98705673]
[-335.10394287 51.70129395]
[-334.01849365 38.86735153]
[-345.20312500 28.87215233]
[-356.38775635 18.87695312]
[-371.83346558 15.45051289]
[-376.16775513 1.20048141]
[-388.37899780 10.01520824]
[-402.19982910 15.99837780]
[-416.98385620 18.87014771]
[-432.03955078 18.49619865]
[-446.66278076 14.89402103]
[-460.16955566 8.23209572]
[-471.92813110 -1.17798734]
[-481.38858032 -12.89610100]
[-488.10836792 -26.37416840]
[-491.77325439 -40.98179626]
[-492.21179199 -56.03575516]
[-489.40344238 -70.83195496]
[-483.47964478 -84.67833710]
[-474.71737671 -96.92729187]
[-463.52648926 -107.00590515]
[-450.43041992 -114.44278717]
[-436.04171753 -118.89009857]
[-421.03329468 -120.13983154]
[-406.10717773 -118.13353729]
[-391.96148682 -112.96504974]
[-379.25781250 -104.87611389]
[-368.59036255 -94.24505615]
[-360.45803833 -81.56910706]
[-355.24124146 -67.44116211]
[-353.18392944 -52.52199173]
[-354.38235474 -37.50940323]
[-358.78048706 -23.10555649]
[-366.17254639 -9.98415089]
[-351.52682495 -7.27263451]
[-346.39257812 7.69232082]
[-335.20794678 17.68751907]
[-324.02331543 27.68271828]
[-307.28308105 26.02551079]
[-294.27056885 37.21211624]
[-293.36172485 54.68640900]
[-282.03802490 64.52376556]
[-270.71432495 74.36112213]
[-259.39059448 84.19847870]
[-248.06689453 94.03583527]
[-236.74317932 103.87319183]
[-222.55053711 108.72797394]
[-207.57414246 107.88691711]
[-192.59773254 107.04586029]
[-177.62133789 106.20480347]
[-162.64492798 105.36374664]
[-156.14906311 101.85371399]
[-147.45288086 104.61740875]
[-137.59359741 93.51200104]
[-122.40391541 92.65865326]
[-110.82238770 103.07527161]
[-95.83566284 102.44433594]
[-80.84893799 101.81340027]
[-70.98965454 90.70799255]
[-55.79997253 89.85464478]
[-44.21844864 100.27126312]
[-29.23172379 99.64032745]
[-14.24979115 98.90431213]
[0.72661078 98.06325531]
[15.70301342 97.22219849]
[30.67941475 96.38114166]
[45.65581894 95.54008484]
[60.63222122 94.69902802]
[62.07628632 78.69989777]
[70.23549652 63.27907181]
[84.75791168 51.28705215]
[104.08842468 45.33787918]
[125.61843109 47.31016159]
[146.03713989 57.93535614]
[158.73800659 49.95487595]
[171.43887329 41.97439575]
[184.13973999 33.99391174]
[196.84060669 26.01343155]
[209.54145813 18.03295135]
[222.24232483 10.05247021]
[220.99105835 -5.20180559]
[226.98280334 -19.28575134]
[238.84071350 -28.96298218]
[253.83990479 -32.00973892]
[268.53369141 -27.72589874]
[279.54553223 -17.09585953]
[284.34500122 -2.56232381]
[281.82922363 12.53500652]
[272.57629395 24.72687721]
[258.71246338 31.21168327]
[243.42352295 30.49926567]
[230.22280884 22.75333214]
[217.52194214 30.73381424]
[204.82107544 38.71429443]
[192.12022400 46.69477463]
[179.41935730 54.67525864]
[166.71849060 62.65573883]
[154.01762390 70.63622284]
[155.27392578 78.03025055]
[170.06199646 75.51766205]
[184.85005188 73.00506592]
[199.63812256 70.49246979]
[214.42622375 67.98012543]
[216.93832397 82.76827240]
[202.15071106 85.28054047]
[187.36265564 87.79312897]
[172.57458496 90.30572510]
[157.78651428 92.81832123]
[159.04281616 100.21234894]
[173.66673279 103.55016327]
[188.29064941 106.88797760]
[202.58502197 99.60439301]
[217.13177490 106.36985016]
[220.77189636 121.99448395]
[210.71298218 134.49240112]
[194.67138672 134.27627563]
[184.95283508 121.51189423]
[170.32891846 118.17407990]
[155.70500183 114.83626556]
[152.35643005 121.54723358]
[165.77835083 128.24438477]
[179.20016479 134.94175720]
[172.50257874 148.36346436]
[159.08120728 141.66630554]
[145.65927124 134.96916199]
[142.31069946 141.68013000]
[153.77125549 151.35771179]
[169.14776611 148.51217651]
[182.73037720 156.26115417]
[188.10581970 170.94578552]
[182.73594666 185.63247681]
[169.15626526 193.38658142]
[153.77867126 190.54687500]
[143.86401367 178.45416260]
[144.09367371 162.81826782]
[132.63311768 153.14068604]
[104.63574982 156.51144409]
[80.73537445 147.26676941]
[65.72941589 129.75056458]
[61.47327805 109.67543030]
[46.49687576 110.51648712]
[31.52047157 111.35754395]
[16.54406929 112.19860077]
[1.56766748 113.03965759]
[-13.40873432 113.88071442]
[-21.79214478 117.48347473]
[-28.60078621 114.62705231]
[-43.58750916 115.25798798]
[-54.25252914 126.61119080]
[-69.46018982 127.03755951]
[-80.21800232 116.80012512]
[-95.20472717 117.43106079]
[-110.19145203 118.06199646]
[-120.85646820 129.41519165]
[-136.06413269 129.84156799]
[-146.82194519 119.60413361]
[-161.80387878 120.34014893]
[-176.78027344 121.18120575]
[-191.75668335 122.02226257]
[-206.73307800 122.86331940]
[-221.70948792 123.70437622]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 27]
[2 26]
[3 25]
[4 24]
[5 23]
[6 21]
[7 20]
[8 19]
[10 17]
[11 16]
[55 108]
[56 107]
[57 106]
[58 105]
[59 104]
[60 103]
[64 100]
[65 99]
[66 98]
[68 96]
[109 223]
[110 222]
[111 221]
[112 220]
[113 219]
[115 218]
[118 215]
[119 214]
[120 213]
[123 210]
[124 209]
[125 207]
[126 206]
[127 205]
[128 204]
[129 203]
[130 202]
[136 160]
[137 159]
[138 158]
[139 157]
[140 156]
[141 155]
[142 154]
[171 181]
[172 180]
[173 179]
[188 198]
[189 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
