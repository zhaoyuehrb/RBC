%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:53:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGGUCAUUUAUUACUGCGGACACUUAUGUAACCUGGGGUGUAUAUAGGAGCCUGGCUGAGGACACACUCGCCAGCCUGUGCUUUGCCACCUGAGCGCCGCUCCCUCUCAGG\
) } def
/len { sequence length } bind def

/coor [
[-26.33627892 208.43127441]
[-13.84822273 216.74081421]
[-4.44799328 228.42994690]
[0.98887974 242.40994263]
[1.95601070 257.37872314]
[-1.63667774 271.94213867]
[-9.45456600 284.74371338]
[-20.76950264 294.59115601]
[-34.52762604 300.56729126]
[-49.44751740 302.11547852]
[-64.13954926 299.09152222]
[-77.23532104 291.77709961]
[-87.51509857 280.85345459]
[-94.02144623 267.33801270]
[-96.14835358 252.48956299]
[-93.69773102 237.69110107]
[-86.89782715 224.32093811]
[-76.38136292 213.62390137]
[-91.14550018 216.27345276]
[-105.90964508 218.92300415]
[-120.67378998 221.57255554]
[-127.31218719 235.59793091]
[-140.94281006 243.01318359]
[-156.32437134 240.96699524]
[-167.54237366 230.24618530]
[-170.28326416 214.97309875]
[-163.49310303 201.02055359]
[-149.78285217 193.75360107]
[-134.42437744 195.96652222]
[-123.32333374 206.80841064]
[-108.55919647 204.15885925]
[-93.79505157 201.50930786]
[-79.03090668 198.85975647]
[-73.37378693 193.50961304]
[-64.72581482 192.64617920]
[-52.71211624 183.66447449]
[-40.69841766 174.68276978]
[-28.68472099 165.70106506]
[-16.67102432 156.71934509]
[-4.65732670 147.73764038]
[7.35637045 138.75593567]
[10.87690163 132.14096069]
[19.82312775 129.69830322]
[5.50674582 125.22156525]
[-1.67319238 112.05158234]
[2.32007670 97.59288788]
[15.24142551 89.97457123]
[29.82610703 93.47985840]
[37.87420273 106.13798523]
[34.86026764 120.83306885]
[48.36207581 114.29845428]
[61.86388397 107.76383972]
[75.36569214 101.22922516]
[88.86750031 94.69461060]
[99.54628754 84.16069031]
[106.26470947 70.74939728]
[112.98313141 57.33810425]
[119.70155334 43.92680740]
[126.41997528 30.51551437]
[127.49599457 21.30444908]
[133.50947571 16.83341599]
[140.59170532 3.61063886]
[147.67395020 -9.61213875]
[142.85980225 -24.66535950]
[150.17407227 -38.67524719]
[165.27734375 -43.32998276]
[179.20912170 -35.86799622]
[183.70391846 -20.71635056]
[176.09504700 -6.86424923]
[160.89672852 -2.52989697]
[153.81448364 10.69288063]
[146.73225403 23.91565895]
[139.83126831 37.23393631]
[133.11285400 50.64522934]
[126.39442444 64.05652618]
[119.67600250 77.46781921]
[112.95758057 90.87911224]
[116.13237762 97.67401123]
[131.07630920 98.96970367]
[122.48196411 111.26381683]
[125.65676117 118.05871582]
[140.25418091 121.51057434]
[154.85160828 124.96242523]
[169.44902039 128.41427612]
[184.04644775 131.86613464]
[198.64385986 135.31799316]
[210.32040405 125.09850311]
[225.77680969 123.72759247]
[239.06976318 131.73240662]
[245.08784485 146.03492737]
[241.51701355 161.13555908]
[229.73028564 171.22776794]
[214.25993347 172.43092346]
[201.05459595 164.28237915]
[195.19201660 149.91540527]
[180.59458923 146.46354675]
[165.99717712 143.01170349]
[151.39974976 139.55984497]
[136.80232239 136.10798645]
[122.20490265 132.65614319]
[101.04990387 124.42156219]
[95.40211487 108.19641876]
[81.90030670 114.73103333]
[68.39849854 121.26564789]
[54.89669037 127.80026245]
[41.39488220 134.33486938]
[28.47333336 141.95285034]
[16.33807755 150.76963806]
[4.32438087 159.75134277]
[-7.68931627 168.73304749]
[-19.70301437 177.71475220]
[-31.71671104 186.69645691]
[-43.73040771 195.67817688]
[-55.74410629 204.65988159]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 33]
[19 32]
[20 31]
[21 30]
[35 114]
[36 113]
[37 112]
[38 111]
[39 110]
[40 109]
[41 108]
[43 107]
[50 106]
[51 105]
[52 104]
[53 103]
[54 102]
[55 77]
[56 76]
[57 75]
[58 74]
[59 73]
[61 72]
[62 71]
[63 70]
[81 100]
[82 99]
[83 98]
[84 97]
[85 96]
[86 95]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
