%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:59:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAAAUGCCCUCCCUGCCUCCCUCUGGGGGCCCCCAAGAUCUAGGGUCCUCUCGUGCCUAGGCUGUCUGCCUGAGGAAAAAAAAAAAAGUACCGCUCCAGAGCAGGAGCCUAGGCAGCCGAGAGGGUGCCCGAACCUGAGUCUGAGUUGCGGCCACUUCAGGAGCUGAGAGGAGCAGG\
) } def
/len { sequence length } bind def

/coor [
[102.59738159 296.02163696]
[104.20056915 311.16592407]
[99.49923706 325.65100098]
[89.30792999 336.96722412]
[75.39233398 343.15402222]
[60.16342545 343.13943481]
[46.25970078 336.92605591]
[36.09006119 325.59033203]
[31.41646194 311.09628296]
[33.04862976 295.95507812]
[40.70378494 282.79003906]
[53.05562210 273.88204956]
[67.96411133 270.77453613]
[71.09995270 256.10595703]
[74.23579407 241.43742371]
[77.37163544 226.76885986]
[80.50747681 212.10031128]
[78.82616425 204.88092041]
[83.82920837 197.20288086]
[87.22200012 182.59162903]
[90.61478424 167.98036194]
[93.87922668 153.33988953]
[97.01506805 138.67134094]
[100.15090942 124.00277710]
[88.12488556 115.03758240]
[74.96257019 122.23156738]
[61.80025482 129.42555237]
[48.63793564 136.61953735]
[40.57507324 150.89967346]
[24.17631721 150.78651428]
[16.31130219 136.39645386]
[25.07088089 122.53276825]
[41.44395065 123.45722198]
[54.60626602 116.26323700]
[67.76858521 109.06925201]
[80.93090057 101.87526703]
[66.34198761 105.36291504]
[52.67079926 99.19051361]
[45.63850021 85.94110107]
[48.18799591 71.15935516]
[59.25236511 61.03118896]
[74.20134735 59.79507446]
[86.77902985 67.96830750]
[91.72187805 82.13179016]
[90.66969299 67.16873932]
[89.61751556 52.20568848]
[88.56533051 37.24263382]
[87.25070953 22.30035400]
[85.67405701 7.38344574]
[84.09740448 -7.53346300]
[82.52074432 -22.45037079]
[80.94409180 -37.36727905]
[79.36743927 -52.28418732]
[77.79078674 -67.20109558]
[75.95258331 -82.08803558]
[73.85340118 -96.94042969]
[71.75421906 -111.79281616]
[69.65503693 -126.64520264]
[67.55585480 -141.49758911]
[65.45667267 -156.34997559]
[63.35748672 -171.20236206]
[61.25830460 -186.05474854]
[59.15912247 -200.90715027]
[57.05994034 -215.75953674]
[52.74905777 -223.84649658]
[55.05662155 -230.89074707]
[53.21841812 -245.77769470]
[51.38021851 -260.66464233]
[49.54201508 -275.55157471]
[47.70381546 -290.43850708]
[45.73504639 -305.30874634]
[43.63586426 -320.16113281]
[41.53668213 -335.01351929]
[39.30724716 -349.84692383]
[36.94772720 -364.66018677]
[21.98010445 -366.77243042]
[8.30075645 -373.20413208]
[-2.87395692 -383.38339233]
[-10.55038738 -396.40505981]
[-14.04595280 -411.11126709]
[-13.04982853 -426.19433594]
[-7.65059042 -440.31311035]
[1.67166543 -452.21215820]
[14.08801079 -460.83337402]
[28.49439049 -465.41024780]
[43.60980225 -465.53573608]
[58.09019089 -461.19873047]
[70.64797211 -452.78482056]
[80.16651917 -441.04223633]
[85.79943848 -427.01504517]
[87.04586792 -411.95059204]
[83.79496765 -397.18838501]
[76.33581543 -384.04104614]
[65.33165741 -373.67764282]
[51.76099014 -367.01971436]
[54.12050629 -352.20645142]
[58.28990555 -346.07760620]
[56.38906860 -337.11270142]
[58.48825073 -322.26031494]
[60.58743286 -307.40792847]
[64.64862823 -301.20687866]
[62.59075546 -292.27670288]
[64.42895508 -277.38977051]
[66.26715851 -262.50283813]
[68.10536194 -247.61589050]
[69.94355774 -232.72895813]
[71.91233063 -217.85871887]
[74.01151276 -203.00633240]
[76.11069489 -188.15393066]
[78.20987701 -173.30154419]
[80.30905914 -158.44915771]
[82.40824127 -143.59677124]
[84.50742340 -128.74438477]
[86.60660553 -113.89199829]
[88.70578766 -99.03961182]
[90.80496979 -84.18721771]
[94.03830719 -80.63645172]
[95.05663300 -75.00814819]
[92.70769501 -68.77774811]
[94.28434753 -53.86084366]
[95.86100006 -38.94393539]
[97.43765259 -24.02702522]
[99.01431274 -9.11011696]
[100.59096527 5.80679178]
[102.16761780 20.72369957]
[105.27434540 24.38575745]
[106.09452820 30.04632378]
[103.52838135 36.19045258]
[104.58056641 51.15350342]
[105.63274384 66.11655426]
[106.68492889 81.07960510]
[114.78446960 93.70487213]
[129.77867126 89.48447418]
[143.02465820 96.96770477]
[146.95574951 111.28838348]
[160.11807251 118.48236847]
[173.28038025 125.67636108]
[186.44270325 132.87034607]
[199.60502625 140.06433105]
[212.82995605 147.14253235]
[226.11650085 154.10441589]
[239.52317810 160.83204651]
[253.04585266 167.32334900]
[266.56854248 173.81466675]
[282.12033081 169.87498474]
[294.80923462 179.69187927]
[294.90139771 195.73466492]
[282.32611084 205.69670105]
[266.73007202 201.93594360]
[260.07723999 187.33734131]
[246.55455017 180.84603882]
[233.03187561 174.35472107]
[228.28395081 175.07565308]
[223.03594971 172.80120850]
[219.15461731 167.39096069]
[205.86807251 160.42907715]
[198.46241760 160.10874939]
[192.41102600 153.22663879]
[179.24871826 146.03265381]
[166.08639526 138.83866882]
[152.92408752 131.64468384]
[139.76176453 124.45069885]
[125.58559418 128.87467957]
[112.13465118 121.76646423]
[107.59048462 106.86719513]
[112.74026489 116.16053009]
[114.81946564 127.13861847]
[111.68362427 141.80717468]
[108.54778290 156.47572327]
[109.81508636 165.55187988]
[105.22605133 171.37315369]
[101.83325958 185.98440552]
[98.44046783 200.59567261]
[95.17603302 215.23614502]
[92.04019165 229.90470886]
[88.90435028 244.57325745]
[85.76850891 259.24182129]
[82.63266754 273.91036987]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 178]
[14 177]
[15 176]
[16 175]
[17 174]
[19 173]
[20 172]
[21 171]
[22 169]
[23 168]
[24 167]
[25 36]
[26 35]
[27 34]
[28 33]
[44 131]
[45 130]
[46 129]
[47 128]
[48 125]
[49 124]
[50 123]
[51 122]
[52 121]
[53 120]
[54 119]
[55 116]
[56 115]
[57 114]
[58 113]
[59 112]
[60 111]
[61 110]
[62 109]
[63 108]
[64 107]
[66 106]
[67 105]
[68 104]
[69 103]
[70 102]
[71 100]
[72 99]
[73 98]
[74 96]
[75 95]
[132 165]
[135 162]
[136 161]
[137 160]
[138 159]
[139 158]
[140 156]
[141 155]
[142 152]
[143 151]
[144 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
