%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:59:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGAAGGUGGGGUCAAGGGAGGCCCCAAAACAGUCUACACAGCAGGAGGGAUGGCUGGGGCUCUUGAGCUAUAAGUGGCACCUCAGGGCCCUGACGGGCGUCUCGCC\
) } def
/len { sequence length } bind def

/coor [
[-37.62320709 151.77676392]
[-50.15552521 160.01939392]
[-62.68784332 168.26202393]
[-62.31610489 182.12828064]
[-68.82876587 194.25225830]
[-80.41063690 201.48304749]
[-93.94563293 202.00254822]
[-105.85486603 195.78147888]
[-118.62161255 203.65612793]
[-131.38836670 211.53077698]
[-144.15512085 219.40542603]
[-156.92185974 227.28007507]
[-169.68861389 235.15472412]
[-182.45536804 243.02937317]
[-185.85574341 258.46353149]
[-199.21856689 266.90216064]
[-214.61590576 263.33877563]
[-222.91278076 249.88748169]
[-219.18682861 234.52868652]
[-205.64855957 226.37448120]
[-190.33001709 230.26261902]
[-177.56326294 222.38796997]
[-164.79650879 214.51332092]
[-152.02976990 206.63867188]
[-139.26301575 198.76402283]
[-126.49626160 190.88937378]
[-113.72951508 183.01472473]
[-113.05040741 166.68449402]
[-102.71166992 153.81297302]
[-86.59286499 149.54312134]
[-70.93048096 155.72970581]
[-58.39815903 147.48707581]
[-45.86584473 139.24444580]
[-60.70004654 137.02040100]
[-72.96352386 128.38285828]
[-80.05415344 115.16457367]
[-80.46739960 100.17026520]
[-74.11559296 86.58150482]
[-62.34647369 77.28160858]
[-47.65728760 74.24388885]
[-33.16484833 78.11289978]
[-21.94423485 88.06768799]
[-16.37629128 101.99600220]
[-17.64245224 116.94246674]
[-25.47391891 129.73553467]
[-11.10407543 125.43347931]
[-1.13056517 114.37100220]
[14.30893803 117.82532501]
[28.67878151 113.52327728]
[43.04862213 109.22122955]
[57.41846466 104.91918182]
[71.78830719 100.61712646]
[86.15814972 96.31507874]
[95.89184570 86.27780914]
[109.53980255 89.31507874]
[123.90964508 85.01302338]
[138.27947998 80.71097565]
[152.44799805 75.78622437]
[166.38821411 70.24813080]
[180.32843018 64.71003723]
[194.26863098 59.17194366]
[201.21839905 53.00172043]
[208.69570923 53.68200684]
[222.79110718 48.55170441]
[236.88648987 43.42140198]
[250.98187256 38.29109955]
[265.07727051 33.16079712]
[278.93545532 27.42054558]
[292.53009033 21.08127213]
[306.12469482 14.74199867]
[319.71929932 8.40272427]
[328.67712402 -5.33371019]
[345.03521729 -4.17417431]
[351.96582031 10.68850040]
[342.33926392 23.96486855]
[326.05859375 21.99734116]
[312.46395874 28.33661461]
[298.86935425 34.67588806]
[285.27474976 41.01516342]
[283.73065186 44.34886169]
[280.40902710 47.04519653]
[275.65527344 48.23638153]
[270.20758057 47.25618744]
[256.11218262 52.38648987]
[242.01678467 57.51679230]
[227.92140198 62.64709473]
[213.82601929 67.77739716]
[199.80673218 73.11215973]
[185.86651611 78.65024567]
[171.92630005 84.18833923]
[157.98608398 89.72643280]
[156.25077820 92.96471405]
[152.77799988 95.46334839]
[147.96304321 96.37611389]
[142.58152771 95.08081818]
[128.21168518 99.38287354]
[113.84185028 103.68492126]
[104.10815430 113.72219086]
[90.46019745 110.68492126]
[76.09035492 114.98697662]
[61.72051620 119.28902435]
[47.35067368 123.59107208]
[32.98082733 127.89311981]
[18.61098671 132.19515991]
[7.60964870 143.56535339]
[-6.80202675 139.80332947]
[-21.17186928 144.10537720]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 33]
[2 32]
[3 31]
[8 27]
[9 26]
[10 25]
[11 24]
[12 23]
[13 22]
[14 21]
[45 107]
[46 106]
[48 104]
[49 103]
[50 102]
[51 101]
[52 100]
[53 99]
[55 97]
[56 96]
[57 95]
[58 91]
[59 90]
[60 89]
[61 88]
[63 87]
[64 86]
[65 85]
[66 84]
[67 83]
[68 79]
[69 78]
[70 77]
[71 76]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
