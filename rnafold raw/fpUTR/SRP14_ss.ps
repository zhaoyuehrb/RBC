%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:48:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGGAAGUCCCGCCCAGCCUAGGCCGAACUUCCGGCUCUCACUGCUAGGGGCUUAAGCGGAGGGAGUCGAGCCAGCGUCGCCGCGAUGGUGUUGUUGGAGAGCGAGCAGUUCCUGACGGAGCUGACCAGACUUUUCCAGAAGUGCCGGACGUCGGGCAGCGUCUAUAUCACCUUGAAGAAGUAUGACGGUCGAACCAAACCCAUUCCAAAGAAGGGUACUGUGGAGGGCUUUGAGCCCGCAGACAACAAGUGUC\
UGUUAAGAGCUACCG\
) } def
/len { sequence length } bind def

/coor [
[95.35839844 161.77258301]
[94.66309357 146.78869629]
[93.96778870 131.80482483]
[79.25813293 128.86781311]
[72.86200714 142.43577576]
[66.46587372 156.00372314]
[60.06974792 169.57168579]
[53.67362213 183.13964844]
[47.27749252 196.70761108]
[48.39160538 212.48954773]
[35.96596527 220.70249939]
[37.08007812 236.48442078]
[24.65443420 244.69738770]
[18.25830650 258.26535034]
[11.86217880 271.83331299]
[18.57538033 285.95657349]
[14.58971310 301.07769775]
[1.78708816 310.05694580]
[-13.78748703 308.65460205]
[-24.78017426 297.53277588]
[-26.00056267 281.94287109]
[-16.87242126 269.24600220]
[-1.70578158 265.43716431]
[4.69034672 251.86921692]
[11.08647442 238.30125427]
[9.51486683 223.48979187]
[22.39800453 214.30636597]
[20.82639503 199.49490356]
[33.70953369 190.31147766]
[40.10565948 176.74351501]
[46.50178909 163.17556763]
[52.89791870 149.60760498]
[59.29404449 136.03964233]
[65.69017029 122.47167969]
[55.49061966 111.47309113]
[41.47965240 116.82966614]
[27.46869087 122.18623352]
[13.45772648 127.54280853]
[-0.55323738 132.89938354]
[-14.56420135 138.25596619]
[-28.57516479 143.61253357]
[-38.70238495 155.76777649]
[-53.35350418 153.08561707]
[-67.36446381 158.44219971]
[-81.37542725 163.79876709]
[-95.38639069 169.15534973]
[-109.39735413 174.51191711]
[-112.45272827 189.63369751]
[-123.21489716 200.68716431]
[-138.24971008 204.14520264]
[-152.75961304 198.90434265]
[-162.11453247 186.63696289]
[-163.32936096 171.25749207]
[-156.01644897 157.67350769]
[-142.50932312 150.21957397]
[-127.11804962 151.27424622]
[-114.75392914 160.50096130]
[-100.74296570 155.14437866]
[-86.73200226 149.78781128]
[-72.72103882 144.43122864]
[-58.71007538 139.07466125]
[-49.58501434 127.30254364]
[-33.93173981 129.60157776]
[-19.92077637 124.24499512]
[-5.90981197 118.88842010]
[8.10115147 113.53184509]
[22.11211586 108.17527008]
[36.12308121 102.81869507]
[50.13404465 97.46212769]
[50.35137558 89.96527100]
[37.58376312 82.09201813]
[50.78603363 74.97157288]
[51.00336456 67.47472382]
[37.32624054 61.31547928]
[23.64911652 55.15623856]
[9.97199154 48.99699783]
[-3.70513368 42.83775711]
[-17.38225937 36.67851639]
[-33.14242935 38.06687546]
[-41.57020187 25.78591919]
[-55.24732971 19.62667847]
[-68.92445374 13.46743679]
[-82.60157776 7.30819607]
[-98.05256653 11.62636852]
[-110.97734070 2.12217450]
[-111.46112823 -13.91358280]
[-99.13279724 -24.17964172]
[-83.44960022 -20.80076218]
[-76.44233704 -6.36892891]
[-62.76521301 -0.20968774]
[-49.08808517 5.94955349]
[-35.41096115 12.10879517]
[-20.62907028 10.27988243]
[-11.22301769 23.00139046]
[2.45410752 29.16063118]
[16.13123322 35.31987381]
[29.80835724 41.47911453]
[43.48548126 47.63835526]
[57.16260910 53.79759598]
[67.79990387 43.22177887]
[61.72004318 29.50918388]
[55.64017868 15.79658794]
[49.56031799 2.08399200]
[43.40107727 -11.59313297]
[28.86322594 -17.18675804]
[22.73091125 -31.10973930]
[28.15317154 -44.93488693]
[21.83579445 -58.53969193]
[15.43966579 -72.10765076]
[9.04353714 -85.67561340]
[2.64740920 -99.24356842]
[-3.74871898 -112.81153107]
[-10.14484692 -126.37949371]
[-16.54097557 -139.94744873]
[-30.31478882 -148.84768677]
[-29.22374153 -165.21049500]
[-14.39021015 -172.20323181]
[-1.07365894 -162.63237000]
[-2.97301507 -146.34358215]
[3.42311311 -132.77561951]
[9.81924152 -119.20765686]
[16.21537018 -105.63970184]
[22.61149788 -92.07173920]
[29.00762558 -78.50377655]
[35.40375519 -64.93582153]
[41.07791138 -60.24264526]
[41.79436493 -51.17329788]
[55.79875565 -46.23237991]
[62.31971741 -32.48713684]
[57.04227066 -17.83154678]
[62.66164398 -13.07291031]
[63.27291489 -3.99586964]
[69.35277557 9.71672630]
[75.43264008 23.42932129]
[81.51249695 37.14191818]
[165.85252380 66.37202454]
[178.90048218 58.97264099]
[191.94844055 51.57325745]
[204.99639893 44.17387772]
[213.18391418 30.63596344]
[228.07165527 31.08809662]
[220.52986145 11.09795189]
[228.43058777 -13.79131317]
[253.65402222 -31.75082779]
[259.09170532 -45.73050690]
[264.52941895 -59.71018982]
[269.96710205 -73.68986511]
[267.75885010 -89.35620880]
[279.58364868 -98.41287994]
[276.55682373 -114.53027344]
[289.17599487 -125.00349426]
[304.45965576 -119.05858612]
[306.68527222 -102.81116486]
[293.56332397 -92.97518921]
[296.16052246 -78.30876923]
[283.94677734 -68.25217438]
[278.50909424 -54.27249146]
[273.07138062 -40.29281235]
[267.63369751 -26.31313133]
[273.63421631 -21.81380463]
[291.63571167 -8.31582451]
[303.53161621 -17.45299339]
[315.42749023 -26.59016228]
[327.32339478 -35.72732925]
[339.16610718 -44.93329620]
[350.95529175 -54.20775223]
[362.74444580 -63.48220825]
[368.80667114 -78.09590149]
[383.59353638 -79.88404846]
[395.38272095 -89.15850067]
[394.65469360 -104.65849304]
[403.20449829 -117.60764313]
[417.74453735 -123.02674103]
[432.68389893 -118.83203888]
[442.27804565 -106.63647461]
[442.83789062 -91.12950134]
[434.14810181 -78.27386475]
[419.55014038 -73.01281738]
[404.65716553 -77.36933899]
[392.86801147 -68.09487915]
[387.64901733 -54.14455795]
[372.01889038 -51.69303894]
[360.22973633 -42.41858673]
[348.44055176 -33.14413071]
[345.13858032 -26.56242561]
[336.46054077 -23.83144188]
[324.56466675 -14.69427395]
[312.66876221 -5.55710554]
[300.77288818 3.58006310]
[302.70703125 10.82637882]
[317.19967651 6.95809174]
[331.69229126 3.08980489]
[346.18493652 -0.77848196]
[360.67761230 -4.64652824]
[364.54544067 9.84623146]
[350.05322266 13.71414948]
[335.56057739 17.58243561]
[321.06796265 21.45072365]
[306.57531738 25.31900978]
[308.50946045 32.56532669]
[323.37637329 34.55912781]
[338.24325562 36.55293274]
[353.11016846 38.54673767]
[361.99484253 36.58999252]
[368.13748169 40.65079117]
[382.98025513 42.81680298]
[397.82305908 44.98281860]
[412.85195923 38.42052460]
[425.88711548 48.37123108]
[423.51907349 64.59850311]
[408.18386841 70.40911865]
[395.65704346 59.82560730]
[380.81423950 57.65959549]
[365.97146606 55.49357986]
[351.11636353 53.41363907]
[336.24945068 51.41983414]
[321.38256836 49.42602921]
[306.51565552 47.43222809]
[278.27804565 64.94757843]
[250.57122803 61.20011902]
[235.47103882 44.13605118]
[228.21679688 57.14471054]
[212.39578247 57.22183228]
[199.34782410 64.62121582]
[186.29986572 72.02059937]
[173.25190735 79.41997528]
[171.94938660 94.36331940]
[183.52037048 103.90859222]
[195.09136963 113.45386505]
[206.66235352 122.99913788]
[218.23333740 132.54440308]
[234.29922485 137.95951843]
[233.54322815 154.89660645]
[217.05876160 158.85879517]
[208.68806458 144.11540222]
[197.11708069 134.57012939]
[185.54609680 125.02484894]
[173.97509766 115.47957611]
[162.40411377 105.93431091]
[150.88864136 115.54648590]
[158.21228027 128.63711548]
[165.53590393 141.72773743]
[172.85952759 154.81835938]
[180.18316650 167.90898132]
[187.50679016 180.99961853]
[194.83041382 194.09024048]
[209.81620789 199.81784058]
[214.54417419 215.14840698]
[205.38742065 228.32160950]
[189.37023926 229.23211670]
[178.77961731 217.18145752]
[181.73979187 201.41386414]
[174.41616821 188.32324219]
[167.09252930 175.23262024]
[159.76890564 162.14199829]
[152.44528198 149.05136108]
[145.12164307 135.96073914]
[137.79801941 122.87011719]
[130.58642578 124.92996979]
[134.70613098 139.35314941]
[131.06233215 153.90383911]
[120.28295135 143.47283936]
[116.16325378 129.04966736]
[108.95166779 131.10951233]
[109.64697266 146.09339905]
[110.34227753 161.07727051]
[121.18385315 172.90266418]
[118.55575562 188.72898865]
[104.47403717 196.41564941]
[89.74098969 190.06610107]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 266]
[2 265]
[3 264]
[4 34]
[5 33]
[6 32]
[7 31]
[8 30]
[9 29]
[11 27]
[13 25]
[14 24]
[15 23]
[35 69]
[36 68]
[37 67]
[38 66]
[39 65]
[40 64]
[41 63]
[43 61]
[44 60]
[45 59]
[46 58]
[47 57]
[73 99]
[74 98]
[75 97]
[76 96]
[77 95]
[78 94]
[80 92]
[81 91]
[82 90]
[83 89]
[100 135]
[101 134]
[102 133]
[103 132]
[104 130]
[107 127]
[108 125]
[109 124]
[110 123]
[111 122]
[112 121]
[113 120]
[114 119]
[136 226]
[137 225]
[138 224]
[139 223]
[141 221]
[144 159]
[145 158]
[146 157]
[147 156]
[149 154]
[161 189]
[162 188]
[163 187]
[164 186]
[165 184]
[166 183]
[167 182]
[169 180]
[170 179]
[200 218]
[201 217]
[202 216]
[203 215]
[205 214]
[206 213]
[207 212]
[227 239]
[228 238]
[229 237]
[230 236]
[231 235]
[240 258]
[241 257]
[242 256]
[243 255]
[244 254]
[245 253]
[246 252]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
