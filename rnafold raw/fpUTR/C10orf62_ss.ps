%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:56:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGGUGCAGCAGGGGGCCUGCCUGUCAGACAUCCUUGGGGAGCCUGCCCUUUCAAGCAUGAAUCAUACCACCAGAGAUCACCCAGCGUGCUCUUAGCUCUGCCUGCCUGGUGUAGGGUCCUGGAGACCUUCUUGGAGCUCAUCCAGCAGCCAUCAUGCAAGGUGGUGCUGGGGACUGCCCUCUUGCUAGGAGGUGGAGGUCUC\
) } def
/len { sequence length } bind def

/coor [
[102.76870728 122.03467560]
[94.17222595 121.42964172]
[85.57899475 133.72421265]
[76.98576355 146.01876831]
[68.39253235 158.31333923]
[59.79929733 170.60791016]
[51.20606232 182.90246582]
[42.61283112 195.19703674]
[34.11359406 207.55676270]
[33.23257065 225.94802856]
[17.16529465 233.00143433]
[8.95099545 245.55235291]
[0.73669648 258.10324097]
[-7.47760248 270.65417480]
[-15.69190121 283.20507812]
[-11.00024700 298.12225342]
[-17.04252625 312.54531860]
[-30.96576118 319.66415405]
[-46.19582367 316.11743164]
[-55.54154587 303.57983398]
[-54.59016037 287.97119141]
[-43.79088593 276.66149902]
[-28.24280930 274.99078369]
[-20.02851105 262.43984985]
[-11.81421185 249.88896179]
[-3.59991241 237.33804321]
[4.61438656 224.78713989]
[2.44950366 212.88337708]
[9.19360447 202.35891724]
[21.68941307 199.15202332]
[22.83394051 191.84751892]
[30.31826401 186.60380554]
[38.91149902 174.30923462]
[47.50473022 162.01467896]
[56.09796524 149.72010803]
[64.69120026 137.42553711]
[73.28443146 125.13097382]
[81.87766266 112.83641052]
[77.79787445 100.50798035]
[81.30954742 88.00585175]
[72.16300964 76.11717224]
[63.01647186 64.22848511]
[53.86993408 52.33979797]
[39.32259369 46.12003708]
[37.69431686 31.31470108]
[28.54777908 19.42601585]
[19.40124130 7.53733015]
[10.25470352 -4.35135555]
[1.10816574 -16.24004173]
[-8.12875938 -28.05863762]
[-17.45553398 -39.80645752]
[-32.85128784 -39.28022003]
[-45.45746994 -47.82056808]
[-50.55724716 -61.97882462]
[-46.39203262 -76.25429535]
[-55.71880722 -88.00211334]
[-70.35930634 -93.99930573]
[-72.21317291 -108.77809143]
[-81.53994751 -120.52590942]
[-90.86672211 -132.27372742]
[-98.65680695 -137.05142212]
[-100.24451447 -144.27256775]
[-109.39105225 -156.16123962]
[-116.90343475 -153.58967590]
[-124.78260803 -152.71932983]
[-132.64881897 -153.58633423]
[-140.12423706 -156.14323425]
[-146.85105896 -160.26156616]
[-152.50863647 -165.73822021]
[-156.82876587 -172.30557251]
[-159.60841370 -179.64445496]
[-160.71925354 -187.39970398]
[-160.11352539 -195.19738770]
[-157.82615662 -202.66275024]
[-153.97270203 -209.43830872]
[-148.74360657 -215.20089722]
[-156.17745972 -228.22923279]
[-163.61132812 -241.25756836]
[-171.04519653 -254.28591919]
[-184.60472107 -262.43759155]
[-184.19197083 -277.32647705]
[-191.62583923 -290.35482788]
[-199.05970764 -303.38314819]
[-214.09330750 -308.98406982]
[-218.95051575 -324.27416992]
[-209.90528870 -337.52420044]
[-193.89634705 -338.56988525]
[-183.20439148 -326.60903931]
[-186.03135681 -310.81701660]
[-178.59748840 -297.78869629]
[-171.16363525 -284.76034546]
[-158.13583374 -277.54052734]
[-158.01686096 -261.71978760]
[-150.58299255 -248.69143677]
[-143.14912415 -235.66310120]
[-135.71525574 -222.63476562]
[-113.16284943 -222.42582703]
[-95.17774200 -208.61201477]
[-89.09276581 -186.63658142]
[-97.50236511 -165.30778503]
[-88.35582733 -153.41909790]
[-79.11890411 -141.60050964]
[-69.79212952 -129.85267639]
[-60.46535492 -118.10486603]
[-46.49196625 -112.94795227]
[-43.97098923 -97.32888794]
[-34.64421082 -85.58106995]
[-19.79610062 -86.40057373]
[-7.16313791 -78.22303009]
[-1.70393848 -64.00858307]
[-5.70771456 -49.13323212]
[3.61906052 -37.38541412]
[10.24271965 -34.10015488]
[12.99685097 -25.38657951]
[22.14338875 -13.49789333]
[31.28992653 -1.60920763]
[40.43646622 10.27947807]
[49.58300400 22.16816330]
[63.47612381 27.53756523]
[65.75862122 43.19326019]
[74.90515900 55.08194733]
[84.05169678 66.97063446]
[93.19823456 78.85931396]
[112.86096191 81.89508057]
[122.20141602 99.46192932]
[136.43872070 104.18412781]
[150.67602539 108.90631866]
[164.91334534 113.62850952]
[179.15065002 118.35070038]
[193.38795471 123.07289124]
[207.62525940 127.79508972]
[221.86256409 132.51727295]
[236.09986877 137.23947144]
[249.94616699 126.44602203]
[269.18588257 128.45858765]
[282.83837891 144.59313965]
[297.38439941 138.37030029]
[309.21478271 147.41966248]
[324.12939453 149.01791382]
[332.99966431 146.82012939]
[339.25866699 150.75595093]
[354.14715576 152.58148193]
[363.04989624 150.51921082]
[369.24813843 154.55003357]
[384.10708618 156.60238647]
[398.96600342 158.65473938]
[413.82495117 160.70709229]
[428.68386841 162.75944519]
[443.54278564 164.81179810]
[458.40173340 166.86415100]
[467.33486938 164.93789673]
[473.47094727 169.06277466]
[488.29684448 171.34147644]
[503.12274170 173.62019348]
[517.94866943 175.89891052]
[532.77453613 178.17761230]
[545.36804199 168.62876892]
[561.01336670 170.86437988]
[570.42852783 183.55809021]
[568.02764893 199.17895508]
[555.23510742 208.45938110]
[539.64050293 205.89346313]
[530.49584961 193.00352478]
[515.66992188 190.72480774]
[500.84402466 188.44610596]
[486.01812744 186.16738892]
[471.19223022 183.88867188]
[456.34936523 181.72308350]
[441.49044800 179.67073059]
[426.63150024 177.61837769]
[411.77258301 175.56602478]
[396.91366577 173.51367188]
[382.05471802 171.46131897]
[367.19580078 169.40896606]
[352.32162476 167.46997070]
[337.43313599 165.64445496]
[322.53115845 163.93252563]
[307.61654663 162.33425903]
[294.13729858 168.67141724]
[281.24011230 159.50775146]
[273.21817017 172.18246460]
[281.04589844 184.97804260]
[288.87362671 197.77362061]
[296.70132446 210.56919861]
[304.52905273 223.36476135]
[312.35678101 236.16033936]
[325.78015137 246.51646423]
[319.54473877 262.28210449]
[302.66906738 260.65472412]
[299.56121826 243.98806763]
[291.73348999 231.19248962]
[283.90576172 218.39691162]
[276.07803345 205.60134888]
[268.25030518 192.80577087]
[260.42257690 180.01019287]
[237.74324036 171.57318115]
[231.37768555 151.47677612]
[217.14036560 146.75459290]
[202.90306091 142.03239441]
[188.66575623 137.31019592]
[174.42845154 132.58801270]
[160.19114685 127.86581421]
[145.95384216 123.14362335]
[131.71653748 118.42143250]
[117.47922516 113.69924164]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 38]
[3 37]
[4 36]
[5 35]
[6 34]
[7 33]
[8 32]
[9 30]
[11 27]
[12 26]
[13 25]
[14 24]
[15 23]
[40 123]
[41 122]
[42 121]
[43 120]
[45 118]
[46 117]
[47 116]
[48 115]
[49 114]
[50 112]
[51 111]
[55 107]
[56 106]
[58 104]
[59 103]
[60 102]
[62 101]
[63 100]
[76 96]
[77 95]
[78 94]
[79 93]
[81 91]
[82 90]
[83 89]
[125 205]
[126 204]
[127 203]
[128 202]
[129 201]
[130 200]
[131 199]
[132 198]
[133 197]
[136 180]
[138 178]
[139 177]
[141 176]
[142 175]
[144 174]
[145 173]
[146 172]
[147 171]
[148 170]
[149 169]
[150 168]
[152 167]
[153 166]
[154 165]
[155 164]
[156 163]
[181 195]
[182 194]
[183 193]
[184 192]
[185 191]
[186 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
