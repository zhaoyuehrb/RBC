%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:27:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGAGCUCAGCACCGAGGCGCCCCCCAACCUGCCCAGCCCCCAGCCCACCAGCCCAGCCCAGUCCCGGGGAGCCAGCUGGCCUGGGGUUCGGUCCCGGGGGGAGGGGAGUUUCGGGGGUACUGGGCGGGGUACUCGUGAGCCAGAGGGGAGGGGGCCGCGGGUUUUCAUGUACCCAGC\
) } def
/len { sequence length } bind def

/coor [
[271.85043335 804.94891357]
[276.67941284 790.55981445]
[286.38323975 778.88934326]
[299.64956665 771.51580811]
[297.56195068 756.66180420]
[295.47436523 741.80780029]
[292.86605835 739.39605713]
[291.30984497 735.58978271]
[291.45346069 730.90350342]
[293.68740845 726.12396240]
[292.38009644 711.18103027]
[291.07275391 696.23809814]
[287.34707642 689.83074951]
[289.87533569 681.02331543]
[288.82897949 666.05987549]
[287.78262329 651.09643555]
[279.17636108 638.93988037]
[285.93215942 624.63360596]
[284.88583374 609.67016602]
[283.83947754 594.70666504]
[275.23321533 582.55010986]
[281.98901367 568.24383545]
[280.94265747 553.28039551]
[279.89633179 538.31695557]
[278.71942139 523.36315918]
[277.41210938 508.42025757]
[276.10476685 493.47732544]
[253.27261353 482.91461182]
[246.73692322 460.24130249]
[258.75515747 441.77056885]
[253.62486267 427.67520142]
[248.49455261 413.57980347]
[243.36425781 399.48440552]
[238.23394775 385.38903809]
[233.10365295 371.29364014]
[227.97334290 357.19824219]
[222.84304810 343.10284424]
[217.71273804 329.00747681]
[212.33721924 315.00375366]
[206.71812439 301.09600830]
[201.09902954 287.18823242]
[195.47993469 273.28048706]
[189.86082458 259.37274170]
[183.99986267 245.56515503]
[177.89881897 231.86196899]
[171.79776001 218.15879822]
[165.57736206 204.50936890]
[159.23808289 190.91476440]
[153.54566956 186.16809082]
[152.90911865 177.02711487]
[146.80807495 163.32392883]
[132.85403442 158.24256897]
[126.47149658 144.43249512]
[131.89591980 129.83067322]
[125.79486847 116.12748718]
[119.69381714 102.42430878]
[116.48180389 125.02848816]
[88.78028107 138.49147034]
[54.17038345 120.53218079]
[42.51319504 111.09237671]
[30.85600662 101.65257263]
[15.16646957 103.55361938]
[2.77976203 93.73807526]
[1.04469728 78.02931213]
[10.99065876 65.74707031]
[26.71688271 64.17818451]
[38.89328003 74.25344849]
[40.29581070 89.99538422]
[51.95300293 99.43518829]
[63.61019135 108.87499237]
[69.52027130 104.25753021]
[81.34043121 95.02261353]
[87.25051117 90.40515137]
[80.91123962 76.81053162]
[74.57196808 63.21591568]
[60.83552933 54.25810242]
[61.99506760 37.90000153]
[76.85774231 30.96942139]
[90.13410950 40.59595108]
[88.16658020 56.87664032]
[94.50585938 70.47126007]
[100.84513092 84.06587219]
[115.54399872 81.07535553]
[116.06748962 66.08449554]
[116.59098816 51.09363174]
[117.11447906 36.10276794]
[117.63796997 21.11190605]
[118.16146088 6.12104464]
[108.31575012 -6.54550743]
[112.22007751 -22.10622215]
[126.87936401 -28.62425041]
[141.04827881 -21.09951782]
[143.85762024 -5.30435801]
[133.15232849 6.64453697]
[132.62882996 21.63539886]
[132.10534668 36.62626266]
[131.58184814 51.61712265]
[131.05834961 66.60798645]
[130.53486633 81.59884644]
[133.39700317 96.32325745]
[139.49804688 110.02643585]
[145.59909058 123.72962189]
[160.08001709 129.46902466]
[166.07214355 143.45291138]
[160.51126099 157.22288513]
[166.61230469 170.92607117]
[172.83270264 184.57548523]
[179.17198181 198.17010498]
[185.65315247 204.64752197]
[185.50094604 212.05773926]
[191.60198975 225.76092529]
[197.70304871 239.46411133]
[202.85362244 243.68121338]
[204.78921509 249.06199646]
[203.76858521 253.75363159]
[209.38768005 267.66137695]
[215.00679016 281.56915283]
[220.62588501 295.47689819]
[226.24497986 309.38467407]
[231.24523926 313.77896118]
[232.99188232 319.22399902]
[231.80813599 323.87716675]
[236.93843079 337.97256470]
[242.06874084 352.06793213]
[247.19903564 366.16333008]
[252.32934570 380.25872803]
[257.45965576 394.35412598]
[262.58993530 408.44949341]
[267.72024536 422.54489136]
[272.85055542 436.64028931]
[284.59619141 437.27087402]
[295.42660522 443.28433228]
[302.89547729 453.94128418]
[305.05697632 467.40863037]
[319.78140259 470.27075195]
[334.50579834 473.13290405]
[345.76199341 462.45217896]
[361.15078735 460.46093750]
[374.75485229 467.92477417]
[381.34313965 481.97378540]
[378.38232422 497.20574951]
[367.01092529 507.76373291]
[351.60147095 509.58792114]
[338.07916260 501.97692871]
[331.64367676 487.85729980]
[316.91925049 484.99517822]
[302.19485474 482.13302612]
[291.04766846 492.16998291]
[292.35501099 507.11291504]
[293.66235352 522.05584717]
[297.53726196 530.35931396]
[294.85977173 537.27056885]
[295.90612793 552.23406982]
[296.95248413 567.19750977]
[305.63357544 580.42431641]
[298.80294800 593.66033936]
[299.84927368 608.62377930]
[300.89562988 623.58721924]
[309.57672119 636.81408691]
[302.74609375 650.05004883]
[303.79244995 665.01354980]
[304.83877563 679.97698975]
[306.01565552 694.93072510]
[307.32299805 709.87365723]
[308.63034058 724.81658936]
[310.32839966 739.72015381]
[312.41598511 754.57421875]
[314.50357056 769.42822266]
[329.28842163 772.85943604]
[341.83316040 781.40307617]
[350.44122314 793.90368652]
[353.94848633 808.67065430]
[351.88058472 823.70690918]
[344.51718140 836.97888184]
[332.85412598 846.69158936]
[318.46875000 851.53161621]
[303.30654907 850.84423828]
[289.41812134 844.72253418]
[278.68173218 833.99432373]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 168]
[5 167]
[6 166]
[10 165]
[11 164]
[12 163]
[14 162]
[15 161]
[16 160]
[18 158]
[19 157]
[20 156]
[22 154]
[23 153]
[24 152]
[25 150]
[26 149]
[27 148]
[30 130]
[31 129]
[32 128]
[33 127]
[34 126]
[35 125]
[36 124]
[37 123]
[38 122]
[39 119]
[40 118]
[41 117]
[42 116]
[43 115]
[44 112]
[45 111]
[46 110]
[47 108]
[48 107]
[50 106]
[51 105]
[54 102]
[55 101]
[56 100]
[59 70]
[60 69]
[61 68]
[73 82]
[74 81]
[75 80]
[83 99]
[84 98]
[85 97]
[86 96]
[87 95]
[88 94]
[134 147]
[135 146]
[136 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
