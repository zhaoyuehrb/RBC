%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:47:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCACUUCCGGUCGACGGCGGAAGGCGGAAGGCGGAGCGGUCCCUGCAACCCGGCCGGCGGGAACUGCCUUCUAGUUUUUAGUCUCAGACCAGACCACCGGGCGCACCCCG\
) } def
/len { sequence length } bind def

/coor [
[224.66377258 559.42077637]
[215.35238647 551.72277832]
[209.21849060 541.27368164]
[207.02282715 529.32232666]
[209.05386353 517.30645752]
[215.09011841 506.67987061]
[224.42402649 498.73672485]
[219.86888123 484.44509888]
[208.63198853 474.66851807]
[211.81311035 459.17041016]
[207.25794983 444.87878418]
[202.70280457 430.58715820]
[198.14765930 416.29553223]
[193.39251709 402.06918335]
[188.43832397 387.91094971]
[183.18348694 382.56024170]
[183.54981995 373.28555298]
[178.99465942 358.99392700]
[174.43951416 344.70230103]
[163.20263672 334.92572021]
[166.38374329 319.42761230]
[161.82859802 305.13598633]
[157.27345276 290.84436035]
[152.71829224 276.55273438]
[148.16314697 262.26110840]
[143.60798645 247.96948242]
[138.85285950 233.74314880]
[133.89866638 219.58489990]
[128.94448853 205.42665100]
[123.99029541 191.26840210]
[119.03610992 177.11015320]
[114.08192444 162.95190430]
[109.12773895 148.79365540]
[104.17355347 134.63540649]
[99.21936798 120.47714996]
[77.82228088 116.99865723]
[65.49654388 92.11138916]
[54.88994598 81.50478363]
[44.28334427 70.89818573]
[33.67674255 60.29158401]
[18.20137596 53.36703491]
[20.57130432 36.57954407]
[37.35879517 34.20961761]
[44.28334427 49.68498230]
[54.88994598 60.29158401]
[65.49654388 70.89818573]
[76.10314941 81.50478363]
[83.03224182 78.63465881]
[96.89044189 72.89440918]
[103.81953430 70.02428436]
[103.81953430 55.02428436]
[103.81953430 40.02428436]
[103.81953430 25.02428436]
[93.53776550 12.70905876]
[96.89664459 -2.97843552]
[111.31953430 -10.00409508]
[125.74242401 -2.97843552]
[129.10130310 12.70905876]
[118.81953430 25.02428436]
[118.81953430 40.02428436]
[118.81953430 55.02428436]
[118.81953430 70.02428436]
[128.17695618 88.51816559]
[124.75193787 105.95954132]
[113.37761688 115.52296448]
[118.33180237 129.68121338]
[123.28598785 143.83946228]
[128.24017334 157.99771118]
[133.19436646 172.15596008]
[138.14854431 186.31420898]
[143.10273743 200.47247314]
[148.05691528 214.63072205]
[153.01110840 228.78897095]
[158.88084412 235.97926331]
[157.89961243 243.41433716]
[162.45477295 257.70596313]
[167.00991821 271.99758911]
[171.56507874 286.28921509]
[176.12022400 300.58084106]
[180.67536926 314.87246704]
[192.23806763 325.67129517]
[188.73114014 340.14715576]
[193.28630066 354.43878174]
[197.84144592 368.73040771]
[202.59658813 382.95675659]
[207.55076599 397.11499023]
[213.42050171 404.30529785]
[212.43928528 411.74038696]
[216.99443054 426.03201294]
[221.54957581 440.32363892]
[226.10473633 454.61526489]
[237.66743469 465.41409302]
[234.16050720 479.88995361]
[238.71565247 494.18157959]
[256.72677612 497.39013672]
[270.64068604 509.13955688]
[276.76419067 526.20153809]
[273.52697754 543.95281982]
[261.88327026 557.62774658]
[267.62353516 571.48590088]
[273.36376953 585.34411621]
[279.10403442 599.20227051]
[293.31597900 606.64544678]
[296.21612549 622.42413330]
[285.57971191 634.43444824]
[269.56610107 633.46295166]
[260.45956421 620.25500488]
[265.24581909 604.94256592]
[259.50558472 591.08435059]
[253.76533508 577.22613525]
[248.02508545 563.36798096]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 94]
[8 93]
[10 91]
[11 90]
[12 89]
[13 88]
[14 86]
[15 85]
[17 84]
[18 83]
[19 82]
[21 80]
[22 79]
[23 78]
[24 77]
[25 76]
[26 75]
[27 73]
[28 72]
[29 71]
[30 70]
[31 69]
[32 68]
[33 67]
[34 66]
[35 65]
[37 47]
[38 46]
[39 45]
[40 44]
[50 62]
[51 61]
[52 60]
[53 59]
[99 111]
[100 110]
[101 109]
[102 108]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
