%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:31:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCACAGAGGCGUCUGGCUAACUCAUCUCCAGACCUAAGUUGGGAAAGGGGAGGGGAGCGCGGAAAGCGGAGAAGCCGGAGGAGACGCUCCGGAGUGACCAGCGACGGCUGAACGCAGCCCGCCCUCCCCAAGUCGACGCCGCAACCCGGGGAAAGCAGGAGGACCAUGCGGCAGUAGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[218.91073608 329.44271851]
[228.89677429 312.04476929]
[221.32296753 299.09729004]
[203.77883911 301.18264771]
[187.03457642 295.38223267]
[174.46516418 282.81637573]
[168.62541199 265.97390747]
[170.73069763 248.21929932]
[180.40437317 233.12060547]
[172.17758179 220.57788086]
[163.95080566 208.03514099]
[155.72402954 195.49241638]
[147.49725342 182.94967651]
[139.27047729 170.40695190]
[132.95782471 166.52897644]
[131.01245117 157.57910156]
[123.00100708 144.89773560]
[114.98957062 132.21638489]
[106.97813416 119.53501892]
[110.68933105 134.06866455]
[103.69669342 147.33905029]
[89.61053467 152.49462891]
[75.70355988 146.87358093]
[69.15599060 133.37805176]
[73.34833527 118.97582245]
[86.11809540 111.10241699]
[71.54459381 114.65387726]
[56.97108459 118.20534515]
[42.39757919 121.75681305]
[27.82407379 125.30828094]
[21.85615540 139.51004028]
[8.82246494 147.38255310]
[-6.17031002 146.08613586]
[-17.39050865 136.32676697]
[-31.96401596 139.87823486]
[-46.53752136 143.42970276]
[-61.11102676 146.98117065]
[-75.06825256 156.60574341]
[-88.18042755 145.85832214]
[-81.48283386 130.28338623]
[-64.66249847 132.40766907]
[-50.08898926 128.85620117]
[-35.51548386 125.30473328]
[-20.94197655 121.75326538]
[-15.46966743 107.92604828]
[-2.75423932 99.87733459]
[12.44004536 100.87086487]
[24.27260780 110.73477173]
[38.84611511 107.18330383]
[53.41962051 103.63184357]
[67.99312592 100.08037567]
[82.56663513 96.52890778]
[91.73188019 84.65464020]
[91.47578430 69.65682983]
[91.21968842 54.65901184]
[90.96359253 39.66120148]
[90.70749664 24.66338539]
[90.45140076 9.66557217]
[82.47962189 -4.00048923]
[89.99849701 -16.85800552]
[89.74240112 -31.85581970]
[89.48630524 -46.85363388]
[89.23020935 -61.85144806]
[76.69063568 -70.79936981]
[71.88053131 -85.24638367]
[76.44568634 -99.58595276]
[88.43566895 -108.38245392]
[88.17957306 -123.38026428]
[87.92347717 -138.37808228]
[77.52443695 -140.94880676]
[68.11927795 -147.02120972]
[60.89427185 -156.19662476]
[56.87255859 -167.67478943]
[56.77914810 -180.32083130]
[60.93320465 -192.77713013]
[69.18228912 -203.60893250]
[65.38252258 -218.11967468]
[61.58276367 -232.63041687]
[57.78300095 -247.14117432]
[53.98323822 -261.65191650]
[50.18347549 -276.16265869]
[36.41691971 -283.92523193]
[32.25199890 -299.17086792]
[40.15968323 -312.85458374]
[55.44848633 -316.85806274]
[69.04782867 -308.80615234]
[72.88946533 -293.47589111]
[64.69422150 -279.96243286]
[68.49398804 -265.45169067]
[72.29374695 -250.94093323]
[76.09351349 -236.43019104]
[79.89327240 -221.91943359]
[83.69303894 -207.40869141]
[91.15371704 -206.64170837]
[92.68767548 -221.56306458]
[94.22187042 -236.48440552]
[109.14318085 -234.94998169]
[107.60903931 -220.02909851]
[106.07507324 -205.10774231]
[113.53575134 -204.34075928]
[120.20834351 -217.77491760]
[126.88092804 -231.20907593]
[133.55351257 -244.64323425]
[131.98806763 -260.96749878]
[145.49778748 -270.26370239]
[160.18502808 -262.96871948]
[160.94082642 -246.58700562]
[146.98767090 -237.97065735]
[140.31507874 -224.53649902]
[133.64250183 -211.10234070]
[126.96990967 -197.66818237]
[133.93437195 -171.19264221]
[123.43206024 -148.44555664]
[102.92129517 -138.63417053]
[103.17739105 -123.63636017]
[103.43348694 -108.63854980]
[115.71679688 -100.25653076]
[120.76885986 -86.08117676]
[116.45479584 -71.47836304]
[104.22802734 -62.10754395]
[104.48412323 -47.10972977]
[104.74021912 -32.11191559]
[104.99631500 -17.11410141]
[112.94977570 -4.52078342]
[105.44921875 9.40947628]
[105.70531464 24.40728951]
[105.96141052 39.40510559]
[106.21750641 54.40291595]
[106.47360229 69.40073395]
[106.72969818 84.39854431]
[118.90038300 93.80597687]
[119.65949249 111.52358246]
[127.67092896 124.20494080]
[135.68237305 136.88630676]
[143.69380188 149.56765747]
[151.81320190 162.18017578]
[160.03999329 174.72290039]
[168.26676941 187.26562500]
[176.49354553 199.80836487]
[184.72032166 212.35108948]
[192.94709778 224.89382935]
[205.08702087 222.05368042]
[217.48768616 223.08222961]
[228.94862366 227.86477661]
[238.36497498 235.92396545]
[244.83401489 246.46737671]
[247.74169922 258.46539307]
[246.82084656 270.75180054]
[242.17573547 282.13702393]
[234.27044678 291.52346802]
[241.84425354 304.47097778]
[254.29412842 302.72143555]
[266.84487915 306.74716187]
[276.84030151 316.24636841]
[281.93493652 329.71310425]
[280.62847900 344.66351318]
[290.48651123 355.96920776]
[300.34457397 367.27490234]
[310.29879761 378.49600220]
[320.34841919 389.63174438]
[336.10882568 394.16406250]
[339.80078125 410.14224243]
[327.62634277 421.12927246]
[312.10952759 415.82266235]
[309.21267700 399.68139648]
[299.16305542 388.54565430]
[292.33120728 385.67959595]
[289.03887939 377.13293457]
[279.18081665 365.82723999]
[269.32275391 354.52154541]
[256.00448608 361.42251587]
[259.55596924 375.99603271]
[263.10742188 390.56954956]
[277.20501709 397.33651733]
[283.60754395 411.60330200]
[279.29193115 426.63360596]
[266.29589844 435.33053589]
[250.75573730 433.58767700]
[240.00906372 422.22796631]
[239.13011169 406.61511230]
[248.53392029 394.12100220]
[244.98245239 379.54751587]
[241.43098450 364.97399902]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 151]
[3 150]
[9 141]
[10 140]
[11 139]
[12 138]
[13 137]
[14 136]
[16 135]
[17 134]
[18 133]
[19 132]
[26 52]
[27 51]
[28 50]
[29 49]
[30 48]
[34 44]
[35 43]
[36 42]
[37 41]
[53 130]
[54 129]
[55 128]
[56 127]
[57 126]
[58 125]
[60 123]
[61 122]
[62 121]
[63 120]
[67 116]
[68 115]
[69 114]
[76 93]
[77 92]
[78 91]
[79 90]
[80 89]
[81 88]
[100 111]
[101 110]
[102 109]
[103 108]
[156 170]
[157 169]
[158 168]
[159 166]
[160 165]
[171 183]
[172 182]
[173 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
