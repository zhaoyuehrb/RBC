%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:19:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGACCCACGUGGGAGCCUGGGAGCGGGUGGUCGUAGCUCGGUAGUCCAGUUGUGGGUAAUCGGGGCUGUUUGUUCCUGUCCGAGAGAGCUCGGCGGAGACGGCUGUCGAGUACCCUUCACCUCGGUGUUGGGAGCCUGGGAGCGAACUGCGGCGCGGGUUACCGCUCCCGGGGACGCAGCAAGGGGCAUCGAGUCCCUGGCGGGAGCUGCGCC\
) } def
/len { sequence length } bind def

/coor [
[-69.39065552 251.59761047]
[-80.01953888 263.76492310]
[-94.83739471 270.05548096]
[-110.85709381 269.25625610]
[-124.87318420 261.57803345]
[-136.90502930 270.53540039]
[-148.93687439 279.49279785]
[-160.96873474 288.45016479]
[-173.00057983 297.40756226]
[-185.03242493 306.36492920]
[-197.06427002 315.32229614]
[-208.96456909 324.45373535]
[-220.73080444 333.75726318]
[-232.49703979 343.06079102]
[-244.26327515 352.36431885]
[-250.66503906 369.63171387]
[-268.11679077 371.49169922]
[-279.74645996 380.96539307]
[-291.37615967 390.43905640]
[-297.18887329 405.15377808]
[-311.94320679 407.19320679]
[-323.57287598 416.66690063]
[-325.32376099 432.14501953]
[-337.25286865 441.58700562]
[-351.99810791 439.82241821]
[-363.62777710 449.29608154]
[-375.25747681 458.76974487]
[-386.88714600 468.24343872]
[-392.21063232 483.75448608]
[-408.35504150 486.63375854]
[-418.71237183 473.91928101]
[-412.62792969 458.69064331]
[-396.36080933 456.61373901]
[-384.73114014 447.14007568]
[-373.10147095 437.66641235]
[-361.47177124 428.19271851]
[-360.21817017 413.39529419]
[-348.55895996 403.62197876]
[-333.04656982 405.03720093]
[-321.41687012 395.56353760]
[-316.43597412 381.52642822]
[-300.84982300 378.80938721]
[-289.22015381 369.33569336]
[-277.59045410 359.86203003]
[-276.05047607 347.86627197]
[-266.44241333 339.87823486]
[-253.56680298 340.59808350]
[-241.80056763 331.29455566]
[-230.03434753 321.99102783]
[-218.26811218 312.68750000]
[-216.83387756 308.13565063]
[-212.52714539 304.43490601]
[-206.02165222 303.29046631]
[-193.98980713 294.33306885]
[-181.95796204 285.37570190]
[-169.92610168 276.41833496]
[-157.89425659 267.46093750]
[-145.86241150 258.50357056]
[-133.83056641 249.54618835]
[-137.13299561 236.07369995]
[-135.04518127 222.31658936]
[-127.84962463 210.35629272]
[-116.60414886 202.01516724]
[-102.98648834 198.57870483]
[-89.04402924 200.59764099]
[-76.88597870 207.79988098]
[-64.72512817 199.01844788]
[-52.56427765 190.23699951]
[-48.98309708 183.77519226]
[-40.16209412 181.41780090]
[-27.87481117 172.81414795]
[-25.46729088 160.96200562]
[-15.30423832 153.69317627]
[-2.51497149 155.34664917]
[9.89614010 146.92260742]
[22.30725098 138.49858093]
[34.71836472 130.07455444]
[47.12947464 121.65052032]
[59.54058838 113.22648621]
[71.95169830 104.80245209]
[84.36280823 96.37842560]
[90.70208740 82.78380585]
[89.17755890 67.86148071]
[87.65303040 52.93915558]
[86.12850189 38.01682663]
[84.60398102 23.09450150]
[73.48047638 8.41754246]
[81.28859711 -7.30048180]
[79.54720306 -22.19905663]
[77.26535034 -37.02447891]
[74.44606018 -51.75715256]
[71.62677002 -66.48982239]
[68.80747986 -81.22249603]
[65.98818970 -95.95516205]
[63.16889572 -110.68783569]
[60.34960556 -125.42050934]
[57.53031540 -140.15318298]
[54.71102142 -154.88584900]
[41.49532318 -163.55308533]
[38.36091614 -179.04342651]
[47.16738510 -192.16674805]
[62.69001389 -195.13722229]
[75.71949768 -186.19248962]
[78.52567291 -170.63932800]
[69.44369507 -157.70513916]
[72.26298523 -142.97247314]
[75.08227539 -128.23979187]
[77.90156555 -113.50712585]
[80.72085571 -98.77445221]
[83.54015350 -84.04178619]
[86.35944366 -69.30911255]
[89.17873383 -54.57644272]
[91.99802399 -39.84377289]
[102.43762970 -50.61478043]
[117.38140869 -49.31731033]
[125.80844116 -36.90823364]
[121.50385284 -22.53915215]
[107.64225006 -16.80714989]
[94.44577789 -23.94045067]
[96.18717194 -9.04187584]
[105.47683716 -1.29774082]
[107.05148315 11.09758091]
[99.52630615 21.56997490]
[101.05083466 36.49230194]
[102.57535553 51.41462708]
[104.09988403 66.33695221]
[105.62441254 81.25927734]
[117.65625763 90.21665955]
[132.38893127 87.39736938]
[147.12159729 84.57807922]
[161.85427856 81.75878143]
[176.58694458 78.93949127]
[188.68692017 68.74630737]
[202.64161682 73.95359039]
[211.52867126 61.16069412]
[226.50985718 58.51140594]
[238.65115356 67.06269073]
[253.38381958 64.24339294]
[268.11648560 61.42410278]
[282.84915161 58.60481262]
[297.58184814 55.78552246]
[312.31451416 52.96623230]
[327.04718018 50.14693832]
[341.77984619 47.32764816]
[356.51251221 44.50835800]
[371.24517822 41.68906403]
[381.63711548 24.48944283]
[401.02966309 20.54442978]
[416.82015991 31.95923996]
[431.41583252 28.50000191]
[446.01150513 25.04076385]
[460.60717773 21.58152580]
[474.62496948 12.04541016]
[487.66891479 22.87553406]
[480.87298584 38.40780258]
[464.06640625 36.17720032]
[449.47073364 39.63643646]
[434.87506104 43.09567642]
[420.27938843 46.55491257]
[417.44537354 56.41425705]
[410.72348022 64.27030182]
[401.27465820 68.66319275]
[390.77416992 68.74021912]
[381.11450195 64.42053223]
[374.06448364 56.42173767]
[359.33181763 59.24102783]
[344.59915161 62.06031799]
[329.86645508 64.87960815]
[315.13378906 67.69889832]
[300.40112305 70.51819611]
[285.66845703 73.33748627]
[270.93579102 76.15677643]
[256.20312500 78.97606659]
[241.47044373 81.79535675]
[233.34414673 94.22511292]
[218.44328308 97.29415131]
[205.46090698 88.68625641]
[194.41470337 98.67778778]
[179.40623474 93.67216492]
[164.67356873 96.49145508]
[149.94088745 99.31074524]
[135.20822144 102.13003540]
[120.47554779 104.94933319]
[115.44788361 119.08165741]
[125.08969879 130.57232666]
[134.73152161 142.06298828]
[144.37332153 153.55364990]
[154.01513672 165.04432678]
[163.65695190 176.53498840]
[179.44932556 179.36000061]
[186.95999146 193.53637695]
[180.42742920 208.18919373]
[164.86285400 212.07807922]
[152.20606995 202.21980286]
[152.16629028 186.17680359]
[142.52447510 174.68614197]
[132.88265991 163.19546509]
[123.24084473 151.70480347]
[113.59903717 140.21414185]
[103.95722198 128.72346497]
[94.51656342 119.42340088]
[92.78684235 108.78953552]
[80.37573242 117.21356964]
[67.96461487 125.63759613]
[55.55350494 134.06163025]
[43.14239502 142.48565674]
[30.73128319 150.90969849]
[18.32017136 159.33372498]
[5.90906000 167.75775146]
[-1.73040032 184.51437378]
[-19.27116585 185.10142517]
[-31.55844498 193.70507812]
[-43.78283310 202.39785767]
[-55.94368362 211.17929077]
[-68.10453796 219.96073914]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 59]
[6 58]
[7 57]
[8 56]
[9 55]
[10 54]
[11 53]
[12 50]
[13 49]
[14 48]
[15 47]
[17 44]
[18 43]
[19 42]
[21 40]
[22 39]
[25 36]
[26 35]
[27 34]
[28 33]
[66 215]
[67 214]
[68 213]
[70 212]
[71 211]
[74 209]
[75 208]
[76 207]
[77 206]
[78 205]
[79 204]
[80 203]
[81 202]
[82 127]
[83 126]
[84 125]
[85 124]
[86 123]
[88 120]
[89 119]
[90 113]
[91 112]
[92 111]
[93 110]
[94 109]
[95 108]
[96 107]
[97 106]
[98 105]
[128 183]
[129 182]
[130 181]
[131 180]
[132 179]
[134 177]
[137 174]
[138 173]
[139 172]
[140 171]
[141 170]
[142 169]
[143 168]
[144 167]
[145 166]
[146 165]
[149 159]
[150 158]
[151 157]
[152 156]
[184 200]
[185 199]
[186 198]
[187 197]
[188 196]
[189 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
