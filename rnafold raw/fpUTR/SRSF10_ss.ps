%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:45:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACGCCUGGUGUUCUCGCGGGAAAGAACCGUUGCGCCCGACUUUGCGCGGAGGUAGGAGGGGGAAGUGGAGGCGGGAGUGAAGUCUCGCGAGAAGAGUCGGUUGCCGUAGCAGAGCCCUCUAGCUGUGUGUGUCUGAGGCUCGGCCGCCUGAGCCGCGGACGGUUUGCUGAGCCCGUUAGUGCGCCCGGCCGAGACACGCCGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[69.62541199 105.91089630]
[54.64616394 105.12210083]
[42.95553970 115.41613770]
[27.77569008 114.40280151]
[18.03395081 103.19414520]
[3.05470443 102.40534973]
[-11.92454147 101.61655426]
[-26.11249542 108.61745453]
[-38.41528320 100.22158051]
[-52.60323334 107.22248077]
[-64.90602112 98.82660675]
[-79.09397888 105.82749939]
[-91.39676666 97.43163300]
[-106.37600708 96.64283752]
[-121.35525513 95.85404205]
[-136.33450317 95.06525421]
[-151.31375122 94.27645874]
[-166.29299927 93.48767090]
[-181.27223206 92.69887543]
[-196.25148010 91.91008759]
[-211.23072815 91.12129211]
[-226.20997620 90.33250427]
[-241.18922424 89.54370880]
[-249.60877991 102.31313324]
[-263.19976807 109.10888672]
[-278.26733398 108.19544220]
[-290.77099609 99.91807556]
[-297.40792847 86.58329010]
[-312.38717651 85.79449463]
[-318.44451904 88.45034027]
[-324.08648682 87.75210571]
[-327.80276489 84.75016022]
[-342.75155640 83.51147461]
[-357.14352417 90.08273315]
[-369.18838501 81.32085419]
[-384.13714600 80.08216095]
[-399.08590698 78.84347534]
[-414.03469849 77.60478210]
[-428.99234009 76.47847748]
[-443.28393555 83.26532745]
[-455.45913696 74.68547821]
[-470.42483521 73.67162323]
[-485.39050293 72.65776825]
[-500.35620117 71.64391327]
[-515.32189941 70.63005829]
[-529.61346436 77.41690063]
[-541.78869629 68.83705139]
[-556.08026123 75.62390137]
[-568.25549316 67.04405212]
[-576.74963379 79.84032440]
[-590.51110840 86.66074371]
[-605.83807373 85.67066956]
[-618.60760498 77.13642120]
[-625.38488770 63.35366440]
[-624.34674072 48.02989578]
[-615.77252197 35.28712845]
[-601.96862793 28.55310822]
[-586.64813232 29.63924980]
[-573.93231201 38.25338745]
[-567.24163818 52.07835770]
[-554.02050781 45.21899414]
[-540.77484131 53.87135696]
[-527.55371094 47.01199341]
[-514.30804443 55.66435623]
[-499.34234619 56.67821503]
[-484.37664795 57.69207001]
[-469.41094971 58.70592499]
[-454.44528198 59.71977997]
[-441.22412109 52.86041641]
[-427.97848511 61.51277924]
[-421.09143066 58.82810974]
[-412.79598999 62.65601349]
[-397.84722900 63.89470673]
[-382.89846802 65.13339233]
[-367.94970703 66.37208557]
[-354.62695312 59.71222305]
[-341.51284790 68.56270599]
[-326.56408691 69.80139160]
[-311.59838867 70.81524658]
[-296.61914062 71.60404205]
[-288.61837769 59.04006577]
[-275.31454468 52.12169647]
[-260.23437500 52.79579926]
[-247.43229675 60.98138046]
[-240.40043640 74.56446075]
[-225.42118835 75.35325623]
[-210.44194031 76.14204407]
[-195.46269226 76.93083954]
[-180.48344421 77.71963501]
[-165.50419617 78.50842285]
[-150.52494812 79.29721832]
[-135.54571533 80.08600616]
[-120.56645966 80.87480164]
[-105.58721924 81.66358948]
[-90.60797119 82.45238495]
[-77.49143219 75.39506531]
[-64.11723328 83.84735870]
[-51.00069427 76.79004669]
[-37.62649155 85.24233246]
[-24.50995255 78.18502045]
[-11.13574982 86.63731384]
[3.84349632 87.42610168]
[18.82274246 88.21489716]
[29.68781471 78.09136963]
[44.89013672 78.67793274]
[55.43495560 90.14286041]
[70.41419983 90.93164825]
[73.35398865 76.95815277]
[83.09141541 64.29146576]
[98.83232117 56.22352982]
[118.22860718 55.51534653]
[125.16871643 42.21741867]
[132.10884094 28.91949463]
[131.63447571 13.10540104]
[144.38240051 5.40216351]
[151.32250977 -7.89576197]
[158.26263428 -21.19368744]
[153.28741455 -36.19444275]
[160.45111084 -50.28192139]
[175.50363159 -55.09826660]
[189.51457214 -47.78602982]
[194.17150879 -32.68342972]
[186.71154785 -18.75057030]
[171.56054688 -14.25357246]
[164.62043762 -0.95564765]
[157.68032837 12.34227753]
[158.65107727 27.20521545]
[145.40675354 35.85960770]
[138.46664429 49.15753555]
[131.52653503 62.45545959]
[136.26539612 68.26865387]
[147.89176941 58.79093170]
[159.51815796 49.31320953]
[171.14468384 39.83566666]
[180.62205505 51.46234512]
[168.99588013 60.93959427]
[157.36949158 70.41731262]
[145.74311829 79.89503479]
[150.48197937 85.70822906]
[164.90571594 81.59053040]
[179.32946777 77.47282410]
[193.75321960 73.35512543]
[208.17697144 69.23742676]
[222.60072327 65.11972809]
[237.02447510 61.00202560]
[248.03506470 48.84888458]
[264.00604248 52.57178879]
[268.50781250 68.34093475]
[256.90936279 79.93437958]
[241.14216614 75.42577362]
[226.71841431 79.54347992]
[212.29467773 83.66117859]
[197.87092590 87.77887726]
[183.44717407 91.89657593]
[169.02342224 96.01427460]
[154.59967041 100.13197327]
[151.02677917 114.70024109]
[161.90869141 125.02420044]
[172.79060364 135.34815979]
[183.67250061 145.67211914]
[192.05340576 149.30906677]
[194.63891602 156.23396301]
[205.36441040 166.72032166]
[216.08992004 177.20668030]
[226.81541443 187.69303894]
[242.09207153 191.80816650]
[245.78343201 206.23811340]
[256.50891113 216.72447205]
[267.31292725 227.12991333]
[278.19485474 237.45387268]
[293.76980591 237.21282959]
[304.65853882 247.83781433]
[304.79235840 262.68765259]
[315.67425537 273.01159668]
[326.55618286 283.33554077]
[337.66809082 293.41156006]
[349.00433350 303.23446655]
[360.34057617 313.05737305]
[376.53698730 315.62792969]
[382.15560913 331.03454590]
[371.41644287 343.42819214]
[355.36703491 340.05935669]
[350.51766968 324.39361572]
[339.18142700 314.57070923]
[327.84515381 304.74780273]
[324.31958008 304.63391113]
[320.67416382 302.80578613]
[317.71441650 299.22570801]
[316.23223877 294.21746826]
[305.35031128 283.89352417]
[294.46841431 273.56954956]
[279.63208008 274.21682739]
[268.44921875 263.90188599]
[267.87088013 248.33578491]
[256.98898315 238.01182556]
[249.97183228 235.68830872]
[246.02256775 227.44996643]
[235.29707336 216.96360779]
[220.78756714 213.59852600]
[216.32905579 198.41853333]
[205.60356140 187.93217468]
[194.87806702 177.44583130]
[184.15255737 166.95947266]
[173.34855652 156.55401611]
[162.46664429 146.23007202]
[151.58473206 135.90611267]
[140.70281982 125.58215332]
[108.97978210 141.40188599]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 107]
[2 106]
[5 103]
[6 102]
[7 101]
[9 99]
[11 97]
[13 95]
[14 94]
[15 93]
[16 92]
[17 91]
[18 90]
[19 89]
[20 88]
[21 87]
[22 86]
[23 85]
[28 80]
[29 79]
[32 78]
[33 77]
[35 75]
[36 74]
[37 73]
[38 72]
[39 70]
[41 68]
[42 67]
[43 66]
[44 65]
[45 64]
[47 62]
[49 60]
[111 130]
[112 129]
[113 128]
[115 126]
[116 125]
[117 124]
[139 156]
[140 155]
[141 154]
[142 153]
[143 152]
[144 151]
[145 150]
[157 207]
[158 206]
[159 205]
[160 204]
[162 203]
[163 202]
[164 201]
[165 200]
[167 198]
[168 197]
[169 195]
[170 194]
[173 191]
[174 190]
[175 189]
[176 185]
[177 184]
[178 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
